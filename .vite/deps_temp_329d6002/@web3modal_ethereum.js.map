{
  "version": 3,
  "sources": ["../../node_modules/@walletconnect/utils/node_modules/query-string/index.js", "../../node_modules/@wagmi/connectors/dist/walletConnect.js", "../../node_modules/@wagmi/core/dist/providers/jsonRpc.js", "../../node_modules/@web3modal/ethereum/src/client.ts", "../../node_modules/@web3modal/ethereum/src/utils.ts"],
  "sourcesContent": ["'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n", "import {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk-W65LBPLT.js\";\n\n// src/walletConnect.ts\nimport { normalizeNamespaces } from \"@walletconnect/utils\";\nimport {\n  SwitchChainError,\n  UserRejectedRequestError,\n  createWalletClient,\n  custom,\n  getAddress,\n  numberToHex\n} from \"viem\";\nvar NAMESPACE = \"eip155\";\nvar STORE_KEY = \"store\";\nvar REQUESTED_CHAINS_KEY = \"requestedChains\";\nvar ADD_ETH_CHAIN_METHOD = \"wallet_addEthereumChain\";\nvar _provider, _initProviderPromise, _createProvider, createProvider_fn, _initProvider, initProvider_fn, _isChainsStale, isChainsStale_fn, _setupListeners, setupListeners_fn, _removeListeners, removeListeners_fn, _setRequestedChainsIds, setRequestedChainsIds_fn, _getRequestedChainsIds, getRequestedChainsIds_fn, _getNamespaceChainsIds, getNamespaceChainsIds_fn, _getNamespaceMethods, getNamespaceMethods_fn;\nvar WalletConnectConnector = class extends Connector {\n  constructor(config) {\n    super({\n      ...config,\n      options: { isNewChainsStale: true, ...config.options }\n    });\n    __privateAdd(this, _createProvider);\n    __privateAdd(this, _initProvider);\n    __privateAdd(this, _isChainsStale);\n    __privateAdd(this, _setupListeners);\n    __privateAdd(this, _removeListeners);\n    __privateAdd(this, _setRequestedChainsIds);\n    __privateAdd(this, _getRequestedChainsIds);\n    __privateAdd(this, _getNamespaceChainsIds);\n    __privateAdd(this, _getNamespaceMethods);\n    this.id = \"walletConnect\";\n    this.name = \"WalletConnect\";\n    this.ready = true;\n    __privateAdd(this, _provider, void 0);\n    __privateAdd(this, _initProviderPromise, void 0);\n    this.onAccountsChanged = (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: getAddress(accounts[0]) });\n    };\n    this.onChainChanged = (chainId) => {\n      const id = Number(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    };\n    this.onDisconnect = () => {\n      __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, []);\n      this.emit(\"disconnect\");\n    };\n    this.onDisplayUri = (uri) => {\n      this.emit(\"message\", { type: \"display_uri\", data: uri });\n    };\n    this.onConnect = () => {\n      this.emit(\"connect\", {});\n    };\n    __privateMethod(this, _createProvider, createProvider_fn).call(this);\n  }\n  async connect({ chainId, pairingTopic } = {}) {\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const store = this.storage?.getItem(STORE_KEY);\n        const lastUsedChainId = store?.state?.data?.chain?.id;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId))\n          targetChainId = lastUsedChainId;\n        else\n          targetChainId = this.chains[0]?.id;\n      }\n      if (!targetChainId)\n        throw new Error(\"No chains found on connector.\");\n      const provider = await this.getProvider();\n      __privateMethod(this, _setupListeners, setupListeners_fn).call(this);\n      const isChainsStale = __privateMethod(this, _isChainsStale, isChainsStale_fn).call(this);\n      if (provider.session && isChainsStale)\n        await provider.disconnect();\n      if (!provider.session || isChainsStale) {\n        const optionalChains = this.chains.filter((chain) => chain.id !== targetChainId).map((optionalChain) => optionalChain.id);\n        this.emit(\"message\", { type: \"connecting\" });\n        await provider.connect({\n          pairingTopic,\n          optionalChains: [targetChainId, ...optionalChains]\n        });\n        __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, this.chains.map(({ id: id2 }) => id2));\n      }\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      return {\n        account,\n        chain: { id, unsupported }\n      };\n    } catch (error) {\n      if (/user rejected/i.test(error?.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    try {\n      await provider.disconnect();\n    } catch (error) {\n      if (!/No matching key/i.test(error.message))\n        throw error;\n    } finally {\n      __privateMethod(this, _removeListeners, removeListeners_fn).call(this);\n      __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, []);\n    }\n  }\n  async getAccount() {\n    const { accounts } = await this.getProvider();\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const { chainId } = await this.getProvider();\n    return chainId;\n  }\n  async getProvider({ chainId } = {}) {\n    if (!__privateGet(this, _provider))\n      await __privateMethod(this, _createProvider, createProvider_fn).call(this);\n    if (chainId)\n      await this.switchChain(chainId);\n    return __privateGet(this, _provider);\n  }\n  async getWalletClient({\n    chainId\n  } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider({ chainId }),\n      this.getAccount()\n    ]);\n    const chain = this.chains.find((x) => x.id === chainId);\n    if (!provider)\n      throw new Error(\"provider is required.\");\n    return createWalletClient({\n      account,\n      chain,\n      transport: custom(provider)\n    });\n  }\n  async isAuthorized() {\n    try {\n      const [account, provider] = await Promise.all([\n        this.getAccount(),\n        this.getProvider()\n      ]);\n      const isChainsStale = __privateMethod(this, _isChainsStale, isChainsStale_fn).call(this);\n      if (!account)\n        return false;\n      if (isChainsStale && provider.session) {\n        try {\n          await provider.disconnect();\n        } catch {\n        }\n        return false;\n      }\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const chain = this.chains.find((chain2) => chain2.id === chainId);\n    if (!chain)\n      throw new SwitchChainError(new Error(\"chain not found on connector.\"));\n    try {\n      const provider = await this.getProvider();\n      const namespaceChains = __privateMethod(this, _getNamespaceChainsIds, getNamespaceChainsIds_fn).call(this);\n      const namespaceMethods = __privateMethod(this, _getNamespaceMethods, getNamespaceMethods_fn).call(this);\n      const isChainApproved = namespaceChains.includes(chainId);\n      if (!isChainApproved && namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) {\n        await provider.request({\n          method: ADD_ETH_CHAIN_METHOD,\n          params: [\n            {\n              chainId: numberToHex(chain.id),\n              blockExplorerUrls: [chain.blockExplorers?.default?.url],\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [...chain.rpcUrls.default.http]\n            }\n          ]\n        });\n        const requestedChains = __privateMethod(this, _getRequestedChainsIds, getRequestedChainsIds_fn).call(this);\n        requestedChains.push(chainId);\n        __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, requestedChains);\n      }\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: numberToHex(chainId) }]\n      });\n      return chain;\n    } catch (error) {\n      const message = typeof error === \"string\" ? error : error?.message;\n      if (/user rejected request/i.test(message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n};\n_provider = new WeakMap();\n_initProviderPromise = new WeakMap();\n_createProvider = new WeakSet();\ncreateProvider_fn = async function() {\n  if (!__privateGet(this, _initProviderPromise) && typeof window !== \"undefined\") {\n    __privateSet(this, _initProviderPromise, __privateMethod(this, _initProvider, initProvider_fn).call(this));\n  }\n  return __privateGet(this, _initProviderPromise);\n};\n_initProvider = new WeakSet();\ninitProvider_fn = async function() {\n  const { EthereumProvider } = await import(\"@walletconnect/ethereum-provider\");\n  const optionalChains = this.chains.map(({ id }) => id);\n  if (optionalChains.length) {\n    const {\n      projectId,\n      showQrModal = true,\n      qrModalOptions,\n      metadata,\n      relayUrl\n    } = this.options;\n    __privateSet(this, _provider, await EthereumProvider.init({\n      showQrModal,\n      qrModalOptions,\n      projectId,\n      optionalChains,\n      rpcMap: Object.fromEntries(\n        this.chains.map((chain) => [\n          chain.id,\n          chain.rpcUrls.default.http[0]\n        ])\n      ),\n      metadata,\n      relayUrl\n    }));\n  }\n};\n_isChainsStale = new WeakSet();\nisChainsStale_fn = function() {\n  const namespaceMethods = __privateMethod(this, _getNamespaceMethods, getNamespaceMethods_fn).call(this);\n  if (namespaceMethods.includes(ADD_ETH_CHAIN_METHOD))\n    return false;\n  if (!this.options.isNewChainsStale)\n    return false;\n  const requestedChains = __privateMethod(this, _getRequestedChainsIds, getRequestedChainsIds_fn).call(this);\n  const connectorChains = this.chains.map(({ id }) => id);\n  const namespaceChains = __privateMethod(this, _getNamespaceChainsIds, getNamespaceChainsIds_fn).call(this);\n  if (namespaceChains.length && !namespaceChains.some((id) => connectorChains.includes(id)))\n    return false;\n  return !connectorChains.every((id) => requestedChains.includes(id));\n};\n_setupListeners = new WeakSet();\nsetupListeners_fn = function() {\n  if (!__privateGet(this, _provider))\n    return;\n  __privateMethod(this, _removeListeners, removeListeners_fn).call(this);\n  __privateGet(this, _provider).on(\"accountsChanged\", this.onAccountsChanged);\n  __privateGet(this, _provider).on(\"chainChanged\", this.onChainChanged);\n  __privateGet(this, _provider).on(\"disconnect\", this.onDisconnect);\n  __privateGet(this, _provider).on(\"session_delete\", this.onDisconnect);\n  __privateGet(this, _provider).on(\"display_uri\", this.onDisplayUri);\n  __privateGet(this, _provider).on(\"connect\", this.onConnect);\n};\n_removeListeners = new WeakSet();\nremoveListeners_fn = function() {\n  if (!__privateGet(this, _provider))\n    return;\n  __privateGet(this, _provider).removeListener(\"accountsChanged\", this.onAccountsChanged);\n  __privateGet(this, _provider).removeListener(\"chainChanged\", this.onChainChanged);\n  __privateGet(this, _provider).removeListener(\"disconnect\", this.onDisconnect);\n  __privateGet(this, _provider).removeListener(\"session_delete\", this.onDisconnect);\n  __privateGet(this, _provider).removeListener(\"display_uri\", this.onDisplayUri);\n  __privateGet(this, _provider).removeListener(\"connect\", this.onConnect);\n};\n_setRequestedChainsIds = new WeakSet();\nsetRequestedChainsIds_fn = function(chains) {\n  this.storage?.setItem(REQUESTED_CHAINS_KEY, chains);\n};\n_getRequestedChainsIds = new WeakSet();\ngetRequestedChainsIds_fn = function() {\n  return this.storage?.getItem(REQUESTED_CHAINS_KEY) ?? [];\n};\n_getNamespaceChainsIds = new WeakSet();\ngetNamespaceChainsIds_fn = function() {\n  if (!__privateGet(this, _provider))\n    return [];\n  const namespaces = __privateGet(this, _provider).session?.namespaces;\n  if (!namespaces)\n    return [];\n  const normalizedNamespaces = normalizeNamespaces(namespaces);\n  const chainIds = normalizedNamespaces[NAMESPACE]?.chains?.map(\n    (chain) => parseInt(chain.split(\":\")[1] || \"\")\n  );\n  return chainIds ?? [];\n};\n_getNamespaceMethods = new WeakSet();\ngetNamespaceMethods_fn = function() {\n  if (!__privateGet(this, _provider))\n    return [];\n  const namespaces = __privateGet(this, _provider).session?.namespaces;\n  if (!namespaces)\n    return [];\n  const normalizedNamespaces = normalizeNamespaces(namespaces);\n  const methods = normalizedNamespaces[NAMESPACE]?.methods;\n  return methods ?? [];\n};\nexport {\n  WalletConnectConnector\n};\n", "import \"../chunk-MQXBDTVK.js\";\n\n// src/providers/jsonRpc.ts\nfunction jsonRpcProvider({\n  rpc\n}) {\n  return function(chain) {\n    const rpcConfig = rpc(chain);\n    if (!rpcConfig || rpcConfig.http === \"\")\n      return null;\n    return {\n      chain: {\n        ...chain,\n        rpcUrls: {\n          ...chain.rpcUrls,\n          default: { http: [rpcConfig.http] }\n        }\n      },\n      rpcUrls: {\n        http: [rpcConfig.http],\n        webSocket: rpcConfig.webSocket ? [rpcConfig.webSocket] : void 0\n      }\n    };\n  };\n}\nexport {\n  jsonRpcProvider\n};\n", "import type { Chain, Config, ConnectArgs, Connector } from '@wagmi/core'\nimport {\n  connect,\n  disconnect,\n  fetchBalance,\n  fetchEnsAvatar,\n  fetchEnsName,\n  getAccount,\n  getNetwork,\n  switchNetwork,\n  watchAccount,\n  watchNetwork\n} from '@wagmi/core'\nimport type { ConnectorId } from './types'\n\n// -- helpers ------------------------------------------- //\nconst ADD_ETH_CHAIN_METHOD = 'wallet_addEthereumChain'\n\nexport class EthereumClient {\n  private readonly wagmi = {} as Config\n\n  public readonly chains = [] as Chain[]\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public constructor(wagmi: any, chains: Chain[]) {\n    this.wagmi = wagmi\n    this.chains = chains\n  }\n\n  // -- private ------------------------------------------- //\n  private getWalletConnectConnector() {\n    const connector = this.wagmi.connectors.find((c: Connector) => c.id === 'walletConnect')\n\n    if (!connector) {\n      throw new Error('WalletConnectConnector is required')\n    }\n\n    return connector\n  }\n\n  private async connectWalletConnectProvider(connector: Connector, onUri: (uri: string) => void) {\n    await connector.getProvider()\n\n    return new Promise<void>(resolve => {\n      connector.once('message', event => {\n        if (event.type === 'display_uri') {\n          onUri(event.data as string)\n          resolve()\n        }\n      })\n    })\n  }\n\n  // -- public web3modal ---------------------------------- //\n  public namespace = 'eip155'\n\n  public getConnectorById(id: ConnectorId | string) {\n    const connector = this.wagmi.connectors.find(item => item.id === id)\n    if (!connector) {\n      throw new Error(`Connector for id ${id} was not found`)\n    }\n\n    return connector\n  }\n\n  public getConnectors() {\n    const connectors = this.wagmi.connectors.filter(\n      connector => !connector.id.includes('walletConnect')\n    )\n\n    return connectors\n  }\n\n  public async connectWalletConnect(onUri: (uri: string) => void, chainId?: number) {\n    const connector = this.getWalletConnectConnector()\n    const options: ConnectArgs = { connector }\n    if (chainId) {\n      options.chainId = chainId\n    }\n\n    return Promise.all([connect(options), this.connectWalletConnectProvider(connector, onUri)])\n  }\n\n  public async connectConnector(connectorId: ConnectorId | string, chainId?: number) {\n    const connector = this.getConnectorById(connectorId)\n    const options: ConnectArgs = { connector }\n    if (chainId) {\n      options.chainId = chainId\n    }\n    const data = await connect(options)\n\n    return data\n  }\n\n  public isInjectedProviderInstalled() {\n    // @ts-expect-error - ethereum can exist\n    return typeof window.ethereum !== 'undefined'\n  }\n\n  public safeCheckInjectedProvider(providerId: string) {\n    try {\n      const stringId = String(providerId)\n\n      // @ts-expect-error - Structure is correct\n      return Boolean(window.ethereum?.[stringId])\n    } catch (err) {\n      console.error(err)\n\n      return false\n    }\n  }\n\n  public async getConnectedChainIds() {\n    const connector = this.getWalletConnectConnector()\n    const provider = await connector.getProvider()\n    const sessionNamespaces = provider.signer?.session?.namespaces\n    const sessionMethods = sessionNamespaces?.[this.namespace]?.methods\n\n    if (sessionMethods?.includes(ADD_ETH_CHAIN_METHOD)) {\n      return 'ALL'\n    }\n\n    if (sessionNamespaces) {\n      const sessionAccounts: string[] = []\n      Object.keys(sessionNamespaces).forEach(namespaceKey => {\n        if (namespaceKey.includes(this.namespace)) {\n          sessionAccounts.push(...sessionNamespaces[namespaceKey].accounts)\n        }\n      })\n      const sessionChains = sessionAccounts?.map((a: string) => a.split(':')[1])\n\n      return sessionChains\n    }\n\n    return 'ALL'\n  }\n\n  public disconnect = disconnect\n\n  public getAccount = getAccount\n\n  public watchAccount = watchAccount\n\n  public fetchBalance = fetchBalance\n\n  public getNetwork = getNetwork\n\n  public watchNetwork = watchNetwork\n\n  public switchNetwork = switchNetwork\n\n  // -- public web3modal (optional) ----------------------- //\n  public fetchEnsName = fetchEnsName\n\n  public fetchEnsAvatar = fetchEnsAvatar\n}\n", "import { WalletConnectConnector } from '@wagmi/core/connectors/walletConnect'\nimport type { Chain } from '@wagmi/core'\nimport { InjectedConnector } from '@wagmi/core'\nimport { jsonRpcProvider } from '@wagmi/core/providers/jsonRpc'\nimport type { ModalConnectorsOpts, WalletConnectProviderOpts } from './types'\n\n// -- constants ------------------------------------------------------- //\nexport const NAMESPACE = 'eip155'\nexport const BLOCKCHAIN_API = 'https://rpc.walletconnect.com'\n\n// -- providers ------------------------------------------------------- //\nexport function w3mProvider<C extends Chain>({ projectId }: WalletConnectProviderOpts) {\n  return jsonRpcProvider<C>({\n    rpc: chain => {\n      const supportedChains = [\n        1, 3, 4, 5, 10, 42, 56, 69, 97, 100, 137, 280, 324, 420, 42161, 42220, 43114, 80001, 421611,\n        421613, 1313161554, 1313161555\n      ]\n\n      if (supportedChains.includes(chain.id)) {\n        return {\n          http: `${BLOCKCHAIN_API}/v1/?chainId=${NAMESPACE}:${chain.id}&projectId=${projectId}`\n        }\n      }\n\n      return {\n        http: chain.rpcUrls.default.http[0],\n        webSocket: chain.rpcUrls.default.webSocket?.[0]\n      }\n    }\n  })\n}\n\n// -- connectors ------------------------------------------------------ //\nexport function w3mConnectors({ chains, projectId }: ModalConnectorsOpts) {\n  return [\n    new WalletConnectConnector({\n      chains,\n      options: { projectId, showQrModal: false }\n    }),\n    new InjectedConnector({ chains, options: { shimDisconnect: true } })\n  ]\n}\n"],
  "mappings": "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",
  "names": ["parse", "ADD_ETH_CHAIN_METHOD", "EthereumClient", "wagmi", "chains", "disconnect", "getAccount", "watchAccount", "fetchBalance", "getNetwork", "watchNetwork", "switchNetwork", "fetchEnsName", "fetchEnsAvatar", "connector", "c", "onUri", "resolve", "event", "id", "item", "chainId", "options", "connect", "connectorId", "providerId", "_a", "stringId", "err", "_b", "_c", "sessionNamespaces", "sessionMethods", "sessionAccounts", "namespaceKey", "a", "NAMESPACE", "BLOCKCHAIN_API", "w3mProvider", "projectId", "jsonRpcProvider", "chain", "w3mConnectors", "WalletConnectConnector", "InjectedConnector"]
}
