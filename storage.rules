rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUserOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Product images rules
    match /products/{userId}/{imageId} {
      // Allow read access to everyone
      allow read: if true;
      
      // Allow write access to authenticated users for their own product folders
      allow write: if isAuthenticated() && 
                  (isUserOwner(userId) || isAdmin());
                  
      // For uploads, add size and type restrictions
      allow create: if isAuthenticated() && 
                  (isUserOwner(userId) || isAdmin()) &&
                  request.resource.size < 2 * 1024 * 1024 && // 2MB max
                  request.resource.contentType.matches('image/.*');
    }
  }
} 