{"version":3,"mappings":"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CP,EACD,CACE,QAAS,GACT,KAAM,QACN,KAAM,SACd,CACA,CACG,EACD,CACE,KAAM,QACN,KAAM,WACN,OAAQ,CACN,CACE,QAAS,GACT,KAAM,OACN,KAAM,SACP,EACD,CACE,QAAS,GACT,KAAM,KACN,KAAM,SACP,EACD,CACE,QAAS,GACT,KAAM,QACN,KAAM,SACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,YACN,gBAAiB,OACjB,OAAQ,CACN,CACE,KAAM,QACN,KAAM,SACP,EACD,CACE,KAAM,UACN,KAAM,SACd,CACK,EACD,QAAS,CACP,CACE,KAAM,GACN,KAAM,SACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,UACN,gBAAiB,aACjB,OAAQ,CACN,CACE,KAAM,UACN,KAAM,SACP,EACD,CACE,KAAM,SACN,KAAM,SACd,CACK,EACD,QAAS,CACP,CACE,KAAM,GACN,KAAM,MACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,YACN,gBAAiB,OACjB,OAAQ,CACN,CACE,KAAM,UACN,KAAM,SACd,CACK,EACD,QAAS,CACP,CACE,KAAM,GACN,KAAM,SACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,WACN,gBAAiB,OACjB,OAAQ,CAAE,EACV,QAAS,CACP,CACE,KAAM,GACN,KAAM,OACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,OACN,gBAAiB,OACjB,OAAQ,CAAE,EACV,QAAS,CACP,CACE,KAAM,GACN,KAAM,QACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,SACN,gBAAiB,OACjB,OAAQ,CAAE,EACV,QAAS,CACP,CACE,KAAM,GACN,KAAM,QACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,cACN,gBAAiB,OACjB,OAAQ,CAAE,EACV,QAAS,CACP,CACE,KAAM,GACN,KAAM,SACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,WACN,gBAAiB,aACjB,OAAQ,CACN,CACE,KAAM,YACN,KAAM,SACP,EACD,CACE,KAAM,SACN,KAAM,SACd,CACK,EACD,QAAS,CACP,CACE,KAAM,GACN,KAAM,MACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,eACN,gBAAiB,aACjB,OAAQ,CACN,CACE,KAAM,SACN,KAAM,SACP,EACD,CACE,KAAM,YACN,KAAM,SACP,EACD,CACE,KAAM,SACN,KAAM,SACd,CACK,EACD,QAAS,CACP,CACE,KAAM,GACN,KAAM,MACd,CACA,CACA,CACA,EACIC,GAAmB,CACrB,CACE,KAAM,QACN,KAAM,WACN,OAAQ,CACN,CACE,QAAS,GACT,KAAM,QACN,KAAM,SACP,EACD,CACE,QAAS,GACT,KAAM,UACN,KAAM,SACP,EACD,CACE,QAAS,GACT,KAAM,QACN,KAAM,SACd,CACA,CACG,EACD,CACE,KAAM,QACN,KAAM,WACN,OAAQ,CACN,CACE,QAAS,GACT,KAAM,OACN,KAAM,SACP,EACD,CACE,QAAS,GACT,KAAM,KACN,KAAM,SACP,EACD,CACE,QAAS,GACT,KAAM,QACN,KAAM,SACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,YACN,gBAAiB,OACjB,OAAQ,CACN,CACE,KAAM,QACN,KAAM,SACP,EACD,CACE,KAAM,UACN,KAAM,SACd,CACK,EACD,QAAS,CACP,CACE,KAAM,GACN,KAAM,SACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,UACN,gBAAiB,aACjB,OAAQ,CACN,CACE,KAAM,UACN,KAAM,SACP,EACD,CACE,KAAM,SACN,KAAM,SACd,CACK,EACD,QAAS,CACP,CACE,KAAM,GACN,KAAM,MACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,YACN,gBAAiB,OACjB,OAAQ,CACN,CACE,KAAM,UACN,KAAM,SACd,CACK,EACD,QAAS,CACP,CACE,KAAM,GACN,KAAM,SACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,WACN,gBAAiB,OACjB,OAAQ,CAAE,EACV,QAAS,CACP,CACE,KAAM,GACN,KAAM,OACd,CACA,CACG,EACD,CACE,KAAM,WACN,KAAM,OACN,gBAAiB,OACjB,OA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","names":["ChainNotConfiguredForConnectorError","chainId","connectorId","ConnectorNotFoundError","normalizeChainId","__accessCheck","obj","member","msg","__privateGet","getter","__privateAdd","value","__privateSet","setter","__privateMethod","method","Connector","EventEmitter","chains","mainnet","goerli","options","chain","blockExplorer","blockExplorers","x","storage","getInjectedName","ethereum","getName","provider","nameSet","unknownCount","name","names","_provider","InjectedConnector","options_","accounts","getAddress","id","unsupported","error","detectedName","account","UserRejectedRequestError","ResourceUnavailableRpcError","createWalletClient","custom","numberToHex","res","error2","SwitchChainError","address","decimals","image","symbol","configureChains","defaultChains","providers","batch","pollingInterval","rank","retryCount","retryDelay","stallTimeout","httpUrls","wsUrls","configExists","apiConfig","activeChain","chainHttpUrls","publicClient","createPublicClient","fallback","url","http","chainWsUrls","webSocket","ChainMismatchError","targetChain","ChainNotConfiguredError","ConnectorAlreadyConnectedError","ConfigChainsNotFound","SwitchChainNotSupportedError","connector","deepEqual","a","b","length","i","keys","key","findAndReplace","cacheRef","find","replace","item","curr","deserialize","cachedString","cache","data","getCallParameters","args","getSendTransactionParameters","getUnit","unit","weiUnits","getReferenceKey","cutoff","getCutoff","array","index","createReplacer","replacer","circularReplacer","hasReplacer","hasCircularReplacer","thisCutoff","valueCutoff","serialize","indent","value_","value2","noopStorage","_key","_value","createStorage","deserialize2","prefix","serialize2","defaultState","err","storeKey","_isAutoConnecting","_lastUsedConnector","_addEffects","addEffects_fn","Config","autoConnect","connectors","logger","webSocketPublicClient","status","connectors_","createStore","subscribeWithSelector","persist","state","updater","newState","sorted","connected","publicClient_","webSocketPublicClient_","lastUsedConnector","onChange","onDisconnect","onError","prevConnector","config","createConfig","config_","getConfig","connect","config2","activeConnector","disconnect","erc20ABI","erc20ABI_bytes32","getPublicClient","getWalletClient","getWebSocketPublicClient","watchPublicClient","callback","handleChange","watchWalletClient","chainId_","walletClient","shallow","watchWebSocketPublicClient","prepareWriteContract","abi","dataSuffix","functionName","walletClient_","assertActiveChain","accessList","blockNumber","blockTag","gas","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","result","request","minimizedAbi","abiItem","multicall","contracts","readContract","readContracts","allowFailure","contractsByChainId","contracts2","contract","promises","multicallResults","resultIndexes","results","ContractFunctionExecutionError2","writeContract","_","__","fetchBalance","token","fetchContractBalance","erc20Config","formatUnits2","ContractFunctionExecutionError3","rest","hexToString2","trim2","getAccount","getNetwork","activeChains","signMessage","switchNetwork","watchAccount","selector","shallow4","watchNetwork","shallow5","fetchEnsAvatar","normalize","__vitePreload","n","fetchEnsName","getAddress2","fetchBlockNumber","waitForTransaction","confirmations","hash","onReplaced","timeout","receipt","txn","code","reason","hexToString3","activeChainId","queryClient","QueryClient","persister","createSyncStoragePersister","createCoreConfig","persistQueryClient","query","Context","React.createContext","queryClientContext","WagmiConfig","children","React.createElement","QueryClientProvider","useConfig","React.useContext","useSyncExternalStore2","pkg.useSyncExternalStore","isQueryKey","isPlainObject","o","hasObjectPrototype","ctor","prot","parseQueryArgs","arg1","arg2","arg3","queryKeyHashFn","queryKey17","val","shouldThrowError","_useErrorBoundary","params","trackResult","observer","trackedResult","useBaseQuery","Observer","useQueryClient","isRestoring","useIsRestoring","errorResetBoundary","useQueryErrorResetBoundary","defaultedOptions","notifyManager","React2.useState","React2.useCallback","onStoreChange","React2.useEffect","isIdle","isLoading","useMutation","parseMutationArgs","useMutation_","useQuery","parsedOptions","baseQuery","QueryObserver","useQueryClient2","useQueryClient_","usePublicClient","useSyncExternalStoreWithSelector","cb","queryKey","queryFn","useWalletClient","suspense","onSettled","onSuccess","useAccount","useChainId","walletClientQuery","React3.useEffect","useWebSocketPublicClient","useSyncExternalStoreWithSelector2","useForceUpdate","forceUpdate","React4.useReducer","queryKey2","scopeKey","queryFn2","useBlockNumber","cacheTime","enabled","staleTime","watch","onBlock","React5.useEffect","useInvalidateOnBlock","React7.useCallback","isPlainObject2","useSyncExternalStoreWithTracked","subscribe","getSnapshot","getServerSnapshot","isEqual","trackedKeys","React8.useRef","useSyncExternalStoreWithSelector3","onConnect","watchAccount_","React9.useCallback","previousAccountRef","React9.useRef","previousAccount","React9.useEffect","queryKey4","formatUnits","queryFn4","useBalance","queryKey_","React10.useMemo","balanceQuery","mutationKey","mutationFn","useConnect","onMutate","isError","isSuccess","mutate","mutateAsync","reset","variables","connect2","React11.useCallback","connectAsync","mutationKey2","mutationFn2","useDisconnect","disconnect2","disconnectAsync","_variables","context","_data","useNetwork","watchNetwork_","useCallback5","mutationKey3","mutationFn3","message","useSignMessage","signMessage2","React12.useCallback","signMessageAsync","mutationKey5","mutationFn5","useSwitchNetwork","throwForSwitchChainNotSupported","switchNetwork_","React14.useCallback","switchNetworkAsync_","React14.useEffect","switchNetwork2","switchNetworkAsync","supportsSwitchChain","queryKey6","queryFn6","useContractRead","blockNumberOverride","cacheOnBlock","enabled_","isDataEqual","keepPreviousData","select","structuralSharing","oldData","newData","deepEqual3","replaceEqualDeep2","blockNumber_","React17.useMemo","enabled2","mutationKey6","mutationFn6","useContractWrite","mode","write","React19.useMemo","overrideConfig","writeAsync","queryKey11","queryFn11","useEnsAvatar","queryKey12","queryFn12","useEnsName","queryKey16","queryFn16","useWaitForTransaction","publicProvider","NAMESPACE","STORE_KEY","REQUESTED_CHAINS_KEY","ADD_ETH_CHAIN_METHOD","_initProviderPromise","_createProvider","createProvider_fn","_initProvider","initProvider_fn","_isChainsStale","isChainsStale_fn","_setupListeners","setupListeners_fn","_removeListeners","removeListeners_fn","_setRequestedChainsIds","setRequestedChainsIds_fn","_getRequestedChainsIds","getRequestedChainsIds_fn","_getNamespaceChainsIds","getNamespaceChainsIds_fn","_getNamespaceMethods","getNamespaceMethods_fn","WalletConnectConnector","uri","pairingTopic","targetChainId","lastUsedChainId","isChainsStale","optionalChains","optionalChain","id2","chain2","namespaceChains","namespaceMethods","requestedChains","EthereumProvider","projectId","showQrModal","qrModalOptions","metadata","relayUrl","connectorChains","namespaces","normalizeNamespaces","_client","CoinbaseWalletConnector","CoinbaseWalletSDK","__vite_default__","walletExtensionChainId","jsonRpcUrl","_UNSTABLE_shimOnConnectSelectAccount","MetaMaskConnector","getReady","ethereum2","switchChainAllowedRegex","_switchChain","switchChain_fn","WalletConnectLegacyConnector","walletName","create","rpc","rpc2","WalletConnectProvider","unichainMainnet","unichainTestnet","moonwalkerChain","monadTestnet","sepolia","polygon","connectorsForWallets","metaMaskWallet","subWallet","phantomWallet","rainbowWallet","coinbaseWallet","walletConnectWallet","okxWallet","wagmiConfig"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11],"sources":["../../../node_modules/@wagmi/connectors/dist/chunk-UGBGYVBH.js","../../../node_modules/@wagmi/connectors/dist/chunk-OQILYQDO.js","../../../node_modules/@wagmi/connectors/dist/chunk-W65LBPLT.js","../../../node_modules/@wagmi/connectors/dist/chunk-P4NRLOY7.js","../../../node_modules/@wagmi/core/dist/chunk-MQXBDTVK.js","../../../node_modules/@wagmi/core/dist/chunk-TSH6VVF4.js","../../../node_modules/wagmi/dist/index.js","../../../node_modules/@wagmi/core/dist/providers/public.js","../../../node_modules/@wagmi/connectors/dist/walletConnect.js","../../../node_modules/@wagmi/connectors/dist/coinbaseWallet.js","../../../node_modules/@wagmi/connectors/dist/metaMask.js","../../../node_modules/@wagmi/connectors/dist/walletConnectLegacy.js","../../../src/config/wagmi.js"],"sourcesContent":["// src/errors.ts\nvar ChainNotConfiguredForConnectorError = class extends Error {\n  constructor({\n    chainId,\n    connectorId\n  }) {\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    this.name = \"ChainNotConfiguredForConnectorError\";\n  }\n};\nvar ConnectorNotFoundError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorNotFoundError\";\n    this.message = \"Connector not found\";\n  }\n};\n\nexport {\n  ChainNotConfiguredForConnectorError,\n  ConnectorNotFoundError\n};\n","// src/utils/normalizeChainId.ts\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\")\n    return Number.parseInt(\n      chainId,\n      chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10\n    );\n  if (typeof chainId === \"bigint\")\n    return Number(chainId);\n  return chainId;\n}\n\nexport {\n  normalizeChainId\n};\n","var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n// src/base.ts\nimport { default as EventEmitter } from \"eventemitter3\";\nimport { goerli, mainnet } from \"viem/chains\";\nvar Connector = class extends EventEmitter {\n  constructor({\n    chains = [mainnet, goerli],\n    options\n  }) {\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const { default: blockExplorer, ...blockExplorers } = chain.blockExplorers ?? {};\n    if (blockExplorer)\n      return [\n        blockExplorer.url,\n        ...Object.values(blockExplorers).map((x) => x.url)\n      ];\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some((x) => x.id === chainId);\n  }\n  setStorage(storage) {\n    this.storage = storage;\n  }\n};\n\nexport {\n  __privateGet,\n  __privateAdd,\n  __privateSet,\n  __privateMethod,\n  Connector\n};\n","import {\n  ChainNotConfiguredForConnectorError,\n  ConnectorNotFoundError\n} from \"./chunk-UGBGYVBH.js\";\nimport {\n  normalizeChainId\n} from \"./chunk-OQILYQDO.js\";\nimport {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateSet\n} from \"./chunk-W65LBPLT.js\";\n\n// src/injected.ts\nimport {\n  ResourceUnavailableRpcError,\n  SwitchChainError,\n  UserRejectedRequestError,\n  createWalletClient,\n  custom,\n  getAddress,\n  numberToHex\n} from \"viem\";\n\n// src/utils/getInjectedName.ts\nfunction getInjectedName(ethereum) {\n  if (!ethereum)\n    return \"Injected\";\n  const getName = (provider) => {\n    if (provider.isApexWallet)\n      return \"Apex Wallet\";\n    if (provider.isAvalanche)\n      return \"Core Wallet\";\n    if (provider.isBackpack)\n      return \"Backpack\";\n    if (provider.isBifrost)\n      return \"Bifrost Wallet\";\n    if (provider.isBitKeep)\n      return \"BitKeep\";\n    if (provider.isBitski)\n      return \"Bitski\";\n    if (provider.isBlockWallet)\n      return \"BlockWallet\";\n    if (provider.isBraveWallet)\n      return \"Brave Wallet\";\n    if (provider.isCoin98)\n      return \"Coin98 Wallet\";\n    if (provider.isCoinbaseWallet)\n      return \"Coinbase Wallet\";\n    if (provider.isDawn)\n      return \"Dawn Wallet\";\n    if (provider.isDefiant)\n      return \"Defiant\";\n    if (provider.isDesig)\n      return \"Desig Wallet\";\n    if (provider.isEnkrypt)\n      return \"Enkrypt\";\n    if (provider.isExodus)\n      return \"Exodus\";\n    if (provider.isFordefi)\n      return \"Fordefi\";\n    if (provider.isFrame)\n      return \"Frame\";\n    if (provider.isFrontier)\n      return \"Frontier Wallet\";\n    if (provider.isGamestop)\n      return \"GameStop Wallet\";\n    if (provider.isHaqqWallet)\n      return \"HAQQ Wallet\";\n    if (provider.isHyperPay)\n      return \"HyperPay Wallet\";\n    if (provider.isImToken)\n      return \"ImToken\";\n    if (provider.isHaloWallet)\n      return \"Halo Wallet\";\n    if (provider.isKuCoinWallet)\n      return \"KuCoin Wallet\";\n    if (provider.isMathWallet)\n      return \"MathWallet\";\n    if (provider.isNovaWallet)\n      return \"Nova Wallet\";\n    if (provider.isOkxWallet || provider.isOKExWallet)\n      return \"OKX Wallet\";\n    if (provider.isOktoWallet)\n      return \"Okto Wallet\";\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet)\n      return \"1inch Wallet\";\n    if (provider.isOneKey)\n      return \"OneKey Wallet\";\n    if (provider.isOpera)\n      return \"Opera\";\n    if (provider.isPhantom)\n      return \"Phantom\";\n    if (provider.isPortal)\n      return \"Ripio Portal\";\n    if (provider.isRabby)\n      return \"Rabby Wallet\";\n    if (provider.isRainbow)\n      return \"Rainbow\";\n    if (provider.isSafePal)\n      return \"SafePal Wallet\";\n    if (provider.isStatus)\n      return \"Status\";\n    if (provider.isSubWallet)\n      return \"SubWallet\";\n    if (provider.isTalisman)\n      return \"Talisman\";\n    if (provider.isTally)\n      return \"Taho\";\n    if (provider.isTokenPocket)\n      return \"TokenPocket\";\n    if (provider.isTokenary)\n      return \"Tokenary\";\n    if (provider.isTrust || provider.isTrustWallet)\n      return \"Trust Wallet\";\n    if (provider.isTTWallet)\n      return \"TTWallet\";\n    if (provider.isXDEFI)\n      return \"XDEFI Wallet\";\n    if (provider.isZeal)\n      return \"Zeal\";\n    if (provider.isZerion)\n      return \"Zerion\";\n    if (provider.isMetaMask)\n      return \"MetaMask\";\n  };\n  if (ethereum.providers?.length) {\n    const nameSet = /* @__PURE__ */ new Set();\n    let unknownCount = 1;\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n      nameSet.add(name);\n    }\n    const names = [...nameSet];\n    if (names.length)\n      return names;\n    return names[0] ?? \"Injected\";\n  }\n  return getName(ethereum) ?? \"Injected\";\n}\n\n// src/injected.ts\nvar _provider;\nvar InjectedConnector = class extends Connector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      shimDisconnect: true,\n      getProvider() {\n        if (typeof window === \"undefined\")\n          return;\n        const ethereum = window.ethereum;\n        if (ethereum?.providers && ethereum.providers.length > 0)\n          return ethereum.providers[0];\n        return ethereum;\n      },\n      ...options_\n    };\n    super({ chains, options });\n    this.id = \"injected\";\n    __privateAdd(this, _provider, void 0);\n    this.shimDisconnectKey = `${this.id}.shimDisconnect`;\n    this.onAccountsChanged = (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", {\n          account: getAddress(accounts[0])\n        });\n    };\n    this.onChainChanged = (chainId) => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    };\n    this.onDisconnect = async (error) => {\n      if (error.code === 1013) {\n        const provider = await this.getProvider();\n        if (provider) {\n          const isAuthorized = await this.getAccount();\n          if (isAuthorized)\n            return;\n        }\n      }\n      this.emit(\"disconnect\");\n      if (this.options.shimDisconnect)\n        this.storage?.removeItem(this.shimDisconnectKey);\n    };\n    const provider = options.getProvider();\n    if (typeof options.name === \"string\")\n      this.name = options.name;\n    else if (provider) {\n      const detectedName = getInjectedName(provider);\n      if (options.name)\n        this.name = options.name(detectedName);\n      else {\n        if (typeof detectedName === \"string\")\n          this.name = detectedName;\n        else\n          this.name = detectedName[0];\n      }\n    } else\n      this.name = \"Injected\";\n    this.ready = !!provider;\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options.shimDisconnect)\n        this.storage?.setItem(this.shimDisconnectKey, true);\n      return { account, chain: { id, unsupported } };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new ResourceUnavailableRpcError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    if (!provider?.removeListener)\n      return;\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (this.options.shimDisconnect)\n      this.storage?.removeItem(this.shimDisconnectKey);\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    return provider.request({ method: \"eth_chainId\" }).then(normalizeChainId);\n  }\n  async getProvider() {\n    const provider = this.options.getProvider();\n    if (provider)\n      __privateSet(this, _provider, provider);\n    return __privateGet(this, _provider);\n  }\n  async getWalletClient({\n    chainId\n  } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider(),\n      this.getAccount()\n    ]);\n    const chain = this.chains.find((x) => x.id === chainId);\n    if (!provider)\n      throw new Error(\"provider is required.\");\n    return createWalletClient({\n      account,\n      chain,\n      transport: custom(provider)\n    });\n  }\n  async isAuthorized() {\n    try {\n      if (this.options.shimDisconnect && !this.storage?.getItem(this.shimDisconnectKey))\n        return false;\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    const id = numberToHex(chainId);\n    try {\n      await Promise.all([\n        provider.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{ chainId: id }]\n        }),\n        new Promise(\n          (res) => this.on(\"change\", ({ chain }) => {\n            if (chain?.id === chainId)\n              res();\n          })\n        )\n      ]);\n      return this.chains.find((x) => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\n      };\n    } catch (error) {\n      const chain = this.chains.find((x) => x.id === chainId);\n      if (!chain)\n        throw new ChainNotConfiguredForConnectorError({\n          chainId,\n          connectorId: this.id\n        });\n      if (error.code === 4902 || error?.data?.originalError?.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: id,\n                chainName: chain.name,\n                nativeCurrency: chain.nativeCurrency,\n                rpcUrls: [chain.rpcUrls.public?.http[0] ?? \"\"],\n                blockExplorerUrls: this.getBlockExplorerUrls(chain)\n              }\n            ]\n          });\n          const currentChainId = await this.getChainId();\n          if (currentChainId !== chainId)\n            throw new UserRejectedRequestError(\n              new Error(\"User rejected switch after adding network.\")\n            );\n          return chain;\n        } catch (error2) {\n          throw new UserRejectedRequestError(error2);\n        }\n      }\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n  async watchAsset({\n    address,\n    decimals = 18,\n    image,\n    symbol\n  }) {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new ConnectorNotFoundError();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n};\n_provider = new WeakMap();\n\nexport {\n  InjectedConnector\n};\n","var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\nexport {\n  __privateGet,\n  __privateAdd,\n  __privateSet,\n  __privateMethod\n};\n","import {\n  InjectedConnector\n} from \"./chunk-BVC4KGLQ.js\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk-MQXBDTVK.js\";\n\n// src/utils/configureChains.ts\nimport { createPublicClient, fallback, http, webSocket } from \"viem\";\nfunction configureChains(defaultChains, providers, {\n  batch = { multicall: { wait: 32 } },\n  pollingInterval = 4e3,\n  rank,\n  retryCount,\n  retryDelay,\n  stallTimeout\n} = {}) {\n  if (!defaultChains.length)\n    throw new Error(\"must have at least one chain\");\n  let chains = [];\n  const httpUrls = {};\n  const wsUrls = {};\n  for (const chain of defaultChains) {\n    let configExists = false;\n    for (const provider of providers) {\n      const apiConfig = provider(chain);\n      if (!apiConfig)\n        continue;\n      configExists = true;\n      if (!chains.some(({ id }) => id === chain.id)) {\n        chains = [...chains, apiConfig.chain];\n      }\n      httpUrls[chain.id] = [\n        ...httpUrls[chain.id] || [],\n        ...apiConfig.rpcUrls.http\n      ];\n      if (apiConfig.rpcUrls.webSocket) {\n        wsUrls[chain.id] = [\n          ...wsUrls[chain.id] || [],\n          ...apiConfig.rpcUrls.webSocket\n        ];\n      }\n    }\n    if (!configExists) {\n      throw new Error(\n        [\n          `Could not find valid provider configuration for chain \"${chain.name}\".\n`,\n          \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\",\n          \"Read more: https://wagmi.sh/core/providers/jsonRpc\"\n        ].join(\"\\n\")\n      );\n    }\n  }\n  return {\n    chains,\n    publicClient: ({ chainId }) => {\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\n      const chainHttpUrls = httpUrls[activeChain.id];\n      if (!chainHttpUrls || !chainHttpUrls[0])\n        throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      const publicClient = createPublicClient({\n        batch,\n        chain: activeChain,\n        transport: fallback(\n          chainHttpUrls.map((url) => http(url, { timeout: stallTimeout })),\n          { rank, retryCount, retryDelay }\n        ),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    },\n    webSocketPublicClient: ({ chainId }) => {\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\n      const chainWsUrls = wsUrls[activeChain.id];\n      if (!chainWsUrls || !chainWsUrls[0])\n        return void 0;\n      const publicClient = createPublicClient({\n        batch,\n        chain: activeChain,\n        transport: fallback(\n          chainWsUrls.map((url) => webSocket(url, { timeout: stallTimeout })),\n          { rank, retryCount, retryDelay }\n        ),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    }\n  };\n}\n\n// src/errors.ts\nimport { ConnectorNotFoundError } from \"@wagmi/connectors\";\nvar ChainMismatchError = class extends Error {\n  constructor({\n    activeChain,\n    targetChain\n  }) {\n    super(\n      `Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`\n    );\n    this.name = \"ChainMismatchError\";\n  }\n};\nvar ChainNotConfiguredError = class extends Error {\n  constructor({\n    chainId,\n    connectorId\n  }) {\n    super(\n      `Chain \"${chainId}\" not configured${connectorId ? ` for connector \"${connectorId}\"` : \"\"}.`\n    );\n    this.name = \"ChainNotConfigured\";\n  }\n};\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n};\nvar ConfigChainsNotFound = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConfigChainsNotFound\";\n    this.message = \"No chains were found on the wagmi config. Some functions that require a chain may not work.\";\n  }\n};\nvar SwitchChainNotSupportedError = class extends Error {\n  constructor({ connector }) {\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n    this.name = \"SwitchChainNotSupportedError\";\n  }\n};\n\n// src/utils/deepEqual.ts\nfunction deepEqual(a, b) {\n  if (a === b)\n    return true;\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor)\n      return false;\n    let length;\n    let i;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length)\n        return false;\n      for (i = length; i-- !== 0; )\n        if (!deepEqual(a[i], b[i]))\n          return false;\n      return true;\n    }\n    if (a.valueOf !== Object.prototype.valueOf)\n      return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString)\n      return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length)\n      return false;\n    for (i = length; i-- !== 0; )\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n        return false;\n    for (i = length; i-- !== 0; ) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key]))\n        return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\n// src/utils/deserialize.ts\nvar findAndReplace = (cacheRef, {\n  find,\n  replace\n}) => {\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n  if (typeof cacheRef !== \"object\") {\n    return cacheRef;\n  }\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map((item) => findAndReplace(item, { find, replace }));\n  }\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce(\n      (curr, [key, value]) => ({\n        ...curr,\n        [key]: findAndReplace(value, { find, replace })\n      }),\n      {}\n    );\n  }\n  return cacheRef;\n};\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigInts = findAndReplace(cache, {\n    find: (data) => typeof data === \"string\" && data.startsWith(\"#bigint.\"),\n    replace: (data) => BigInt(data.replace(\"#bigint.\", \"\"))\n  });\n  return deserializedCacheWithBigInts;\n}\n\n// src/utils/getParameters.ts\nfunction getCallParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    blockNumber: args.blockNumber,\n    blockTag: args.blockTag,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\nfunction getSendTransactionParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\n\n// src/utils/getUnit.ts\nimport { weiUnits } from \"viem\";\nfunction getUnit(unit) {\n  if (typeof unit === \"number\")\n    return unit;\n  if (unit === \"wei\")\n    return 0;\n  return Math.abs(weiUnits[unit]);\n}\n\n// src/utils/serialize.ts\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join(\".\") || \".\";\n}\nfunction getCutoff(array, value) {\n  const { length } = array;\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n  return 0;\n}\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === \"function\";\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === \"object\") {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(\n            this,\n            key,\n            value,\n            getReferenceKey(keys, valueCutoff)\n          ) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(\n    value,\n    createReplacer((key, value_) => {\n      const value2 = typeof value_ === \"bigint\" ? `#bigint.${value_.toString()}` : value_;\n      return replacer?.(key, value2) || value2;\n    }, circularReplacer),\n    indent ?? void 0\n  );\n}\n\n// src/config.ts\nimport { persist, subscribeWithSelector } from \"zustand/middleware\";\nimport { createStore } from \"zustand/vanilla\";\n\n// src/storage.ts\nvar noopStorage = {\n  getItem: (_key) => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: (_key) => null\n};\nfunction createStorage({\n  deserialize: deserialize2 = deserialize,\n  key: prefix = \"wagmi\",\n  serialize: serialize2 = serialize,\n  storage\n}) {\n  return {\n    ...storage,\n    getItem: (key, defaultState = null) => {\n      const value = storage.getItem(`${prefix}.${key}`);\n      try {\n        return value ? deserialize2(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: (key) => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\n// src/config.ts\nvar storeKey = \"store\";\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\nvar Config = class {\n  constructor({\n    autoConnect = false,\n    connectors = [new InjectedConnector()],\n    publicClient,\n    storage = createStorage({\n      storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n    }),\n    logger = {\n      warn: console.warn\n    },\n    webSocketPublicClient\n  }) {\n    __privateAdd(this, _addEffects);\n    this.publicClients = /* @__PURE__ */ new Map();\n    this.webSocketPublicClients = /* @__PURE__ */ new Map();\n    __privateAdd(this, _isAutoConnecting, void 0);\n    __privateAdd(this, _lastUsedConnector, void 0);\n    this.args = {\n      autoConnect,\n      connectors,\n      logger,\n      publicClient,\n      storage,\n      webSocketPublicClient\n    };\n    let status = \"disconnected\";\n    let chainId;\n    if (autoConnect) {\n      try {\n        const rawState = storage.getItem(storeKey);\n        const data = rawState?.state?.data;\n        status = data?.account ? \"reconnecting\" : \"connecting\";\n        chainId = data?.chain?.id;\n      } catch (_error) {\n      }\n    }\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach((connector) => connector.setStorage(storage));\n    this.store = createStore(\n      subscribeWithSelector(\n        persist(\n          () => ({\n            connectors: connectors_,\n            publicClient: this.getPublicClient({ chainId }),\n            status,\n            webSocketPublicClient: this.getWebSocketPublicClient({ chainId })\n          }),\n          {\n            name: storeKey,\n            storage,\n            partialize: (state) => ({\n              ...autoConnect && {\n                data: {\n                  account: state?.data?.account,\n                  chain: state?.data?.chain\n                }\n              },\n              chains: state?.chains\n            }),\n            version: 2\n          }\n        )\n      )\n    );\n    this.storage = storage;\n    __privateSet(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\n    __privateMethod(this, _addEffects, addEffects_fn).call(this);\n    if (autoConnect && typeof window !== \"undefined\")\n      setTimeout(async () => await this.autoConnect(), 0);\n  }\n  get chains() {\n    return this.store.getState().chains;\n  }\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n  get connector() {\n    return this.store.getState().connector;\n  }\n  get data() {\n    return this.store.getState().data;\n  }\n  get error() {\n    return this.store.getState().error;\n  }\n  get lastUsedChainId() {\n    return this.data?.chain?.id;\n  }\n  get publicClient() {\n    return this.store.getState().publicClient;\n  }\n  get status() {\n    return this.store.getState().status;\n  }\n  get subscribe() {\n    return this.store.subscribe;\n  }\n  get webSocketPublicClient() {\n    return this.store.getState().webSocketPublicClient;\n  }\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n  clearState() {\n    this.setState((x) => ({\n      ...x,\n      chains: void 0,\n      connector: void 0,\n      data: void 0,\n      error: void 0,\n      status: \"disconnected\"\n    }));\n  }\n  async destroy() {\n    if (this.connector)\n      await this.connector.disconnect?.();\n    __privateSet(this, _isAutoConnecting, false);\n    this.clearState();\n    this.store.destroy();\n  }\n  async autoConnect() {\n    if (__privateGet(this, _isAutoConnecting))\n      return;\n    __privateSet(this, _isAutoConnecting, true);\n    this.setState((x) => ({\n      ...x,\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\n    }));\n    const sorted = __privateGet(this, _lastUsedConnector) ? [...this.connectors].sort(\n      (x) => x.id === __privateGet(this, _lastUsedConnector) ? -1 : 1\n    ) : this.connectors;\n    let connected = false;\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized)\n        continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized)\n        continue;\n      const data = await connector.connect();\n      this.setState((x) => ({\n        ...x,\n        connector,\n        chains: connector?.chains,\n        data,\n        status: \"connected\"\n      }));\n      connected = true;\n      break;\n    }\n    if (!connected)\n      this.setState((x) => ({\n        ...x,\n        data: void 0,\n        status: \"disconnected\"\n      }));\n    __privateSet(this, _isAutoConnecting, false);\n    return this.data;\n  }\n  setConnectors(connectors) {\n    this.args = {\n      ...this.args,\n      connectors\n    };\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach((connector) => connector.setStorage(this.args.storage));\n    this.setState((x) => ({\n      ...x,\n      connectors: connectors_\n    }));\n  }\n  getPublicClient({ chainId } = {}) {\n    let publicClient_ = this.publicClients.get(-1);\n    if (publicClient_ && publicClient_?.chain.id === chainId)\n      return publicClient_;\n    publicClient_ = this.publicClients.get(chainId ?? -1);\n    if (publicClient_)\n      return publicClient_;\n    const { publicClient } = this.args;\n    publicClient_ = typeof publicClient === \"function\" ? publicClient({ chainId }) : publicClient;\n    this.publicClients.set(chainId ?? -1, publicClient_);\n    return publicClient_;\n  }\n  setPublicClient(publicClient) {\n    const chainId = this.data?.chain?.id;\n    this.args = {\n      ...this.args,\n      publicClient\n    };\n    this.publicClients.clear();\n    this.setState((x) => ({\n      ...x,\n      publicClient: this.getPublicClient({ chainId })\n    }));\n  }\n  getWebSocketPublicClient({ chainId } = {}) {\n    let webSocketPublicClient_ = this.webSocketPublicClients.get(-1);\n    if (webSocketPublicClient_ && webSocketPublicClient_?.chain.id === chainId)\n      return webSocketPublicClient_;\n    webSocketPublicClient_ = this.webSocketPublicClients.get(chainId ?? -1);\n    if (webSocketPublicClient_)\n      return webSocketPublicClient_;\n    const { webSocketPublicClient } = this.args;\n    webSocketPublicClient_ = typeof webSocketPublicClient === \"function\" ? webSocketPublicClient({ chainId }) : webSocketPublicClient;\n    if (webSocketPublicClient_)\n      this.webSocketPublicClients.set(chainId ?? -1, webSocketPublicClient_);\n    return webSocketPublicClient_;\n  }\n  setWebSocketPublicClient(webSocketPublicClient) {\n    const chainId = this.data?.chain?.id;\n    this.args = {\n      ...this.args,\n      webSocketPublicClient\n    };\n    this.webSocketPublicClients.clear();\n    this.setState((x) => ({\n      ...x,\n      webSocketPublicClient: this.getWebSocketPublicClient({\n        chainId\n      })\n    }));\n  }\n  setLastUsedConnector(lastUsedConnector = null) {\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\n  }\n};\n_isAutoConnecting = new WeakMap();\n_lastUsedConnector = new WeakMap();\n_addEffects = new WeakSet();\naddEffects_fn = function() {\n  const onChange = (data) => {\n    this.setState((x) => ({\n      ...x,\n      data: { ...x.data, ...data }\n    }));\n  };\n  const onDisconnect = () => {\n    this.clearState();\n  };\n  const onError = (error) => {\n    this.setState((x) => ({ ...x, error }));\n  };\n  this.store.subscribe(\n    ({ connector }) => connector,\n    (connector, prevConnector) => {\n      prevConnector?.off?.(\"change\", onChange);\n      prevConnector?.off?.(\"disconnect\", onDisconnect);\n      prevConnector?.off?.(\"error\", onError);\n      if (!connector)\n        return;\n      connector.on?.(\"change\", onChange);\n      connector.on?.(\"disconnect\", onDisconnect);\n      connector.on?.(\"error\", onError);\n    }\n  );\n  const { publicClient, webSocketPublicClient } = this.args;\n  const subscribePublicClient = typeof publicClient === \"function\";\n  const subscribeWebSocketPublicClient = typeof webSocketPublicClient === \"function\";\n  if (subscribePublicClient || subscribeWebSocketPublicClient)\n    this.store.subscribe(\n      ({ data }) => data?.chain?.id,\n      (chainId) => {\n        this.setState((x) => ({\n          ...x,\n          publicClient: this.getPublicClient({ chainId }),\n          webSocketPublicClient: this.getWebSocketPublicClient({\n            chainId\n          })\n        }));\n      }\n    );\n};\nvar config;\nfunction createConfig(args) {\n  const config_ = new Config(args);\n  config = config_;\n  return config_;\n}\nfunction getConfig() {\n  if (!config) {\n    throw new Error(\n      \"No wagmi config found. Ensure you have set up a config: https://wagmi.sh/react/config\"\n    );\n  }\n  return config;\n}\n\n// src/actions/accounts/connect.ts\nasync function connect({ chainId, connector }) {\n  const config2 = getConfig();\n  const activeConnector = config2.connector;\n  if (activeConnector && connector.id === activeConnector.id)\n    throw new ConnectorAlreadyConnectedError();\n  try {\n    config2.setState((x) => ({ ...x, status: \"connecting\" }));\n    const data = await connector.connect({ chainId });\n    config2.setLastUsedConnector(connector.id);\n    config2.setState((x) => ({\n      ...x,\n      connector,\n      chains: connector?.chains,\n      data,\n      status: \"connected\"\n    }));\n    config2.storage.setItem(\"connected\", true);\n    return { ...data, connector };\n  } catch (err) {\n    config2.setState((x) => {\n      return {\n        ...x,\n        status: x.connector ? \"connected\" : \"disconnected\"\n      };\n    });\n    throw err;\n  }\n}\n\n// src/actions/accounts/disconnect.ts\nasync function disconnect() {\n  const config2 = getConfig();\n  if (config2.connector)\n    await config2.connector.disconnect();\n  config2.clearState();\n  config2.storage.removeItem(\"connected\");\n}\n\n// src/actions/accounts/fetchBalance.ts\nimport {\n  ContractFunctionExecutionError as ContractFunctionExecutionError3,\n  formatUnits as formatUnits2,\n  hexToString as hexToString2,\n  trim as trim2\n} from \"viem\";\n\n// src/constants/abis.ts\nvar erc20ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc20ABI_bytes32 = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc721ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"ApprovalForAll\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"getApproved\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"isApprovedForAll\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"operator\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"ownerOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"id\",\n        type: \"uint256\"\n      },\n      {\n        name: \"data\",\n        type: \"bytes\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"setApprovalForAll\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenURI\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"tokeId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  }\n];\nvar erc4626ABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Approval\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Deposit\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Transfer\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Withdraw\",\n    type: \"event\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"asset\",\n    outputs: [\n      {\n        name: \"assetTokenAddress\",\n        type: \"address\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToAssets\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToShares\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"deposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxDeposit\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxMint\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxRedeem\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxWithdraw\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewDeposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewMint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewRedeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewWithdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"redeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalAssets\",\n    outputs: [\n      {\n        name: \"totalManagedAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"withdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }\n];\n\n// src/actions/contracts/fetchToken.ts\nimport {\n  ContractFunctionExecutionError,\n  formatUnits,\n  hexToString,\n  trim\n} from \"viem\";\nasync function fetchToken({\n  address,\n  chainId,\n  formatUnits: unit = 18\n}) {\n  async function fetchToken_({ abi }) {\n    const erc20Config = { address, abi, chainId };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [\n        { ...erc20Config, functionName: \"decimals\" },\n        { ...erc20Config, functionName: \"name\" },\n        { ...erc20Config, functionName: \"symbol\" },\n        { ...erc20Config, functionName: \"totalSupply\" }\n      ]\n    });\n    return {\n      address,\n      decimals,\n      name,\n      symbol,\n      totalSupply: {\n        formatted: formatUnits(totalSupply, getUnit(unit)),\n        value: totalSupply\n      }\n    };\n  }\n  try {\n    return await fetchToken_({ abi: erc20ABI });\n  } catch (err) {\n    if (err instanceof ContractFunctionExecutionError) {\n      const { name, symbol, ...rest } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: hexToString(trim(name, { dir: \"right\" })),\n        symbol: hexToString(trim(symbol, { dir: \"right\" })),\n        ...rest\n      };\n    }\n    throw err;\n  }\n}\n\n// src/actions/viem/getPublicClient.ts\nfunction getPublicClient({ chainId } = {}) {\n  const config2 = getConfig();\n  if (chainId)\n    return config2.getPublicClient({ chainId }) || config2.publicClient;\n  return config2.publicClient;\n}\n\n// src/actions/viem/getWalletClient.ts\nasync function getWalletClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  const walletClient = await config2.connector?.getWalletClient?.({ chainId }) || null;\n  return walletClient;\n}\n\n// src/actions/viem/getWebSocketPublicClient.ts\nfunction getWebSocketPublicClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  if (chainId)\n    return config2.getWebSocketPublicClient({ chainId }) || config2.webSocketPublicClient;\n  return config2.webSocketPublicClient;\n}\n\n// src/actions/viem/watchPublicClient.ts\nfunction watchPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getPublicClient(args));\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWalletClient.ts\nimport { shallow } from \"zustand/shallow\";\nfunction watchWalletClient({ chainId }, callback) {\n  const config2 = getConfig();\n  const handleChange = async ({ chainId: chainId_ }) => {\n    if (chainId && chainId_ && chainId !== chainId_)\n      return;\n    const walletClient = await getWalletClient({ chainId });\n    if (!getConfig().connector)\n      return callback(null);\n    return callback(walletClient);\n  };\n  const unsubscribe = config2.subscribe(\n    ({ data, connector }) => ({\n      account: data?.account,\n      chainId: data?.chain?.id,\n      connector\n    }),\n    handleChange,\n    {\n      equalityFn: shallow\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWebSocketPublicClient.ts\nfunction watchWebSocketPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getWebSocketPublicClient(args));\n  const unsubscribe = config2.subscribe(\n    ({ webSocketPublicClient }) => webSocketPublicClient,\n    handleChange\n  );\n  return unsubscribe;\n}\n\n// src/actions/contracts/prepareWriteContract.ts\nasync function prepareWriteContract({\n  abi,\n  address,\n  args,\n  chainId,\n  dataSuffix,\n  functionName,\n  walletClient: walletClient_,\n  ...config2\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const walletClient = walletClient_ ?? await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId });\n  const {\n    account,\n    accessList,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getCallParameters(config2);\n  const { result, request } = await publicClient.simulateContract({\n    abi,\n    address,\n    functionName,\n    args,\n    account: account || walletClient.account,\n    accessList,\n    blockNumber,\n    blockTag,\n    dataSuffix,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  });\n  const minimizedAbi = abi.filter(\n    (abiItem) => \"name\" in abiItem && abiItem.name === functionName\n  );\n  return {\n    mode: \"prepared\",\n    request: {\n      ...request,\n      abi: minimizedAbi,\n      chainId\n    },\n    result\n  };\n}\n\n// src/actions/contracts/getContract.ts\nimport { getContract as getContract_ } from \"viem\";\nfunction getContract({\n  address,\n  abi,\n  chainId,\n  walletClient\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return getContract_({\n    address,\n    abi,\n    publicClient,\n    walletClient\n  });\n}\n\n// src/actions/contracts/multicall.ts\nasync function multicall({\n  chainId,\n  contracts,\n  blockNumber,\n  blockTag,\n  ...args\n}) {\n  const publicClient = getPublicClient({ chainId });\n  if (!publicClient.chains)\n    throw new ConfigChainsNotFound();\n  if (chainId && publicClient.chain.id !== chainId)\n    throw new ChainNotConfiguredError({ chainId });\n  return publicClient.multicall({\n    allowFailure: args.allowFailure ?? true,\n    blockNumber,\n    blockTag,\n    contracts\n  });\n}\n\n// src/actions/contracts/readContract.ts\nasync function readContract({\n  address,\n  account,\n  chainId,\n  abi,\n  args,\n  functionName,\n  blockNumber,\n  blockTag\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.readContract({\n    abi,\n    address,\n    account,\n    functionName,\n    args,\n    blockNumber,\n    blockTag\n  });\n}\n\n// src/actions/contracts/readContracts.ts\nimport { ContractFunctionExecutionError as ContractFunctionExecutionError2 } from \"viem\";\nasync function readContracts({\n  contracts,\n  blockNumber,\n  blockTag,\n  ...args\n}) {\n  const { allowFailure = true } = args;\n  try {\n    const publicClient = getPublicClient();\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\n      const chainId = contract.chainId ?? publicClient.chain.id;\n      return {\n        ...contracts2,\n        [chainId]: [...contracts2[chainId] || [], { contract, index }]\n      };\n    }, {});\n    const promises = () => Object.entries(contractsByChainId).map(\n      ([chainId, contracts2]) => multicall({\n        allowFailure,\n        chainId: parseInt(chainId),\n        contracts: contracts2.map(\n          ({ contract }) => contract\n        ),\n        blockNumber,\n        blockTag\n      })\n    );\n    const multicallResults = (await Promise.all(promises())).flat();\n    const resultIndexes = Object.values(contractsByChainId).flatMap(\n      (contracts2) => contracts2.map(({ index }) => index)\n    );\n    return multicallResults.reduce((results, result, index) => {\n      if (results)\n        results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof ContractFunctionExecutionError2)\n      throw err;\n    const promises = () => contracts.map(\n      (contract) => readContract({ ...contract, blockNumber, blockTag })\n    );\n    if (allowFailure)\n      return (await Promise.allSettled(promises())).map((result) => {\n        if (result.status === \"fulfilled\")\n          return { result: result.value, status: \"success\" };\n        return { error: result.reason, result: void 0, status: \"failure\" };\n      });\n    return await Promise.all(promises());\n  }\n}\n\n// src/actions/contracts/watchContractEvent.ts\nimport { shallow as shallow2 } from \"zustand/shallow\";\nfunction watchContractEvent({\n  address,\n  abi,\n  chainId,\n  eventName\n}, callback) {\n  let unwatch;\n  const watchEvent = async () => {\n    if (unwatch)\n      unwatch();\n    const publicClient = getWebSocketPublicClient({ chainId }) || getPublicClient({ chainId });\n    unwatch = publicClient.watchContractEvent({\n      address,\n      abi,\n      eventName,\n      onLogs: callback\n    });\n  };\n  watchEvent();\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    watchEvent,\n    { equalityFn: shallow2 }\n  );\n  return () => {\n    unwatch?.();\n    unsubscribe();\n  };\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nimport { shallow as shallow3 } from \"zustand/shallow\";\nfunction watchBlockNumber(args, callback) {\n  let unwatch;\n  const createListener = (publicClient) => {\n    if (unwatch)\n      unwatch();\n    unwatch = publicClient.watchBlockNumber({\n      onBlockNumber: callback,\n      emitOnBegin: true,\n      poll: true\n    });\n  };\n  const publicClient_ = getWebSocketPublicClient({ chainId: args.chainId }) ?? getPublicClient({ chainId: args.chainId });\n  if (args.listen)\n    createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    async ({ publicClient, webSocketPublicClient }) => {\n      const publicClient_2 = webSocketPublicClient ?? publicClient;\n      if (args.listen && !args.chainId && publicClient_2) {\n        createListener(publicClient_2);\n      }\n    },\n    {\n      equalityFn: shallow3\n    }\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchMulticall.ts\nfunction watchMulticall(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await multicall(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContract.ts\nfunction watchReadContract(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContract(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContracts.ts\nfunction watchReadContracts(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContracts(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/writeContract.ts\nasync function writeContract(config2) {\n  const walletClient = await getWalletClient({ chainId: config2.chainId });\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  if (config2.chainId)\n    assertActiveChain({ chainId: config2.chainId });\n  let request;\n  if (config2.mode === \"prepared\") {\n    request = config2.request;\n  } else {\n    const { chainId: _, mode: __, ...args } = config2;\n    const res = await prepareWriteContract(args);\n    request = res.request;\n  }\n  const hash = await walletClient.writeContract({\n    ...request,\n    chain: config2.chainId ? { id: config2.chainId } : null\n  });\n  return { hash };\n}\n\n// src/actions/accounts/fetchBalance.ts\nasync function fetchBalance({\n  address,\n  chainId,\n  formatUnits: unit,\n  token\n}) {\n  const config2 = getConfig();\n  const publicClient = getPublicClient({ chainId });\n  if (token) {\n    const fetchContractBalance = async ({ abi }) => {\n      const erc20Config = { abi, address: token, chainId };\n      const [value2, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [\n          {\n            ...erc20Config,\n            functionName: \"balanceOf\",\n            args: [address]\n          },\n          { ...erc20Config, functionName: \"decimals\" },\n          { ...erc20Config, functionName: \"symbol\" }\n        ]\n      });\n      return {\n        decimals,\n        formatted: formatUnits2(value2 ?? \"0\", getUnit(unit ?? decimals)),\n        symbol,\n        value: value2\n      };\n    };\n    try {\n      return await fetchContractBalance({ abi: erc20ABI });\n    } catch (err) {\n      if (err instanceof ContractFunctionExecutionError3) {\n        const { symbol, ...rest } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: hexToString2(trim2(symbol, { dir: \"right\" })),\n          ...rest\n        };\n      }\n      throw err;\n    }\n  }\n  const chains = [\n    ...config2.publicClient.chains || [],\n    ...config2.chains ?? []\n  ];\n  const value = await publicClient.getBalance({ address });\n  const chain = chains.find((x) => x.id === publicClient.chain.id);\n  return {\n    decimals: chain?.nativeCurrency.decimals ?? 18,\n    formatted: formatUnits2(value ?? \"0\", getUnit(unit ?? 18)),\n    symbol: chain?.nativeCurrency.symbol ?? \"ETH\",\n    value\n  };\n}\n\n// src/actions/accounts/getAccount.ts\nfunction getAccount() {\n  const { data, connector, status } = getConfig();\n  switch (status) {\n    case \"connected\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"reconnecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: !!data?.account,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n    case \"connecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"disconnected\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\n// src/actions/accounts/getNetwork.ts\nfunction getNetwork() {\n  const config2 = getConfig();\n  const chainId = config2.data?.chain?.id;\n  const activeChains = config2.chains ?? [];\n  const activeChain = [\n    ...config2.publicClient?.chains || [],\n    ...activeChains\n  ].find((x) => x.id === chainId) ?? {\n    id: chainId,\n    name: `Chain ${chainId}`,\n    network: `${chainId}`,\n    nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n    rpcUrls: {\n      default: { http: [\"\"] },\n      public: { http: [\"\"] }\n    }\n  };\n  return {\n    chain: chainId ? {\n      ...activeChain,\n      ...config2.data?.chain,\n      id: chainId\n    } : void 0,\n    chains: activeChains\n  };\n}\n\n// src/actions/accounts/signMessage.ts\nasync function signMessage(args) {\n  const walletClient = await getWalletClient();\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  return await walletClient.signMessage({\n    message: args.message\n  });\n}\n\n// src/actions/accounts/signTypedData.ts\nasync function signTypedData({\n  domain,\n  message,\n  primaryType,\n  types\n}) {\n  const walletClient = await getWalletClient();\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  const { chainId } = domain;\n  if (chainId)\n    assertActiveChain({ chainId });\n  return walletClient.signTypedData({\n    message,\n    primaryType,\n    types,\n    domain\n  });\n}\n\n// src/actions/accounts/switchNetwork.ts\nasync function switchNetwork({\n  chainId\n}) {\n  const { connector } = getConfig();\n  if (!connector)\n    throw new ConnectorNotFoundError();\n  if (!connector.switchChain)\n    throw new SwitchChainNotSupportedError({\n      connector\n    });\n  return connector.switchChain(chainId);\n}\n\n// src/actions/accounts/watchAccount.ts\nimport { shallow as shallow4 } from \"zustand/shallow\";\nfunction watchAccount(callback, { selector = (x) => x } = {}) {\n  const config2 = getConfig();\n  const handleChange = () => callback(getAccount());\n  const unsubscribe = config2.subscribe(\n    ({ data, connector, status }) => selector({\n      address: data?.account,\n      connector,\n      status\n    }),\n    handleChange,\n    {\n      equalityFn: shallow4\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchNetwork.ts\nimport { shallow as shallow5 } from \"zustand/shallow\";\nfunction watchNetwork(callback, { selector = (x) => x } = {}) {\n  const config2 = getConfig();\n  const handleChange = () => callback(getNetwork());\n  const unsubscribe = config2.subscribe(\n    ({ data, chains }) => selector({ chainId: data?.chain?.id, chains }),\n    handleChange,\n    {\n      equalityFn: shallow5\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/ens/fetchEnsAddress.ts\nimport { getAddress } from \"viem\";\nasync function fetchEnsAddress({\n  chainId,\n  name\n}) {\n  const { normalize } = await import(\"viem/ens\");\n  const publicClient = getPublicClient({ chainId });\n  const address = await publicClient.getEnsAddress({\n    name: normalize(name)\n  });\n  try {\n    if (address === \"0x0000000000000000000000000000000000000000\")\n      return null;\n    return address ? getAddress(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\n// src/actions/ens/fetchEnsAvatar.ts\nasync function fetchEnsAvatar({\n  name,\n  chainId\n}) {\n  const { normalize } = await import(\"viem/ens\");\n  const publicClient = getPublicClient({ chainId });\n  const avatar = await publicClient.getEnsAvatar({ name: normalize(name) });\n  return avatar;\n}\n\n// src/actions/ens/fetchEnsName.ts\nimport { getAddress as getAddress2 } from \"viem\";\nasync function fetchEnsName({\n  address,\n  chainId\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.getEnsName({\n    address: getAddress2(address)\n  });\n}\n\n// src/actions/ens/fetchEnsResolver.ts\nasync function fetchEnsResolver({\n  chainId,\n  name\n}) {\n  const { normalize } = await import(\"viem/ens\");\n  const publicClient = getPublicClient({ chainId });\n  const resolver = await publicClient.getEnsResolver({ name: normalize(name) });\n  return resolver;\n}\n\n// src/actions/network-status/fetchBlockNumber.ts\nasync function fetchBlockNumber({\n  chainId\n} = {}) {\n  const publicClient = getPublicClient({ chainId });\n  const blockNumber = await publicClient.getBlockNumber();\n  return blockNumber;\n}\n\n// src/actions/network-status/fetchFeeData.ts\nimport { formatUnits as formatUnits3, parseGwei } from \"viem\";\nasync function fetchFeeData({\n  chainId,\n  formatUnits: units = \"gwei\"\n} = {}) {\n  const publicClient = getPublicClient({ chainId });\n  const block = await publicClient.getBlock();\n  let gasPrice = null;\n  try {\n    gasPrice = await publicClient.getGasPrice();\n  } catch {\n  }\n  let lastBaseFeePerGas = null;\n  let maxFeePerGas = null;\n  let maxPriorityFeePerGas = null;\n  if (block?.baseFeePerGas) {\n    lastBaseFeePerGas = block.baseFeePerGas;\n    maxPriorityFeePerGas = parseGwei(\"1\");\n    maxFeePerGas = block.baseFeePerGas * 2n + maxPriorityFeePerGas;\n  }\n  const unit = getUnit(units);\n  const formatted = {\n    gasPrice: gasPrice ? formatUnits3(gasPrice, unit) : null,\n    maxFeePerGas: maxFeePerGas ? formatUnits3(maxFeePerGas, unit) : null,\n    maxPriorityFeePerGas: maxPriorityFeePerGas ? formatUnits3(maxPriorityFeePerGas, unit) : null\n  };\n  return {\n    lastBaseFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    formatted\n  };\n}\n\n// src/actions/transactions/fetchTransaction.ts\nasync function fetchTransaction({\n  chainId,\n  hash\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.getTransaction({ hash });\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nimport { isAddress } from \"viem\";\nasync function prepareSendTransaction({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas: gas_,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  to: to_,\n  value,\n  walletClient: walletClient_\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const walletClient = walletClient_ ?? await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId });\n  const to = (to_ && !isAddress(to_) ? await fetchEnsAddress({ name: to_ }) : to_) || void 0;\n  if (to && !isAddress(to))\n    throw new Error(\"Invalid address\");\n  const gas = typeof gas_ === \"undefined\" ? await publicClient.estimateGas({\n    accessList,\n    account: walletClient.account,\n    data,\n    gas: gas_ ?? void 0,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value\n  }) : gas_ || void 0;\n  return {\n    accessList,\n    account,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode: \"prepared\",\n    nonce,\n    to,\n    value,\n    ...chainId ? { chainId } : {}\n  };\n}\n\n// src/actions/transactions/sendTransaction.ts\nasync function sendTransaction({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value\n}) {\n  const walletClient = await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId });\n  let args;\n  if (mode === \"prepared\") {\n    args = {\n      account,\n      accessList,\n      chain: null,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    };\n  } else {\n    args = await prepareSendTransaction({\n      accessList,\n      account,\n      chainId,\n      data,\n      gas: gas || null,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    });\n  }\n  const hash = await walletClient.sendTransaction({\n    ...args,\n    chain: chainId ? { id: chainId } : null\n  });\n  return { hash };\n}\n\n// src/actions/transactions/waitForTransaction.ts\nimport { hexToString as hexToString3 } from \"viem\";\nasync function waitForTransaction({\n  chainId,\n  confirmations = 1,\n  hash,\n  onReplaced,\n  timeout = 0\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const receipt = await publicClient.waitForTransactionReceipt({\n    hash,\n    confirmations,\n    onReplaced,\n    timeout\n  });\n  if (receipt.status === \"reverted\") {\n    const txn = await publicClient.getTransaction({\n      hash: receipt.transactionHash\n    });\n    const code = await publicClient.call({\n      ...txn,\n      gasPrice: txn.type !== \"eip1559\" ? txn.gasPrice : void 0,\n      maxFeePerGas: txn.type === \"eip1559\" ? txn.maxFeePerGas : void 0,\n      maxPriorityFeePerGas: txn.type === \"eip1559\" ? txn.maxPriorityFeePerGas : void 0\n    });\n    const reason = hexToString3(`0x${code.substring(138)}`);\n    throw new Error(reason);\n  }\n  return receipt;\n}\n\n// src/actions/transactions/watchPendingTransactions.ts\nimport { shallow as shallow6 } from \"zustand/shallow\";\nfunction watchPendingTransactions(args, callback) {\n  let unwatch;\n  const createListener = (publicClient) => {\n    if (unwatch)\n      unwatch();\n    unwatch = publicClient.watchPendingTransactions({\n      onTransactions: callback,\n      poll: true\n    });\n  };\n  const publicClient_ = getWebSocketPublicClient({ chainId: args.chainId }) ?? getPublicClient({ chainId: args.chainId });\n  createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    async ({ publicClient, webSocketPublicClient }) => {\n      const publicClient_2 = webSocketPublicClient ?? publicClient;\n      if (!args.chainId && publicClient_2) {\n        createListener(publicClient_2);\n      }\n    },\n    {\n      equalityFn: shallow6\n    }\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/utils/assertActiveChain.ts\nfunction assertActiveChain({ chainId }) {\n  const { chain: activeChain, chains } = getNetwork();\n  const activeChainId = activeChain?.id;\n  if (activeChainId && chainId !== activeChainId) {\n    throw new ChainMismatchError({\n      activeChain: chains.find((x) => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\n      targetChain: chains.find((x) => x.id === chainId)?.name ?? `Chain ${chainId}`\n    });\n  }\n}\n\nexport {\n  configureChains,\n  ChainMismatchError,\n  ChainNotConfiguredError,\n  ConnectorAlreadyConnectedError,\n  ConfigChainsNotFound,\n  SwitchChainNotSupportedError,\n  ConnectorNotFoundError,\n  deepEqual,\n  deserialize,\n  getCallParameters,\n  getSendTransactionParameters,\n  getUnit,\n  serialize,\n  noopStorage,\n  createStorage,\n  Config,\n  createConfig,\n  getConfig,\n  connect,\n  disconnect,\n  erc20ABI,\n  erc721ABI,\n  erc4626ABI,\n  fetchToken,\n  getPublicClient,\n  getWalletClient,\n  getWebSocketPublicClient,\n  watchPublicClient,\n  watchWalletClient,\n  watchWebSocketPublicClient,\n  prepareWriteContract,\n  getContract,\n  multicall,\n  readContract,\n  readContracts,\n  watchContractEvent,\n  watchBlockNumber,\n  watchMulticall,\n  watchReadContract,\n  watchReadContracts,\n  writeContract,\n  fetchBalance,\n  getAccount,\n  getNetwork,\n  signMessage,\n  signTypedData,\n  switchNetwork,\n  watchAccount,\n  watchNetwork,\n  fetchEnsAddress,\n  fetchEnsAvatar,\n  fetchEnsName,\n  fetchEnsResolver,\n  fetchBlockNumber,\n  fetchFeeData,\n  fetchTransaction,\n  prepareSendTransaction,\n  sendTransaction,\n  waitForTransaction,\n  watchPendingTransactions\n};\n","\"use client\";\n\n// src/config.ts\nimport { createSyncStoragePersister } from \"@tanstack/query-sync-storage-persister\";\nimport { QueryClient } from \"@tanstack/react-query\";\nimport { persistQueryClient } from \"@tanstack/react-query-persist-client\";\nimport {\n  createConfig as createCoreConfig,\n  createStorage,\n  noopStorage\n} from \"@wagmi/core\";\nfunction createConfig({\n  queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        cacheTime: 1e3 * 60 * 60 * 24,\n        networkMode: \"offlineFirst\",\n        refetchOnWindowFocus: false,\n        retry: 0\n      },\n      mutations: {\n        networkMode: \"offlineFirst\"\n      }\n    }\n  }),\n  storage = createStorage({\n    storage: typeof window !== \"undefined\" && window.localStorage ? window.localStorage : noopStorage\n  }),\n  persister = typeof window !== \"undefined\" ? createSyncStoragePersister({\n    key: \"cache\",\n    storage,\n    serialize: (x) => x,\n    deserialize: (x) => x\n  }) : void 0,\n  ...args\n}) {\n  const config = createCoreConfig({\n    ...args,\n    storage\n  });\n  if (persister)\n    persistQueryClient({\n      queryClient,\n      persister,\n      dehydrateOptions: {\n        shouldDehydrateQuery: (query) => query.cacheTime !== 0 && query.queryKey[0].persist !== false\n      }\n    });\n  return Object.assign(config, { queryClient });\n}\n\n// src/context.ts\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport * as React from \"react\";\nvar Context = React.createContext(void 0);\nvar queryClientContext = React.createContext(\n  void 0\n);\nfunction WagmiConfig({\n  children,\n  config\n}) {\n  return React.createElement(Context.Provider, {\n    children: React.createElement(QueryClientProvider, {\n      children,\n      client: config.queryClient,\n      context: queryClientContext\n    }),\n    value: config\n  });\n}\nfunction useConfig() {\n  const config = React.useContext(Context);\n  if (!config)\n    throw new Error(\n      [\n        \"`useConfig` must be used within `WagmiConfig`.\\n\",\n        \"Read more: https://wagmi.sh/react/WagmiConfig\"\n      ].join(\"\\n\")\n    );\n  return config;\n}\n\n// src/hooks/accounts/useAccount.ts\nimport { getAccount, watchAccount } from \"@wagmi/core\";\nimport * as React9 from \"react\";\n\n// src/hooks/utils/query/useBaseQuery.ts\nimport {\n  notifyManager,\n  useIsRestoring,\n  useQueryClient,\n  useQueryErrorResetBoundary\n} from \"@tanstack/react-query\";\nimport * as React2 from \"react\";\n\n// src/hooks/utils/useSyncExternalStore.ts\nimport * as pkg from \"use-sync-external-store/shim/index.js\";\nvar useSyncExternalStore2 = pkg.useSyncExternalStore;\n\n// src/hooks/utils/query/utils.ts\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (typeof ctor === \"undefined\") {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n  if (typeof arg2 === \"function\") {\n    return { ...arg3, queryKey: arg1, queryFn: arg2 };\n  }\n  return { ...arg2, queryKey: arg1 };\n}\nfunction queryKeyHashFn(queryKey17) {\n  return JSON.stringify(\n    queryKey17,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : typeof val === \"bigint\" ? val.toString() : val\n  );\n}\nfunction shouldThrowError(_useErrorBoundary, params) {\n  if (typeof _useErrorBoundary === \"function\") {\n    return _useErrorBoundary(...params);\n  }\n  return !!_useErrorBoundary;\n}\nfunction trackResult(result, observer) {\n  const trackedResult = {};\n  Object.keys(result).forEach((key) => {\n    Object.defineProperty(trackedResult, key, {\n      configurable: false,\n      enumerable: true,\n      get: () => {\n        observer.trackedProps.add(key);\n        return result[key];\n      }\n    });\n  });\n  return trackedResult;\n}\n\n// src/hooks/utils/query/useBaseQuery.ts\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({ context: options.context });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions({\n    ...options,\n    queryKeyHashFn\n  });\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(\n      defaultedOptions.onError\n    );\n  }\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(\n      defaultedOptions.onSuccess\n    );\n  }\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(\n      defaultedOptions.onSettled\n    );\n  }\n  if (defaultedOptions.suspense) {\n    if (typeof defaultedOptions.staleTime !== \"number\") {\n      defaultedOptions.staleTime = 1e3;\n    }\n  }\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n  const [observer] = React2.useState(\n    () => new Observer(\n      queryClient,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore2(\n    React2.useCallback(\n      (onStoreChange) => isRestoring ? () => void 0 : observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer, isRestoring]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React2.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n  React2.useEffect(() => {\n    observer.setOptions(defaultedOptions, { listeners: false });\n  }, [defaultedOptions, observer]);\n  if (defaultedOptions.suspense && result.isLoading && result.isFetching && !isRestoring) {\n    throw observer.fetchOptimistic(defaultedOptions).then(({ data }) => {\n      defaultedOptions.onSuccess?.(data);\n      defaultedOptions.onSettled?.(data, null);\n    }).catch((error) => {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError?.(error);\n      defaultedOptions.onSettled?.(void 0, error);\n    });\n  }\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.useErrorBoundary, [\n    result.error,\n    observer.getCurrentQuery()\n  ])) {\n    throw result.error;\n  }\n  const status = result.status === \"loading\" && result.fetchStatus === \"idle\" ? \"idle\" : result.status;\n  const isIdle = status === \"idle\";\n  const isLoading = status === \"loading\" && result.fetchStatus === \"fetching\";\n  return {\n    ...result,\n    defaultedOptions,\n    isIdle,\n    isLoading,\n    observer,\n    status\n  };\n}\n\n// src/hooks/utils/query/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/react-query\";\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery(\n    { context: queryClientContext, ...parsedOptions },\n    InfiniteQueryObserver\n  );\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchNextPage: baseQuery.fetchNextPage,\n    fetchStatus: baseQuery.fetchStatus,\n    hasNextPage: baseQuery.hasNextPage,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n    isFetching: baseQuery.isFetching,\n    isFetchingNextPage: baseQuery.isFetchingNextPage,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  };\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\n// src/hooks/utils/query/useMutation.ts\nimport {\n  parseMutationArgs,\n  useMutation as useMutation_\n} from \"@tanstack/react-query\";\nfunction useMutation(arg1, arg2, arg3) {\n  const options = parseMutationArgs(arg1, arg2, arg3);\n  return useMutation_({ context: queryClientContext, ...options });\n}\n\n// src/hooks/utils/query/useQuery.ts\nimport { QueryObserver } from \"@tanstack/react-query\";\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery({ context: queryClientContext, ...parsedOptions }, QueryObserver);\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchStatus: baseQuery.fetchStatus,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n    isFetching: baseQuery.isFetching,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  };\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\n// src/hooks/utils/query/useQueryClient.ts\nimport { useQueryClient as useQueryClient_ } from \"@tanstack/react-query\";\nvar useQueryClient2 = () => useQueryClient_({ context: queryClientContext });\n\n// src/hooks/viem/usePublicClient.ts\nimport { getPublicClient, watchPublicClient } from \"@wagmi/core\";\nimport { useSyncExternalStoreWithSelector } from \"use-sync-external-store/shim/with-selector.js\";\nfunction usePublicClient({\n  chainId\n} = {}) {\n  return useSyncExternalStoreWithSelector(\n    (cb) => watchPublicClient({ chainId }, cb),\n    () => getPublicClient({ chainId }),\n    () => getPublicClient({ chainId }),\n    (x) => x,\n    (a, b) => a.uid === b.uid\n  );\n}\n\n// src/hooks/viem/useWalletClient.ts\nimport { getWalletClient, watchWalletClient } from \"@wagmi/core\";\nimport * as React3 from \"react\";\nfunction queryKey({ chainId }) {\n  return [{ entity: \"walletClient\", chainId, persist: false }];\n}\nfunction queryFn({\n  queryKey: [{ chainId }]\n}) {\n  return getWalletClient({ chainId });\n}\nfunction useWalletClient({\n  chainId: chainId_,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const { connector } = useAccount();\n  const chainId = useChainId({ chainId: chainId_ });\n  const walletClientQuery = useQuery(queryKey({ chainId }), queryFn, {\n    cacheTime: 0,\n    enabled: Boolean(connector),\n    staleTime: Infinity,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const queryClient = useQueryClient2();\n  React3.useEffect(() => {\n    const unwatch = watchWalletClient({ chainId }, (walletClient) => {\n      if (walletClient)\n        queryClient.invalidateQueries(queryKey({ chainId }));\n      else\n        queryClient.removeQueries(queryKey({ chainId }));\n    });\n    return unwatch;\n  }, [queryClient, chainId]);\n  return walletClientQuery;\n}\n\n// src/hooks/viem/useWebSocketPublicClient.ts\nimport {\n  getWebSocketPublicClient,\n  watchWebSocketPublicClient\n} from \"@wagmi/core\";\nimport { useSyncExternalStoreWithSelector as useSyncExternalStoreWithSelector2 } from \"use-sync-external-store/shim/with-selector.js\";\nfunction useWebSocketPublicClient({ chainId } = {}) {\n  return useSyncExternalStoreWithSelector2(\n    (cb) => watchWebSocketPublicClient({ chainId }, cb),\n    () => getWebSocketPublicClient({ chainId }),\n    () => getWebSocketPublicClient({ chainId }),\n    (x) => x,\n    (a, b) => a?.uid === b?.uid\n  );\n}\n\n// src/hooks/utils/useChainId.ts\nfunction useChainId({ chainId } = {}) {\n  const publicClient = usePublicClient({ chainId });\n  return publicClient.chain.id;\n}\n\n// src/hooks/utils/useForceUpdate.ts\nimport * as React4 from \"react\";\nfunction useForceUpdate() {\n  const [, forceUpdate] = React4.useReducer((x) => x + 1, 0);\n  return forceUpdate;\n}\n\n// src/hooks/utils/useInvalidateOnBlock.ts\nimport * as React7 from \"react\";\n\n// src/hooks/network-status/useBlockNumber.ts\nimport { fetchBlockNumber } from \"@wagmi/core\";\nimport * as React5 from \"react\";\nfunction queryKey2({ chainId, scopeKey }) {\n  return [{ entity: \"blockNumber\", chainId, scopeKey }];\n}\nfunction queryFn2({\n  queryKey: [{ chainId }]\n}) {\n  return fetchBlockNumber({ chainId });\n}\nfunction useBlockNumber({\n  cacheTime = 0,\n  chainId: chainId_,\n  enabled = true,\n  scopeKey,\n  staleTime,\n  suspense,\n  watch = false,\n  onBlock,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const publicClient = usePublicClient({ chainId });\n  const webSocketPublicClient = useWebSocketPublicClient({ chainId });\n  const queryClient = useQueryClient2();\n  React5.useEffect(() => {\n    if (!enabled)\n      return;\n    if (!watch && !onBlock)\n      return;\n    const publicClient_ = webSocketPublicClient ?? publicClient;\n    const unwatch = publicClient_.watchBlockNumber({\n      onBlockNumber: (blockNumber) => {\n        if (watch)\n          queryClient.setQueryData(queryKey2({ chainId, scopeKey }), blockNumber);\n        if (onBlock)\n          onBlock(blockNumber);\n      },\n      emitOnBegin: true\n    });\n    return unwatch;\n  }, [\n    chainId,\n    scopeKey,\n    onBlock,\n    publicClient,\n    queryClient,\n    watch,\n    webSocketPublicClient,\n    enabled\n  ]);\n  return useQuery(queryKey2({ scopeKey, chainId }), queryFn2, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/network-status/useFeeData.ts\nimport { fetchFeeData } from \"@wagmi/core\";\nimport * as React6 from \"react\";\nfunction queryKey3({\n  chainId,\n  formatUnits,\n  scopeKey\n}) {\n  return [{ entity: \"feeData\", chainId, formatUnits, scopeKey }];\n}\nfunction queryFn3({\n  queryKey: [{ chainId, formatUnits }]\n}) {\n  return fetchFeeData({ chainId, formatUnits });\n}\nfunction useFeeData({\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  formatUnits = \"gwei\",\n  scopeKey,\n  staleTime,\n  suspense,\n  watch,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const queryKey_ = React6.useMemo(\n    () => queryKey3({\n      chainId,\n      formatUnits,\n      scopeKey\n    }),\n    [chainId, formatUnits, scopeKey]\n  );\n  const feeDataQuery = useQuery(queryKey_, queryFn3, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch),\n    queryKey: queryKey_\n  });\n  return feeDataQuery;\n}\n\n// src/hooks/utils/useInvalidateOnBlock.ts\nfunction useInvalidateOnBlock({\n  chainId,\n  enabled,\n  queryKey: queryKey17\n}) {\n  const queryClient = useQueryClient2();\n  const onBlock = React7.useCallback(\n    () => queryClient.invalidateQueries({ queryKey: queryKey17 }, { cancelRefetch: false }),\n    [queryClient, queryKey17]\n  );\n  useBlockNumber({\n    chainId,\n    enabled,\n    onBlock: enabled ? onBlock : void 0,\n    scopeKey: enabled ? void 0 : \"idle\"\n  });\n}\n\n// src/hooks/utils/useSyncExternalStoreWithTracked.ts\nimport { deepEqual } from \"@wagmi/core\";\nimport * as React8 from \"react\";\nimport { useSyncExternalStoreWithSelector as useSyncExternalStoreWithSelector3 } from \"use-sync-external-store/shim/with-selector.js\";\nvar isPlainObject2 = (obj) => typeof obj === \"object\" && !Array.isArray(obj);\nfunction useSyncExternalStoreWithTracked(subscribe, getSnapshot, getServerSnapshot = getSnapshot, isEqual = deepEqual) {\n  const trackedKeys = React8.useRef([]);\n  const result = useSyncExternalStoreWithSelector3(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot,\n    (x) => x,\n    (a, b) => {\n      if (isPlainObject2(a) && isPlainObject2(b) && trackedKeys.current.length) {\n        for (const key of trackedKeys.current) {\n          const equal = isEqual(\n            a[key],\n            b[key]\n          );\n          if (!equal)\n            return false;\n        }\n        return true;\n      }\n      return isEqual(a, b);\n    }\n  );\n  if (isPlainObject2(result)) {\n    const trackedResult = { ...result };\n    Object.defineProperties(\n      trackedResult,\n      Object.entries(trackedResult).reduce(\n        (res, [key, value]) => {\n          return {\n            ...res,\n            [key]: {\n              configurable: false,\n              enumerable: true,\n              get: () => {\n                if (!trackedKeys.current.includes(key)) {\n                  trackedKeys.current.push(key);\n                }\n                return value;\n              }\n            }\n          };\n        },\n        {}\n      )\n    );\n    return trackedResult;\n  }\n  return result;\n}\n\n// src/hooks/accounts/useAccount.ts\nfunction useAccount({ onConnect, onDisconnect } = {}) {\n  const config = useConfig();\n  const watchAccount_ = React9.useCallback(\n    (callback) => watchAccount(callback),\n    [config]\n  );\n  const account = useSyncExternalStoreWithTracked(watchAccount_, getAccount);\n  const previousAccountRef = React9.useRef();\n  const previousAccount = previousAccountRef.current;\n  React9.useEffect(() => {\n    if (previousAccount?.status !== \"connected\" && account.status === \"connected\") {\n      onConnect?.({\n        address: account.address,\n        connector: account.connector,\n        isReconnected: previousAccount?.status === \"reconnecting\" || previousAccount?.status === void 0\n      });\n    }\n    if (previousAccount?.status === \"connected\" && account.status === \"disconnected\") {\n      onDisconnect?.();\n    }\n    previousAccountRef.current = account;\n  }, [onConnect, onDisconnect, previousAccount, account]);\n  return account;\n}\n\n// src/hooks/accounts/useBalance.ts\nimport { fetchBalance } from \"@wagmi/core\";\nimport * as React10 from \"react\";\nfunction queryKey4({\n  address,\n  chainId,\n  formatUnits,\n  scopeKey,\n  token\n}) {\n  return [\n    {\n      entity: \"balance\",\n      address,\n      chainId,\n      formatUnits,\n      scopeKey,\n      token\n    }\n  ];\n}\nfunction queryFn4({\n  queryKey: [{ address, chainId, formatUnits, token }]\n}) {\n  if (!address)\n    throw new Error(\"address is required\");\n  return fetchBalance({ address, chainId, formatUnits, token });\n}\nfunction useBalance({\n  address,\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  formatUnits,\n  scopeKey,\n  staleTime,\n  suspense,\n  token,\n  watch,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const queryKey_ = React10.useMemo(\n    () => queryKey4({ address, chainId, formatUnits, scopeKey, token }),\n    [address, chainId, formatUnits, scopeKey, token]\n  );\n  const balanceQuery = useQuery(queryKey_, queryFn4, {\n    cacheTime,\n    enabled: Boolean(enabled && address),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch && address),\n    queryKey: queryKey_\n  });\n  return balanceQuery;\n}\n\n// src/hooks/accounts/useConnect.ts\nimport { connect } from \"@wagmi/core\";\nimport * as React11 from \"react\";\nvar mutationKey = (args) => [{ entity: \"connect\", ...args }];\nvar mutationFn = (args) => {\n  const { connector, chainId } = args;\n  if (!connector)\n    throw new Error(\"connector is required\");\n  return connect({ connector, chainId });\n};\nfunction useConnect({\n  chainId,\n  connector,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const config = useConfig();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey({ connector, chainId }), mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const connect2 = React11.useCallback(\n    (args) => {\n      return mutate({\n        chainId: args?.chainId ?? chainId,\n        connector: args?.connector ?? connector\n      });\n    },\n    [chainId, connector, mutate]\n  );\n  const connectAsync = React11.useCallback(\n    (args) => {\n      return mutateAsync({\n        chainId: args?.chainId ?? chainId,\n        connector: args?.connector ?? connector\n      });\n    },\n    [chainId, connector, mutateAsync]\n  );\n  return {\n    connect: connect2,\n    connectAsync,\n    connectors: config.connectors,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingConnector: variables?.connector,\n    reset,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useDisconnect.ts\nimport { disconnect } from \"@wagmi/core\";\nvar mutationKey2 = [{ entity: \"disconnect\" }];\nvar mutationFn2 = () => disconnect();\nfunction useDisconnect({\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate: disconnect2,\n    mutateAsync: disconnectAsync,\n    reset,\n    status\n  } = useMutation(mutationKey2, mutationFn2, {\n    ...onError ? {\n      onError(error2, _variables, context) {\n        onError(error2, context);\n      }\n    } : {},\n    onMutate,\n    ...onSettled ? {\n      onSettled(_data, error2, _variables, context) {\n        onSettled(error2, context);\n      }\n    } : {},\n    ...onSuccess ? {\n      onSuccess(_data, _variables, context) {\n        onSuccess(context);\n      }\n    } : {}\n  });\n  return {\n    disconnect: disconnect2,\n    disconnectAsync,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status\n  };\n}\n\n// src/hooks/accounts/useNetwork.ts\nimport { getNetwork, watchNetwork } from \"@wagmi/core\";\nimport { useCallback as useCallback5 } from \"react\";\nfunction useNetwork() {\n  const config = useConfig();\n  const watchNetwork_ = useCallback5(\n    (callback) => watchNetwork(callback),\n    [config]\n  );\n  return useSyncExternalStoreWithTracked(watchNetwork_, getNetwork);\n}\n\n// src/hooks/accounts/useSignMessage.ts\nimport { signMessage } from \"@wagmi/core\";\nimport * as React12 from \"react\";\nvar mutationKey3 = (args) => [{ entity: \"signMessage\", ...args }];\nvar mutationFn3 = (args) => {\n  const { message } = args;\n  if (!message)\n    throw new Error(\"message is required\");\n  return signMessage({ message });\n};\nfunction useSignMessage({\n  message,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey3({ message }), mutationFn3, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signMessage2 = React12.useCallback(\n    (args) => mutate(args || { message }),\n    [message, mutate]\n  );\n  const signMessageAsync = React12.useCallback(\n    (args) => mutateAsync(args || { message }),\n    [message, mutateAsync]\n  );\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signMessage: signMessage2,\n    signMessageAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useSignTypedData.ts\nimport { signTypedData } from \"@wagmi/core\";\nimport * as React13 from \"react\";\nfunction mutationKey4({ domain, types, message, primaryType }) {\n  return [\n    { entity: \"signTypedData\", domain, types, message, primaryType }\n  ];\n}\nfunction mutationFn4(args) {\n  const { domain, types, primaryType, message } = args;\n  if (!domain)\n    throw new Error(\"domain is required\");\n  if (!types)\n    throw new Error(\"types is required\");\n  if (!primaryType)\n    throw new Error(\"primaryType is required\");\n  if (!message)\n    throw new Error(\"message is required\");\n  return signTypedData({\n    domain,\n    message,\n    primaryType,\n    types\n  });\n}\nfunction useSignTypedData({\n  domain,\n  types,\n  message,\n  primaryType,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(\n    mutationKey4({\n      domain,\n      message,\n      primaryType,\n      types\n    }),\n    mutationFn4,\n    {\n      onError,\n      onMutate,\n      onSettled,\n      onSuccess\n    }\n  );\n  const signTypedData2 = React13.useCallback(\n    (args) => mutate({\n      domain: args?.domain ?? domain,\n      types: args?.types ?? types,\n      message: args?.message ?? message,\n      primaryType: args?.primaryType ?? primaryType\n    }),\n    [domain, types, primaryType, message, mutate]\n  );\n  const signTypedDataAsync = React13.useCallback(\n    (args) => mutateAsync({\n      domain: args?.domain ?? domain,\n      types: args?.types ?? types,\n      message: args?.message ?? message,\n      primaryType: args?.primaryType ?? primaryType\n    }),\n    [domain, types, primaryType, message, mutateAsync]\n  );\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signTypedData: signTypedData2,\n    signTypedDataAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useSwitchNetwork.ts\nimport { switchNetwork } from \"@wagmi/core\";\nimport * as React14 from \"react\";\nvar mutationKey5 = (args) => [{ entity: \"switchNetwork\", ...args }];\nvar mutationFn5 = (args) => {\n  const { chainId } = args;\n  if (!chainId)\n    throw new Error(\"chainId is required\");\n  return switchNetwork({ chainId });\n};\nfunction useSwitchNetwork({\n  chainId,\n  throwForSwitchChainNotSupported,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const config = useConfig();\n  const forceUpdate = useForceUpdate();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey5({ chainId }), mutationFn5, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const switchNetwork_ = React14.useCallback(\n    (chainId_) => mutate({ chainId: chainId_ ?? chainId }),\n    [chainId, mutate]\n  );\n  const switchNetworkAsync_ = React14.useCallback(\n    (chainId_) => mutateAsync({ chainId: chainId_ ?? chainId }),\n    [chainId, mutateAsync]\n  );\n  React14.useEffect(() => {\n    const unwatch = config.subscribe(\n      ({ chains, connector }) => ({\n        chains,\n        connector\n      }),\n      forceUpdate\n    );\n    return unwatch;\n  }, [config, forceUpdate]);\n  let switchNetwork2;\n  let switchNetworkAsync;\n  const supportsSwitchChain = !!config.connector?.switchChain;\n  if (throwForSwitchChainNotSupported || supportsSwitchChain) {\n    switchNetwork2 = switchNetwork_;\n    switchNetworkAsync = switchNetworkAsync_;\n  }\n  return {\n    chains: config.chains ?? [],\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingChainId: variables?.chainId,\n    reset,\n    status,\n    switchNetwork: switchNetwork2,\n    switchNetworkAsync,\n    variables\n  };\n}\n\n// src/hooks/contracts/useContractEvent.ts\nimport * as React15 from \"react\";\nfunction useContractEvent({\n  address,\n  chainId,\n  abi,\n  listener,\n  eventName\n} = {}) {\n  const publicClient = usePublicClient({ chainId });\n  const webSocketPublicClient = useWebSocketPublicClient({ chainId });\n  const unwatch = React15.useRef();\n  React15.useEffect(() => {\n    if (!abi || !address || !eventName)\n      return;\n    const publicClient_ = webSocketPublicClient || publicClient;\n    unwatch.current = publicClient_.watchContractEvent({\n      abi,\n      address,\n      eventName,\n      onLogs: listener\n    });\n    return unwatch.current;\n  }, [abi, address, eventName, publicClient.uid, webSocketPublicClient?.uid]);\n  return unwatch.current;\n}\n\n// src/hooks/contracts/useContractInfiniteReads.ts\nimport { replaceEqualDeep } from \"@tanstack/react-query\";\nimport { deepEqual as deepEqual2, readContracts } from \"@wagmi/core\";\nimport * as React16 from \"react\";\nfunction queryKey5({\n  allowFailure,\n  blockNumber,\n  blockTag,\n  cacheKey,\n  scopeKey\n}) {\n  return [\n    {\n      entity: \"readContractsInfinite\",\n      allowFailure,\n      blockNumber,\n      blockTag,\n      cacheKey,\n      scopeKey\n    }\n  ];\n}\nfunction queryFn5({\n  contracts\n}) {\n  return ({\n    queryKey: [{ allowFailure, blockNumber, blockTag }],\n    pageParam\n  }) => {\n    return readContracts({\n      allowFailure,\n      blockNumber,\n      blockTag,\n      contracts: contracts(pageParam || void 0)\n    });\n  };\n}\nfunction useContractInfiniteReads({\n  allowFailure,\n  blockNumber,\n  blockTag,\n  cacheKey,\n  cacheTime,\n  contracts,\n  enabled: enabled_ = true,\n  getNextPageParam,\n  isDataEqual,\n  keepPreviousData,\n  onError,\n  onSettled,\n  onSuccess,\n  scopeKey,\n  select,\n  staleTime,\n  structuralSharing = (oldData, newData) => deepEqual2(oldData, newData) ? oldData : replaceEqualDeep(oldData, newData),\n  suspense\n}) {\n  const queryKey_ = React16.useMemo(\n    () => queryKey5({ allowFailure, blockNumber, blockTag, cacheKey, scopeKey }),\n    [allowFailure, blockNumber, blockTag, cacheKey, scopeKey]\n  );\n  const enabled = React16.useMemo(() => {\n    const enabled2 = Boolean(enabled_ && contracts);\n    return enabled2;\n  }, [contracts, enabled_]);\n  return useInfiniteQuery(queryKey_, queryFn5({ contracts }), {\n    cacheTime,\n    enabled,\n    getNextPageParam,\n    isDataEqual,\n    keepPreviousData,\n    select,\n    staleTime,\n    structuralSharing,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\nfunction paginatedIndexesConfig(fn, {\n  perPage,\n  start,\n  direction\n}) {\n  const contracts = (page = 0) => [...Array(perPage).keys()].map((index) => {\n    return direction === \"increment\" ? start + index + page * perPage : start - index - page * perPage;\n  }).filter((index) => index >= 0).flatMap(fn);\n  return {\n    contracts,\n    getNextPageParam(lastPage, pages) {\n      return lastPage?.length === perPage ? pages.length : void 0;\n    }\n  };\n}\n\n// src/hooks/contracts/useContractRead.ts\nimport { replaceEqualDeep as replaceEqualDeep2 } from \"@tanstack/react-query\";\nimport { deepEqual as deepEqual3, readContract } from \"@wagmi/core\";\nimport * as React17 from \"react\";\nfunction queryKey6({\n  account,\n  address,\n  args,\n  blockNumber,\n  blockTag,\n  chainId,\n  functionName,\n  scopeKey\n}) {\n  return [\n    {\n      entity: \"readContract\",\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      functionName,\n      scopeKey\n    }\n  ];\n}\nfunction queryFn6({ abi }) {\n  return async ({\n    queryKey: [\n      { account, address, args, blockNumber, blockTag, chainId, functionName }\n    ]\n  }) => {\n    if (!abi)\n      throw new Error(\"abi is required\");\n    if (!address)\n      throw new Error(\"address is required\");\n    return await readContract({\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      abi,\n      functionName\n    }) ?? null;\n  };\n}\nfunction useContractRead({\n  abi,\n  address,\n  account,\n  args,\n  blockNumber: blockNumberOverride,\n  blockTag,\n  cacheOnBlock = false,\n  cacheTime,\n  chainId: chainId_,\n  enabled: enabled_ = true,\n  functionName,\n  isDataEqual,\n  keepPreviousData,\n  onError,\n  onSettled,\n  onSuccess,\n  scopeKey,\n  select,\n  staleTime,\n  structuralSharing = (oldData, newData) => deepEqual3(oldData, newData) ? oldData : replaceEqualDeep2(oldData, newData),\n  suspense,\n  watch\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const { data: blockNumber_ } = useBlockNumber({\n    chainId,\n    enabled: watch || cacheOnBlock,\n    scopeKey: watch || cacheOnBlock ? void 0 : \"idle\",\n    watch\n  });\n  const blockNumber = blockNumberOverride ?? blockNumber_;\n  const queryKey_ = React17.useMemo(\n    () => queryKey6({\n      account,\n      address,\n      args,\n      blockNumber: cacheOnBlock ? blockNumber : void 0,\n      blockTag,\n      chainId,\n      functionName,\n      scopeKey\n    }),\n    [\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      cacheOnBlock,\n      chainId,\n      functionName,\n      scopeKey\n    ]\n  );\n  const enabled = React17.useMemo(() => {\n    let enabled2 = Boolean(enabled_ && abi && address && functionName);\n    if (cacheOnBlock)\n      enabled2 = Boolean(enabled2 && blockNumber);\n    return enabled2;\n  }, [abi, address, blockNumber, cacheOnBlock, enabled_, functionName]);\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch && !cacheOnBlock),\n    queryKey: queryKey_\n  });\n  return useQuery(\n    queryKey_,\n    queryFn6({\n      abi\n    }),\n    {\n      cacheTime,\n      enabled,\n      isDataEqual,\n      keepPreviousData,\n      select,\n      staleTime,\n      structuralSharing,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n}\n\n// src/hooks/contracts/useContractReads.ts\nimport { replaceEqualDeep as replaceEqualDeep3 } from \"@tanstack/react-query\";\nimport { deepEqual as deepEqual4, readContracts as readContracts2 } from \"@wagmi/core\";\nimport * as React18 from \"react\";\nfunction queryKey7({\n  allowFailure,\n  blockNumber,\n  blockTag,\n  chainId,\n  contracts,\n  scopeKey\n}) {\n  return [\n    {\n      entity: \"readContracts\",\n      allowFailure,\n      blockNumber,\n      blockTag,\n      chainId,\n      scopeKey,\n      contracts: (contracts ?? []).map(({ address, args, chainId: chainId2, functionName }) => ({\n        address,\n        args,\n        chainId: chainId2,\n        functionName\n      }))\n    }\n  ];\n}\nfunction queryFn7({ abis }) {\n  return ({\n    queryKey: [{ allowFailure, blockNumber, blockTag, contracts: contracts_ }]\n  }) => {\n    const contracts = contracts_.map((contract, i) => ({\n      ...contract,\n      abi: abis[i]\n    }));\n    return readContracts2({\n      allowFailure,\n      contracts,\n      blockNumber,\n      blockTag\n    });\n  };\n}\nfunction useContractReads({\n  allowFailure: allowFailure_,\n  blockNumber: blockNumberOverride,\n  blockTag,\n  cacheOnBlock = false,\n  cacheTime,\n  contracts,\n  enabled: enabled_ = true,\n  isDataEqual,\n  keepPreviousData,\n  onError,\n  onSettled,\n  onSuccess,\n  scopeKey,\n  select,\n  staleTime,\n  structuralSharing = (oldData, newData) => deepEqual4(oldData, newData) ? oldData : replaceEqualDeep3(oldData, newData),\n  suspense,\n  watch\n} = {}) {\n  const allowFailure = allowFailure_ ?? true;\n  const { data: blockNumber_ } = useBlockNumber({\n    enabled: watch || cacheOnBlock,\n    watch\n  });\n  const chainId = useChainId();\n  const blockNumber = blockNumberOverride ?? blockNumber_;\n  const queryKey_ = React18.useMemo(\n    () => queryKey7({\n      allowFailure,\n      blockNumber: cacheOnBlock ? blockNumber : void 0,\n      blockTag,\n      chainId,\n      contracts,\n      scopeKey\n    }),\n    [\n      allowFailure,\n      blockNumber,\n      blockTag,\n      cacheOnBlock,\n      chainId,\n      scopeKey,\n      contracts\n    ]\n  );\n  const enabled = React18.useMemo(() => {\n    let enabled2 = Boolean(\n      enabled_ && contracts?.every(\n        (x) => x.abi && x.address && x.functionName\n      )\n    );\n    if (cacheOnBlock)\n      enabled2 = Boolean(enabled2 && blockNumber);\n    return enabled2;\n  }, [blockNumber, cacheOnBlock, contracts, enabled_]);\n  useInvalidateOnBlock({\n    enabled: Boolean(enabled && watch && !cacheOnBlock),\n    queryKey: queryKey_\n  });\n  const abis = (contracts ?? []).map(\n    ({ abi }) => abi\n  );\n  return useQuery(queryKey_, queryFn7({ abis }), {\n    cacheTime,\n    enabled,\n    isDataEqual,\n    keepPreviousData,\n    staleTime,\n    select,\n    structuralSharing,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/contracts/useContractWrite.ts\nimport { writeContract } from \"@wagmi/core\";\nimport { getSendTransactionParameters } from \"@wagmi/core/internal\";\nimport * as React19 from \"react\";\nfunction mutationKey6({\n  address,\n  abi,\n  functionName,\n  ...config\n}) {\n  const {\n    args,\n    accessList,\n    account,\n    dataSuffix,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    request,\n    value\n  } = config;\n  return [\n    {\n      entity: \"writeContract\",\n      address,\n      args,\n      abi,\n      accessList,\n      account,\n      dataSuffix,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      request,\n      value\n    }\n  ];\n}\nfunction mutationFn6(config) {\n  if (config.mode === \"prepared\") {\n    if (!config.request)\n      throw new Error(\"request is required\");\n    return writeContract({\n      mode: \"prepared\",\n      request: config.request\n    });\n  }\n  if (!config.address)\n    throw new Error(\"address is required\");\n  if (!config.abi)\n    throw new Error(\"abi is required\");\n  if (!config.functionName)\n    throw new Error(\"functionName is required\");\n  return writeContract({\n    address: config.address,\n    args: config.args,\n    chainId: config.chainId,\n    abi: config.abi,\n    functionName: config.functionName,\n    accessList: config.accessList,\n    account: config.account,\n    dataSuffix: config.dataSuffix,\n    gas: config.gas,\n    gasPrice: config.gasPrice,\n    maxFeePerGas: config.maxFeePerGas,\n    maxPriorityFeePerGas: config.maxPriorityFeePerGas,\n    nonce: config.nonce,\n    value: config.value\n  });\n}\nfunction useContractWrite(config) {\n  const {\n    address,\n    abi,\n    args,\n    chainId,\n    functionName,\n    mode,\n    request,\n    dataSuffix\n  } = config;\n  const {\n    accessList,\n    account,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getSendTransactionParameters(config);\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(\n    mutationKey6({\n      address,\n      abi,\n      functionName,\n      chainId,\n      mode,\n      args,\n      accessList,\n      account,\n      dataSuffix,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      request,\n      value\n    }),\n    mutationFn6,\n    {\n      onError: config.onError,\n      onMutate: config.onMutate,\n      onSettled: config.onSettled,\n      onSuccess: config.onSuccess\n    }\n  );\n  const write = React19.useMemo(() => {\n    if (config.mode === \"prepared\") {\n      if (!request)\n        return void 0;\n      return () => mutate({\n        mode: \"prepared\",\n        request: config.request,\n        chainId: config.chainId\n      });\n    }\n    return (overrideConfig) => mutate({\n      address,\n      args,\n      abi,\n      functionName,\n      chainId,\n      accessList,\n      account,\n      dataSuffix,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      ...overrideConfig\n    });\n  }, [\n    accessList,\n    account,\n    abi,\n    address,\n    args,\n    chainId,\n    config.chainId,\n    config.mode,\n    config.request,\n    dataSuffix,\n    functionName,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mutate,\n    nonce,\n    request,\n    value\n  ]);\n  const writeAsync = React19.useMemo(() => {\n    if (config.mode === \"prepared\") {\n      if (!request)\n        return void 0;\n      return () => mutateAsync({\n        mode: \"prepared\",\n        request: config.request\n      });\n    }\n    return (overrideConfig) => mutateAsync({\n      address,\n      args,\n      abi,\n      chainId,\n      functionName,\n      accessList,\n      account,\n      dataSuffix,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      ...overrideConfig\n    });\n  }, [\n    accessList,\n    account,\n    abi,\n    address,\n    args,\n    chainId,\n    config.mode,\n    config.request,\n    dataSuffix,\n    functionName,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mutateAsync,\n    nonce,\n    request,\n    value\n  ]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    write,\n    writeAsync\n  };\n}\n\n// src/hooks/contracts/usePrepareContractWrite.ts\nimport { prepareWriteContract } from \"@wagmi/core\";\nimport { getCallParameters } from \"@wagmi/core/internal\";\nfunction queryKey8({\n  accessList,\n  account,\n  activeChainId,\n  args,\n  address,\n  blockNumber,\n  blockTag,\n  chainId,\n  dataSuffix,\n  functionName,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  scopeKey,\n  walletClientAddress,\n  value\n}) {\n  return [\n    {\n      entity: \"prepareContractTransaction\",\n      accessList,\n      account,\n      activeChainId,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      dataSuffix,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      scopeKey,\n      walletClientAddress,\n      value\n    }\n  ];\n}\nfunction queryFn8({\n  abi,\n  walletClient\n}) {\n  return ({\n    queryKey: [\n      {\n        accessList,\n        account,\n        args,\n        address,\n        blockNumber,\n        blockTag,\n        chainId,\n        dataSuffix,\n        functionName,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        value\n      }\n    ]\n  }) => {\n    if (!abi)\n      throw new Error(\"abi is required\");\n    if (!address)\n      throw new Error(\"address is required\");\n    if (!functionName)\n      throw new Error(\"functionName is required\");\n    return prepareWriteContract({\n      abi,\n      accessList,\n      account,\n      args,\n      address,\n      blockNumber,\n      blockTag,\n      chainId,\n      dataSuffix,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      walletClient,\n      value\n    });\n  };\n}\nfunction usePrepareContractWrite({\n  address,\n  abi,\n  functionName,\n  chainId,\n  args,\n  cacheTime,\n  dataSuffix,\n  enabled = true,\n  scopeKey,\n  staleTime,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess,\n  ...config\n} = {}) {\n  const { chain: activeChain } = useNetwork();\n  const { data: walletClient } = useWalletClient({ chainId });\n  const {\n    accessList,\n    account,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getCallParameters(config);\n  const prepareContractWriteQuery = useQuery(\n    queryKey8({\n      accessList,\n      account,\n      activeChainId: activeChain?.id,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      dataSuffix,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      scopeKey,\n      walletClientAddress: walletClient?.account.address,\n      value\n    }),\n    queryFn8({\n      abi,\n      walletClient\n    }),\n    {\n      cacheTime,\n      enabled: Boolean(\n        enabled && abi && address && functionName && walletClient\n      ),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n  return Object.assign(prepareContractWriteQuery, {\n    config: {\n      chainId,\n      mode: \"prepared\",\n      request: void 0,\n      ...prepareContractWriteQuery.data\n    }\n  });\n}\n\n// src/hooks/contracts/useToken.ts\nimport { fetchToken } from \"@wagmi/core\";\nfunction queryKey9({\n  address,\n  chainId,\n  formatUnits,\n  scopeKey\n}) {\n  return [{ entity: \"token\", address, chainId, formatUnits, scopeKey }];\n}\nfunction queryFn9({\n  queryKey: [{ address, chainId, formatUnits }]\n}) {\n  if (!address)\n    throw new Error(\"address is required\");\n  return fetchToken({ address, chainId, formatUnits });\n}\nfunction useToken({\n  address,\n  chainId: chainId_,\n  formatUnits = \"ether\",\n  cacheTime,\n  enabled = true,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(\n    queryKey9({ address, chainId, formatUnits, scopeKey }),\n    queryFn9,\n    {\n      cacheTime,\n      enabled: Boolean(enabled && address),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n}\n\n// src/hooks/ens/useEnsAddress.ts\nimport { fetchEnsAddress } from \"@wagmi/core\";\nfunction queryKey10({ chainId, name, scopeKey }) {\n  return [{ entity: \"ensAddress\", chainId, name, scopeKey }];\n}\nfunction queryFn10({\n  queryKey: [{ chainId, name }]\n}) {\n  if (!name)\n    throw new Error(\"name is required\");\n  return fetchEnsAddress({ chainId, name });\n}\nfunction useEnsAddress({\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  name,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey10({ chainId, name, scopeKey }), queryFn10, {\n    cacheTime,\n    enabled: Boolean(enabled && chainId && name),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsAvatar.ts\nimport { fetchEnsAvatar } from \"@wagmi/core\";\nfunction queryKey11({ name, chainId, scopeKey }) {\n  return [{ entity: \"ensAvatar\", name, chainId, scopeKey }];\n}\nfunction queryFn11({\n  queryKey: [{ name, chainId }]\n}) {\n  if (!name)\n    throw new Error(\"name is required\");\n  return fetchEnsAvatar({ name, chainId });\n}\nfunction useEnsAvatar({\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  name,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey11({ name, chainId, scopeKey }), queryFn11, {\n    cacheTime,\n    enabled: Boolean(enabled && name && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsName.ts\nimport { fetchEnsName } from \"@wagmi/core\";\nfunction queryKey12({\n  address,\n  chainId,\n  scopeKey\n}) {\n  return [{ entity: \"ensName\", address, chainId, scopeKey }];\n}\nfunction queryFn12({\n  queryKey: [{ address, chainId }]\n}) {\n  if (!address)\n    throw new Error(\"address is required\");\n  return fetchEnsName({ address, chainId });\n}\nfunction useEnsName({\n  address,\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey12({ address, chainId, scopeKey }), queryFn12, {\n    cacheTime,\n    enabled: Boolean(enabled && address && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsResolver.ts\nimport { fetchEnsResolver } from \"@wagmi/core\";\nfunction queryKey13({ chainId, name, scopeKey }) {\n  return [\n    { entity: \"ensResolver\", chainId, name, scopeKey, persist: false }\n  ];\n}\nfunction queryFn13({\n  queryKey: [{ chainId, name }]\n}) {\n  if (!name)\n    throw new Error(\"name is required\");\n  return fetchEnsResolver({ chainId, name });\n}\nfunction useEnsResolver({\n  chainId: chainId_,\n  name,\n  enabled = true,\n  scopeKey,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey13({ chainId, name, scopeKey }), queryFn13, {\n    cacheTime: 0,\n    enabled: Boolean(enabled && chainId && name),\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/transactions/usePrepareSendTransaction.ts\nimport { prepareSendTransaction } from \"@wagmi/core\";\nfunction queryKey14({\n  accessList,\n  account,\n  activeChainId,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  to,\n  value,\n  scopeKey,\n  walletClientAddress\n}) {\n  return [\n    {\n      entity: \"prepareSendTransaction\",\n      activeChainId,\n      accessList,\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      scopeKey,\n      walletClientAddress\n    }\n  ];\n}\nfunction queryFn14({ walletClient }) {\n  return ({\n    queryKey: [\n      {\n        accessList,\n        account,\n        chainId,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        value\n      }\n    ]\n  }) => {\n    if (!to)\n      throw new Error(\"to is required\");\n    return prepareSendTransaction({\n      accessList,\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      walletClient\n    });\n  };\n}\nfunction usePrepareSendTransaction({\n  accessList,\n  account,\n  chainId,\n  cacheTime,\n  data,\n  enabled = true,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  scopeKey,\n  staleTime,\n  suspense,\n  to,\n  value,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const { chain: activeChain } = useNetwork();\n  const { data: walletClient } = useWalletClient({ chainId });\n  const prepareSendTransactionQuery = useQuery(\n    queryKey14({\n      accessList,\n      activeChainId: activeChain?.id,\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      scopeKey,\n      to,\n      value,\n      walletClientAddress: walletClient?.account.address\n    }),\n    queryFn14({ walletClient }),\n    {\n      cacheTime,\n      enabled: Boolean(enabled && walletClient && to),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n  return Object.assign(prepareSendTransactionQuery, {\n    config: {\n      mode: \"prepared\",\n      ...prepareSendTransactionQuery.isSuccess ? prepareSendTransactionQuery.data : void 0\n    }\n  });\n}\n\n// src/hooks/transactions/useSendTransaction.ts\nimport { sendTransaction } from \"@wagmi/core\";\nimport * as React20 from \"react\";\nvar mutationKey7 = (args) => [{ entity: \"sendTransaction\", ...args }];\nvar mutationFn7 = ({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value\n}) => {\n  if (!to)\n    throw new Error(\"to is required.\");\n  return sendTransaction({\n    accessList,\n    account,\n    chainId,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode,\n    nonce,\n    to,\n    value\n  });\n};\nfunction useSendTransaction({\n  accessList,\n  account,\n  chainId,\n  data: data_,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(\n    mutationKey7({\n      accessList,\n      account,\n      chainId,\n      data: data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      nonce,\n      to,\n      value\n    }),\n    mutationFn7,\n    {\n      onError,\n      onMutate,\n      onSettled,\n      onSuccess\n    }\n  );\n  const sendTransaction2 = React20.useCallback(\n    (args) => mutate({\n      chainId,\n      mode,\n      ...args || {\n        accessList,\n        account,\n        chainId,\n        data: data_,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        mode,\n        nonce,\n        value,\n        to\n      }\n    }),\n    [\n      accessList,\n      account,\n      chainId,\n      data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      mutate,\n      nonce,\n      to,\n      value\n    ]\n  );\n  const sendTransactionAsync = React20.useCallback(\n    (args) => mutateAsync({\n      chainId,\n      mode,\n      ...args || {\n        accessList,\n        account,\n        chainId,\n        data: data_,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        mode,\n        nonce,\n        value,\n        to\n      }\n    }),\n    [\n      accessList,\n      account,\n      chainId,\n      data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      mutateAsync,\n      nonce,\n      to,\n      value\n    ]\n  );\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    sendTransaction: mode === \"prepared\" && !to ? void 0 : sendTransaction2,\n    sendTransactionAsync: mode === \"prepared\" && !to ? void 0 : sendTransactionAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/transactions/useTransaction.ts\nimport { fetchTransaction } from \"@wagmi/core\";\nfunction queryKey15({ chainId, hash, scopeKey }) {\n  return [{ entity: \"transaction\", chainId, hash, scopeKey }];\n}\nfunction queryFn15({\n  queryKey: [{ chainId, hash }]\n}) {\n  if (!hash)\n    throw new Error(\"hash is required\");\n  return fetchTransaction({ chainId, hash });\n}\nfunction useTransaction({\n  cacheTime = 0,\n  chainId: chainId_,\n  enabled = true,\n  hash,\n  scopeKey,\n  staleTime,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey15({ chainId, hash, scopeKey }), queryFn15, {\n    cacheTime,\n    enabled: Boolean(enabled && hash),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/transactions/useWaitForTransaction.ts\nimport { waitForTransaction } from \"@wagmi/core\";\nfunction queryKey16({\n  confirmations,\n  chainId,\n  hash,\n  scopeKey,\n  timeout\n}) {\n  return [\n    {\n      entity: \"waitForTransaction\",\n      confirmations,\n      chainId,\n      hash,\n      scopeKey,\n      timeout\n    }\n  ];\n}\nfunction queryFn16({\n  onReplaced\n}) {\n  return ({\n    queryKey: [{ chainId, confirmations, hash, timeout }]\n  }) => {\n    if (!hash)\n      throw new Error(\"hash is required\");\n    return waitForTransaction({\n      chainId,\n      confirmations,\n      hash,\n      onReplaced,\n      timeout\n    });\n  };\n}\nfunction useWaitForTransaction({\n  chainId: chainId_,\n  confirmations,\n  hash,\n  timeout,\n  cacheTime,\n  enabled = true,\n  scopeKey,\n  staleTime,\n  suspense,\n  onError,\n  onReplaced,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(\n    queryKey16({ chainId, confirmations, hash, scopeKey, timeout }),\n    queryFn16({ onReplaced }),\n    {\n      cacheTime,\n      enabled: Boolean(enabled && hash),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n}\n\n// src/hooks/transactions/useWatchPendingTransactions.ts\nimport * as React21 from \"react\";\nfunction useWatchPendingTransactions({\n  chainId: chainId_,\n  enabled = true,\n  listener\n}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const publicClient = usePublicClient({ chainId });\n  const webSocketPublicClient = useWebSocketPublicClient({ chainId });\n  React21.useEffect(() => {\n    if (!enabled)\n      return;\n    const publicClient_ = webSocketPublicClient ?? publicClient;\n    return publicClient_.watchPendingTransactions({\n      onTransactions: listener\n    });\n  }, [enabled, listener, publicClient, webSocketPublicClient]);\n}\n\n// src/index.ts\nimport {\n  ChainMismatchError,\n  ChainNotConfiguredError,\n  Connector,\n  ConnectorAlreadyConnectedError,\n  ConnectorNotFoundError,\n  ConfigChainsNotFound,\n  SwitchChainNotSupportedError,\n  configureChains,\n  createStorage as createStorage2,\n  deepEqual as deepEqual5,\n  deserialize,\n  erc20ABI,\n  erc721ABI,\n  erc4626ABI,\n  readContracts as readContracts3,\n  serialize\n} from \"@wagmi/core\";\nimport { mainnet, sepolia } from \"viem/chains\";\nexport {\n  ChainMismatchError,\n  ChainNotConfiguredError,\n  ConfigChainsNotFound,\n  Connector,\n  ConnectorAlreadyConnectedError,\n  ConnectorNotFoundError,\n  Context,\n  SwitchChainNotSupportedError,\n  WagmiConfig,\n  configureChains,\n  createConfig,\n  createStorage2 as createStorage,\n  deepEqual5 as deepEqual,\n  deserialize,\n  erc20ABI,\n  erc4626ABI,\n  erc721ABI,\n  mainnet,\n  paginatedIndexesConfig,\n  readContracts3 as readContracts,\n  sepolia,\n  serialize,\n  useAccount,\n  useBalance,\n  useBlockNumber,\n  useChainId,\n  useConfig,\n  useConnect,\n  useContractEvent,\n  useContractInfiniteReads,\n  useContractRead,\n  useContractReads,\n  useContractWrite,\n  useDisconnect,\n  useEnsAddress,\n  useEnsAvatar,\n  useEnsName,\n  useEnsResolver,\n  useFeeData,\n  useInfiniteQuery,\n  useMutation,\n  useNetwork,\n  usePrepareContractWrite,\n  usePrepareSendTransaction,\n  usePublicClient,\n  useQuery,\n  useQueryClient2 as useQueryClient,\n  useSendTransaction,\n  useSignMessage,\n  useSignTypedData,\n  useSwitchNetwork,\n  useToken,\n  useTransaction,\n  useWaitForTransaction,\n  useWalletClient,\n  useWatchPendingTransactions,\n  useWebSocketPublicClient\n};\n","import \"../chunk-MQXBDTVK.js\";\n\n// src/providers/public.ts\nfunction publicProvider() {\n  return function(chain) {\n    if (!chain.rpcUrls.public.http[0])\n      return null;\n    return {\n      chain,\n      rpcUrls: chain.rpcUrls.public\n    };\n  };\n}\nexport {\n  publicProvider\n};\n","import {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk-W65LBPLT.js\";\n\n// src/walletConnect.ts\nimport { normalizeNamespaces } from \"@walletconnect/utils\";\nimport {\n  SwitchChainError,\n  UserRejectedRequestError,\n  createWalletClient,\n  custom,\n  getAddress,\n  numberToHex\n} from \"viem\";\nvar NAMESPACE = \"eip155\";\nvar STORE_KEY = \"store\";\nvar REQUESTED_CHAINS_KEY = \"requestedChains\";\nvar ADD_ETH_CHAIN_METHOD = \"wallet_addEthereumChain\";\nvar _provider, _initProviderPromise, _createProvider, createProvider_fn, _initProvider, initProvider_fn, _isChainsStale, isChainsStale_fn, _setupListeners, setupListeners_fn, _removeListeners, removeListeners_fn, _setRequestedChainsIds, setRequestedChainsIds_fn, _getRequestedChainsIds, getRequestedChainsIds_fn, _getNamespaceChainsIds, getNamespaceChainsIds_fn, _getNamespaceMethods, getNamespaceMethods_fn;\nvar WalletConnectConnector = class extends Connector {\n  constructor(config) {\n    super({\n      ...config,\n      options: { isNewChainsStale: true, ...config.options }\n    });\n    __privateAdd(this, _createProvider);\n    __privateAdd(this, _initProvider);\n    __privateAdd(this, _isChainsStale);\n    __privateAdd(this, _setupListeners);\n    __privateAdd(this, _removeListeners);\n    __privateAdd(this, _setRequestedChainsIds);\n    __privateAdd(this, _getRequestedChainsIds);\n    __privateAdd(this, _getNamespaceChainsIds);\n    __privateAdd(this, _getNamespaceMethods);\n    this.id = \"walletConnect\";\n    this.name = \"WalletConnect\";\n    this.ready = true;\n    __privateAdd(this, _provider, void 0);\n    __privateAdd(this, _initProviderPromise, void 0);\n    this.onAccountsChanged = (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: getAddress(accounts[0]) });\n    };\n    this.onChainChanged = (chainId) => {\n      const id = Number(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    };\n    this.onDisconnect = () => {\n      __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, []);\n      this.emit(\"disconnect\");\n    };\n    this.onDisplayUri = (uri) => {\n      this.emit(\"message\", { type: \"display_uri\", data: uri });\n    };\n    this.onConnect = () => {\n      this.emit(\"connect\", {});\n    };\n    __privateMethod(this, _createProvider, createProvider_fn).call(this);\n  }\n  async connect({ chainId, pairingTopic } = {}) {\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const store = this.storage?.getItem(STORE_KEY);\n        const lastUsedChainId = store?.state?.data?.chain?.id;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId))\n          targetChainId = lastUsedChainId;\n        else\n          targetChainId = this.chains[0]?.id;\n      }\n      if (!targetChainId)\n        throw new Error(\"No chains found on connector.\");\n      const provider = await this.getProvider();\n      __privateMethod(this, _setupListeners, setupListeners_fn).call(this);\n      const isChainsStale = __privateMethod(this, _isChainsStale, isChainsStale_fn).call(this);\n      if (provider.session && isChainsStale)\n        await provider.disconnect();\n      if (!provider.session || isChainsStale) {\n        const optionalChains = this.chains.filter((chain) => chain.id !== targetChainId).map((optionalChain) => optionalChain.id);\n        this.emit(\"message\", { type: \"connecting\" });\n        await provider.connect({\n          pairingTopic,\n          optionalChains: [targetChainId, ...optionalChains]\n        });\n        __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, this.chains.map(({ id: id2 }) => id2));\n      }\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      return {\n        account,\n        chain: { id, unsupported }\n      };\n    } catch (error) {\n      if (/user rejected/i.test(error?.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    try {\n      await provider.disconnect();\n    } catch (error) {\n      if (!/No matching key/i.test(error.message))\n        throw error;\n    } finally {\n      __privateMethod(this, _removeListeners, removeListeners_fn).call(this);\n      __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, []);\n    }\n  }\n  async getAccount() {\n    const { accounts } = await this.getProvider();\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const { chainId } = await this.getProvider();\n    return chainId;\n  }\n  async getProvider({ chainId } = {}) {\n    if (!__privateGet(this, _provider))\n      await __privateMethod(this, _createProvider, createProvider_fn).call(this);\n    if (chainId)\n      await this.switchChain(chainId);\n    return __privateGet(this, _provider);\n  }\n  async getWalletClient({\n    chainId\n  } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider({ chainId }),\n      this.getAccount()\n    ]);\n    const chain = this.chains.find((x) => x.id === chainId);\n    if (!provider)\n      throw new Error(\"provider is required.\");\n    return createWalletClient({\n      account,\n      chain,\n      transport: custom(provider)\n    });\n  }\n  async isAuthorized() {\n    try {\n      const [account, provider] = await Promise.all([\n        this.getAccount(),\n        this.getProvider()\n      ]);\n      const isChainsStale = __privateMethod(this, _isChainsStale, isChainsStale_fn).call(this);\n      if (!account)\n        return false;\n      if (isChainsStale && provider.session) {\n        try {\n          await provider.disconnect();\n        } catch {\n        }\n        return false;\n      }\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const chain = this.chains.find((chain2) => chain2.id === chainId);\n    if (!chain)\n      throw new SwitchChainError(new Error(\"chain not found on connector.\"));\n    try {\n      const provider = await this.getProvider();\n      const namespaceChains = __privateMethod(this, _getNamespaceChainsIds, getNamespaceChainsIds_fn).call(this);\n      const namespaceMethods = __privateMethod(this, _getNamespaceMethods, getNamespaceMethods_fn).call(this);\n      const isChainApproved = namespaceChains.includes(chainId);\n      if (!isChainApproved && namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) {\n        await provider.request({\n          method: ADD_ETH_CHAIN_METHOD,\n          params: [\n            {\n              chainId: numberToHex(chain.id),\n              blockExplorerUrls: [chain.blockExplorers?.default?.url],\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [...chain.rpcUrls.default.http]\n            }\n          ]\n        });\n        const requestedChains = __privateMethod(this, _getRequestedChainsIds, getRequestedChainsIds_fn).call(this);\n        requestedChains.push(chainId);\n        __privateMethod(this, _setRequestedChainsIds, setRequestedChainsIds_fn).call(this, requestedChains);\n      }\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: numberToHex(chainId) }]\n      });\n      return chain;\n    } catch (error) {\n      const message = typeof error === \"string\" ? error : error?.message;\n      if (/user rejected request/i.test(message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n};\n_provider = new WeakMap();\n_initProviderPromise = new WeakMap();\n_createProvider = new WeakSet();\ncreateProvider_fn = async function() {\n  if (!__privateGet(this, _initProviderPromise) && typeof window !== \"undefined\") {\n    __privateSet(this, _initProviderPromise, __privateMethod(this, _initProvider, initProvider_fn).call(this));\n  }\n  return __privateGet(this, _initProviderPromise);\n};\n_initProvider = new WeakSet();\ninitProvider_fn = async function() {\n  const { EthereumProvider } = await import(\"@walletconnect/ethereum-provider\");\n  const optionalChains = this.chains.map(({ id }) => id);\n  if (optionalChains.length) {\n    const {\n      projectId,\n      showQrModal = true,\n      qrModalOptions,\n      metadata,\n      relayUrl\n    } = this.options;\n    __privateSet(this, _provider, await EthereumProvider.init({\n      showQrModal,\n      qrModalOptions,\n      projectId,\n      optionalChains,\n      rpcMap: Object.fromEntries(\n        this.chains.map((chain) => [\n          chain.id,\n          chain.rpcUrls.default.http[0]\n        ])\n      ),\n      metadata,\n      relayUrl\n    }));\n  }\n};\n_isChainsStale = new WeakSet();\nisChainsStale_fn = function() {\n  const namespaceMethods = __privateMethod(this, _getNamespaceMethods, getNamespaceMethods_fn).call(this);\n  if (namespaceMethods.includes(ADD_ETH_CHAIN_METHOD))\n    return false;\n  if (!this.options.isNewChainsStale)\n    return false;\n  const requestedChains = __privateMethod(this, _getRequestedChainsIds, getRequestedChainsIds_fn).call(this);\n  const connectorChains = this.chains.map(({ id }) => id);\n  const namespaceChains = __privateMethod(this, _getNamespaceChainsIds, getNamespaceChainsIds_fn).call(this);\n  if (namespaceChains.length && !namespaceChains.some((id) => connectorChains.includes(id)))\n    return false;\n  return !connectorChains.every((id) => requestedChains.includes(id));\n};\n_setupListeners = new WeakSet();\nsetupListeners_fn = function() {\n  if (!__privateGet(this, _provider))\n    return;\n  __privateMethod(this, _removeListeners, removeListeners_fn).call(this);\n  __privateGet(this, _provider).on(\"accountsChanged\", this.onAccountsChanged);\n  __privateGet(this, _provider).on(\"chainChanged\", this.onChainChanged);\n  __privateGet(this, _provider).on(\"disconnect\", this.onDisconnect);\n  __privateGet(this, _provider).on(\"session_delete\", this.onDisconnect);\n  __privateGet(this, _provider).on(\"display_uri\", this.onDisplayUri);\n  __privateGet(this, _provider).on(\"connect\", this.onConnect);\n};\n_removeListeners = new WeakSet();\nremoveListeners_fn = function() {\n  if (!__privateGet(this, _provider))\n    return;\n  __privateGet(this, _provider).removeListener(\"accountsChanged\", this.onAccountsChanged);\n  __privateGet(this, _provider).removeListener(\"chainChanged\", this.onChainChanged);\n  __privateGet(this, _provider).removeListener(\"disconnect\", this.onDisconnect);\n  __privateGet(this, _provider).removeListener(\"session_delete\", this.onDisconnect);\n  __privateGet(this, _provider).removeListener(\"display_uri\", this.onDisplayUri);\n  __privateGet(this, _provider).removeListener(\"connect\", this.onConnect);\n};\n_setRequestedChainsIds = new WeakSet();\nsetRequestedChainsIds_fn = function(chains) {\n  this.storage?.setItem(REQUESTED_CHAINS_KEY, chains);\n};\n_getRequestedChainsIds = new WeakSet();\ngetRequestedChainsIds_fn = function() {\n  return this.storage?.getItem(REQUESTED_CHAINS_KEY) ?? [];\n};\n_getNamespaceChainsIds = new WeakSet();\ngetNamespaceChainsIds_fn = function() {\n  if (!__privateGet(this, _provider))\n    return [];\n  const namespaces = __privateGet(this, _provider).session?.namespaces;\n  if (!namespaces)\n    return [];\n  const normalizedNamespaces = normalizeNamespaces(namespaces);\n  const chainIds = normalizedNamespaces[NAMESPACE]?.chains?.map(\n    (chain) => parseInt(chain.split(\":\")[1] || \"\")\n  );\n  return chainIds ?? [];\n};\n_getNamespaceMethods = new WeakSet();\ngetNamespaceMethods_fn = function() {\n  if (!__privateGet(this, _provider))\n    return [];\n  const namespaces = __privateGet(this, _provider).session?.namespaces;\n  if (!namespaces)\n    return [];\n  const normalizedNamespaces = normalizeNamespaces(namespaces);\n  const methods = normalizedNamespaces[NAMESPACE]?.methods;\n  return methods ?? [];\n};\nexport {\n  WalletConnectConnector\n};\n","import {\n  ChainNotConfiguredForConnectorError\n} from \"./chunk-UGBGYVBH.js\";\nimport {\n  normalizeChainId\n} from \"./chunk-OQILYQDO.js\";\nimport {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateSet\n} from \"./chunk-W65LBPLT.js\";\n\n// src/coinbaseWallet.ts\nimport {\n  SwitchChainError,\n  UserRejectedRequestError,\n  createWalletClient,\n  custom,\n  getAddress,\n  numberToHex\n} from \"viem\";\nvar _client, _provider;\nvar CoinbaseWalletConnector = class extends Connector {\n  constructor({ chains, options }) {\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n    this.id = \"coinbaseWallet\";\n    this.name = \"Coinbase Wallet\";\n    this.ready = true;\n    __privateAdd(this, _client, void 0);\n    __privateAdd(this, _provider, void 0);\n    this.onAccountsChanged = (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: getAddress(accounts[0]) });\n    };\n    this.onChainChanged = (chainId) => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    };\n    this.onDisconnect = () => {\n      this.emit(\"disconnect\");\n    };\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n      this.emit(\"message\", { type: \"connecting\" });\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      return {\n        account,\n        chain: { id, unsupported }\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(\n        error.message\n      ))\n        throw new UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    if (!__privateGet(this, _provider))\n      return;\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    if (!__privateGet(this, _provider)) {\n      let CoinbaseWalletSDK = (await import(\"@coinbase/wallet-sdk\")).default;\n      if (typeof CoinbaseWalletSDK !== \"function\" && typeof CoinbaseWalletSDK.default === \"function\")\n        CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n      __privateSet(this, _client, new CoinbaseWalletSDK(this.options));\n      class WalletProvider {\n      }\n      class Client {\n      }\n      const walletExtensionChainId = __privateGet(this, _client).walletExtension?.getChainId();\n      const chain = this.chains.find(\n        (chain2) => this.options.chainId ? chain2.id === this.options.chainId : chain2.id === walletExtensionChainId\n      ) || this.chains[0];\n      const chainId = this.options.chainId || chain?.id;\n      const jsonRpcUrl = this.options.jsonRpcUrl || chain?.rpcUrls.default.http[0];\n      __privateSet(this, _provider, __privateGet(this, _client).makeWeb3Provider(jsonRpcUrl, chainId));\n    }\n    return __privateGet(this, _provider);\n  }\n  async getWalletClient({\n    chainId\n  } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider(),\n      this.getAccount()\n    ]);\n    const chain = this.chains.find((x) => x.id === chainId);\n    if (!provider)\n      throw new Error(\"provider is required.\");\n    return createWalletClient({\n      account,\n      chain,\n      transport: custom(provider)\n    });\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = numberToHex(chainId);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: id }]\n      });\n      return this.chains.find((x) => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\n      };\n    } catch (error) {\n      const chain = this.chains.find((x) => x.id === chainId);\n      if (!chain)\n        throw new ChainNotConfiguredForConnectorError({\n          chainId,\n          connectorId: this.id\n        });\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: id,\n                chainName: chain.name,\n                nativeCurrency: chain.nativeCurrency,\n                rpcUrls: [chain.rpcUrls.public?.http[0] ?? \"\"],\n                blockExplorerUrls: this.getBlockExplorerUrls(chain)\n              }\n            ]\n          });\n          return chain;\n        } catch (error2) {\n          throw new UserRejectedRequestError(error2);\n        }\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  async watchAsset({\n    address,\n    decimals = 18,\n    image,\n    symbol\n  }) {\n    const provider = await this.getProvider();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n};\n_client = new WeakMap();\n_provider = new WeakMap();\nexport {\n  CoinbaseWalletConnector\n};\n","import {\n  InjectedConnector\n} from \"./chunk-P4NRLOY7.js\";\nimport {\n  ConnectorNotFoundError\n} from \"./chunk-UGBGYVBH.js\";\nimport \"./chunk-OQILYQDO.js\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateSet\n} from \"./chunk-W65LBPLT.js\";\n\n// src/metaMask.ts\nimport {\n  ResourceUnavailableRpcError,\n  UserRejectedRequestError,\n  getAddress\n} from \"viem\";\nvar _UNSTABLE_shimOnConnectSelectAccount;\nvar MetaMaskConnector = class extends InjectedConnector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      getProvider() {\n        function getReady(ethereum2) {\n          const isMetaMask = !!ethereum2?.isMetaMask;\n          if (!isMetaMask)\n            return;\n          if (ethereum2.isBraveWallet && !ethereum2._events && !ethereum2._state)\n            return;\n          if (ethereum2.isApexWallet)\n            return;\n          if (ethereum2.isAvalanche)\n            return;\n          if (ethereum2.isBitKeep)\n            return;\n          if (ethereum2.isBlockWallet)\n            return;\n          if (ethereum2.isCoin98)\n            return;\n          if (ethereum2.isFordefi)\n            return;\n          if (ethereum2.isMathWallet)\n            return;\n          if (ethereum2.isOkxWallet || ethereum2.isOKExWallet)\n            return;\n          if (ethereum2.isOneInchIOSWallet || ethereum2.isOneInchAndroidWallet)\n            return;\n          if (ethereum2.isOpera)\n            return;\n          if (ethereum2.isPortal)\n            return;\n          if (ethereum2.isRabby)\n            return;\n          if (ethereum2.isDefiant)\n            return;\n          if (ethereum2.isTokenPocket)\n            return;\n          if (ethereum2.isTokenary)\n            return;\n          if (ethereum2.isZeal)\n            return;\n          if (ethereum2.isZerion)\n            return;\n          return ethereum2;\n        }\n        if (typeof window === \"undefined\")\n          return;\n        const ethereum = window.ethereum;\n        if (ethereum?.providers)\n          return ethereum.providers.find(getReady);\n        return getReady(ethereum);\n      },\n      ...options_\n    };\n    super({ chains, options });\n    this.id = \"metaMask\";\n    this.shimDisconnectKey = `${this.id}.shimDisconnect`;\n    __privateAdd(this, _UNSTABLE_shimOnConnectSelectAccount, void 0);\n    __privateSet(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      let account = null;\n      if (__privateGet(this, _UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !this.storage?.getItem(this.shimDisconnectKey)) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected)\n          try {\n            await provider.request({\n              method: \"wallet_requestPermissions\",\n              params: [{ eth_accounts: {} }]\n            });\n            account = await this.getAccount();\n          } catch (error) {\n            if (this.isUserRejectedRequestError(error))\n              throw new UserRejectedRequestError(error);\n            if (error.code === new ResourceUnavailableRpcError(error).code)\n              throw error;\n          }\n      }\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = getAddress(accounts[0]);\n      }\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options?.shimDisconnect)\n        this.storage?.setItem(this.shimDisconnectKey, true);\n      return { account, chain: { id, unsupported }, provider };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new ResourceUnavailableRpcError(error);\n      throw error;\n    }\n  }\n};\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\nexport {\n  MetaMaskConnector\n};\n","import {\n  normalizeChainId\n} from \"./chunk-OQILYQDO.js\";\nimport {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk-W65LBPLT.js\";\n\n// src/walletConnectLegacy.ts\nimport {\n  SwitchChainError,\n  UserRejectedRequestError,\n  createWalletClient,\n  custom,\n  getAddress,\n  numberToHex\n} from \"viem\";\nvar switchChainAllowedRegex = /(imtoken|metamask|rainbow|trust wallet|uniswap wallet|ledger)/i;\nvar _provider, _switchChain, switchChain_fn;\nvar WalletConnectLegacyConnector = class extends Connector {\n  constructor() {\n    super(...arguments);\n    __privateAdd(this, _switchChain);\n    this.id = \"walletConnectLegacy\";\n    this.name = \"WalletConnectLegacy\";\n    this.ready = true;\n    __privateAdd(this, _provider, void 0);\n    this.onAccountsChanged = (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: getAddress(accounts[0]) });\n    };\n    this.onChainChanged = (chainId) => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    };\n    this.onDisconnect = () => {\n      this.emit(\"disconnect\");\n    };\n  }\n  async connect({ chainId } = {}) {\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const store = this.storage?.getItem(\"store\");\n        const lastUsedChainId = store?.state?.data?.chain?.id;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId))\n          targetChainId = lastUsedChainId;\n      }\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: true\n      });\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n      setTimeout(() => this.emit(\"message\", { type: \"connecting\" }), 0);\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      const walletName = provider.connector?.peerMeta?.name ?? \"\";\n      if (switchChainAllowedRegex.test(walletName))\n        this.switchChain = __privateMethod(this, _switchChain, switchChain_fn);\n      return {\n        account,\n        chain: { id, unsupported }\n      };\n    } catch (error) {\n      if (/user closed modal/i.test(error.message))\n        throw new UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.disconnect();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    typeof localStorage !== \"undefined\" && localStorage.removeItem(\"walletconnect\");\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = provider.accounts;\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider({\n    chainId,\n    create\n  } = {}) {\n    if (!__privateGet(this, _provider) || chainId || create) {\n      const rpc = !this.options?.infuraId ? this.chains.reduce(\n        (rpc2, chain) => ({\n          ...rpc2,\n          [chain.id]: chain.rpcUrls.default.http[0]\n        }),\n        {}\n      ) : {};\n      const WalletConnectProvider = (await import(\"@walletconnect/legacy-provider\")).default;\n      __privateSet(this, _provider, new WalletConnectProvider({\n        ...this.options,\n        chainId,\n        rpc: { ...rpc, ...this.options?.rpc }\n      }));\n      __privateGet(this, _provider).http = await __privateGet(this, _provider).setHttpProvider(chainId);\n    }\n    return __privateGet(this, _provider);\n  }\n  async getWalletClient({\n    chainId\n  } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider({ chainId }),\n      this.getAccount()\n    ]);\n    const chain = this.chains.find((x) => x.id === chainId);\n    if (!provider)\n      throw new Error(\"provider is required.\");\n    return createWalletClient({\n      account,\n      chain,\n      transport: custom(provider)\n    });\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n};\n_provider = new WeakMap();\n_switchChain = new WeakSet();\nswitchChain_fn = async function(chainId) {\n  const provider = await this.getProvider();\n  const id = numberToHex(chainId);\n  try {\n    await Promise.race([\n      provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: id }]\n      }),\n      new Promise(\n        (res) => this.on(\"change\", ({ chain }) => {\n          if (chain?.id === chainId)\n            res(chainId);\n        })\n      )\n    ]);\n    return this.chains.find((x) => x.id === chainId) ?? {\n      id: chainId,\n      name: `Chain ${id}`,\n      network: `${id}`,\n      nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n      rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\n    };\n  } catch (error) {\n    const message = typeof error === \"string\" ? error : error?.message;\n    if (/user rejected request/i.test(message))\n      throw new UserRejectedRequestError(error);\n    throw new SwitchChainError(error);\n  }\n};\nexport {\n  WalletConnectLegacyConnector\n};\n","import { createConfig, configureChains } from 'wagmi'\nimport { sepolia, polygon, mainnet } from 'wagmi/chains'\nimport { publicProvider } from 'wagmi/providers/public'\nimport { getDefaultWallets, connectorsForWallets, darkTheme } from '@rainbow-me/rainbowkit'\nimport {\n  metaMaskWallet,\n  subWallet,\n  phantomWallet,\n  rainbowWallet,\n  coinbaseWallet,\n  walletConnectWallet,\n  okxWallet,\n} from '@rainbow-me/rainbowkit/wallets'\n\nif (!import.meta.env.VITE_WALLET_CONNECT_PROJECT_ID) {\n  throw new Error('You need to provide VITE_WALLET_CONNECT_PROJECT_ID env variable')\n}\n\nconst projectId = import.meta.env.VITE_WALLET_CONNECT_PROJECT_ID;\n\n// Define Unichain Mainnet\nconst unichainMainnet = {\n  id: 130,\n  name: 'Unichain',\n  network: 'unichain-mainnet',\n  iconUrl: '/unichain-logo.png',\n  nativeCurrency: {\n    name: 'ETH',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.unichain.org'],\n    },\n    public: {\n      http: ['https://mainnet.unichain.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Uniscan',\n      url: 'https://unichain.blockscout.com',\n    },\n  },\n  testnet: false,\n}\n\n// Define Unichain Testnet\nconst unichainTestnet = {\n  id: 1301,\n  name: 'Unichain Sepolia Testnet',\n  network: 'unichain-testnet',\n  iconUrl: '/unichain-logo.png',\n  nativeCurrency: {\n    name: 'ETH',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.unichain.org'],\n    },\n    public: {\n      http: ['https://sepolia.unichain.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Uniscan',\n      url: 'https://unichain-sepolia.blockscout.com',\n    },\n  },\n  testnet: true,\n}\n\n// Define Moonwalker Chain\nconst moonwalkerChain = {\n  id: 1828369849,\n  name: 'Moonwalker',\n  network: 'moonwalker',\n  iconUrl: '/moonwalker.png',\n  nativeCurrency: {\n    name: 'ZERO',\n    symbol: 'ZERO',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://moonwalker-rpc.eu-north-2.gateway.fm'],\n    },\n    public: {\n      http: ['https://moonwalker-rpc.eu-north-2.gateway.fm'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Moonwalker Explorer',\n      url: 'https://moonwalker-blockscout.eu-north-2.gateway.fm',\n    },\n  },\n}\n\n// Define Monad Testnet\nconst monadTestnet = {\n  id: 10143,\n  name: 'Monad Testnet',\n  network: 'monad-testnet',\n  iconUrl: '/monad.png',\n  nativeCurrency: {\n    name: 'MON',\n    symbol: 'MON',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet-rpc.monad.xyz/'],\n    },\n    public: {\n      http: ['https://testnet-rpc.monad.xyz/'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Monad Explorer',\n      url: 'https://monad-testnet.socialscan.io/',\n    },\n  },\n  testnet: true,\n}\n\n// Define available chains\nconst chains = [\n  {\n    ...mainnet,\n    iconUrl: '/ethereum.png'\n  },\n  {\n    ...sepolia,\n    iconUrl: '/sepolia.png'\n  },\n  {\n    ...polygon,\n    iconUrl: '/polygon.png'\n  },\n  unichainMainnet,\n  unichainTestnet, \n  moonwalkerChain,\n  monadTestnet\n];\n\n// Configure chains with optimized settings\nconst { publicClient } = configureChains(\n  chains,  // Use the chains array directly\n  [\n    publicProvider({\n      stallTimeout: 5000,\n      timeout: 8000,\n      pollingInterval: 8000,\n      batch: {\n        multicall: {\n          batchSize: 1024 * 200,\n          wait: 16,\n        },\n      },\n    })\n  ],\n  {\n    pollingInterval: 8000,\n    stallTimeout: 5000,\n    retryCount: 3,\n    retryDelay: 3000,\n  }\n);\n\n// Get Rainbow Kit's wallets\nconst connectors = connectorsForWallets([\n  {\n    groupName: 'Recommended',\n    wallets: [\n      metaMaskWallet({ projectId, chains }),\n      subWallet({ projectId, chains }),\n      phantomWallet({ projectId, chains }),\n    ],\n  },\n  {\n    groupName: 'Popular',\n    wallets: [\n      rainbowWallet({ projectId, chains }),\n      coinbaseWallet({ appName: 'Token Factory', chains }),\n      walletConnectWallet({ projectId, chains }),\n      okxWallet({ projectId, chains }),\n    ],\n  },\n]);\n\n// Create wagmi config with optimized settings\nconst wagmiConfig = createConfig({\n  autoConnect: true,\n  connectors,\n  publicClient,\n  logger: {\n    warn: null,\n  },\n  syncConnectedChain: true,\n  batch: {\n    multicall: {\n      batchSize: 1024 * 200,\n      wait: 16,\n    },\n  },\n});\n\n// Export everything needed\nexport { chains, wagmiConfig }\nexport { unichainMainnet, unichainTestnet, moonwalkerChain }"],"file":"assets/js/web3-wagmi-BvzjG269.js"}