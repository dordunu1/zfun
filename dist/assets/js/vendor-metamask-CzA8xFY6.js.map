{"version":3,"file":"vendor-metamask-CzA8xFY6.js","sources":["../../../node_modules/@metamask/detect-provider/dist/index.js","../../../node_modules/@metamask/safe-event-emitter/dist/cjs/index.js","../../../node_modules/@metamask/utils/dist/assert.js","../../../node_modules/@metamask/utils/dist/base64.js","../../../node_modules/@metamask/utils/dist/hex.js","../../../node_modules/@metamask/utils/dist/bytes.js","../../../node_modules/@metamask/utils/dist/checksum.js","../../../node_modules/@metamask/utils/dist/coercers.js","../../../node_modules/@metamask/utils/dist/collections.js","../../../node_modules/@metamask/utils/dist/encryption-types.js","../../../node_modules/@metamask/utils/dist/json.js","../../../node_modules/@metamask/utils/dist/keyring.js","../../../node_modules/@metamask/utils/dist/logging.js","../../../node_modules/@metamask/utils/dist/misc.js","../../../node_modules/@metamask/utils/dist/number.js","../../../node_modules/@metamask/utils/dist/opaque.js","../../../node_modules/@metamask/utils/dist/time.js","../../../node_modules/@metamask/utils/dist/transaction-types.js","../../../node_modules/@metamask/utils/node_modules/semver/internal/constants.js","../../../node_modules/@metamask/utils/node_modules/semver/internal/debug.js","../../../node_modules/@metamask/utils/node_modules/semver/internal/re.js","../../../node_modules/@metamask/utils/node_modules/semver/internal/parse-options.js","../../../node_modules/@metamask/utils/node_modules/semver/internal/identifiers.js","../../../node_modules/@metamask/utils/node_modules/semver/classes/semver.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/parse.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/valid.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/clean.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/inc.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/diff.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/major.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/minor.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/patch.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/prerelease.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/compare.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/rcompare.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/compare-loose.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/compare-build.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/sort.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/rsort.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/gt.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/lt.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/eq.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/neq.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/gte.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/lte.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/cmp.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/coerce.js","../../../node_modules/@metamask/utils/node_modules/semver/internal/lrucache.js","../../../node_modules/@metamask/utils/node_modules/semver/classes/range.js","../../../node_modules/@metamask/utils/node_modules/semver/classes/comparator.js","../../../node_modules/@metamask/utils/node_modules/semver/functions/satisfies.js","../../../node_modules/@metamask/utils/node_modules/semver/ranges/to-comparators.js","../../../node_modules/@metamask/utils/node_modules/semver/ranges/max-satisfying.js","../../../node_modules/@metamask/utils/node_modules/semver/ranges/min-satisfying.js","../../../node_modules/@metamask/utils/node_modules/semver/ranges/min-version.js","../../../node_modules/@metamask/utils/node_modules/semver/ranges/valid.js","../../../node_modules/@metamask/utils/node_modules/semver/ranges/outside.js","../../../node_modules/@metamask/utils/node_modules/semver/ranges/gtr.js","../../../node_modules/@metamask/utils/node_modules/semver/ranges/ltr.js","../../../node_modules/@metamask/utils/node_modules/semver/ranges/intersects.js","../../../node_modules/@metamask/utils/node_modules/semver/ranges/simplify.js","../../../node_modules/@metamask/utils/node_modules/semver/ranges/subset.js","../../../node_modules/@metamask/utils/node_modules/semver/index.js","../../../node_modules/@metamask/utils/dist/versions.js","../../../node_modules/@metamask/utils/dist/index.js"],"sourcesContent":["\"use strict\";\n/**\n * Returns a Promise that resolves to the value of window.ethereum if it is\n * set within the given timeout, or null.\n * The Promise will not reject, but an error will be thrown if invalid options\n * are provided.\n *\n * @param options - Options bag.\n * @param options.mustBeMetaMask - Whether to only look for MetaMask providers.\n * Default: false\n * @param options.silent - Whether to silence console errors. Does not affect\n * thrown errors. Default: false\n * @param options.timeout - Milliseconds to wait for 'ethereum#initialized' to\n * be dispatched. Default: 3000\n * @returns A Promise that resolves with the Provider if it is detected within\n * given timeout, otherwise null.\n */\nfunction detectEthereumProvider({ mustBeMetaMask = false, silent = false, timeout = 3000, } = {}) {\n    _validateInputs();\n    let handled = false;\n    return new Promise((resolve) => {\n        if (window.ethereum) {\n            handleEthereum();\n        }\n        else {\n            window.addEventListener('ethereum#initialized', handleEthereum, { once: true });\n            setTimeout(() => {\n                handleEthereum();\n            }, timeout);\n        }\n        function handleEthereum() {\n            if (handled) {\n                return;\n            }\n            handled = true;\n            window.removeEventListener('ethereum#initialized', handleEthereum);\n            const { ethereum } = window;\n            if (ethereum && (!mustBeMetaMask || ethereum.isMetaMask)) {\n                resolve(ethereum);\n            }\n            else {\n                const message = mustBeMetaMask && ethereum\n                    ? 'Non-MetaMask window.ethereum detected.'\n                    : 'Unable to detect window.ethereum.';\n                !silent && console.error('@metamask/detect-provider:', message);\n                resolve(null);\n            }\n        }\n    });\n    function _validateInputs() {\n        if (typeof mustBeMetaMask !== 'boolean') {\n            throw new Error(`@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.`);\n        }\n        if (typeof silent !== 'boolean') {\n            throw new Error(`@metamask/detect-provider: Expected option 'silent' to be a boolean.`);\n        }\n        if (typeof timeout !== 'number') {\n            throw new Error(`@metamask/detect-provider: Expected option 'timeout' to be a number.`);\n        }\n    }\n}\nmodule.exports = detectEthereumProvider;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQWdCQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFDSCxTQUFTLHNCQUFzQixDQUErQixFQUM1RCxjQUFjLEdBQUcsS0FBSyxFQUN0QixNQUFNLEdBQUcsS0FBSyxFQUNkLE9BQU8sR0FBRyxJQUFJLEdBQ2YsR0FBRyxFQUFFO0lBRUosZUFBZSxFQUFFLENBQUM7SUFFbEIsSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBRXBCLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUM3QixJQUFLLE1BQWlCLENBQUMsUUFBUSxFQUFFO1lBRS9CLGNBQWMsRUFBRSxDQUFDO1NBRWxCO2FBQU07WUFFTCxNQUFNLENBQUMsZ0JBQWdCLENBQ3JCLHNCQUFzQixFQUN0QixjQUFjLEVBQ2QsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQ2YsQ0FBQztZQUVGLFVBQVUsQ0FBQyxHQUFHLEVBQUU7Z0JBQ2QsY0FBYyxFQUFFLENBQUM7WUFDbkIsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1NBQ2I7UUFFRCxTQUFTLGNBQWM7WUFFckIsSUFBSSxPQUFPLEVBQUU7Z0JBQ1gsT0FBTzthQUNSO1lBQ0QsT0FBTyxHQUFHLElBQUksQ0FBQztZQUVmLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxzQkFBc0IsRUFBRSxjQUFjLENBQUMsQ0FBQztZQUVuRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsTUFBZ0IsQ0FBQztZQUV0QyxJQUFJLFFBQVEsSUFBSSxDQUFDLENBQUMsY0FBYyxJQUFJLFFBQVEsQ0FBQyxVQUFVLENBQUMsRUFBRTtnQkFDeEQsT0FBTyxDQUFDLFFBQXdCLENBQUMsQ0FBQzthQUNuQztpQkFBTTtnQkFFTCxNQUFNLE9BQU8sR0FBRyxjQUFjLElBQUksUUFBUTtvQkFDeEMsQ0FBQyxDQUFDLHdDQUF3QztvQkFDMUMsQ0FBQyxDQUFDLG1DQUFtQyxDQUFDO2dCQUV4QyxDQUFDLE1BQU0sSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLDRCQUE0QixFQUFFLE9BQU8sQ0FBQyxDQUFDO2dCQUNoRSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDZjtRQUNILENBQUM7SUFDSCxDQUFDLENBQUMsQ0FBQztJQUVILFNBQVMsZUFBZTtRQUN0QixJQUFJLE9BQU8sY0FBYyxLQUFLLFNBQVMsRUFBRTtZQUN2QyxNQUFNLElBQUksS0FBSyxDQUFDLDhFQUE4RSxDQUFDLENBQUM7U0FDakc7UUFDRCxJQUFJLE9BQU8sTUFBTSxLQUFLLFNBQVMsRUFBRTtZQUMvQixNQUFNLElBQUksS0FBSyxDQUFDLHNFQUFzRSxDQUFDLENBQUM7U0FDekY7UUFDRCxJQUFJLE9BQU8sT0FBTyxLQUFLLFFBQVEsRUFBRTtZQUMvQixNQUFNLElBQUksS0FBSyxDQUFDLHNFQUFzRSxDQUFDLENBQUM7U0FDekY7SUFDSCxDQUFDO0FBQ0gsQ0FBQztBQWxGRCxpQkFBUyxzQkFBc0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImludGVyZmFjZSBNZXRhTWFza0V0aGVyZXVtUHJvdmlkZXIge1xuICBpc01ldGFNYXNrPzogYm9vbGVhbjtcbiAgb25jZShldmVudE5hbWU6IHN0cmluZyB8IHN5bWJvbCwgbGlzdGVuZXI6ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IHRoaXM7XG4gIG9uKGV2ZW50TmFtZTogc3RyaW5nIHwgc3ltYm9sLCBsaXN0ZW5lcjogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKTogdGhpcztcbiAgb2ZmKGV2ZW50TmFtZTogc3RyaW5nIHwgc3ltYm9sLCBsaXN0ZW5lcjogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKTogdGhpcztcbiAgYWRkTGlzdGVuZXIoZXZlbnROYW1lOiBzdHJpbmcgfCBzeW1ib2wsIGxpc3RlbmVyOiAoLi4uYXJnczogYW55W10pID0+IHZvaWQpOiB0aGlzO1xuICByZW1vdmVMaXN0ZW5lcihldmVudE5hbWU6IHN0cmluZyB8IHN5bWJvbCwgbGlzdGVuZXI6ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IHRoaXM7XG4gIHJlbW92ZUFsbExpc3RlbmVycyhldmVudD86IHN0cmluZyB8IHN5bWJvbCk6IHRoaXM7XG59XG5cbmludGVyZmFjZSBXaW5kb3cge1xuICBldGhlcmV1bT86IE1ldGFNYXNrRXRoZXJldW1Qcm92aWRlcjtcbn1cblxuZXhwb3J0ID0gZGV0ZWN0RXRoZXJldW1Qcm92aWRlcjtcblxuLyoqXG4gKiBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSB2YWx1ZSBvZiB3aW5kb3cuZXRoZXJldW0gaWYgaXQgaXNcbiAqIHNldCB3aXRoaW4gdGhlIGdpdmVuIHRpbWVvdXQsIG9yIG51bGwuXG4gKiBUaGUgUHJvbWlzZSB3aWxsIG5vdCByZWplY3QsIGJ1dCBhbiBlcnJvciB3aWxsIGJlIHRocm93biBpZiBpbnZhbGlkIG9wdGlvbnNcbiAqIGFyZSBwcm92aWRlZC5cbiAqXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgYmFnLlxuICogQHBhcmFtIG9wdGlvbnMubXVzdEJlTWV0YU1hc2sgLSBXaGV0aGVyIHRvIG9ubHkgbG9vayBmb3IgTWV0YU1hc2sgcHJvdmlkZXJzLlxuICogRGVmYXVsdDogZmFsc2VcbiAqIEBwYXJhbSBvcHRpb25zLnNpbGVudCAtIFdoZXRoZXIgdG8gc2lsZW5jZSBjb25zb2xlIGVycm9ycy4gRG9lcyBub3QgYWZmZWN0XG4gKiB0aHJvd24gZXJyb3JzLiBEZWZhdWx0OiBmYWxzZVxuICogQHBhcmFtIG9wdGlvbnMudGltZW91dCAtIE1pbGxpc2Vjb25kcyB0byB3YWl0IGZvciAnZXRoZXJldW0jaW5pdGlhbGl6ZWQnIHRvXG4gKiBiZSBkaXNwYXRjaGVkLiBEZWZhdWx0OiAzMDAwXG4gKiBAcmV0dXJucyBBIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBQcm92aWRlciBpZiBpdCBpcyBkZXRlY3RlZCB3aXRoaW5cbiAqIGdpdmVuIHRpbWVvdXQsIG90aGVyd2lzZSBudWxsLlxuICovXG5mdW5jdGlvbiBkZXRlY3RFdGhlcmV1bVByb3ZpZGVyPFQgPSBNZXRhTWFza0V0aGVyZXVtUHJvdmlkZXI+KHtcbiAgbXVzdEJlTWV0YU1hc2sgPSBmYWxzZSxcbiAgc2lsZW50ID0gZmFsc2UsXG4gIHRpbWVvdXQgPSAzMDAwLFxufSA9IHt9KTogUHJvbWlzZTxUIHwgbnVsbD4ge1xuXG4gIF92YWxpZGF0ZUlucHV0cygpO1xuXG4gIGxldCBoYW5kbGVkID0gZmFsc2U7XG5cbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgaWYgKCh3aW5kb3cgYXMgV2luZG93KS5ldGhlcmV1bSkge1xuXG4gICAgICBoYW5kbGVFdGhlcmV1bSgpO1xuXG4gICAgfSBlbHNlIHtcblxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICdldGhlcmV1bSNpbml0aWFsaXplZCcsXG4gICAgICAgIGhhbmRsZUV0aGVyZXVtLFxuICAgICAgICB7IG9uY2U6IHRydWUgfSxcbiAgICAgICk7XG5cbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBoYW5kbGVFdGhlcmV1bSgpO1xuICAgICAgfSwgdGltZW91dCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFuZGxlRXRoZXJldW0oKSB7XG5cbiAgICAgIGlmIChoYW5kbGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGhhbmRsZWQgPSB0cnVlO1xuXG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignZXRoZXJldW0jaW5pdGlhbGl6ZWQnLCBoYW5kbGVFdGhlcmV1bSk7XG5cbiAgICAgIGNvbnN0IHsgZXRoZXJldW0gfSA9IHdpbmRvdyBhcyBXaW5kb3c7XG5cbiAgICAgIGlmIChldGhlcmV1bSAmJiAoIW11c3RCZU1ldGFNYXNrIHx8IGV0aGVyZXVtLmlzTWV0YU1hc2spKSB7XG4gICAgICAgIHJlc29sdmUoZXRoZXJldW0gYXMgdW5rbm93biBhcyBUKTtcbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IG11c3RCZU1ldGFNYXNrICYmIGV0aGVyZXVtXG4gICAgICAgICAgPyAnTm9uLU1ldGFNYXNrIHdpbmRvdy5ldGhlcmV1bSBkZXRlY3RlZC4nXG4gICAgICAgICAgOiAnVW5hYmxlIHRvIGRldGVjdCB3aW5kb3cuZXRoZXJldW0uJztcblxuICAgICAgICAhc2lsZW50ICYmIGNvbnNvbGUuZXJyb3IoJ0BtZXRhbWFzay9kZXRlY3QtcHJvdmlkZXI6JywgbWVzc2FnZSk7XG4gICAgICAgIHJlc29sdmUobnVsbCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICBmdW5jdGlvbiBfdmFsaWRhdGVJbnB1dHMoKSB7XG4gICAgaWYgKHR5cGVvZiBtdXN0QmVNZXRhTWFzayAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEBtZXRhbWFzay9kZXRlY3QtcHJvdmlkZXI6IEV4cGVjdGVkIG9wdGlvbiAnbXVzdEJlTWV0YU1hc2snIHRvIGJlIGEgYm9vbGVhbi5gKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBzaWxlbnQgIT09ICdib29sZWFuJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBAbWV0YW1hc2svZGV0ZWN0LXByb3ZpZGVyOiBFeHBlY3RlZCBvcHRpb24gJ3NpbGVudCcgdG8gYmUgYSBib29sZWFuLmApO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHRpbWVvdXQgIT09ICdudW1iZXInKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEBtZXRhbWFzay9kZXRlY3QtcHJvdmlkZXI6IEV4cGVjdGVkIG9wdGlvbiAndGltZW91dCcgdG8gYmUgYSBudW1iZXIuYCk7XG4gICAgfVxuICB9XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nfunction safeApply(handler, context, args) {\n    try {\n        Reflect.apply(handler, context, args);\n    }\n    catch (err) {\n        // Throw error after timeout so as not to interrupt the stack\n        setTimeout(() => {\n            throw err;\n        });\n    }\n}\nfunction arrayClone(arr) {\n    const n = arr.length;\n    const copy = new Array(n);\n    for (let i = 0; i < n; i += 1) {\n        copy[i] = arr[i];\n    }\n    return copy;\n}\nclass SafeEventEmitter extends events_1.EventEmitter {\n    emit(type, ...args) {\n        let doError = type === 'error';\n        const events = this._events;\n        if (events !== undefined) {\n            doError = doError && events.error === undefined;\n        }\n        else if (!doError) {\n            return false;\n        }\n        // If there is no 'error' event listener then throw.\n        if (doError) {\n            let er;\n            if (args.length > 0) {\n                [er] = args;\n            }\n            if (er instanceof Error) {\n                // Note: The comments on the `throw` lines are intentional, they show\n                // up in Node's output if this results in an unhandled exception.\n                throw er; // Unhandled 'error' event\n            }\n            // At least give some kind of context to the user\n            const err = new Error(`Unhandled error.${er ? ` (${er.message})` : ''}`);\n            err.context = er;\n            throw err; // Unhandled 'error' event\n        }\n        const handler = events[type];\n        if (handler === undefined) {\n            return false;\n        }\n        if (typeof handler === 'function') {\n            safeApply(handler, this, args);\n        }\n        else {\n            const len = handler.length;\n            const listeners = arrayClone(handler);\n            for (let i = 0; i < len; i += 1) {\n                safeApply(listeners[i], this, args);\n            }\n        }\n        return true;\n    }\n}\nexports.default = SafeEventEmitter;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertExhaustive = exports.assertStruct = exports.assert = exports.AssertionError = void 0;\nconst superstruct_1 = require(\"superstruct\");\n/**\n * Type guard for determining whether the given value is an error object with a\n * `message` property, such as an instance of Error.\n *\n * @param error - The object to check.\n * @returns True or false, depending on the result.\n */\nfunction isErrorWithMessage(error) {\n    return typeof error === 'object' && error !== null && 'message' in error;\n}\n/**\n * Check if a value is a constructor, i.e., a function that can be called with\n * the `new` keyword.\n *\n * @param fn - The value to check.\n * @returns `true` if the value is a constructor, or `false` otherwise.\n */\nfunction isConstructable(fn) {\n    var _a, _b;\n    /* istanbul ignore next */\n    return Boolean(typeof ((_b = (_a = fn === null || fn === void 0 ? void 0 : fn.prototype) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name) === 'string');\n}\n/**\n * Get the error message from an unknown error object. If the error object has\n * a `message` property, that property is returned. Otherwise, the stringified\n * error object is returned.\n *\n * @param error - The error object to get the message from.\n * @returns The error message.\n */\nfunction getErrorMessage(error) {\n    const message = isErrorWithMessage(error) ? error.message : String(error);\n    // If the error ends with a period, remove it, as we'll add our own period.\n    if (message.endsWith('.')) {\n        return message.slice(0, -1);\n    }\n    return message;\n}\n/**\n * Initialise an {@link AssertionErrorConstructor} error.\n *\n * @param ErrorWrapper - The error class to use.\n * @param message - The error message.\n * @returns The error object.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction getError(ErrorWrapper, message) {\n    if (isConstructable(ErrorWrapper)) {\n        return new ErrorWrapper({\n            message,\n        });\n    }\n    return ErrorWrapper({\n        message,\n    });\n}\n/**\n * The default error class that is thrown if an assertion fails.\n */\nclass AssertionError extends Error {\n    constructor(options) {\n        super(options.message);\n        this.code = 'ERR_ASSERTION';\n    }\n}\nexports.AssertionError = AssertionError;\n/**\n * Same as Node.js assert.\n * If the value is falsy, throws an error, does nothing otherwise.\n *\n * @throws {@link AssertionError} If value is falsy.\n * @param value - The test that should be truthy to pass.\n * @param message - Message to be passed to {@link AssertionError} or an\n * {@link Error} instance to throw.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}. If a custom error class is provided for\n * the `message` argument, this argument is ignored.\n */\nfunction assert(value, message = 'Assertion failed.', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    if (!value) {\n        if (message instanceof Error) {\n            throw message;\n        }\n        throw getError(ErrorWrapper, message);\n    }\n}\nexports.assert = assert;\n/**\n * Assert a value against a Superstruct struct.\n *\n * @param value - The value to validate.\n * @param struct - The struct to validate against.\n * @param errorPrefix - A prefix to add to the error message. Defaults to\n * \"Assertion failed\".\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the value is not valid.\n */\nfunction assertStruct(value, struct, errorPrefix = 'Assertion failed', \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper = AssertionError) {\n    try {\n        (0, superstruct_1.assert)(value, struct);\n    }\n    catch (error) {\n        throw getError(ErrorWrapper, `${errorPrefix}: ${getErrorMessage(error)}.`);\n    }\n}\nexports.assertStruct = assertStruct;\n/**\n * Use in the default case of a switch that you want to be fully exhaustive.\n * Using this function forces the compiler to enforce exhaustivity during\n * compile-time.\n *\n * @example\n * ```\n * const number = 1;\n * switch (number) {\n *   case 0:\n *     ...\n *   case 1:\n *     ...\n *   default:\n *     assertExhaustive(snapPrefix);\n * }\n * ```\n * @param _object - The object on which the switch is being operated.\n */\nfunction assertExhaustive(_object) {\n    throw new Error('Invalid branch reached. Should be detected during compilation.');\n}\nexports.assertExhaustive = assertExhaustive;\n//# sourceMappingURL=assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64 = void 0;\nconst superstruct_1 = require(\"superstruct\");\nconst assert_1 = require(\"./assert\");\n/**\n * Ensure that a provided string-based struct is valid base64.\n *\n * @param struct - The string based struct.\n * @param options - Optional options to specialize base64 validation. See {@link Base64Options} documentation.\n * @returns A superstruct validating base64.\n */\nconst base64 = (struct, options = {}) => {\n    var _a, _b;\n    const paddingRequired = (_a = options.paddingRequired) !== null && _a !== void 0 ? _a : false;\n    const characterSet = (_b = options.characterSet) !== null && _b !== void 0 ? _b : 'base64';\n    let letters;\n    if (characterSet === 'base64') {\n        letters = String.raw `[A-Za-z0-9+\\/]`;\n    }\n    else {\n        (0, assert_1.assert)(characterSet === 'base64url');\n        letters = String.raw `[-_A-Za-z0-9]`;\n    }\n    let re;\n    if (paddingRequired) {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    else {\n        re = new RegExp(`^(?:${letters}{4})*(?:${letters}{2,3}|${letters}{3}=|${letters}{2}==)?$`, 'u');\n    }\n    return (0, superstruct_1.pattern)(struct, re);\n};\nexports.base64 = base64;\n//# sourceMappingURL=base64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remove0x = exports.add0x = exports.assertIsStrictHexString = exports.assertIsHexString = exports.isStrictHexString = exports.isHexString = exports.StrictHexStruct = exports.HexStruct = void 0;\nconst superstruct_1 = require(\"superstruct\");\nconst assert_1 = require(\"./assert\");\nexports.HexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^(?:0x)?[0-9a-f]+$/iu);\nexports.StrictHexStruct = (0, superstruct_1.pattern)((0, superstruct_1.string)(), /^0x[0-9a-f]+$/iu);\n/**\n * Check if a string is a valid hex string.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isHexString(value) {\n    return (0, superstruct_1.is)(value, exports.HexStruct);\n}\nexports.isHexString = isHexString;\n/**\n * Strictly check if a string is a valid hex string. A valid hex string must\n * start with the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid hex string.\n */\nfunction isStrictHexString(value) {\n    return (0, superstruct_1.is)(value, exports.StrictHexStruct);\n}\nexports.isStrictHexString = isStrictHexString;\n/**\n * Assert that a value is a valid hex string.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsHexString(value) {\n    (0, assert_1.assert)(isHexString(value), 'Value must be a hexadecimal string.');\n}\nexports.assertIsHexString = assertIsHexString;\n/**\n * Assert that a value is a valid hex string. A valid hex string must start with\n * the \"0x\"-prefix.\n *\n * @param value - The value to check.\n * @throws If the value is not a valid hex string.\n */\nfunction assertIsStrictHexString(value) {\n    (0, assert_1.assert)(isStrictHexString(value), 'Value must be a hexadecimal string, starting with \"0x\".');\n}\nexports.assertIsStrictHexString = assertIsStrictHexString;\n/**\n * Add the `0x`-prefix to a hexadecimal string. If the string already has the\n * prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to add the prefix to.\n * @returns The prefixed hexadecimal string.\n */\nfunction add0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x')) {\n        return hexadecimal;\n    }\n    if (hexadecimal.startsWith('0X')) {\n        return `0x${hexadecimal.substring(2)}`;\n    }\n    return `0x${hexadecimal}`;\n}\nexports.add0x = add0x;\n/**\n * Remove the `0x`-prefix from a hexadecimal string. If the string doesn't have\n * the prefix, it is returned as-is.\n *\n * @param hexadecimal - The hexadecimal string to remove the prefix from.\n * @returns The un-prefixed hexadecimal string.\n */\nfunction remove0x(hexadecimal) {\n    if (hexadecimal.startsWith('0x') || hexadecimal.startsWith('0X')) {\n        return hexadecimal.substring(2);\n    }\n    return hexadecimal;\n}\nexports.remove0x = remove0x;\n//# sourceMappingURL=hex.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDataView = exports.concatBytes = exports.valueToBytes = exports.stringToBytes = exports.numberToBytes = exports.signedBigIntToBytes = exports.bigIntToBytes = exports.hexToBytes = exports.bytesToString = exports.bytesToNumber = exports.bytesToSignedBigInt = exports.bytesToBigInt = exports.bytesToHex = exports.assertIsBytes = exports.isBytes = void 0;\nconst assert_1 = require(\"./assert\");\nconst hex_1 = require(\"./hex\");\n// '0'.charCodeAt(0) === 48\nconst HEX_MINIMUM_NUMBER_CHARACTER = 48;\n// '9'.charCodeAt(0) === 57\nconst HEX_MAXIMUM_NUMBER_CHARACTER = 58;\nconst HEX_CHARACTER_OFFSET = 87;\n/**\n * Memoized function that returns an array to be used as a lookup table for\n * converting bytes to hexadecimal values.\n *\n * The array is created lazily and then cached for future use. The benefit of\n * this approach is that the performance of converting bytes to hex is much\n * better than if we were to call `toString(16)` on each byte.\n *\n * The downside is that the array is created once and then never garbage\n * collected. This is not a problem in practice because the array is only 256\n * elements long.\n *\n * @returns A function that returns the lookup table.\n */\nfunction getPrecomputedHexValuesBuilder() {\n    // To avoid issues with tree shaking, we need to use a function to return the\n    // array. This is because the array is only used in the `bytesToHex` function\n    // and if we were to use a global variable, the array might be removed by the\n    // tree shaker.\n    const lookupTable = [];\n    return () => {\n        if (lookupTable.length === 0) {\n            for (let i = 0; i < 256; i++) {\n                lookupTable.push(i.toString(16).padStart(2, '0'));\n            }\n        }\n        return lookupTable;\n    };\n}\n/**\n * Function implementation of the {@link getPrecomputedHexValuesBuilder}\n * function.\n */\nconst getPrecomputedHexValues = getPrecomputedHexValuesBuilder();\n/**\n * Check if a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @returns Whether the value is a `Uint8Array`.\n */\nfunction isBytes(value) {\n    return value instanceof Uint8Array;\n}\nexports.isBytes = isBytes;\n/**\n * Assert that a value is a `Uint8Array`.\n *\n * @param value - The value to check.\n * @throws If the value is not a `Uint8Array`.\n */\nfunction assertIsBytes(value) {\n    (0, assert_1.assert)(isBytes(value), 'Value must be a Uint8Array.');\n}\nexports.assertIsBytes = assertIsBytes;\n/**\n * Convert a `Uint8Array` to a hexadecimal string.\n *\n * @param bytes - The bytes to convert to a hexadecimal string.\n * @returns The hexadecimal string.\n */\nfunction bytesToHex(bytes) {\n    assertIsBytes(bytes);\n    if (bytes.length === 0) {\n        return '0x';\n    }\n    const lookupTable = getPrecomputedHexValues();\n    const hexadecimal = new Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hexadecimal[i] = lookupTable[bytes[i]];\n    }\n    return (0, hex_1.add0x)(hexadecimal.join(''));\n}\nexports.bytesToHex = bytesToHex;\n/**\n * Convert a `Uint8Array` to a `bigint`.\n *\n * To convert a `Uint8Array` to a `number` instead, use {@link bytesToNumber}.\n * To convert a two's complement encoded `Uint8Array` to a `bigint`, use\n * {@link bytesToSignedBigInt}.\n *\n * @param bytes - The bytes to convert to a `bigint`.\n * @returns The `bigint`.\n */\nfunction bytesToBigInt(bytes) {\n    assertIsBytes(bytes);\n    const hexadecimal = bytesToHex(bytes);\n    return BigInt(hexadecimal);\n}\nexports.bytesToBigInt = bytesToBigInt;\n/**\n * Convert a `Uint8Array` to a signed `bigint`. This assumes that the bytes are\n * encoded in two's complement.\n *\n * To convert a `Uint8Array` to an unsigned `bigint` instead, use\n * {@link bytesToBigInt}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param bytes - The bytes to convert to a signed `bigint`.\n * @returns The signed `bigint`.\n */\nfunction bytesToSignedBigInt(bytes) {\n    assertIsBytes(bytes);\n    let value = BigInt(0);\n    for (const byte of bytes) {\n        // eslint-disable-next-line no-bitwise\n        value = (value << BigInt(8)) + BigInt(byte);\n    }\n    return BigInt.asIntN(bytes.length * 8, value);\n}\nexports.bytesToSignedBigInt = bytesToSignedBigInt;\n/**\n * Convert a `Uint8Array` to a `number`.\n *\n * To convert a `Uint8Array` to a `bigint` instead, use {@link bytesToBigInt}.\n *\n * @param bytes - The bytes to convert to a number.\n * @returns The number.\n * @throws If the resulting number is not a safe integer.\n */\nfunction bytesToNumber(bytes) {\n    assertIsBytes(bytes);\n    const bigint = bytesToBigInt(bytes);\n    (0, assert_1.assert)(bigint <= BigInt(Number.MAX_SAFE_INTEGER), 'Number is not a safe integer. Use `bytesToBigInt` instead.');\n    return Number(bigint);\n}\nexports.bytesToNumber = bytesToNumber;\n/**\n * Convert a UTF-8 encoded `Uint8Array` to a `string`.\n *\n * @param bytes - The bytes to convert to a string.\n * @returns The string.\n */\nfunction bytesToString(bytes) {\n    assertIsBytes(bytes);\n    return new TextDecoder().decode(bytes);\n}\nexports.bytesToString = bytesToString;\n/**\n * Convert a hexadecimal string to a `Uint8Array`. The string can optionally be\n * prefixed with `0x`. It accepts even and odd length strings.\n *\n * If the value is \"0x\", an empty `Uint8Array` is returned.\n *\n * @param value - The hexadecimal string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction hexToBytes(value) {\n    var _a;\n    // \"0x\" is often used as empty byte array.\n    if (((_a = value === null || value === void 0 ? void 0 : value.toLowerCase) === null || _a === void 0 ? void 0 : _a.call(value)) === '0x') {\n        return new Uint8Array();\n    }\n    (0, hex_1.assertIsHexString)(value);\n    // Remove the `0x` prefix if it exists, and pad the string to have an even\n    // number of characters.\n    const strippedValue = (0, hex_1.remove0x)(value).toLowerCase();\n    const normalizedValue = strippedValue.length % 2 === 0 ? strippedValue : `0${strippedValue}`;\n    const bytes = new Uint8Array(normalizedValue.length / 2);\n    for (let i = 0; i < bytes.length; i++) {\n        // While this is not the prettiest way to convert a hexadecimal string to a\n        // `Uint8Array`, it is a lot faster than using `parseInt` to convert each\n        // character.\n        const c1 = normalizedValue.charCodeAt(i * 2);\n        const c2 = normalizedValue.charCodeAt(i * 2 + 1);\n        const n1 = c1 -\n            (c1 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        const n2 = c2 -\n            (c2 < HEX_MAXIMUM_NUMBER_CHARACTER\n                ? HEX_MINIMUM_NUMBER_CHARACTER\n                : HEX_CHARACTER_OFFSET);\n        bytes[i] = n1 * 16 + n2;\n    }\n    return bytes;\n}\nexports.hexToBytes = hexToBytes;\n/**\n * Convert a `bigint` to a `Uint8Array`.\n *\n * This assumes that the `bigint` is an unsigned integer. To convert a signed\n * `bigint` instead, use {@link signedBigIntToBytes}.\n *\n * @param value - The bigint to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction bigIntToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= BigInt(0), 'Value must be a non-negative bigint.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.bigIntToBytes = bigIntToBytes;\n/**\n * Check if a `bigint` fits in a certain number of bytes.\n *\n * @param value - The `bigint` to check.\n * @param bytes - The number of bytes.\n * @returns Whether the `bigint` fits in the number of bytes.\n */\nfunction bigIntFits(value, bytes) {\n    (0, assert_1.assert)(bytes > 0);\n    /* eslint-disable no-bitwise */\n    const mask = value >> BigInt(31);\n    return !(((~value & mask) + (value & ~mask)) >> BigInt(bytes * 8 + ~0));\n    /* eslint-enable no-bitwise */\n}\n/**\n * Convert a signed `bigint` to a `Uint8Array`. This uses two's complement\n * encoding to represent negative numbers.\n *\n * To convert an unsigned `bigint` to a `Uint8Array` instead, use\n * {@link bigIntToBytes}.\n *\n * @see https://en.wikipedia.org/wiki/Two%27s_complement\n * @param value - The number to convert to bytes.\n * @param byteLength - The length of the resulting `Uint8Array`. If the number\n * is larger than the maximum value that can be represented by the given length,\n * an error is thrown.\n * @returns The bytes as `Uint8Array`.\n */\nfunction signedBigIntToBytes(value, byteLength) {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(typeof byteLength === 'number', 'Byte length must be a number.');\n    (0, assert_1.assert)(byteLength > 0, 'Byte length must be greater than 0.');\n    (0, assert_1.assert)(bigIntFits(value, byteLength), 'Byte length is too small to represent the given value.');\n    // ESLint doesn't like mutating function parameters, so to avoid having to\n    // disable the rule, we create a new variable.\n    let numberValue = value;\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = Number(BigInt.asUintN(8, numberValue));\n        // eslint-disable-next-line no-bitwise\n        numberValue >>= BigInt(8);\n    }\n    return bytes.reverse();\n}\nexports.signedBigIntToBytes = signedBigIntToBytes;\n/**\n * Convert a `number` to a `Uint8Array`.\n *\n * @param value - The number to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n * @throws If the number is not a safe integer.\n */\nfunction numberToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToBytes` instead.');\n    const hexadecimal = value.toString(16);\n    return hexToBytes(hexadecimal);\n}\nexports.numberToBytes = numberToBytes;\n/**\n * Convert a `string` to a UTF-8 encoded `Uint8Array`.\n *\n * @param value - The string to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction stringToBytes(value) {\n    (0, assert_1.assert)(typeof value === 'string', 'Value must be a string.');\n    return new TextEncoder().encode(value);\n}\nexports.stringToBytes = stringToBytes;\n/**\n * Convert a byte-like value to a `Uint8Array`. The value can be a `Uint8Array`,\n * a `bigint`, a `number`, or a `string`.\n *\n * This will attempt to guess the type of the value based on its type and\n * contents. For more control over the conversion, use the more specific\n * conversion functions, such as {@link hexToBytes} or {@link stringToBytes}.\n *\n * If the value is a `string`, and it is prefixed with `0x`, it will be\n * interpreted as a hexadecimal string. Otherwise, it will be interpreted as a\n * UTF-8 string. To convert a hexadecimal string to bytes without interpreting\n * it as a UTF-8 string, use {@link hexToBytes} instead.\n *\n * If the value is a `bigint`, it is assumed to be unsigned. To convert a signed\n * `bigint` to bytes, use {@link signedBigIntToBytes} instead.\n *\n * If the value is a `Uint8Array`, it will be returned as-is.\n *\n * @param value - The value to convert to bytes.\n * @returns The bytes as `Uint8Array`.\n */\nfunction valueToBytes(value) {\n    if (typeof value === 'bigint') {\n        return bigIntToBytes(value);\n    }\n    if (typeof value === 'number') {\n        return numberToBytes(value);\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('0x')) {\n            return hexToBytes(value);\n        }\n        return stringToBytes(value);\n    }\n    if (isBytes(value)) {\n        return value;\n    }\n    throw new TypeError(`Unsupported value type: \"${typeof value}\".`);\n}\nexports.valueToBytes = valueToBytes;\n/**\n * Concatenate multiple byte-like values into a single `Uint8Array`. The values\n * can be `Uint8Array`, `bigint`, `number`, or `string`. This uses\n * {@link valueToBytes} under the hood to convert each value to bytes. Refer to\n * the documentation of that function for more information.\n *\n * @param values - The values to concatenate.\n * @returns The concatenated bytes as `Uint8Array`.\n */\nfunction concatBytes(values) {\n    const normalizedValues = new Array(values.length);\n    let byteLength = 0;\n    for (let i = 0; i < values.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = valueToBytes(values[i]);\n        normalizedValues[i] = value;\n        byteLength += value.length;\n    }\n    const bytes = new Uint8Array(byteLength);\n    for (let i = 0, offset = 0; i < normalizedValues.length; i++) {\n        // While we could simply spread the values into an array and use\n        // `Uint8Array.from`, that is a lot slower than using `Uint8Array.set`.\n        bytes.set(normalizedValues[i], offset);\n        offset += normalizedValues[i].length;\n    }\n    return bytes;\n}\nexports.concatBytes = concatBytes;\n/**\n * Create a {@link DataView} from a {@link Uint8Array}. This is a convenience\n * function that avoids having to create a {@link DataView} manually, which\n * requires passing the `byteOffset` and `byteLength` parameters every time.\n *\n * Not passing the `byteOffset` and `byteLength` parameters can result in\n * unexpected behavior when the {@link Uint8Array} is a view of a larger\n * {@link ArrayBuffer}, e.g., when using {@link Uint8Array.subarray}.\n *\n * This function also supports Node.js {@link Buffer}s.\n *\n * @example\n * ```typescript\n * const bytes = new Uint8Array([1, 2, 3]);\n *\n * // This is equivalent to:\n * // const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n * const dataView = createDataView(bytes);\n * ```\n * @param bytes - The bytes to create the {@link DataView} from.\n * @returns The {@link DataView}.\n */\nfunction createDataView(bytes) {\n    // To maintain compatibility with Node.js, we need to check if the bytes are\n    // a Buffer. If so, we need to slice the buffer to get the underlying\n    // ArrayBuffer.\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof Buffer !== 'undefined' && bytes instanceof Buffer) {\n        const buffer = bytes.buffer.slice(bytes.byteOffset, bytes.byteOffset + bytes.byteLength);\n        return new DataView(buffer);\n    }\n    return new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\nexports.createDataView = createDataView;\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStruct = void 0;\nconst superstruct_1 = require(\"superstruct\");\nconst base64_1 = require(\"./base64\");\nexports.ChecksumStruct = (0, superstruct_1.size)((0, base64_1.base64)((0, superstruct_1.string)(), { paddingRequired: true }), 44, 44);\n//# sourceMappingURL=checksum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHex = exports.createBytes = exports.createBigInt = exports.createNumber = void 0;\nconst superstruct_1 = require(\"superstruct\");\nconst assert_1 = require(\"./assert\");\nconst bytes_1 = require(\"./bytes\");\nconst hex_1 = require(\"./hex\");\nconst NumberLikeStruct = (0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.bigint)(), (0, superstruct_1.string)(), hex_1.StrictHexStruct]);\nconst NumberCoercer = (0, superstruct_1.coerce)((0, superstruct_1.number)(), NumberLikeStruct, Number);\nconst BigIntCoercer = (0, superstruct_1.coerce)((0, superstruct_1.bigint)(), NumberLikeStruct, BigInt);\nconst BytesLikeStruct = (0, superstruct_1.union)([hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array)]);\nconst BytesCoercer = (0, superstruct_1.coerce)((0, superstruct_1.instance)(Uint8Array), (0, superstruct_1.union)([hex_1.StrictHexStruct]), bytes_1.hexToBytes);\nconst HexCoercer = (0, superstruct_1.coerce)(hex_1.StrictHexStruct, (0, superstruct_1.instance)(Uint8Array), bytes_1.bytesToHex);\n/**\n * Create a number from a number-like value.\n *\n * - If the value is a number, it is returned as-is.\n * - If the value is a `bigint`, it is converted to a number.\n * - If the value is a string, it is interpreted as a decimal number.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number.\n *\n * This validates that the value is a number-like value, and that the resulting\n * number is not `NaN` or `Infinity`.\n *\n * @example\n * ```typescript\n * const value = createNumber('0x010203');\n * console.log(value); // 66051\n *\n * const otherValue = createNumber(123n);\n * console.log(otherValue); // 123\n * ```\n * @param value - The value to create the number from.\n * @returns The created number.\n * @throws If the value is not a number-like value, or if the resulting number\n * is `NaN` or `Infinity`.\n */\nfunction createNumber(value) {\n    try {\n        const result = (0, superstruct_1.create)(value, NumberCoercer);\n        (0, assert_1.assert)(Number.isFinite(result), `Expected a number-like value, got \"${value}\".`);\n        return result;\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${value}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createNumber = createNumber;\n/**\n * Create a `bigint` from a number-like value.\n *\n * - If the value is a number, it is converted to a `bigint`.\n * - If the value is a `bigint`, it is returned as-is.\n * - If the value is a string, it is interpreted as a decimal number and\n * converted to a `bigint`.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is\n * interpreted as a hexadecimal number and converted to a `bigint`.\n *\n * @example\n * ```typescript\n * const value = createBigInt('0x010203');\n * console.log(value); // 16909060n\n *\n * const otherValue = createBigInt(123);\n * console.log(otherValue); // 123n\n * ```\n * @param value - The value to create the bigint from.\n * @returns The created bigint.\n * @throws If the value is not a number-like value.\n */\nfunction createBigInt(value) {\n    try {\n        // The `BigInt` constructor throws if the value is not a number-like value.\n        // There is no need to validate the value manually.\n        return (0, superstruct_1.create)(value, BigIntCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a number-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBigInt = createBigInt;\n/**\n * Create a byte array from a bytes-like value.\n *\n * - If the value is a byte array, it is returned as-is.\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is interpreted\n * as a hexadecimal number and converted to a byte array.\n *\n * @example\n * ```typescript\n * const value = createBytes('0x010203');\n * console.log(value); // Uint8Array [ 1, 2, 3 ]\n *\n * const otherValue = createBytes('0x010203');\n * console.log(otherValue); // Uint8Array [ 1, 2, 3 ]\n * ```\n * @param value - The value to create the byte array from.\n * @returns The created byte array.\n * @throws If the value is not a bytes-like value.\n */\nfunction createBytes(value) {\n    if (typeof value === 'string' && value.toLowerCase() === '0x') {\n        return new Uint8Array();\n    }\n    try {\n        return (0, superstruct_1.create)(value, BytesCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createBytes = createBytes;\n/**\n * Create a hexadecimal string from a bytes-like value.\n *\n * - If the value is a hex string (i.e., it starts with \"0x\"), it is returned\n * as-is.\n * - If the value is a `Uint8Array`, it is converted to a hex string.\n *\n * @example\n * ```typescript\n * const value = createHex(new Uint8Array([1, 2, 3]));\n * console.log(value); // '0x010203'\n *\n * const otherValue = createHex('0x010203');\n * console.log(otherValue); // '0x010203'\n * ```\n * @param value - The value to create the hex string from.\n * @returns The created hex string.\n * @throws If the value is not a bytes-like value.\n */\nfunction createHex(value) {\n    if ((value instanceof Uint8Array && value.length === 0) ||\n        (typeof value === 'string' && value.toLowerCase() === '0x')) {\n        return '0x';\n    }\n    try {\n        return (0, superstruct_1.create)(value, HexCoercer);\n    }\n    catch (error) {\n        if (error instanceof superstruct_1.StructError) {\n            throw new Error(`Expected a bytes-like value, got \"${String(error.value)}\".`);\n        }\n        /* istanbul ignore next */\n        throw error;\n    }\n}\nexports.createHex = createHex;\n//# sourceMappingURL=coercers.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FrozenMap_map, _FrozenSet_set;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrozenSet = exports.FrozenMap = void 0;\n/**\n * A {@link ReadonlyMap} that cannot be modified after instantiation.\n * The implementation uses an inner map hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this map.\n */\nclass FrozenMap {\n    constructor(entries) {\n        _FrozenMap_map.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenMap_map, new Map(entries), \"f\");\n        Object.freeze(this);\n    }\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").size;\n    }\n    [(_FrozenMap_map = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\")[Symbol.iterator]();\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner map.\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").forEach((value, key, _map) => callbackfn.call(thisArg, value, key, this));\n    }\n    get(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").get(key);\n    }\n    has(key) {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").has(key);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenMap_map, \"f\").values();\n    }\n    toString() {\n        return `FrozenMap(${this.size}) {${this.size > 0\n            ? ` ${[...this.entries()]\n                .map(([key, value]) => `${String(key)} => ${String(value)}`)\n                .join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenMap = FrozenMap;\n/**\n * A {@link ReadonlySet} that cannot be modified after instantiation.\n * The implementation uses an inner set hidden via a private field, and the\n * immutability guarantee relies on it being impossible to get a reference\n * to this set.\n */\nclass FrozenSet {\n    constructor(values) {\n        _FrozenSet_set.set(this, void 0);\n        __classPrivateFieldSet(this, _FrozenSet_set, new Set(values), \"f\");\n        Object.freeze(this);\n    }\n    get size() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").size;\n    }\n    [(_FrozenSet_set = new WeakMap(), Symbol.iterator)]() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\")[Symbol.iterator]();\n    }\n    entries() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").entries();\n    }\n    forEach(callbackfn, thisArg) {\n        // We have to wrap the specified callback in order to prevent it from\n        // receiving a reference to the inner set.\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").forEach((value, value2, _set) => callbackfn.call(thisArg, value, value2, this));\n    }\n    has(value) {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").has(value);\n    }\n    keys() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").keys();\n    }\n    values() {\n        return __classPrivateFieldGet(this, _FrozenSet_set, \"f\").values();\n    }\n    toString() {\n        return `FrozenSet(${this.size}) {${this.size > 0\n            ? ` ${[...this.values()].map((member) => String(member)).join(', ')} `\n            : ''}}`;\n    }\n}\nexports.FrozenSet = FrozenSet;\nObject.freeze(FrozenMap);\nObject.freeze(FrozenMap.prototype);\nObject.freeze(FrozenSet);\nObject.freeze(FrozenSet.prototype);\n//# sourceMappingURL=collections.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=encryption-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonRpcIdValidator = exports.assertIsJsonRpcError = exports.isJsonRpcError = exports.assertIsJsonRpcFailure = exports.isJsonRpcFailure = exports.assertIsJsonRpcSuccess = exports.isJsonRpcSuccess = exports.assertIsJsonRpcResponse = exports.isJsonRpcResponse = exports.assertIsPendingJsonRpcResponse = exports.isPendingJsonRpcResponse = exports.JsonRpcResponseStruct = exports.JsonRpcFailureStruct = exports.JsonRpcSuccessStruct = exports.PendingJsonRpcResponseStruct = exports.assertIsJsonRpcRequest = exports.isJsonRpcRequest = exports.assertIsJsonRpcNotification = exports.isJsonRpcNotification = exports.JsonRpcNotificationStruct = exports.JsonRpcRequestStruct = exports.JsonRpcParamsStruct = exports.JsonRpcErrorStruct = exports.JsonRpcIdStruct = exports.JsonRpcVersionStruct = exports.jsonrpc2 = exports.getJsonSize = exports.isValidJson = exports.JsonStruct = exports.UnsafeJsonStruct = void 0;\nconst superstruct_1 = require(\"superstruct\");\nconst assert_1 = require(\"./assert\");\n/**\n * A struct to check if the given value is finite number. Superstruct's\n * `number()` struct does not check if the value is finite.\n *\n * @returns A struct to check if the given value is finite number.\n */\nconst finiteNumber = () => (0, superstruct_1.define)('finite number', (value) => {\n    return (0, superstruct_1.is)(value, (0, superstruct_1.number)()) && Number.isFinite(value);\n});\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * Note that this struct is unsafe. For safe validation, use {@link JsonStruct}.\n */\n// We cannot infer the type of the struct, because it is recursive.\nexports.UnsafeJsonStruct = (0, superstruct_1.union)([\n    (0, superstruct_1.literal)(null),\n    (0, superstruct_1.boolean)(),\n    finiteNumber(),\n    (0, superstruct_1.string)(),\n    (0, superstruct_1.array)((0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n    (0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.lazy)(() => exports.UnsafeJsonStruct)),\n]);\n/**\n * A struct to check if the given value is a valid JSON-serializable value.\n *\n * This struct sanitizes the value before validating it, so that it is safe to\n * use with untrusted input.\n */\nexports.JsonStruct = (0, superstruct_1.define)('Json', (value, context) => {\n    /**\n     * Helper function that runs the given struct validator and returns the\n     * validation errors, if any. If the value is valid, it returns `true`.\n     *\n     * @param innerValue - The value to validate.\n     * @param struct - The struct to use for validation.\n     * @returns The validation errors, or `true` if the value is valid.\n     */\n    function checkStruct(innerValue, struct) {\n        const iterator = struct.validator(innerValue, context);\n        const errors = [...iterator];\n        if (errors.length > 0) {\n            return errors;\n        }\n        return true;\n    }\n    try {\n        // The plain value must be a valid JSON value, but it may be altered in the\n        // process of JSON serialization, so we need to validate it again after\n        // serialization. This has the added benefit that the returned error messages\n        // will be more helpful, as they will point to the exact location of the\n        // invalid value.\n        //\n        // This seems overcomplicated, but without checking the plain value first,\n        // there are some cases where the validation passes, even though the value is\n        // not valid JSON. For example, `undefined` is not valid JSON, but serializing\n        // it will remove it from the object, so the validation will pass.\n        const unsafeResult = checkStruct(value, exports.UnsafeJsonStruct);\n        if (unsafeResult !== true) {\n            return unsafeResult;\n        }\n        // JavaScript engines are highly optimized for this specific use case of\n        // JSON parsing and stringifying, so there should be no performance impact.\n        return checkStruct(JSON.parse(JSON.stringify(value)), exports.UnsafeJsonStruct);\n    }\n    catch (error) {\n        if (error instanceof RangeError) {\n            return 'Circular reference detected';\n        }\n        return false;\n    }\n});\n/**\n * Check if the given value is a valid {@link Json} value, i.e., a value that is\n * serializable to JSON.\n *\n * @param value - The value to check.\n * @returns Whether the value is a valid {@link Json} value.\n */\nfunction isValidJson(value) {\n    return (0, superstruct_1.is)(value, exports.JsonStruct);\n}\nexports.isValidJson = isValidJson;\n/**\n * Get the size of a JSON value in bytes. This also validates the value.\n *\n * @param value - The JSON value to get the size of.\n * @returns The size of the JSON value in bytes.\n */\nfunction getJsonSize(value) {\n    (0, assert_1.assertStruct)(value, exports.JsonStruct, 'Invalid JSON value');\n    const json = JSON.stringify(value);\n    return new TextEncoder().encode(json).byteLength;\n}\nexports.getJsonSize = getJsonSize;\n/**\n * The string '2.0'.\n */\nexports.jsonrpc2 = '2.0';\nexports.JsonRpcVersionStruct = (0, superstruct_1.literal)(exports.jsonrpc2);\nexports.JsonRpcIdStruct = (0, superstruct_1.nullable)((0, superstruct_1.union)([(0, superstruct_1.number)(), (0, superstruct_1.string)()]));\nexports.JsonRpcErrorStruct = (0, superstruct_1.object)({\n    code: (0, superstruct_1.integer)(),\n    message: (0, superstruct_1.string)(),\n    data: (0, superstruct_1.optional)(exports.JsonStruct),\n    stack: (0, superstruct_1.optional)((0, superstruct_1.string)()),\n});\nexports.JsonRpcParamsStruct = (0, superstruct_1.optional)((0, superstruct_1.union)([(0, superstruct_1.record)((0, superstruct_1.string)(), exports.JsonStruct), (0, superstruct_1.array)(exports.JsonStruct)]));\nexports.JsonRpcRequestStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    method: (0, superstruct_1.string)(),\n    params: exports.JsonRpcParamsStruct,\n});\nexports.JsonRpcNotificationStruct = (0, superstruct_1.omit)(exports.JsonRpcRequestStruct, ['id']);\n/**\n * Check if the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcNotification}\n * object.\n */\nfunction isJsonRpcNotification(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcNotificationStruct);\n}\nexports.isJsonRpcNotification = isJsonRpcNotification;\n/**\n * Assert that the given value is a valid {@link JsonRpcNotification} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcNotification} object.\n */\nfunction assertIsJsonRpcNotification(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcNotificationStruct, 'Invalid JSON-RPC notification', ErrorWrapper);\n}\nexports.assertIsJsonRpcNotification = assertIsJsonRpcNotification;\n/**\n * Check if the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcRequest} object.\n */\nfunction isJsonRpcRequest(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcRequestStruct);\n}\nexports.isJsonRpcRequest = isJsonRpcRequest;\n/**\n * Assert that the given value is a valid {@link JsonRpcRequest} object.\n *\n * @param value - The JSON-RPC request or notification to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcRequest} object.\n */\nfunction assertIsJsonRpcRequest(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcRequestStruct, 'Invalid JSON-RPC request', ErrorWrapper);\n}\nexports.assertIsJsonRpcRequest = assertIsJsonRpcRequest;\nexports.PendingJsonRpcResponseStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: (0, superstruct_1.optional)((0, superstruct_1.unknown)()),\n    error: (0, superstruct_1.optional)(exports.JsonRpcErrorStruct),\n});\nexports.JsonRpcSuccessStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    result: exports.JsonStruct,\n});\nexports.JsonRpcFailureStruct = (0, superstruct_1.object)({\n    id: exports.JsonRpcIdStruct,\n    jsonrpc: exports.JsonRpcVersionStruct,\n    error: exports.JsonRpcErrorStruct,\n});\nexports.JsonRpcResponseStruct = (0, superstruct_1.union)([\n    exports.JsonRpcSuccessStruct,\n    exports.JsonRpcFailureStruct,\n]);\n/**\n * Type guard to check whether specified JSON-RPC response is a\n * {@link PendingJsonRpcResponse}.\n *\n * @param response - The JSON-RPC response to check.\n * @returns Whether the specified JSON-RPC response is pending.\n */\nfunction isPendingJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.PendingJsonRpcResponseStruct);\n}\nexports.isPendingJsonRpcResponse = isPendingJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link PendingJsonRpcResponse} object.\n *\n * @param response - The JSON-RPC response to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link PendingJsonRpcResponse}\n * object.\n */\nfunction assertIsPendingJsonRpcResponse(response, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(response, exports.PendingJsonRpcResponseStruct, 'Invalid pending JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsPendingJsonRpcResponse = assertIsPendingJsonRpcResponse;\n/**\n * Type guard to check if a value is a {@link JsonRpcResponse}.\n *\n * @param response - The object to check.\n * @returns Whether the object is a JsonRpcResponse.\n */\nfunction isJsonRpcResponse(response) {\n    return (0, superstruct_1.is)(response, exports.JsonRpcResponseStruct);\n}\nexports.isJsonRpcResponse = isJsonRpcResponse;\n/**\n * Assert that the given value is a valid {@link JsonRpcResponse} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcResponse} object.\n */\nfunction assertIsJsonRpcResponse(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcResponseStruct, 'Invalid JSON-RPC response', ErrorWrapper);\n}\nexports.assertIsJsonRpcResponse = assertIsJsonRpcResponse;\n/**\n * Check if the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcSuccess} object.\n */\nfunction isJsonRpcSuccess(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcSuccessStruct);\n}\nexports.isJsonRpcSuccess = isJsonRpcSuccess;\n/**\n * Assert that the given value is a valid {@link JsonRpcSuccess} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcSuccess} object.\n */\nfunction assertIsJsonRpcSuccess(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcSuccessStruct, 'Invalid JSON-RPC success response', ErrorWrapper);\n}\nexports.assertIsJsonRpcSuccess = assertIsJsonRpcSuccess;\n/**\n * Check if the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcFailure} object.\n */\nfunction isJsonRpcFailure(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcFailureStruct);\n}\nexports.isJsonRpcFailure = isJsonRpcFailure;\n/**\n * Assert that the given value is a valid {@link JsonRpcFailure} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcFailure} object.\n */\nfunction assertIsJsonRpcFailure(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcFailureStruct, 'Invalid JSON-RPC failure response', ErrorWrapper);\n}\nexports.assertIsJsonRpcFailure = assertIsJsonRpcFailure;\n/**\n * Check if the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @returns Whether the given value is a valid {@link JsonRpcError} object.\n */\nfunction isJsonRpcError(value) {\n    return (0, superstruct_1.is)(value, exports.JsonRpcErrorStruct);\n}\nexports.isJsonRpcError = isJsonRpcError;\n/**\n * Assert that the given value is a valid {@link JsonRpcError} object.\n *\n * @param value - The value to check.\n * @param ErrorWrapper - The error class to throw if the assertion fails.\n * Defaults to {@link AssertionError}.\n * @throws If the given value is not a valid {@link JsonRpcError} object.\n */\nfunction assertIsJsonRpcError(value, \n// eslint-disable-next-line @typescript-eslint/naming-convention\nErrorWrapper) {\n    (0, assert_1.assertStruct)(value, exports.JsonRpcErrorStruct, 'Invalid JSON-RPC error', ErrorWrapper);\n}\nexports.assertIsJsonRpcError = assertIsJsonRpcError;\n/**\n * Gets a function for validating JSON-RPC request / response `id` values.\n *\n * By manipulating the options of this factory, you can control the behavior\n * of the resulting validator for some edge cases. This is useful because e.g.\n * `null` should sometimes but not always be permitted.\n *\n * Note that the empty string (`''`) is always permitted by the JSON-RPC\n * specification, but that kind of sucks and you may want to forbid it in some\n * instances anyway.\n *\n * For more details, see the\n * [JSON-RPC Specification](https://www.jsonrpc.org/specification).\n *\n * @param options - An options object.\n * @param options.permitEmptyString - Whether the empty string (i.e. `''`)\n * should be treated as a valid ID. Default: `true`\n * @param options.permitFractions - Whether fractional numbers (e.g. `1.2`)\n * should be treated as valid IDs. Default: `false`\n * @param options.permitNull - Whether `null` should be treated as a valid ID.\n * Default: `true`\n * @returns The JSON-RPC ID validator function.\n */\nfunction getJsonRpcIdValidator(options) {\n    const { permitEmptyString, permitFractions, permitNull } = Object.assign({ permitEmptyString: true, permitFractions: false, permitNull: true }, options);\n    /**\n     * Type guard for {@link JsonRpcId}.\n     *\n     * @param id - The JSON-RPC ID value to check.\n     * @returns Whether the given ID is valid per the options given to the\n     * factory.\n     */\n    const isValidJsonRpcId = (id) => {\n        return Boolean((typeof id === 'number' && (permitFractions || Number.isInteger(id))) ||\n            (typeof id === 'string' && (permitEmptyString || id.length > 0)) ||\n            (permitNull && id === null));\n    };\n    return isValidJsonRpcId;\n}\nexports.getJsonRpcIdValidator = getJsonRpcIdValidator;\n//# sourceMappingURL=json.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=keyring.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.createProjectLogger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst globalLogger = (0, debug_1.default)('metamask');\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nfunction createProjectLogger(projectName) {\n    return globalLogger.extend(projectName);\n}\nexports.createProjectLogger = createProjectLogger;\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nfunction createModuleLogger(projectLogger, moduleName) {\n    return projectLogger.extend(moduleName);\n}\nexports.createModuleLogger = createModuleLogger;\n//# sourceMappingURL=logging.js.map","\"use strict\";\n//\n// Types\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateNumberSize = exports.calculateStringSize = exports.isASCII = exports.isPlainObject = exports.ESCAPE_CHARACTERS_REGEXP = exports.JsonSize = exports.hasProperty = exports.isObject = exports.isNullOrUndefined = exports.isNonEmptyArray = void 0;\n//\n// Type Guards\n//\n/**\n * A {@link NonEmptyArray} type guard.\n *\n * @template Element - The non-empty array member type.\n * @param value - The value to check.\n * @returns Whether the value is a non-empty array.\n */\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\n/**\n * Type guard for \"nullishness\".\n *\n * @param value - Any value.\n * @returns `true` if the value is null or undefined, `false` otherwise.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n/**\n * A type guard for {@link RuntimeObject}.\n *\n * @param value - The value to check.\n * @returns Whether the specified value has a runtime type of `object` and is\n * neither `null` nor an `Array`.\n */\nfunction isObject(value) {\n    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);\n}\nexports.isObject = isObject;\n//\n// Other utility functions\n//\n/**\n * A type guard for ensuring an object has a property.\n *\n * @param objectToCheck - The object to check.\n * @param name - The property name to check for.\n * @returns Whether the specified object has an own property with the specified\n * name, regardless of whether it is enumerable or not.\n */\nconst hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nexports.hasProperty = hasProperty;\n/**\n * Predefined sizes (in Bytes) of specific parts of JSON structure.\n */\nvar JsonSize;\n(function (JsonSize) {\n    JsonSize[JsonSize[\"Null\"] = 4] = \"Null\";\n    JsonSize[JsonSize[\"Comma\"] = 1] = \"Comma\";\n    JsonSize[JsonSize[\"Wrapper\"] = 1] = \"Wrapper\";\n    JsonSize[JsonSize[\"True\"] = 4] = \"True\";\n    JsonSize[JsonSize[\"False\"] = 5] = \"False\";\n    JsonSize[JsonSize[\"Quote\"] = 1] = \"Quote\";\n    JsonSize[JsonSize[\"Colon\"] = 1] = \"Colon\";\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    JsonSize[JsonSize[\"Date\"] = 24] = \"Date\";\n})(JsonSize = exports.JsonSize || (exports.JsonSize = {}));\n/**\n * Regular expression with pattern matching for (special) escaped characters.\n */\nexports.ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\n/**\n * Check if the value is plain object.\n *\n * @param value - Value to be checked.\n * @returns True if an object is the plain JavaScript object,\n * false if the object is not plain (e.g. function).\n */\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        let proto = value;\n        while (Object.getPrototypeOf(proto) !== null) {\n            proto = Object.getPrototypeOf(proto);\n        }\n        return Object.getPrototypeOf(value) === proto;\n    }\n    catch (_) {\n        return false;\n    }\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Check if character is ASCII.\n *\n * @param character - Character.\n * @returns True if a character code is ASCII, false if not.\n */\nfunction isASCII(character) {\n    return character.charCodeAt(0) <= 127;\n}\nexports.isASCII = isASCII;\n/**\n * Calculate string size.\n *\n * @param value - String value to calculate size.\n * @returns Number of bytes used to store whole string value.\n */\nfunction calculateStringSize(value) {\n    var _a;\n    const size = value.split('').reduce((total, character) => {\n        if (isASCII(character)) {\n            return total + 1;\n        }\n        return total + 2;\n    }, 0);\n    // Also detect characters that need backslash escape\n    return size + ((_a = value.match(exports.ESCAPE_CHARACTERS_REGEXP)) !== null && _a !== void 0 ? _a : []).length;\n}\nexports.calculateStringSize = calculateStringSize;\n/**\n * Calculate size of a number ofter JSON serialization.\n *\n * @param value - Number value to calculate size.\n * @returns Number of bytes used to store whole number in JSON.\n */\nfunction calculateNumberSize(value) {\n    return value.toString().length;\n}\nexports.calculateNumberSize = calculateNumberSize;\n//# sourceMappingURL=misc.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBigInt = exports.hexToNumber = exports.bigIntToHex = exports.numberToHex = void 0;\nconst assert_1 = require(\"./assert\");\nconst hex_1 = require(\"./hex\");\n/**\n * Convert a number to a hexadecimal string. This verifies that the number is a\n * non-negative safe integer.\n *\n * To convert a `bigint` to a hexadecimal string instead, use\n * {@link bigIntToHex}.\n *\n * @example\n * ```typescript\n * numberToHex(0); // '0x0'\n * numberToHex(1); // '0x1'\n * numberToHex(16); // '0x10'\n * ```\n * @param value - The number to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the number is not a non-negative safe integer.\n */\nconst numberToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'number', 'Value must be a number.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative number.');\n    (0, assert_1.assert)(Number.isSafeInteger(value), 'Value is not a safe integer. Use `bigIntToHex` instead.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.numberToHex = numberToHex;\n/**\n * Convert a `bigint` to a hexadecimal string. This verifies that the `bigint`\n * is a non-negative integer.\n *\n * To convert a number to a hexadecimal string instead, use {@link numberToHex}.\n *\n * @example\n * ```typescript\n * bigIntToHex(0n); // '0x0'\n * bigIntToHex(1n); // '0x1'\n * bigIntToHex(16n); // '0x10'\n * ```\n * @param value - The `bigint` to convert to a hexadecimal string.\n * @returns The hexadecimal string, with the \"0x\"-prefix.\n * @throws If the `bigint` is not a non-negative integer.\n */\nconst bigIntToHex = (value) => {\n    (0, assert_1.assert)(typeof value === 'bigint', 'Value must be a bigint.');\n    (0, assert_1.assert)(value >= 0, 'Value must be a non-negative bigint.');\n    return (0, hex_1.add0x)(value.toString(16));\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert a hexadecimal string to a number. This verifies that the string is a\n * valid hex string, and that the resulting number is a safe integer. Both\n * \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a `bigint` instead, use\n * {@link hexToBigInt}.\n *\n * @example\n * ```typescript\n * hexToNumber('0x0'); // 0\n * hexToNumber('0x1'); // 1\n * hexToNumber('0x10'); // 16\n * ```\n * @param value - The hexadecimal string to convert to a number.\n * @returns The number.\n * @throws If the value is not a valid hexadecimal string, or if the resulting\n * number is not a safe integer.\n */\nconst hexToNumber = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // `parseInt` accepts values without the \"0x\"-prefix, whereas `Number` does\n    // not. Using this is slightly faster than `Number(add0x(value))`.\n    const numberValue = parseInt(value, 16);\n    (0, assert_1.assert)(Number.isSafeInteger(numberValue), 'Value is not a safe integer. Use `hexToBigInt` instead.');\n    return numberValue;\n};\nexports.hexToNumber = hexToNumber;\n/**\n * Convert a hexadecimal string to a `bigint`. This verifies that the string is\n * a valid hex string. Both \"0x\"-prefixed and unprefixed strings are supported.\n *\n * To convert a hexadecimal string to a number instead, use {@link hexToNumber}.\n *\n * @example\n * ```typescript\n * hexToBigInt('0x0'); // 0n\n * hexToBigInt('0x1'); // 1n\n * hexToBigInt('0x10'); // 16n\n * ```\n * @param value - The hexadecimal string to convert to a `bigint`.\n * @returns The `bigint`.\n * @throws If the value is not a valid hexadecimal string.\n */\nconst hexToBigInt = (value) => {\n    (0, hex_1.assertIsHexString)(value);\n    // The `BigInt` constructor requires the \"0x\"-prefix to parse a hex string.\n    return BigInt((0, hex_1.add0x)(value));\n};\nexports.hexToBigInt = hexToBigInt;\n//# sourceMappingURL=number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=opaque.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeSince = exports.inMilliseconds = exports.Duration = void 0;\n/**\n * Common duration constants, in milliseconds.\n */\nvar Duration;\n(function (Duration) {\n    /**\n     * A millisecond.\n     */\n    Duration[Duration[\"Millisecond\"] = 1] = \"Millisecond\";\n    /**\n     * A second, in milliseconds.\n     */\n    Duration[Duration[\"Second\"] = 1000] = \"Second\";\n    /**\n     * A minute, in milliseconds.\n     */\n    Duration[Duration[\"Minute\"] = 60000] = \"Minute\";\n    /**\n     * An hour, in milliseconds.\n     */\n    Duration[Duration[\"Hour\"] = 3600000] = \"Hour\";\n    /**\n     * A day, in milliseconds.\n     */\n    Duration[Duration[\"Day\"] = 86400000] = \"Day\";\n    /**\n     * A week, in milliseconds.\n     */\n    Duration[Duration[\"Week\"] = 604800000] = \"Week\";\n    /**\n     * A year, in milliseconds.\n     */\n    Duration[Duration[\"Year\"] = 31536000000] = \"Year\";\n})(Duration = exports.Duration || (exports.Duration = {}));\nconst isNonNegativeInteger = (number) => Number.isInteger(number) && number >= 0;\nconst assertIsNonNegativeInteger = (number, name) => {\n    if (!isNonNegativeInteger(number)) {\n        throw new Error(`\"${name}\" must be a non-negative integer. Received: \"${number}\".`);\n    }\n};\n/**\n * Calculates the millisecond value of the specified number of units of time.\n *\n * @param count - The number of units of time.\n * @param duration - The unit of time to count.\n * @returns The count multiplied by the specified duration.\n */\nfunction inMilliseconds(count, duration) {\n    assertIsNonNegativeInteger(count, 'count');\n    return count * duration;\n}\nexports.inMilliseconds = inMilliseconds;\n/**\n * Gets the milliseconds since a particular Unix epoch timestamp.\n *\n * @param timestamp - A Unix millisecond timestamp.\n * @returns The number of milliseconds elapsed since the specified timestamp.\n */\nfunction timeSince(timestamp) {\n    assertIsNonNegativeInteger(timestamp, 'timestamp');\n    return Date.now() - timestamp;\n}\nexports.timeSince = timeSince;\n//# sourceMappingURL=time.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.js.map","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","const SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.satisfiesVersionRange = exports.gtRange = exports.gtVersion = exports.assertIsSemVerRange = exports.assertIsSemVerVersion = exports.isValidSemVerRange = exports.isValidSemVerVersion = exports.VersionRangeStruct = exports.VersionStruct = void 0;\nconst semver_1 = require(\"semver\");\nconst superstruct_1 = require(\"superstruct\");\nconst assert_1 = require(\"./assert\");\n/**\n * A struct for validating a version string.\n */\nexports.VersionStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version', (value) => {\n    if ((0, semver_1.valid)(value) === null) {\n        return `Expected SemVer version, got \"${value}\"`;\n    }\n    return true;\n});\nexports.VersionRangeStruct = (0, superstruct_1.refine)((0, superstruct_1.string)(), 'Version range', (value) => {\n    if ((0, semver_1.validRange)(value) === null) {\n        return `Expected SemVer range, got \"${value}\"`;\n    }\n    return true;\n});\n/**\n * Checks whether a SemVer version is valid.\n *\n * @param version - A potential version.\n * @returns `true` if the version is valid, and `false` otherwise.\n */\nfunction isValidSemVerVersion(version) {\n    return (0, superstruct_1.is)(version, exports.VersionStruct);\n}\nexports.isValidSemVerVersion = isValidSemVerVersion;\n/**\n * Checks whether a SemVer version range is valid.\n *\n * @param versionRange - A potential version range.\n * @returns `true` if the version range is valid, and `false` otherwise.\n */\nfunction isValidSemVerRange(versionRange) {\n    return (0, superstruct_1.is)(versionRange, exports.VersionRangeStruct);\n}\nexports.isValidSemVerRange = isValidSemVerRange;\n/**\n * Asserts that a value is a valid concrete SemVer version.\n *\n * @param version - A potential SemVer concrete version.\n */\nfunction assertIsSemVerVersion(version) {\n    (0, assert_1.assertStruct)(version, exports.VersionStruct);\n}\nexports.assertIsSemVerVersion = assertIsSemVerVersion;\n/**\n * Asserts that a value is a valid SemVer range.\n *\n * @param range - A potential SemVer range.\n */\nfunction assertIsSemVerRange(range) {\n    (0, assert_1.assertStruct)(range, exports.VersionRangeStruct);\n}\nexports.assertIsSemVerRange = assertIsSemVerRange;\n/**\n * Checks whether a SemVer version is greater than another.\n *\n * @param version1 - The left-hand version.\n * @param version2 - The right-hand version.\n * @returns `version1 > version2`.\n */\nfunction gtVersion(version1, version2) {\n    return (0, semver_1.gt)(version1, version2);\n}\nexports.gtVersion = gtVersion;\n/**\n * Checks whether a SemVer version is greater than all possibilities in a range.\n *\n * @param version - A SemvVer version.\n * @param range - The range to check against.\n * @returns `version > range`.\n */\nfunction gtRange(version, range) {\n    return (0, semver_1.gtr)(version, range);\n}\nexports.gtRange = gtRange;\n/**\n * Returns whether a SemVer version satisfies a SemVer range.\n *\n * @param version - The SemVer version to check.\n * @param versionRange - The SemVer version range to check against.\n * @returns Whether the version satisfied the version range.\n */\nfunction satisfiesVersionRange(version, versionRange) {\n    return (0, semver_1.satisfies)(version, versionRange, {\n        includePrerelease: true,\n    });\n}\nexports.satisfiesVersionRange = satisfiesVersionRange;\n//# sourceMappingURL=versions.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./assert\"), exports);\n__exportStar(require(\"./base64\"), exports);\n__exportStar(require(\"./bytes\"), exports);\n__exportStar(require(\"./checksum\"), exports);\n__exportStar(require(\"./coercers\"), exports);\n__exportStar(require(\"./collections\"), exports);\n__exportStar(require(\"./encryption-types\"), exports);\n__exportStar(require(\"./hex\"), exports);\n__exportStar(require(\"./json\"), exports);\n__exportStar(require(\"./keyring\"), exports);\n__exportStar(require(\"./logging\"), exports);\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./number\"), exports);\n__exportStar(require(\"./opaque\"), exports);\n__exportStar(require(\"./time\"), exports);\n__exportStar(require(\"./transaction-types\"), exports);\n__exportStar(require(\"./versions\"), exports);\n//# sourceMappingURL=index.js.map"],"names":["detectEthereumProvider","mustBeMetaMask","silent","timeout","_validateInputs","handled","resolve","handleEthereum","ethereum","dist","cjs","events_1","require$$0","safeApply","handler","context","args","err","arrayClone","arr","n","copy","i","SafeEventEmitter","type","doError","events","er","len","listeners","assert_1","superstruct_1","isErrorWithMessage","error","isConstructable","fn","_a","_b","getErrorMessage","message","getError","ErrorWrapper","AssertionError","options","assert","value","assertStruct","struct","errorPrefix","assertExhaustive","_object","base64_1","require$$1","base64","paddingRequired","characterSet","letters","re","exports","isHexString","isStrictHexString","assertIsHexString","assertIsStrictHexString","add0x","hexadecimal","remove0x","bytes","hex_1","HEX_MINIMUM_NUMBER_CHARACTER","HEX_MAXIMUM_NUMBER_CHARACTER","HEX_CHARACTER_OFFSET","getPrecomputedHexValuesBuilder","lookupTable","getPrecomputedHexValues","isBytes","assertIsBytes","bytesToHex","bytesToBigInt","bytesToSignedBigInt","byte","bytesToNumber","bigint","bytesToString","hexToBytes","strippedValue","normalizedValue","c1","c2","n1","n2","bigIntToBytes","bigIntFits","mask","signedBigIntToBytes","byteLength","numberValue","numberToBytes","stringToBytes","valueToBytes","concatBytes","values","normalizedValues","offset","createDataView","buffer","checksum","coercers","bytes_1","require$$2","require$$3","NumberLikeStruct","NumberCoercer","BigIntCoercer","BytesCoercer","HexCoercer","createNumber","result","createBigInt","createBytes","createHex","__classPrivateFieldSet","this","receiver","state","kind","f","__classPrivateFieldGet","_FrozenMap_map","_FrozenSet_set","collections","FrozenMap","entries","callbackfn","thisArg","key","_map","FrozenSet","value2","_set","member","encryptionTypes","finiteNumber","checkStruct","innerValue","errors","unsafeResult","isValidJson","getJsonSize","json","isJsonRpcNotification","assertIsJsonRpcNotification","isJsonRpcRequest","assertIsJsonRpcRequest","isPendingJsonRpcResponse","response","assertIsPendingJsonRpcResponse","isJsonRpcResponse","assertIsJsonRpcResponse","isJsonRpcSuccess","assertIsJsonRpcSuccess","isJsonRpcFailure","assertIsJsonRpcFailure","isJsonRpcError","assertIsJsonRpcError","getJsonRpcIdValidator","permitEmptyString","permitFractions","permitNull","id","keyring","__importDefault","mod","logging","debug_1","globalLogger","createProjectLogger","projectName","createModuleLogger","projectLogger","moduleName","isNonEmptyArray","isNullOrUndefined","isObject","hasProperty","objectToCheck","name","JsonSize","isPlainObject","proto","isASCII","character","calculateStringSize","total","calculateNumberSize","number","numberToHex","bigIntToHex","hexToNumber","hexToBigInt","opaque","Duration","isNonNegativeInteger","assertIsNonNegativeInteger","inMilliseconds","count","duration","timeSince","timestamp","transactionTypes","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","RELEASE_TYPES","constants","debug","define_process_env_default","module","safeRe","src","t","R","LETTERDASHNUMBER","safeRegexReplacements","makeSafeRegex","token","max","createToken","isGlobal","safe","index","looseOption","emptyOpts","parseOptions","parseOptions_1","numeric","compareIdentifiers","a","b","anum","bnum","rcompareIdentifiers","identifiers","require$$4","SemVer$d","SemVer","version","m","num","other","release","identifier","identifierBase","base","prerelease","semver","parse","throwErrors","parse_1","valid","v","valid_1","clean","s","clean_1","inc","inc_1","diff","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","diff_1","major","loose","major_1","minor","minor_1","patch","patch_1","parsed","prerelease_1","compare","compare_1","rcompare","rcompare_1","compareLoose","compareLoose_1","compareBuild","versionA","versionB","compareBuild_1","sort","list","sort_1","rsort","rsort_1","gt","gt_1","lt","lt_1","eq","eq_1","neq","neq_1","gte","gte_1","lte","lte_1","require$$5","cmp","op","cmp_1","coerce","match","coerceRtlRegex","next","build","coerce_1","LRUCache","firstKey","lrucache","SPACE_CHARACTERS","Range","range","Comparator","r","c","first","isNullSet","isAny","comps","k","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","hr","hyphenReplace","comparatorTrimReplace","tildeTrimReplace","caretTrimReplace","rangeList","comp","parseComparator","replaceGTE0","rangeMap","comparators","thisComparators","isSatisfiable","rangeComparators","thisComparator","rangeComparator","testSet","LRU","require$$6","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","_","M","p","pr","ret","replaceCaret","z","replaceXRange","gtlt","xM","xm","xp","anyX","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","set","allowed","ANY","comparator","satisfies","satisfies_1","toComparators","toComparators_1","maxSatisfying","versions","maxSV","rangeObj","maxSatisfying_1","minSatisfying","min","minSV","minSatisfying_1","minVersion","minver","setMin","compver","minVersion_1","validRange","require$$7","outside","hilo","gtfn","ltefn","ltfn","ecomp","high","low","outside_1","gtr","gtr_1","ltr","ltr_1","intersects","r1","r2","intersects_1","simplify","prev","ranges","simplified","original","subset","sub","dom","sawNonNull","OUTER","simpleSub","simpleDom","isSub","simpleSubset","minimumVersionWithPreRelease","minimumVersion","eqSet","higherGT","lowerLT","gtltComp","higher","lower","hasDomLT","hasDomGT","needDomLTPre","needDomGTPre","subset_1","internalRe","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","simplifyRange","require$$39","require$$40","semver_1","isValidSemVerVersion","isValidSemVerRange","versionRange","assertIsSemVerVersion","assertIsSemVerRange","gtVersion","gtRange","satisfiesVersionRange","__createBinding","o","k2","desc","__exportStar"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64]}