{"version":3,"file":"vendor-b-DuUIYwKf.js","sources":["../../../node_modules/bignumber.js/bignumber.js","../../../__vite-browser-external","../../../node_modules/bn.js/lib/bn.js","../../../node_modules/base64-js/index.js","../../../node_modules/buffer/index.js"],"sourcesContent":[";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, -1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    // If any number is NaN, return NaN.\r\n    function maxOrMin(args, n) {\r\n      var k, y,\r\n        i = 1,\r\n        x = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        y = new BigNumber(args[i]);\r\n        if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n          x = y;\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","export default {}","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n"],"names":["globalObject","BigNumber","isNumeric","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","clone","configObject","div","convertBase","parseNumeric","P","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","ALPHABET","alphabetHasNormalDecimalDigits","v","b","alphabet","c","caseChanged","e","i","isNum","len","str","x","intCheck","round","obj","p","n","s","out","maxOrMin","pow2_53","random53bitInt","dp","a","k","rand","args","sum","decimal","toBaseOut","baseIn","baseOut","j","arr","arrL","sign","callerIsToString","d","r","xc","y","rm","toFixedPoint","coeffToString","multiply","base","m","temp","xlo","xhi","carry","klo","khi","compare","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","yc","bitFloor","format","id","c0","ne","toExponential","normalise","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","p1","p2","sd","ni","rd","pows10","valueOf","half","isModExp","nIsBig","nIsNeg","nIsOdd","isOdd","t","xLTy","xe","ye","xcL","ycL","ylo","yhi","zc","sqrtBase","rep","g1","g2","groupSeparator","intPart","fractionPart","isNeg","intDigits","md","d0","d1","d2","exp","n0","n1","z","l","min","max","name","zs","module","this","__viteBrowserExternal","exports","assert","val","msg","inherits","ctor","superCtor","TempCtor","BN","number","endian","Buffer","require$$0","num","left","right","start","w","off","parseHex4Bits","string","index","parseHexByte","lowerBound","parseLength","parseBase","end","mul","limbLen","limbPow","total","mod","word","pow","dest","move","src","size","inspect","zeros","groupSizes","groupBases","padding","groupSize","groupBase","ret","length","allocate","ArrayType","byteLength","reqLength","res","postfix","position","shift","hi","toBitArray","bit","wbit","width","bytesNeeded","bitsLeft","smallMulTo","self","lo","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","isNegNum","bits","carryMask","newCarry","hint","extended","h","mask","maskedWords","mode","bhi","bhiBits","diff","qj","positive","dm","r2","acc","A","B","C","D","g","yp","xp","im","jm","x1","x2","delta","negative","Red","ctx","primes","MPrime","tmp","rlen","input","K256","output","outLen","prev","next","P224","P192","P25519","prime","mod3","one","nOne","lpow","inv","windowSize","wnd","current","currentLen","Mont","u","base64Js","toByteArray","fromByteArray","lookup","revLookup","Arr","code","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","curByte","tripletToBase64","encodeChunk","uint8","extraBytes","parts","maxChunkLength","len2","base64","ieee754","require$$1","customInspectSymbol","SlowBuffer","K_MAX_LENGTH","typedArraySupport","proto","createBuffer","buf","arg","encodingOrOffset","allocUnsafe","from","value","fromString","fromArrayView","isInstance","fromArrayBuffer","fromObject","assertSize","alloc","fill","encoding","checked","actual","fromArrayLike","array","arrayView","copy","byteOffset","numberIsNaN","list","buffer","pos","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","read","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","hexSliceLookupTable","bytes","newBuf","checkOffset","ext","noAssert","checkInt","maxBytes","limit","sub","checkIEEE754","writeFloat","littleEndian","writeDouble","targetStart","INVALID_BASE64_RE","base64clean","units","leadSurrogate","byteArray","dst","type","table","i16"],"mappings":"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","x_google_ignoreList":[0,2,3,4]}