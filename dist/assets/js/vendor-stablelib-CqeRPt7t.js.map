{"version":3,"file":"vendor-stablelib-CqeRPt7t.js","sources":["../../../node_modules/@stablelib/int/lib/int.js","../../../node_modules/@stablelib/binary/lib/binary.js","../../../node_modules/@stablelib/wipe/lib/wipe.js","../../../node_modules/@stablelib/chacha/lib/chacha.js","../../../node_modules/@stablelib/constant-time/lib/constant-time.js","../../../node_modules/@stablelib/poly1305/lib/poly1305.js","../../../node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js","../../../node_modules/@stablelib/hash/lib/hash.js","../../../node_modules/@stablelib/hmac/lib/hmac.js","../../../node_modules/@stablelib/hkdf/lib/hkdf.js","../../../node_modules/@stablelib/random/lib/source/browser.js","../../../node_modules/@stablelib/random/lib/source/node.js","../../../node_modules/@stablelib/random/lib/source/system.js","../../../node_modules/@stablelib/random/lib/random.js","../../../node_modules/@stablelib/sha256/lib/sha256.js","../../../node_modules/@stablelib/x25519/lib/x25519.js","../../../node_modules/@stablelib/sha512/lib/sha512.js","../../../node_modules/@stablelib/ed25519/lib/ed25519.js"],"sourcesContent":["\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package int provides helper functions for integerss.\n */\n// Shim using 16-bit pieces.\nfunction imulShim(a, b) {\n    var ah = (a >>> 16) & 0xffff, al = a & 0xffff;\n    var bh = (b >>> 16) & 0xffff, bl = b & 0xffff;\n    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\n}\n/** 32-bit integer multiplication.  */\n// Use system Math.imul if available, otherwise use our shim.\nexports.mul = Math.imul || imulShim;\n/** 32-bit integer addition.  */\nfunction add(a, b) {\n    return (a + b) | 0;\n}\nexports.add = add;\n/**  32-bit integer subtraction.  */\nfunction sub(a, b) {\n    return (a - b) | 0;\n}\nexports.sub = sub;\n/** 32-bit integer left rotation */\nfunction rotl(x, n) {\n    return x << n | x >>> (32 - n);\n}\nexports.rotl = rotl;\n/** 32-bit integer left rotation */\nfunction rotr(x, n) {\n    return x << (32 - n) | x >>> n;\n}\nexports.rotr = rotr;\nfunction isIntegerShim(n) {\n    return typeof n === \"number\" && isFinite(n) && Math.floor(n) === n;\n}\n/**\n * Returns true if the argument is an integer number.\n *\n * In ES2015, Number.isInteger.\n */\nexports.isInteger = Number.isInteger || isIntegerShim;\n/**\n *  Math.pow(2, 53) - 1\n *\n *  In ES2015 Number.MAX_SAFE_INTEGER.\n */\nexports.MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Returns true if the argument is a safe integer number\n * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)\n *\n * In ES2015, Number.isSafeInteger.\n */\nexports.isSafeInteger = function (n) {\n    return exports.isInteger(n) && (n >= -exports.MAX_SAFE_INTEGER && n <= exports.MAX_SAFE_INTEGER);\n};\n//# sourceMappingURL=int.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package binary provides functions for encoding and decoding numbers in byte arrays.\n */\nvar int_1 = require(\"@stablelib/int\");\n// TODO(dchest): add asserts for correct value ranges and array offsets.\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * signed 16-bit integer and returns it.\n */\nfunction readInt16BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (((array[offset + 0] << 8) | array[offset + 1]) << 16) >> 16;\n}\nexports.readInt16BE = readInt16BE;\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * unsigned 16-bit integer and returns it.\n */\nfunction readUint16BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset + 0] << 8) | array[offset + 1]) >>> 0;\n}\nexports.readUint16BE = readUint16BE;\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * signed 16-bit integer and returns it.\n */\nfunction readInt16LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (((array[offset + 1] << 8) | array[offset]) << 16) >> 16;\n}\nexports.readInt16LE = readInt16LE;\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * unsigned 16-bit integer and returns it.\n */\nfunction readUint16LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset + 1] << 8) | array[offset]) >>> 0;\n}\nexports.readUint16LE = readUint16LE;\n/**\n * Writes 2-byte big-endian representation of 16-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint16BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(2); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 8;\n    out[offset + 1] = value >>> 0;\n    return out;\n}\nexports.writeUint16BE = writeUint16BE;\nexports.writeInt16BE = writeUint16BE;\n/**\n * Writes 2-byte little-endian representation of 16-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint16LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(2); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    return out;\n}\nexports.writeUint16LE = writeUint16LE;\nexports.writeInt16LE = writeUint16LE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * signed 32-bit integer and returns it.\n */\nfunction readInt32BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3];\n}\nexports.readInt32BE = readInt32BE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * unsigned 32-bit integer and returns it.\n */\nfunction readUint32BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3]) >>> 0;\n}\nexports.readUint32BE = readUint32BE;\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * signed 32-bit integer and returns it.\n */\nfunction readInt32LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset];\n}\nexports.readInt32LE = readInt32LE;\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * unsigned 32-bit integer and returns it.\n */\nfunction readUint32LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset]) >>> 0;\n}\nexports.readUint32LE = readUint32LE;\n/**\n * Writes 4-byte big-endian representation of 32-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint32BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 24;\n    out[offset + 1] = value >>> 16;\n    out[offset + 2] = value >>> 8;\n    out[offset + 3] = value >>> 0;\n    return out;\n}\nexports.writeUint32BE = writeUint32BE;\nexports.writeInt32BE = writeUint32BE;\n/**\n * Writes 4-byte little-endian representation of 32-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint32LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    out[offset + 2] = value >>> 16;\n    out[offset + 3] = value >>> 24;\n    return out;\n}\nexports.writeUint32LE = writeUint32LE;\nexports.writeInt32LE = writeUint32LE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nfunction readInt64BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var hi = readInt32BE(array, offset);\n    var lo = readInt32BE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo >> 31) * 0x100000000);\n}\nexports.readInt64BE = readInt64BE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nfunction readUint64BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var hi = readUint32BE(array, offset);\n    var lo = readUint32BE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\nexports.readUint64BE = readUint64BE;\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nfunction readInt64LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var lo = readInt32LE(array, offset);\n    var hi = readInt32LE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo >> 31) * 0x100000000);\n}\nexports.readInt64LE = readInt64LE;\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nfunction readUint64LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var lo = readUint32LE(array, offset);\n    var hi = readUint32LE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\nexports.readUint64LE = readUint64LE;\n/**\n * Writes 8-byte big-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint64BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    writeUint32BE(value / 0x100000000 >>> 0, out, offset);\n    writeUint32BE(value >>> 0, out, offset + 4);\n    return out;\n}\nexports.writeUint64BE = writeUint64BE;\nexports.writeInt64BE = writeUint64BE;\n/**\n * Writes 8-byte little-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint64LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    writeUint32LE(value >>> 0, out, offset);\n    writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);\n    return out;\n}\nexports.writeUint64LE = writeUint64LE;\nexports.writeInt64LE = writeUint64LE;\n/**\n * Reads bytes from array starting at offset as big-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nfunction readUintBE(bitLength, array, offset) {\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintBE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintBE: array is too short for the given bitLength\");\n    }\n    var result = 0;\n    var mul = 1;\n    for (var i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\nexports.readUintBE = readUintBE;\n/**\n * Reads bytes from array starting at offset as little-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nfunction readUintLE(bitLength, array, offset) {\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintLE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintLE: array is too short for the given bitLength\");\n    }\n    var result = 0;\n    var mul = 1;\n    for (var i = offset; i < offset + bitLength / 8; i++) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\nexports.readUintLE = readUintLE;\n/**\n * Writes a big-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nfunction writeUintBE(bitLength, value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(bitLength / 8); }\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintBE supports only bitLengths divisible by 8\");\n    }\n    if (!int_1.isSafeInteger(value)) {\n        throw new Error(\"writeUintBE value must be an integer\");\n    }\n    var div = 1;\n    for (var i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\nexports.writeUintBE = writeUintBE;\n/**\n * Writes a little-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nfunction writeUintLE(bitLength, value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(bitLength / 8); }\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintLE supports only bitLengths divisible by 8\");\n    }\n    if (!int_1.isSafeInteger(value)) {\n        throw new Error(\"writeUintLE value must be an integer\");\n    }\n    var div = 1;\n    for (var i = offset; i < offset + bitLength / 8; i++) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\nexports.writeUintLE = writeUintLE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * 32-bit floating-point number and returns it.\n */\nfunction readFloat32BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset);\n}\nexports.readFloat32BE = readFloat32BE;\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * 32-bit floating-point number and returns it.\n */\nfunction readFloat32LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, true);\n}\nexports.readFloat32LE = readFloat32LE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nfunction readFloat64BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset);\n}\nexports.readFloat64BE = readFloat64BE;\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nfunction readFloat64LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, true);\n}\nexports.readFloat64LE = readFloat64LE;\n/**\n * Writes 4-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat32BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value);\n    return out;\n}\nexports.writeFloat32BE = writeFloat32BE;\n/**\n * Writes 4-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat32LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value, true);\n    return out;\n}\nexports.writeFloat32LE = writeFloat32LE;\n/**\n * Writes 8-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat64BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value);\n    return out;\n}\nexports.writeFloat64BE = writeFloat64BE;\n/**\n * Writes 8-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat64LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value, true);\n    return out;\n}\nexports.writeFloat64LE = writeFloat64LE;\n//# sourceMappingURL=binary.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sets all values in the given array to zero and returns it.\n *\n * The fact that it sets bytes to zero can be relied on.\n *\n * There is no guarantee that this function makes data disappear from memory,\n * as runtime implementation can, for example, have copying garbage collector\n * that will make copies of sensitive data before we wipe it. Or that an\n * operating system will write our data to swap or sleep image. Another thing\n * is that an optimizing compiler can remove calls to this function or make it\n * no-op. There's nothing we can do with it, so we just do our best and hope\n * that everything will be okay and good will triumph over evil.\n */\nfunction wipe(array) {\n    // Right now it's similar to array.fill(0). If it turns\n    // out that runtimes optimize this call away, maybe\n    // we can try something else.\n    for (var i = 0; i < array.length; i++) {\n        array[i] = 0;\n    }\n    return array;\n}\nexports.wipe = wipe;\n//# sourceMappingURL=wipe.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package chacha implements ChaCha stream cipher.\n */\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\n// Number of ChaCha rounds (ChaCha20).\nvar ROUNDS = 20;\n// Applies the ChaCha core function to 16-byte input,\n// 32-byte key key, and puts the result into 64-byte array out.\nfunction core(out, input, key) {\n    var j0 = 0x61707865; // \"expa\"  -- ChaCha's \"sigma\" constant\n    var j1 = 0x3320646E; // \"nd 3\"     for 32-byte keys\n    var j2 = 0x79622D32; // \"2-by\"\n    var j3 = 0x6B206574; // \"te k\"\n    var j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];\n    var j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];\n    var j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];\n    var j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];\n    var j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];\n    var j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];\n    var j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];\n    var j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];\n    var j12 = (input[3] << 24) | (input[2] << 16) | (input[1] << 8) | input[0];\n    var j13 = (input[7] << 24) | (input[6] << 16) | (input[5] << 8) | input[4];\n    var j14 = (input[11] << 24) | (input[10] << 16) | (input[9] << 8) | input[8];\n    var j15 = (input[15] << 24) | (input[14] << 16) | (input[13] << 8) | input[12];\n    var x0 = j0;\n    var x1 = j1;\n    var x2 = j2;\n    var x3 = j3;\n    var x4 = j4;\n    var x5 = j5;\n    var x6 = j6;\n    var x7 = j7;\n    var x8 = j8;\n    var x9 = j9;\n    var x10 = j10;\n    var x11 = j11;\n    var x12 = j12;\n    var x13 = j13;\n    var x14 = j14;\n    var x15 = j15;\n    for (var i = 0; i < ROUNDS; i += 2) {\n        x0 = x0 + x4 | 0;\n        x12 ^= x0;\n        x12 = x12 >>> (32 - 16) | x12 << 16;\n        x8 = x8 + x12 | 0;\n        x4 ^= x8;\n        x4 = x4 >>> (32 - 12) | x4 << 12;\n        x1 = x1 + x5 | 0;\n        x13 ^= x1;\n        x13 = x13 >>> (32 - 16) | x13 << 16;\n        x9 = x9 + x13 | 0;\n        x5 ^= x9;\n        x5 = x5 >>> (32 - 12) | x5 << 12;\n        x2 = x2 + x6 | 0;\n        x14 ^= x2;\n        x14 = x14 >>> (32 - 16) | x14 << 16;\n        x10 = x10 + x14 | 0;\n        x6 ^= x10;\n        x6 = x6 >>> (32 - 12) | x6 << 12;\n        x3 = x3 + x7 | 0;\n        x15 ^= x3;\n        x15 = x15 >>> (32 - 16) | x15 << 16;\n        x11 = x11 + x15 | 0;\n        x7 ^= x11;\n        x7 = x7 >>> (32 - 12) | x7 << 12;\n        x2 = x2 + x6 | 0;\n        x14 ^= x2;\n        x14 = x14 >>> (32 - 8) | x14 << 8;\n        x10 = x10 + x14 | 0;\n        x6 ^= x10;\n        x6 = x6 >>> (32 - 7) | x6 << 7;\n        x3 = x3 + x7 | 0;\n        x15 ^= x3;\n        x15 = x15 >>> (32 - 8) | x15 << 8;\n        x11 = x11 + x15 | 0;\n        x7 ^= x11;\n        x7 = x7 >>> (32 - 7) | x7 << 7;\n        x1 = x1 + x5 | 0;\n        x13 ^= x1;\n        x13 = x13 >>> (32 - 8) | x13 << 8;\n        x9 = x9 + x13 | 0;\n        x5 ^= x9;\n        x5 = x5 >>> (32 - 7) | x5 << 7;\n        x0 = x0 + x4 | 0;\n        x12 ^= x0;\n        x12 = x12 >>> (32 - 8) | x12 << 8;\n        x8 = x8 + x12 | 0;\n        x4 ^= x8;\n        x4 = x4 >>> (32 - 7) | x4 << 7;\n        x0 = x0 + x5 | 0;\n        x15 ^= x0;\n        x15 = x15 >>> (32 - 16) | x15 << 16;\n        x10 = x10 + x15 | 0;\n        x5 ^= x10;\n        x5 = x5 >>> (32 - 12) | x5 << 12;\n        x1 = x1 + x6 | 0;\n        x12 ^= x1;\n        x12 = x12 >>> (32 - 16) | x12 << 16;\n        x11 = x11 + x12 | 0;\n        x6 ^= x11;\n        x6 = x6 >>> (32 - 12) | x6 << 12;\n        x2 = x2 + x7 | 0;\n        x13 ^= x2;\n        x13 = x13 >>> (32 - 16) | x13 << 16;\n        x8 = x8 + x13 | 0;\n        x7 ^= x8;\n        x7 = x7 >>> (32 - 12) | x7 << 12;\n        x3 = x3 + x4 | 0;\n        x14 ^= x3;\n        x14 = x14 >>> (32 - 16) | x14 << 16;\n        x9 = x9 + x14 | 0;\n        x4 ^= x9;\n        x4 = x4 >>> (32 - 12) | x4 << 12;\n        x2 = x2 + x7 | 0;\n        x13 ^= x2;\n        x13 = x13 >>> (32 - 8) | x13 << 8;\n        x8 = x8 + x13 | 0;\n        x7 ^= x8;\n        x7 = x7 >>> (32 - 7) | x7 << 7;\n        x3 = x3 + x4 | 0;\n        x14 ^= x3;\n        x14 = x14 >>> (32 - 8) | x14 << 8;\n        x9 = x9 + x14 | 0;\n        x4 ^= x9;\n        x4 = x4 >>> (32 - 7) | x4 << 7;\n        x1 = x1 + x6 | 0;\n        x12 ^= x1;\n        x12 = x12 >>> (32 - 8) | x12 << 8;\n        x11 = x11 + x12 | 0;\n        x6 ^= x11;\n        x6 = x6 >>> (32 - 7) | x6 << 7;\n        x0 = x0 + x5 | 0;\n        x15 ^= x0;\n        x15 = x15 >>> (32 - 8) | x15 << 8;\n        x10 = x10 + x15 | 0;\n        x5 ^= x10;\n        x5 = x5 >>> (32 - 7) | x5 << 7;\n    }\n    binary_1.writeUint32LE(x0 + j0 | 0, out, 0);\n    binary_1.writeUint32LE(x1 + j1 | 0, out, 4);\n    binary_1.writeUint32LE(x2 + j2 | 0, out, 8);\n    binary_1.writeUint32LE(x3 + j3 | 0, out, 12);\n    binary_1.writeUint32LE(x4 + j4 | 0, out, 16);\n    binary_1.writeUint32LE(x5 + j5 | 0, out, 20);\n    binary_1.writeUint32LE(x6 + j6 | 0, out, 24);\n    binary_1.writeUint32LE(x7 + j7 | 0, out, 28);\n    binary_1.writeUint32LE(x8 + j8 | 0, out, 32);\n    binary_1.writeUint32LE(x9 + j9 | 0, out, 36);\n    binary_1.writeUint32LE(x10 + j10 | 0, out, 40);\n    binary_1.writeUint32LE(x11 + j11 | 0, out, 44);\n    binary_1.writeUint32LE(x12 + j12 | 0, out, 48);\n    binary_1.writeUint32LE(x13 + j13 | 0, out, 52);\n    binary_1.writeUint32LE(x14 + j14 | 0, out, 56);\n    binary_1.writeUint32LE(x15 + j15 | 0, out, 60);\n}\n/**\n * Encrypt src with ChaCha20 stream generated for the given 32-byte key and\n * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and\n * write the result into dst and return it.\n *\n * dst and src may be the same, but otherwise must not overlap.\n *\n * If nonce is 12 bytes, users should not encrypt more than 256 GiB with the\n * same key and nonce, otherwise the stream will repeat. The function will\n * throw error if counter overflows to prevent this.\n *\n * If nonce is 8 bytes, the output is practically unlimited (2^70 bytes, which\n * is more than a million petabytes). However, it is not recommended to\n * generate 8-byte nonces randomly, as the chance of collision is high.\n *\n * Never use the same key and nonce to encrypt more than one message.\n *\n * If nonceInplaceCounterLength is not 0, the nonce is assumed to be a 16-byte\n * array with stream counter in first nonceInplaceCounterLength bytes and nonce\n * in the last remaining bytes. The counter will be incremented inplace for\n * each ChaCha block. This is useful if you need to encrypt one stream of data\n * in chunks.\n */\nfunction streamXOR(key, nonce, src, dst, nonceInplaceCounterLength) {\n    if (nonceInplaceCounterLength === void 0) { nonceInplaceCounterLength = 0; }\n    // We only support 256-bit keys.\n    if (key.length !== 32) {\n        throw new Error(\"ChaCha: key size must be 32 bytes\");\n    }\n    if (dst.length < src.length) {\n        throw new Error(\"ChaCha: destination is shorter than source\");\n    }\n    var nc;\n    var counterLength;\n    if (nonceInplaceCounterLength === 0) {\n        if (nonce.length !== 8 && nonce.length !== 12) {\n            throw new Error(\"ChaCha nonce must be 8 or 12 bytes\");\n        }\n        nc = new Uint8Array(16);\n        // First counterLength bytes of nc are counter, starting with zero.\n        counterLength = nc.length - nonce.length;\n        // Last bytes of nc after counterLength are nonce, set them.\n        nc.set(nonce, counterLength);\n    }\n    else {\n        if (nonce.length !== 16) {\n            throw new Error(\"ChaCha nonce with counter must be 16 bytes\");\n        }\n        // This will update passed nonce with counter inplace.\n        nc = nonce;\n        counterLength = nonceInplaceCounterLength;\n    }\n    // Allocate temporary space for ChaCha block.\n    var block = new Uint8Array(64);\n    for (var i = 0; i < src.length; i += 64) {\n        // Generate a block.\n        core(block, nc, key);\n        // XOR block bytes with src into dst.\n        for (var j = i; j < i + 64 && j < src.length; j++) {\n            dst[j] = src[j] ^ block[j - i];\n        }\n        // Increment counter.\n        incrementCounter(nc, 0, counterLength);\n    }\n    // Cleanup temporary space.\n    wipe_1.wipe(block);\n    if (nonceInplaceCounterLength === 0) {\n        // Cleanup counter.\n        wipe_1.wipe(nc);\n    }\n    return dst;\n}\nexports.streamXOR = streamXOR;\n/**\n * Generate ChaCha20 stream for the given 32-byte key and 8-byte or 12-byte\n * nonce and write it into dst and return it.\n *\n * Never use the same key and nonce to generate more than one stream.\n *\n * If nonceInplaceCounterLength is not 0, it behaves the same with respect to\n * the nonce as described in the streamXOR documentation.\n *\n * stream is like streamXOR with all-zero src.\n */\nfunction stream(key, nonce, dst, nonceInplaceCounterLength) {\n    if (nonceInplaceCounterLength === void 0) { nonceInplaceCounterLength = 0; }\n    wipe_1.wipe(dst);\n    return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);\n}\nexports.stream = stream;\nfunction incrementCounter(counter, pos, len) {\n    var carry = 1;\n    while (len--) {\n        carry = carry + (counter[pos] & 0xff) | 0;\n        counter[pos] = carry & 0xff;\n        carry >>>= 8;\n        pos++;\n    }\n    if (carry > 0) {\n        throw new Error(\"ChaCha: counter overflow\");\n    }\n}\n//# sourceMappingURL=chacha.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package constant-time provides functions for performing algorithmically constant-time operations.\n */\n/**\n * NOTE! Due to the inability to guarantee real constant time evaluation of\n * anything in JavaScript VM, this is module is the best effort.\n */\n/**\n * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.\n *\n * Supports only 32-bit integers, so resultIfOne or resultIfZero are not\n * integers, they'll be converted to them with bitwise operations.\n */\nfunction select(subject, resultIfOne, resultIfZero) {\n    return (~(subject - 1) & resultIfOne) | ((subject - 1) & resultIfZero);\n}\nexports.select = select;\n/**\n * Returns 1 if a <= b, or 0 if not.\n * Arguments must be positive 32-bit integers less than or equal to 2^31 - 1.\n */\nfunction lessOrEqual(a, b) {\n    return (((a | 0) - (b | 0) - 1) >>> 31) & 1;\n}\nexports.lessOrEqual = lessOrEqual;\n/**\n * Returns 1 if a and b are of equal length and their contents\n * are equal, or 0 otherwise.\n *\n * Note that unlike in equal(), zero-length inputs are considered\n * the same, so this function will return 1.\n */\nfunction compare(a, b) {\n    if (a.length !== b.length) {\n        return 0;\n    }\n    var result = 0;\n    for (var i = 0; i < a.length; i++) {\n        result |= a[i] ^ b[i];\n    }\n    return (1 & ((result - 1) >>> 8));\n}\nexports.compare = compare;\n/**\n * Returns true if a and b are of equal non-zero length,\n * and their contents are equal, or false otherwise.\n *\n * Note that unlike in compare() zero-length inputs are considered\n * _not_ equal, so this function will return false.\n */\nfunction equal(a, b) {\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n    return compare(a, b) !== 0;\n}\nexports.equal = equal;\n//# sourceMappingURL=constant-time.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package poly1305 implements Poly1305 one-time message authentication algorithm.\n */\nvar constant_time_1 = require(\"@stablelib/constant-time\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.DIGEST_LENGTH = 16;\n// Port of Andrew Moon's Poly1305-donna-16. Public domain.\n// https://github.com/floodyberry/poly1305-donna\n/**\n * Poly1305 computes 16-byte authenticator of message using\n * a one-time 32-byte key.\n *\n * Important: key should be used for only one message,\n * it should never repeat.\n */\nvar Poly1305 = /** @class */ (function () {\n    function Poly1305(key) {\n        this.digestLength = exports.DIGEST_LENGTH;\n        this._buffer = new Uint8Array(16);\n        this._r = new Uint16Array(10);\n        this._h = new Uint16Array(10);\n        this._pad = new Uint16Array(8);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = false;\n        var t0 = key[0] | key[1] << 8;\n        this._r[0] = (t0) & 0x1fff;\n        var t1 = key[2] | key[3] << 8;\n        this._r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        var t2 = key[4] | key[5] << 8;\n        this._r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        var t3 = key[6] | key[7] << 8;\n        this._r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        var t4 = key[8] | key[9] << 8;\n        this._r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this._r[5] = ((t4 >>> 1)) & 0x1ffe;\n        var t5 = key[10] | key[11] << 8;\n        this._r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        var t6 = key[12] | key[13] << 8;\n        this._r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        var t7 = key[14] | key[15] << 8;\n        this._r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this._r[9] = ((t7 >>> 5)) & 0x007f;\n        this._pad[0] = key[16] | key[17] << 8;\n        this._pad[1] = key[18] | key[19] << 8;\n        this._pad[2] = key[20] | key[21] << 8;\n        this._pad[3] = key[22] | key[23] << 8;\n        this._pad[4] = key[24] | key[25] << 8;\n        this._pad[5] = key[26] | key[27] << 8;\n        this._pad[6] = key[28] | key[29] << 8;\n        this._pad[7] = key[30] | key[31] << 8;\n    }\n    Poly1305.prototype._blocks = function (m, mpos, bytes) {\n        var hibit = this._fin ? 0 : 1 << 11;\n        var h0 = this._h[0], h1 = this._h[1], h2 = this._h[2], h3 = this._h[3], h4 = this._h[4], h5 = this._h[5], h6 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];\n        var r0 = this._r[0], r1 = this._r[1], r2 = this._r[2], r3 = this._r[3], r4 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];\n        while (bytes >= 16) {\n            var t0 = m[mpos + 0] | m[mpos + 1] << 8;\n            h0 += (t0) & 0x1fff;\n            var t1 = m[mpos + 2] | m[mpos + 3] << 8;\n            h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n            var t2 = m[mpos + 4] | m[mpos + 5] << 8;\n            h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\n            var t3 = m[mpos + 6] | m[mpos + 7] << 8;\n            h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n            var t4 = m[mpos + 8] | m[mpos + 9] << 8;\n            h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\n            h5 += ((t4 >>> 1)) & 0x1fff;\n            var t5 = m[mpos + 10] | m[mpos + 11] << 8;\n            h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n            var t6 = m[mpos + 12] | m[mpos + 13] << 8;\n            h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\n            var t7 = m[mpos + 14] | m[mpos + 15] << 8;\n            h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n            h9 += ((t7 >>> 5)) | hibit;\n            var c = 0;\n            var d0 = c;\n            d0 += h0 * r0;\n            d0 += h1 * (5 * r9);\n            d0 += h2 * (5 * r8);\n            d0 += h3 * (5 * r7);\n            d0 += h4 * (5 * r6);\n            c = (d0 >>> 13);\n            d0 &= 0x1fff;\n            d0 += h5 * (5 * r5);\n            d0 += h6 * (5 * r4);\n            d0 += h7 * (5 * r3);\n            d0 += h8 * (5 * r2);\n            d0 += h9 * (5 * r1);\n            c += (d0 >>> 13);\n            d0 &= 0x1fff;\n            var d1 = c;\n            d1 += h0 * r1;\n            d1 += h1 * r0;\n            d1 += h2 * (5 * r9);\n            d1 += h3 * (5 * r8);\n            d1 += h4 * (5 * r7);\n            c = (d1 >>> 13);\n            d1 &= 0x1fff;\n            d1 += h5 * (5 * r6);\n            d1 += h6 * (5 * r5);\n            d1 += h7 * (5 * r4);\n            d1 += h8 * (5 * r3);\n            d1 += h9 * (5 * r2);\n            c += (d1 >>> 13);\n            d1 &= 0x1fff;\n            var d2 = c;\n            d2 += h0 * r2;\n            d2 += h1 * r1;\n            d2 += h2 * r0;\n            d2 += h3 * (5 * r9);\n            d2 += h4 * (5 * r8);\n            c = (d2 >>> 13);\n            d2 &= 0x1fff;\n            d2 += h5 * (5 * r7);\n            d2 += h6 * (5 * r6);\n            d2 += h7 * (5 * r5);\n            d2 += h8 * (5 * r4);\n            d2 += h9 * (5 * r3);\n            c += (d2 >>> 13);\n            d2 &= 0x1fff;\n            var d3 = c;\n            d3 += h0 * r3;\n            d3 += h1 * r2;\n            d3 += h2 * r1;\n            d3 += h3 * r0;\n            d3 += h4 * (5 * r9);\n            c = (d3 >>> 13);\n            d3 &= 0x1fff;\n            d3 += h5 * (5 * r8);\n            d3 += h6 * (5 * r7);\n            d3 += h7 * (5 * r6);\n            d3 += h8 * (5 * r5);\n            d3 += h9 * (5 * r4);\n            c += (d3 >>> 13);\n            d3 &= 0x1fff;\n            var d4 = c;\n            d4 += h0 * r4;\n            d4 += h1 * r3;\n            d4 += h2 * r2;\n            d4 += h3 * r1;\n            d4 += h4 * r0;\n            c = (d4 >>> 13);\n            d4 &= 0x1fff;\n            d4 += h5 * (5 * r9);\n            d4 += h6 * (5 * r8);\n            d4 += h7 * (5 * r7);\n            d4 += h8 * (5 * r6);\n            d4 += h9 * (5 * r5);\n            c += (d4 >>> 13);\n            d4 &= 0x1fff;\n            var d5 = c;\n            d5 += h0 * r5;\n            d5 += h1 * r4;\n            d5 += h2 * r3;\n            d5 += h3 * r2;\n            d5 += h4 * r1;\n            c = (d5 >>> 13);\n            d5 &= 0x1fff;\n            d5 += h5 * r0;\n            d5 += h6 * (5 * r9);\n            d5 += h7 * (5 * r8);\n            d5 += h8 * (5 * r7);\n            d5 += h9 * (5 * r6);\n            c += (d5 >>> 13);\n            d5 &= 0x1fff;\n            var d6 = c;\n            d6 += h0 * r6;\n            d6 += h1 * r5;\n            d6 += h2 * r4;\n            d6 += h3 * r3;\n            d6 += h4 * r2;\n            c = (d6 >>> 13);\n            d6 &= 0x1fff;\n            d6 += h5 * r1;\n            d6 += h6 * r0;\n            d6 += h7 * (5 * r9);\n            d6 += h8 * (5 * r8);\n            d6 += h9 * (5 * r7);\n            c += (d6 >>> 13);\n            d6 &= 0x1fff;\n            var d7 = c;\n            d7 += h0 * r7;\n            d7 += h1 * r6;\n            d7 += h2 * r5;\n            d7 += h3 * r4;\n            d7 += h4 * r3;\n            c = (d7 >>> 13);\n            d7 &= 0x1fff;\n            d7 += h5 * r2;\n            d7 += h6 * r1;\n            d7 += h7 * r0;\n            d7 += h8 * (5 * r9);\n            d7 += h9 * (5 * r8);\n            c += (d7 >>> 13);\n            d7 &= 0x1fff;\n            var d8 = c;\n            d8 += h0 * r8;\n            d8 += h1 * r7;\n            d8 += h2 * r6;\n            d8 += h3 * r5;\n            d8 += h4 * r4;\n            c = (d8 >>> 13);\n            d8 &= 0x1fff;\n            d8 += h5 * r3;\n            d8 += h6 * r2;\n            d8 += h7 * r1;\n            d8 += h8 * r0;\n            d8 += h9 * (5 * r9);\n            c += (d8 >>> 13);\n            d8 &= 0x1fff;\n            var d9 = c;\n            d9 += h0 * r9;\n            d9 += h1 * r8;\n            d9 += h2 * r7;\n            d9 += h3 * r6;\n            d9 += h4 * r5;\n            c = (d9 >>> 13);\n            d9 &= 0x1fff;\n            d9 += h5 * r4;\n            d9 += h6 * r3;\n            d9 += h7 * r2;\n            d9 += h8 * r1;\n            d9 += h9 * r0;\n            c += (d9 >>> 13);\n            d9 &= 0x1fff;\n            c = (((c << 2) + c)) | 0;\n            c = (c + d0) | 0;\n            d0 = c & 0x1fff;\n            c = (c >>> 13);\n            d1 += c;\n            h0 = d0;\n            h1 = d1;\n            h2 = d2;\n            h3 = d3;\n            h4 = d4;\n            h5 = d5;\n            h6 = d6;\n            h7 = d7;\n            h8 = d8;\n            h9 = d9;\n            mpos += 16;\n            bytes -= 16;\n        }\n        this._h[0] = h0;\n        this._h[1] = h1;\n        this._h[2] = h2;\n        this._h[3] = h3;\n        this._h[4] = h4;\n        this._h[5] = h5;\n        this._h[6] = h6;\n        this._h[7] = h7;\n        this._h[8] = h8;\n        this._h[9] = h9;\n    };\n    Poly1305.prototype.finish = function (mac, macpos) {\n        if (macpos === void 0) { macpos = 0; }\n        var g = new Uint16Array(10);\n        var c;\n        var mask;\n        var f;\n        var i;\n        if (this._leftover) {\n            i = this._leftover;\n            this._buffer[i++] = 1;\n            for (; i < 16; i++) {\n                this._buffer[i] = 0;\n            }\n            this._fin = 1;\n            this._blocks(this._buffer, 0, 16);\n        }\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        for (i = 2; i < 10; i++) {\n            this._h[i] += c;\n            c = this._h[i] >>> 13;\n            this._h[i] &= 0x1fff;\n        }\n        this._h[0] += (c * 5);\n        c = this._h[0] >>> 13;\n        this._h[0] &= 0x1fff;\n        this._h[1] += c;\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        this._h[2] += c;\n        g[0] = this._h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (i = 1; i < 10; i++) {\n            g[i] = this._h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= (1 << 13);\n        mask = (c ^ 1) - 1;\n        for (i = 0; i < 10; i++) {\n            g[i] &= mask;\n        }\n        mask = ~mask;\n        for (i = 0; i < 10; i++) {\n            this._h[i] = (this._h[i] & mask) | g[i];\n        }\n        this._h[0] = ((this._h[0]) | (this._h[1] << 13)) & 0xffff;\n        this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 0xffff;\n        this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 0xffff;\n        this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 0xffff;\n        this._h[4] = ((this._h[4] >>> 12) | (this._h[5] << 1) | (this._h[6] << 14)) & 0xffff;\n        this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 0xffff;\n        this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 0xffff;\n        this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 0xffff;\n        f = this._h[0] + this._pad[0];\n        this._h[0] = f & 0xffff;\n        for (i = 1; i < 8; i++) {\n            f = (((this._h[i] + this._pad[i]) | 0) + (f >>> 16)) | 0;\n            this._h[i] = f & 0xffff;\n        }\n        mac[macpos + 0] = this._h[0] >>> 0;\n        mac[macpos + 1] = this._h[0] >>> 8;\n        mac[macpos + 2] = this._h[1] >>> 0;\n        mac[macpos + 3] = this._h[1] >>> 8;\n        mac[macpos + 4] = this._h[2] >>> 0;\n        mac[macpos + 5] = this._h[2] >>> 8;\n        mac[macpos + 6] = this._h[3] >>> 0;\n        mac[macpos + 7] = this._h[3] >>> 8;\n        mac[macpos + 8] = this._h[4] >>> 0;\n        mac[macpos + 9] = this._h[4] >>> 8;\n        mac[macpos + 10] = this._h[5] >>> 0;\n        mac[macpos + 11] = this._h[5] >>> 8;\n        mac[macpos + 12] = this._h[6] >>> 0;\n        mac[macpos + 13] = this._h[6] >>> 8;\n        mac[macpos + 14] = this._h[7] >>> 0;\n        mac[macpos + 15] = this._h[7] >>> 8;\n        this._finished = true;\n        return this;\n    };\n    Poly1305.prototype.update = function (m) {\n        var mpos = 0;\n        var bytes = m.length;\n        var want;\n        if (this._leftover) {\n            want = (16 - this._leftover);\n            if (want > bytes) {\n                want = bytes;\n            }\n            for (var i = 0; i < want; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            bytes -= want;\n            mpos += want;\n            this._leftover += want;\n            if (this._leftover < 16) {\n                return this;\n            }\n            this._blocks(this._buffer, 0, 16);\n            this._leftover = 0;\n        }\n        if (bytes >= 16) {\n            want = bytes - (bytes % 16);\n            this._blocks(m, mpos, want);\n            mpos += want;\n            bytes -= want;\n        }\n        if (bytes) {\n            for (var i = 0; i < bytes; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            this._leftover += bytes;\n        }\n        return this;\n    };\n    Poly1305.prototype.digest = function () {\n        // TODO(dchest): it behaves differently than other hashes/HMAC,\n        // because it throws when finished — others just return saved result.\n        if (this._finished) {\n            throw new Error(\"Poly1305 was finished\");\n        }\n        var mac = new Uint8Array(16);\n        this.finish(mac);\n        return mac;\n    };\n    Poly1305.prototype.clean = function () {\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._r);\n        wipe_1.wipe(this._h);\n        wipe_1.wipe(this._pad);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = true; // mark as finished even if not\n        return this;\n    };\n    return Poly1305;\n}());\nexports.Poly1305 = Poly1305;\n/**\n * Returns 16-byte authenticator of data using a one-time 32-byte key.\n *\n * Important: key should be used for only one message, it should never repeat.\n */\nfunction oneTimeAuth(key, data) {\n    var h = new Poly1305(key);\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.oneTimeAuth = oneTimeAuth;\n/**\n * Returns true if two authenticators are 16-byte long and equal.\n * Uses contant-time comparison to avoid leaking timing information.\n */\nfunction equal(a, b) {\n    if (a.length !== exports.DIGEST_LENGTH || b.length !== exports.DIGEST_LENGTH) {\n        return false;\n    }\n    return constant_time_1.equal(a, b);\n}\nexports.equal = equal;\n//# sourceMappingURL=poly1305.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chacha_1 = require(\"@stablelib/chacha\");\nvar poly1305_1 = require(\"@stablelib/poly1305\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nvar binary_1 = require(\"@stablelib/binary\");\nvar constant_time_1 = require(\"@stablelib/constant-time\");\nexports.KEY_LENGTH = 32;\nexports.NONCE_LENGTH = 12;\nexports.TAG_LENGTH = 16;\nvar ZEROS = new Uint8Array(16);\n/**\n * ChaCha20-Poly1305 Authenticated Encryption with Associated Data.\n *\n * Defined in RFC7539.\n */\nvar ChaCha20Poly1305 = /** @class */ (function () {\n    /**\n     * Creates a new instance with the given 32-byte key.\n     */\n    function ChaCha20Poly1305(key) {\n        this.nonceLength = exports.NONCE_LENGTH;\n        this.tagLength = exports.TAG_LENGTH;\n        if (key.length !== exports.KEY_LENGTH) {\n            throw new Error(\"ChaCha20Poly1305 needs 32-byte key\");\n        }\n        // Copy key.\n        this._key = new Uint8Array(key);\n    }\n    /**\n     * Encrypts and authenticates plaintext, authenticates associated data,\n     * and returns sealed ciphertext, which includes authentication tag.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If dst is given (it must be the size of plaintext + the size of tag\n     * length) the result will be put into it. Dst and plaintext must not\n     * overlap.\n     */\n    ChaCha20Poly1305.prototype.seal = function (nonce, plaintext, associatedData, dst) {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n        // Allocate space for counter, and set nonce as last bytes of it.\n        var counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n        // Generate authentication key by taking first 32-bytes of stream.\n        // We pass full counter, which has 12-byte nonce and 4-byte block counter,\n        // and it will get incremented after generating the block, which is\n        // exactly what we need: we only use the first 32 bytes of 64-byte\n        // ChaCha block and discard the next 32 bytes.\n        var authKey = new Uint8Array(32);\n        chacha_1.stream(this._key, counter, authKey, 4);\n        // Allocate space for sealed ciphertext.\n        var resultLength = plaintext.length + this.tagLength;\n        var result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        }\n        else {\n            result = new Uint8Array(resultLength);\n        }\n        // Encrypt plaintext.\n        chacha_1.streamXOR(this._key, counter, plaintext, result, 4);\n        // Authenticate.\n        // XXX: can \"simplify\" here: pass full result (which is already padded\n        // due to zeroes prepared for tag), and ciphertext length instead of\n        // subarray of result.\n        this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);\n        // Cleanup.\n        wipe_1.wipe(counter);\n        return result;\n    };\n    /**\n     * Authenticates sealed ciphertext (which includes authentication tag) and\n     * associated data, decrypts ciphertext and returns decrypted plaintext.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If authentication fails, it returns null.\n     *\n     * If dst is given (it must be of ciphertext length minus tag length),\n     * the result will be put into it. Dst and plaintext must not overlap.\n     */\n    ChaCha20Poly1305.prototype.open = function (nonce, sealed, associatedData, dst) {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n        // Sealed ciphertext should at least contain tag.\n        if (sealed.length < this.tagLength) {\n            // TODO(dchest): should we throw here instead?\n            return null;\n        }\n        // Allocate space for counter, and set nonce as last bytes of it.\n        var counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n        // Generate authentication key by taking first 32-bytes of stream.\n        var authKey = new Uint8Array(32);\n        chacha_1.stream(this._key, counter, authKey, 4);\n        // Authenticate.\n        // XXX: can simplify and avoid allocation: since authenticate()\n        // already allocates tag (from Poly1305.digest(), it can return)\n        // it instead of copying to calculatedTag. But then in seal()\n        // we'll need to copy it.\n        var calculatedTag = new Uint8Array(this.tagLength);\n        this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);\n        // Constant-time compare tags and return null if they differ.\n        if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {\n            return null;\n        }\n        // Allocate space for decrypted plaintext.\n        var resultLength = sealed.length - this.tagLength;\n        var result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        }\n        else {\n            result = new Uint8Array(resultLength);\n        }\n        // Decrypt.\n        chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);\n        // Cleanup.\n        wipe_1.wipe(counter);\n        return result;\n    };\n    ChaCha20Poly1305.prototype.clean = function () {\n        wipe_1.wipe(this._key);\n        return this;\n    };\n    ChaCha20Poly1305.prototype._authenticate = function (tagOut, authKey, ciphertext, associatedData) {\n        // Initialize Poly1305 with authKey.\n        var h = new poly1305_1.Poly1305(authKey);\n        // Authenticate padded associated data.\n        if (associatedData) {\n            h.update(associatedData);\n            if (associatedData.length % 16 > 0) {\n                h.update(ZEROS.subarray(associatedData.length % 16));\n            }\n        }\n        // Authenticate padded ciphertext.\n        h.update(ciphertext);\n        if (ciphertext.length % 16 > 0) {\n            h.update(ZEROS.subarray(ciphertext.length % 16));\n        }\n        // Authenticate length of associated data.\n        // XXX: can avoid allocation here?\n        var length = new Uint8Array(8);\n        if (associatedData) {\n            binary_1.writeUint64LE(associatedData.length, length);\n        }\n        h.update(length);\n        // Authenticate length of ciphertext.\n        binary_1.writeUint64LE(ciphertext.length, length);\n        h.update(length);\n        // Get tag and copy it into tagOut.\n        var tag = h.digest();\n        for (var i = 0; i < tag.length; i++) {\n            tagOut[i] = tag[i];\n        }\n        // Cleanup.\n        h.clean();\n        wipe_1.wipe(tag);\n        wipe_1.wipe(length);\n    };\n    return ChaCha20Poly1305;\n}());\nexports.ChaCha20Poly1305 = ChaCha20Poly1305;\n//# sourceMappingURL=chacha20poly1305.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isSerializableHash(h) {\n    return (typeof h.saveState !== \"undefined\" &&\n        typeof h.restoreState !== \"undefined\" &&\n        typeof h.cleanSavedState !== \"undefined\");\n}\nexports.isSerializableHash = isSerializableHash;\n// TODO(dchest): figure out the standardized interface for XOF such as\n// SHAKE and BLAKE2X.\n//# sourceMappingURL=hash.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package hmac implements HMAC algorithm.\n */\nvar hash_1 = require(\"@stablelib/hash\");\nvar constant_time_1 = require(\"@stablelib/constant-time\");\nvar wipe_1 = require(\"@stablelib/wipe\");\n/**\n *  HMAC implements hash-based message authentication algorithm.\n */\nvar HMAC = /** @class */ (function () {\n    /**\n     * Constructs a new HMAC with the given Hash and secret key.\n     */\n    function HMAC(hash, key) {\n        this._finished = false; // true if HMAC was finalized\n        // Initialize inner and outer hashes.\n        this._inner = new hash();\n        this._outer = new hash();\n        // Set block and digest sizes for this HMAC\n        // instance to values from the hash.\n        this.blockSize = this._outer.blockSize;\n        this.digestLength = this._outer.digestLength;\n        // Pad temporary stores a key (or its hash) padded with zeroes.\n        var pad = new Uint8Array(this.blockSize);\n        if (key.length > this.blockSize) {\n            // If key is bigger than hash block size, it must be\n            // hashed and this hash is used as a key instead.\n            this._inner.update(key).finish(pad).clean();\n        }\n        else {\n            // Otherwise, copy the key into pad.\n            pad.set(key);\n        }\n        // Now two different keys are derived from padded key\n        // by xoring a different byte value to each.\n        // To make inner hash key, xor byte 0x36 into pad.\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        // Update inner hash with the result.\n        this._inner.update(pad);\n        // To make outer hash key, xor byte 0x5c into pad.\n        // But since we already xored 0x36 there, we must\n        // first undo this by xoring it again.\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        // Update outer hash with the result.\n        this._outer.update(pad);\n        // Save states of both hashes, so that we can quickly restore\n        // them later in reset() without the need to remember the actual\n        // key and perform this initialization again.\n        if (hash_1.isSerializableHash(this._inner) && hash_1.isSerializableHash(this._outer)) {\n            this._innerKeyedState = this._inner.saveState();\n            this._outerKeyedState = this._outer.saveState();\n        }\n        // Clean pad.\n        wipe_1.wipe(pad);\n    }\n    /**\n     * Returns HMAC state to the state initialized with key\n     * to make it possible to run HMAC over the other data with the same\n     * key without creating a new instance.\n     */\n    HMAC.prototype.reset = function () {\n        if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't reset() because hash doesn't implement restoreState()\");\n        }\n        // Restore keyed states of inner and outer hashes.\n        this._inner.restoreState(this._innerKeyedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans HMAC state.\n     */\n    HMAC.prototype.clean = function () {\n        if (hash_1.isSerializableHash(this._inner)) {\n            this._inner.cleanSavedState(this._innerKeyedState);\n        }\n        if (hash_1.isSerializableHash(this._outer)) {\n            this._outer.cleanSavedState(this._outerKeyedState);\n        }\n        this._inner.clean();\n        this._outer.clean();\n    };\n    /**\n     * Updates state with provided data.\n     */\n    HMAC.prototype.update = function (data) {\n        this._inner.update(data);\n        return this;\n    };\n    /**\n     * Finalizes HMAC and puts the result in out.\n     */\n    HMAC.prototype.finish = function (out) {\n        if (this._finished) {\n            // If HMAC was finalized, outer hash is also finalized,\n            // so it produces the same digest it produced when it\n            // was finalized.\n            this._outer.finish(out);\n            return this;\n        }\n        // Finalize inner hash and store the result temporarily.\n        this._inner.finish(out);\n        // Update outer hash with digest of inner hash and and finalize it.\n        this._outer.update(out.subarray(0, this.digestLength)).finish(out);\n        this._finished = true;\n        return this;\n    };\n    /**\n     * Returns the computed message authentication code.\n     */\n    HMAC.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    /**\n     * Saves HMAC state.\n     * This function is needed for PBKDF2 optimization.\n     */\n    HMAC.prototype.saveState = function () {\n        if (!hash_1.isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't saveState() because hash doesn't implement it\");\n        }\n        return this._inner.saveState();\n    };\n    HMAC.prototype.restoreState = function (savedState) {\n        if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't restoreState() because hash doesn't implement it\");\n        }\n        this._inner.restoreState(savedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    };\n    HMAC.prototype.cleanSavedState = function (savedState) {\n        if (!hash_1.isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't cleanSavedState() because hash doesn't implement it\");\n        }\n        this._inner.cleanSavedState(savedState);\n    };\n    return HMAC;\n}());\nexports.HMAC = HMAC;\n/**\n * Returns HMAC using the given hash constructor for the key over data.\n */\nfunction hmac(hash, key, data) {\n    var h = new HMAC(hash, key);\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hmac = hmac;\n/**\n * Returns true if two HMAC digests are equal.\n * Uses constant-time comparison to avoid leaking timing information.\n *\n * Example:\n *\n *    const receivedDigest = ...\n *    const realDigest = hmac(SHA256, key, data);\n *    if (!equal(receivedDigest, realDigest)) {\n *        throw new Error(\"Authentication error\");\n *    }\n */\nexports.equal = constant_time_1.equal;\n//# sourceMappingURL=hmac.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hmac_1 = require(\"@stablelib/hmac\");\nvar wipe_1 = require(\"@stablelib/wipe\");\n/**\n * HMAC-based Extract-and-Expand Key Derivation Function.\n *\n * Implements HKDF from RFC5869.\n *\n * Expands the given master key with salt and info into\n * a limited stream of key material.\n */\nvar HKDF = /** @class */ (function () {\n    /**\n     * Create a new HKDF instance for the given hash function\n     * with the master key, optional salt, and info.\n     *\n     * - Master key is a high-entropy secret key (not a password).\n     * - Salt is a non-secret random value.\n     * - Info is application- and/or context-specific information.\n     */\n    function HKDF(hash, key, salt, info) {\n        if (salt === void 0) { salt = new Uint8Array(0); }\n        this._counter = new Uint8Array(1); // starts with zero\n        this._hash = hash;\n        this._info = info;\n        // HKDF-Extract uses salt as HMAC key, and key as data.\n        var okm = hmac_1.hmac(this._hash, salt, key);\n        // Initialize HMAC for expanding with extracted key.\n        this._hmac = new hmac_1.HMAC(hash, okm);\n        // Allocate buffer.\n        this._buffer = new Uint8Array(this._hmac.digestLength);\n        this._bufpos = this._buffer.length;\n    }\n    // Fill buffer with new block of HKDF-Extract output.\n    HKDF.prototype._fillBuffer = function () {\n        // Increment counter.\n        this._counter[0]++;\n        var ctr = this._counter[0];\n        // Check if counter overflowed.\n        if (ctr === 0) {\n            throw new Error(\"hkdf: cannot expand more\");\n        }\n        // Prepare HMAC instance for new data with old key.\n        this._hmac.reset();\n        // Hash in previous output if it was generated\n        // (i.e. counter is greater than 1).\n        if (ctr > 1) {\n            this._hmac.update(this._buffer);\n        }\n        // Hash in info if it exists.\n        if (this._info) {\n            this._hmac.update(this._info);\n        }\n        // Hash in the counter.\n        this._hmac.update(this._counter);\n        // Output result to buffer and clean HMAC instance.\n        this._hmac.finish(this._buffer);\n        // Reset buffer position.\n        this._bufpos = 0;\n    };\n    /**\n     * Expand returns next key material of the given length.\n     *\n     * It throws if expansion limit is reached (which is\n     * 254 digests of the underlying HMAC function).\n     */\n    HKDF.prototype.expand = function (length) {\n        var out = new Uint8Array(length);\n        for (var i = 0; i < out.length; i++) {\n            if (this._bufpos === this._buffer.length) {\n                this._fillBuffer();\n            }\n            out[i] = this._buffer[this._bufpos++];\n        }\n        return out;\n    };\n    HKDF.prototype.clean = function () {\n        this._hmac.clean();\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._counter);\n        this._bufpos = 0;\n    };\n    return HKDF;\n}());\nexports.HKDF = HKDF;\n// TODO(dchest): maybe implement deriveKey?\n//# sourceMappingURL=hkdf.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserRandomSource = void 0;\nconst QUOTA = 65536;\nclass BrowserRandomSource {\n    constructor() {\n        this.isAvailable = false;\n        this.isInstantiated = false;\n        const browserCrypto = typeof self !== 'undefined'\n            ? (self.crypto || self.msCrypto) // IE11 has msCrypto\n            : null;\n        if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n            this._crypto = browserCrypto;\n            this.isAvailable = true;\n            this.isInstantiated = true;\n        }\n    }\n    randomBytes(length) {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Browser random byte generator is not available.\");\n        }\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i += QUOTA) {\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n        }\n        return out;\n    }\n}\nexports.BrowserRandomSource = BrowserRandomSource;\n//# sourceMappingURL=browser.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeRandomSource = void 0;\nconst wipe_1 = require(\"@stablelib/wipe\");\nclass NodeRandomSource {\n    constructor() {\n        this.isAvailable = false;\n        this.isInstantiated = false;\n        if (typeof require !== \"undefined\") {\n            const nodeCrypto = require(\"crypto\");\n            if (nodeCrypto && nodeCrypto.randomBytes) {\n                this._crypto = nodeCrypto;\n                this.isAvailable = true;\n                this.isInstantiated = true;\n            }\n        }\n    }\n    randomBytes(length) {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Node.js random byte generator is not available.\");\n        }\n        // Get random bytes (result is Buffer).\n        let buffer = this._crypto.randomBytes(length);\n        // Make sure we got the length that we requested.\n        if (buffer.length !== length) {\n            throw new Error(\"NodeRandomSource: got fewer bytes than requested\");\n        }\n        // Allocate output array.\n        const out = new Uint8Array(length);\n        // Copy bytes from buffer to output.\n        for (let i = 0; i < out.length; i++) {\n            out[i] = buffer[i];\n        }\n        // Cleanup.\n        (0, wipe_1.wipe)(buffer);\n        return out;\n    }\n}\nexports.NodeRandomSource = NodeRandomSource;\n//# sourceMappingURL=node.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SystemRandomSource = void 0;\nconst browser_1 = require(\"./browser\");\nconst node_1 = require(\"./node\");\nclass SystemRandomSource {\n    constructor() {\n        this.isAvailable = false;\n        this.name = \"\";\n        // Try browser.\n        this._source = new browser_1.BrowserRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Browser\";\n            return;\n        }\n        // If no browser source, try Node.\n        this._source = new node_1.NodeRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Node\";\n            return;\n        }\n        // No sources, we're out of options.\n    }\n    randomBytes(length) {\n        if (!this.isAvailable) {\n            throw new Error(\"System random byte generator is not available.\");\n        }\n        return this._source.randomBytes(length);\n    }\n}\nexports.SystemRandomSource = SystemRandomSource;\n//# sourceMappingURL=system.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomStringForEntropy = exports.randomString = exports.randomUint32 = exports.randomBytes = exports.defaultRandomSource = void 0;\nconst system_1 = require(\"./source/system\");\nconst binary_1 = require(\"@stablelib/binary\");\nconst wipe_1 = require(\"@stablelib/wipe\");\nexports.defaultRandomSource = new system_1.SystemRandomSource();\nfunction randomBytes(length, prng = exports.defaultRandomSource) {\n    return prng.randomBytes(length);\n}\nexports.randomBytes = randomBytes;\n/**\n * Returns a uniformly random unsigned 32-bit integer.\n */\nfunction randomUint32(prng = exports.defaultRandomSource) {\n    // Generate 4-byte random buffer.\n    const buf = randomBytes(4, prng);\n    // Convert bytes from buffer into a 32-bit integer.\n    // It's not important which byte order to use, since\n    // the result is random.\n    const result = (0, binary_1.readUint32LE)(buf);\n    // Clean the buffer.\n    (0, wipe_1.wipe)(buf);\n    return result;\n}\nexports.randomUint32 = randomUint32;\n/** 62 alphanumeric characters for default charset of randomString() */\nconst ALPHANUMERIC = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n/**\n * Returns a uniform random string of the given length\n * with characters from the given charset.\n *\n * Charset must not have more than 256 characters.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nfunction randomString(length, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {\n    if (charset.length < 2) {\n        throw new Error(\"randomString charset is too short\");\n    }\n    if (charset.length > 256) {\n        throw new Error(\"randomString charset is too long\");\n    }\n    let out = '';\n    const charsLen = charset.length;\n    const maxByte = 256 - (256 % charsLen);\n    while (length > 0) {\n        const buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);\n        for (let i = 0; i < buf.length && length > 0; i++) {\n            const randomByte = buf[i];\n            if (randomByte < maxByte) {\n                out += charset.charAt(randomByte % charsLen);\n                length--;\n            }\n        }\n        (0, wipe_1.wipe)(buf);\n    }\n    return out;\n}\nexports.randomString = randomString;\n/**\n * Returns uniform random string containing at least the given\n * number of bits of entropy.\n *\n * For example, randomStringForEntropy(128) will return a 22-character\n * alphanumeric string, while randomStringForEntropy(128, \"0123456789\")\n * will return a 39-character numeric string, both will contain at\n * least 128 bits of entropy.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nfunction randomStringForEntropy(bits, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {\n    const length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));\n    return randomString(length, charset, prng);\n}\nexports.randomStringForEntropy = randomStringForEntropy;\n//# sourceMappingURL=random.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.DIGEST_LENGTH = 32;\nexports.BLOCK_SIZE = 64;\n/**\n * SHA2-256 cryptographic hash algorithm.\n */\nvar SHA256 = /** @class */ (function () {\n    function SHA256() {\n        /** Length of hash output */\n        this.digestLength = exports.DIGEST_LENGTH;\n        /** Block size */\n        this.blockSize = exports.BLOCK_SIZE;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this._state = new Int32Array(8); // hash state\n        this._temp = new Int32Array(64); // temporary state\n        this._buffer = new Uint8Array(128); // buffer for data to hash\n        this._bufferLength = 0; // number of bytes in buffer\n        this._bytesHashed = 0; // number of total bytes hashed\n        this._finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    SHA256.prototype._initState = function () {\n        this._state[0] = 0x6a09e667;\n        this._state[1] = 0xbb67ae85;\n        this._state[2] = 0x3c6ef372;\n        this._state[3] = 0xa54ff53a;\n        this._state[4] = 0x510e527f;\n        this._state[5] = 0x9b05688c;\n        this._state[6] = 0x1f83d9ab;\n        this._state[7] = 0x5be0cd19;\n    };\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    SHA256.prototype.reset = function () {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    SHA256.prototype.clean = function () {\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._temp);\n        this.reset();\n    };\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    SHA256.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this._finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < this.blockSize && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    SHA256.prototype.finish = function (out) {\n        if (!this._finished) {\n            var bytesHashed = this._bytesHashed;\n            var left = this._bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n            this._buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);\n            this._finished = true;\n        }\n        for (var i = 0; i < this.digestLength / 4; i++) {\n            binary_1.writeUint32BE(this._state[i], out, i * 4);\n        }\n        return this;\n    };\n    /**\n     * Returns the final hash digest.\n     */\n    SHA256.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Returns hash state to be used with restoreState().\n     * Only chain value is saved, not buffers or other\n     * state variables.\n     */\n    SHA256.prototype.saveState = function () {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            state: new Int32Array(this._state),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Restores state saved by saveState() and sets bytesHashed\n     * to the given value.\n     */\n    SHA256.prototype.restoreState = function (savedState) {\n        this._state.set(savedState.state);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans state returned by saveState().\n     */\n    SHA256.prototype.cleanSavedState = function (savedState) {\n        wipe_1.wipe(savedState.state);\n        if (savedState.buffer) {\n            wipe_1.wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    };\n    return SHA256;\n}());\nexports.SHA256 = SHA256;\n// Constants\nvar K = new Int32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\nfunction hashBlocks(w, v, p, pos, len) {\n    while (len >= 64) {\n        var a = v[0];\n        var b = v[1];\n        var c = v[2];\n        var d = v[3];\n        var e = v[4];\n        var f = v[5];\n        var g = v[6];\n        var h = v[7];\n        for (var i = 0; i < 16; i++) {\n            var j = pos + i * 4;\n            w[i] = binary_1.readUint32BE(p, j);\n        }\n        for (var i = 16; i < 64; i++) {\n            var u = w[i - 2];\n            var t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n            u = w[i - 15];\n            var t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n        for (var i = 0; i < 64; i++) {\n            var t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n            var t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\nfunction hash(data) {\n    var h = new SHA256();\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n//# sourceMappingURL=sha256.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;\n/**\n * Package x25519 implements X25519 key agreement.\n */\nconst random_1 = require(\"@stablelib/random\");\nconst wipe_1 = require(\"@stablelib/wipe\");\nexports.PUBLIC_KEY_LENGTH = 32;\nexports.SECRET_KEY_LENGTH = 32;\nexports.SHARED_KEY_LENGTH = 32;\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init) {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n// Base point.\nconst _9 = new Uint8Array(32);\n_9[0] = 9;\nconst _121665 = gf([0xdb41, 1]);\nfunction car25519(o) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\nfunction sel25519(p, q, b) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\nfunction pack25519(o, n) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\nfunction unpack25519(o, n) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\nfunction add(o, a, b) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\nfunction sub(o, a, b) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\nfunction mul(o, a, b) {\n    let v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n    // first car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    // second car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\nfunction square(o, a) {\n    mul(o, a, a);\n}\nfunction inv25519(o, inp) {\n    const c = gf();\n    for (let i = 0; i < 16; i++) {\n        c[i] = inp[i];\n    }\n    for (let i = 253; i >= 0; i--) {\n        square(c, c);\n        if (i !== 2 && i !== 4) {\n            mul(c, c, inp);\n        }\n    }\n    for (let i = 0; i < 16; i++) {\n        o[i] = c[i];\n    }\n}\nfunction scalarMult(n, p) {\n    const z = new Uint8Array(32);\n    const x = new Float64Array(80);\n    const a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf();\n    for (let i = 0; i < 31; i++) {\n        z[i] = n[i];\n    }\n    z[31] = (n[31] & 127) | 64;\n    z[0] &= 248;\n    unpack25519(x, p);\n    for (let i = 0; i < 16; i++) {\n        b[i] = x[i];\n    }\n    a[0] = d[0] = 1;\n    for (let i = 254; i >= 0; --i) {\n        const r = (z[i >>> 3] >>> (i & 7)) & 1;\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n        add(e, a, c);\n        sub(a, a, c);\n        add(c, b, d);\n        sub(b, b, d);\n        square(d, e);\n        square(f, a);\n        mul(a, c, a);\n        mul(c, b, e);\n        add(e, a, c);\n        sub(a, a, c);\n        square(b, a);\n        sub(c, d, f);\n        mul(a, c, _121665);\n        add(a, a, d);\n        mul(c, c, a);\n        mul(a, d, f);\n        mul(d, b, x);\n        square(b, e);\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n    }\n    for (let i = 0; i < 16; i++) {\n        x[i + 16] = a[i];\n        x[i + 32] = c[i];\n        x[i + 48] = b[i];\n        x[i + 64] = d[i];\n    }\n    const x32 = x.subarray(32);\n    const x16 = x.subarray(16);\n    inv25519(x32, x32);\n    mul(x16, x16, x32);\n    const q = new Uint8Array(32);\n    pack25519(q, x16);\n    return q;\n}\nexports.scalarMult = scalarMult;\nfunction scalarMultBase(n) {\n    return scalarMult(n, _9);\n}\nexports.scalarMultBase = scalarMultBase;\nfunction generateKeyPairFromSeed(seed) {\n    if (seed.length !== exports.SECRET_KEY_LENGTH) {\n        throw new Error(`x25519: seed must be ${exports.SECRET_KEY_LENGTH} bytes`);\n    }\n    const secretKey = new Uint8Array(seed);\n    const publicKey = scalarMultBase(secretKey);\n    return {\n        publicKey,\n        secretKey\n    };\n}\nexports.generateKeyPairFromSeed = generateKeyPairFromSeed;\nfunction generateKeyPair(prng) {\n    const seed = (0, random_1.randomBytes)(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    (0, wipe_1.wipe)(seed);\n    return result;\n}\nexports.generateKeyPair = generateKeyPair;\n/**\n * Returns a shared key between our secret key and a peer's public key.\n *\n * Throws an error if the given keys are of wrong length.\n *\n * If rejectZero is true throws if the calculated shared key is all-zero.\n * From RFC 7748:\n *\n * > Protocol designers using Diffie-Hellman over the curves defined in\n * > this document must not assume \"contributory behavior\".  Specially,\n * > contributory behavior means that both parties' private keys\n * > contribute to the resulting shared key.  Since curve25519 and\n * > curve448 have cofactors of 8 and 4 (respectively), an input point of\n * > small order will eliminate any contribution from the other party's\n * > private key.  This situation can be detected by checking for the all-\n * > zero output, which implementations MAY do, as specified in Section 6.\n * > However, a large number of existing implementations do not do this.\n *\n * IMPORTANT: the returned key is a raw result of scalar multiplication.\n * To use it as a key material, hash it with a cryptographic hash function.\n */\nfunction sharedKey(mySecretKey, theirPublicKey, rejectZero = false) {\n    if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect secret key length\");\n    }\n    if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect public key length\");\n    }\n    const result = scalarMult(mySecretKey, theirPublicKey);\n    if (rejectZero) {\n        let zeros = 0;\n        for (let i = 0; i < result.length; i++) {\n            zeros |= result[i];\n        }\n        if (zeros === 0) {\n            throw new Error(\"X25519: invalid shared key\");\n        }\n    }\n    return result;\n}\nexports.sharedKey = sharedKey;\n//# sourceMappingURL=x25519.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.DIGEST_LENGTH = 64;\nexports.BLOCK_SIZE = 128;\n/**\n * SHA-2-512 cryptographic hash algorithm.\n */\nvar SHA512 = /** @class */ (function () {\n    function SHA512() {\n        /** Length of hash output */\n        this.digestLength = exports.DIGEST_LENGTH;\n        /** Block size */\n        this.blockSize = exports.BLOCK_SIZE;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this._stateHi = new Int32Array(8); // hash state, high bytes\n        this._stateLo = new Int32Array(8); // hash state, low bytes\n        this._tempHi = new Int32Array(16); // temporary state, high bytes\n        this._tempLo = new Int32Array(16); // temporary state, low bytes\n        this._buffer = new Uint8Array(256); // buffer for data to hash\n        this._bufferLength = 0; // number of bytes in buffer\n        this._bytesHashed = 0; // number of total bytes hashed\n        this._finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    SHA512.prototype._initState = function () {\n        this._stateHi[0] = 0x6a09e667;\n        this._stateHi[1] = 0xbb67ae85;\n        this._stateHi[2] = 0x3c6ef372;\n        this._stateHi[3] = 0xa54ff53a;\n        this._stateHi[4] = 0x510e527f;\n        this._stateHi[5] = 0x9b05688c;\n        this._stateHi[6] = 0x1f83d9ab;\n        this._stateHi[7] = 0x5be0cd19;\n        this._stateLo[0] = 0xf3bcc908;\n        this._stateLo[1] = 0x84caa73b;\n        this._stateLo[2] = 0xfe94f82b;\n        this._stateLo[3] = 0x5f1d36f1;\n        this._stateLo[4] = 0xade682d1;\n        this._stateLo[5] = 0x2b3e6c1f;\n        this._stateLo[6] = 0xfb41bd6b;\n        this._stateLo[7] = 0x137e2179;\n    };\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    SHA512.prototype.reset = function () {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    SHA512.prototype.clean = function () {\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._tempHi);\n        wipe_1.wipe(this._tempLo);\n        this.reset();\n    };\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    SHA512.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this._finished) {\n            throw new Error(\"SHA512: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < exports.BLOCK_SIZE && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    SHA512.prototype.finish = function (out) {\n        if (!this._finished) {\n            var bytesHashed = this._bytesHashed;\n            var left = this._bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 128 < 112) ? 128 : 256;\n            this._buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n            hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);\n            this._finished = true;\n        }\n        for (var i = 0; i < this.digestLength / 8; i++) {\n            binary_1.writeUint32BE(this._stateHi[i], out, i * 8);\n            binary_1.writeUint32BE(this._stateLo[i], out, i * 8 + 4);\n        }\n        return this;\n    };\n    /**\n     * Returns the final hash digest.\n     */\n    SHA512.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization. Returns hash state to be\n     * used with restoreState(). Only chain value is saved, not buffers or\n     * other state variables.\n     */\n    SHA512.prototype.saveState = function () {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            stateHi: new Int32Array(this._stateHi),\n            stateLo: new Int32Array(this._stateLo),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization. Restores state saved by\n     * saveState() and sets bytesHashed to the given value.\n     */\n    SHA512.prototype.restoreState = function (savedState) {\n        this._stateHi.set(savedState.stateHi);\n        this._stateLo.set(savedState.stateLo);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans state returned by saveState().\n     */\n    SHA512.prototype.cleanSavedState = function (savedState) {\n        wipe_1.wipe(savedState.stateHi);\n        wipe_1.wipe(savedState.stateLo);\n        if (savedState.buffer) {\n            wipe_1.wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    };\n    return SHA512;\n}());\nexports.SHA512 = SHA512;\n// Constants\nvar K = new Int32Array([\n    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]);\nfunction hashBlocks(wh, wl, hh, hl, m, pos, len) {\n    var ah0 = hh[0], ah1 = hh[1], ah2 = hh[2], ah3 = hh[3], ah4 = hh[4], ah5 = hh[5], ah6 = hh[6], ah7 = hh[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];\n    var h, l;\n    var th, tl;\n    var a, b, c, d;\n    while (len >= 128) {\n        for (var i = 0; i < 16; i++) {\n            var j = 8 * i + pos;\n            wh[i] = binary_1.readUint32BE(m, j);\n            wl[i] = binary_1.readUint32BE(m, j + 4);\n        }\n        for (var i = 0; i < 80; i++) {\n            var bh0 = ah0;\n            var bh1 = ah1;\n            var bh2 = ah2;\n            var bh3 = ah3;\n            var bh4 = ah4;\n            var bh5 = ah5;\n            var bh6 = ah6;\n            var bh7 = ah7;\n            var bl0 = al0;\n            var bl1 = al1;\n            var bl2 = al2;\n            var bl3 = al3;\n            var bl4 = al4;\n            var bl5 = al5;\n            var bl6 = al6;\n            var bl7 = al7;\n            // add\n            h = ah7;\n            l = al7;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            // Sigma1\n            h = ((ah4 >>> 14) | (al4 << (32 - 14))) ^ ((ah4 >>> 18) |\n                (al4 << (32 - 18))) ^ ((al4 >>> (41 - 32)) | (ah4 << (32 - (41 - 32))));\n            l = ((al4 >>> 14) | (ah4 << (32 - 14))) ^ ((al4 >>> 18) |\n                (ah4 << (32 - 18))) ^ ((ah4 >>> (41 - 32)) | (al4 << (32 - (41 - 32))));\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // Ch\n            h = (ah4 & ah5) ^ (~ah4 & ah6);\n            l = (al4 & al5) ^ (~al4 & al6);\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // K\n            h = K[i * 2];\n            l = K[i * 2 + 1];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // w\n            h = wh[i % 16];\n            l = wl[i % 16];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            th = c & 0xffff | d << 16;\n            tl = a & 0xffff | b << 16;\n            // add\n            h = th;\n            l = tl;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            // Sigma0\n            h = ((ah0 >>> 28) | (al0 << (32 - 28))) ^ ((al0 >>> (34 - 32)) |\n                (ah0 << (32 - (34 - 32)))) ^ ((al0 >>> (39 - 32)) | (ah0 << (32 - (39 - 32))));\n            l = ((al0 >>> 28) | (ah0 << (32 - 28))) ^ ((ah0 >>> (34 - 32)) |\n                (al0 << (32 - (34 - 32)))) ^ ((ah0 >>> (39 - 32)) | (al0 << (32 - (39 - 32))));\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // Maj\n            h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n            l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            bh7 = (c & 0xffff) | (d << 16);\n            bl7 = (a & 0xffff) | (b << 16);\n            // add\n            h = bh3;\n            l = bl3;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = th;\n            l = tl;\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            bh3 = (c & 0xffff) | (d << 16);\n            bl3 = (a & 0xffff) | (b << 16);\n            ah1 = bh0;\n            ah2 = bh1;\n            ah3 = bh2;\n            ah4 = bh3;\n            ah5 = bh4;\n            ah6 = bh5;\n            ah7 = bh6;\n            ah0 = bh7;\n            al1 = bl0;\n            al2 = bl1;\n            al3 = bl2;\n            al4 = bl3;\n            al5 = bl4;\n            al6 = bl5;\n            al7 = bl6;\n            al0 = bl7;\n            if (i % 16 === 15) {\n                for (var j = 0; j < 16; j++) {\n                    // add\n                    h = wh[j];\n                    l = wl[j];\n                    a = l & 0xffff;\n                    b = l >>> 16;\n                    c = h & 0xffff;\n                    d = h >>> 16;\n                    h = wh[(j + 9) % 16];\n                    l = wl[(j + 9) % 16];\n                    a += l & 0xffff;\n                    b += l >>> 16;\n                    c += h & 0xffff;\n                    d += h >>> 16;\n                    // sigma0\n                    th = wh[(j + 1) % 16];\n                    tl = wl[(j + 1) % 16];\n                    h = ((th >>> 1) | (tl << (32 - 1))) ^ ((th >>> 8) |\n                        (tl << (32 - 8))) ^ (th >>> 7);\n                    l = ((tl >>> 1) | (th << (32 - 1))) ^ ((tl >>> 8) |\n                        (th << (32 - 8))) ^ ((tl >>> 7) | (th << (32 - 7)));\n                    a += l & 0xffff;\n                    b += l >>> 16;\n                    c += h & 0xffff;\n                    d += h >>> 16;\n                    // sigma1\n                    th = wh[(j + 14) % 16];\n                    tl = wl[(j + 14) % 16];\n                    h = ((th >>> 19) | (tl << (32 - 19))) ^ ((tl >>> (61 - 32)) |\n                        (th << (32 - (61 - 32)))) ^ (th >>> 6);\n                    l = ((tl >>> 19) | (th << (32 - 19))) ^ ((th >>> (61 - 32)) |\n                        (tl << (32 - (61 - 32)))) ^ ((tl >>> 6) | (th << (32 - 6)));\n                    a += l & 0xffff;\n                    b += l >>> 16;\n                    c += h & 0xffff;\n                    d += h >>> 16;\n                    b += a >>> 16;\n                    c += b >>> 16;\n                    d += c >>> 16;\n                    wh[j] = (c & 0xffff) | (d << 16);\n                    wl[j] = (a & 0xffff) | (b << 16);\n                }\n            }\n        }\n        // add\n        h = ah0;\n        l = al0;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[0];\n        l = hl[0];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[0] = ah0 = (c & 0xffff) | (d << 16);\n        hl[0] = al0 = (a & 0xffff) | (b << 16);\n        h = ah1;\n        l = al1;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[1];\n        l = hl[1];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[1] = ah1 = (c & 0xffff) | (d << 16);\n        hl[1] = al1 = (a & 0xffff) | (b << 16);\n        h = ah2;\n        l = al2;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[2];\n        l = hl[2];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[2] = ah2 = (c & 0xffff) | (d << 16);\n        hl[2] = al2 = (a & 0xffff) | (b << 16);\n        h = ah3;\n        l = al3;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[3];\n        l = hl[3];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[3] = ah3 = (c & 0xffff) | (d << 16);\n        hl[3] = al3 = (a & 0xffff) | (b << 16);\n        h = ah4;\n        l = al4;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[4];\n        l = hl[4];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[4] = ah4 = (c & 0xffff) | (d << 16);\n        hl[4] = al4 = (a & 0xffff) | (b << 16);\n        h = ah5;\n        l = al5;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[5];\n        l = hl[5];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[5] = ah5 = (c & 0xffff) | (d << 16);\n        hl[5] = al5 = (a & 0xffff) | (b << 16);\n        h = ah6;\n        l = al6;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[6];\n        l = hl[6];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[6] = ah6 = (c & 0xffff) | (d << 16);\n        hl[6] = al6 = (a & 0xffff) | (b << 16);\n        h = ah7;\n        l = al7;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[7];\n        l = hl[7];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[7] = ah7 = (c & 0xffff) | (d << 16);\n        hl[7] = al7 = (a & 0xffff) | (b << 16);\n        pos += 128;\n        len -= 128;\n    }\n    return pos;\n}\nfunction hash(data) {\n    var h = new SHA512();\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n//# sourceMappingURL=sha512.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertSecretKeyToX25519 = exports.convertPublicKeyToX25519 = exports.verify = exports.sign = exports.extractPublicKeyFromSecretKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.SEED_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = exports.SIGNATURE_LENGTH = void 0;\n/**\n * Package ed25519 implements Ed25519 public-key signature algorithm.\n */\nconst random_1 = require(\"@stablelib/random\");\nconst sha512_1 = require(\"@stablelib/sha512\");\nconst wipe_1 = require(\"@stablelib/wipe\");\nexports.SIGNATURE_LENGTH = 64;\nexports.PUBLIC_KEY_LENGTH = 32;\nexports.SECRET_KEY_LENGTH = 64;\nexports.SEED_LENGTH = 32;\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init) {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n// Base point.\nconst _9 = new Uint8Array(32);\n_9[0] = 9;\nconst gf0 = gf();\nconst gf1 = gf([1]);\nconst D = gf([\n    0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n    0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203\n]);\nconst D2 = gf([\n    0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n    0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406\n]);\nconst X = gf([\n    0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n    0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169\n]);\nconst Y = gf([\n    0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n    0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666\n]);\nconst I = gf([\n    0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n    0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83\n]);\nfunction set25519(r, a) {\n    for (let i = 0; i < 16; i++) {\n        r[i] = a[i] | 0;\n    }\n}\nfunction car25519(o) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\nfunction sel25519(p, q, b) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\nfunction pack25519(o, n) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\nfunction verify32(x, y) {\n    let d = 0;\n    for (let i = 0; i < 32; i++) {\n        d |= x[i] ^ y[i];\n    }\n    return (1 & ((d - 1) >>> 8)) - 1;\n}\nfunction neq25519(a, b) {\n    const c = new Uint8Array(32);\n    const d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return verify32(c, d);\n}\nfunction par25519(a) {\n    const d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n}\nfunction unpack25519(o, n) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\nfunction add(o, a, b) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\nfunction sub(o, a, b) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\nfunction mul(o, a, b) {\n    let v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n    // first car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    // second car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\nfunction square(o, a) {\n    mul(o, a, a);\n}\nfunction inv25519(o, i) {\n    const c = gf();\n    let a;\n    for (a = 0; a < 16; a++) {\n        c[a] = i[a];\n    }\n    for (a = 253; a >= 0; a--) {\n        square(c, c);\n        if (a !== 2 && a !== 4) {\n            mul(c, c, i);\n        }\n    }\n    for (a = 0; a < 16; a++) {\n        o[a] = c[a];\n    }\n}\nfunction pow2523(o, i) {\n    const c = gf();\n    let a;\n    for (a = 0; a < 16; a++) {\n        c[a] = i[a];\n    }\n    for (a = 250; a >= 0; a--) {\n        square(c, c);\n        if (a !== 1) {\n            mul(c, c, i);\n        }\n    }\n    for (a = 0; a < 16; a++) {\n        o[a] = c[a];\n    }\n}\nfunction edadd(p, q) {\n    const a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf(), g = gf(), h = gf(), t = gf();\n    sub(a, p[1], p[0]);\n    sub(t, q[1], q[0]);\n    mul(a, a, t);\n    add(b, p[0], p[1]);\n    add(t, q[0], q[1]);\n    mul(b, b, t);\n    mul(c, p[3], q[3]);\n    mul(c, c, D2);\n    mul(d, p[2], q[2]);\n    add(d, d, d);\n    sub(e, b, a);\n    sub(f, d, c);\n    add(g, d, c);\n    add(h, b, a);\n    mul(p[0], e, f);\n    mul(p[1], h, g);\n    mul(p[2], g, f);\n    mul(p[3], e, h);\n}\nfunction cswap(p, q, b) {\n    for (let i = 0; i < 4; i++) {\n        sel25519(p[i], q[i], b);\n    }\n}\nfunction pack(r, p) {\n    const tx = gf(), ty = gf(), zi = gf();\n    inv25519(zi, p[2]);\n    mul(tx, p[0], zi);\n    mul(ty, p[1], zi);\n    pack25519(r, ty);\n    r[31] ^= par25519(tx) << 7;\n}\nfunction scalarmult(p, q, s) {\n    set25519(p[0], gf0);\n    set25519(p[1], gf1);\n    set25519(p[2], gf1);\n    set25519(p[3], gf0);\n    for (let i = 255; i >= 0; --i) {\n        const b = (s[(i / 8) | 0] >> (i & 7)) & 1;\n        cswap(p, q, b);\n        edadd(q, p);\n        edadd(p, p);\n        cswap(p, q, b);\n    }\n}\nfunction scalarbase(p, s) {\n    const q = [gf(), gf(), gf(), gf()];\n    set25519(q[0], X);\n    set25519(q[1], Y);\n    set25519(q[2], gf1);\n    mul(q[3], X, Y);\n    scalarmult(p, q, s);\n}\n// Generates key pair from secret 32-byte seed.\nfunction generateKeyPairFromSeed(seed) {\n    if (seed.length !== exports.SEED_LENGTH) {\n        throw new Error(`ed25519: seed must be ${exports.SEED_LENGTH} bytes`);\n    }\n    const d = (0, sha512_1.hash)(seed);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    const publicKey = new Uint8Array(32);\n    const p = [gf(), gf(), gf(), gf()];\n    scalarbase(p, d);\n    pack(publicKey, p);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return {\n        publicKey,\n        secretKey\n    };\n}\nexports.generateKeyPairFromSeed = generateKeyPairFromSeed;\nfunction generateKeyPair(prng) {\n    const seed = (0, random_1.randomBytes)(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    (0, wipe_1.wipe)(seed);\n    return result;\n}\nexports.generateKeyPair = generateKeyPair;\nfunction extractPublicKeyFromSecretKey(secretKey) {\n    if (secretKey.length !== exports.SECRET_KEY_LENGTH) {\n        throw new Error(`ed25519: secret key must be ${exports.SECRET_KEY_LENGTH} bytes`);\n    }\n    return new Uint8Array(secretKey.subarray(32));\n}\nexports.extractPublicKeyFromSecretKey = extractPublicKeyFromSecretKey;\nconst L = new Float64Array([\n    0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2,\n    0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10\n]);\nfunction modL(r, x) {\n    let carry;\n    let i;\n    let j;\n    let k;\n    for (i = 63; i >= 32; --i) {\n        carry = 0;\n        for (j = i - 32, k = i - 12; j < k; ++j) {\n            x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n            carry = Math.floor((x[j] + 128) / 256);\n            x[j] -= carry * 256;\n        }\n        x[j] += carry;\n        x[i] = 0;\n    }\n    carry = 0;\n    for (j = 0; j < 32; j++) {\n        x[j] += carry - (x[31] >> 4) * L[j];\n        carry = x[j] >> 8;\n        x[j] &= 255;\n    }\n    for (j = 0; j < 32; j++) {\n        x[j] -= carry * L[j];\n    }\n    for (i = 0; i < 32; i++) {\n        x[i + 1] += x[i] >> 8;\n        r[i] = x[i] & 255;\n    }\n}\nfunction reduce(r) {\n    const x = new Float64Array(64);\n    for (let i = 0; i < 64; i++) {\n        x[i] = r[i];\n    }\n    for (let i = 0; i < 64; i++) {\n        r[i] = 0;\n    }\n    modL(r, x);\n}\n// Returns 64-byte signature of the message under the 64-byte secret key.\nfunction sign(secretKey, message) {\n    const x = new Float64Array(64);\n    const p = [gf(), gf(), gf(), gf()];\n    const d = (0, sha512_1.hash)(secretKey.subarray(0, 32));\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    const signature = new Uint8Array(64);\n    signature.set(d.subarray(32), 32);\n    const hs = new sha512_1.SHA512();\n    hs.update(signature.subarray(32));\n    hs.update(message);\n    const r = hs.digest();\n    hs.clean();\n    reduce(r);\n    scalarbase(p, r);\n    pack(signature, p);\n    hs.reset();\n    hs.update(signature.subarray(0, 32));\n    hs.update(secretKey.subarray(32));\n    hs.update(message);\n    const h = hs.digest();\n    reduce(h);\n    for (let i = 0; i < 32; i++) {\n        x[i] = r[i];\n    }\n    for (let i = 0; i < 32; i++) {\n        for (let j = 0; j < 32; j++) {\n            x[i + j] += h[i] * d[j];\n        }\n    }\n    modL(signature.subarray(32), x);\n    return signature;\n}\nexports.sign = sign;\nfunction unpackneg(r, p) {\n    const t = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    square(num, r[1]);\n    mul(den, num, D);\n    sub(num, num, r[2]);\n    add(den, r[2], den);\n    square(den2, den);\n    square(den4, den2);\n    mul(den6, den4, den2);\n    mul(t, den6, num);\n    mul(t, t, den);\n    pow2523(t, t);\n    mul(t, t, num);\n    mul(t, t, den);\n    mul(t, t, den);\n    mul(r[0], t, den);\n    square(chk, r[0]);\n    mul(chk, chk, den);\n    if (neq25519(chk, num)) {\n        mul(r[0], r[0], I);\n    }\n    square(chk, r[0]);\n    mul(chk, chk, den);\n    if (neq25519(chk, num)) {\n        return -1;\n    }\n    if (par25519(r[0]) === (p[31] >> 7)) {\n        sub(r[0], gf0, r[0]);\n    }\n    mul(r[3], r[0], r[1]);\n    return 0;\n}\nfunction verify(publicKey, message, signature) {\n    const t = new Uint8Array(32);\n    const p = [gf(), gf(), gf(), gf()];\n    const q = [gf(), gf(), gf(), gf()];\n    if (signature.length !== exports.SIGNATURE_LENGTH) {\n        throw new Error(`ed25519: signature must be ${exports.SIGNATURE_LENGTH} bytes`);\n    }\n    if (unpackneg(q, publicKey)) {\n        return false;\n    }\n    const hs = new sha512_1.SHA512();\n    hs.update(signature.subarray(0, 32));\n    hs.update(publicKey);\n    hs.update(message);\n    const h = hs.digest();\n    reduce(h);\n    scalarmult(p, q, h);\n    scalarbase(q, signature.subarray(32));\n    edadd(p, q);\n    pack(t, p);\n    if (verify32(signature, t)) {\n        return false;\n    }\n    return true;\n}\nexports.verify = verify;\n/**\n * Convert Ed25519 public key to X25519 public key.\n *\n * Throws if given an invalid public key.\n */\nfunction convertPublicKeyToX25519(publicKey) {\n    let q = [gf(), gf(), gf(), gf()];\n    if (unpackneg(q, publicKey)) {\n        throw new Error(\"Ed25519: invalid public key\");\n    }\n    // Formula: montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n    let a = gf();\n    let b = gf();\n    let y = q[1];\n    add(a, gf1, y);\n    sub(b, gf1, y);\n    inv25519(b, b);\n    mul(a, a, b);\n    let z = new Uint8Array(32);\n    pack25519(z, a);\n    return z;\n}\nexports.convertPublicKeyToX25519 = convertPublicKeyToX25519;\n/**\n *  Convert Ed25519 secret (private) key to X25519 secret key.\n */\nfunction convertSecretKeyToX25519(secretKey) {\n    const d = (0, sha512_1.hash)(secretKey.subarray(0, 32));\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    const o = new Uint8Array(d.subarray(0, 32));\n    (0, wipe_1.wipe)(d);\n    return o;\n}\nexports.convertSecretKeyToX25519 = convertSecretKeyToX25519;\n//# sourceMappingURL=ed25519.js.map"],"names":["exports","imulShim","a","b","ah","al","bh","bl","add","sub","rotl","x","n","rotr","isIntegerShim","binary","int_1","require$$0","readInt16BE","array","offset","readUint16BE","readInt16LE","readUint16LE","writeUint16BE","value","out","writeUint16LE","readInt32BE","readUint32BE","readInt32LE","readUint32LE","writeUint32BE","writeUint32LE","readInt64BE","hi","lo","readUint64BE","readInt64LE","readUint64LE","writeUint64BE","writeUint64LE","readUintBE","bitLength","result","mul","i","readUintLE","writeUintBE","div","writeUintLE","readFloat32BE","view","readFloat32LE","readFloat64BE","readFloat64LE","writeFloat32BE","writeFloat32LE","writeFloat64BE","writeFloat64LE","wipe_1","wipe","chacha","binary_1","require$$1","ROUNDS","core","input","key","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","streamXOR","nonce","src","dst","nonceInplaceCounterLength","nc","counterLength","block","j","incrementCounter","stream","counter","pos","len","carry","constantTime","select","subject","resultIfOne","resultIfZero","lessOrEqual","compare","equal","constant_time_1","Poly1305","t0","t1","t2","t3","t4","t5","t6","t7","m","mpos","bytes","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","c","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","mac","macpos","g","mask","f","want","oneTimeAuth","data","h","digest","chacha_1","poly1305_1","require$$2","require$$3","require$$4","ZEROS","ChaCha20Poly1305","plaintext","associatedData","authKey","resultLength","sealed","calculatedTag","tagOut","ciphertext","length","tag","hash","isSerializableHash","hmac_1","hash_1","HMAC","pad","savedState","hmac","hkdf","HKDF","salt","info","okm","ctr","HKDF_1","browser","QUOTA","BrowserRandomSource","browserCrypto","node","NodeRandomSource","require","nodeCrypto","buffer","system","browser_1","node_1","SystemRandomSource","system_1","randomBytes","prng","randomUint32","buf","ALPHANUMERIC","randomString","charset","charsLen","maxByte","randomByte","randomStringForEntropy","bits","SHA256","dataLength","dataPos","hashBlocks","bytesHashed","left","bitLenHi","bitLenLo","padLength","K","w","v","p","d","e","u","random_1","gf","init","r","_9","_121665","car25519","o","sel25519","q","t","pack25519","unpack25519","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","square","inv25519","inp","scalarMult","z","x32","x16","scalarMultBase","generateKeyPairFromSeed","seed","secretKey","generateKeyPair","sharedKey","mySecretKey","theirPublicKey","rejectZero","zeros","SHA512","wh","wl","hh","hl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","l","th","tl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","sha512_1","gf0","gf1","D","D2","X","Y","I","set25519","verify32","y","neq25519","par25519","pow2523","edadd","cswap","pack","tx","ty","zi","scalarmult","s","scalarbase","publicKey","extractPublicKeyFromSecretKey","L","modL","k","reduce","sign","message","signature","hs","unpackneg","chk","num","den","den2","den4","den6","verify","convertPublicKeyToX25519","convertSecretKeyToX25519"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]}