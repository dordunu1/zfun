{"version":3,"file":"vendor-tanstack-DyjL1WzW.js","sources":["../../../node_modules/@tanstack/query-sync-storage-persister/build/lib/index.mjs","../../../node_modules/@tanstack/query-core/build/lib/subscribable.mjs","../../../node_modules/@tanstack/query-core/build/lib/utils.mjs","../../../node_modules/@tanstack/query-core/build/lib/focusManager.mjs","../../../node_modules/@tanstack/query-core/build/lib/onlineManager.mjs","../../../node_modules/@tanstack/query-core/build/lib/retryer.mjs","../../../node_modules/@tanstack/query-core/build/lib/logger.mjs","../../../node_modules/@tanstack/query-core/build/lib/notifyManager.mjs","../../../node_modules/@tanstack/query-core/build/lib/removable.mjs","../../../node_modules/@tanstack/query-core/build/lib/query.mjs","../../../node_modules/@tanstack/query-core/build/lib/queryCache.mjs","../../../node_modules/@tanstack/query-core/build/lib/mutation.mjs","../../../node_modules/@tanstack/query-core/build/lib/mutationCache.mjs","../../../node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs","../../../node_modules/@tanstack/query-core/build/lib/queryClient.mjs","../../../node_modules/@tanstack/query-core/build/lib/queryObserver.mjs","../../../node_modules/@tanstack/query-core/build/lib/mutationObserver.mjs","../../../node_modules/@tanstack/query-core/build/lib/hydration.mjs","../../../node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs","../../../node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs","../../../node_modules/@tanstack/react-query/build/lib/isRestoring.mjs","../../../node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs","../../../node_modules/@tanstack/react-query/build/lib/utils.mjs","../../../node_modules/@tanstack/react-query/build/lib/useMutation.mjs","../../../node_modules/@tanstack/query-persist-client-core/build/lib/persist.mjs"],"sourcesContent":["function createSyncStoragePersister({\n  storage,\n  key = \"REACT_QUERY_OFFLINE_CACHE\",\n  throttleTime = 1000,\n  serialize = JSON.stringify,\n  deserialize = JSON.parse,\n  retry\n}) {\n  if (storage) {\n    const trySave = persistedClient => {\n      try {\n        storage.setItem(key, serialize(persistedClient));\n        return;\n      } catch (error) {\n        return error;\n      }\n    };\n\n    return {\n      persistClient: throttle(persistedClient => {\n        let client = persistedClient;\n        let error = trySave(client);\n        let errorCount = 0;\n\n        while (error && client) {\n          errorCount++;\n          client = retry == null ? void 0 : retry({\n            persistedClient: client,\n            error,\n            errorCount\n          });\n\n          if (client) {\n            error = trySave(client);\n          }\n        }\n      }, throttleTime),\n      restoreClient: () => {\n        const cacheString = storage.getItem(key);\n\n        if (!cacheString) {\n          return;\n        }\n\n        return deserialize(cacheString);\n      },\n      removeClient: () => {\n        storage.removeItem(key);\n      }\n    };\n  }\n\n  return {\n    persistClient: noop,\n    restoreClient: () => undefined,\n    removeClient: noop\n  };\n}\n\nfunction throttle(func, wait = 100) {\n  let timer = null;\n  let params;\n  return function (...args) {\n    params = args;\n\n    if (timer === null) {\n      timer = setTimeout(() => {\n        func(...params);\n        timer = null;\n      }, wait);\n    }\n  };\n} // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\nfunction noop() {}\n\nexport { createSyncStoragePersister };\n//# sourceMappingURL=index.mjs.map\n","class Subscribable {\n  constructor() {\n    this.listeners = new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  subscribe(listener) {\n    const identity = {\n      listener\n    };\n    this.listeners.add(identity);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(identity);\n      this.onUnsubscribe();\n    };\n  }\n\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n\n  onSubscribe() {// Do nothing\n  }\n\n  onUnsubscribe() {// Do nothing\n  }\n\n}\n\nexport { Subscribable };\n//# sourceMappingURL=subscribable.mjs.map\n","// TYPES\n// UTILS\nconst isServer = typeof window === 'undefined' || 'Deno' in window;\nfunction noop() {\n  return undefined;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nfunction difference(array1, array2) {\n  return array1.filter(x => !array2.includes(x));\n}\nfunction replaceAt(array, index, value) {\n  const copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n\n  return { ...arg2,\n    queryKey: arg1\n  };\n}\nfunction parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3,\n        mutationKey: arg1,\n        mutationFn: arg2\n      };\n    }\n\n    return { ...arg2,\n      mutationKey: arg1\n    };\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2,\n      mutationFn: arg1\n    };\n  }\n\n  return { ...arg1\n  };\n}\nfunction parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    queryKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction parseMutationFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    mutationKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive();\n\n    if (type === 'active' && !isActive) {\n      return false;\n    }\n\n    if (type === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetchStatus !== 'undefined' && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const {\n    exact,\n    fetching,\n    predicate,\n    mutationKey\n  } = filters;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\n\nfunction hashQueryKey(queryKey) {\n  return JSON.stringify(queryKey, (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n    result[key] = val[key];\n    return result;\n  }, {}) : val);\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nfunction partialMatchKey(a, b) {\n  return partialDeepEqual(a, b);\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aSize = array ? a.length : Object.keys(a).length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nfunction shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  const ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  const prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isError(value) {\n  return value instanceof Error;\n}\nfunction sleep(timeout) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nfunction scheduleMicrotask(callback) {\n  sleep(0).then(callback);\n}\nfunction getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n\n  return;\n}\nfunction replaceData(prevData, data, options) {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual != null && options.isDataEqual(prevData, data)) {\n    return prevData;\n  } else if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data);\n  }\n\n  return data;\n}\n\nexport { difference, functionalUpdate, getAbortController, hashQueryKey, hashQueryKeyByOptions, isError, isPlainArray, isPlainObject, isQueryKey, isServer, isValidTimeout, matchMutation, matchQuery, noop, parseFilterArgs, parseMutationArgs, parseMutationFilterArgs, parseQueryArgs, partialDeepEqual, partialMatchKey, replaceAt, replaceData, replaceEqualDeep, scheduleMicrotask, shallowEqualObjects, sleep, timeUntilStale };\n//# sourceMappingURL=utils.mjs.map\n","import { Subscribable } from './subscribable.mjs';\nimport { isServer } from './utils.mjs';\n\nclass FocusManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onFocus => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus(); // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(focused => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n\n  setFocused(focused) {\n    const changed = this.focused !== focused;\n\n    if (changed) {\n      this.focused = focused;\n      this.onFocus();\n    }\n  }\n\n  onFocus() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  }\n\n}\nconst focusManager = new FocusManager();\n\nexport { FocusManager, focusManager };\n//# sourceMappingURL=focusManager.mjs.map\n","import { Subscribable } from './subscribable.mjs';\nimport { isServer } from './utils.mjs';\n\nconst onlineEvents = ['online', 'offline'];\nclass OnlineManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n\n        onlineEvents.forEach(event => {\n          window.addEventListener(event, listener, false);\n        });\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          onlineEvents.forEach(event => {\n            window.removeEventListener(event, listener);\n          });\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n\n  setOnline(online) {\n    const changed = this.online !== online;\n\n    if (changed) {\n      this.online = online;\n      this.onOnline();\n    }\n  }\n\n  onOnline() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  }\n\n}\nconst onlineManager = new OnlineManager();\n\nexport { OnlineManager, onlineManager };\n//# sourceMappingURL=onlineManager.mjs.map\n","import { focusManager } from './focusManager.mjs';\nimport { onlineManager } from './onlineManager.mjs';\nimport { sleep } from './utils.mjs';\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * 2 ** failureCount, 30000);\n}\n\nfunction canFetch(networkMode) {\n  return (networkMode != null ? networkMode : 'online') === 'online' ? onlineManager.isOnline() : true;\n}\nclass CancelledError {\n  constructor(options) {\n    this.revert = options == null ? void 0 : options.revert;\n    this.silent = options == null ? void 0 : options.silent;\n  }\n\n}\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  let promiseResolve;\n  let promiseReject;\n  const promise = new Promise((outerResolve, outerReject) => {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  const cancel = cancelOptions => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort == null ? void 0 : config.abort();\n    }\n  };\n\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n\n  const shouldPause = () => !focusManager.isFocused() || config.networkMode !== 'always' && !onlineManager.isOnline();\n\n  const resolve = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  const reject = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  const pause = () => {\n    return new Promise(continueResolve => {\n      continueFn = value => {\n        const canContinue = isResolved || !shouldPause();\n\n        if (canContinue) {\n          continueResolve(value);\n        }\n\n        return canContinue;\n      };\n\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(() => {\n      continueFn = undefined;\n\n      if (!isResolved) {\n        config.onContinue == null ? void 0 : config.onContinue();\n      }\n    });\n  }; // Create loop function\n\n\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return;\n    }\n\n    let promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n\n    Promise.resolve(promiseOrValue).then(resolve).catch(error => {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      const retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      const retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      const delay = typeof retryDelay === 'function' ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === 'number' && failureCount < retry || typeof retry === 'function' && retry(failureCount, error);\n\n      if (isRetryCancelled || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(() => {\n        if (shouldPause()) {\n          return pause();\n        }\n\n        return;\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  if (canFetch(config.networkMode)) {\n    run();\n  } else {\n    pause().then(run);\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn == null ? void 0 : continueFn();\n      return didContinue ? promise : Promise.resolve();\n    },\n    cancelRetry,\n    continueRetry\n  };\n}\n\nexport { CancelledError, canFetch, createRetryer, isCancelledError };\n//# sourceMappingURL=retryer.mjs.map\n","const defaultLogger = console;\n\nexport { defaultLogger };\n//# sourceMappingURL=logger.mjs.map\n","import { scheduleMicrotask } from './utils.mjs';\n\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n\n  let notifyFn = callback => {\n    callback();\n  };\n\n  let batchNotifyFn = callback => {\n    callback();\n  };\n\n  const batch = callback => {\n    let result;\n    transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      transactions--;\n\n      if (!transactions) {\n        flush();\n      }\n    }\n\n    return result;\n  };\n\n  const schedule = callback => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleMicrotask(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n\n\n  const batchCalls = callback => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args);\n      });\n    };\n  };\n\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n\n    if (originalQueue.length) {\n      scheduleMicrotask(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach(callback => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n\n\n  const setNotifyFunction = fn => {\n    notifyFn = fn;\n  };\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n\n\n  const setBatchNotifyFunction = fn => {\n    batchNotifyFn = fn;\n  };\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction\n  };\n} // SINGLETON\n\nconst notifyManager = createNotifyManager();\n\nexport { createNotifyManager, notifyManager };\n//# sourceMappingURL=notifyManager.mjs.map\n","import { isValidTimeout, isServer } from './utils.mjs';\n\nclass Removable {\n  destroy() {\n    this.clearGcTimeout();\n  }\n\n  scheduleGc() {\n    this.clearGcTimeout();\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.cacheTime);\n    }\n  }\n\n  updateCacheTime(newCacheTime) {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(this.cacheTime || 0, newCacheTime != null ? newCacheTime : isServer ? Infinity : 5 * 60 * 1000);\n  }\n\n  clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  }\n\n}\n\nexport { Removable };\n//# sourceMappingURL=removable.mjs.map\n","import { replaceData, noop, timeUntilStale, getAbortController } from './utils.mjs';\nimport { defaultLogger } from './logger.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { createRetryer, isCancelledError, canFetch } from './retryer.mjs';\nimport { Removable } from './removable.mjs';\n\n// CLASS\nclass Query extends Removable {\n  constructor(config) {\n    super();\n    this.abortSignalConsumed = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.logger = config.logger || defaultLogger;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || getDefaultState(this.options);\n    this.state = this.initialState;\n    this.scheduleGc();\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this);\n    }\n  }\n\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options); // Set data and mark it as cached\n\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt,\n      manual: options == null ? void 0 : options.manual\n    });\n    return data;\n  }\n\n  setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state,\n      setStateOptions\n    });\n  }\n\n  cancel(options) {\n    var _this$retryer;\n\n    const promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n\n  destroy() {\n    super.destroy();\n    this.cancel({\n      silent: true\n    });\n  }\n\n  reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  }\n\n  isActive() {\n    return this.observers.some(observer => observer.options.enabled !== false);\n  }\n\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n\n  isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(observer => observer.getCurrentResult().isStale);\n  }\n\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n\n  onFocus() {\n    var _this$retryer2;\n\n    const observer = this.observers.find(x => x.shouldFetchOnWindowFocus());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  }\n\n  onOnline() {\n    var _this$retryer3;\n\n    const observer = this.observers.find(x => x.shouldFetchOnReconnect());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter(x => x !== observer);\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        this.scheduleGc();\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  getObserversCount() {\n    return this.observers.length;\n  }\n\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  }\n\n  fetch(options, fetchOptions) {\n    var _this$options$behavio, _context$fetchOptions;\n\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions != null && fetchOptions.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4;\n\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      const observer = this.observers.find(x => x.options.queryFn);\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        this.logger.error(\"As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']\");\n      }\n    }\n\n    const abortController = getAbortController(); // Create query function context\n\n    const queryFnContext = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    }; // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n\n    const addSignalProperty = object => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true;\n            return abortController.signal;\n          }\n\n          return undefined;\n        }\n      });\n    };\n\n    addSignalProperty(queryFnContext); // Create fetch function\n\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject(\"Missing queryFn for queryKey '\" + this.options.queryHash + \"'\");\n      }\n\n      this.abortSignalConsumed = false;\n      return this.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    (_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch(context); // Store state in case the current fetch needs to be reverted\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (this.state.fetchStatus === 'idle' || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    }\n\n    const onError = error => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n\n      if (!isCancelledError(error)) {\n        var _this$cache$config$on, _this$cache$config, _this$cache$config$on2, _this$cache$config2;\n\n        // Notify cache callback\n        (_this$cache$config$on = (_this$cache$config = this.cache.config).onError) == null ? void 0 : _this$cache$config$on.call(_this$cache$config, error, this);\n        (_this$cache$config$on2 = (_this$cache$config2 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on2.call(_this$cache$config2, this.state.data, error, this);\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error);\n        }\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc();\n      }\n\n      this.isFetchingOptimistic = false;\n    }; // Try to fetch the data\n\n\n    this.retryer = createRetryer({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : abortController.abort.bind(abortController),\n      onSuccess: data => {\n        var _this$cache$config$on3, _this$cache$config3, _this$cache$config$on4, _this$cache$config4;\n\n        if (typeof data === 'undefined') {\n          if (process.env.NODE_ENV !== 'production') {\n            this.logger.error(\"Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: \" + this.queryHash);\n          }\n\n          onError(new Error(this.queryHash + \" data is undefined\"));\n          return;\n        }\n\n        this.setData(data); // Notify cache callback\n\n        (_this$cache$config$on3 = (_this$cache$config3 = this.cache.config).onSuccess) == null ? void 0 : _this$cache$config$on3.call(_this$cache$config3, data, this);\n        (_this$cache$config$on4 = (_this$cache$config4 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on4.call(_this$cache$config4, data, this.state.error, this);\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc();\n        }\n\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.dispatch({\n          type: 'failed',\n          failureCount,\n          error\n        });\n      },\n      onPause: () => {\n        this.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: () => {\n        this.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      var _action$meta, _action$dataUpdatedAt;\n\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            fetchStatus: 'paused'\n          };\n\n        case 'continue':\n          return { ...state,\n            fetchStatus: 'fetching'\n          };\n\n        case 'fetch':\n          return { ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n            fetchStatus: canFetch(this.options.networkMode) ? 'fetching' : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading'\n            })\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            })\n          };\n\n        case 'error':\n          const error = action.error;\n\n          if (isCancelledError(error) && error.revert && this.revertState) {\n            return { ...this.revertState,\n              fetchStatus: 'idle'\n            };\n          }\n\n          return { ...state,\n            error: error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error'\n          };\n\n        case 'invalidate':\n          return { ...state,\n            isInvalidated: true\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onQueryUpdate(action);\n      });\n      this.cache.notify({\n        query: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\n\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n  const hasData = typeof data !== 'undefined';\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle'\n  };\n}\n\nexport { Query };\n//# sourceMappingURL=query.mjs.map\n","import { hashQueryKeyByOptions, parseFilterArgs, matchQuery } from './utils.mjs';\nimport { Query } from './query.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { Subscribable } from './subscribable.mjs';\n\n// CLASS\nclass QueryCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.queries = [];\n    this.queriesMap = {};\n  }\n\n  build(client, options, state) {\n    var _options$queryHash;\n\n    const queryKey = options.queryKey;\n    const queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        logger: client.getLogger(),\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n\n    return query;\n  }\n\n  add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify({\n        type: 'added',\n        query\n      });\n    }\n  }\n\n  remove(query) {\n    const queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(x => x !== query);\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify({\n        type: 'removed',\n        query\n      });\n    }\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        this.remove(query);\n      });\n    });\n  }\n\n  get(queryHash) {\n    return this.queriesMap[queryHash];\n  }\n\n  getAll() {\n    return this.queries;\n  }\n\n  find(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.queries.find(query => matchQuery(filters, query));\n  }\n\n  findAll(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    return Object.keys(filters).length > 0 ? this.queries.filter(query => matchQuery(filters, query)) : this.queries;\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  onFocus() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onFocus();\n      });\n    });\n  }\n\n  onOnline() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onOnline();\n      });\n    });\n  }\n\n}\n\nexport { QueryCache };\n//# sourceMappingURL=queryCache.mjs.map\n","import { defaultLogger } from './logger.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { Removable } from './removable.mjs';\nimport { createRetryer, canFetch } from './retryer.mjs';\n\n// CLASS\nclass Mutation extends Removable {\n  constructor(config) {\n    super();\n    this.defaultOptions = config.defaultOptions;\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.logger = config.logger || defaultLogger;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state\n    });\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the mutation from being garbage collected\n\n      this.clearGcTimeout();\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    this.observers = this.observers.filter(x => x !== observer);\n    this.scheduleGc();\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer\n    });\n  }\n\n  optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc();\n      } else {\n        this.mutationCache.remove(this);\n      }\n    }\n  }\n\n  continue() {\n    var _this$retryer$continu, _this$retryer;\n\n    return (_this$retryer$continu = (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.continue()) != null ? _this$retryer$continu : this.execute();\n  }\n\n  async execute() {\n    const executeMutation = () => {\n      var _this$options$retry;\n\n      this.retryer = createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found');\n          }\n\n          return this.options.mutationFn(this.state.variables);\n        },\n        onFail: (failureCount, error) => {\n          this.dispatch({\n            type: 'failed',\n            failureCount,\n            error\n          });\n        },\n        onPause: () => {\n          this.dispatch({\n            type: 'pause'\n          });\n        },\n        onContinue: () => {\n          this.dispatch({\n            type: 'continue'\n          });\n        },\n        retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode\n      });\n      return this.retryer.promise;\n    };\n\n    const restored = this.state.status === 'loading';\n\n    try {\n      var _this$mutationCache$c3, _this$mutationCache$c4, _this$options$onSucce, _this$options2, _this$mutationCache$c5, _this$mutationCache$c6, _this$options$onSettl, _this$options3;\n\n      if (!restored) {\n        var _this$mutationCache$c, _this$mutationCache$c2, _this$options$onMutat, _this$options;\n\n        this.dispatch({\n          type: 'loading',\n          variables: this.options.variables\n        }); // Notify cache callback\n\n        await ((_this$mutationCache$c = (_this$mutationCache$c2 = this.mutationCache.config).onMutate) == null ? void 0 : _this$mutationCache$c.call(_this$mutationCache$c2, this.state.variables, this));\n        const context = await ((_this$options$onMutat = (_this$options = this.options).onMutate) == null ? void 0 : _this$options$onMutat.call(_this$options, this.state.variables));\n\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables\n          });\n        }\n      }\n\n      const data = await executeMutation(); // Notify cache callback\n\n      await ((_this$mutationCache$c3 = (_this$mutationCache$c4 = this.mutationCache.config).onSuccess) == null ? void 0 : _this$mutationCache$c3.call(_this$mutationCache$c4, data, this.state.variables, this.state.context, this));\n      await ((_this$options$onSucce = (_this$options2 = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options2, data, this.state.variables, this.state.context)); // Notify cache callback\n\n      await ((_this$mutationCache$c5 = (_this$mutationCache$c6 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c5.call(_this$mutationCache$c6, data, null, this.state.variables, this.state.context, this));\n      await ((_this$options$onSettl = (_this$options3 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options3, data, null, this.state.variables, this.state.context));\n      this.dispatch({\n        type: 'success',\n        data\n      });\n      return data;\n    } catch (error) {\n      try {\n        var _this$mutationCache$c7, _this$mutationCache$c8, _this$options$onError, _this$options4, _this$mutationCache$c9, _this$mutationCache$c10, _this$options$onSettl2, _this$options5;\n\n        // Notify cache callback\n        await ((_this$mutationCache$c7 = (_this$mutationCache$c8 = this.mutationCache.config).onError) == null ? void 0 : _this$mutationCache$c7.call(_this$mutationCache$c8, error, this.state.variables, this.state.context, this));\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error);\n        }\n\n        await ((_this$options$onError = (_this$options4 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options4, error, this.state.variables, this.state.context)); // Notify cache callback\n\n        await ((_this$mutationCache$c9 = (_this$mutationCache$c10 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c9.call(_this$mutationCache$c10, undefined, error, this.state.variables, this.state.context, this));\n        await ((_this$options$onSettl2 = (_this$options5 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options5, undefined, error, this.state.variables, this.state.context));\n        throw error;\n      } finally {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n    }\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            isPaused: true\n          };\n\n        case 'continue':\n          return { ...state,\n            isPaused: false\n          };\n\n        case 'loading':\n          return { ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !canFetch(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false\n          };\n\n        case 'error':\n          return { ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error'\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onMutationUpdate(action);\n      });\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\nfunction getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\nexport { Mutation, getDefaultState };\n//# sourceMappingURL=mutation.mjs.map\n","import { notifyManager } from './notifyManager.mjs';\nimport { Mutation } from './mutation.mjs';\nimport { matchMutation, noop } from './utils.mjs';\nimport { Subscribable } from './subscribable.mjs';\n\n// CLASS\nclass MutationCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined\n    });\n    this.add(mutation);\n    return mutation;\n  }\n\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n\n  getAll() {\n    return this.mutations;\n  }\n\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(mutation => matchMutation(filters, mutation));\n  }\n\n  findAll(filters) {\n    return this.mutations.filter(mutation => matchMutation(filters, mutation));\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  resumePausedMutations() {\n    var _this$resuming;\n\n    this.resuming = ((_this$resuming = this.resuming) != null ? _this$resuming : Promise.resolve()).then(() => {\n      const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n      return notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(noop)), Promise.resolve()));\n    }).then(() => {\n      this.resuming = undefined;\n    });\n    return this.resuming;\n  }\n\n}\n\nexport { MutationCache };\n//# sourceMappingURL=mutationCache.mjs.map\n","function infiniteQueryBehavior() {\n  return {\n    onFetch: context => {\n      context.fetchFn = () => {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        const refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        const fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        const pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        const isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        const isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        const oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        const oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        let newPageParams = oldPageParams;\n        let cancelled = false;\n\n        const addSignalProperty = object => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              var _context$signal;\n\n              if ((_context$signal = context.signal) != null && _context$signal.aborted) {\n                cancelled = true;\n              } else {\n                var _context$signal2;\n\n                (_context$signal2 = context.signal) == null ? void 0 : _context$signal2.addEventListener('abort', () => {\n                  cancelled = true;\n                });\n              }\n\n              return context.signal;\n            }\n          });\n        }; // Get query function\n\n\n        const queryFn = context.options.queryFn || (() => Promise.reject(\"Missing queryFn for queryKey '\" + context.options.queryHash + \"'\"));\n\n        const buildNewPages = (pages, param, page, previous) => {\n          newPageParams = previous ? [param, ...newPageParams] : [...newPageParams, param];\n          return previous ? [page, ...pages] : [...pages, page];\n        }; // Create function to fetch a page\n\n\n        const fetchPage = (pages, manual, param, previous) => {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const queryFnResult = queryFn(queryFnContext);\n          const promise = Promise.resolve(queryFnResult).then(page => buildNewPages(pages, param, page, previous));\n          return promise;\n        };\n\n        let promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param);\n        } // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param, true);\n        } // Refetch pages\n        else {\n          newPageParams = [];\n          const manual = typeof context.options.getNextPageParam === 'undefined';\n          const shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n          promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n          for (let i = 1; i < oldPages.length; i++) {\n            promise = promise.then(pages => {\n              const shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n              if (shouldFetchNextPage) {\n                const param = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n                return fetchPage(pages, manual, param);\n              }\n\n              return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n            });\n          }\n        }\n\n        const finalPromise = promise.then(pages => ({\n          pages,\n          pageParams: newPageParams\n        }));\n        return finalPromise;\n      };\n    }\n  };\n}\nfunction getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nfunction getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    const nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n\n  return;\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    const previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n\n  return;\n}\n\nexport { getNextPageParam, getPreviousPageParam, hasNextPage, hasPreviousPage, infiniteQueryBehavior };\n//# sourceMappingURL=infiniteQueryBehavior.mjs.map\n","import { parseFilterArgs, parseQueryArgs, functionalUpdate, noop, hashQueryKey, partialMatchKey, hashQueryKeyByOptions } from './utils.mjs';\nimport { QueryCache } from './queryCache.mjs';\nimport { MutationCache } from './mutationCache.mjs';\nimport { focusManager } from './focusManager.mjs';\nimport { onlineManager } from './onlineManager.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior.mjs';\nimport { defaultLogger } from './logger.mjs';\n\n// CLASS\nclass QueryClient {\n  constructor(config = {}) {\n    this.queryCache = config.queryCache || new QueryCache();\n    this.mutationCache = config.mutationCache || new MutationCache();\n    this.logger = config.logger || defaultLogger;\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n    this.mountCount = 0;\n\n    if (process.env.NODE_ENV !== 'production' && config.logger) {\n      this.logger.error(\"Passing a custom logger has been deprecated and will be removed in the next major version.\");\n    }\n  }\n\n  mount() {\n    this.mountCount++;\n    if (this.mountCount !== 1) return;\n    this.unsubscribeFocus = focusManager.subscribe(() => {\n      if (focusManager.isFocused()) {\n        this.resumePausedMutations();\n        this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = onlineManager.subscribe(() => {\n      if (onlineManager.isOnline()) {\n        this.resumePausedMutations();\n        this.queryCache.onOnline();\n      }\n    });\n  }\n\n  unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    this.mountCount--;\n    if (this.mountCount !== 0) return;\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    this.unsubscribeFocus = undefined;\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n    this.unsubscribeOnline = undefined;\n  }\n\n  isFetching(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    filters.fetchStatus = 'fetching';\n    return this.queryCache.findAll(filters).length;\n  }\n\n  isMutating(filters) {\n    return this.mutationCache.findAll({ ...filters,\n      fetching: true\n    }).length;\n  }\n\n  getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  }\n\n  ensureQueryData(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    const cachedData = this.getQueryData(parsedOptions.queryKey);\n    return cachedData ? Promise.resolve(cachedData) : this.fetchQuery(parsedOptions);\n  }\n\n  getQueriesData(queryKeyOrFilters) {\n    return this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey,\n      state\n    }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n\n  setQueryData(queryKey, updater, options) {\n    const query = this.queryCache.find(queryKey);\n    const prevData = query == null ? void 0 : query.state.data;\n    const data = functionalUpdate(updater, prevData);\n\n    if (typeof data === 'undefined') {\n      return undefined;\n    }\n\n    const parsedOptions = parseQueryArgs(queryKey);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(data, { ...options,\n      manual: true\n    });\n  }\n\n  setQueriesData(queryKeyOrFilters, updater, options) {\n    return notifyManager.batch(() => this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey\n    }) => [queryKey, this.setQueryData(queryKey, updater, options)]));\n  }\n\n  getQueryState(queryKey, filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  }\n\n  removeQueries(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    const queryCache = this.queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        queryCache.remove(query);\n      });\n    });\n  }\n\n  resetQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    const queryCache = this.queryCache;\n    const refetchFilters = {\n      type: 'active',\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  cancelQueries(arg1, arg2, arg3) {\n    const [filters, cancelOptions = {}] = parseFilterArgs(arg1, arg2, arg3);\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    const promises = notifyManager.batch(() => this.queryCache.findAll(filters).map(query => query.cancel(cancelOptions)));\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n\n  invalidateQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    return notifyManager.batch(() => {\n      var _ref, _filters$refetchType;\n\n      this.queryCache.findAll(filters).forEach(query => {\n        query.invalidate();\n      });\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve();\n      }\n\n      const refetchFilters = { ...filters,\n        type: (_ref = (_filters$refetchType = filters.refetchType) != null ? _filters$refetchType : filters.type) != null ? _ref : 'active'\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  refetchQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    const promises = notifyManager.batch(() => this.queryCache.findAll(filters).filter(query => !query.isDisabled()).map(query => {\n      var _options$cancelRefetc;\n\n      return query.fetch(undefined, { ...options,\n        cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,\n        meta: {\n          refetchPage: filters.refetchPage\n        }\n      });\n    }));\n    let promise = Promise.all(promises).then(noop);\n\n    if (!(options != null && options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  fetchQuery(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    const query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n\n  prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  }\n\n  fetchInfiniteQuery(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    parsedOptions.behavior = infiniteQueryBehavior();\n    return this.fetchQuery(parsedOptions);\n  }\n\n  prefetchInfiniteQuery(arg1, arg2, arg3) {\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  }\n\n  resumePausedMutations() {\n    return this.mutationCache.resumePausedMutations();\n  }\n\n  getQueryCache() {\n    return this.queryCache;\n  }\n\n  getMutationCache() {\n    return this.mutationCache;\n  }\n\n  getLogger() {\n    return this.logger;\n  }\n\n  getDefaultOptions() {\n    return this.defaultOptions;\n  }\n\n  setDefaultOptions(options) {\n    this.defaultOptions = options;\n  }\n\n  setQueryDefaults(queryKey, options) {\n    const result = this.queryDefaults.find(x => hashQueryKey(queryKey) === hashQueryKey(x.queryKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getQueryDefaults(queryKey) {\n    if (!queryKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.queryDefaults.find(x => partialMatchKey(queryKey, x.queryKey)); // Additional checks and error in dev mode\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.queryDefaults.filter(x => partialMatchKey(queryKey, x.queryKey)); // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\"[QueryClient] Several query defaults match with key '\" + JSON.stringify(queryKey) + \"'. The first matching query defaults are used. Please check how query defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetquerydefaults.\");\n      }\n    }\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  setMutationDefaults(mutationKey, options) {\n    const result = this.mutationDefaults.find(x => hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getMutationDefaults(mutationKey) {\n    if (!mutationKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.mutationDefaults.find(x => partialMatchKey(mutationKey, x.mutationKey)); // Additional checks and error in dev mode\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.mutationDefaults.filter(x => partialMatchKey(mutationKey, x.mutationKey)); // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\"[QueryClient] Several mutation defaults match with key '\" + JSON.stringify(mutationKey) + \"'. The first matching mutation defaults are used. Please check how mutation defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetmutationdefaults.\");\n      }\n    }\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  defaultQueryOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    const defaultedOptions = { ...this.defaultOptions.queries,\n      ...this.getQueryDefaults(options == null ? void 0 : options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(defaultedOptions.queryKey, defaultedOptions);\n    } // dependent default values\n\n\n    if (typeof defaultedOptions.refetchOnReconnect === 'undefined') {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== 'always';\n    }\n\n    if (typeof defaultedOptions.useErrorBoundary === 'undefined') {\n      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense;\n    }\n\n    return defaultedOptions;\n  }\n\n  defaultMutationOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    return { ...this.defaultOptions.mutations,\n      ...this.getMutationDefaults(options == null ? void 0 : options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n\n  clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  }\n\n}\n\nexport { QueryClient };\n//# sourceMappingURL=queryClient.mjs.map\n","import { shallowEqualObjects, noop, isServer, isValidTimeout, timeUntilStale, replaceData } from './utils.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { focusManager } from './focusManager.mjs';\nimport { Subscribable } from './subscribable.mjs';\nimport { canFetch, isCancelledError } from './retryer.mjs';\n\nclass QueryObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.options = options;\n    this.trackedProps = new Set();\n    this.selectError = null;\n    this.bindMethods();\n    this.setOptions(options);\n  }\n\n  bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  }\n\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  }\n\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  }\n\n  destroy() {\n    this.listeners = new Set();\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n    this.currentQuery.removeObserver(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryOptions(options);\n\n    if (process.env.NODE_ENV !== 'production' && typeof (options == null ? void 0 : options.isDataEqual) !== 'undefined') {\n      this.client.getLogger().error(\"The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option\");\n    }\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this\n      });\n    }\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    const mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n\n  getOptimisticResult(options) {\n    const query = this.client.getQueryCache().build(this.client, options);\n    const result = this.createResult(query, options);\n\n    if (shouldAssignObserverCurrentProperties(this, result, options)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult everytime\n      // an observer reads an optimistic value.\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.currentResult = result;\n      this.currentResultOptions = this.options;\n      this.currentResultState = this.currentQuery.state;\n    }\n\n    return result;\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  trackResult(result) {\n    const trackedResult = {};\n    Object.keys(result).forEach(key => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n\n  getCurrentQuery() {\n    return this.currentQuery;\n  }\n\n  remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  }\n\n  refetch({\n    refetchPage,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        refetchPage\n      }\n    });\n  }\n\n  fetchOptimistic(options) {\n    const defaultedOptions = this.client.defaultQueryOptions(options);\n    const query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    query.isFetchingOptimistic = true;\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n\n  fetch(fetchOptions) {\n    var _fetchOptions$cancelR;\n\n    return this.executeFetch({ ...fetchOptions,\n      cancelRefetch: (_fetchOptions$cancelR = fetchOptions.cancelRefetch) != null ? _fetchOptions$cancelR : true\n    }).then(() => {\n      this.updateResult();\n      return this.currentResult;\n    });\n  }\n\n  executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    let promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions != null && fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  updateStaleTimeout() {\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    const time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    const timeout = time + 1;\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n\n  computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  }\n\n  updateRefetchInterval(nextInterval) {\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  }\n\n  updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  }\n\n  clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  }\n\n  clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  }\n\n  createResult(query, options) {\n    const prevQuery = this.currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.currentResult;\n    const prevResultState = this.currentResultState;\n    const prevResultOptions = this.currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    const prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    const {\n      state\n    } = query;\n    let {\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      fetchStatus,\n      status\n    } = state;\n    let isPreviousData = false;\n    let isPlaceholderData = false;\n    let data; // Optimistically set result in fetching state if needed\n\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = canFetch(query.options.networkMode) ? 'fetching' : 'paused';\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle';\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdatedAt && prevQueryResult != null && prevQueryResult.isSuccess && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n        data = this.selectResult;\n      } else {\n        try {\n          this.selectFn = options.select;\n          data = options.select(state.data);\n          data = replaceData(prevResult == null ? void 0 : prevResult.data, data, options);\n          this.selectResult = data;\n          this.selectError = null;\n        } catch (selectError) {\n          if (process.env.NODE_ENV !== 'production') {\n            this.client.getLogger().error(selectError);\n          }\n\n          this.selectError = selectError;\n        }\n      }\n    } // Use query data\n    else {\n      data = state.data;\n    } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      let placeholderData; // Memoize placeholder data\n\n      if (prevResult != null && prevResult.isPlaceholderData && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.selectError = null;\n          } catch (selectError) {\n            if (process.env.NODE_ENV !== 'production') {\n              this.client.getLogger().error(selectError);\n            }\n\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = replaceData(prevResult == null ? void 0 : prevResult.data, placeholderData, options);\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    const isFetching = fetchStatus === 'fetching';\n    const isLoading = status === 'loading';\n    const isError = status === 'error';\n    const result = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  }\n\n  updateResult(notifyOptions) {\n    const prevResult = this.currentResult;\n    const nextResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify and update result if something has changed\n\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n\n    this.currentResult = nextResult; // Determine which callbacks to trigger\n\n    const defaultNotifyOptions = {\n      cache: true\n    };\n\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n\n      const {\n        notifyOnChangeProps\n      } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === 'function' ? notifyOnChangeProps() : notifyOnChangeProps;\n\n      if (notifyOnChangePropsValue === 'all' || !notifyOnChangePropsValue && !this.trackedProps.size) {\n        return true;\n      }\n\n      const includedProps = new Set(notifyOnChangePropsValue != null ? notifyOnChangePropsValue : this.trackedProps);\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error');\n      }\n\n      return Object.keys(this.currentResult).some(key => {\n        const typedKey = key;\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify({ ...defaultNotifyOptions,\n      ...notifyOptions\n    });\n  }\n\n  updateQuery() {\n    const query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    const prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n\n  onQueryUpdate(action) {\n    const notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  }\n\n  notify(notifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        var _this$options$onSucce, _this$options, _this$options$onSettl, _this$options2;\n\n        (_this$options$onSucce = (_this$options = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options, this.currentResult.data);\n        (_this$options$onSettl = (_this$options2 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options2, this.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        var _this$options$onError, _this$options3, _this$options$onSettl2, _this$options4;\n\n        (_this$options$onError = (_this$options3 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options3, this.currentResult.error);\n        (_this$options$onSettl2 = (_this$options4 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options4, undefined, this.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  }\n\n}\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n} // this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\n\n\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult, options) {\n  // it is important to keep this condition like this for three reasons:\n  // 1. It will get removed in the v5\n  // 2. it reads: don't update the properties if we want to keep the previous\n  // data.\n  // 3. The opposite condition (!options.keepPreviousData) would fallthrough\n  // and will result in a bad decision\n  if (options.keepPreviousData) {\n    return false;\n  } // this means we want to put some placeholder data when pending and queryKey\n  // changed.\n\n\n  if (options.placeholderData !== undefined) {\n    // re-assign properties only if current data is placeholder data\n    // which means that data did not arrive yet, so, if there is some cached data\n    // we need to \"prepare\" to receive it\n    return optimisticResult.isPlaceholderData;\n  } // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n\n\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  } // basically, just keep previous properties if nothing changed\n\n\n  return false;\n}\n\nexport { QueryObserver };\n//# sourceMappingURL=queryObserver.mjs.map\n","import { getDefaultState } from './mutation.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { Subscribable } from './subscribable.mjs';\nimport { shallowEqualObjects } from './utils.mjs';\n\n// CLASS\nclass MutationObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.updateResult();\n  }\n\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  setOptions(options) {\n    var _this$currentMutation;\n\n    const prevOptions = this.options;\n    this.options = this.client.defaultMutationOptions(options);\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this\n      });\n    }\n\n    (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.setOptions(this.options);\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$currentMutation2;\n\n      (_this$currentMutation2 = this.currentMutation) == null ? void 0 : _this$currentMutation2.removeObserver(this);\n    }\n  }\n\n  onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    const notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  }\n\n  mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, { ...this.options,\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    });\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  }\n\n  updateResult() {\n    const state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    const result = { ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    };\n    this.currentResult = result;\n  }\n\n  notify(options) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          var _this$mutateOptions$o, _this$mutateOptions, _this$mutateOptions$o2, _this$mutateOptions2;\n\n          (_this$mutateOptions$o = (_this$mutateOptions = this.mutateOptions).onSuccess) == null ? void 0 : _this$mutateOptions$o.call(_this$mutateOptions, this.currentResult.data, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o2 = (_this$mutateOptions2 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o2.call(_this$mutateOptions2, this.currentResult.data, null, this.currentResult.variables, this.currentResult.context);\n        } else if (options.onError) {\n          var _this$mutateOptions$o3, _this$mutateOptions3, _this$mutateOptions$o4, _this$mutateOptions4;\n\n          (_this$mutateOptions$o3 = (_this$mutateOptions3 = this.mutateOptions).onError) == null ? void 0 : _this$mutateOptions$o3.call(_this$mutateOptions3, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o4 = (_this$mutateOptions4 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o4.call(_this$mutateOptions4, undefined, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      }\n    });\n  }\n\n}\n\nexport { MutationObserver };\n//# sourceMappingURL=mutationObserver.mjs.map\n","// TYPES\n// FUNCTIONS\nfunction dehydrateMutation(mutation) {\n  return {\n    mutationKey: mutation.options.mutationKey,\n    state: mutation.state\n  };\n} // Most config is not dehydrated but instead meant to configure again when\n// consuming the de/rehydrated data, typically with useQuery on the client.\n// Sometimes it might make sense to prefetch data on the server and include\n// in the html-payload, but not consume it on the initial render.\n\n\nfunction dehydrateQuery(query) {\n  return {\n    state: query.state,\n    queryKey: query.queryKey,\n    queryHash: query.queryHash\n  };\n}\n\nfunction defaultShouldDehydrateMutation(mutation) {\n  return mutation.state.isPaused;\n}\nfunction defaultShouldDehydrateQuery(query) {\n  return query.state.status === 'success';\n}\nfunction dehydrate(client, options = {}) {\n  const mutations = [];\n  const queries = [];\n\n  if (options.dehydrateMutations !== false) {\n    const shouldDehydrateMutation = options.shouldDehydrateMutation || defaultShouldDehydrateMutation;\n    client.getMutationCache().getAll().forEach(mutation => {\n      if (shouldDehydrateMutation(mutation)) {\n        mutations.push(dehydrateMutation(mutation));\n      }\n    });\n  }\n\n  if (options.dehydrateQueries !== false) {\n    const shouldDehydrateQuery = options.shouldDehydrateQuery || defaultShouldDehydrateQuery;\n    client.getQueryCache().getAll().forEach(query => {\n      if (shouldDehydrateQuery(query)) {\n        queries.push(dehydrateQuery(query));\n      }\n    });\n  }\n\n  return {\n    mutations,\n    queries\n  };\n}\nfunction hydrate(client, dehydratedState, options) {\n  if (typeof dehydratedState !== 'object' || dehydratedState === null) {\n    return;\n  }\n\n  const mutationCache = client.getMutationCache();\n  const queryCache = client.getQueryCache(); // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n  const mutations = dehydratedState.mutations || []; // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n  const queries = dehydratedState.queries || [];\n  mutations.forEach(dehydratedMutation => {\n    var _options$defaultOptio;\n\n    mutationCache.build(client, { ...(options == null ? void 0 : (_options$defaultOptio = options.defaultOptions) == null ? void 0 : _options$defaultOptio.mutations),\n      mutationKey: dehydratedMutation.mutationKey\n    }, dehydratedMutation.state);\n  });\n  queries.forEach(({\n    queryKey,\n    state,\n    queryHash\n  }) => {\n    var _options$defaultOptio2;\n\n    const query = queryCache.get(queryHash); // Do not hydrate if an existing query exists with newer data\n\n    if (query) {\n      if (query.state.dataUpdatedAt < state.dataUpdatedAt) {\n        // omit fetchStatus from dehydrated state\n        // so that query stays in its current fetchStatus\n        const {\n          fetchStatus: _ignored,\n          ...dehydratedQueryState\n        } = state;\n        query.setState(dehydratedQueryState);\n      }\n\n      return;\n    } // Restore query\n\n\n    queryCache.build(client, { ...(options == null ? void 0 : (_options$defaultOptio2 = options.defaultOptions) == null ? void 0 : _options$defaultOptio2.queries),\n      queryKey,\n      queryHash\n    }, // Reset fetch status to idle to avoid\n    // query being stuck in fetching state upon hydration\n    { ...state,\n      fetchStatus: 'idle'\n    });\n  });\n}\n\nexport { defaultShouldDehydrateMutation, defaultShouldDehydrateQuery, dehydrate, hydrate };\n//# sourceMappingURL=hydration.mjs.map\n","'use client';\nimport { useSyncExternalStore as useSyncExternalStore$1 } from 'use-sync-external-store/shim/index.js';\n\nconst useSyncExternalStore = useSyncExternalStore$1;\n\nexport { useSyncExternalStore };\n//# sourceMappingURL=useSyncExternalStore.mjs.map\n","'use client';\nimport * as React from 'react';\n\nconst defaultContext = /*#__PURE__*/React.createContext(undefined);\nconst QueryClientSharingContext = /*#__PURE__*/React.createContext(false); // If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(context, contextSharing) {\n  if (context) {\n    return context;\n  }\n\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nconst useQueryClient = ({\n  context\n} = {}) => {\n  const queryClient = React.useContext(getQueryClientContext(context, React.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nconst QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n\n  if (process.env.NODE_ENV !== 'production' && contextSharing) {\n    client.getLogger().error(\"The contextSharing option has been deprecated and will be removed in the next major version\");\n  }\n\n  const Context = getQueryClientContext(context, contextSharing);\n  return /*#__PURE__*/React.createElement(QueryClientSharingContext.Provider, {\n    value: !context && contextSharing\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, children));\n};\n\nexport { QueryClientProvider, defaultContext, useQueryClient };\n//# sourceMappingURL=QueryClientProvider.mjs.map\n","'use client';\nimport * as React from 'react';\n\nconst IsRestoringContext = /*#__PURE__*/React.createContext(false);\nconst useIsRestoring = () => React.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\nexport { IsRestoringProvider, useIsRestoring };\n//# sourceMappingURL=isRestoring.mjs.map\n","'use client';\nimport * as React from 'react';\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nconst QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary };\n//# sourceMappingURL=QueryErrorResetBoundary.mjs.map\n","function shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\nexport { shouldThrowError };\n//# sourceMappingURL=utils.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { parseMutationArgs, MutationObserver, notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { shouldThrowError } from './utils.mjs';\n\nfunction useMutation(arg1, arg2, arg3) {\n  const options = parseMutationArgs(arg1, arg2, arg3);\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const [observer] = React.useState(() => new MutationObserver(queryClient, options));\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = useSyncExternalStore(React.useCallback(onStoreChange => observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  const mutate = React.useCallback((variables, mutateOptions) => {\n    observer.mutate(variables, mutateOptions).catch(noop);\n  }, [observer]);\n\n  if (result.error && shouldThrowError(observer.options.useErrorBoundary, [result.error])) {\n    throw result.error;\n  }\n\n  return { ...result,\n    mutate,\n    mutateAsync: result.mutate\n  };\n} // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nfunction noop() {}\n\nexport { useMutation };\n//# sourceMappingURL=useMutation.mjs.map\n","import { hydrate, dehydrate } from '@tanstack/query-core';\n\n/**\n * Checks if emitted event is about cache change and not about observers.\n * Useful for persist, where we only want to trigger save when cache is changed.\n */\nconst cacheableEventTypes = ['added', 'removed', 'updated'];\n\nfunction isCacheableEventType(eventType) {\n  return cacheableEventTypes.includes(eventType);\n}\n/**\n * Restores persisted data to the QueryCache\n *  - data obtained from persister.restoreClient\n *  - data is hydrated using hydrateOptions\n * If data is expired, busted, empty, or throws, it runs persister.removeClient\n */\n\n\nasync function persistQueryClientRestore({\n  queryClient,\n  persister,\n  maxAge = 1000 * 60 * 60 * 24,\n  buster = '',\n  hydrateOptions\n}) {\n  try {\n    const persistedClient = await persister.restoreClient();\n\n    if (persistedClient) {\n      if (persistedClient.timestamp) {\n        const expired = Date.now() - persistedClient.timestamp > maxAge;\n        const busted = persistedClient.buster !== buster;\n\n        if (expired || busted) {\n          persister.removeClient();\n        } else {\n          hydrate(queryClient, persistedClient.clientState, hydrateOptions);\n        }\n      } else {\n        persister.removeClient();\n      }\n    }\n  } catch (err) {\n    if (process.env.NODE_ENV !== 'production') {\n      queryClient.getLogger().error(err);\n      queryClient.getLogger().warn('Encountered an error attempting to restore client cache from persisted location. As a precaution, the persisted cache will be discarded.');\n    }\n\n    persister.removeClient();\n  }\n}\n/**\n * Persists data from the QueryCache\n *  - data dehydrated using dehydrateOptions\n *  - data is persisted using persister.persistClient\n */\n\nasync function persistQueryClientSave({\n  queryClient,\n  persister,\n  buster = '',\n  dehydrateOptions\n}) {\n  const persistClient = {\n    buster,\n    timestamp: Date.now(),\n    clientState: dehydrate(queryClient, dehydrateOptions)\n  };\n  await persister.persistClient(persistClient);\n}\n/**\n * Subscribe to QueryCache and MutationCache updates (for persisting)\n * @returns an unsubscribe function (to discontinue monitoring)\n */\n\nfunction persistQueryClientSubscribe(props) {\n  const unsubscribeQueryCache = props.queryClient.getQueryCache().subscribe(event => {\n    if (isCacheableEventType(event.type)) {\n      persistQueryClientSave(props);\n    }\n  });\n  const unusbscribeMutationCache = props.queryClient.getMutationCache().subscribe(event => {\n    if (isCacheableEventType(event.type)) {\n      persistQueryClientSave(props);\n    }\n  });\n  return () => {\n    unsubscribeQueryCache();\n    unusbscribeMutationCache();\n  };\n}\n/**\n * Restores persisted data to QueryCache and persists further changes.\n */\n\nfunction persistQueryClient(props) {\n  let hasUnsubscribed = false;\n  let persistQueryClientUnsubscribe;\n\n  const unsubscribe = () => {\n    hasUnsubscribed = true;\n    persistQueryClientUnsubscribe == null ? void 0 : persistQueryClientUnsubscribe();\n  }; // Attempt restore\n\n\n  const restorePromise = persistQueryClientRestore(props).then(() => {\n    if (!hasUnsubscribed) {\n      // Subscribe to changes in the query cache to trigger the save\n      persistQueryClientUnsubscribe = persistQueryClientSubscribe(props);\n    }\n  });\n  return [unsubscribe, restorePromise];\n}\n\nexport { persistQueryClient, persistQueryClientRestore, persistQueryClientSave, persistQueryClientSubscribe };\n//# sourceMappingURL=persist.mjs.map\n"],"names":["createSyncStoragePersister","storage","key","throttleTime","serialize","deserialize","retry","trySave","persistedClient","error","throttle","client","errorCount","cacheString","noop","func","wait","timer","params","args","Subscribable","listener","identity","isServer","functionalUpdate","updater","input","isValidTimeout","value","timeUntilStale","updatedAt","staleTime","parseQueryArgs","arg1","arg2","arg3","isQueryKey","parseMutationArgs","parseFilterArgs","matchQuery","filters","query","type","exact","fetchStatus","predicate","queryKey","stale","hashQueryKeyByOptions","partialMatchKey","isActive","matchMutation","mutation","fetching","mutationKey","hashQueryKey","options","_","val","isPlainObject","result","a","b","partialDeepEqual","replaceEqualDeep","array","isPlainArray","aSize","bItems","bSize","copy","equalItems","i","shallowEqualObjects","o","hasObjectPrototype","ctor","prot","sleep","timeout","resolve","scheduleMicrotask","callback","getAbortController","replaceData","prevData","data","FocusManager","onFocus","_this$cleanup","setup","_this$cleanup2","focused","focusManager","onlineEvents","OnlineManager","onOnline","event","online","onlineManager","defaultRetryDelay","failureCount","canFetch","networkMode","CancelledError","isCancelledError","createRetryer","config","isRetryCancelled","isResolved","continueFn","promiseResolve","promiseReject","promise","outerResolve","outerReject","cancel","cancelOptions","reject","cancelRetry","continueRetry","shouldPause","pause","continueResolve","canContinue","run","promiseOrValue","_config$retry","_config$retryDelay","retryDelay","delay","shouldRetry","defaultLogger","createNotifyManager","queue","transactions","notifyFn","batchNotifyFn","batch","flush","schedule","batchCalls","originalQueue","fn","notifyManager","Removable","newCacheTime","Query","getDefaultState","newData","state","setStateOptions","_this$retryer","observer","_this$retryer2","x","_this$retryer3","fetchOptions","_this$options$behavio","_context$fetchOptions","_this$retryer4","abortController","queryFnContext","addSignalProperty","object","fetchFn","context","_context$fetchOptions2","onError","_this$cache$config$on","_this$cache$config","_this$cache$config$on2","_this$cache$config2","_this$cache$config$on3","_this$cache$config3","_this$cache$config$on4","_this$cache$config4","action","reducer","_action$meta","_action$dataUpdatedAt","hasData","initialDataUpdatedAt","QueryCache","_options$queryHash","queryHash","queryInMap","Mutation","_this$retryer$continu","executeMutation","_this$options$retry","restored","_this$mutationCache$c3","_this$mutationCache$c4","_this$options$onSucce","_this$options2","_this$mutationCache$c5","_this$mutationCache$c6","_this$options$onSettl","_this$options3","_this$mutationCache$c","_this$mutationCache$c2","_this$options$onMutat","_this$options","_this$mutationCache$c7","_this$mutationCache$c8","_this$options$onError","_this$options4","_this$mutationCache$c9","_this$mutationCache$c10","_this$options$onSettl2","_this$options5","MutationCache","_this$resuming","pausedMutations","infiniteQueryBehavior","_context$fetchOptions3","_context$fetchOptions4","_context$state$data","_context$state$data2","refetchPage","fetchMore","pageParam","isFetchingNextPage","isFetchingPreviousPage","oldPages","oldPageParams","newPageParams","cancelled","_context$signal","_context$signal2","queryFn","buildNewPages","pages","param","page","previous","fetchPage","manual","queryFnResult","getNextPageParam","getPreviousPageParam","QueryClient","_this$unsubscribeFocu","_this$unsubscribeOnli","_this$queryCache$find","parsedOptions","cachedData","queryKeyOrFilters","defaultedOptions","_this$queryCache$find2","queryCache","refetchFilters","promises","_ref","_filters$refetchType","_options$cancelRefetc","firstMatchingDefaults","QueryObserver","shouldFetchOnMount","shouldFetchOn","notifyOptions","prevOptions","prevQuery","mounted","shouldFetchOptionally","nextRefetchInterval","shouldAssignObserverCurrentProperties","trackedResult","_fetchOptions$cancelR","_this$options$refetch","nextInterval","prevResult","prevResultState","prevResultOptions","queryChange","queryInitialState","prevQueryResult","dataUpdatedAt","errorUpdatedAt","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","selectError","placeholderData","isFetching","isLoading","isError","isStale","nextResult","defaultNotifyOptions","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","shouldLoadOnMount","field","optimisticResult","MutationObserver","_this$currentMutation","_this$currentMutation2","variables","_this$mutateOptions$o","_this$mutateOptions","_this$mutateOptions$o2","_this$mutateOptions2","_this$mutateOptions$o3","_this$mutateOptions3","_this$mutateOptions$o4","_this$mutateOptions4","dehydrateMutation","dehydrateQuery","defaultShouldDehydrateMutation","defaultShouldDehydrateQuery","dehydrate","mutations","queries","shouldDehydrateMutation","shouldDehydrateQuery","hydrate","dehydratedState","mutationCache","dehydratedMutation","_options$defaultOptio","_options$defaultOptio2","_ignored","dehydratedQueryState","useSyncExternalStore","useSyncExternalStore$1","defaultContext","React.createContext","QueryClientSharingContext","getQueryClientContext","contextSharing","useQueryClient","queryClient","React.useContext","QueryClientProvider","children","React.useEffect","Context","React.createElement","IsRestoringContext","useIsRestoring","createValue","isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","shouldThrowError","_useErrorBoundary","useMutation","React.useState","React.useCallback","onStoreChange","mutate","mutateOptions","cacheableEventTypes","isCacheableEventType","eventType","persistQueryClientRestore","persister","maxAge","buster","hydrateOptions","expired","busted","persistQueryClientSave","dehydrateOptions","persistClient","persistQueryClientSubscribe","props","unsubscribeQueryCache","unusbscribeMutationCache","persistQueryClient","hasUnsubscribed","persistQueryClientUnsubscribe","unsubscribe","restorePromise"],"mappings":"uFAAA,SAASA,GAA2B,CAClC,QAAAC,EACA,IAAAC,EAAM,4BACN,aAAAC,EAAe,IACf,UAAAC,EAAY,KAAK,UACjB,YAAAC,EAAc,KAAK,MACnB,MAAAC,CACF,EAAG,CACD,GAAIL,EAAS,CACX,MAAMM,EAAUC,GAAmB,CACjC,GAAI,CACFP,EAAQ,QAAQC,EAAKE,EAAUI,CAAe,CAAC,EAC/C,MACD,OAAQC,EAAO,CACd,OAAOA,CACf,CACK,EAED,MAAO,CACL,cAAeC,GAASF,GAAmB,CACzC,IAAIG,EAASH,EACTC,EAAQF,EAAQI,CAAM,EACtBC,EAAa,EAEjB,KAAOH,GAASE,GACdC,IACAD,EAAkCL,IAAM,CACtC,gBAAiBK,EACjB,MAAAF,EACA,WAAAG,CACZ,CAAW,EAEGD,IACFF,EAAQF,EAAQI,CAAM,EAG3B,EAAER,CAAY,EACf,cAAe,IAAM,CACnB,MAAMU,EAAcZ,EAAQ,QAAQC,CAAG,EAEvC,GAAKW,EAIL,OAAOR,EAAYQ,CAAW,CAC/B,EACD,aAAc,IAAM,CAClBZ,EAAQ,WAAWC,CAAG,CAC9B,CACK,CACL,CAEE,MAAO,CACL,cAAeY,EACf,cAAe,IAAA,GACf,aAAcA,CACf,CACH,CAEA,SAASJ,GAASK,EAAMC,EAAO,IAAK,CAClC,IAAIC,EAAQ,KACRC,EACJ,OAAO,YAAaC,EAAM,CACxBD,EAASC,EAELF,IAAU,OACZA,EAAQ,WAAW,IAAM,CACvBF,EAAK,GAAGG,CAAM,EACdD,EAAQ,IACT,EAAED,CAAI,EAEV,CACH,CAGA,SAASF,GAAO,CAAA,CC3EhB,MAAMM,CAAa,CACjB,aAAc,CACZ,KAAK,UAAY,IAAI,IACrB,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,CAC7C,CAEE,UAAUC,EAAU,CAClB,MAAMC,EAAW,CACf,SAAAD,CACD,EACD,YAAK,UAAU,IAAIC,CAAQ,EAC3B,KAAK,YAAa,EACX,IAAM,CACX,KAAK,UAAU,OAAOA,CAAQ,EAC9B,KAAK,cAAe,CACrB,CACL,CAEE,cAAe,CACb,OAAO,KAAK,UAAU,KAAO,CACjC,CAEE,aAAc,CAChB,CAEE,eAAgB,CAClB,CAEA,CC1BA,MAAMC,EAAW,OAAO,OAAW,KAAe,SAAU,OAC5D,SAAST,GAAO,CAEhB,CACA,SAASU,GAAiBC,EAASC,EAAO,CACxC,OAAO,OAAOD,GAAY,WAAaA,EAAQC,CAAK,EAAID,CAC1D,CACA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,GAAU,UAAYA,GAAS,GAAKA,IAAU,GAC9D,CASA,SAASC,GAAeC,EAAWC,EAAW,CAC5C,OAAO,KAAK,IAAID,GAAaC,GAAa,GAAK,KAAK,IAAK,EAAE,CAAC,CAC9D,CACA,SAASC,EAAeC,EAAMC,EAAMC,EAAM,CACxC,OAAKC,EAAWH,CAAI,EAIhB,OAAOC,GAAS,WACX,CAAE,GAAGC,EACV,SAAUF,EACV,QAASC,CACV,EAGI,CAAE,GAAGA,EACV,SAAUD,CACX,EAZQA,CAaX,CACA,SAASI,GAAkBJ,EAAMC,EAAMC,EAAM,CAC3C,OAAIC,EAAWH,CAAI,EACb,OAAOC,GAAS,WACX,CAAE,GAAGC,EACV,YAAaF,EACb,WAAYC,CACb,EAGI,CAAE,GAAGA,EACV,YAAaD,CACd,EAGC,OAAOA,GAAS,WACX,CAAE,GAAGC,EACV,WAAYD,CACb,EAGI,CAAE,GAAGA,CACX,CACH,CACA,SAASK,EAAgBL,EAAMC,EAAMC,EAAM,CACzC,OAAOC,EAAWH,CAAI,EAAI,CAAC,CAAE,GAAGC,EAC9B,SAAUD,CACX,EAAEE,CAAI,EAAI,CAACF,GAAQ,CAAA,EAAIC,CAAI,CAC9B,CAMA,SAASK,EAAWC,EAASC,EAAO,CAClC,KAAM,CACJ,KAAAC,EAAO,MACP,MAAAC,EACA,YAAAC,EACA,UAAAC,EACA,SAAAC,EACA,MAAAC,CACJ,EAAMP,EAEJ,GAAIJ,EAAWU,CAAQ,GACrB,GAAIH,GACF,GAAIF,EAAM,YAAcO,EAAsBF,EAAUL,EAAM,OAAO,EACnE,MAAO,WAEA,CAACQ,EAAgBR,EAAM,SAAUK,CAAQ,EAClD,MAAO,GAIX,GAAIJ,IAAS,MAAO,CAClB,MAAMQ,EAAWT,EAAM,SAAU,EAMjC,GAJIC,IAAS,UAAY,CAACQ,GAItBR,IAAS,YAAcQ,EACzB,MAAO,EAEb,CAUE,MARI,SAAOH,GAAU,WAAaN,EAAM,QAAO,IAAOM,GAIlD,OAAOH,EAAgB,KAAeA,IAAgBH,EAAM,MAAM,aAIlEI,GAAa,CAACA,EAAUJ,CAAK,EAKnC,CACA,SAASU,EAAcX,EAASY,EAAU,CACxC,KAAM,CACJ,MAAAT,EACA,SAAAU,EACA,UAAAR,EACA,YAAAS,CACJ,EAAMd,EAEJ,GAAIJ,EAAWkB,CAAW,EAAG,CAC3B,GAAI,CAACF,EAAS,QAAQ,YACpB,MAAO,GAGT,GAAIT,GACF,GAAIY,EAAaH,EAAS,QAAQ,WAAW,IAAMG,EAAaD,CAAW,EACzE,MAAO,WAEA,CAACL,EAAgBG,EAAS,QAAQ,YAAaE,CAAW,EACnE,MAAO,EAEb,CAME,MAJI,SAAOD,GAAa,WAAaD,EAAS,MAAM,SAAW,YAAcC,GAIzER,GAAa,CAACA,EAAUO,CAAQ,EAKtC,CACA,SAASJ,EAAsBF,EAAUU,EAAS,CAEhD,OAD2CA,GAAQ,gBAAmBD,GACxDT,CAAQ,CACxB,CAMA,SAASS,EAAaT,EAAU,CAC9B,OAAO,KAAK,UAAUA,EAAU,CAACW,EAAGC,IAAQC,EAAcD,CAAG,EAAI,OAAO,KAAKA,CAAG,EAAE,KAAM,EAAC,OAAO,CAACE,EAAQ1D,KACvG0D,EAAO1D,CAAG,EAAIwD,EAAIxD,CAAG,EACd0D,GACN,CAAA,CAAE,EAAIF,CAAG,CACd,CAKA,SAAST,EAAgBY,EAAGC,EAAG,CAC7B,OAAOC,GAAiBF,EAAGC,CAAC,CAC9B,CAKA,SAASC,GAAiBF,EAAGC,EAAG,CAC9B,OAAID,IAAMC,EACD,GAGL,OAAOD,GAAM,OAAOC,EACf,GAGLD,GAAKC,GAAK,OAAOD,GAAM,UAAY,OAAOC,GAAM,SAC3C,CAAC,OAAO,KAAKA,CAAC,EAAE,KAAK5D,GAAO,CAAC6D,GAAiBF,EAAE3D,CAAG,EAAG4D,EAAE5D,CAAG,CAAC,CAAC,EAG/D,EACT,CAOA,SAAS8D,GAAiBH,EAAGC,EAAG,CAC9B,GAAID,IAAMC,EACR,OAAOD,EAGT,MAAMI,EAAQC,EAAaL,CAAC,GAAKK,EAAaJ,CAAC,EAE/C,GAAIG,GAASN,EAAcE,CAAC,GAAKF,EAAcG,CAAC,EAAG,CACjD,MAAMK,EAAQF,EAAQJ,EAAE,OAAS,OAAO,KAAKA,CAAC,EAAE,OAC1CO,EAASH,EAAQH,EAAI,OAAO,KAAKA,CAAC,EAClCO,EAAQD,EAAO,OACfE,EAAOL,EAAQ,CAAA,EAAK,CAAE,EAC5B,IAAIM,EAAa,EAEjB,QAASC,EAAI,EAAGA,EAAIH,EAAOG,IAAK,CAC9B,MAAMtE,EAAM+D,EAAQO,EAAIJ,EAAOI,CAAC,EAChCF,EAAKpE,CAAG,EAAI8D,GAAiBH,EAAE3D,CAAG,EAAG4D,EAAE5D,CAAG,CAAC,EAEvCoE,EAAKpE,CAAG,IAAM2D,EAAE3D,CAAG,GACrBqE,GAER,CAEI,OAAOJ,IAAUE,GAASE,IAAeJ,EAAQN,EAAIS,CACzD,CAEE,OAAOR,CACT,CAKA,SAASW,EAAoBZ,EAAGC,EAAG,CACjC,GAAID,GAAK,CAACC,GAAKA,GAAK,CAACD,EACnB,MAAO,GAGT,UAAW3D,KAAO2D,EAChB,GAAIA,EAAE3D,CAAG,IAAM4D,EAAE5D,CAAG,EAClB,MAAO,GAIX,MAAO,EACT,CACA,SAASgE,EAAatC,EAAO,CAC3B,OAAO,MAAM,QAAQA,CAAK,GAAKA,EAAM,SAAW,OAAO,KAAKA,CAAK,EAAE,MACrE,CAEA,SAAS+B,EAAce,EAAG,CACxB,GAAI,CAACC,GAAmBD,CAAC,EACvB,MAAO,GAIT,MAAME,EAAOF,EAAE,YAEf,GAAI,OAAOE,EAAS,IAClB,MAAO,GAIT,MAAMC,EAAOD,EAAK,UAOlB,MALI,GAACD,GAAmBE,CAAI,GAKxB,CAACA,EAAK,eAAe,eAAe,EAM1C,CAEA,SAASF,GAAmBD,EAAG,CAC7B,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAC,IAAM,iBAC/C,CAEA,SAAStC,EAAWR,EAAO,CACzB,OAAO,MAAM,QAAQA,CAAK,CAC5B,CAIA,SAASkD,GAAMC,EAAS,CACtB,OAAO,IAAI,QAAQC,GAAW,CAC5B,WAAWA,EAASD,CAAO,CAC/B,CAAG,CACH,CAMA,SAASE,GAAkBC,EAAU,CACnCJ,GAAM,CAAC,EAAE,KAAKI,CAAQ,CACxB,CACA,SAASC,IAAqB,CAC5B,GAAI,OAAO,iBAAoB,WAC7B,OAAO,IAAI,eAIf,CACA,SAASC,EAAYC,EAAUC,EAAM9B,EAAS,CAE5C,OAAIA,EAAQ,aAAe,MAAQA,EAAQ,YAAY6B,EAAUC,CAAI,EAC5DD,EACE,OAAO7B,EAAQ,mBAAsB,WACvCA,EAAQ,kBAAkB6B,EAAUC,CAAI,EACtC9B,EAAQ,oBAAsB,GAEhCQ,GAAiBqB,EAAUC,CAAI,EAGjCA,CACT,CCzTA,MAAMC,WAAqBnE,CAAa,CACtC,aAAc,CACZ,MAAO,EAEP,KAAK,MAAQoE,GAAW,CAGtB,GAAI,CAACjE,GAAY,OAAO,iBAAkB,CACxC,MAAMF,EAAW,IAAMmE,IAGvB,cAAO,iBAAiB,mBAAoBnE,EAAU,EAAK,EAC3D,OAAO,iBAAiB,QAASA,EAAU,EAAK,EACzC,IAAM,CAEX,OAAO,oBAAoB,mBAAoBA,CAAQ,EACvD,OAAO,oBAAoB,QAASA,CAAQ,CAC7C,CACT,CAGK,CACL,CAEE,aAAc,CACP,KAAK,SACR,KAAK,iBAAiB,KAAK,KAAK,CAEtC,CAEE,eAAgB,CACd,GAAI,CAAC,KAAK,eAAgB,CACxB,IAAIoE,GAEHA,EAAgB,KAAK,UAAY,MAAgBA,EAAc,KAAK,IAAI,EACzE,KAAK,QAAU,MACrB,CACA,CAEE,iBAAiBC,EAAO,CACtB,IAAIC,EAEJ,KAAK,MAAQD,GACZC,EAAiB,KAAK,UAAY,MAAgBA,EAAe,KAAK,IAAI,EAC3E,KAAK,QAAUD,EAAME,GAAW,CAC1B,OAAOA,GAAY,UACrB,KAAK,WAAWA,CAAO,EAEvB,KAAK,QAAS,CAEtB,CAAK,CACL,CAEE,WAAWA,EAAS,CACF,KAAK,UAAYA,IAG/B,KAAK,QAAUA,EACf,KAAK,QAAS,EAEpB,CAEE,SAAU,CACR,KAAK,UAAU,QAAQ,CAAC,CACtB,SAAAvE,CACN,IAAU,CACJA,EAAU,CAChB,CAAK,CACL,CAEE,WAAY,CACV,OAAI,OAAO,KAAK,SAAY,UACnB,KAAK,QAIV,OAAO,SAAa,IACf,GAGF,CAAC,OAAW,UAAW,WAAW,EAAE,SAAS,SAAS,eAAe,CAChF,CAEA,CACA,MAAMwE,EAAe,IAAIN,GCpFnBO,GAAe,CAAC,SAAU,SAAS,EACzC,MAAMC,WAAsB3E,CAAa,CACvC,aAAc,CACZ,MAAO,EAEP,KAAK,MAAQ4E,GAAY,CAGvB,GAAI,CAACzE,GAAY,OAAO,iBAAkB,CACxC,MAAMF,EAAW,IAAM2E,IAGvB,OAAAF,GAAa,QAAQG,GAAS,CAC5B,OAAO,iBAAiBA,EAAO5E,EAAU,EAAK,CACxD,CAAS,EACM,IAAM,CAEXyE,GAAa,QAAQG,GAAS,CAC5B,OAAO,oBAAoBA,EAAO5E,CAAQ,CACtD,CAAW,CACF,CACT,CAGK,CACL,CAEE,aAAc,CACP,KAAK,SACR,KAAK,iBAAiB,KAAK,KAAK,CAEtC,CAEE,eAAgB,CACd,GAAI,CAAC,KAAK,eAAgB,CACxB,IAAIoE,GAEHA,EAAgB,KAAK,UAAY,MAAgBA,EAAc,KAAK,IAAI,EACzE,KAAK,QAAU,MACrB,CACA,CAEE,iBAAiBC,EAAO,CACtB,IAAIC,EAEJ,KAAK,MAAQD,GACZC,EAAiB,KAAK,UAAY,MAAgBA,EAAe,KAAK,IAAI,EAC3E,KAAK,QAAUD,EAAMQ,GAAU,CACzB,OAAOA,GAAW,UACpB,KAAK,UAAUA,CAAM,EAErB,KAAK,SAAU,CAEvB,CAAK,CACL,CAEE,UAAUA,EAAQ,CACA,KAAK,SAAWA,IAG9B,KAAK,OAASA,EACd,KAAK,SAAU,EAErB,CAEE,UAAW,CACT,KAAK,UAAU,QAAQ,CAAC,CACtB,SAAA7E,CACN,IAAU,CACJA,EAAU,CAChB,CAAK,CACL,CAEE,UAAW,CACT,OAAI,OAAO,KAAK,QAAW,UAClB,KAAK,OAGV,OAAO,UAAc,KAAe,OAAO,UAAU,OAAW,IAC3D,GAGF,UAAU,MACrB,CAEA,CACA,MAAM8E,EAAgB,IAAIJ,GCrF1B,SAASK,GAAkBC,EAAc,CACvC,OAAO,KAAK,IAAI,IAAO,GAAKA,EAAc,GAAK,CACjD,CAEA,SAASC,EAASC,EAAa,CAC7B,OAAQA,GAAoC,YAAc,SAAWJ,EAAc,SAAQ,EAAK,EAClG,CACA,MAAMK,EAAe,CACnB,YAAYhD,EAAS,CACnB,KAAK,OAAoCA,GAAQ,OACjD,KAAK,OAAoCA,GAAQ,MACrD,CAEA,CACA,SAASiD,EAAiB7E,EAAO,CAC/B,OAAOA,aAAiB4E,EAC1B,CACA,SAASE,GAAcC,EAAQ,CAC7B,IAAIC,EAAmB,GACnBP,EAAe,EACfQ,EAAa,GACbC,EACAC,EACAC,EACJ,MAAMC,EAAU,IAAI,QAAQ,CAACC,EAAcC,IAAgB,CACzDJ,EAAiBG,EACjBF,EAAgBG,CACpB,CAAG,EAEKC,EAASC,GAAiB,CACzBR,IACHS,EAAO,IAAId,GAAea,CAAa,CAAC,EACxCV,EAAO,OAAS,MAAgBA,EAAO,MAAO,EAEjD,EAEKY,EAAc,IAAM,CACxBX,EAAmB,EACpB,EAEKY,EAAgB,IAAM,CAC1BZ,EAAmB,EACpB,EAEKa,EAAc,IAAM,CAAC5B,EAAa,UAAW,GAAIc,EAAO,cAAgB,UAAY,CAACR,EAAc,SAAU,EAE7GnB,EAAUpD,GAAS,CAClBiF,IACHA,EAAa,GACbF,EAAO,WAAa,MAAgBA,EAAO,UAAU/E,CAAK,EAC5BkF,IAAY,EAC1CC,EAAenF,CAAK,EAEvB,EAEK0F,EAAS1F,GAAS,CACjBiF,IACHA,EAAa,GACbF,EAAO,SAAW,MAAgBA,EAAO,QAAQ/E,CAAK,EACxBkF,IAAY,EAC1CE,EAAcpF,CAAK,EAEtB,EAEK8F,EAAQ,IACL,IAAI,QAAQC,GAAmB,CACpCb,EAAalF,GAAS,CACpB,MAAMgG,EAAcf,GAAc,CAACY,EAAa,EAEhD,OAAIG,GACFD,EAAgB/F,CAAK,EAGhBgG,CACR,EAEDjB,EAAO,SAAW,MAAgBA,EAAO,QAAS,CACxD,CAAK,EAAE,KAAK,IAAM,CACZG,EAAa,OAERD,GACHF,EAAO,YAAc,MAAgBA,EAAO,WAAY,CAEhE,CAAK,EAIGkB,EAAM,IAAM,CAEhB,GAAIhB,EACF,OAGF,IAAIiB,EAEJ,GAAI,CACFA,EAAiBnB,EAAO,GAAI,CAC7B,OAAQlG,EAAO,CACdqH,EAAiB,QAAQ,OAAOrH,CAAK,CAC3C,CAEI,QAAQ,QAAQqH,CAAc,EAAE,KAAK9C,CAAO,EAAE,MAAMvE,GAAS,CAC3D,IAAIsH,EAAeC,EAGnB,GAAInB,EACF,OAIF,MAAMvG,GAASyH,EAAgBpB,EAAO,QAAU,KAAOoB,EAAgB,EACjEE,GAAcD,EAAqBrB,EAAO,aAAe,KAAOqB,EAAqB5B,GACrF8B,EAAQ,OAAOD,GAAe,WAAaA,EAAW5B,EAAc5F,CAAK,EAAIwH,EAC7EE,EAAc7H,IAAU,IAAQ,OAAOA,GAAU,UAAY+F,EAAe/F,GAAS,OAAOA,GAAU,YAAcA,EAAM+F,EAAc5F,CAAK,EAEnJ,GAAImG,GAAoB,CAACuB,EAAa,CAEpCb,EAAO7G,CAAK,EACZ,MACR,CAEM4F,IAEAM,EAAO,QAAU,MAAgBA,EAAO,OAAON,EAAc5F,CAAK,EAElEqE,GAAMoD,CAAK,EACV,KAAK,IAAM,CACV,GAAIT,EAAW,EACb,OAAOC,EAAO,CAIxB,CAAO,EAAE,KAAK,IAAM,CACRd,EACFU,EAAO7G,CAAK,EAEZoH,EAAK,CAEf,CAAO,CACP,CAAK,CACL,EAGE,OAAIvB,EAASK,EAAO,WAAW,EAC7BkB,EAAK,EAELH,EAAO,EAAC,KAAKG,CAAG,EAGX,CACL,QAAAZ,EACA,OAAAG,EACA,SAAU,IAC0CN,IAAY,EACzCG,EAAU,QAAQ,QAAS,EAElD,YAAAM,EACA,cAAAC,CACD,CACH,CCnKA,MAAMY,EAAgB,QCEtB,SAASC,IAAsB,CAC7B,IAAIC,EAAQ,CAAE,EACVC,EAAe,EAEfC,EAAWtD,GAAY,CACzBA,EAAU,CACX,EAEGuD,EAAgBvD,GAAY,CAC9BA,EAAU,CACX,EAED,MAAMwD,EAAQxD,GAAY,CACxB,IAAItB,EACJ2E,IAEA,GAAI,CACF3E,EAASsB,EAAU,CACzB,QAAc,CACRqD,IAEKA,GACHI,EAAO,CAEf,CAEI,OAAO/E,CACR,EAEKgF,EAAW1D,GAAY,CACvBqD,EACFD,EAAM,KAAKpD,CAAQ,EAEnBD,GAAkB,IAAM,CACtBuD,EAAStD,CAAQ,CACzB,CAAO,CAEJ,EAMK2D,EAAa3D,GACV,IAAI/D,IAAS,CAClByH,EAAS,IAAM,CACb1D,EAAS,GAAG/D,CAAI,CACxB,CAAO,CACF,EAGGwH,EAAQ,IAAM,CAClB,MAAMG,EAAgBR,EACtBA,EAAQ,CAAE,EAENQ,EAAc,QAChB7D,GAAkB,IAAM,CACtBwD,EAAc,IAAM,CAClBK,EAAc,QAAQ5D,GAAY,CAChCsD,EAAStD,CAAQ,CAC7B,CAAW,CACX,CAAS,CACT,CAAO,CAEJ,EAoBD,MAAO,CACL,MAAAwD,EACA,WAAAG,EACA,SAAAD,EACA,kBAjBwBG,GAAM,CAC9BP,EAAWO,CACZ,EAgBC,uBAT6BA,GAAM,CACnCN,EAAgBM,CACjB,CAQA,CACH,CAEK,MAACC,EAAgBX,GAAmB,EC7FzC,MAAMY,EAAU,CACd,SAAU,CACR,KAAK,eAAgB,CACzB,CAEE,YAAa,CACX,KAAK,eAAgB,EAEjBtH,EAAe,KAAK,SAAS,IAC/B,KAAK,UAAY,WAAW,IAAM,CAChC,KAAK,eAAgB,CAC7B,EAAS,KAAK,SAAS,EAEvB,CAEE,gBAAgBuH,EAAc,CAE5B,KAAK,UAAY,KAAK,IAAI,KAAK,WAAa,EAAGA,IAAsC3H,EAAW,IAAW,EAAI,GAAK,IAAI,CAC5H,CAEE,gBAAiB,CACX,KAAK,YACP,aAAa,KAAK,SAAS,EAC3B,KAAK,UAAY,OAEvB,CAEA,CCtBA,MAAM4H,WAAcF,EAAU,CAC5B,YAAYtC,EAAQ,CACZ,MAAA,EACN,KAAK,oBAAsB,GAC3B,KAAK,eAAiBA,EAAO,eACxB,KAAA,WAAWA,EAAO,OAAO,EAC9B,KAAK,UAAY,CAAC,EAClB,KAAK,MAAQA,EAAO,MACf,KAAA,OAASA,EAAO,QAAUyB,EAC/B,KAAK,SAAWzB,EAAO,SACvB,KAAK,UAAYA,EAAO,UACxB,KAAK,aAAeA,EAAO,OAASyC,GAAgB,KAAK,OAAO,EAChE,KAAK,MAAQ,KAAK,aAClB,KAAK,WAAW,CAAA,CAGlB,IAAI,MAAO,CACT,OAAO,KAAK,QAAQ,IAAA,CAGtB,WAAW5F,EAAS,CAClB,KAAK,QAAU,CAAE,GAAG,KAAK,eACvB,GAAGA,CACL,EACK,KAAA,gBAAgB,KAAK,QAAQ,SAAS,CAAA,CAG7C,gBAAiB,CACX,CAAC,KAAK,UAAU,QAAU,KAAK,MAAM,cAAgB,QAClD,KAAA,MAAM,OAAO,IAAI,CACxB,CAGF,QAAQ6F,EAAS7F,EAAS,CACxB,MAAM8B,EAAOF,EAAY,KAAK,MAAM,KAAMiE,EAAS,KAAK,OAAO,EAE/D,YAAK,SAAS,CACZ,KAAA/D,EACA,KAAM,UACN,cAA0C9B,GAAQ,UAClD,OAAmCA,GAAQ,MAAA,CAC5C,EACM8B,CAAA,CAGT,SAASgE,EAAOC,EAAiB,CAC/B,KAAK,SAAS,CACZ,KAAM,WACN,MAAAD,EACA,gBAAAC,CAAA,CACD,CAAA,CAGH,OAAO/F,EAAS,CACV,IAAAgG,EAEJ,MAAMvC,EAAU,KAAK,QACrB,OAACuC,EAAgB,KAAK,UAAY,MAAgBA,EAAc,OAAOhG,CAAO,EACvEyD,EAAUA,EAAQ,KAAKnG,CAAI,EAAE,MAAMA,CAAI,EAAI,QAAQ,QAAQ,CAAA,CAGpE,SAAU,CACR,MAAM,QAAQ,EACd,KAAK,OAAO,CACV,OAAQ,EAAA,CACT,CAAA,CAGH,OAAQ,CACN,KAAK,QAAQ,EACR,KAAA,SAAS,KAAK,YAAY,CAAA,CAGjC,UAAW,CACT,OAAO,KAAK,UAAU,QAAiB2I,EAAS,QAAQ,UAAY,EAAK,CAAA,CAG3E,YAAa,CACX,OAAO,KAAK,kBAAkB,EAAI,GAAK,CAAC,KAAK,SAAS,CAAA,CAGxD,SAAU,CACR,OAAO,KAAK,MAAM,eAAiB,CAAC,KAAK,MAAM,eAAiB,KAAK,UAAU,KAAKA,GAAYA,EAAS,mBAAmB,OAAO,CAAA,CAGrI,cAAc1H,EAAY,EAAG,CAC3B,OAAO,KAAK,MAAM,eAAiB,CAAC,KAAK,MAAM,eAAiB,CAACF,GAAe,KAAK,MAAM,cAAeE,CAAS,CAAA,CAGrH,SAAU,CACJ,IAAA2H,EAEJ,MAAMD,EAAW,KAAK,UAAU,KAAUE,GAAAA,EAAE,0BAA0B,EAElEF,GACFA,EAAS,QAAQ,CACf,cAAe,EAAA,CAChB,GAIFC,EAAiB,KAAK,UAAY,MAAgBA,EAAe,SAAS,CAAA,CAG7E,UAAW,CACL,IAAAE,EAEJ,MAAMH,EAAW,KAAK,UAAU,KAAUE,GAAAA,EAAE,wBAAwB,EAEhEF,GACFA,EAAS,QAAQ,CACf,cAAe,EAAA,CAChB,GAIFG,EAAiB,KAAK,UAAY,MAAgBA,EAAe,SAAS,CAAA,CAG7E,YAAYH,EAAU,CACf,KAAK,UAAU,SAASA,CAAQ,IAC9B,KAAA,UAAU,KAAKA,CAAQ,EAE5B,KAAK,eAAe,EACpB,KAAK,MAAM,OAAO,CAChB,KAAM,gBACN,MAAO,KACP,SAAAA,CAAA,CACD,EACH,CAGF,eAAeA,EAAU,CACnB,KAAK,UAAU,SAASA,CAAQ,IAClC,KAAK,UAAY,KAAK,UAAU,OAAOE,GAAKA,IAAMF,CAAQ,EAErD,KAAK,UAAU,SAGd,KAAK,UACH,KAAK,oBACP,KAAK,QAAQ,OAAO,CAClB,OAAQ,EAAA,CACT,EAED,KAAK,QAAQ,YAAY,GAI7B,KAAK,WAAW,GAGlB,KAAK,MAAM,OAAO,CAChB,KAAM,kBACN,MAAO,KACP,SAAAA,CAAA,CACD,EACH,CAGF,mBAAoB,CAClB,OAAO,KAAK,UAAU,MAAA,CAGxB,YAAa,CACN,KAAK,MAAM,eACd,KAAK,SAAS,CACZ,KAAM,YAAA,CACP,CACH,CAGF,MAAMjG,EAASqG,EAAc,CAC3B,IAAIC,EAAuBC,EAEvB,GAAA,KAAK,MAAM,cAAgB,QAC7B,GAAI,KAAK,MAAM,eAAiBF,GAAgB,MAAQA,EAAa,cAEnE,KAAK,OAAO,CACV,OAAQ,EAAA,CACT,UACQ,KAAK,QAAS,CACnB,IAAAG,EAGJ,OAACA,EAAiB,KAAK,UAAY,MAAgBA,EAAe,cAAc,EAEzE,KAAK,OAAA,EAWZ,GANAxG,GACF,KAAK,WAAWA,CAAO,EAKrB,CAAC,KAAK,QAAQ,QAAS,CACzB,MAAMiG,EAAW,KAAK,UAAU,KAAUE,GAAAA,EAAE,QAAQ,OAAO,EAEvDF,GACG,KAAA,WAAWA,EAAS,OAAO,CAClC,CASF,MAAMQ,EAAkB9E,GAAmB,EAErC+E,EAAiB,CACrB,SAAU,KAAK,SACf,UAAW,OACX,KAAM,KAAK,IACb,EAIMC,EAA8BC,GAAA,CAC3B,OAAA,eAAeA,EAAQ,SAAU,CACtC,WAAY,GACZ,IAAK,IAAM,CACT,GAAIH,EACF,YAAK,oBAAsB,GACpBA,EAAgB,MAGlB,CACT,CACD,CACH,EAEAE,EAAkBD,CAAc,EAEhC,MAAMG,EAAU,IACT,KAAK,QAAQ,SAIlB,KAAK,oBAAsB,GACpB,KAAK,QAAQ,QAAQH,CAAc,GAJjC,QAAQ,OAAO,iCAAmC,KAAK,QAAQ,UAAY,GAAG,EAQnFI,EAAU,CACd,aAAAT,EACA,QAAS,KAAK,QACd,SAAU,KAAK,SACf,MAAO,KAAK,MACZ,QAAAQ,CACF,EAMA,GALAF,EAAkBG,CAAO,GACxBR,EAAwB,KAAK,QAAQ,WAAa,MAAgBA,EAAsB,QAAQQ,CAAO,EAExG,KAAK,YAAc,KAAK,MAEpB,KAAK,MAAM,cAAgB,QAAU,KAAK,MAAM,cAAgBP,EAAwBO,EAAQ,eAAiB,KAAO,OAASP,EAAsB,MAAO,CAC5J,IAAAQ,EAEJ,KAAK,SAAS,CACZ,KAAM,QACN,MAAOA,EAAyBD,EAAQ,eAAiB,KAAO,OAASC,EAAuB,IAAA,CACjG,CAAA,CAGH,MAAMC,EAAmB/J,GAAA,CASnB,GAPEgG,EAAiBhG,CAAK,GAAKA,EAAM,QACrC,KAAK,SAAS,CACZ,KAAM,QACN,MAAAA,CAAA,CACD,EAGC,CAACgG,EAAiBhG,CAAK,EAAG,CACxB,IAAAgK,EAAuBC,EAAoBC,EAAwBC,GAGtEH,GAAyBC,EAAqB,KAAK,MAAM,QAAQ,UAAY,MAAgBD,EAAsB,KAAKC,EAAoBjK,EAAO,IAAI,GACvJkK,GAA0BC,EAAsB,KAAK,MAAM,QAAQ,YAAc,MAAgBD,EAAuB,KAAKC,EAAqB,KAAK,MAAM,KAAMnK,EAAO,IAAI,CAI/K,CAGG,KAAK,sBAER,KAAK,WAAW,EAGlB,KAAK,qBAAuB,EAC9B,EAGA,YAAK,QAAUiG,GAAc,CAC3B,GAAI4D,EAAQ,QACZ,MAA0CL,GAAgB,MAAM,KAAKA,CAAe,EACpF,UAAmB3E,GAAA,CACb,IAAAuF,EAAwBC,EAAqBC,EAAwBC,EAErE,GAAA,OAAO1F,EAAS,IAAa,CAK/BkF,EAAQ,IAAI,MAAM,KAAK,UAAY,oBAAoB,CAAC,EACxD,MAAA,CAGF,KAAK,QAAQlF,CAAI,GAEhBuF,GAA0BC,EAAsB,KAAK,MAAM,QAAQ,YAAc,MAAgBD,EAAuB,KAAKC,EAAqBxF,EAAM,IAAI,GAC5JyF,GAA0BC,EAAsB,KAAK,MAAM,QAAQ,YAAc,MAAgBD,EAAuB,KAAKC,EAAqB1F,EAAM,KAAK,MAAM,MAAO,IAAI,EAE1K,KAAK,sBAER,KAAK,WAAW,EAGlB,KAAK,qBAAuB,EAC9B,EACA,QAAAkF,EACA,OAAQ,CAACnE,EAAc5F,IAAU,CAC/B,KAAK,SAAS,CACZ,KAAM,SACN,aAAA4F,EACA,MAAA5F,CAAA,CACD,CACH,EACA,QAAS,IAAM,CACb,KAAK,SAAS,CACZ,KAAM,OAAA,CACP,CACH,EACA,WAAY,IAAM,CAChB,KAAK,SAAS,CACZ,KAAM,UAAA,CACP,CACH,EACA,MAAO6J,EAAQ,QAAQ,MACvB,WAAYA,EAAQ,QAAQ,WAC5B,YAAaA,EAAQ,QAAQ,WAAA,CAC9B,EACI,KAAA,QAAU,KAAK,QAAQ,QACrB,KAAK,OAAA,CAGd,SAASW,EAAQ,CACf,MAAMC,EAAmB5B,GAAA,CACvB,IAAI6B,EAAcC,EAElB,OAAQH,EAAO,KAAM,CACnB,IAAK,SACI,MAAA,CAAE,GAAG3B,EACV,kBAAmB2B,EAAO,aAC1B,mBAAoBA,EAAO,KAC7B,EAEF,IAAK,QACI,MAAA,CAAE,GAAG3B,EACV,YAAa,QACf,EAEF,IAAK,WACI,MAAA,CAAE,GAAGA,EACV,YAAa,UACf,EAEF,IAAK,QACI,MAAA,CAAE,GAAGA,EACV,kBAAmB,EACnB,mBAAoB,KACpB,WAAY6B,EAAeF,EAAO,OAAS,KAAOE,EAAe,KACjE,YAAa7E,EAAS,KAAK,QAAQ,WAAW,EAAI,WAAa,SAC/D,GAAI,CAACgD,EAAM,eAAiB,CAC1B,MAAO,KACP,OAAQ,SAAA,CAEZ,EAEF,IAAK,UACI,MAAA,CAAE,GAAGA,EACV,KAAM2B,EAAO,KACb,gBAAiB3B,EAAM,gBAAkB,EACzC,eAAgB8B,EAAwBH,EAAO,gBAAkB,KAAOG,EAAwB,KAAK,IAAI,EACzG,MAAO,KACP,cAAe,GACf,OAAQ,UACR,GAAI,CAACH,EAAO,QAAU,CACpB,YAAa,OACb,kBAAmB,EACnB,mBAAoB,IAAA,CAExB,EAEF,IAAK,QACH,MAAMxK,EAAQwK,EAAO,MAErB,OAAIxE,EAAiBhG,CAAK,GAAKA,EAAM,QAAU,KAAK,YAC3C,CAAE,GAAG,KAAK,YACf,YAAa,MACf,EAGK,CAAE,GAAG6I,EACV,MAAA7I,EACA,iBAAkB6I,EAAM,iBAAmB,EAC3C,eAAgB,KAAK,IAAI,EACzB,kBAAmBA,EAAM,kBAAoB,EAC7C,mBAAoB7I,EACpB,YAAa,OACb,OAAQ,OACV,EAEF,IAAK,aACI,MAAA,CAAE,GAAG6I,EACV,cAAe,EACjB,EAEF,IAAK,WACI,MAAA,CAAE,GAAGA,EACV,GAAG2B,EAAO,KACZ,CAAA,CAEN,EAEK,KAAA,MAAQC,EAAQ,KAAK,KAAK,EAC/BlC,EAAc,MAAM,IAAM,CACnB,KAAA,UAAU,QAAoBS,GAAA,CACjCA,EAAS,cAAcwB,CAAM,CAAA,CAC9B,EACD,KAAK,MAAM,OAAO,CAChB,MAAO,KACP,KAAM,UACN,OAAAA,CAAA,CACD,CAAA,CACF,CAAA,CAGL,CAEA,SAAS7B,GAAgB5F,EAAS,CAC1B,MAAA8B,EAAO,OAAO9B,EAAQ,aAAgB,WAAaA,EAAQ,cAAgBA,EAAQ,YACnF6H,EAAU,OAAO/F,EAAS,IAC1BgG,EAAuBD,EAAU,OAAO7H,EAAQ,sBAAyB,WAAaA,EAAQ,qBAAA,EAAyBA,EAAQ,qBAAuB,EACrJ,MAAA,CACL,KAAA8B,EACA,gBAAiB,EACjB,cAAe+F,EAAUC,GAAsD,KAAK,MAAQ,EAC5F,MAAO,KACP,iBAAkB,EAClB,eAAgB,EAChB,kBAAmB,EACnB,mBAAoB,KACpB,UAAW,KACX,cAAe,GACf,OAAQD,EAAU,UAAY,UAC9B,YAAa,MACf,CACF,CCjdA,MAAME,WAAmBnK,CAAa,CACpC,YAAYuF,EAAQ,CAClB,MAAO,EACP,KAAK,OAASA,GAAU,CAAE,EAC1B,KAAK,QAAU,CAAE,EACjB,KAAK,WAAa,CAAE,CACxB,CAEE,MAAMhG,EAAQ6C,EAAS8F,EAAO,CAC5B,IAAIkC,EAEJ,MAAM1I,EAAWU,EAAQ,SACnBiI,GAAaD,EAAqBhI,EAAQ,YAAc,KAAOgI,EAAqBxI,EAAsBF,EAAUU,CAAO,EACjI,IAAIf,EAAQ,KAAK,IAAIgJ,CAAS,EAE9B,OAAKhJ,IACHA,EAAQ,IAAI0G,GAAM,CAChB,MAAO,KACP,OAAQxI,EAAO,UAAW,EAC1B,SAAAmC,EACA,UAAA2I,EACA,QAAS9K,EAAO,oBAAoB6C,CAAO,EAC3C,MAAA8F,EACA,eAAgB3I,EAAO,iBAAiBmC,CAAQ,CACxD,CAAO,EACD,KAAK,IAAIL,CAAK,GAGTA,CACX,CAEE,IAAIA,EAAO,CACJ,KAAK,WAAWA,EAAM,SAAS,IAClC,KAAK,WAAWA,EAAM,SAAS,EAAIA,EACnC,KAAK,QAAQ,KAAKA,CAAK,EACvB,KAAK,OAAO,CACV,KAAM,QACN,MAAAA,CACR,CAAO,EAEP,CAEE,OAAOA,EAAO,CACZ,MAAMiJ,EAAa,KAAK,WAAWjJ,EAAM,SAAS,EAE9CiJ,IACFjJ,EAAM,QAAS,EACf,KAAK,QAAU,KAAK,QAAQ,OAAOkH,GAAKA,IAAMlH,CAAK,EAE/CiJ,IAAejJ,GACjB,OAAO,KAAK,WAAWA,EAAM,SAAS,EAGxC,KAAK,OAAO,CACV,KAAM,UACN,MAAAA,CACR,CAAO,EAEP,CAEE,OAAQ,CACNuG,EAAc,MAAM,IAAM,CACxB,KAAK,QAAQ,QAAQvG,GAAS,CAC5B,KAAK,OAAOA,CAAK,CACzB,CAAO,CACP,CAAK,CACL,CAEE,IAAIgJ,EAAW,CACb,OAAO,KAAK,WAAWA,CAAS,CACpC,CAEE,QAAS,CACP,OAAO,KAAK,OAChB,CAEE,KAAKxJ,EAAMC,EAAM,CACf,KAAM,CAACM,CAAO,EAAIF,EAAgBL,EAAMC,CAAI,EAE5C,OAAI,OAAOM,EAAQ,MAAU,MAC3BA,EAAQ,MAAQ,IAGX,KAAK,QAAQ,KAAKC,GAASF,EAAWC,EAASC,CAAK,CAAC,CAChE,CAEE,QAAQR,EAAMC,EAAM,CAClB,KAAM,CAACM,CAAO,EAAIF,EAAgBL,EAAMC,CAAI,EAC5C,OAAO,OAAO,KAAKM,CAAO,EAAE,OAAS,EAAI,KAAK,QAAQ,OAAOC,GAASF,EAAWC,EAASC,CAAK,CAAC,EAAI,KAAK,OAC7G,CAEE,OAAOwD,EAAO,CACZ+C,EAAc,MAAM,IAAM,CACxB,KAAK,UAAU,QAAQ,CAAC,CACtB,SAAA3H,CACR,IAAY,CACJA,EAAS4E,CAAK,CACtB,CAAO,CACP,CAAK,CACL,CAEE,SAAU,CACR+C,EAAc,MAAM,IAAM,CACxB,KAAK,QAAQ,QAAQvG,GAAS,CAC5BA,EAAM,QAAS,CACvB,CAAO,CACP,CAAK,CACL,CAEE,UAAW,CACTuG,EAAc,MAAM,IAAM,CACxB,KAAK,QAAQ,QAAQvG,GAAS,CAC5BA,EAAM,SAAU,CACxB,CAAO,CACP,CAAK,CACL,CAEA,CCrHA,MAAMkJ,WAAiB1C,EAAU,CAC/B,YAAYtC,EAAQ,CACZ,MAAA,EACN,KAAK,eAAiBA,EAAO,eAC7B,KAAK,WAAaA,EAAO,WACzB,KAAK,cAAgBA,EAAO,cACvB,KAAA,OAASA,EAAO,QAAUyB,EAC/B,KAAK,UAAY,CAAC,EACb,KAAA,MAAQzB,EAAO,OAASyC,GAAgB,EACxC,KAAA,WAAWzC,EAAO,OAAO,EAC9B,KAAK,WAAW,CAAA,CAGlB,WAAWnD,EAAS,CAClB,KAAK,QAAU,CAAE,GAAG,KAAK,eACvB,GAAGA,CACL,EACK,KAAA,gBAAgB,KAAK,QAAQ,SAAS,CAAA,CAG7C,IAAI,MAAO,CACT,OAAO,KAAK,QAAQ,IAAA,CAGtB,SAAS8F,EAAO,CACd,KAAK,SAAS,CACZ,KAAM,WACN,MAAAA,CAAA,CACD,CAAA,CAGH,YAAYG,EAAU,CACf,KAAK,UAAU,SAASA,CAAQ,IAC9B,KAAA,UAAU,KAAKA,CAAQ,EAE5B,KAAK,eAAe,EACpB,KAAK,cAAc,OAAO,CACxB,KAAM,gBACN,SAAU,KACV,SAAAA,CAAA,CACD,EACH,CAGF,eAAeA,EAAU,CACvB,KAAK,UAAY,KAAK,UAAU,OAAOE,GAAKA,IAAMF,CAAQ,EAC1D,KAAK,WAAW,EAChB,KAAK,cAAc,OAAO,CACxB,KAAM,kBACN,SAAU,KACV,SAAAA,CAAA,CACD,CAAA,CAGH,gBAAiB,CACV,KAAK,UAAU,SACd,KAAK,MAAM,SAAW,UACxB,KAAK,WAAW,EAEX,KAAA,cAAc,OAAO,IAAI,EAElC,CAGF,UAAW,CACT,IAAImC,EAAuBpC,EAE3B,OAAQoC,GAAyBpC,EAAgB,KAAK,UAAY,KAAO,OAASA,EAAc,SAAA,IAAe,KAAOoC,EAAwB,KAAK,QAAQ,CAAA,CAG7J,MAAM,SAAU,CACd,MAAMC,EAAkB,IAAM,CACxB,IAAAC,EAEJ,YAAK,QAAUpF,GAAc,CAC3B,GAAI,IACG,KAAK,QAAQ,WAIX,KAAK,QAAQ,WAAW,KAAK,MAAM,SAAS,EAH1C,QAAQ,OAAO,qBAAqB,EAK/C,OAAQ,CAACL,EAAc5F,IAAU,CAC/B,KAAK,SAAS,CACZ,KAAM,SACN,aAAA4F,EACA,MAAA5F,CAAA,CACD,CACH,EACA,QAAS,IAAM,CACb,KAAK,SAAS,CACZ,KAAM,OAAA,CACP,CACH,EACA,WAAY,IAAM,CAChB,KAAK,SAAS,CACZ,KAAM,UAAA,CACP,CACH,EACA,OAAQqL,EAAsB,KAAK,QAAQ,QAAU,KAAOA,EAAsB,EAClF,WAAY,KAAK,QAAQ,WACzB,YAAa,KAAK,QAAQ,WAAA,CAC3B,EACM,KAAK,QAAQ,OACtB,EAEMC,EAAW,KAAK,MAAM,SAAW,UAEnC,GAAA,CACF,IAAIC,EAAwBC,EAAwBC,EAAuBC,EAAgBC,EAAwBC,EAAwBC,EAAuBC,EAElK,GAAI,CAACR,EAAU,CACT,IAAAS,EAAuBC,EAAwBC,EAAuBC,EAE1E,KAAK,SAAS,CACZ,KAAM,UACN,UAAW,KAAK,QAAQ,SAAA,CACzB,EAED,OAAQH,GAAyBC,EAAyB,KAAK,cAAc,QAAQ,WAAa,KAAO,OAASD,EAAsB,KAAKC,EAAwB,KAAK,MAAM,UAAW,IAAI,GAC/L,MAAMnC,EAAU,OAAQoC,GAAyBC,EAAgB,KAAK,SAAS,WAAa,KAAO,OAASD,EAAsB,KAAKC,EAAe,KAAK,MAAM,SAAS,GAEtKrC,IAAY,KAAK,MAAM,SACzB,KAAK,SAAS,CACZ,KAAM,UACN,QAAAA,EACA,UAAW,KAAK,MAAM,SAAA,CACvB,CACH,CAGI,MAAAhF,EAAO,MAAMuG,EAAgB,EAEnC,cAAQG,GAA0BC,EAAyB,KAAK,cAAc,QAAQ,YAAc,KAAO,OAASD,EAAuB,KAAKC,EAAwB3G,EAAM,KAAK,MAAM,UAAW,KAAK,MAAM,QAAS,IAAI,GAC5N,OAAQ4G,GAAyBC,EAAiB,KAAK,SAAS,YAAc,KAAO,OAASD,EAAsB,KAAKC,EAAgB7G,EAAM,KAAK,MAAM,UAAW,KAAK,MAAM,OAAO,GAEvL,OAAQ8G,GAA0BC,EAAyB,KAAK,cAAc,QAAQ,YAAc,KAAO,OAASD,EAAuB,KAAKC,EAAwB/G,EAAM,KAAM,KAAK,MAAM,UAAW,KAAK,MAAM,QAAS,IAAI,GAClO,OAAQgH,GAAyBC,EAAiB,KAAK,SAAS,YAAc,KAAO,OAASD,EAAsB,KAAKC,EAAgBjH,EAAM,KAAM,KAAK,MAAM,UAAW,KAAK,MAAM,OAAO,GAC7L,KAAK,SAAS,CACZ,KAAM,UACN,KAAAA,CAAA,CACD,EACMA,QACA7E,EAAO,CACV,GAAA,CACF,IAAImM,EAAwBC,EAAwBC,EAAuBC,EAAgBC,EAAwBC,EAAyBC,EAAwBC,EAGpK,aAAQP,GAA0BC,EAAyB,KAAK,cAAc,QAAQ,UAAY,KAAO,OAASD,EAAuB,KAAKC,EAAwBpM,EAAO,KAAK,MAAM,UAAW,KAAK,MAAM,QAAS,IAAI,GAM3N,OAAQqM,GAAyBC,EAAiB,KAAK,SAAS,UAAY,KAAO,OAASD,EAAsB,KAAKC,EAAgBtM,EAAO,KAAK,MAAM,UAAW,KAAK,MAAM,OAAO,GAEtL,OAAQuM,GAA0BC,EAA0B,KAAK,cAAc,QAAQ,YAAc,KAAO,OAASD,EAAuB,KAAKC,EAAyB,OAAWxM,EAAO,KAAK,MAAM,UAAW,KAAK,MAAM,QAAS,IAAI,GAC1O,OAAQyM,GAA0BC,EAAiB,KAAK,SAAS,YAAc,KAAO,OAASD,EAAuB,KAAKC,EAAgB,OAAW1M,EAAO,KAAK,MAAM,UAAW,KAAK,MAAM,OAAO,GAC/LA,CAAA,QACN,CACA,KAAK,SAAS,CACZ,KAAM,QACN,MAAAA,CAAA,CACD,CAAA,CACH,CACF,CAGF,SAASwK,EAAQ,CACf,MAAMC,EAAmB5B,GAAA,CACvB,OAAQ2B,EAAO,KAAM,CACnB,IAAK,SACI,MAAA,CAAE,GAAG3B,EACV,aAAc2B,EAAO,aACrB,cAAeA,EAAO,KACxB,EAEF,IAAK,QACI,MAAA,CAAE,GAAG3B,EACV,SAAU,EACZ,EAEF,IAAK,WACI,MAAA,CAAE,GAAGA,EACV,SAAU,EACZ,EAEF,IAAK,UACI,MAAA,CAAE,GAAGA,EACV,QAAS2B,EAAO,QAChB,KAAM,OACN,aAAc,EACd,cAAe,KACf,MAAO,KACP,SAAU,CAAC3E,EAAS,KAAK,QAAQ,WAAW,EAC5C,OAAQ,UACR,UAAW2E,EAAO,SACpB,EAEF,IAAK,UACI,MAAA,CAAE,GAAG3B,EACV,KAAM2B,EAAO,KACb,aAAc,EACd,cAAe,KACf,MAAO,KACP,OAAQ,UACR,SAAU,EACZ,EAEF,IAAK,QACI,MAAA,CAAE,GAAG3B,EACV,KAAM,OACN,MAAO2B,EAAO,MACd,aAAc3B,EAAM,aAAe,EACnC,cAAe2B,EAAO,MACtB,SAAU,GACV,OAAQ,OACV,EAEF,IAAK,WACI,MAAA,CAAE,GAAG3B,EACV,GAAG2B,EAAO,KACZ,CAAA,CAEN,EAEK,KAAA,MAAQC,EAAQ,KAAK,KAAK,EAC/BlC,EAAc,MAAM,IAAM,CACnB,KAAA,UAAU,QAAoBS,GAAA,CACjCA,EAAS,iBAAiBwB,CAAM,CAAA,CACjC,EACD,KAAK,cAAc,OAAO,CACxB,SAAU,KACV,KAAM,UACN,OAAAA,CAAA,CACD,CAAA,CACF,CAAA,CAGL,CACA,SAAS7B,IAAkB,CAClB,MAAA,CACL,QAAS,OACT,KAAM,OACN,MAAO,KACP,aAAc,EACd,cAAe,KACf,SAAU,GACV,OAAQ,OACR,UAAW,MACb,CACF,CC3PA,MAAMgE,WAAsBhM,CAAa,CACvC,YAAYuF,EAAQ,CAClB,MAAO,EACP,KAAK,OAASA,GAAU,CAAE,EAC1B,KAAK,UAAY,CAAE,EACnB,KAAK,WAAa,CACtB,CAEE,MAAMhG,EAAQ6C,EAAS8F,EAAO,CAC5B,MAAMlG,EAAW,IAAIuI,GAAS,CAC5B,cAAe,KACf,OAAQhL,EAAO,UAAW,EAC1B,WAAY,EAAE,KAAK,WACnB,QAASA,EAAO,uBAAuB6C,CAAO,EAC9C,MAAA8F,EACA,eAAgB9F,EAAQ,YAAc7C,EAAO,oBAAoB6C,EAAQ,WAAW,EAAI,MAC9F,CAAK,EACD,YAAK,IAAIJ,CAAQ,EACVA,CACX,CAEE,IAAIA,EAAU,CACZ,KAAK,UAAU,KAAKA,CAAQ,EAC5B,KAAK,OAAO,CACV,KAAM,QACN,SAAAA,CACN,CAAK,CACL,CAEE,OAAOA,EAAU,CACf,KAAK,UAAY,KAAK,UAAU,OAAOuG,GAAKA,IAAMvG,CAAQ,EAC1D,KAAK,OAAO,CACV,KAAM,UACN,SAAAA,CACN,CAAK,CACL,CAEE,OAAQ,CACN4F,EAAc,MAAM,IAAM,CACxB,KAAK,UAAU,QAAQ5F,GAAY,CACjC,KAAK,OAAOA,CAAQ,CAC5B,CAAO,CACP,CAAK,CACL,CAEE,QAAS,CACP,OAAO,KAAK,SAChB,CAEE,KAAKZ,EAAS,CACZ,OAAI,OAAOA,EAAQ,MAAU,MAC3BA,EAAQ,MAAQ,IAGX,KAAK,UAAU,KAAKY,GAAYD,EAAcX,EAASY,CAAQ,CAAC,CAC3E,CAEE,QAAQZ,EAAS,CACf,OAAO,KAAK,UAAU,OAAOY,GAAYD,EAAcX,EAASY,CAAQ,CAAC,CAC7E,CAEE,OAAO6C,EAAO,CACZ+C,EAAc,MAAM,IAAM,CACxB,KAAK,UAAU,QAAQ,CAAC,CACtB,SAAA3H,CACR,IAAY,CACJA,EAAS4E,CAAK,CACtB,CAAO,CACP,CAAK,CACL,CAEE,uBAAwB,CACtB,IAAIoH,EAEJ,YAAK,WAAaA,EAAiB,KAAK,WAAa,KAAOA,EAAiB,QAAQ,QAAS,GAAE,KAAK,IAAM,CACzG,MAAMC,EAAkB,KAAK,UAAU,OAAO3D,GAAKA,EAAE,MAAM,QAAQ,EACnE,OAAOX,EAAc,MAAM,IAAMsE,EAAgB,OAAO,CAACrG,EAAS7D,IAAa6D,EAAQ,KAAK,IAAM7D,EAAS,SAAU,EAAC,MAAMtC,CAAI,CAAC,EAAG,QAAQ,QAAO,CAAE,CAAC,CAC5J,CAAK,EAAE,KAAK,IAAM,CACZ,KAAK,SAAW,MACtB,CAAK,EACM,KAAK,QAChB,CAEA,CCzFA,SAASyM,IAAwB,CAC/B,MAAO,CACL,QAASjD,GAAW,CAClBA,EAAQ,QAAU,IAAM,CACtB,IAAIP,EAAuBQ,EAAwBiD,EAAwBC,EAAwBC,EAAqBC,EAExH,MAAMC,GAAe7D,EAAwBO,EAAQ,eAAiB,OAAiBC,EAAyBR,EAAsB,OAAS,KAAlE,OAAkFQ,EAAuB,YAChLsD,GAAaL,EAAyBlD,EAAQ,eAAiB,OAAiBmD,EAAyBD,EAAuB,OAAS,KAAnE,OAAmFC,EAAuB,UAChLK,EAAyCD,GAAU,UACnDE,EAAmDF,GAAU,YAAe,UAC5EG,EAAuDH,GAAU,YAAe,WAChFI,IAAaP,EAAsBpD,EAAQ,MAAM,OAAS,KAAO,OAASoD,EAAoB,QAAU,CAAE,EAC1GQ,IAAkBP,EAAuBrD,EAAQ,MAAM,OAAS,KAAO,OAASqD,EAAqB,aAAe,CAAE,EAC5H,IAAIQ,EAAgBD,EAChBE,EAAY,GAEhB,MAAMjE,EAAoBC,GAAU,CAClC,OAAO,eAAeA,EAAQ,SAAU,CACtC,WAAY,GACZ,IAAK,IAAM,CACT,IAAIiE,EAEJ,IAAKA,EAAkB/D,EAAQ,SAAW,MAAQ+D,EAAgB,QAChED,EAAY,OACP,CACL,IAAIE,GAEHA,EAAmBhE,EAAQ,SAAW,MAAgBgE,EAAiB,iBAAiB,QAAS,IAAM,CACtGF,EAAY,EAC9B,CAAiB,CACjB,CAEc,OAAO9D,EAAQ,MAC7B,CACA,CAAW,CACX,EAGciE,EAAUjE,EAAQ,QAAQ,UAAY,IAAM,QAAQ,OAAO,iCAAmCA,EAAQ,QAAQ,UAAY,GAAG,GAE7HkE,EAAgB,CAACC,EAAOC,EAAOC,EAAMC,KACzCT,EAAgBS,EAAW,CAACF,EAAO,GAAGP,CAAa,EAAI,CAAC,GAAGA,EAAeO,CAAK,EACxEE,EAAW,CAACD,EAAM,GAAGF,CAAK,EAAI,CAAC,GAAGA,EAAOE,CAAI,GAIhDE,EAAY,CAACJ,EAAOK,EAAQJ,EAAOE,IAAa,CACpD,GAAIR,EACF,OAAO,QAAQ,OAAO,WAAW,EAGnC,GAAI,OAAOM,EAAU,KAAe,CAACI,GAAUL,EAAM,OACnD,OAAO,QAAQ,QAAQA,CAAK,EAG9B,MAAMvE,EAAiB,CACrB,SAAUI,EAAQ,SAClB,UAAWoE,EACX,KAAMpE,EAAQ,QAAQ,IACvB,EACDH,EAAkBD,CAAc,EAChC,MAAM6E,EAAgBR,EAAQrE,CAAc,EAE5C,OADgB,QAAQ,QAAQ6E,CAAa,EAAE,KAAKJ,IAAQH,EAAcC,EAAOC,EAAOC,GAAMC,CAAQ,CAAC,CAExG,EAED,IAAI3H,EAEJ,GAAI,CAACgH,EAAS,OACZhH,EAAU4H,EAAU,EAAE,UAEfd,EAAoB,CAC3B,MAAMe,EAAS,OAAOhB,EAAc,IAC9BY,EAAQI,EAAShB,EAAYkB,GAAiB1E,EAAQ,QAAS2D,CAAQ,EAC7EhH,EAAU4H,EAAUZ,EAAUa,EAAQJ,CAAK,CAC5C,SACQV,EAAwB,CAC/B,MAAMc,EAAS,OAAOhB,EAAc,IAC9BY,EAAQI,EAAShB,EAAYmB,GAAqB3E,EAAQ,QAAS2D,CAAQ,EACjFhH,EAAU4H,EAAUZ,EAAUa,EAAQJ,EAAO,EAAI,CAClD,KACI,CACHP,EAAgB,CAAE,EAClB,MAAMW,EAAS,OAAOxE,EAAQ,QAAQ,iBAAqB,IAG3DrD,GAF6B2G,GAAeK,EAAS,CAAC,EAAIL,EAAYK,EAAS,CAAC,EAAG,EAAGA,CAAQ,EAAI,IAEjEY,EAAU,CAAA,EAAIC,EAAQZ,EAAc,CAAC,CAAC,EAAI,QAAQ,QAAQM,EAAc,CAAE,EAAEN,EAAc,CAAC,EAAGD,EAAS,CAAC,CAAC,CAAC,EAE3I,QAASzJ,EAAI,EAAGA,EAAIyJ,EAAS,OAAQzJ,IACnCyC,EAAUA,EAAQ,KAAKwH,GAAS,CAG9B,GAF4Bb,GAAeK,EAASzJ,CAAC,EAAIoJ,EAAYK,EAASzJ,CAAC,EAAGA,EAAGyJ,CAAQ,EAAI,GAExE,CACvB,MAAMS,EAAQI,EAASZ,EAAc1J,CAAC,EAAIwK,GAAiB1E,EAAQ,QAASmE,CAAK,EACjF,OAAOI,EAAUJ,EAAOK,EAAQJ,CAAK,CACrD,CAEc,OAAO,QAAQ,QAAQF,EAAcC,EAAOP,EAAc1J,CAAC,EAAGyJ,EAASzJ,CAAC,CAAC,CAAC,CACxF,CAAa,CAEb,CAMQ,OAJqByC,EAAQ,KAAKwH,IAAU,CAC1C,MAAAA,EACA,WAAYN,CACtB,EAAU,CAEH,CACP,CACG,CACH,CACA,SAASa,GAAiBxL,EAASiL,EAAO,CACxC,OAAOjL,EAAQ,kBAAoB,KAAO,OAASA,EAAQ,iBAAiBiL,EAAMA,EAAM,OAAS,CAAC,EAAGA,CAAK,CAC5G,CACA,SAASQ,GAAqBzL,EAASiL,EAAO,CAC5C,OAAOjL,EAAQ,sBAAwB,KAAO,OAASA,EAAQ,qBAAqBiL,EAAM,CAAC,EAAGA,CAAK,CACrG,CC1GA,MAAMS,EAAY,CAChB,YAAYvI,EAAS,GAAI,CACvB,KAAK,WAAaA,EAAO,YAAc,IAAI4E,GAC3C,KAAK,cAAgB5E,EAAO,eAAiB,IAAIyG,GAC5C,KAAA,OAASzG,EAAO,QAAUyB,EAC1B,KAAA,eAAiBzB,EAAO,gBAAkB,CAAC,EAChD,KAAK,cAAgB,CAAC,EACtB,KAAK,iBAAmB,CAAC,EACzB,KAAK,WAAa,CAIlB,CAGF,OAAQ,CACD,KAAA,aACD,KAAK,aAAe,IACnB,KAAA,iBAAmBd,EAAa,UAAU,IAAM,CAC/CA,EAAa,cACf,KAAK,sBAAsB,EAC3B,KAAK,WAAW,QAAQ,EAC1B,CACD,EACI,KAAA,kBAAoBM,EAAc,UAAU,IAAM,CACjDA,EAAc,aAChB,KAAK,sBAAsB,EAC3B,KAAK,WAAW,SAAS,EAC3B,CACD,EAAA,CAGH,SAAU,CACR,IAAIgJ,EAAuBC,EAEtB,KAAA,aACD,KAAK,aAAe,KACvBD,EAAwB,KAAK,mBAAqB,MAAgBA,EAAsB,KAAK,IAAI,EAClG,KAAK,iBAAmB,QACvBC,EAAwB,KAAK,oBAAsB,MAAgBA,EAAsB,KAAK,IAAI,EACnG,KAAK,kBAAoB,OAAA,CAG3B,WAAWnN,EAAMC,EAAM,CACrB,KAAM,CAACM,CAAO,EAAIF,EAAgBL,EAAMC,CAAI,EAC5C,OAAAM,EAAQ,YAAc,WACf,KAAK,WAAW,QAAQA,CAAO,EAAE,MAAA,CAG1C,WAAWA,EAAS,CACX,OAAA,KAAK,cAAc,QAAQ,CAAE,GAAGA,EACrC,SAAU,EACX,CAAA,EAAE,MAAA,CAGL,aAAaM,EAAUN,EAAS,CAC1B,IAAA6M,EAEI,OAAAA,EAAwB,KAAK,WAAW,KAAKvM,EAAUN,CAAO,IAAM,KAAO,OAAS6M,EAAsB,MAAM,IAAA,CAG1H,gBAAgBpN,EAAMC,EAAMC,EAAM,CAChC,MAAMmN,EAAgBtN,EAAeC,EAAMC,EAAMC,CAAI,EAC/CoN,EAAa,KAAK,aAAaD,EAAc,QAAQ,EAC3D,OAAOC,EAAa,QAAQ,QAAQA,CAAU,EAAI,KAAK,WAAWD,CAAa,CAAA,CAGjF,eAAeE,EAAmB,CAChC,OAAO,KAAK,cAAc,EAAE,QAAQA,CAAiB,EAAE,IAAI,CAAC,CAC1D,SAAA1M,EACA,MAAAwG,CAAA,IACI,CACJ,MAAMhE,EAAOgE,EAAM,KACZ,MAAA,CAACxG,EAAUwC,CAAI,CAAA,CACvB,CAAA,CAGH,aAAaxC,EAAUrB,EAAS+B,EAAS,CACvC,MAAMf,EAAQ,KAAK,WAAW,KAAKK,CAAQ,EACrCuC,EAAoC5C,GAAM,MAAM,KAChD6C,EAAO9D,GAAiBC,EAAS4D,CAAQ,EAE3C,GAAA,OAAOC,EAAS,IACX,OAGH,MAAAgK,EAAgBtN,EAAec,CAAQ,EACvC2M,EAAmB,KAAK,oBAAoBH,CAAa,EAC/D,OAAO,KAAK,WAAW,MAAM,KAAMG,CAAgB,EAAE,QAAQnK,EAAM,CAAE,GAAG9B,EACtE,OAAQ,EAAA,CACT,CAAA,CAGH,eAAegM,EAAmB/N,EAAS+B,EAAS,CAC3C,OAAAwF,EAAc,MAAM,IAAM,KAAK,gBAAgB,QAAQwG,CAAiB,EAAE,IAAI,CAAC,CACpF,SAAA1M,CAAA,IACI,CAACA,EAAU,KAAK,aAAaA,EAAUrB,EAAS+B,CAAO,CAAC,CAAC,CAAC,CAAA,CAGlE,cAAcV,EAAUN,EAAS,CAC3B,IAAAkN,EAEI,OAAAA,EAAyB,KAAK,WAAW,KAAK5M,EAAUN,CAAO,IAAM,KAAO,OAASkN,EAAuB,KAAA,CAGtH,cAAczN,EAAMC,EAAM,CACxB,KAAM,CAACM,CAAO,EAAIF,EAAgBL,EAAMC,CAAI,EACtCyN,EAAa,KAAK,WACxB3G,EAAc,MAAM,IAAM,CACxB2G,EAAW,QAAQnN,CAAO,EAAE,QAAiBC,GAAA,CAC3CkN,EAAW,OAAOlN,CAAK,CAAA,CACxB,CAAA,CACF,CAAA,CAGH,aAAaR,EAAMC,EAAMC,EAAM,CAC7B,KAAM,CAACK,EAASgB,CAAO,EAAIlB,EAAgBL,EAAMC,EAAMC,CAAI,EACrDwN,EAAa,KAAK,WAClBC,EAAiB,CACrB,KAAM,SACN,GAAGpN,CACL,EACO,OAAAwG,EAAc,MAAM,KACzB2G,EAAW,QAAQnN,CAAO,EAAE,QAAiBC,GAAA,CAC3CA,EAAM,MAAM,CAAA,CACb,EACM,KAAK,eAAemN,EAAgBpM,CAAO,EACnD,CAAA,CAGH,cAAcvB,EAAMC,EAAMC,EAAM,CACxB,KAAA,CAACK,EAAS6E,EAAgB,CAAE,CAAA,EAAI/E,EAAgBL,EAAMC,EAAMC,CAAI,EAElE,OAAOkF,EAAc,OAAW,MAClCA,EAAc,OAAS,IAGzB,MAAMwI,EAAW7G,EAAc,MAAM,IAAM,KAAK,WAAW,QAAQxG,CAAO,EAAE,IAAaC,GAAAA,EAAM,OAAO4E,CAAa,CAAC,CAAC,EAC9G,OAAA,QAAQ,IAAIwI,CAAQ,EAAE,KAAK/O,CAAI,EAAE,MAAMA,CAAI,CAAA,CAGpD,kBAAkBmB,EAAMC,EAAMC,EAAM,CAClC,KAAM,CAACK,EAASgB,CAAO,EAAIlB,EAAgBL,EAAMC,EAAMC,CAAI,EACpD,OAAA6G,EAAc,MAAM,IAAM,CAC/B,IAAI8G,EAAMC,EAMN,GAJJ,KAAK,WAAW,QAAQvN,CAAO,EAAE,QAAiBC,GAAA,CAChDA,EAAM,WAAW,CAAA,CAClB,EAEGD,EAAQ,cAAgB,OAC1B,OAAO,QAAQ,QAAQ,EAGzB,MAAMoN,EAAiB,CAAE,GAAGpN,EAC1B,MAAOsN,GAAQC,EAAuBvN,EAAQ,cAAgB,KAAOuN,EAAuBvN,EAAQ,OAAS,KAAOsN,EAAO,QAC7H,EACO,OAAA,KAAK,eAAeF,EAAgBpM,CAAO,CAAA,CACnD,CAAA,CAGH,eAAevB,EAAMC,EAAMC,EAAM,CAC/B,KAAM,CAACK,EAASgB,CAAO,EAAIlB,EAAgBL,EAAMC,EAAMC,CAAI,EACrD0N,EAAW7G,EAAc,MAAM,IAAM,KAAK,WAAW,QAAQxG,CAAO,EAAE,UAAgB,CAACC,EAAM,YAAY,EAAE,IAAaA,GAAA,CACxH,IAAAuN,EAEG,OAAAvN,EAAM,MAAM,OAAW,CAAE,GAAGe,EACjC,eAAgBwM,EAAmDxM,GAAQ,gBAAkB,KAAOwM,EAAwB,GAC5H,KAAM,CACJ,YAAaxN,EAAQ,WAAA,CACvB,CACD,CAAA,CACF,CAAC,EACF,IAAIyE,EAAU,QAAQ,IAAI4I,CAAQ,EAAE,KAAK/O,CAAI,EAE7C,OAAM0C,GAAW,MAAQA,EAAQ,eACrByD,EAAAA,EAAQ,MAAMnG,CAAI,GAGvBmG,CAAA,CAGT,WAAWhF,EAAMC,EAAMC,EAAM,CAC3B,MAAMmN,EAAgBtN,EAAeC,EAAMC,EAAMC,CAAI,EAC/CsN,EAAmB,KAAK,oBAAoBH,CAAa,EAE3D,OAAOG,EAAiB,MAAU,MACpCA,EAAiB,MAAQ,IAG3B,MAAMhN,EAAQ,KAAK,WAAW,MAAM,KAAMgN,CAAgB,EAC1D,OAAOhN,EAAM,cAAcgN,EAAiB,SAAS,EAAIhN,EAAM,MAAMgN,CAAgB,EAAI,QAAQ,QAAQhN,EAAM,MAAM,IAAI,CAAA,CAG3H,cAAcR,EAAMC,EAAMC,EAAM,CACvB,OAAA,KAAK,WAAWF,EAAMC,EAAMC,CAAI,EAAE,KAAKrB,CAAI,EAAE,MAAMA,CAAI,CAAA,CAGhE,mBAAmBmB,EAAMC,EAAMC,EAAM,CACnC,MAAMmN,EAAgBtN,EAAeC,EAAMC,EAAMC,CAAI,EACrD,OAAAmN,EAAc,SAAW/B,GAAsB,EACxC,KAAK,WAAW+B,CAAa,CAAA,CAGtC,sBAAsBrN,EAAMC,EAAMC,EAAM,CAC/B,OAAA,KAAK,mBAAmBF,EAAMC,EAAMC,CAAI,EAAE,KAAKrB,CAAI,EAAE,MAAMA,CAAI,CAAA,CAGxE,uBAAwB,CACf,OAAA,KAAK,cAAc,sBAAsB,CAAA,CAGlD,eAAgB,CACd,OAAO,KAAK,UAAA,CAGd,kBAAmB,CACjB,OAAO,KAAK,aAAA,CAGd,WAAY,CACV,OAAO,KAAK,MAAA,CAGd,mBAAoB,CAClB,OAAO,KAAK,cAAA,CAGd,kBAAkB0C,EAAS,CACzB,KAAK,eAAiBA,CAAA,CAGxB,iBAAiBV,EAAUU,EAAS,CAC5B,MAAAI,EAAS,KAAK,cAAc,KAAK+F,GAAKpG,EAAaT,CAAQ,IAAMS,EAAaoG,EAAE,QAAQ,CAAC,EAE3F/F,EACFA,EAAO,eAAiBJ,EAExB,KAAK,cAAc,KAAK,CACtB,SAAAV,EACA,eAAgBU,CAAA,CACjB,CACH,CAGF,iBAAiBV,EAAU,CACzB,GAAI,CAACA,EACI,OAIH,MAAAmN,EAAwB,KAAK,cAAc,QAAUhN,EAAgBH,EAAU6G,EAAE,QAAQ,CAAC,EAWzF,OAAyCsG,GAAsB,cAAA,CAGxE,oBAAoB3M,EAAaE,EAAS,CAClC,MAAAI,EAAS,KAAK,iBAAiB,KAAK+F,GAAKpG,EAAaD,CAAW,IAAMC,EAAaoG,EAAE,WAAW,CAAC,EAEpG/F,EACFA,EAAO,eAAiBJ,EAExB,KAAK,iBAAiB,KAAK,CACzB,YAAAF,EACA,eAAgBE,CAAA,CACjB,CACH,CAGF,oBAAoBF,EAAa,CAC/B,GAAI,CAACA,EACI,OAIH,MAAA2M,EAAwB,KAAK,iBAAiB,QAAUhN,EAAgBK,EAAaqG,EAAE,WAAW,CAAC,EAWlG,OAAyCsG,GAAsB,cAAA,CAGxE,oBAAoBzM,EAAS,CACvB,GAAAA,GAAW,MAAQA,EAAQ,WACtB,OAAAA,EAGT,MAAMiM,EAAmB,CAAE,GAAG,KAAK,eAAe,QAChD,GAAG,KAAK,iBAA4CjM,GAAQ,QAAQ,EACpE,GAAGA,EACH,WAAY,EACd,EAEA,MAAI,CAACiM,EAAiB,WAAaA,EAAiB,WAClDA,EAAiB,UAAYzM,EAAsByM,EAAiB,SAAUA,CAAgB,GAI5F,OAAOA,EAAiB,mBAAuB,MAChCA,EAAA,mBAAqBA,EAAiB,cAAgB,UAGrE,OAAOA,EAAiB,iBAAqB,MAC9BA,EAAA,iBAAmB,CAAC,CAACA,EAAiB,UAGlDA,CAAA,CAGT,uBAAuBjM,EAAS,CAC1B,OAAAA,GAAW,MAAQA,EAAQ,WACtBA,EAGF,CAAE,GAAG,KAAK,eAAe,UAC9B,GAAG,KAAK,oBAA+CA,GAAQ,WAAW,EAC1E,GAAGA,EACH,WAAY,EACd,CAAA,CAGF,OAAQ,CACN,KAAK,WAAW,MAAM,EACtB,KAAK,cAAc,MAAM,CAAA,CAG7B,CC1VA,MAAM0M,WAAsB9O,CAAa,CACvC,YAAYT,EAAQ6C,EAAS,CACrB,MAAA,EACN,KAAK,OAAS7C,EACd,KAAK,QAAU6C,EACV,KAAA,iBAAmB,IACxB,KAAK,YAAc,KACnB,KAAK,YAAY,EACjB,KAAK,WAAWA,CAAO,CAAA,CAGzB,aAAc,CACZ,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,CAAA,CAGvC,aAAc,CACR,KAAK,UAAU,OAAS,IACrB,KAAA,aAAa,YAAY,IAAI,EAE9B2M,GAAmB,KAAK,aAAc,KAAK,OAAO,GACpD,KAAK,aAAa,EAGpB,KAAK,aAAa,EACpB,CAGF,eAAgB,CACT,KAAK,gBACR,KAAK,QAAQ,CACf,CAGF,wBAAyB,CACvB,OAAOC,EAAc,KAAK,aAAc,KAAK,QAAS,KAAK,QAAQ,kBAAkB,CAAA,CAGvF,0BAA2B,CACzB,OAAOA,EAAc,KAAK,aAAc,KAAK,QAAS,KAAK,QAAQ,oBAAoB,CAAA,CAGzF,SAAU,CACH,KAAA,cAAgB,IACrB,KAAK,kBAAkB,EACvB,KAAK,qBAAqB,EACrB,KAAA,aAAa,eAAe,IAAI,CAAA,CAGvC,WAAW5M,EAAS6M,EAAe,CACjC,MAAMC,EAAc,KAAK,QACnBC,EAAY,KAAK,aAenB,GAdJ,KAAK,QAAU,KAAK,OAAO,oBAAoB/M,CAAO,EAMjDiB,EAAoB6L,EAAa,KAAK,OAAO,GAC3C,KAAA,OAAO,cAAc,EAAE,OAAO,CACjC,KAAM,yBACN,MAAO,KAAK,aACZ,SAAU,IAAA,CACX,EAGC,OAAO,KAAK,QAAQ,QAAY,KAAe,OAAO,KAAK,QAAQ,SAAY,UAC3E,MAAA,IAAI,MAAM,kCAAkC,EAI/C,KAAK,QAAQ,WACX,KAAA,QAAQ,SAAWA,EAAY,UAGtC,KAAK,YAAY,EACX,MAAAE,EAAU,KAAK,aAAa,EAE9BA,GAAWC,GAAsB,KAAK,aAAcF,EAAW,KAAK,QAASD,CAAW,GAC1F,KAAK,aAAa,EAIpB,KAAK,aAAaD,CAAa,EAE3BG,IAAY,KAAK,eAAiBD,GAAa,KAAK,QAAQ,UAAYD,EAAY,SAAW,KAAK,QAAQ,YAAcA,EAAY,YACxI,KAAK,mBAAmB,EAGpB,MAAAI,EAAsB,KAAK,uBAAuB,EAEpDF,IAAY,KAAK,eAAiBD,GAAa,KAAK,QAAQ,UAAYD,EAAY,SAAWI,IAAwB,KAAK,yBAC9H,KAAK,sBAAsBA,CAAmB,CAChD,CAGF,oBAAoBlN,EAAS,CACrB,MAAAf,EAAQ,KAAK,OAAO,gBAAgB,MAAM,KAAK,OAAQe,CAAO,EAC9DI,EAAS,KAAK,aAAanB,EAAOe,CAAO,EAE/C,OAAImN,GAAsC,KAAM/M,EAAQJ,CAAO,IAgB7D,KAAK,cAAgBI,EACrB,KAAK,qBAAuB,KAAK,QAC5B,KAAA,mBAAqB,KAAK,aAAa,OAGvCA,CAAA,CAGT,kBAAmB,CACjB,OAAO,KAAK,aAAA,CAGd,YAAYA,EAAQ,CAClB,MAAMgN,EAAgB,CAAC,EACvB,cAAO,KAAKhN,CAAM,EAAE,QAAe1D,GAAA,CAC1B,OAAA,eAAe0Q,EAAe1Q,EAAK,CACxC,aAAc,GACd,WAAY,GACZ,IAAK,KACE,KAAA,aAAa,IAAIA,CAAG,EAClB0D,EAAO1D,CAAG,EACnB,CACD,CAAA,CACF,EACM0Q,CAAA,CAGT,iBAAkB,CAChB,OAAO,KAAK,YAAA,CAGd,QAAS,CACP,KAAK,OAAO,cAAA,EAAgB,OAAO,KAAK,YAAY,CAAA,CAGtD,QAAQ,CACN,YAAAhD,EACA,GAAGpK,CACL,EAAI,GAAI,CACN,OAAO,KAAK,MAAM,CAAE,GAAGA,EACrB,KAAM,CACJ,YAAAoK,CAAA,CACF,CACD,CAAA,CAGH,gBAAgBpK,EAAS,CACvB,MAAMiM,EAAmB,KAAK,OAAO,oBAAoBjM,CAAO,EAC1Df,EAAQ,KAAK,OAAO,gBAAgB,MAAM,KAAK,OAAQgN,CAAgB,EAC7E,OAAAhN,EAAM,qBAAuB,GACtBA,EAAM,QAAQ,KAAK,IAAM,KAAK,aAAaA,EAAOgN,CAAgB,CAAC,CAAA,CAG5E,MAAM5F,EAAc,CACd,IAAAgH,EAEJ,OAAO,KAAK,aAAa,CAAE,GAAGhH,EAC5B,eAAgBgH,EAAwBhH,EAAa,gBAAkB,KAAOgH,EAAwB,EAAA,CACvG,EAAE,KAAK,KACN,KAAK,aAAa,EACX,KAAK,cACb,CAAA,CAGH,aAAahH,EAAc,CAEzB,KAAK,YAAY,EAEjB,IAAI5C,EAAU,KAAK,aAAa,MAAM,KAAK,QAAS4C,CAAY,EAEhE,OAAMA,GAAgB,MAAQA,EAAa,eAC/B5C,EAAAA,EAAQ,MAAMnG,CAAI,GAGvBmG,CAAA,CAGT,oBAAqB,CAGf,GAFJ,KAAK,kBAAkB,EAEnB1F,GAAY,KAAK,cAAc,SAAW,CAACI,EAAe,KAAK,QAAQ,SAAS,EAClF,OAMF,MAAMoD,EAHOlD,GAAe,KAAK,cAAc,cAAe,KAAK,QAAQ,SAAS,EAG7D,EAClB,KAAA,eAAiB,WAAW,IAAM,CAChC,KAAK,cAAc,SACtB,KAAK,aAAa,GAEnBkD,CAAO,CAAA,CAGZ,wBAAyB,CACnB,IAAA+L,EAEJ,OAAO,OAAO,KAAK,QAAQ,iBAAoB,WAAa,KAAK,QAAQ,gBAAgB,KAAK,cAAc,KAAM,KAAK,YAAY,GAAKA,EAAwB,KAAK,QAAQ,kBAAoB,KAAOA,EAAwB,EAAA,CAGlO,sBAAsBC,EAAc,CAClC,KAAK,qBAAqB,EAC1B,KAAK,uBAAyBA,EAE1B,EAAAxP,GAAY,KAAK,QAAQ,UAAY,IAAS,CAACI,EAAe,KAAK,sBAAsB,GAAK,KAAK,yBAA2B,KAI7H,KAAA,kBAAoB,YAAY,IAAM,EACrC,KAAK,QAAQ,6BAA+BkE,EAAa,cAC3D,KAAK,aAAa,CACpB,EACC,KAAK,sBAAsB,EAAA,CAGhC,cAAe,CACb,KAAK,mBAAmB,EACnB,KAAA,sBAAsB,KAAK,wBAAwB,CAAA,CAG1D,mBAAoB,CACd,KAAK,iBACP,aAAa,KAAK,cAAc,EAChC,KAAK,eAAiB,OACxB,CAGF,sBAAuB,CACjB,KAAK,oBACP,cAAc,KAAK,iBAAiB,EACpC,KAAK,kBAAoB,OAC3B,CAGF,aAAapD,EAAOe,EAAS,CAC3B,MAAM+M,EAAY,KAAK,aACjBD,EAAc,KAAK,QACnBU,EAAa,KAAK,cAClBC,EAAkB,KAAK,mBACvBC,EAAoB,KAAK,qBACzBC,EAAc1O,IAAU8N,EACxBa,EAAoBD,EAAc1O,EAAM,MAAQ,KAAK,yBACrD4O,EAAkBF,EAAc,KAAK,cAAgB,KAAK,oBAC1D,CACJ,MAAA7H,CAAA,EACE7G,EACA,GAAA,CACF,cAAA6O,EACA,MAAA7Q,EACA,eAAA8Q,EACA,YAAA3O,EACA,OAAA4O,CAAA,EACElI,EACAmI,EAAiB,GACjBC,EAAoB,GACpBpM,EAEJ,GAAI9B,EAAQ,mBAAoB,CACxB,MAAAgN,EAAU,KAAK,aAAa,EAC5BmB,EAAe,CAACnB,GAAWL,GAAmB1N,EAAOe,CAAO,EAC5DoO,EAAkBpB,GAAWC,GAAsBhO,EAAO8N,EAAW/M,EAAS8M,CAAW,GAE3FqB,GAAgBC,KAClBhP,EAAc0D,EAAS7D,EAAM,QAAQ,WAAW,EAAI,WAAa,SAE5D6O,IACME,EAAA,YAIThO,EAAQ,qBAAuB,gBACnBZ,EAAA,OAChB,CAIE,GAAAY,EAAQ,kBAAoB,CAAC8F,EAAM,eAAiB+H,GAAmB,MAAQA,EAAgB,WAAaG,IAAW,QACzHlM,EAAO+L,EAAgB,KACvBC,EAAgBD,EAAgB,cAChCG,EAASH,EAAgB,OACRI,EAAA,WAEVjO,EAAQ,QAAU,OAAO8F,EAAM,KAAS,IAE3C,GAAA0H,GAAc1H,EAAM,OAA6C2H,GAAgB,MAASzN,EAAQ,SAAW,KAAK,SACpH8B,EAAO,KAAK,iBAER,IAAA,CACF,KAAK,SAAW9B,EAAQ,OACjB8B,EAAA9B,EAAQ,OAAO8F,EAAM,IAAI,EAChChE,EAAOF,EAA0C4L,GAAW,KAAM1L,EAAM9B,CAAO,EAC/E,KAAK,aAAe8B,EACpB,KAAK,YAAc,WACZuM,EAAa,CAKpB,KAAK,YAAcA,CAAA,MAKvBvM,EAAOgE,EAAM,KAIX,GAAA,OAAO9F,EAAQ,gBAAoB,KAAe,OAAO8B,EAAS,KAAekM,IAAW,UAAW,CACrG,IAAAM,EAEA,GAAAd,GAAc,MAAQA,EAAW,mBAAqBxN,EAAQ,kBAA0D0N,GAAkB,gBAC5IY,EAAkBd,EAAW,aAE7Bc,EAAkB,OAAOtO,EAAQ,iBAAoB,WAAaA,EAAQ,gBAAA,EAAoBA,EAAQ,gBAElGA,EAAQ,QAAU,OAAOsO,EAAoB,IAC3C,GAAA,CACgBA,EAAAtO,EAAQ,OAAOsO,CAAe,EAChD,KAAK,YAAc,WACZD,EAAa,CAKpB,KAAK,YAAcA,CAAA,CAKrB,OAAOC,EAAoB,MACpBN,EAAA,UACTlM,EAAOF,EAA0C4L,GAAW,KAAMc,EAAiBtO,CAAO,EACtEkO,EAAA,GACtB,CAGE,KAAK,cACPjR,EAAQ,KAAK,YACb6E,EAAO,KAAK,aACZiM,EAAiB,KAAK,IAAI,EACjBC,EAAA,SAGX,MAAMO,EAAanP,IAAgB,WAC7BoP,EAAYR,IAAW,UACvBS,EAAUT,IAAW,QA4BpB,MA3BQ,CACb,OAAAA,EACA,YAAA5O,EACA,UAAAoP,EACA,UAAWR,IAAW,UACtB,QAAAS,EACA,iBAAkBD,GAAaD,EAC/B,KAAAzM,EACA,cAAAgM,EACA,MAAA7Q,EACA,eAAA8Q,EACA,aAAcjI,EAAM,kBACpB,cAAeA,EAAM,mBACrB,iBAAkBA,EAAM,iBACxB,UAAWA,EAAM,gBAAkB,GAAKA,EAAM,iBAAmB,EACjE,oBAAqBA,EAAM,gBAAkB8H,EAAkB,iBAAmB9H,EAAM,iBAAmB8H,EAAkB,iBAC7H,WAAAW,EACA,aAAcA,GAAc,CAACC,EAC7B,eAAgBC,GAAW3I,EAAM,gBAAkB,EACnD,SAAU1G,IAAgB,SAC1B,kBAAA8O,EACA,eAAAD,EACA,eAAgBQ,GAAW3I,EAAM,gBAAkB,EACnD,QAAS4I,EAAQzP,EAAOe,CAAO,EAC/B,QAAS,KAAK,QACd,OAAQ,KAAK,MACf,CACO,CAGT,aAAa6M,EAAe,CAC1B,MAAMW,EAAa,KAAK,cAClBmB,EAAa,KAAK,aAAa,KAAK,aAAc,KAAK,OAAO,EAIhE,GAHC,KAAA,mBAAqB,KAAK,aAAa,MAC5C,KAAK,qBAAuB,KAAK,QAE7B1N,EAAoB0N,EAAYnB,CAAU,EAC5C,OAGF,KAAK,cAAgBmB,EAErB,MAAMC,EAAuB,CAC3B,MAAO,EACT,EAEMC,EAAwB,IAAM,CAClC,GAAI,CAACrB,EACI,MAAA,GAGH,KAAA,CACJ,oBAAAsB,GACE,KAAK,QACHC,EAA2B,OAAOD,GAAwB,WAAaA,EAAwB,EAAAA,EAErG,GAAIC,IAA6B,OAAS,CAACA,GAA4B,CAAC,KAAK,aAAa,KACjF,MAAA,GAGT,MAAMC,EAAgB,IAAI,IAAID,GAA8D,KAAK,YAAY,EAEzG,OAAA,KAAK,QAAQ,kBACfC,EAAc,IAAI,OAAO,EAGpB,OAAO,KAAK,KAAK,aAAa,EAAE,KAAYtS,GAAA,CACjD,MAAMuS,EAAWvS,EAEV,OADS,KAAK,cAAcuS,CAAQ,IAAMzB,EAAWyB,CAAQ,GAClDD,EAAc,IAAIC,CAAQ,CAAA,CAC7C,CACH,EAEsCpC,GAAc,YAAe,IAASgC,MAC1ED,EAAqB,UAAY,IAGnC,KAAK,OAAO,CAAE,GAAGA,EACf,GAAG/B,CAAA,CACJ,CAAA,CAGH,aAAc,CACN,MAAA5N,EAAQ,KAAK,OAAO,cAAA,EAAgB,MAAM,KAAK,OAAQ,KAAK,OAAO,EAErE,GAAAA,IAAU,KAAK,aACjB,OAGF,MAAM8N,EAAY,KAAK,aACvB,KAAK,aAAe9N,EACpB,KAAK,yBAA2BA,EAAM,MACtC,KAAK,oBAAsB,KAAK,cAE5B,KAAK,iBACsB8N,GAAU,eAAe,IAAI,EAC1D9N,EAAM,YAAY,IAAI,EACxB,CAGF,cAAcwI,EAAQ,CACpB,MAAMoF,EAAgB,CAAC,EAEnBpF,EAAO,OAAS,UACJoF,EAAA,UAAY,CAACpF,EAAO,OACzBA,EAAO,OAAS,SAAW,CAACxE,EAAiBwE,EAAO,KAAK,IAClEoF,EAAc,QAAU,IAG1B,KAAK,aAAaA,CAAa,EAE3B,KAAK,gBACP,KAAK,aAAa,CACpB,CAGF,OAAOA,EAAe,CACpBrH,EAAc,MAAM,IAAM,CAExB,GAAIqH,EAAc,UAAW,CACvB,IAAAnE,EAAuBS,EAAeL,EAAuBH,GAEhED,GAAyBS,EAAgB,KAAK,SAAS,YAAc,MAAgBT,EAAsB,KAAKS,EAAe,KAAK,cAAc,IAAI,GACtJL,GAAyBH,EAAiB,KAAK,SAAS,YAAc,MAAgBG,EAAsB,KAAKH,EAAgB,KAAK,cAAc,KAAM,IAAI,CAAA,SACtJkE,EAAc,QAAS,CAC5B,IAAAvD,EAAuBP,EAAgBW,EAAwBH,GAElED,GAAyBP,EAAiB,KAAK,SAAS,UAAY,MAAgBO,EAAsB,KAAKP,EAAgB,KAAK,cAAc,KAAK,GACvJW,GAA0BH,EAAiB,KAAK,SAAS,YAAc,MAAgBG,EAAuB,KAAKH,EAAgB,OAAW,KAAK,cAAc,KAAK,CAAA,CAIrKsD,EAAc,WACX,KAAA,UAAU,QAAQ,CAAC,CACtB,SAAAhP,CAAA,IACI,CACJA,EAAS,KAAK,aAAa,CAAA,CAC5B,EAICgP,EAAc,OACX,KAAA,OAAO,cAAc,EAAE,OAAO,CACjC,MAAO,KAAK,aACZ,KAAM,wBAAA,CACP,CACH,CACD,CAAA,CAGL,CAEA,SAASqC,GAAkBjQ,EAAOe,EAAS,CACzC,OAAOA,EAAQ,UAAY,IAAS,CAACf,EAAM,MAAM,eAAiB,EAAEA,EAAM,MAAM,SAAW,SAAWe,EAAQ,eAAiB,GACjI,CAEA,SAAS2M,GAAmB1N,EAAOe,EAAS,CAC1C,OAAOkP,GAAkBjQ,EAAOe,CAAO,GAAKf,EAAM,MAAM,cAAgB,GAAK2N,EAAc3N,EAAOe,EAASA,EAAQ,cAAc,CACnI,CAEA,SAAS4M,EAAc3N,EAAOe,EAASmP,EAAO,CACxC,GAAAnP,EAAQ,UAAY,GAAO,CAC7B,MAAM5B,EAAQ,OAAO+Q,GAAU,WAAaA,EAAMlQ,CAAK,EAAIkQ,EAC3D,OAAO/Q,IAAU,UAAYA,IAAU,IAASsQ,EAAQzP,EAAOe,CAAO,CAAA,CAGjE,MAAA,EACT,CAEA,SAASiN,GAAsBhO,EAAO8N,EAAW/M,EAAS8M,EAAa,CACrE,OAAO9M,EAAQ,UAAY,KAAUf,IAAU8N,GAAaD,EAAY,UAAY,MAAW,CAAC9M,EAAQ,UAAYf,EAAM,MAAM,SAAW,UAAYyP,EAAQzP,EAAOe,CAAO,CAC/K,CAEA,SAAS0O,EAAQzP,EAAOe,EAAS,CACxB,OAAAf,EAAM,cAAce,EAAQ,SAAS,CAC9C,CAIA,SAASmN,GAAsClH,EAAUmJ,EAAkBpP,EAAS,CAOlF,OAAIA,EAAQ,iBACH,GAKLA,EAAQ,kBAAoB,OAIvBoP,EAAiB,kBAKrB,CAAAnO,EAAoBgF,EAAS,iBAAiB,EAAGmJ,CAAgB,CAMxE,CC1jBA,MAAMC,WAAyBzR,CAAa,CAC1C,YAAYT,EAAQ6C,EAAS,CAC3B,MAAO,EACP,KAAK,OAAS7C,EACd,KAAK,WAAW6C,CAAO,EACvB,KAAK,YAAa,EAClB,KAAK,aAAc,CACvB,CAEE,aAAc,CACZ,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,CACrC,CAEE,WAAWA,EAAS,CAClB,IAAIsP,EAEJ,MAAMxC,EAAc,KAAK,QACzB,KAAK,QAAU,KAAK,OAAO,uBAAuB9M,CAAO,EAEpDiB,EAAoB6L,EAAa,KAAK,OAAO,GAChD,KAAK,OAAO,iBAAkB,EAAC,OAAO,CACpC,KAAM,yBACN,SAAU,KAAK,gBACf,SAAU,IAClB,CAAO,GAGFwC,EAAwB,KAAK,kBAAoB,MAAgBA,EAAsB,WAAW,KAAK,OAAO,CACnH,CAEE,eAAgB,CACd,GAAI,CAAC,KAAK,eAAgB,CACxB,IAAIC,GAEHA,EAAyB,KAAK,kBAAoB,MAAgBA,EAAuB,eAAe,IAAI,CACnH,CACA,CAEE,iBAAiB9H,EAAQ,CACvB,KAAK,aAAY,EAEjB,MAAMoF,EAAgB,CACpB,UAAW,EACZ,EAEGpF,EAAO,OAAS,UAClBoF,EAAc,UAAY,GACjBpF,EAAO,OAAS,UACzBoF,EAAc,QAAU,IAG1B,KAAK,OAAOA,CAAa,CAC7B,CAEE,kBAAmB,CACjB,OAAO,KAAK,aAChB,CAEE,OAAQ,CACN,KAAK,gBAAkB,OACvB,KAAK,aAAc,EACnB,KAAK,OAAO,CACV,UAAW,EACjB,CAAK,CACL,CAEE,OAAO2C,EAAWxP,EAAS,CACzB,YAAK,cAAgBA,EAEjB,KAAK,iBACP,KAAK,gBAAgB,eAAe,IAAI,EAG1C,KAAK,gBAAkB,KAAK,OAAO,iBAAgB,EAAG,MAAM,KAAK,OAAQ,CAAE,GAAG,KAAK,QACjF,UAAW,OAAOwP,EAAc,IAAcA,EAAY,KAAK,QAAQ,SAC7E,CAAK,EACD,KAAK,gBAAgB,YAAY,IAAI,EAC9B,KAAK,gBAAgB,QAAS,CACzC,CAEE,cAAe,CACb,MAAM1J,EAAQ,KAAK,gBAAkB,KAAK,gBAAgB,MAAQF,GAAiB,EAC7ExF,EAAS,CAAE,GAAG0F,EAClB,UAAWA,EAAM,SAAW,UAC5B,UAAWA,EAAM,SAAW,UAC5B,QAASA,EAAM,SAAW,QAC1B,OAAQA,EAAM,SAAW,OACzB,OAAQ,KAAK,OACb,MAAO,KAAK,KACb,EACD,KAAK,cAAgB1F,CACzB,CAEE,OAAOJ,EAAS,CACdwF,EAAc,MAAM,IAAM,CAExB,GAAI,KAAK,eAAiB,KAAK,aAAY,GACzC,GAAIxF,EAAQ,UAAW,CACrB,IAAIyP,EAAuBC,EAAqBC,EAAwBC,GAEvEH,GAAyBC,EAAsB,KAAK,eAAe,YAAc,MAAgBD,EAAsB,KAAKC,EAAqB,KAAK,cAAc,KAAM,KAAK,cAAc,UAAW,KAAK,cAAc,OAAO,GAClOC,GAA0BC,EAAuB,KAAK,eAAe,YAAc,MAAgBD,EAAuB,KAAKC,EAAsB,KAAK,cAAc,KAAM,KAAM,KAAK,cAAc,UAAW,KAAK,cAAc,OAAO,CACvP,SAAmB5P,EAAQ,QAAS,CAC1B,IAAI6P,EAAwBC,EAAsBC,EAAwBC,GAEzEH,GAA0BC,EAAuB,KAAK,eAAe,UAAY,MAAgBD,EAAuB,KAAKC,EAAsB,KAAK,cAAc,MAAO,KAAK,cAAc,UAAW,KAAK,cAAc,OAAO,GACrOC,GAA0BC,EAAuB,KAAK,eAAe,YAAc,MAAgBD,EAAuB,KAAKC,EAAsB,OAAW,KAAK,cAAc,MAAO,KAAK,cAAc,UAAW,KAAK,cAAc,OAAO,CAC7P,EAIUhQ,EAAQ,WACV,KAAK,UAAU,QAAQ,CAAC,CACtB,SAAAnC,CACV,IAAc,CACJA,EAAS,KAAK,aAAa,CACrC,CAAS,CAET,CAAK,CACL,CAEA,CC9HA,SAASoS,GAAkBrQ,EAAU,CACnC,MAAO,CACL,YAAaA,EAAS,QAAQ,YAC9B,MAAOA,EAAS,KACjB,CACH,CAMA,SAASsQ,GAAejR,EAAO,CAC7B,MAAO,CACL,MAAOA,EAAM,MACb,SAAUA,EAAM,SAChB,UAAWA,EAAM,SAClB,CACH,CAEA,SAASkR,GAA+BvQ,EAAU,CAChD,OAAOA,EAAS,MAAM,QACxB,CACA,SAASwQ,GAA4BnR,EAAO,CAC1C,OAAOA,EAAM,MAAM,SAAW,SAChC,CACA,SAASoR,GAAUlT,EAAQ6C,EAAU,GAAI,CACvC,MAAMsQ,EAAY,CAAE,EACdC,EAAU,CAAE,EAElB,GAAIvQ,EAAQ,qBAAuB,GAAO,CACxC,MAAMwQ,EAA0BxQ,EAAQ,yBAA2BmQ,GACnEhT,EAAO,iBAAkB,EAAC,OAAM,EAAG,QAAQyC,GAAY,CACjD4Q,EAAwB5Q,CAAQ,GAClC0Q,EAAU,KAAKL,GAAkBrQ,CAAQ,CAAC,CAElD,CAAK,CACL,CAEE,GAAII,EAAQ,mBAAqB,GAAO,CACtC,MAAMyQ,EAAuBzQ,EAAQ,sBAAwBoQ,GAC7DjT,EAAO,cAAe,EAAC,OAAM,EAAG,QAAQ8B,GAAS,CAC3CwR,EAAqBxR,CAAK,GAC5BsR,EAAQ,KAAKL,GAAejR,CAAK,CAAC,CAE1C,CAAK,CACL,CAEE,MAAO,CACL,UAAAqR,EACA,QAAAC,CACD,CACH,CACA,SAASG,GAAQvT,EAAQwT,EAAiB3Q,EAAS,CACjD,GAAI,OAAO2Q,GAAoB,UAAYA,IAAoB,KAC7D,OAGF,MAAMC,EAAgBzT,EAAO,iBAAkB,EACzCgP,EAAahP,EAAO,gBAEpBmT,EAAYK,EAAgB,WAAa,GAEzCJ,EAAUI,EAAgB,SAAW,CAAE,EAC7CL,EAAU,QAAQO,GAAsB,CACtC,IAAIC,EAEJF,EAAc,MAAMzT,EAAQ,CAAE,GAAI6C,GAAW,OAAiB8Q,EAAwB9Q,EAAQ,iBAAmB,KAA7D,OAA6E8Q,EAAsB,UACrJ,YAAaD,EAAmB,WACtC,EAAOA,EAAmB,KAAK,CAC/B,CAAG,EACDN,EAAQ,QAAQ,CAAC,CACf,SAAAjR,EACA,MAAAwG,EACA,UAAAmC,CACJ,IAAQ,CACJ,IAAI8I,EAEJ,MAAM9R,EAAQkN,EAAW,IAAIlE,CAAS,EAEtC,GAAIhJ,EAAO,CACT,GAAIA,EAAM,MAAM,cAAgB6G,EAAM,cAAe,CAGnD,KAAM,CACJ,YAAakL,EACb,GAAGC,CACb,EAAYnL,EACJ7G,EAAM,SAASgS,CAAoB,CAC3C,CAEM,MACD,CAGD9E,EAAW,MAAMhP,EAAQ,CAAE,GAAI6C,GAAW,OAAiB+Q,EAAyB/Q,EAAQ,iBAAmB,KAA9D,OAA8E+Q,EAAuB,QACpJ,SAAAzR,EACA,UAAA2I,CACD,EAED,CAAE,GAAGnC,EACH,YAAa,MACnB,CAAK,CACL,CAAG,CACH,CCtGA,MAAMoL,GAAuBC,GAAsB,qBCA7CC,GAAoCC,EAAAA,cAAc,MAAS,EAC3DC,GAA+CD,EAAA,cAAc,EAAK,EAQxE,SAASE,GAAsBzK,EAAS0K,EAAgB,CACtD,OAAI1K,IAIA0K,GAAkB,OAAO,OAAW,KACjC,OAAO,0BACV,OAAO,wBAA0BJ,IAG5B,OAAO,yBAGTA,GACT,CAEA,MAAMK,GAAiB,CAAC,CACtB,QAAA3K,CACF,EAAI,KAAO,CACH,MAAA4K,EAAcC,EAAAA,WAAiBJ,GAAsBzK,EAAS6K,EAAM,WAAWL,EAAyB,CAAC,CAAC,EAEhH,GAAI,CAACI,EACG,MAAA,IAAI,MAAM,wDAAwD,EAGnE,OAAAA,CACT,EACME,GAAsB,CAAC,CAC3B,OAAAzU,EACA,SAAA0U,EACA,QAAA/K,EACA,eAAA0K,EAAiB,EACnB,IAAM,CACJM,EAAAA,UAAgB,KACd3U,EAAO,MAAM,EACN,IAAM,CACXA,EAAO,QAAQ,CACjB,GACC,CAACA,CAAM,CAAC,EAML,MAAA4U,EAAUR,GAAsBzK,EAAS0K,CAAc,EACzC,OAAAQ,EAAoB,cAAAV,GAA0B,SAAU,CAC1E,MAAO,CAACxK,GAAW0K,CAAA,EACLQ,EAAoB,cAAAD,EAAQ,SAAU,CACpD,MAAO5U,CACT,EAAG0U,CAAQ,CAAC,CACd,EC3DMI,GAAkCZ,EAAmB,cAAC,EAAK,EAC3Da,GAAiB,IAAMP,EAAAA,WAAiBM,EAAkB,EACpCA,GAAmB,SCF/C,SAASE,IAAc,CACrB,IAAIC,EAAU,GACd,MAAO,CACL,WAAY,IAAM,CAChBA,EAAU,EACX,EACD,MAAO,IAAM,CACXA,EAAU,EACX,EACD,QAAS,IACAA,CAEV,CACH,CAEA,MAAMC,GAA8ChB,EAAAA,cAAoBc,GAAW,CAAE,EAE/EG,GAA6B,IAAMX,EAAgB,WAACU,EAA8B,ECpBxF,SAASE,GAAiBC,EAAmB9U,EAAQ,CAEnD,OAAI,OAAO8U,GAAsB,WACxBA,EAAkB,GAAG9U,CAAM,EAG7B,CAAC,CAAC8U,CACX,CCAA,SAASC,GAAYhU,EAAMC,EAAMC,EAAM,CACrC,MAAMqB,EAAUnB,GAAkBJ,EAAMC,EAAMC,CAAI,EAC5C+S,EAAcD,GAAe,CACjC,QAASzR,EAAQ,OACrB,CAAG,EACK,CAACiG,CAAQ,EAAIyM,EAAc,SAAC,IAAM,IAAIrD,GAAiBqC,EAAa1R,CAAO,CAAC,EAClF8R,EAAAA,UAAgB,IAAM,CACpB7L,EAAS,WAAWjG,CAAO,CAC/B,EAAK,CAACiG,EAAUjG,CAAO,CAAC,EACtB,MAAMI,EAAS8Q,GAAqByB,cAAkBC,GAAiB3M,EAAS,UAAUT,EAAc,WAAWoN,CAAa,CAAC,EAAG,CAAC3M,CAAQ,CAAC,EAAG,IAAMA,EAAS,mBAAoB,IAAMA,EAAS,kBAAkB,EAC/M4M,EAASF,EAAAA,YAAkB,CAACnD,EAAWsD,IAAkB,CAC7D7M,EAAS,OAAOuJ,EAAWsD,CAAa,EAAE,MAAMxV,EAAI,CACxD,EAAK,CAAC2I,CAAQ,CAAC,EAEb,GAAI7F,EAAO,OAASmS,GAAiBtM,EAAS,QAAQ,iBAAkB,CAAC7F,EAAO,KAAK,CAAC,EACpF,MAAMA,EAAO,MAGf,MAAO,CAAE,GAAGA,EACV,OAAAyS,EACA,YAAazS,EAAO,MACrB,CACH,CAEA,SAAS9C,IAAO,CAAA,CCzBhB,MAAMyV,GAAsB,CAAC,QAAS,UAAW,SAAS,EAE1D,SAASC,GAAqBC,EAAW,CAChC,OAAAF,GAAoB,SAASE,CAAS,CAC/C,CASA,eAAeC,GAA0B,CACvC,YAAAxB,EACA,UAAAyB,EACA,OAAAC,EAAS,IAAO,GAAK,GAAK,GAC1B,OAAAC,EAAS,GACT,eAAAC,CACF,EAAG,CACG,GAAA,CACI,MAAAtW,EAAkB,MAAMmW,EAAU,cAAc,EAEtD,GAAInW,EACF,GAAIA,EAAgB,UAAW,CAC7B,MAAMuW,EAAU,KAAK,IAAI,EAAIvW,EAAgB,UAAYoW,EACnDI,EAASxW,EAAgB,SAAWqW,EAEtCE,GAAWC,EACbL,EAAU,aAAa,EAEfzC,GAAAgB,EAAa1U,EAAgB,YAAasW,CAAc,CAClE,MAEAH,EAAU,aAAa,OAGf,CAMZA,EAAU,aAAa,CAAA,CAE3B,CAOA,eAAeM,GAAuB,CACpC,YAAA/B,EACA,UAAAyB,EACA,OAAAE,EAAS,GACT,iBAAAK,CACF,EAAG,CACD,MAAMC,EAAgB,CACpB,OAAAN,EACA,UAAW,KAAK,IAAI,EACpB,YAAahD,GAAUqB,EAAagC,CAAgB,CACtD,EACM,MAAAP,EAAU,cAAcQ,CAAa,CAC7C,CAMA,SAASC,GAA4BC,EAAO,CAC1C,MAAMC,EAAwBD,EAAM,YAAY,cAAc,EAAE,UAAmBpR,GAAA,CAC7EuQ,GAAqBvQ,EAAM,IAAI,GACjCgR,GAAuBI,CAAK,CAC9B,CACD,EACKE,EAA2BF,EAAM,YAAY,iBAAiB,EAAE,UAAmBpR,GAAA,CACnFuQ,GAAqBvQ,EAAM,IAAI,GACjCgR,GAAuBI,CAAK,CAC9B,CACD,EACD,MAAO,IAAM,CACWC,EAAA,EACGC,EAAA,CAC3B,CACF,CAKA,SAASC,GAAmBH,EAAO,CACjC,IAAII,EAAkB,GAClBC,EAEJ,MAAMC,EAAc,IAAM,CACNF,EAAA,GAC+BC,IAA8B,CACjF,EAGME,EAAiBlB,GAA0BW,CAAK,EAAE,KAAK,IAAM,CAC5DI,IAEHC,EAAgCN,GAA4BC,CAAK,EACnE,CACD,EACM,MAAA,CAACM,EAAaC,CAAc,CACrC","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]}