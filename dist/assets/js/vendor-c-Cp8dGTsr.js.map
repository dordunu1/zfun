{"version":3,"file":"vendor-c-Cp8dGTsr.js","sources":["../../../node_modules/cookie/dist/index.js","../../../node_modules/clsx/dist/clsx.mjs","../../../node_modules/classnames/index.js","../../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../../node_modules/chart.js/dist/chart.js","../../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../../node_modules/copy-to-clipboard/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = parse;\nexports.serialize = serialize;\n/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\nconst __toString = Object.prototype.toString;\nconst NullObject = /* @__PURE__ */ (() => {\n    const C = function () { };\n    C.prototype = Object.create(null);\n    return C;\n})();\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nfunction parse(str, options) {\n    const obj = new NullObject();\n    const len = str.length;\n    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n    if (len < 2)\n        return obj;\n    const dec = options?.decode || decode;\n    let index = 0;\n    do {\n        const eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1)\n            break; // No more cookie pairs.\n        const colonIdx = str.indexOf(\";\", index);\n        const endIdx = colonIdx === -1 ? len : colonIdx;\n        if (eqIdx > endIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        const keyStartIdx = startIndex(str, index, eqIdx);\n        const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n        const key = str.slice(keyStartIdx, keyEndIdx);\n        // only assign once\n        if (obj[key] === undefined) {\n            let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n            let valEndIdx = endIndex(str, endIdx, valStartIdx);\n            const value = dec(str.slice(valStartIdx, valEndIdx));\n            obj[key] = value;\n        }\n        index = endIdx + 1;\n    } while (index < len);\n    return obj;\n}\nfunction startIndex(str, index, max) {\n    do {\n        const code = str.charCodeAt(index);\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\n            return index;\n    } while (++index < max);\n    return max;\n}\nfunction endIndex(str, index, min) {\n    while (index > min) {\n        const code = str.charCodeAt(--index);\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\n            return index + 1;\n    }\n    return min;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nfunction serialize(name, val, options) {\n    const enc = options?.encode || encodeURIComponent;\n    if (!cookieNameRegExp.test(name)) {\n        throw new TypeError(`argument name is invalid: ${name}`);\n    }\n    const value = enc(val);\n    if (!cookieValueRegExp.test(value)) {\n        throw new TypeError(`argument val is invalid: ${val}`);\n    }\n    let str = name + \"=\" + value;\n    if (!options)\n        return str;\n    if (options.maxAge !== undefined) {\n        if (!Number.isInteger(options.maxAge)) {\n            throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n        }\n        str += \"; Max-Age=\" + options.maxAge;\n    }\n    if (options.domain) {\n        if (!domainValueRegExp.test(options.domain)) {\n            throw new TypeError(`option domain is invalid: ${options.domain}`);\n        }\n        str += \"; Domain=\" + options.domain;\n    }\n    if (options.path) {\n        if (!pathValueRegExp.test(options.path)) {\n            throw new TypeError(`option path is invalid: ${options.path}`);\n        }\n        str += \"; Path=\" + options.path;\n    }\n    if (options.expires) {\n        if (!isDate(options.expires) ||\n            !Number.isFinite(options.expires.valueOf())) {\n            throw new TypeError(`option expires is invalid: ${options.expires}`);\n        }\n        str += \"; Expires=\" + options.expires.toUTCString();\n    }\n    if (options.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (options.secure) {\n        str += \"; Secure\";\n    }\n    if (options.partitioned) {\n        str += \"; Partitioned\";\n    }\n    if (options.priority) {\n        const priority = typeof options.priority === \"string\"\n            ? options.priority.toLowerCase()\n            : undefined;\n        switch (priority) {\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(`option priority is invalid: ${options.priority}`);\n        }\n    }\n    if (options.sameSite) {\n        const sameSite = typeof options.sameSite === \"string\"\n            ? options.sameSite.toLowerCase()\n            : options.sameSite;\n        switch (sameSite) {\n            case true:\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str) {\n    if (str.indexOf(\"%\") === -1)\n        return str;\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (e) {\n        return str;\n    }\n}\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val) {\n    return __toString.call(val) === \"[object Date]\";\n}\n//# sourceMappingURL=index.js.map","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.7\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","// Save global object in a variable\nvar __global__ =\n(typeof globalThis !== 'undefined' && globalThis) ||\n(typeof self !== 'undefined' && self) ||\n(typeof global !== 'undefined' && global);\n// Create an object that extends from __global__ without the fetch function\nvar __globalThis__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = __global__.DOMException\n}\nF.prototype = __global__; // Needed for feature detection on whatwg-fetch's code\nreturn new F();\n})();\n// Wraps whatwg-fetch with a function scope to hijack the global object\n// \"globalThis\" that's going to be patched\n(function(globalThis) {\n\nvar irrelevant = (function (exports) {\n\n  /* eslint-disable no-prototype-builtins */\n  var g =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof self !== 'undefined' && self) ||\n    // eslint-disable-next-line no-undef\n    (typeof global !== 'undefined' && global) ||\n    {};\n\n  var support = {\n    searchParams: 'URLSearchParams' in g,\n    iterable: 'Symbol' in g && 'iterator' in Symbol,\n    blob:\n      'FileReader' in g &&\n      'Blob' in g &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in g,\n    arrayBuffer: 'ArrayBuffer' in g\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n      throw new TypeError('Invalid character in header field name: \"' + name + '\"')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        if (header.length != 2) {\n          throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length)\n        }\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body._noBody) return\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);\n    var encoding = match ? match[1] : 'utf-8';\n    reader.readAsText(blob, encoding);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      /*\n        fetch-mock wraps the Response object in an ES6 Proxy to\n        provide useful test harness features such as flush. However, on\n        ES5 browsers without fetch or Proxy support pollyfills must be used;\n        the proxy-pollyfill is unable to proxy an attribute unless it exists\n        on the object before the Proxy is created. This change ensures\n        Response.bodyUsed exists on the instance, while maintaining the\n        semantic of setting Request.bodyUsed in the constructor before\n        _initBody is called.\n      */\n      // eslint-disable-next-line no-self-assign\n      this.bodyUsed = this.bodyUsed;\n      this._bodyInit = body;\n      if (!body) {\n        this._noBody = true;\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        var isConsumed = consumed(this);\n        if (isConsumed) {\n          return isConsumed\n        } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n          return Promise.resolve(\n            this._bodyArrayBuffer.buffer.slice(\n              this._bodyArrayBuffer.byteOffset,\n              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n            )\n          )\n        } else {\n          return Promise.resolve(this._bodyArrayBuffer)\n        }\n      } else if (support.blob) {\n        return this.blob().then(readBlobAsArrayBuffer)\n      } else {\n        throw new Error('could not read as ArrayBuffer')\n      }\n    };\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    if (!(this instanceof Request)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal || (function () {\n      if ('AbortController' in g) {\n        var ctrl = new AbortController();\n        return ctrl.signal;\n      }\n    }());\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n\n    if (this.method === 'GET' || this.method === 'HEAD') {\n      if (options.cache === 'no-store' || options.cache === 'no-cache') {\n        // Search for a '_' parameter in the query string\n        var reParamSearch = /([?&])_=[^&]*/;\n        if (reParamSearch.test(this.url)) {\n          // If it already exists then set the value with the current time\n          this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());\n        } else {\n          // Otherwise add a new '_' parameter to the end with the current time\n          var reQueryString = /\\?/;\n          this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();\n        }\n      }\n    }\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n    // https://github.com/github/fetch/issues/748\n    // https://github.com/zloirock/core-js/issues/751\n    preProcessedHeaders\n      .split('\\r')\n      .map(function(header) {\n        return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n      })\n      .forEach(function(line) {\n        var parts = line.split(':');\n        var key = parts.shift().trim();\n        if (key) {\n          var value = parts.join(':').trim();\n          try {\n            headers.append(key, value);\n          } catch (error) {\n            console.warn('Response ' + error.message);\n          }\n        }\n      });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!(this instanceof Response)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    if (this.status < 200 || this.status > 599) {\n      throw new RangeError(\"Failed to construct 'Response': The status provided (0) is outside the range [200, 599].\")\n    }\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 200, statusText: ''});\n    response.ok = false;\n    response.status = 0;\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = g.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        // This check if specifically for when a user fetches a file locally from the file system\n        // Only if the status is out of a normal range\n        if (request.url.indexOf('file://') === 0 && (xhr.status < 200 || xhr.status > 599)) {\n          options.status = 200;\n        } else {\n          options.status = xhr.status;\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        setTimeout(function() {\n          resolve(new Response(body, options));\n        }, 0);\n      };\n\n      xhr.onerror = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request failed'));\n        }, 0);\n      };\n\n      xhr.ontimeout = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request timed out'));\n        }, 0);\n      };\n\n      xhr.onabort = function() {\n        setTimeout(function() {\n          reject(new exports.DOMException('Aborted', 'AbortError'));\n        }, 0);\n      };\n\n      function fixUrl(url) {\n        try {\n          return url === '' && g.location.href ? g.location.href : url\n        } catch (e) {\n          return url\n        }\n      }\n\n      xhr.open(request.method, fixUrl(request.url), true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr) {\n        if (support.blob) {\n          xhr.responseType = 'blob';\n        } else if (\n          support.arrayBuffer\n        ) {\n          xhr.responseType = 'arraybuffer';\n        }\n      }\n\n      if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || (g.Headers && init.headers instanceof g.Headers))) {\n        var names = [];\n        Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n          names.push(normalizeName(name));\n          xhr.setRequestHeader(name, normalizeValue(init.headers[name]));\n        });\n        request.headers.forEach(function(value, name) {\n          if (names.indexOf(name) === -1) {\n            xhr.setRequestHeader(name, value);\n          }\n        });\n      } else {\n        request.headers.forEach(function(value, name) {\n          xhr.setRequestHeader(name, value);\n        });\n      }\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!g.fetch) {\n    g.fetch = fetch;\n    g.Headers = Headers;\n    g.Request = Request;\n    g.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__globalThis__);\n// This is a ponyfill, so...\n__globalThis__.fetch.ponyfill = true;\ndelete __globalThis__.fetch.polyfill;\n// Choose between native implementation (__global__) or custom implementation (__globalThis__)\nvar ctx = __global__.fetch ? __global__ : __globalThis__;\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n"],"names":["dist","parse","serialize","cookieNameRegExp","cookieValueRegExp","domainValueRegExp","pathValueRegExp","__toString","NullObject","C","str","options","obj","len","dec","decode","index","eqIdx","colonIdx","endIdx","keyStartIdx","startIndex","keyEndIdx","endIndex","key","valStartIdx","valEndIdx","value","max","code","min","name","val","enc","isDate","r","e","f","n","o","clsx","hasOwn","classNames","classes","i","arg","appendClass","parseValue","newClass","module","noop","uid","id","isNullOrUndef","isArray","type","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","callback","fn","args","thisArg","each","loopable","reverse","keys","_elementsEqual","a0","a1","ilen","v0","v1","clone","source","target","klen","k","isValidKey","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","v","_splitKey","parts","tmp","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","a","b","item","_isClickEvent","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","x","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","iScale","_parsed","axis","minDefined","maxDefined","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","changed","atEdge","t","elasticIn","elasticOut","effects","isPatternOrGradient","color","Color","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","remain","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","w","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","h","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","ret","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","p1","p2","_steppedInterpolation","_bezierInterpolation","cp1","cp2","c","d","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","spanGaps","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","l","st","dir","styleChanged","replacer","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","from","to","factor","c0","c1","Animation","cfg","currentValue","elapsed","duration","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","scale","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","parsed","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","names","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","pointStyle","label","legendItem","legend","getter","chartArea","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","reset","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","LineController","_dataset","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","lastPoint","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","j","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","center","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","horizontal","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","weight","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","entry","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","length","diff","reverseAlign","offsetFromEdge","edge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","startPixel","endPixel","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","minSize","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","axisID","fontSize","TypedRegistry","override","proto","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","clip","useClip","visible","dataIndex","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawBorder","borderWidth","borderJoinStyle","inner","ArcElement","chartX","chartY","rAdjust","_circumference","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","_segments","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_loop","_shouldApplyFill","_resolveTarget","propagate","fill","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","startValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","_args","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","ci","usePointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","ratio","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","INTERVALS","UNITS","sorter","input","adapter","parser","round","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","map","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","interpolate","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","curr","__global__","global","__globalThis__","F","globalThis","exports","g","support","isDataView","viewClasses","isArrayBufferView","normalizeName","normalizeValue","iteratorFor","iterator","Headers","headers","header","oldValue","consumed","fileReaderReady","reader","reject","readBlobAsArrayBuffer","blob","promise","readBlobAsText","match","encoding","readArrayBufferAsText","buf","view","chars","bufferClone","Body","rejected","isConsumed","methods","normalizeMethod","upcased","Request","ctrl","reParamSearch","reQueryString","form","bytes","split","parseHeaders","rawHeaders","preProcessedHeaders","error","Response","bodyInit","response","redirectStatuses","url","status","message","fetch","init","request","xhr","abortXhr","fixUrl","deselectCurrent","require$$0","clipboardToIE11Formatting","defaultMessage","copyKey","copy","debug","reselectPrevious","selection","mark","success","successful","err","copyToClipboard"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}