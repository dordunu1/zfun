{"version":3,"file":"index-BGqlxqNZ.js","sources":["../../../src/context/ThemeContext.jsx","../../../src/firebase/merchConfig.js","../../../src/context/MerchAuthContext.jsx","../../../src/components/admin/AdminLayout.jsx","../../../src/pages/admin/AdminDashboard.jsx","../../../src/context/WalletContext.js","../../../src/contracts/MerchPlatform.js","../../../src/pages/admin/AdminSales.jsx","../../../src/components/shared/VerificationCheckmark.jsx","../../../src/pages/admin/StoreVerification.jsx","../../../src/components/Sidebar.jsx","../../../src/components/NetworkSelector.jsx","../../../src/components/PriceTicker.jsx","../../../src/components/Header.jsx","../../../src/services/storage.js","../../../src/abi/NFTCollection.js","../../../src/services/firebase.js","../../../src/context/DeploymentsContext.jsx","../../../src/utils/ipfs.ts","../../../src/services/tokenTransfers.js","../../../src/components/CreateTokenModal.jsx","../../../src/config/contracts.js","../../../src/abi/NFTFactory.js","../../../src/services/metadata.ts","../../../src/components/CreateNFTModal.jsx","../../../src/components/FAQ.jsx","../../../src/context/UniswapVersionContext.jsx","../../../src/utils/explorer.js","../../../src/services/VolumeTracker.js","../../../src/services/uniswap.js","../../../src/services/chainlink.js","../../../src/hooks/useTokenPrices.js","../../../src/hooks/useUniswap.js","../../../src/components/CryptoSplash.jsx","../../../src/components/Dashboard.jsx","../../../src/components/FuturisticCard.jsx","../../../src/components/CollectionsList.jsx","../../../src/services/analytics.js","../../../src/components/analytics/tabs/RecentMints.jsx","../../../src/components/analytics/tabs/TopHolders.jsx","../../../src/utils/format.js","../../../src/utils/firebase.js","../../../src/components/avatars/MessageAvatar.jsx","../../../src/components/analytics/tabs/Chat.jsx","../../../src/components/analytics/tabs/VolumeMetrics.jsx","../../../src/components/analytics/AnalyticsTabs.jsx","../../../src/components/CollectionPage.jsx","../../../src/pages/HistoryPage.jsx","../../../src/pages/AccountPage.jsx","../../../src/components/dex/TokenSelectionModal.jsx","../../../src/services/erc20.js","../../../src/components/dex/TokenSwap.jsx","../../../src/services/unichain/uniswap.js","../../../src/hooks/useUnichain.js","../../../src/utils/tokens.js","../../../src/components/dex/unichain/shared/TokenSelectionModal.jsx","../../../src/components/dex/unichain/shared/TokenSelector.jsx","../../../src/components/dex/unichain/v2/TokenSwap.jsx","../../../src/components/dex/unichain/v3/TokenSwap.jsx","../../../src/components/dex/PoolCreation.jsx","../../../src/components/dex/unichain/v2/PoolCreation.jsx","../../../src/services/unichain/v3/positionManager.js","../../../src/components/dex/unichain/v3/PoolCreation.jsx","../../../src/components/dex/PoolSelectionModal.jsx","../../../src/components/dex/AddLiquidity.jsx","../../../src/components/dex/RemoveLiquidity.jsx","../../../src/components/dex/ManageLiquidity.jsx","../../../src/components/dex/unichain/shared/PoolSelectionModal.jsx","../../../src/components/dex/unichain/v2/AddLiquidity.jsx","../../../src/components/dex/unichain/v3/AddLiquidity.jsx","../../../src/components/dex/unichain/v2/RemoveLiquidity.jsx","../../../src/components/dex/unichain/v3/RemoveLiquidity.jsx","../../../src/components/dex/MyPools.jsx","../../../src/components/dex/unichain/v2/MyPools.jsx","../../../src/components/dex/unichain/v3/MyPools.jsx","../../../src/hooks/useUniswapVersion.js","../../../src/components/dex/unichain/shared/VersionToggle.jsx","../../../src/components/dex/unichain/v2/ManageLiquidity.jsx","../../../src/components/dex/unichain/v3/ManageLiquidity.jsx","../../../src/pages/ActivityPage.jsx","../../../src/services/bridgeGasEstimation.js","../../../src/pages/bridge/index.jsx","../../../src/pages/FeesTracker.jsx","../../../src/components/TokenInfo.jsx","../../../src/components/SnapshotViewer.jsx","../../../src/pages/MemeFactory.jsx","../../../src/App.jsx","../../../src/pages/merch/Login.jsx","../../../src/pages/merch/Signup.jsx","../../../src/pages/merch/BecomeSeller.jsx","../../../src/components/merch/ProtectedRoute.jsx","../../../src/components/merch/MerchStoreLayout.jsx","../../../src/components/merch/WithdrawalTermsModal.jsx","../../../src/pages/merch/SellerDashboard.jsx","../../../src/pages/merch/AddProduct.jsx","../../../src/pages/merch/Products.jsx","../../../src/pages/merch/EditProduct.jsx","../../../src/pages/merch/Sales.jsx","../../../src/pages/merch/OrdersReceived.jsx","../../../src/pages/merch/Settings.jsx","../../../src/components/shared/CountdownTimer.jsx","../../../src/components/merch/FeaturedDeals.jsx","../../../src/pages/merch/Browse.jsx","../../../src/components/reviews/ProductReviews.jsx","../../../src/pages/merch/ProductDetails.jsx","../../../src/pages/merch/Cart.jsx","../../../src/components/TrackingModal.jsx","../../../src/pages/merch/Orders.jsx","../../../src/pages/merch/Checkout.jsx","../../../src/pages/admin/AdminRecentWithdrawals.jsx","../../../src/pages/admin/AdminWithdrawals.jsx","../../../src/pages/admin/AdminSettings.jsx","../../../src/pages/admin/AdminRefunds.jsx","../../../src/pages/merch/SellerRefunds.jsx","../../../src/pages/merch/Refunds.jsx","../../../src/pages/merch/TermsAndConditions.jsx","../../../src/pages/merch/ForgotPassword.jsx","../../../src/pages/merch/ResetPassword.jsx","../../../src/pages/merch/Inbox.jsx","../../../src/pages/merch/SellerInbox.jsx","../../../src/pages/admin/StoresRevenue.jsx","../../../src/router.jsx","../../../src/main.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport function ThemeProvider({ children }) {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    // Check local storage or system preference\r\n    const savedMode = localStorage.getItem('darkMode');\r\n    if (savedMode !== null) {\r\n      return JSON.parse(savedMode);\r\n    }\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Update document class and local storage when isDarkMode changes\r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\r\n  }, [isDarkMode]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  const value = {\r\n    isDarkMode,\r\n    toggleTheme,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTheme() {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n}","import { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, connectAuthEmulator } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nimport { getAnalytics } from 'firebase/analytics';\n\n// Determine if we're running locally\nconst isDevelopment = window.location.hostname === 'localhost';\n\nconst firebaseConfig = {\n  apiKey: import.meta.env.VITE_MERCH_FIREBASE_API_KEY,\n  authDomain: isDevelopment ? import.meta.env.VITE_MERCH_FIREBASE_AUTH_DOMAIN : \"auth.token-factory.xyz\",\n  projectId: import.meta.env.VITE_MERCH_FIREBASE_PROJECT_ID,\n  storageBucket: import.meta.env.VITE_MERCH_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: import.meta.env.VITE_MERCH_FIREBASE_MESSAGING_SENDER_ID,\n  appId: import.meta.env.VITE_MERCH_FIREBASE_APP_ID,\n  measurementId: import.meta.env.VITE_MERCH_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase services\nconst app = initializeApp(firebaseConfig, 'merchStore');\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst storage = getStorage(app);\nconst analytics = getAnalytics(app);\n\n// Configure Google Auth Provider\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account',\n  auth_type: 'reauthenticate'\n});\n\nauth.useDeviceLanguage();\n\nexport { auth, db, storage, analytics, googleProvider }; ","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  signInWithPopup,\n  sendPasswordResetEmail\n} from 'firebase/auth';\nimport { doc, setDoc, getDoc, collection, query, where, getDocs } from 'firebase/firestore';\nimport { auth, db, googleProvider } from '../firebase/merchConfig';\nimport { toast } from 'react-hot-toast';\n\nconst MerchAuthContext = createContext();\n\nexport function MerchAuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const [cartCount, setCartCount] = useState(0);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (authUser) => {\n      if (authUser) {\n        const userRef = doc(db, 'users', authUser.uid);\n        const userDoc = await getDoc(userRef);\n        const userData = userDoc.exists() ? userDoc.data() : {};\n\n        const userObj = {\n          uid: authUser.uid,\n          email: authUser.email,\n          name: userData.name || null,\n          isSeller: userData.isSeller || false,\n          sellerId: userData.sellerId || null,\n          walletAddress: userData.walletAddress || null,\n          createdAt: userData.createdAt || new Date(),\n          updatedAt: new Date()\n        };\n\n        setUser(userObj);\n        setIsAdmin(userData.isAdmin || false);\n        setLoading(false);\n      } else {\n        setUser(null);\n        setIsAdmin(false);\n        setLoading(false);\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const fetchCartCount = async (userId) => {\n    try {\n      const q = query(collection(db, 'cart'), where('userId', '==', userId));\n      const querySnapshot = await getDocs(q);\n      setCartCount(querySnapshot.size);\n    } catch (error) {\n      console.error('Error fetching cart count:', error);\n      setCartCount(0);\n    }\n  };\n\n  const updateCartCount = async (userId) => {\n    await fetchCartCount(userId);\n  };\n\n  const signup = async (email, password, userData) => {\n    try {\n      const { user } = await createUserWithEmailAndPassword(auth, email, password);\n      // Create user profile in Firestore\n      await setDoc(doc(db, 'users', user.uid), {\n        ...userData,\n        email,\n        createdAt: new Date().toISOString(),\n        isSeller: false,\n        isBuyer: true,\n      });\n      \n      // Sign out immediately after creating account\n      await signOut(auth);\n      \n      return user;\n    } catch (error) {\n      console.error('Signup error:', error);\n      throw new Error(error.message);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const { user } = await signInWithEmailAndPassword(auth, email, password);\n      return user;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw new Error(error.message);\n    }\n  };\n\n  const loginWithGoogle = async () => {\n    try {\n      const { user } = await signInWithPopup(auth, googleProvider);\n      \n      // Check if user exists in Firestore\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      \n      if (!userDoc.exists()) {\n        // Create user profile if it doesn't exist\n        await setDoc(doc(db, 'users', user.uid), {\n          email: user.email,\n          name: user.displayName,\n          photoURL: user.photoURL,\n          createdAt: new Date().toISOString(),\n          isSeller: false,\n          isBuyer: true,\n          shippingAddress: {\n            street: '',\n            city: '',\n            state: '',\n            country: '',\n            postalCode: ''\n          }\n        });\n      }\n      \n      return user;\n    } catch (error) {\n      console.error('Google login error:', error);\n      if (error.code === 'auth/popup-closed-by-user') {\n        throw new Error('Sign in cancelled');\n      }\n      throw new Error(error.message);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      toast.success('Logged out successfully');\n    } catch (error) {\n      console.error('Logout error:', error);\n      throw new Error(error.message);\n    }\n  };\n\n  const resetPassword = async (email) => {\n    try {\n      await sendPasswordResetEmail(auth, email);\n      toast.success('Password reset email sent! Please check your inbox.');\n    } catch (error) {\n      console.error('Password reset error:', error);\n      throw new Error(error.message);\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    signup,\n    login,\n    loginWithGoogle,\n    logout,\n    resetPassword,\n    isAdmin,\n    cartCount,\n    updateCartCount\n  };\n\n  return (\n    <MerchAuthContext.Provider value={value}>\n      {!loading && children}\n    </MerchAuthContext.Provider>\n  );\n}\n\nexport function useMerchAuth() {\n  return useContext(MerchAuthContext);\n} ","import React, { useEffect } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { FiGrid, FiDollarSign, FiCreditCard, FiSettings, FiSun, FiMoon, FiRefreshCcw, FiCheckCircle, FiBarChart2 } from 'react-icons/fi';\n\nexport default function AdminLayout() {\n  const location = useLocation();\n  const [theme, setTheme] = React.useState(localStorage.getItem('admin-theme') || 'light');\n\n  useEffect(() => {\n    // Apply theme class to document root\n    document.documentElement.classList.remove('light', 'dark');\n    document.documentElement.classList.add(theme);\n    // Store theme preference\n    localStorage.setItem('admin-theme', theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  const isActive = (path) => {\n    return location.pathname === path;\n  };\n\n  const navItems = [\n    { path: '/admin', icon: <FiGrid />, label: 'Dashboard' },\n    { path: '/admin/withdrawals', icon: <FiCreditCard />, label: 'Withdrawals' },\n    { path: '/admin/refunds', icon: <FiRefreshCcw />, label: 'Refunds' },\n    { path: '/admin/sales', icon: <FiDollarSign />, label: 'Sales' },\n    { path: '/admin/stores-revenue', icon: <FiBarChart2 />, label: 'Stores Revenue' },\n    { path: '/admin/store-verification', icon: <FiCheckCircle />, label: 'Store Verification' },\n    { path: '/admin/settings', icon: <FiSettings />, label: 'Settings' },\n  ];\n\n  const navigation = [\n    { name: 'Dashboard', to: '/admin', icon: FiGrid },\n    { name: 'Sales', to: '/admin/sales', icon: FiDollarSign },\n    { name: 'Withdrawals', to: '/admin/withdrawals', icon: FiCreditCard },\n    { name: 'Refunds', to: '/admin/refunds', icon: FiRefreshCcw },\n    { name: 'Settings', to: '/admin/settings', icon: FiSettings },\n  ];\n\n  return (\n    <div className={`min-h-screen ${theme === 'dark' ? 'bg-gray-900' : 'bg-gray-50'}`}>\n      {/* Header */}\n      <header className={`${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'} shadow-sm border-b`}>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between h-16 items-center\">\n            <div className=\"flex items-center\">\n              <h1 className=\"text-xl font-bold text-[#FF1B6B]\">Admin Panel</h1>\n            </div>\n            <button\n              onClick={toggleTheme}\n              className={`p-2 rounded-lg ${\n                theme === 'dark'\n                  ? 'bg-gray-700 text-yellow-400 hover:bg-gray-600'\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n              } transition-colors duration-200`}\n              aria-label=\"Toggle theme\"\n            >\n              {theme === 'dark' ? <FiSun className=\"w-5 h-5\" /> : <FiMoon className=\"w-5 h-5\" />}\n            </button>\n          </div>\n        </div>\n      </header>\n\n      {/* Navigation */}\n      <nav className={`${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'} shadow-sm border-b`}>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex space-x-8 h-14\">\n            {navItems.map((item) => (\n              <Link\n                key={item.path}\n                to={item.path}\n                className={`inline-flex items-center px-1 pt-1 text-sm font-medium border-b-2 ${\n                  isActive(item.path)\n                    ? 'border-[#FF1B6B] text-[#FF1B6B]'\n                    : `border-transparent ${\n                        theme === 'dark'\n                          ? 'text-gray-400 hover:border-gray-600 hover:text-gray-300'\n                          : 'text-gray-500 hover:border-gray-300 hover:text-gray-700'\n                      }`\n                }`}\n              >\n                <span className=\"mr-2\">{item.icon}</span>\n                {item.label}\n              </Link>\n            ))}\n          </div>\n        </div>\n      </nav>\n\n      {/* Main Content */}\n      <main className={`max-w-7xl mx-auto py-6 sm:px-6 lg:px-8 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>\n        <Outlet />\n      </main>\n    </div>\n  );\n} ","import React, { useState, useEffect, useMemo } from 'react';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { Navigate } from 'react-router-dom';\nimport { FiDollarSign, FiUsers, FiCreditCard, FiShoppingBag, FiTrendingUp, FiGrid, FiList, FiSearch } from 'react-icons/fi';\nimport { collection, query, where, getDocs, orderBy, limit, startAfter } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { toast } from 'react-hot-toast';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { ethers } from 'ethers';\n\n// Get admin wallet from environment variable - same for all chains\nconst ADMIN_WALLET = import.meta.env.VITE_ADMIN_WALLET || \"0x5828D525fe00902AE22f2270Ac714616651894fF\";\n\nexport default function AdminDashboard() {\n  const { isAdmin } = useMerchAuth();\n  const [loading, setLoading] = useState(true);\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedStore, setSelectedStore] = useState('all');\n  const [stats, setStats] = useState({\n    totalSales: 0,\n    currentSales: 0,\n    totalRefunds: 0,\n    activeSellers: 0,\n    pendingWithdrawals: 0,\n    platformBalance: 0,\n    totalOrders: 0,\n    totalProducts: 0,\n    totalCustomers: 0,\n    platformFee: 0,\n    totalPlatformFees: 0,\n    withdrawnFees: 0,\n    totalEarnings: 0,\n    recentOrders: [],\n    topSellers: [],\n    salesByNetwork: {\n      unichain: 0,\n      polygon: 0\n    }\n  });\n  const [recentActivity, setRecentActivity] = useState([]);\n  const [orderViewType, setOrderViewType] = useState('list');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const ordersPerPage = 50;\n\n  const getUniqueStores = () => {\n    const stores = stats.recentOrders?.map(order => order.sellerName) || [];\n    return ['all', ...new Set(stores)];\n  };\n\n  const filteredOrders = useMemo(() => {\n    return stats.recentOrders?.filter(order => {\n      const matchesSearch = \n        (order.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        (order.buyerInfo?.name || '').toLowerCase().includes(searchTerm.toLowerCase()));\n      \n      const matchesStore = selectedStore === 'all' || order.sellerName === selectedStore;\n      \n      return matchesSearch && matchesStore;\n    });\n  }, [stats.recentOrders, searchTerm, selectedStore]);\n\n  const loadMoreOrders = async () => {\n    if (loadingMore || !hasMore) return;\n    \n    setLoadingMore(true);\n    try {\n      const lastOrder = stats.recentOrders[stats.recentOrders.length - 1];\n      const ordersQuery = query(\n        collection(db, 'orders'),\n        orderBy('createdAt', 'desc'),\n        startAfter(lastOrder.createdAt),\n        limit(ordersPerPage)\n      );\n      \n      const ordersSnapshot = await getDocs(ordersQuery);\n      const newOrders = await Promise.all(ordersSnapshot.docs.map(async doc => {\n        const orderData = {\n          id: doc.id,\n          ...doc.data()\n        };\n        \n        // Fetch seller data including flag\n        if (orderData.sellerId) {\n          const sellerQuery = query(\n            collection(db, 'sellers'),\n            where('uid', '==', orderData.sellerId)\n          );\n          const sellerSnapshot = await getDocs(sellerQuery);\n          if (!sellerSnapshot.empty) {\n            const sellerData = sellerSnapshot.docs[0].data();\n            orderData.sellerName = sellerData.storeName || sellerData.name || 'Unknown Seller';\n            orderData.sellerFlag = sellerData.country?.flag || null;\n          }\n        }\n        \n        return orderData;\n      }));\n\n      if (newOrders.length < ordersPerPage) {\n        setHasMore(false);\n      }\n\n      setStats(prev => ({\n        ...prev,\n        recentOrders: [...prev.recentOrders, ...newOrders]\n      }));\n      setCurrentPage(prev => prev + 1);\n    } catch (error) {\n      console.error('Error loading more orders:', error);\n      toast.error('Failed to load more orders');\n    } finally {\n      setLoadingMore(false);\n    }\n  };\n\n  const handleScroll = (e) => {\n    const { scrollTop, clientHeight, scrollHeight } = e.target;\n    if (scrollHeight - scrollTop <= clientHeight * 1.5) {\n      loadMoreOrders();\n    }\n  };\n\n  useEffect(() => {\n    // Check if wallet is already connected\n    const checkWalletConnection = async () => {\n      try {\n        const provider = await detectEthereumProvider();\n        if (provider) {\n          const accounts = await provider.request({ method: 'eth_accounts' });\n          if (accounts.length > 0 && accounts[0].toLowerCase() === ADMIN_WALLET.toLowerCase()) {\n            setWalletAddress(accounts[0]);\n            setWalletConnected(true);\n          }\n        }\n      } catch (error) {\n        console.error('Error checking wallet connection:', error);\n      }\n    };\n\n    checkWalletConnection();\n  }, []);\n\n  useEffect(() => {\n    // Listen for account changes\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', (accounts) => {\n        if (accounts.length === 0 || accounts[0].toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n          setWalletConnected(false);\n          setWalletAddress('');\n        } else {\n          setWalletAddress(accounts[0]);\n          setWalletConnected(true);\n        }\n      });\n    }\n  }, []);\n\n  const handleConnectWallet = async () => {\n    try {\n      const provider = await detectEthereumProvider();\n      if (!provider) {\n        toast.error('Please install MetaMask to connect your wallet');\n        return;\n      }\n\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      \n      if (accounts.length === 0) {\n        toast.error('Please connect your wallet');\n        return;\n      }\n\n      const walletAddress = accounts[0];\n      if (walletAddress.toLowerCase() === ADMIN_WALLET.toLowerCase()) {\n        setWalletAddress(walletAddress);\n        setWalletConnected(true);\n        toast.success('Wallet connected successfully');\n      } else {\n        toast.error('This wallet does not have admin privileges');\n        setWalletConnected(false);\n        setWalletAddress('');\n      }\n    } catch (error) {\n      console.error('Failed to connect wallet:', error);\n      if (error.code === 4001) {\n        toast.error('You rejected the connection request');\n      } else {\n        toast.error('Failed to connect wallet');\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (walletConnected && walletAddress.toLowerCase() === ADMIN_WALLET.toLowerCase()) {\n      fetchDashboardData();\n    }\n  }, [walletConnected, walletAddress]);\n\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      const sellersQuery = query(collection(db, 'sellers'));\n      const sellersSnapshot = await getDocs(sellersQuery);\n      \n      const withdrawalsQuery = query(\n        collection(db, 'withdrawals'),\n        where('status', 'in', ['completed', 'pending'])\n      );\n      const withdrawalsSnapshot = await getDocs(withdrawalsQuery);\n      \n      const ordersQuery = query(\n        collection(db, 'orders'),\n        orderBy('createdAt', 'desc'),\n        limit(ordersPerPage)\n      );\n      const ordersSnapshot = await getDocs(ordersQuery);\n\n      // Create a map of seller data for quick lookup\n      const sellersMap = {};\n      sellersSnapshot.docs.forEach(doc => {\n        const data = doc.data();\n        sellersMap[doc.id] = {\n          id: doc.id,\n          name: data.storeName || data.name || 'Unknown Store',\n          flag: data.country?.flag || null\n        };\n      });\n\n      // Process orders with seller data\n      const processedOrders = await Promise.all(ordersSnapshot.docs.map(async doc => {\n        const orderData = {\n          id: doc.id,\n          ...doc.data()\n        };\n        \n        // Add seller data from the map\n        if (orderData.sellerId && sellersMap[orderData.sellerId]) {\n          const sellerData = sellersMap[orderData.sellerId];\n          orderData.sellerName = sellerData.name;\n          orderData.sellerFlag = sellerData.flag;\n        }\n        \n        return orderData;\n      }));\n\n      setHasMore(processedOrders.length === ordersPerPage);\n\n      // Calculate platform-wide metrics\n      const validOrders = processedOrders.filter(order => order.status !== 'cancelled');\n      const activeOrders = validOrders.filter(order => \n        order.status === 'shipped' || \n        order.status === 'processing' || \n        order.status === 'completed' ||\n        order.status === 'delivered'\n      );\n      const refundedOrders = validOrders.filter(order => order.status === 'refunded');\n\n      // Calculate total sales from active orders (completed + processing + shipped + delivered)\n      const totalSales = activeOrders.reduce((sum, order) => sum + (Number(order.total) || 0), 0);\n\n      // Calculate total refunds (95% of refunded order totals)\n      const totalRefunds = refundedOrders.reduce((sum, order) => sum + ((Number(order.total) || 0) * 0.95), 0);\n\n      // Calculate platform fees (5% of total sales)\n      const currentPlatformFees = totalSales * 0.05;\n      const totalPlatformFees = [...activeOrders, ...refundedOrders].reduce((sum, order) => sum + (Number(order.total) * 0.05), 0);\n\n      // Get withdrawn fees from approved platform fee withdrawals\n      const withdrawnFees = withdrawalsSnapshot.docs\n        .filter(doc => doc.data().status === 'approved' && doc.data().type === 'platform_fee')\n        .reduce((sum, doc) => sum + doc.data().amount, 0);\n\n      // Create a map of seller withdrawals\n      const sellerWithdrawals = {};\n      withdrawalsSnapshot.docs.forEach(doc => {\n        const withdrawal = doc.data();\n        const sellerId = withdrawal.sellerId;\n        \n        if (!sellerWithdrawals[sellerId]) {\n          sellerWithdrawals[sellerId] = {\n            completed: 0,\n            pending: 0\n          };\n        }\n        \n        if (withdrawal.status === 'completed') {\n          sellerWithdrawals[sellerId].completed += withdrawal.amount || 0;\n        } else if (withdrawal.status === 'pending') {\n          sellerWithdrawals[sellerId].pending += withdrawal.amount || 0;\n        }\n      });\n\n      // Calculate seller statistics from active orders\n      const sellerStats = {};\n      activeOrders.forEach(order => {\n        const sellerId = order.sellerId;\n        const sellerName = sellersMap[sellerId]?.name || 'Unknown Store';\n        \n        if (!sellerStats[sellerId]) {\n          sellerStats[sellerId] = {\n            id: sellerId,\n            name: sellerName,\n            flag: sellersMap[sellerId]?.flag || null,\n            totalSales: 0,\n            netRevenue: 0,\n            ordersCount: 0\n          };\n        }\n        sellerStats[sellerId].totalSales += Number(order.total) || 0;\n        sellerStats[sellerId].ordersCount += 1;\n      });\n\n      // Calculate net revenue for each seller\n      Object.keys(sellerStats).forEach(sellerId => {\n        const withdrawals = sellerWithdrawals[sellerId] || { completed: 0, pending: 0 };\n        sellerStats[sellerId].netRevenue = Math.max(0, sellerStats[sellerId].totalSales - withdrawals.completed);\n      });\n\n      // Calculate current sales (sum of all sellers' available balances)\n      const currentSales = Object.values(sellerStats)\n        .reduce((sum, seller) => sum + seller.netRevenue, 0);\n\n      // Sort sellers by net revenue and get top 5\n      const topSellers = Object.values(sellerStats)\n        .sort((a, b) => b.netRevenue - a.netRevenue)\n        .slice(0, 5)\n        .map(seller => ({\n          id: seller.id,\n          name: seller.name,\n          flag: seller.flag,\n          total: Math.max(0, seller.netRevenue),\n          orders: seller.ordersCount\n        }));\n\n      // Get total products count\n      const productsQuery = query(collection(db, 'products'));\n      const productsSnapshot = await getDocs(productsQuery);\n      const totalProducts = productsSnapshot.size;\n\n      // Calculate sales by network from orders\n      let salesByNetwork = { unichain: 0, polygon: 0 };\n      activeOrders.forEach(order => {\n        if (order.paymentMethod?.network === 1301) {\n          salesByNetwork.unichain += Number(order.total) || 0;\n        } else if (order.paymentMethod?.network === 137) {\n          salesByNetwork.polygon += Number(order.total) || 0;\n        }\n      });\n\n      setStats({\n        totalSales,\n        currentSales,\n        totalRefunds,\n        activeSellers: sellersSnapshot.size,\n        pendingWithdrawals: withdrawalsSnapshot.docs.filter(doc => doc.data().status === 'pending').length,\n        platformBalance: currentPlatformFees,\n        totalOrders: processedOrders.length,\n        totalProducts,\n        totalCustomers: new Set([...activeOrders, ...refundedOrders].map(order => order.buyerId)).size,\n        platformFee: currentPlatformFees,\n        totalPlatformFees,\n        withdrawnFees,\n        totalEarnings: totalPlatformFees + withdrawnFees,\n        recentOrders: processedOrders,\n        topSellers,\n        salesByNetwork\n      });\n\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n      toast.error('Failed to load dashboard data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!isAdmin) {\n    return <Navigate to=\"/merch-store\" replace />;\n  }\n\n  if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-50 dark:bg-gray-900\">\n        <h1 className=\"text-2xl font-bold text-[#FF1B6B] mb-4\">Admin Authentication Required</h1>\n        <p className=\"text-gray-600 dark:text-gray-300 mb-6\">Please connect your admin wallet to access the dashboard</p>\n        <button\n          onClick={handleConnectWallet}\n          className=\"px-6 py-3 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#D4145A] transition-colors\"\n        >\n          Connect Wallet\n        </button>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"w-8 h-8 border-4 border-[#FF1B6B] border-t-transparent rounded-full animate-spin\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-6\">\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border-l-4 border-[#FF1B6B]\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">All-time Sales</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">${stats.totalSales.toFixed(2)}</p>\n              <p className=\"text-xs text-gray-400 dark:text-gray-500\">Total volume (excl. refunds)</p>\n            </div>\n            <FiTrendingUp className=\"text-3xl text-[#FF1B6B]\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border-l-4 border-[#FF1B6B]\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Current Sales</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">${Math.max(0, stats.currentSales).toFixed(2)}</p>\n              <p className=\"text-xs text-gray-400 dark:text-gray-500\">Available for withdrawal</p>\n            </div>\n            <FiDollarSign className=\"text-3xl text-[#FF1B6B]\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border-l-4 border-red-500\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Refunds</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">${stats.totalRefunds.toFixed(2)}</p>\n              <p className=\"text-xs text-gray-400 dark:text-gray-500\">Refunded amount (excl. platform fees)</p>\n            </div>\n            <FiCreditCard className=\"text-3xl text-red-500\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border-l-4 border-[#FF1B6B]\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">All-time Platform Fees</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">${stats.totalPlatformFees.toFixed(2)}</p>\n              <p className=\"text-xs text-gray-400 dark:text-gray-500\">Total platform fees (incl. withdrawn)</p>\n            </div>\n            <FiTrendingUp className=\"text-3xl text-[#FF1B6B]\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border-l-4 border-[#FF1B6B]\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Current Platform Fees</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">${stats.platformFee.toFixed(2)}</p>\n              <p className=\"text-xs text-gray-400 dark:text-gray-500\">Available for withdrawal</p>\n            </div>\n            <FiDollarSign className=\"text-3xl text-[#FF1B6B]\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border-l-4 border-[#FF1B6B]\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Active Sellers</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.activeSellers}</p>\n              <p className=\"text-xs text-gray-400 dark:text-gray-500\">{stats.totalProducts} products listed</p>\n            </div>\n            <FiUsers className=\"text-3xl text-[#FF1B6B]\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border-l-4 border-[#FF1B6B]\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Orders</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.totalOrders}</p>\n              <p className=\"text-xs text-gray-400 dark:text-gray-500\">All-time orders</p>\n            </div>\n            <FiShoppingBag className=\"text-3xl text-[#FF1B6B]\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border-l-4 border-[#FF1B6B]\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Products</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.totalProducts}</p>\n              <p className=\"text-xs text-gray-400 dark:text-gray-500\">Listed products</p>\n            </div>\n            <FiGrid className=\"text-3xl text-[#FF1B6B]\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border-l-4 border-[#FF1B6B]\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Customers</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.totalCustomers}</p>\n              <p className=\"text-xs text-gray-400 dark:text-gray-500\">Unique buyers</p>\n            </div>\n            <FiUsers className=\"text-3xl text-[#FF1B6B]\" />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg\">\n          <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Sales by Network</h2>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-3\">\n                <img src=\"/unichain-logo.png\" alt=\"Unichain\" className=\"w-6 h-6 object-contain\" />\n                <span className=\"text-gray-600 dark:text-gray-300\">Unichain</span>\n              </div>\n              <span className=\"font-medium text-gray-900 dark:text-white\">\n                ${stats.salesByNetwork.unichain.toFixed(2)}\n              </span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-3\">\n                <img src=\"/polygon.png\" alt=\"Polygon\" className=\"w-6 h-6 object-contain\" />\n                <span className=\"text-gray-600 dark:text-gray-300\">Polygon</span>\n              </div>\n              <span className=\"font-medium text-gray-900 dark:text-white\">\n                ${stats.salesByNetwork.polygon.toFixed(2)}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg\">\n          <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Top Sellers</h2>\n          <div className=\"space-y-4\">\n            {stats.topSellers.map((seller, index) => (\n              <div key={seller.id} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"w-6 h-6 rounded-full bg-[#FF1B6B] flex items-center justify-center text-white text-sm\">\n                    {index + 1}\n                  </span>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-gray-600 dark:text-gray-300\">{seller.name}</span>\n                    {seller.flag && (\n                      <img \n                        src={seller.flag}\n                        alt=\"Seller country flag\"\n                        className=\"w-3.5 h-2.5 object-cover rounded-[2px] shadow-sm\"\n                      />\n                    )}\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <span className=\"font-medium text-gray-900 dark:text-white\">\n                    ${seller.total.toFixed(2)}\n                  </span>\n                  <p className=\"text-xs text-gray-400 dark:text-gray-500\">\n                    {seller.orders} orders\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 mb-8\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Recent Orders</h3>\n          <div className=\"flex items-center gap-4\">\n            <select\n              value={selectedStore}\n              onChange={(e) => setSelectedStore(e.target.value)}\n              className=\"px-3 py-2 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 border border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#FF1B6B]\"\n            >\n              {getUniqueStores().map((store) => (\n                <option key={store} value={store}>\n                  {store === 'all' ? 'All Stores' : store}\n                </option>\n              ))}\n            </select>\n\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                placeholder=\"Search by Order ID or Customer\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10 pr-4 py-2 rounded-md text-sm bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 border border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] w-64\"\n              />\n              <svg\n                className=\"absolute left-3 top-2.5 h-5 w-5 text-gray-500 dark:text-gray-400\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                />\n              </svg>\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <button\n                onClick={() => setOrderViewType('list')}\n                className={`p-2 rounded-lg transition-colors ${\n                  orderViewType === 'list'\n                    ? 'bg-[#FF1B6B] text-white'\n                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\n                }`}\n              >\n                <FiList className=\"w-5 h-5\" />\n              </button>\n              <button\n                onClick={() => setOrderViewType('grid')}\n                className={`p-2 rounded-lg transition-colors ${\n                  orderViewType === 'grid'\n                    ? 'bg-[#FF1B6B] text-white'\n                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\n                }`}\n              >\n                <FiGrid className=\"w-5 h-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {orderViewType === 'list' ? (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    Order ID\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    Seller\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    Customer\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    Amount\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                    Date\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                {filteredOrders?.map((order) => (\n                  <tr key={order.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\n                      {order.id.slice(-6)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\n                      <div className=\"flex items-center gap-2\">\n                        <span>{order.sellerName}</span>\n                        {order.sellerFlag && (\n                          <img \n                            src={order.sellerFlag}\n                            alt=\"Seller country flag\"\n                            className=\"w-3.5 h-2.5 object-cover rounded-[2px] shadow-sm\"\n                          />\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\n                      <div className=\"flex items-center gap-2\">\n                        <span>{order.buyerInfo?.name || 'Anonymous'}</span>\n                        {order.flag && (\n                          <img \n                            src={order.flag}\n                            alt={typeof order.shippingAddress?.country === 'object' \n                              ? order.shippingAddress?.country.name \n                              : order.shippingAddress?.country}\n                            className=\"w-3.5 h-2.5 object-cover rounded-[2px] shadow-sm\"\n                          />\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\n                      ${order.total?.toFixed(2)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        order.status === 'completed' ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200' :\n                        order.status === 'shipped' ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200' :\n                        order.status === 'processing' ? 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200' :\n                        order.status === 'cancelled' ? 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200' :\n                        order.status === 'refunded' ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200' :\n                        order.status === 'delivered' ? 'bg-orange-100 dark:bg-orange-900 text-orange-600 dark:text-orange-200' :\n                        'bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200'\n                      }`}>\n                        {order.status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\n                      {order.createdAt?.toDate ? new Date(order.createdAt.toDate()).toLocaleString() : new Date(order.createdAt).toLocaleString()}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div \n            className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4 overflow-y-auto\"\n            style={{ maxHeight: '600px' }}\n            onScroll={handleScroll}\n          >\n            {filteredOrders?.map((order) => (\n              <div\n                key={order.id}\n                className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg space-y-3\"\n              >\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                      Order #{order.id.slice(-6)}\n                    </p>\n                    <p className=\"text-xs text-gray-400 dark:text-gray-500\">\n                      {order.createdAt?.toDate ? new Date(order.createdAt.toDate()).toLocaleString() : new Date(order.createdAt).toLocaleString()}\n                    </p>\n                  </div>\n                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                    order.status === 'completed' ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200' :\n                    order.status === 'shipped' ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200' :\n                    order.status === 'processing' ? 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200' :\n                    order.status === 'cancelled' ? 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200' :\n                    order.status === 'refunded' ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200' :\n                    order.status === 'delivered' ? 'bg-orange-100 dark:bg-orange-900 text-orange-600 dark:text-orange-200' :\n                    'bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200'\n                  }`}>\n                    {order.status}\n                  </span>\n                </div>\n\n                <div className=\"border-t border-b border-gray-200 dark:border-gray-600 py-3 space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">Customer</span>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                        {order.buyerInfo?.name || 'Anonymous'}\n                      </span>\n                      {order.flag && (\n                        <img \n                          src={order.flag}\n                          alt=\"Buyer country flag\"\n                          className=\"w-3.5 h-2.5 object-cover rounded-[2px] shadow-sm\"\n                        />\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">Seller</span>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                        {order.sellerName}\n                      </span>\n                      {order.sellerFlag && (\n                        <img \n                          src={order.sellerFlag}\n                          alt=\"Seller country flag\"\n                          className=\"w-3.5 h-2.5 object-cover rounded-[2px] shadow-sm\"\n                        />\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">Total Amount</span>\n                  <span className=\"text-sm font-bold text-gray-900 dark:text-white\">\n                    ${order.total?.toFixed(2)}\n                  </span>\n                </div>\n              </div>\n            ))}\n            {loadingMore && (\n              <div className=\"col-span-full flex justify-center py-4\">\n                <div className=\"w-6 h-6 border-2 border-[#FF1B6B] border-t-transparent rounded-full animate-spin\" />\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} ","import { useAccount, useNetwork, usePublicClient, useWalletClient } from 'wagmi';\n\nexport function useWallet() {\n  const { address, isConnected } = useAccount();\n  const { chain } = useNetwork();\n  const publicClient = usePublicClient();\n  const { data: walletClient } = useWalletClient();\n\n  return {\n    account: address,\n    isConnected,\n    chain,\n    provider: publicClient,\n    signer: walletClient\n  };\n} ","import { ethers } from 'ethers';\n\nexport const NETWORK_NAMES = {\n  '1301': 'Unichain Sepolia',\n  '137': 'Polygon Mainnet'\n};\n\nexport const SUPPORTED_TOKENS = {\n  '1301': {\n    'USDT': import.meta.env.VITE_UNICHAIN_USDT_ADDRESS,\n    'USDC': import.meta.env.VITE_UNICHAIN_USDC_ADDRESS\n  },\n  '137': {\n    'USDT': import.meta.env.VITE_USDT_ADDRESS_POLYGON,\n    'USDC': import.meta.env.VITE_USDC_ADDRESS_POLYGON\n  }\n};\n\nexport const ABI = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\"indexed\": true, \"internalType\": \"uint256\", \"name\": \"orderId\", \"type\": \"uint256\"},\n      {\"indexed\": true, \"internalType\": \"address\", \"name\": \"buyer\", \"type\": \"address\"},\n      {\"indexed\": true, \"internalType\": \"address\", \"name\": \"seller\", \"type\": \"address\"},\n      {\"indexed\": false, \"internalType\": \"address\", \"name\": \"token\", \"type\": \"address\"},\n      {\"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\"}\n    ],\n    \"name\": \"OrderCreated\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\"internalType\": \"address\",\"name\": \"_seller\",\"type\": \"address\"},\n      {\"internalType\": \"address\",\"name\": \"_token\",\"type\": \"address\"},\n      {\"internalType\": \"uint256\",\"name\": \"_amount\",\"type\": \"uint256\"}\n    ],\n    \"name\": \"createOrder\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\"internalType\": \"address\",\"name\": \"_token\",\"type\": \"address\"},\n      {\"internalType\": \"uint256\",\"name\": \"_amount\",\"type\": \"uint256\"}\n    ],\n    \"name\": \"requestWithdrawal\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\"internalType\": \"address\",\"name\": \"_seller\",\"type\": \"address\"},\n      {\"internalType\": \"address\",\"name\": \"_token\",\"type\": \"address\"},\n      {\"internalType\": \"uint256\",\"name\": \"_amount\",\"type\": \"uint256\"}\n    ],\n    \"name\": \"approveWithdrawal\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\"internalType\": \"uint256\",\"name\": \"_orderId\",\"type\": \"uint256\"},\n      {\"internalType\": \"address\",\"name\": \"_buyer\",\"type\": \"address\"},\n      {\"internalType\": \"address\",\"name\": \"_seller\",\"type\": \"address\"},\n      {\"internalType\": \"uint256\",\"name\": \"_amount\",\"type\": \"uint256\"}\n    ],\n    \"name\": \"processRefund\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"pause\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"unpause\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [{\"internalType\": \"address\",\"name\": \"\",\"type\": \"address\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"paused\",\n    \"outputs\": [{\"internalType\": \"bool\",\"name\": \"\",\"type\": \"bool\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{\"internalType\": \"address\",\"name\": \"\",\"type\": \"address\"},{\"internalType\": \"address\",\"name\": \"\",\"type\": \"address\"}],\n    \"name\": \"sellerBalances\",\n    \"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\n    \"name\": \"orders\",\n    \"outputs\": [\n      {\"internalType\": \"uint256\",\"name\": \"orderId\",\"type\": \"uint256\"},\n      {\"internalType\": \"address\",\"name\": \"buyer\",\"type\": \"address\"},\n      {\"internalType\": \"address\",\"name\": \"seller\",\"type\": \"address\"},\n      {\"internalType\": \"address\",\"name\": \"token\",\"type\": \"address\"},\n      {\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"},\n      {\"internalType\": \"bool\",\"name\": \"isCompleted\",\"type\": \"bool\"},\n      {\"internalType\": \"uint256\",\"name\": \"timestamp\",\"type\": \"uint256\"},\n      {\"internalType\": \"bool\",\"name\": \"isRefunded\",\"type\": \"bool\"}\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\"internalType\": \"address\",\"name\": \"_token\",\"type\": \"address\"},\n      {\"internalType\": \"uint256\",\"name\": \"_amount\",\"type\": \"uint256\"}\n    ],\n    \"name\": \"withdrawPlatformFees\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\n\nexport const getContractAddress = (chainId) => {\n  const envKey = `VITE_MERCH_PLATFORM_ADDRESS_${chainId}`;\n  const address = import.meta.env[envKey];\n  if (!address) {\n    console.warn(`No contract address found for chain ${chainId}. Make sure ${envKey} is set in your .env file.`);\n    return null;\n  }\n  return address;\n};\n\nexport const getMerchPlatformContract = (provider, chainId) => {\n  try {\n    const address = getContractAddress(chainId);\n    if (!address) {\n      return null;\n    }\n    \n    if (!ethers.isAddress(address)) {\n      console.warn(`Invalid contract address for chain ${chainId}: ${address}`);\n      return null;\n    }\n\n    const contract = new ethers.Contract(address, ABI, provider);\n    Object.defineProperty(contract, 'address', {\n      value: address,\n      writable: false,\n      configurable: false\n    });\n    return contract;\n  } catch (error) {\n    console.warn(`Error creating contract instance for chain ${chainId}:`, error);\n    return null;\n  }\n};\n\nexport const getTokenContract = (provider, chainId, tokenSymbol) => {\n  const tokenAddress = SUPPORTED_TOKENS[chainId]?.[tokenSymbol];\n  if (!tokenAddress) throw new Error(`Unsupported token ${tokenSymbol} on chain ${chainId}`);\n  if (!ethers.isAddress(tokenAddress)) {\n    throw new Error(`Invalid token address: ${tokenAddress}`);\n  }\n\n  const tokenABI = [\n    \"function approve(address spender, uint256 amount) external returns (bool)\",\n    \"function allowance(address owner, address spender) external view returns (uint256)\",\n    \"function balanceOf(address account) external view returns (uint256)\"\n  ];\n\n  const contract = new ethers.Contract(tokenAddress, tokenABI, provider);\n  Object.defineProperty(contract, 'address', {\n    value: tokenAddress,\n    writable: false,\n    configurable: false\n  });\n  return contract;\n};\n\nexport const formatTokenAmount = (amount, decimals = 6) => {\n  return ethers.formatUnits(amount, decimals);\n};\n\nexport const parseTokenAmount = (amount, decimals = 6) => {\n  return ethers.parseUnits(amount.toString(), decimals);\n};\n\nexport const getPlatformBalances = async (contract, network) => {\n  try {\n    const tokens = SUPPORTED_TOKENS[network];\n    const balances = {};\n    \n    for (const [symbol, address] of Object.entries(tokens)) {\n      const totalBalance = await contract.platformBalance(address);\n      const fees = await contract.platformFees(address);\n      \n      balances[symbol] = {\n        total: parseFloat(formatTokenAmount(totalBalance)),\n        fees: parseFloat(formatTokenAmount(fees)),\n        available: parseFloat(formatTokenAmount(totalBalance.sub(fees)))\n      };\n    }\n    \n    return balances;\n  } catch (error) {\n    console.error('Error getting platform balances:', error);\n    return null;\n  }\n}; ","import React, { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, orderBy, getDoc, doc } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { FiTrendingUp, FiDollarSign, FiShoppingBag, FiUsers, FiAlertTriangle, FiRefreshCw } from 'react-icons/fi';\nimport { useAccount } from 'wagmi';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { toast } from 'react-hot-toast';\nimport { useTheme } from '../../context/ThemeContext';\nimport { useWallet } from '../../context/WalletContext';\nimport { getContractAddress } from '../../contracts/MerchPlatform';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\n\n// Get admin wallet from environment variable - same for all chains\nconst ADMIN_WALLET = import.meta.env.VITE_ADMIN_WALLET || \"0x5828D525fe00902AE22f2270Ac714616651894fF\";\n\nexport default function AdminSales() {\n  const [salesData, setSalesData] = useState({\n    totalRevenue: 0,\n    totalRefunds: 0,\n    totalOrders: 0,\n    averageOrderValue: 0,\n    uniqueCustomers: 0,\n    tokenSales: {\n      USDT: { total: 0, refunds: 0 },\n      USDC: { total: 0, refunds: 0 }\n    }\n  });\n  const [sellerSales, setSellerSales] = useState([]);\n  const [timeFilter, setTimeFilter] = useState('all');\n  const [loading, setLoading] = useState(true);\n  const { theme } = useTheme();\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const { isAdmin } = useMerchAuth();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedStore, setSelectedStore] = useState('all');\n\n  useEffect(() => {\n    // Check if wallet is already connected\n    const checkWalletConnection = async () => {\n      try {\n        const provider = await detectEthereumProvider();\n        if (provider) {\n          const accounts = await provider.request({ method: 'eth_accounts' });\n          if (accounts.length > 0 && accounts[0].toLowerCase() === ADMIN_WALLET.toLowerCase()) {\n            setWalletAddress(accounts[0]);\n            setWalletConnected(true);\n          }\n        }\n      } catch (error) {\n        console.error('Error checking wallet connection:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkWalletConnection();\n  }, []);\n\n  useEffect(() => {\n    // Listen for account changes\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', (accounts) => {\n        if (accounts.length === 0 || accounts[0].toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n          setWalletConnected(false);\n          setWalletAddress('');\n        } else {\n          setWalletAddress(accounts[0]);\n          setWalletConnected(true);\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (walletConnected && walletAddress.toLowerCase() === ADMIN_WALLET.toLowerCase()) {\n      fetchSalesData();\n    }\n  }, [walletConnected, walletAddress]);\n\n  const fetchSalesData = async () => {\n    try {\n      setLoading(true);\n      \n      // Fetch all orders first\n      const ordersQuery = query(\n        collection(db, 'orders'),\n        orderBy('createdAt', 'desc')\n      );\n      const ordersSnapshot = await getDocs(ordersQuery);\n      const orders = ordersSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        createdAt: doc.data().createdAt?.toDate() || new Date(),\n        flag: doc.data().flag || null,\n        shippingAddress: doc.data().shippingAddress || {}\n      }));\n\n      // Get unique sellers from orders with their names\n      const uniqueSellers = {};\n      orders.forEach(order => {\n        if (order.sellerId && !uniqueSellers[order.sellerId]) {\n          uniqueSellers[order.sellerId] = {\n            id: order.sellerId,\n            name: order.sellerName || 'Unknown Seller'\n          };\n        }\n      });\n\n      // Calculate platform-wide metrics\n      const validOrders = orders.filter(order => order.status !== 'cancelled');\n      const activeOrders = validOrders.filter(order => \n        order.status === 'shipped' || \n        order.status === 'processing' || \n        order.status === 'completed' ||\n        order.status === 'delivered'\n      );\n      const refundedOrders = validOrders.filter(order => order.status === 'refunded');\n\n      // Calculate total sales from active orders (completed + processing + shipped)\n      const totalSales = activeOrders.reduce((sum, order) => sum + (Number(order.total) || 0), 0);\n\n      // Calculate total refunds (95% of refunded order totals)\n      const totalRefunds = refundedOrders.reduce((sum, order) => sum + ((Number(order.total) || 0) * 0.95), 0);\n\n      // Calculate token-specific sales\n      const tokenSales = {\n        USDT: { total: 0, refunds: 0, net: 0 },\n        USDC: { total: 0, refunds: 0, net: 0 }\n      };\n\n      // Process active orders for token sales\n      activeOrders.forEach(order => {\n        const token = order.paymentMethod?.token || 'USDT';\n        const amount = Number(order.total) || 0;\n        if (tokenSales[token]) {\n          tokenSales[token].total += amount;\n          tokenSales[token].net = tokenSales[token].total; // Set net equal to total for active orders\n        }\n      });\n\n      // Process refunded orders for token sales\n      refundedOrders.forEach(order => {\n        const token = order.paymentMethod?.token || 'USDT';\n        const amount = Number(order.total) || 0;\n        const refundAmount = amount * 0.95;\n        if (tokenSales[token]) {\n          tokenSales[token].refunds += refundAmount;\n          // Don't add to total or net for refunded orders\n        }\n      });\n\n      // Update platform-wide stats\n      setSalesData({\n        totalRevenue: Math.max(0, totalSales),\n        totalRefunds: totalRefunds,\n        totalOrders: activeOrders.length,\n        averageOrderValue: activeOrders.length ? totalSales / activeOrders.length : 0,\n        uniqueCustomers: new Set(activeOrders.map(order => order.buyerId)).size,\n        tokenSales,\n        recentOrders: await Promise.all(orders.slice(0, 10).map(async order => {\n          // Fetch seller data to get the flag\n          const sellerDoc = await getDoc(doc(db, 'sellers', order.sellerId));\n          const sellerData = sellerDoc.exists() ? sellerDoc.data() : {};\n          \n          return {\n            id: order.id || '',\n            buyerInfo: order.buyerInfo || {},\n            total: Number(order.total) || 0,\n            status: order.status || 'unknown',\n            createdAt: order.createdAt || new Date(),\n            sellerId: order.sellerId || '',\n            sellerName: order.sellerName || 'Unknown Seller',\n            sellerFlag: sellerData.country?.flag || null,\n            flag: order.flag || null,\n            shippingAddress: order.shippingAddress || {}\n          };\n        }))\n      });\n\n      // Process seller-specific data\n      const sellerData = await Promise.all(Object.values(uniqueSellers).map(async seller => {\n        // Fetch seller's data from Firebase\n        const sellerDoc = await getDoc(doc(db, 'sellers', seller.id));\n        const sellerData = sellerDoc.data() || {};\n        \n        // Get the flag and country from seller's data\n        const flag = sellerData.country?.flag || null;\n        const country = sellerData.country || null;\n        \n        // Get the available balance from the balance object\n        const currentBalance = Number(sellerData.balance?.available || 0);\n        \n        const sellerOrders = validOrders.filter(order => order.sellerId === seller.id);\n        const sellerNonRefundedOrders = sellerOrders.filter(order => order.status !== 'refunded');\n        const sellerRefundedOrders = sellerOrders.filter(order => order.status === 'refunded');\n        \n        // Calculate seller's total balance excluding refunds\n        const totalBalance = sellerOrders\n          .filter(order => \n            (order.status === 'shipped' || order.status === 'processing' || order.status === 'completed') &&\n            order.status !== 'refunded'\n          )\n          .reduce((sum, order) => sum + (Number(order.total) || 0), 0);\n\n        // Calculate seller's total refunds (95% of order total)\n        const totalRefunds = sellerRefundedOrders.reduce((sum, order) => sum + ((Number(order.total) || 0) * 0.95), 0);\n\n        // Calculate period sales (excluding refunds)\n        const calculatePeriodSales = (days) => {\n          const now = new Date();\n          const cutoff = new Date(now);\n          cutoff.setHours(0, 0, 0, 0); // Start of today\n          cutoff.setDate(cutoff.getDate() - days); // Go back X days\n\n          return sellerOrders\n            .filter(order => {\n              if (!order.createdAt) return false;\n              \n              // Convert order date to start of its day for fair comparison\n              const orderDate = new Date(order.createdAt);\n              orderDate.setHours(0, 0, 0, 0);\n              \n              // Check if the order is within the time period\n              const isWithinPeriod = orderDate >= cutoff;\n              \n              // Check if the order status is valid\n              const hasValidStatus = (\n                order.status === 'shipped' || \n                order.status === 'processing' || \n                order.status === 'completed' ||\n                order.status === 'delivered'\n              ) && order.status !== 'refunded';\n              \n              return isWithinPeriod && hasValidStatus;\n            })\n            .reduce((sum, order) => sum + (Number(order.total) || 0), 0);\n        };\n\n        // Use the actual balance from Firebase\n        const availableToWithdraw = currentBalance;\n\n        return {\n          id: seller.id,\n          name: seller.name,\n          flag: flag,\n          country: country,\n          totalOrders: sellerNonRefundedOrders.length || 0,\n          totalBalance: totalBalance || 0,\n          totalRefunds: totalRefunds || 0,\n          sales: {\n            '1d': calculatePeriodSales(1) || 0,\n            'all': sellerOrders\n              .filter(order => \n                (order.status === 'shipped' || \n                order.status === 'processing' || \n                order.status === 'completed') &&\n                order.status !== 'refunded'\n              )\n              .reduce((sum, order) => sum + (Number(order.total) || 0), 0)\n          },\n          availableToWithdraw\n        };\n      }));\n\n      setSellerSales(sellerData);\n    } catch (error) {\n      console.error('Error fetching sales data:', error);\n      toast.error('Failed to load sales data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getUniqueStores = () => {\n    const stores = salesData.recentOrders?.map(order => order.sellerName) || [];\n    return ['all', ...new Set(stores)];\n  };\n\n  const filteredOrders = salesData.recentOrders?.filter(order => {\n    const matchesSearch = \n      (order.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      (order.buyerInfo?.name || '').toLowerCase().includes(searchTerm.toLowerCase()));\n    \n    const matchesStore = selectedStore === 'all' || order.sellerName === selectedStore;\n    \n    return matchesSearch && matchesStore;\n  });\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"w-8 h-8 border-4 border-[#FF1B6B] border-t-transparent rounded-full animate-spin\" />\n      </div>\n    );\n  }\n\n  if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-[60vh] p-6\">\n        <FiAlertTriangle className=\"w-16 h-16 text-[#FF1B6B] mb-4\" />\n        <h2 className={`text-2xl font-bold ${theme === 'dark' ? 'text-white' : 'text-gray-800'} mb-2`}>Access Denied</h2>\n        <p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-600'} text-center mb-6`}>Please connect your admin wallet to access the sales analytics.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Sales Analytics</h1>\n        <button\n          onClick={fetchSalesData}\n          className=\"px-4 py-2 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#FF1B6B]/90 flex items-center gap-2 transition-colors\"\n        >\n          <FiRefreshCw className=\"w-4 h-4\" />\n          Refresh Data\n        </button>\n      </div>\n      \n      {/* Platform Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-sm border-l-4 border-[#FF1B6B]\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Total Revenue</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">${salesData.totalRevenue.toFixed(2)}</p>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">{salesData.totalOrders} orders</p>\n              {salesData.totalRefunds > 0 && (\n                <p className=\"text-xs text-red-500\">Refunds: ${salesData.totalRefunds.toFixed(2)}</p>\n              )}\n            </div>\n            <div className=\"p-2 bg-pink-50 dark:bg-pink-900/20 rounded-lg\">\n              <FiDollarSign className=\"text-3xl text-[#FF1B6B]\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-sm border-l-4 border-[#FF1B6B]\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Total Orders</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{salesData.totalOrders}</p>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Active orders</p>\n            </div>\n            <div className=\"p-2 bg-pink-50 dark:bg-pink-900/20 rounded-lg\">\n              <FiShoppingBag className=\"text-3xl text-[#FF1B6B]\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-sm border-l-4 border-[#FF1B6B]\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Average Order Value</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">${salesData.averageOrderValue.toFixed(2)}</p>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Per order average</p>\n            </div>\n            <div className=\"p-2 bg-pink-50 dark:bg-pink-900/20 rounded-lg\">\n              <FiTrendingUp className=\"text-3xl text-[#FF1B6B]\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-sm border-l-4 border-[#FF1B6B]\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Unique Customers</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{salesData.uniqueCustomers}</p>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Total buyers</p>\n            </div>\n            <div className=\"p-2 bg-pink-50 dark:bg-pink-900/20 rounded-lg\">\n              <FiUsers className=\"text-3xl text-[#FF1B6B]\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Recent Orders */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-sm p-6 mb-8\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Recent Orders</h3>\n          <div className=\"flex gap-4\">\n            {/* Store Filter */}\n            <select\n              value={selectedStore}\n              onChange={(e) => setSelectedStore(e.target.value)}\n              className=\"px-3 py-2 rounded-lg text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-200 border border-gray-200 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-pink-100 focus:border-[#FF1B6B]\"\n            >\n              {getUniqueStores().map((store) => (\n                <option key={store} value={store}>\n                  {store === 'all' ? 'All Stores' : store}\n                </option>\n              ))}\n            </select>\n\n            {/* Search Bar */}\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                placeholder=\"Search by Order ID or Customer\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10 pr-4 py-2 rounded-lg text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-200 border border-gray-200 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-pink-100 focus:border-[#FF1B6B] w-64\"\n              />\n              <svg\n                className=\"absolute left-3 top-2.5 h-5 w-5 text-gray-400 dark:text-gray-500\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead>\n              <tr className=\"bg-gray-50 dark:bg-gray-700\">\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Order ID</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Seller</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Customer</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Amount</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Status</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Date</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n              {filteredOrders?.map((order) => (\n                <tr key={order.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700/50\">\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\n                    {order.id.slice(-6)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\n                    <div className=\"flex items-center gap-2\">\n                      <span>{order.sellerName}</span>\n                      {order.sellerFlag && (\n                        <img \n                          src={order.sellerFlag}\n                          alt=\"Seller country flag\"\n                          className=\"w-3.5 h-2.5 object-cover rounded-[2px] shadow-sm\"\n                        />\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\n                    <div className=\"flex items-center gap-2\">\n                      <span>{order.buyerInfo?.name || 'Anonymous'}</span>\n                      {order.flag && (\n                        <img \n                          src={order.flag}\n                          alt={typeof order.shippingAddress?.country === 'object' \n                            ? order.shippingAddress?.country.name \n                            : order.shippingAddress?.country}\n                          className=\"w-3.5 h-2.5 object-cover rounded-[2px] shadow-sm\"\n                        />\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\n                    ${order.total?.toFixed(2)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                      order.status === 'completed' ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300' :\n                      order.status === 'shipped' ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300' :\n                      order.status === 'processing' ? 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300' :\n                      order.status === 'cancelled' ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-300' :\n                      order.status === 'refunded' ? 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-300' :\n                      order.status === 'delivered' ? 'bg-orange-100 dark:bg-orange-900/30 text-orange-800 dark:text-orange-300' :\n                      'bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-300'\n                    }`}>\n                      {order.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\n                    {new Date(order.createdAt).toLocaleString()}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Sales Overview */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-sm p-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Sales Overview</h2>\n          <div className=\"flex space-x-2\">\n            {['1d', 'all'].map((filter) => (\n              <button\n                key={filter}\n                onClick={() => setTimeFilter(filter)}\n                className={`px-3 py-1 rounded-lg text-sm ${\n                  timeFilter === filter \n                    ? 'bg-[#FF1B6B] text-white' \n                    : 'bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-600'\n                }`}\n              >\n                {filter === '1d' ? '24h' : 'All Time'}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Token Sales Summary */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Token Sales Summary</h3>\n          <div className=\"bg-gray-50 dark:bg-gray-700/50 rounded-2xl p-4\">\n            {Object.entries(salesData.tokenSales || {}).map(([token, data]) => {\n              const safeData = {\n                net: data?.net || 0,\n                refunds: data?.refunds || 0\n              };\n              \n              return (\n                <div key={token} className=\"flex justify-between items-center mb-2 last:mb-0\">\n                  <div className=\"flex items-center gap-2\">\n                    {token === 'USDC' ? (\n                      <img src=\"/logos/usdc.png\" alt=\"USDC\" className=\"w-5 h-5\" />\n                    ) : (\n                      <img src=\"/logos/usdt.png\" alt=\"USDT\" className=\"w-5 h-5\" />\n                    )}\n                    <span className=\"text-gray-700 dark:text-gray-300\">{token}</span>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\n                      ${safeData.net.toFixed(2)}\n                    </p>\n                    {safeData.refunds > 0 && (\n                      <p className=\"text-xs text-red-500\">\n                        Refunds: ${safeData.refunds.toFixed(2)}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Seller Sales Table */}\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead>\n              <tr className=\"bg-gray-50 dark:bg-gray-700\">\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Seller</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">24h</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">All Time</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Available to Withdraw</th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n              {sellerSales.map((seller) => (\n                <tr key={seller.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700/50\">\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center gap-2\">\n                      <div>\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                            {seller.name}\n                          </span>\n                          {seller.country?.flag && (\n                            <img \n                              src={seller.country.flag}\n                              alt={seller.country.name || 'Country flag'}\n                              className=\"w-3.5 h-2.5 object-cover rounded-[2px] shadow-sm\"\n                            />\n                          )}\n                        </div>\n                        <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                          {seller.totalOrders} orders\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\n                    ${seller.sales['1d'].toFixed(2)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\n                    ${seller.sales['all'].toFixed(2)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-[#FF1B6B]\">\n                      ${Number(seller.availableToWithdraw || 0).toFixed(2)}\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n} ","import React from 'react';\n\nexport const VerificationCheckmark = () => (\n  <svg className=\"w-7 h-7\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M12 2L17.196 4.804L20 10L17.196 15.196L12 18L6.804 15.196L4 10L6.804 4.804L12 2Z\" \n      fill=\"#FF1B6B\"\n      filter=\"drop-shadow(0px 2px 3px rgba(0, 0, 0, 0.15))\"\n    />\n    <path \n      d=\"M12 4L15.696 6.104L17.8 9.8L15.696 13.496L12 15.6L8.304 13.496L6.2 9.8L8.304 6.104L12 4Z\" \n      fill=\"#FF1B6B\"\n      className=\"brightness-110\"\n    />\n    <path \n      d=\"M8.5 10L11 12.5L15.5 8\" \n      stroke=\"white\" \n      strokeWidth=\"2.5\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n      className=\"drop-shadow-sm\"\n    />\n  </svg>\n);\n\nexport default VerificationCheckmark; ","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiSearch, FiCheckCircle, FiX } from 'react-icons/fi';\nimport { FaStar } from 'react-icons/fa';\nimport { collection, query, where, getDocs, doc, updateDoc, orderBy } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport toast from 'react-hot-toast';\nimport VerificationCheckmark from '../../components/shared/VerificationCheckmark';\n\nconst SellerSkeleton = () => (\n  <motion.div \n    initial={{ opacity: 0.6 }}\n    animate={{ opacity: 1 }}\n    transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n    className=\"p-4 rounded-lg border border-gray-200 dark:border-gray-700\"\n  >\n    <div className=\"flex justify-between items-start\">\n      <div className=\"w-full\">\n        <div className=\"h-5 bg-gray-200 dark:bg-gray-700 rounded w-1/3 mb-2\"></div>\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2 mb-3\"></div>\n        <div className=\"flex items-center gap-1\">\n          {[...Array(5)].map((_, i) => (\n            <div key={i} className=\"w-4 h-4 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n          ))}\n          <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-16 ml-2\"></div>\n        </div>\n      </div>\n      <div className=\"w-6 h-6 bg-gray-200 dark:bg-gray-700 rounded-full\"></div>\n    </div>\n  </motion.div>\n);\n\nconst ReviewSkeleton = () => (\n  <motion.div \n    initial={{ opacity: 0.6 }}\n    animate={{ opacity: 1 }}\n    transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n    className=\"border-b border-gray-100 dark:border-gray-700 pb-4\"\n  >\n    <div className=\"flex justify-between items-center mb-2\">\n      <div className=\"flex items-center gap-2\">\n        <div className=\"h-5 bg-gray-200 dark:bg-gray-700 rounded w-24\"></div>\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-20\"></div>\n      </div>\n      <div className=\"flex gap-1\">\n        {[...Array(5)].map((_, i) => (\n          <div key={i} className=\"w-4 h-4 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n        ))}\n      </div>\n    </div>\n    <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4 mb-2\"></div>\n    <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\n    <div className=\"mt-2 flex items-center gap-2\">\n      <div className=\"w-10 h-10 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n      <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-32\"></div>\n    </div>\n  </motion.div>\n);\n\nconst StoreVerification = () => {\n  const [sellers, setSellers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedSeller, setSelectedSeller] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const [rejectionReason, setRejectionReason] = useState('');\n  const [showRejectModal, setShowRejectModal] = useState(false);\n  const [selectedSellerId, setSelectedSellerId] = useState(null);\n  const [viewMode, setViewMode] = useState('pending'); // 'pending' or 'verified'\n  const [isLoadingReviews, setIsLoadingReviews] = useState(false);\n\n  useEffect(() => {\n    fetchSellers();\n    // Clear selected seller when switching views\n    setSelectedSeller(null);\n    setReviews([]);\n  }, [viewMode]); // Refetch when view mode changes\n\n  const formatTimestamp = (timestamp) => {\n    if (!timestamp) return '';\n    \n    // Handle Firestore timestamp\n    if (timestamp.seconds) {\n      return new Date(timestamp.seconds * 1000).toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n    \n    // Handle ISO string or Date object\n    const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\n    return date.toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const fetchSellers = async () => {\n    try {\n      setLoading(true);\n      const sellersRef = collection(db, 'sellers');\n      const q = query(\n        sellersRef, \n        where('verificationStatus', '==', viewMode),\n        orderBy('storeName', 'asc') // Add ordering for consistency\n      );\n      const querySnapshot = await getDocs(q);\n      \n      // Get all seller IDs first\n      const sellerIds = querySnapshot.docs.map(doc => doc.id);\n      \n      // Batch fetch all reviews in one query\n      const reviewsRef = collection(db, 'reviews');\n      const reviewsQuery = query(\n        reviewsRef, \n        where('sellerId', 'in', sellerIds.length ? sellerIds : ['dummy']),\n        orderBy('createdAt', 'desc')\n      );\n      const reviewsSnapshot = await getDocs(reviewsQuery);\n      \n      // Group reviews by seller ID\n      const reviewsBySeller = {};\n      reviewsSnapshot.docs.forEach(doc => {\n        const review = { id: doc.id, ...doc.data() };\n        if (!reviewsBySeller[review.sellerId]) {\n          reviewsBySeller[review.sellerId] = [];\n        }\n        reviewsBySeller[review.sellerId].push(review);\n      });\n      \n      // Map sellers with their reviews\n      const sellersData = querySnapshot.docs.map(doc => {\n        const seller = { id: doc.id, ...doc.data() };\n        const sellerReviews = reviewsBySeller[doc.id] || [];\n        const totalRating = sellerReviews.reduce((sum, review) => sum + review.rating, 0);\n        const avgRating = sellerReviews.length > 0 ? totalRating / sellerReviews.length : 0;\n        \n        return {\n          ...seller,\n          reviewCount: sellerReviews.length,\n          averageRating: avgRating,\n          reviews: sellerReviews // Store reviews with seller data\n        };\n      });\n      \n      setSellers(sellersData);\n    } catch (error) {\n      console.error('Error fetching sellers:', error);\n      toast.error('Failed to load sellers');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchSellerReviews = async (sellerId) => {\n    try {\n      setIsLoadingReviews(true);\n      // Find the seller in our existing data\n      const seller = sellers.find(s => s.id === sellerId);\n      if (seller && seller.reviews) {\n        // Use cached reviews if available\n        setReviews(seller.reviews);\n        return;\n      }\n\n      // Fallback to fetching if not cached\n      const reviewsRef = collection(db, 'reviews');\n      const q = query(\n        reviewsRef, \n        where('sellerId', '==', sellerId),\n        orderBy('createdAt', 'desc')\n      );\n      const querySnapshot = await getDocs(q);\n      const reviewsData = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setReviews(reviewsData);\n    } catch (error) {\n      console.error('Error fetching reviews:', error);\n      toast.error('Failed to load reviews');\n    } finally {\n      setIsLoadingReviews(false);\n    }\n  };\n\n  const handleVerifyStore = async (sellerId, approve) => {\n    try {\n      if (approve) {\n        await updateDoc(doc(db, 'sellers', sellerId), {\n          verificationStatus: 'approved',\n          verificationDate: new Date().toISOString(),\n          rejectedAt: null,\n          rejectionReason: null\n        });\n      } else {\n        setSelectedSellerId(sellerId);\n        setShowRejectModal(true);\n        return;\n      }\n      \n      // Update local state\n      setSellers(sellers.map(seller => \n        seller.id === sellerId \n          ? { \n              ...seller, \n              verificationStatus: approve ? 'approved' : 'rejected',\n              rejectionReason: approve ? null : rejectionReason \n            }\n          : seller\n      ));\n      \n      toast.success(`Store ${approve ? 'verified' : 'rejected'} successfully`);\n    } catch (error) {\n      console.error('Error updating store verification:', error);\n      toast.error('Failed to update store verification');\n    }\n  };\n\n  const handleReject = async () => {\n    if (!selectedSellerId || !rejectionReason.trim()) {\n      toast.error('Please provide a reason for rejection');\n      return;\n    }\n\n    try {\n      await updateDoc(doc(db, 'sellers', selectedSellerId), {\n        verificationStatus: 'rejected',\n        verificationDate: new Date().toISOString(),\n        rejectedAt: new Date(),\n        rejectionReason: rejectionReason.trim(),\n        rejectionCooldown: 72 // 3 days cooldown\n      });\n\n      // Update local state\n      setSellers(sellers.map(seller => \n        seller.id === selectedSellerId \n          ? { \n              ...seller, \n              verificationStatus: 'rejected',\n              rejectionReason: rejectionReason.trim() \n            }\n          : seller\n      ));\n\n      setShowRejectModal(false);\n      setRejectionReason('');\n      setSelectedSellerId(null);\n      toast.success('Store verification rejected');\n    } catch (error) {\n      console.error('Error rejecting store:', error);\n      toast.error('Failed to reject store verification');\n    }\n  };\n\n  const filteredSellers = sellers.filter(seller => \n    seller.storeName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    seller.email?.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  if (loading) {\n    return (\n      <div className=\"p-6 max-w-7xl mx-auto\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <div className=\"flex items-center gap-4\">\n            <motion.div \n              initial={{ opacity: 0.6 }}\n              animate={{ opacity: 1 }}\n              transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n              className=\"h-8 bg-gray-200 dark:bg-gray-700 rounded w-64\"\n            />\n            <div className=\"flex bg-gray-100 dark:bg-gray-800 rounded-lg p-1\">\n              {['Pending', 'Verified', 'Rejected'].map((text) => (\n                <motion.div \n                  key={text}\n                  initial={{ opacity: 0.6 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n                  className=\"w-24 h-9 bg-gray-200 dark:bg-gray-700 rounded-md mx-1\"\n                />\n              ))}\n            </div>\n          </div>\n          <motion.div \n            initial={{ opacity: 0.6 }}\n            animate={{ opacity: 1 }}\n            transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n            className=\"w-48 h-10 bg-gray-200 dark:bg-gray-700 rounded-lg\"\n          />\n        </div>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4\">\n            <motion.div \n              initial={{ opacity: 0.6 }}\n              animate={{ opacity: 1 }}\n              transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n              className=\"h-6 bg-gray-200 dark:bg-gray-700 rounded w-32 mb-4\"\n            />\n            <div className=\"space-y-4\">\n              {[...Array(4)].map((_, i) => (\n                <SellerSkeleton key={i} />\n              ))}\n            </div>\n          </div>\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4\">\n            <motion.div \n              initial={{ opacity: 0.6 }}\n              animate={{ opacity: 1 }}\n              transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n              className=\"h-6 bg-gray-200 dark:bg-gray-700 rounded w-48 mb-4\"\n            />\n            <div className=\"space-y-4\">\n              {[...Array(3)].map((_, i) => (\n                <ReviewSkeleton key={i} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <div className=\"flex items-center gap-4\">\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            {viewMode === 'pending' \n              ? 'Store Verification Requests' \n              : viewMode === 'approved' \n                ? 'Verified Stores'\n                : 'Rejected Stores'\n            }\n          </h1>\n          <div className=\"flex bg-gray-100 dark:bg-gray-800 rounded-lg p-1\">\n            <button\n              onClick={() => setViewMode('pending')}\n              className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                viewMode === 'pending'\n                  ? 'bg-white dark:bg-gray-700 text-gray-900 dark:text-white shadow'\n                  : 'text-gray-500 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\n              }`}\n            >\n              Pending\n            </button>\n            <button\n              onClick={() => setViewMode('approved')}\n              className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                viewMode === 'approved'\n                  ? 'bg-white dark:bg-gray-700 text-gray-900 dark:text-white shadow'\n                  : 'text-gray-500 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\n              }`}\n            >\n              Verified\n            </button>\n            <button\n              onClick={() => setViewMode('rejected')}\n              className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                viewMode === 'rejected'\n                  ? 'bg-white dark:bg-gray-700 text-gray-900 dark:text-white shadow'\n                  : 'text-gray-500 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\n              }`}\n            >\n              Rejected\n            </button>\n          </div>\n        </div>\n        <div className=\"relative\">\n          <input\n            type=\"text\"\n            placeholder=\"Search stores...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n          />\n          <FiSearch className=\"absolute left-3 top-3 text-gray-400 dark:text-gray-500\" />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Sellers List */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            {viewMode === 'pending' \n              ? 'Pending Requests' \n              : viewMode === 'approved' \n                ? 'Verified Stores'\n                : 'Rejected Stores'\n            }\n          </h2>\n          <div className=\"space-y-4\">\n            {filteredSellers.map((seller) => (\n              <div\n                key={seller.id}\n                onClick={() => {\n                  setSelectedSeller(seller);\n                  fetchSellerReviews(seller.id);\n                }}\n                className={`p-4 rounded-lg border cursor-pointer transition-colors ${\n                  selectedSeller?.id === seller.id\n                    ? 'border-[#FF1B6B] bg-pink-50 dark:bg-pink-900/20'\n                    : 'border-gray-200 dark:border-gray-700 hover:border-[#FF1B6B] hover:bg-pink-50 dark:hover:bg-pink-900/20'\n                }`}\n              >\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h3 className=\"font-medium text-gray-900 dark:text-white\">{seller.storeName}</h3>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">{seller.email}</p>\n                    {viewMode === 'approved' && seller.verificationDate && (\n                      <p className=\"text-xs text-gray-400 dark:text-gray-500 mt-1\">\n                        Verified on {formatTimestamp(seller.verificationDate)}\n                      </p>\n                    )}\n                    {viewMode === 'rejected' && seller.rejectedAt && (\n                      <div className=\"mt-1\">\n                        <p className=\"text-xs text-gray-400 dark:text-gray-500\">\n                          Rejected on {formatTimestamp(seller.rejectedAt)}\n                        </p>\n                        {seller.rejectionReason && (\n                          <p className=\"text-xs text-red-500 dark:text-red-400 mt-0.5\">\n                            Reason: {seller.rejectionReason}\n                          </p>\n                        )}\n                      </div>\n                    )}\n                    <div className=\"flex items-center mt-2\">\n                      <div className=\"flex items-center\">\n                        {[1, 2, 3, 4, 5].map((star) => (\n                          <FaStar\n                            key={star}\n                            className={`w-4 h-4 ${\n                              star <= seller.averageRating\n                                ? 'text-[#FF1B6B]'\n                                : 'text-gray-300 dark:text-gray-600'\n                            }`}\n                          />\n                        ))}\n                      </div>\n                      <span className=\"ml-2 text-sm text-gray-600 dark:text-gray-400\">\n                        ({seller.reviewCount} reviews)\n                      </span>\n                    </div>\n                  </div>\n                  {viewMode === 'pending' && (\n                    <div className=\"flex gap-2\">\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleVerifyStore(seller.id, true);\n                        }}\n                        className=\"hover:opacity-80\"\n                      >\n                        <VerificationCheckmark />\n                      </button>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleVerifyStore(seller.id, false);\n                        }}\n                        className=\"p-1.5 rounded-full bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-600\"\n                      >\n                        <FiX className=\"w-5 h-5\" />\n                      </button>\n                    </div>\n                  )}\n                  {viewMode === 'approved' && (\n                    <VerificationCheckmark />\n                  )}\n                  {viewMode === 'rejected' && (\n                    <FiX className=\"w-6 h-6 text-red-500 dark:text-red-400\" />\n                  )}\n                </div>\n              </div>\n            ))}\n            {filteredSellers.length === 0 && (\n              <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                {viewMode === 'pending' \n                  ? 'No verification requests found'\n                  : 'No verified stores found'\n                }\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Reviews Panel */}\n        {selectedSeller && (\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4\">\n            <div className=\"mb-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">{selectedSeller.storeName}</h2>\n              <div className=\"flex items-center gap-2 mt-2\">\n                <div className=\"flex items-center\">\n                  {[1, 2, 3, 4, 5].map((star) => (\n                    <FaStar\n                      key={star}\n                      className={`w-5 h-5 ${\n                        star <= selectedSeller.averageRating\n                          ? 'text-[#FF1B6B]'\n                          : 'text-gray-300 dark:text-gray-600'\n                      }`}\n                    />\n                  ))}\n                </div>\n                <span className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                  {selectedSeller.averageRating.toFixed(1)}\n                </span>\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  ({selectedSeller.reviewCount} reviews)\n                </span>\n              </div>\n            </div>\n\n            {isLoadingReviews ? (\n              <div className=\"space-y-4\">\n                {[...Array(3)].map((_, i) => (\n                  <ReviewSkeleton key={i} />\n                ))}\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {reviews.map((review) => (\n                  <div key={review.id} className=\"border-b border-gray-100 dark:border-gray-700 pb-4\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"font-medium text-gray-900 dark:text-white\">\n                          {review.userName}\n                        </span>\n                        <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                          {new Date(review.createdAt?.seconds * 1000).toLocaleDateString()}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center\">\n                        {[1, 2, 3, 4, 5].map((star) => (\n                          <FaStar\n                            key={star}\n                            className={`w-4 h-4 ${\n                              star <= review.rating ? 'text-[#FF1B6B]' : 'text-gray-300 dark:text-gray-600'\n                            }`}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                    <p className=\"text-gray-700 dark:text-gray-300\">{review.review}</p>\n                    {review.image && (\n                      <img\n                        src={review.image}\n                        alt=\"Review\"\n                        className=\"mt-2 rounded-lg w-24 h-24 object-cover cursor-pointer\"\n                        onClick={() => window.open(review.image, '_blank')}\n                      />\n                    )}\n                    <div className=\"mt-2 flex items-center gap-2\">\n                      <img\n                        src={review.productImage}\n                        alt={review.productName}\n                        className=\"w-10 h-10 rounded object-cover\"\n                      />\n                      <span className=\"text-sm text-gray-500 dark:text-gray-400\">{review.productName}</span>\n                    </div>\n                  </div>\n                ))}\n                {reviews.length === 0 && (\n                  <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                    No reviews yet\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Rejection Modal */}\n      {showRejectModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md w-full mx-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Reject Verification Request</h3>\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Rejection Reason\n              </label>\n              <textarea\n                value={rejectionReason}\n                onChange={(e) => setRejectionReason(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                rows=\"4\"\n                placeholder=\"Please provide a reason for rejection...\"\n              />\n            </div>\n            <div className=\"flex justify-end gap-3\">\n              <button\n                onClick={() => {\n                  setShowRejectModal(false);\n                  setRejectionReason('');\n                  setSelectedSellerId(null);\n                }}\n                className=\"px-4 py-2 text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-md\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleReject}\n                className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n                disabled={!rejectionReason.trim()}\n              >\n                Reject\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StoreVerification; ","import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { \n  FaBars, \n  FaChevronLeft,\n  FaPlus,\n  FaFileAlt,\n  FaThLarge,\n  FaChartLine,\n  FaClock,\n  FaHistory,\n  FaGithub, \n  FaTelegram, \n  FaDiscord, \n  FaTwitter,\n  FaChartBar,\n  FaLink,\n  FaRocket\n} from 'react-icons/fa';\nimport { BiHome, BiCollection, BiHistory, BiHomeAlt, BiCoin, BiStore } from 'react-icons/bi';\nimport { AiOutlinePlus } from 'react-icons/ai'\nimport { BsCollection, BsClockHistory } from 'react-icons/bs'\nimport { HiOutlineHome } from 'react-icons/hi'\nimport { MdOutlineLocalActivity } from 'react-icons/md'\nimport { TbChartCandle } from 'react-icons/tb'\nimport { RiPaintLine, RiUserLine } from 'react-icons/ri'\n\nexport default function Sidebar({ onOpenModal, onOpenNFTModal }) {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n  const location = useLocation();\n  \n  const isActive = (path) => location.pathname === path;\n\n  const menuItems = [\n    // Primary Actions Group\n    {\n      icon: BiCoin,\n      label: 'Create Token',\n      action: onOpenModal,\n      primary: true,\n    },\n    {\n      icon: RiPaintLine,\n      label: 'Create NFT',\n      action: onOpenNFTModal,\n    },\n    // Divider\n    { type: 'divider' },\n    // Main Navigation Group\n    {\n      icon: HiOutlineHome,\n      label: 'Dashboard',\n      to: '/',\n      isRouterLink: true,\n    },\n    {\n      icon: BsCollection,\n      label: 'Collections',\n      to: '/collections',\n      isRouterLink: true,\n      noDefaultHighlight: true,\n    },\n    {\n      icon: FaRocket,\n      label: 'Meme Factory',\n      to: '/memefactory',\n      isRouterLink: true,\n    },\n    // Divider\n    { type: 'divider' },\n    // Trading Section\n    {\n      icon: TbChartCandle,\n      label: 'Trading',\n      to: '/trading',\n      isRouterLink: true,\n    },\n    // Bridge & Store Group\n    {\n      icon: FaLink,\n      label: 'Bridge',\n      to: '/bridge',\n      isRouterLink: true,\n    },\n    {\n      icon: BiStore,\n      label: 'MerchStore',\n      to: '/merch-store',\n      isRouterLink: true,\n    },\n    {\n      icon: TbChartCandle,\n      label: 'Trending Tokens',\n      to: '#',\n      isRouterLink: true,\n      comingSoon: true\n    },\n    {\n      icon: BsClockHistory,\n      label: 'Recent Tokens',\n      to: '#',\n      isRouterLink: true,\n      comingSoon: true\n    },\n    // Divider\n    { type: 'divider' },\n    // User Section\n    {\n      icon: RiUserLine,\n      label: 'Account',\n      to: '/account',\n      isRouterLink: true,\n      noDefaultHighlight: true,\n    },\n    {\n      icon: BiHistory,\n      label: 'History',\n      to: '/history',\n      isRouterLink: true,\n    },\n  ];\n\n  const socialLinks = [\n    { icon: FaTelegram, href: 'https://t.me/tokenfactorry', label: 'Telegram' },\n    { icon: FaTwitter, href: 'https://x.com/TokenFac', label: 'X (Twitter)' },\n    { icon: FaDiscord, href: 'https://discord.com/users/chriswilder', label: 'Discord' },\n  ];\n\n  const renderMenuItem = (item, index) => {\n    // Handle divider\n    if (item.type === 'divider') {\n      return (\n        <div key={`divider-${index}`} className=\"my-2 border-b border-gray-200 dark:border-gray-800\" />\n      );\n    }\n\n    const commonClasses = `w-full flex items-center gap-3 px-4 py-2.5 rounded-lg transition-all duration-200 relative group\n      ${item.primary \n        ? 'text-gray-800 dark:text-gray-200 hover:text-black dark:hover:text-black hover:bg-[#00ffbd] font-semibold' \n        : `text-gray-800 dark:text-gray-200 ${!item.comingSoon ? 'hover:text-black dark:hover:text-black hover:bg-[#00ffbd]' : 'cursor-default opacity-50'} \n           ${item.isRouterLink && isActive(item.to) && !item.noDefaultHighlight ? 'text-[#00ffbd]' : ''}`}\n      ${isCollapsed ? 'justify-center' : ''}\n    `;\n\n    if (item.isRouterLink) {\n      return (\n        <Link\n          key={index}\n          to={item.to}\n          className={commonClasses}\n          onClick={item.comingSoon ? (e) => e.preventDefault() : undefined}\n        >\n          <item.icon size={20} className={`flex-shrink-0 ${item.isRouterLink && isActive(item.to) && !item.noDefaultHighlight ? 'text-[#00ffbd]' : ''}`} />\n          {!isCollapsed && (\n            <span className=\"truncate\">{item.label}</span>\n          )}\n          {item.comingSoon && !isCollapsed && (\n            <span className=\"absolute right-0 top-1/2 -translate-y-1/2 bg-gray-900 text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity\">\n              Coming Soon\n            </span>\n          )}\n        </Link>\n      );\n    }\n\n    return (\n      <button\n        key={index}\n        onClick={item.action || (() => {})}\n        className={commonClasses}\n      >\n        <item.icon size={20} className=\"flex-shrink-0\" />\n        {!isCollapsed && (\n          <div className=\"flex items-center justify-between w-full min-w-0 transition-opacity duration-200\">\n            <span className=\"truncate\">{item.label}</span>\n          </div>\n        )}\n      </button>\n    );\n  };\n\n  return (\n    <>\n      {/* Mobile Overlay */}\n      {isMobileOpen && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-50 z-20 lg:hidden transition-opacity duration-300\" \n          onClick={() => setIsMobileOpen(false)} \n        />\n      )}\n\n      {/* Mobile Toggle Button */}\n      <button\n        onClick={() => setIsMobileOpen(!isMobileOpen)}\n        className={`fixed top-8 -left-3 p-1.5 rounded-full bg-white dark:bg-[#1a1b1f] border border-gray-200 dark:border-gray-800 lg:hidden z-30 transition-all duration-300 ${\n          isMobileOpen ? 'opacity-0 -translate-x-4' : 'opacity-100 translate-x-0'\n        }`}\n      >\n        <FaChevronLeft \n          size={12} \n          className={`transform transition-transform duration-200 text-gray-600 dark:text-gray-400\n            ${!isMobileOpen ? 'rotate-180' : ''}\n          `}\n        />\n      </button>\n\n      {/* Sidebar */}\n      <aside \n        className={`fixed top-0 left-0 h-full bg-white dark:bg-[#0d0e12] border-r border-gray-200 dark:border-gray-800 transition-all duration-300 z-20 flex flex-col\n          ${isCollapsed ? 'w-20' : 'w-64'} \n          lg:translate-x-0\n          ${isMobileOpen ? 'translate-x-0' : '-translate-x-full'}\n        `}\n      >\n        {/* Top Section */}\n        <div className=\"p-6 relative\">\n          {/* Toggle Button - Desktop Only */}\n          <button\n            onClick={() => setIsCollapsed(!isCollapsed)}\n            className=\"absolute -right-3 top-8 p-1.5 rounded-full bg-white dark:bg-[#1a1b1f] border border-gray-200 dark:border-gray-800 hidden lg:flex items-center justify-center hover:bg-gray-100 dark:hover:bg-[#2d2f36] transition-all duration-200 z-50\"\n          >\n            <FaChevronLeft \n              size={12} \n              className={`transform transition-transform duration-200 text-gray-600 dark:text-gray-400\n                ${isCollapsed ? 'rotate-180' : ''}\n              `}\n            />\n          </button>\n\n          <div className=\"flex items-center mb-8\">\n            <div className=\"flex items-center gap-3\">\n              <img \n                src=\"/tf1.svg\" \n                alt=\"Token Factory Logo\" \n                className=\"w-10 h-10 text-[#00ffbd]\" \n              />\n              {!isCollapsed && (\n                <h1 className=\"text-xl font-bold text-gray-900 dark:text-white transition-opacity duration-200\">\n                  Token Factory\n                </h1>\n              )}\n            </div>\n          </div>\n\n          {/* Menu Items */}\n          <div className=\"space-y-2\">\n            {menuItems.map((item, index) => renderMenuItem(item, index))}\n          </div>\n        </div>\n\n        {/* Social Links - Bottom */}\n        <div className={`mt-auto p-6 transition-all duration-200 ${isCollapsed ? 'flex flex-col items-center' : ''}`}>\n          <div className={`flex gap-3 ${isCollapsed ? 'flex-col' : ''}`}>\n            {socialLinks.map((social, index) => (\n              <a\n                key={index}\n                href={social.href}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-gray-400 hover:text-[#00ffbd] transition-colors\"\n                title={social.label}\n              >\n                <social.icon size={20} />\n              </a>\n            ))}\n          </div>\n        </div>\n      </aside>\n    </>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { ConnectButton } from '@rainbow-me/rainbowkit';\nimport { useNetwork, useAccount } from 'wagmi';\nimport { toast } from 'react-hot-toast';\n\nexport default function NetworkSelector() {\n  const { isLoading: networkLoading, chain, chains } = useNetwork();\n  const { isConnected } = useAccount();\n  const [isChangingNetwork, setIsChangingNetwork] = useState(false);\n\n  // Handle network change errors\n  useEffect(() => {\n    const handleError = (error) => {\n      if (error.message?.includes('Internal JSON-RPC error')) {\n        setIsChangingNetwork(false);\n        toast.error('Network switch failed. Please try again.');\n      }\n    };\n\n    // Listen for MetaMask errors\n    if (window.ethereum) {\n      window.ethereum.on('error', handleError);\n    }\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('error', handleError);\n      }\n    };\n  }, []);\n\n  // Handle network changes\n  useEffect(() => {\n    if (isConnected && chain) {\n      setIsChangingNetwork(false);\n    }\n  }, [chain, isConnected]);\n\n  return (\n    <div className=\"relative\" style={{ zIndex: 99999 }}>\n      <ConnectButton \n        chainStatus={networkLoading || isChangingNetwork ? \"loading\" : \"icon\"}\n        showBalance={false}\n        accountStatus=\"address\"\n        onClick={() => {\n          if (!networkLoading && !isChangingNetwork) {\n            setIsChangingNetwork(true);\n          }\n        }}\n      />\n    </div>\n  );\n} ","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst TOKENS = {\n  'bitcoin': 'BTC',\n  'ethereum': 'ETH',\n  'binancecoin': 'BNB',\n  'ripple': 'XRP',\n  'cardano': 'ADA',\n  'solana': 'SOL',\n  'polkadot': 'DOT',\n  'dogecoin': 'DOGE',\n  'avalanche-2': 'AVAX',\n  'chainlink': 'LINK',\n  'polygon': 'POL',\n  'uniswap': 'UNI',\n  'stellar': 'XLM',\n  'cosmos': 'ATOM',\n  'internet-computer': 'ICP',\n  'filecoin': 'FIL',\n  'ethereum-classic': 'ETC',\n  'monero': 'XMR',\n  'bitcoin-cash': 'BCH',\n  'litecoin': 'LTC'\n};\n\nexport default function PriceTicker() {\n  const [prices, setPrices] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPrices = async () => {\n      try {\n        const response = await axios.get(\n          'https://api.coingecko.com/api/v3/simple/price', {\n            params: {\n              ids: Object.keys(TOKENS).join(','),\n              vs_currencies: 'usd',\n              include_24hr_change: true\n            }\n          }\n        );\n        \n        const formattedPrices = Object.entries(response.data).map(([id, data]) => ({\n          id,\n          symbol: TOKENS[id],\n          price: data.usd,\n          change24h: data.usd_24h_change\n        }));\n        \n        setPrices(formattedPrices);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching prices:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchPrices();\n    const interval = setInterval(fetchPrices, 30000); // Update every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  if (loading) return null;\n\n  return (\n    <div className=\"flex-1 overflow-hidden\">\n      <div className=\"relative flex items-center\">\n        <div className=\"animate-ticker flex items-center gap-6 whitespace-nowrap\">\n          {[...prices, ...prices].map((coin, index) => (\n            <div \n              key={`${coin.id}-${index}`}\n              className=\"flex items-center gap-2\"\n            >\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                {coin.symbol}\n              </span>\n              <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                ${coin.price.toLocaleString(undefined, { maximumFractionDigits: 2 })}\n              </span>\n              <span className={`text-xs ${\n                coin.change24h >= 0 ? 'text-green-500' : 'text-red-500'\n              }`}>\n                {coin.change24h.toFixed(2)}%\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n} ","import React from 'react';\nimport { BiSun, BiMoon } from 'react-icons/bi';\nimport { useTheme } from '../context/ThemeContext';\nimport { useAccount } from 'wagmi';\nimport NetworkSelector from './NetworkSelector';\nimport PriceTicker from './PriceTicker';\n\nexport default function Header() {\n  const { isDarkMode, toggleTheme } = useTheme();\n  const { isConnected } = useAccount();\n\n  return (\n    <header className=\"fixed top-0 right-0 lg:left-64 left-0 h-16 bg-white dark:bg-[#0d0e12] border-b border-gray-200 dark:border-gray-800 px-6 flex items-center justify-between z-10 transition-all duration-300\">\n      <PriceTicker />\n      \n      <div className=\"flex items-center gap-4\">\n        <NetworkSelector />\n        \n        <button\n          onClick={toggleTheme}\n          className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-[#1a1b1f] text-gray-600 dark:text-gray-300\"\n        >\n          {isDarkMode ? <BiSun size={20} /> : <BiMoon size={20} />}\n        </button>\n      </div>\n    </header>\n  );\n}","const MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\nconst ACCEPTED_IMAGE_TYPES = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\n\nexport const validateFile = (file) => {\n  // Check if file exists and is a File or Blob object\n  if (!file || !(file instanceof File || file instanceof Blob)) {\n    throw new Error('Invalid file object');\n  }\n\n  // Get file type from either type property or name extension\n  let fileType = file.type;\n  if (!fileType && file.name) {\n    const extension = file.name.split('.').pop()?.toLowerCase();\n    switch (extension) {\n      case 'jpg':\n      case 'jpeg':\n        fileType = 'image/jpeg';\n        break;\n      case 'png':\n        fileType = 'image/png';\n        break;\n      case 'webp':\n        fileType = 'image/webp';\n        break;\n      default:\n        throw new Error('Unsupported file type. Please use .jpg, .jpeg, .png, or .webp');\n    }\n  }\n\n  // Validate file type\n  if (!fileType || !ACCEPTED_IMAGE_TYPES.includes(fileType.toLowerCase())) {\n    throw new Error('File must be .jpg, .jpeg, .png, or .webp');\n  }\n\n  // Check file size\n  if (!file.size || file.size > MAX_FILE_SIZE) {\n    throw new Error('File size must be less than 5MB');\n  }\n\n  // Additional check for empty files\n  if (file.size === 0) {\n    throw new Error('File is empty');\n  }\n};\n\nexport async function uploadTokenLogo(file) {\n  try {\n    // Validate file first\n    validateFile(file);\n    \n    // Convert file to FormData\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Upload to Pinata\n    const response = await fetch('https://api.pinata.cloud/pinning/pinFileToIPFS', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${import.meta.env.VITE_PINATA_JWT}`\n      },\n      body: formData\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `Upload failed with status ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    if (!data.IpfsHash) {\n      throw new Error('No IPFS hash returned from Pinata');\n    }\n\n    const ipfsUrl = `ipfs://${data.IpfsHash}`;\n    const httpUrl = `https://gateway.pinata.cloud/ipfs/${data.IpfsHash}`;\n\n    return {\n      ipfsUrl,\n      httpUrl\n    };\n  } catch (error) {\n    console.error('Upload Error:', error);\n    if (error.message.includes('401')) {\n      throw new Error('Invalid Pinata API key. Please check your configuration.');\n    } else if (error.message.includes('413')) {\n      throw new Error('File size too large. Please use a smaller image.');\n    } else {\n      throw error;\n    }\n  }\n}","export const NFTCollectionABI = {\n  ERC721: [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"quantity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_tokenURI\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"mint\",\n      \"outputs\": [],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_tokenURI\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"setTokenURI\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"config\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"maxSupply\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"mintPrice\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"maxPerWallet\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"releaseDate\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"mintEndDate\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"infiniteMint\",\n              \"type\": \"bool\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"paymentToken\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"enableWhitelist\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"internalType\": \"struct ICollectionTypes.CollectionConfig\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n      \"name\": \"mintedPerWallet\",\n      \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"addresses\",\n          \"type\": \"address[]\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"limits\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"setWhitelist\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_paymentToken\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPaymentToken\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    `error MaxSupplyExceeded()`,\n    `error InsufficientPayment()`,\n    `error MintingNotStarted()`,\n    `error MaxPerWalletExceeded()`,\n    `error InvalidMintAmount()`,\n  ],\n  ERC1155: [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_tokenURI\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"mint\",\n      \"outputs\": [],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"initialized\",\n      \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"config\",\n      \"outputs\": [{\n        \"components\": [\n          { \"internalType\": \"uint256\", \"name\": \"maxSupply\", \"type\": \"uint256\" },\n          { \"internalType\": \"uint256\", \"name\": \"mintPrice\", \"type\": \"uint256\" },\n          { \"internalType\": \"uint256\", \"name\": \"maxPerWallet\", \"type\": \"uint256\" },\n          { \"internalType\": \"uint256\", \"name\": \"releaseDate\", \"type\": \"uint256\" },\n          { \"internalType\": \"uint256\", \"name\": \"mintEndDate\", \"type\": \"uint256\" },\n          { \"internalType\": \"bool\", \"name\": \"infiniteMint\", \"type\": \"bool\" },\n          { \"internalType\": \"address\", \"name\": \"paymentToken\", \"type\": \"address\" },\n          { \"internalType\": \"bool\", \"name\": \"enableWhitelist\", \"type\": \"bool\" }\n        ],\n        \"internalType\": \"struct ICollectionTypes.CollectionConfig\",\n        \"name\": \"\",\n        \"type\": \"tuple\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        { \"indexed\": false, \"internalType\": \"string\", \"name\": \"message\", \"type\": \"string\" },\n        { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n      ],\n      \"name\": \"Debug\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"name\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"symbol\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"baseURI\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"Initialized\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n      \"name\": \"mintedPerWallet\",\n      \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_paymentToken\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPaymentToken\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ],\n  ERC721Royalty: [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"quantity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_tokenURI\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"mint\",\n      \"outputs\": [],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n      \"name\": \"mintedPerWallet\",\n      \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"config\",\n      \"outputs\": [{\n        \"components\": [\n          { \"internalType\": \"uint256\", \"name\": \"maxSupply\", \"type\": \"uint256\" },\n          { \"internalType\": \"uint256\", \"name\": \"mintPrice\", \"type\": \"uint256\" },\n          { \"internalType\": \"uint256\", \"name\": \"maxPerWallet\", \"type\": \"uint256\" },\n          { \"internalType\": \"uint256\", \"name\": \"releaseDate\", \"type\": \"uint256\" },\n          { \"internalType\": \"uint256\", \"name\": \"mintEndDate\", \"type\": \"uint256\" },\n          { \"internalType\": \"bool\", \"name\": \"infiniteMint\", \"type\": \"bool\" },\n          { \"internalType\": \"address\", \"name\": \"paymentToken\", \"type\": \"address\" },\n          { \"internalType\": \"bool\", \"name\": \"enableWhitelist\", \"type\": \"bool\" }\n        ],\n        \"internalType\": \"struct ICollectionTypes.CollectionConfig\",\n        \"name\": \"\",\n        \"type\": \"tuple\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"salePrice\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"royaltyInfo\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"receiver\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"royaltyAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ],\n  ERC1155Royalty: [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_tokenURI\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"mint\",\n      \"outputs\": [],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n      \"name\": \"mintedPerWallet\",\n      \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"config\",\n      \"outputs\": [{\n        \"components\": [\n          { \"internalType\": \"uint256\", \"name\": \"maxSupply\", \"type\": \"uint256\" },\n          { \"internalType\": \"uint256\", \"name\": \"mintPrice\", \"type\": \"uint256\" },\n          { \"internalType\": \"uint256\", \"name\": \"maxPerWallet\", \"type\": \"uint256\" },\n          { \"internalType\": \"uint256\", \"name\": \"releaseDate\", \"type\": \"uint256\" },\n          { \"internalType\": \"uint256\", \"name\": \"mintEndDate\", \"type\": \"uint256\" },\n          { \"internalType\": \"bool\", \"name\": \"infiniteMint\", \"type\": \"bool\" },\n          { \"internalType\": \"address\", \"name\": \"paymentToken\", \"type\": \"address\" },\n          { \"internalType\": \"bool\", \"name\": \"enableWhitelist\", \"type\": \"bool\" }\n        ],\n        \"internalType\": \"struct ICollectionTypes.CollectionConfig\",\n        \"name\": \"\",\n        \"type\": \"tuple\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"salePrice\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"royaltyInfo\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"receiver\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"royaltyAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ]\n}; ","import { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, addDoc, getDoc, getDocs, query, where, orderBy, updateDoc, serverTimestamp, onSnapshot, limit as firestoreLimit, doc, setDoc } from 'firebase/firestore';\nimport { getAnalytics } from 'firebase/analytics';\nimport { ethers } from 'ethers';\nimport { NFTCollectionABI } from '../abi/NFTCollection';\n\nconst firebaseConfig = {\n  apiKey: import.meta.env.VITE_FIREBASE_API_KEY,\n  authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,\n  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID,\n  storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,\n  appId: import.meta.env.VITE_FIREBASE_APP_ID,\n  measurementId: import.meta.env.VITE_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase once\nconst app = initializeApp(firebaseConfig);\nexport const analytics = getAnalytics(app);\nexport const db = getFirestore(app);\n\n// Collection references\nexport const collectionsRef = collection(db, 'collections');\nexport const tokenDeploymentsRef = collection(db, 'tokenDeployments');\nexport const mintsRef = collection(db, 'mints');\nexport const holdersRef = collection(db, 'holders');\nexport const mintersRef = collection(db, 'minters');\nexport const volumeRef = collection(db, 'volume');\nexport const tokenTransfersRef = collection(db, 'tokenTransfers');\nexport const poolsRef = collection(db, 'pools');\nexport const userPoolsRef = collection(db, 'userPools');\n\nexport const saveCollection = async (collectionData) => {\n  try {\n    const { artwork, ...collectionDataWithoutFile } = collectionData;\n    \n    const dataToSave = {\n      ...collectionDataWithoutFile,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    \n    const docRef = await addDoc(collectionsRef, dataToSave);\n    return docRef.id;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getCollection = async (symbol) => {\n  try {\n    const q = query(collectionsRef, where('symbol', '==', symbol));\n    const querySnapshot = await getDocs(q);\n    \n    if (!querySnapshot.empty) {\n      const doc = querySnapshot.docs[0];\n      return {\n        id: doc.id,\n        ...doc.data()\n      };\n    }\n    return null;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getAllCollections = async (filters = {}) => {\n  try {\n    let q = collection(db, 'collections');\n    const constraints = [];\n\n    if (filters.network && filters.network !== 'all') {\n      if (filters.network === 'unichain-mainnet') {\n        // For unichain-mainnet, we need to check both network and chainId\n        constraints.push(where('chainId', '==', 130));\n      } else if (filters.network === 'unichain') {\n        constraints.push(where('chainId', '==', 1301));\n      } else {\n        constraints.push(where('network', '==', filters.network));\n      }\n    }\n\n    if (filters.type && filters.type !== 'all') {\n      constraints.push(where('type', '==', filters.type));\n    }\n\n    // Add isRandomMint filter if specified\n    if (filters.isRandomMint) {\n      constraints.push(where('isRandomMint', '==', true));\n    }\n\n    // Always add createdAt ordering\n    constraints.push(orderBy('createdAt', 'desc'));\n\n    // Apply all constraints to the query\n    q = query(q, ...constraints);\n\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error in getAllCollections:', error);\n    throw error;\n  }\n};\n\nexport const updateCollectionMinted = async (symbol, newTotalMinted) => {\n  try {\n    const q = query(collectionsRef, where('symbol', '==', symbol));\n    const querySnapshot = await getDocs(q);\n    \n    if (!querySnapshot.empty) {\n      const docRef = querySnapshot.docs[0].ref;\n      await updateDoc(docRef, {\n        totalMinted: newTotalMinted,\n        updatedAt: serverTimestamp()\n      });\n      \n      return {\n        ...querySnapshot.docs[0].data(),\n        totalMinted: newTotalMinted\n      };\n    }\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const subscribeToCollection = (symbol, callback) => {\n  const q = query(collectionsRef, where('symbol', '==', symbol));\n  return onSnapshot(q, (snapshot) => {\n    if (!snapshot.empty) {\n      callback(snapshot.docs[0].data());\n    }\n  });\n};\n\nexport const saveTokenDeployment = async (deployment, walletAddress) => {\n  try {\n    if (!deployment.chainId || !deployment.chainName) {\n      throw new Error('chainId and chainName are required for token deployment');\n    }\n\n    await addDoc(tokenDeploymentsRef, {\n      ...deployment,\n      creatorAddress: walletAddress.toLowerCase(),\n      createdAt: Date.now(),\n      type: 'token',\n      chainId: deployment.chainId,\n      chainName: deployment.chainName\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getTokenDeploymentsByWallet = async (walletAddress) => {\n  try {\n    const q = query(\n      tokenDeploymentsRef,\n      where('creatorAddress', '==', walletAddress.toLowerCase())\n    );\n    \n    const querySnapshot = await getDocs(q);\n    const deployments = querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    return deployments.sort((a, b) => b.createdAt - a.createdAt);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getCollectionsByWallet = async (walletAddress) => {\n  try {\n    const q = query(\n      collectionsRef,\n      where('creatorAddress', '==', walletAddress.toLowerCase())\n    );\n    \n    const querySnapshot = await getDocs(q);\n    const collections = querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    return collections.sort((a, b) => b.createdAt - a.createdAt);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Analytics Functions\nexport const getRecentMints = async (collectionAddress) => {\n  try {\n    const q = query(\n      mintsRef,\n      where('collectionAddress', '==', collectionAddress),\n      orderBy('timestamp', 'desc'),\n      firestoreLimit(50)\n    );\n\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data(),\n      timestamp: doc.data().timestamp?.toDate()\n    }));\n  } catch (error) {\n    return [];\n  }\n};\n\n// Save mint data when NFT is minted\nexport const saveMintData = async (mintData) => {\n  try {\n    const { metadataUrl, ...sanitizedData } = mintData;\n\n    const cleanData = {\n      collectionAddress: sanitizedData.collectionAddress || '',\n      minterAddress: sanitizedData.minterAddress ? sanitizedData.minterAddress.toLowerCase() : '',\n      tokenId: String(sanitizedData.tokenId || '0'),\n      quantity: String(sanitizedData.quantity || '1'),\n      hash: String(sanitizedData.hash || ''),\n      image: String(sanitizedData.image || ''),\n      value: String(sanitizedData.value || '0'),\n      type: String(sanitizedData.type || 'ERC1155'),\n      name: sanitizedData.name || '',\n      symbol: sanitizedData.symbol || '',\n      artworkType: sanitizedData.artworkType || 'image',\n      network: sanitizedData.network || 'sepolia',\n      mintPrice: sanitizedData.mintPrice || '0',\n      paymentToken: sanitizedData.paymentToken || null,\n      timestamp: serverTimestamp()\n    };\n\n    if (!cleanData.collectionAddress || !cleanData.minterAddress) {\n      throw new Error('Missing required fields in mint data');\n    }\n\n    const docRef = await addDoc(mintsRef, cleanData);\n\n    const holderRef = query(\n      holdersRef,\n      where('collectionAddress', '==', cleanData.collectionAddress),\n      where('holderAddress', '==', cleanData.minterAddress)\n    );\n    \n    const holderSnapshot = await getDocs(holderRef);\n    const quantity = Number(cleanData.quantity);\n\n    if (holderSnapshot.empty) {\n      await addDoc(holdersRef, {\n        collectionAddress: cleanData.collectionAddress,\n        holderAddress: cleanData.minterAddress,\n        quantity: quantity,\n        lastUpdated: serverTimestamp()\n      });\n    } else {\n      const holderDoc = holderSnapshot.docs[0];\n      const currentQuantity = Number(holderDoc.data().quantity) || 0;\n      await updateDoc(holderDoc.ref, {\n        quantity: currentQuantity + quantity,\n        lastUpdated: serverTimestamp()\n      });\n    }\n\n    return docRef.id;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Subscribe to real-time mints\nexport const subscribeToMints = (collectionAddress, callback) => {\n  if (!collectionAddress) {\n    return () => {};\n  }\n\n  try {\n    const q = query(\n      mintsRef,\n      where('collectionAddress', '==', collectionAddress),\n      orderBy('timestamp', 'desc'),\n      firestoreLimit(50)\n    );\n\n    return onSnapshot(q, (snapshot) => {\n      const mints = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        timestamp: doc.data().timestamp?.toDate()\n      }));\n      \n      callback(mints);\n    }, (error) => {\n      callback([]);\n    });\n  } catch (error) {\n    callback([]);\n    return () => {};\n  }\n};\n\nexport const getTokenDeploymentByAddress = async (address) => {\n  try {\n    const q = query(\n      tokenDeploymentsRef, \n      where('address', '==', address)\n    );\n    const querySnapshot = await getDocs(q);\n    \n    if (!querySnapshot.empty) {\n      return querySnapshot.docs[0].data();\n    }\n    return null;\n  } catch (error) {\n    return null;\n  }\n};\n\n// Save token transaction\nexport const saveTokenTransaction = async (transactionData) => {\n  try {\n    const sanitizedData = {\n      fromAddress: transactionData.fromAddress.toLowerCase(),\n      toAddress: transactionData.toAddress.toLowerCase(),\n      tokenAddress: transactionData.tokenAddress,\n      tokenName: transactionData.tokenName,\n      tokenSymbol: transactionData.tokenSymbol,\n      tokenLogo: transactionData.tokenLogo,\n      amount: transactionData.amount,\n      network: transactionData.network,\n      hash: transactionData.hash,\n      timestamp: serverTimestamp()\n    };\n\n    const docRef = await addDoc(tokenTransactionsRef, sanitizedData);\n    return docRef.id;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get token transactions for an address (both sent and received)\nexport const getTokenTransactions = async (address) => {\n  try {\n    const sentQuery = query(\n      tokenTransactionsRef,\n      where('fromAddress', '==', address.toLowerCase()),\n      orderBy('timestamp', 'desc')\n    );\n\n    const receivedQuery = query(\n      tokenTransactionsRef,\n      where('toAddress', '==', address.toLowerCase()),\n      orderBy('timestamp', 'desc')\n    );\n\n    const [sentSnapshot, receivedSnapshot] = await Promise.all([\n      getDocs(sentQuery),\n      getDocs(receivedQuery)\n    ]);\n\n    const sentTransactions = sentSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data(),\n      type: 'sent'\n    }));\n\n    const receivedTransactions = receivedSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data(),\n      type: 'received'\n    }));\n\n    return [...sentTransactions, ...receivedTransactions];\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const getTokenDetails = async (tokenAddress) => {\n  try {\n    return await getTokenDeploymentByAddress(tokenAddress);\n  } catch (error) {\n    return null;\n  }\n};\n\nconst ETHERSCAN_API_KEY = import.meta.env.VITE_ETHERSCAN_API_KEY;\n\nconst getNFTBalanceFromContract = async (contractAddress, address) => {\n  try {\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    const collectionQuery = query(\n      collection(db, 'collections'),\n      where('contractAddress', '==', contractAddress)\n    );\n    const collectionSnapshot = await getDocs(collectionQuery);\n    const collectionData = collectionSnapshot.docs[0]?.data();\n    \n    if (collectionData?.type === 'ERC1155') {\n      const contract = new ethers.Contract(\n        contractAddress,\n        ['function balanceOf(address account, uint256 id) view returns (uint256)'],\n        provider\n      );\n      const balance = await contract.balanceOf(address, 1);\n      return Number(balance);\n    } else {\n      const contract = new ethers.Contract(\n        contractAddress,\n        ['function balanceOf(address) view returns (uint256)'],\n        provider\n      );\n      const balance = await contract.balanceOf(address);\n      return Number(balance);\n    }\n  } catch (error) {\n    return 0;\n  }\n};\n\nconst getNFTBalanceFromEtherscan = async (contractAddress, address) => {\n  try {\n    const response = await fetch(\n      `https://api-sepolia.etherscan.io/api?module=account&action=tokenbalance&contractaddress=${contractAddress}&address=${address}&tag=latest&apikey=${ETHERSCAN_API_KEY}`\n    );\n    const data = await response.json();\n    if (data.status === '1' && data.result) {\n      return Number(data.result);\n    }\n    return 0;\n  } catch (error) {\n    return 0;\n  }\n};\n\nexport const getOwnedNFTs = async (address) => {\n  try {\n    const mintsQuery = query(\n      collection(db, 'mints'),\n      where('minterAddress', '==', address.toLowerCase())\n    );\n    \n    const mintsSnapshot = await getDocs(mintsQuery);\n    const mints = mintsSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data(),\n      mintedAt: doc.data().timestamp?.toDate() || new Date(),\n    }));\n\n    const collectionsSnapshot = await getDocs(collection(db, 'collections'));\n    const collections = new Map();\n    \n    collectionsSnapshot.docs.forEach(doc => {\n      const data = doc.data();\n      if (data.contractAddress) {\n        collections.set(data.contractAddress.toLowerCase(), data);\n      }\n    });\n\n    const ownedNFTs = [];\n    const processedTokens = new Set();\n    \n    for (const mint of mints) {\n      const collection = collections.get(mint.collectionAddress?.toLowerCase());\n      \n      if (collection || mint.type === 'ERC1155') {\n        const baseEntry = {\n          ...mint,\n          ...(collection || {}),\n          tokenId: mint.tokenId || 1,\n          name: mint.name || collection?.name || 'Unknown Collection',\n          collectionName: collection?.name || mint.name,\n          type: mint.type || collection?.type || 'ERC721',\n          symbol: collection?.symbol || mint.symbol,\n          artworkType: collection?.artworkType || mint.artworkType || 'image',\n          network: collection?.network || mint.network || 'sepolia',\n          value: mint.value || collection?.mintPrice || '0',\n          paymentToken: mint.paymentToken || collection?.paymentToken || null\n        };\n\n        const tokenKey = `${baseEntry.collectionAddress}-${baseEntry.tokenId}`;\n        \n        if (!processedTokens.has(tokenKey)) {\n          processedTokens.add(tokenKey);\n          if (mint.type === 'ERC1155' && mint.balance > 1) {\n            for (let i = 0; i < mint.balance; i++) {\n              ownedNFTs.push({\n                ...baseEntry,\n                balance: 1,\n                uniqueId: `${tokenKey}-${i}`\n              });\n            }\n          } else {\n            ownedNFTs.push({\n              ...baseEntry,\n              balance: mint.balance || 1,\n              uniqueId: tokenKey\n            });\n          }\n        }\n      }\n    }\n\n    return ownedNFTs;\n  } catch (error) {\n    return [];\n  }\n};\n\n// Pool Management Functions\nexport const savePool = async (poolData) => {\n  try {\n    const { poolAddress } = poolData;\n    \n    if (!poolAddress) {\n      throw new Error('Pool address is required');\n    }\n\n    if (!poolData.creatorAddress) {\n      throw new Error('Creator address is required');\n    }\n\n    if (!poolData.token0?.address || !poolData.token1?.address) {\n      throw new Error('Token addresses are required');\n    }\n\n    const poolDataToSave = {\n      poolAddress: poolAddress,\n      creatorAddress: poolData.creatorAddress.toLowerCase(),\n      factory: poolData.factory,\n      token0: {\n        address: poolData.token0.address,\n        symbol: poolData.token0.symbol || 'Unknown',\n        name: poolData.token0.name || 'Unknown Token',\n        decimals: Number(poolData.token0.decimals || 18)\n      },\n      token1: {\n        address: poolData.token1.address,\n        symbol: poolData.token1.symbol || 'Unknown',\n        name: poolData.token1.name || 'Unknown Token',\n        decimals: Number(poolData.token1.decimals || 18)\n      },\n      reserves: poolData.reserves ? {\n        reserve0: String(poolData.reserves.reserve0 || '0'),\n        reserve1: String(poolData.reserves.reserve1 || '0')\n      } : {\n        reserve0: '0',\n        reserve1: '0'\n      },\n      totalLiquidity: '0',\n      createdAt: serverTimestamp(),\n      lastUpdated: serverTimestamp()\n    };\n\n    const poolRef = doc(poolsRef, poolAddress);\n    await setDoc(poolRef, poolDataToSave);\n\n    const userPoolId = `${poolData.creatorAddress.toLowerCase()}_${poolAddress}`;\n    const userPoolData = {\n      userAddress: poolData.creatorAddress.toLowerCase(),\n      poolAddress,\n      lpTokenBalance: '0',\n      token0Amount: '0',\n      token1Amount: '0',\n      lastUpdated: serverTimestamp()\n    };\n\n    await setDoc(doc(userPoolsRef, userPoolId), userPoolData);\n\n    return poolAddress;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getPool = async (poolAddress) => {\n  try {\n    const poolDoc = await getDoc(doc(poolsRef, poolAddress));\n    if (poolDoc.exists()) {\n      return {\n        id: poolDoc.id,\n        ...poolDoc.data()\n      };\n    }\n    return null;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getUserPools = async (userAddress) => {\n  try {\n    const creatorQuery = query(\n      poolsRef,\n      where('creatorAddress', '==', userAddress.toLowerCase())\n    );\n    \n    const creatorPoolsSnapshot = await getDocs(creatorQuery);\n    const pools = [];\n    \n    for (const doc of creatorPoolsSnapshot.docs) {\n      const poolData = doc.data();\n      pools.push({\n        ...poolData,\n        pairAddress: doc.id,\n        source: 'firebase'\n      });\n    }\n\n    const userPoolsQuery = query(\n      userPoolsRef,\n      where('userAddress', '==', userAddress.toLowerCase())\n    );\n    \n    const userPoolsSnapshot = await getDocs(userPoolsQuery);\n    \n    for (const userPoolDoc of userPoolsSnapshot.docs) {\n      const userPool = userPoolDoc.data();\n      \n      if (!pools.some(p => p.pairAddress.toLowerCase() === userPool.poolAddress.toLowerCase())) {\n        try {\n          const poolDocRef = doc(poolsRef, userPool.poolAddress);\n          const poolDoc = await getDoc(poolDocRef);\n          \n          if (poolDoc.exists()) {\n            const poolData = poolDoc.data();\n            \n            pools.push({\n              ...poolData,\n              pairAddress: userPool.poolAddress,\n              userLiquidity: {\n                lpTokenBalance: userPool.lpTokenBalance || '0',\n                token0Amount: userPool.token0Amount || '0',\n                token1Amount: userPool.token1Amount || '0'\n              },\n              source: 'firebase'\n            });\n          }\n        } catch (poolError) {\n          // Silent fail for individual pool errors\n        }\n      }\n    }\n    \n    return pools;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const updatePoolReserves = async (poolAddress, reserves) => {\n  try {\n    const poolRef = doc(poolsRef, poolAddress);\n    await updateDoc(poolRef, {\n      reserves,\n      lastUpdated: serverTimestamp()\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const updateUserPoolPosition = async (userAddress, poolAddress, position) => {\n  try {\n    const userPoolId = `${userAddress.toLowerCase()}_${poolAddress}`;\n    await setDoc(doc(userPoolsRef, userPoolId), {\n      userAddress: userAddress.toLowerCase(),\n      poolAddress,\n      ...position,\n      lastUpdated: serverTimestamp()\n    }, { merge: true });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getAllTokenDeployments = async () => {\n  try {\n    const q = query(\n      tokenDeploymentsRef,\n      where('type', '==', 'token'),\n      orderBy('createdAt', 'desc')\n    );\n    \n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    return [];\n  }\n};\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { saveTokenDeployment, getAllTokenDeployments, getCollectionsByWallet } from '../services/firebase';\n\nconst DeploymentsContext = createContext();\n\nexport function DeploymentsProvider({ children }) {\n  const { address } = useAccount();\n  const [deployments, setDeployments] = useState([]);\n  const [nftDeployments, setNftDeployments] = useState([]);\n\n  // Load deployments from Firebase when wallet connects/changes\n  useEffect(() => {\n    const loadDeployments = async () => {\n      try {\n        // Load all token deployments regardless of creator\n        const allDeployments = await getAllTokenDeployments();\n        setDeployments(allDeployments);\n\n        // Load NFT deployments only for connected wallet\n        if (address) {\n          const nftCollections = await getCollectionsByWallet(address);\n          const formattedNftDeployments = nftCollections.map(nft => ({\n            ...nft,\n            type: 'nft',\n            logo: nft.previewUrl,\n            logoIpfs: nft.imageIpfsUrl,\n            totalSupply: nft.maxSupply,\n            timestamp: nft.createdAt,\n            chainName: nft.network === 'polygon' ? 'Polygon' : \n              nft.network === 'monad-testnet' ? 'Monad Testnet' : \n              nft.network === 'unichain-mainnet' || nft.chainId === 130 ? 'Unichain Mainnet' :\n              nft.network === 'sepolia' ? 'Sepolia' : nft.network\n          }));\n          setNftDeployments(formattedNftDeployments);\n        } else {\n          setNftDeployments([]);\n        }\n      } catch (error) {\n        console.error('Error loading deployments:', error);\n        setDeployments([]);\n        setNftDeployments([]);\n      }\n    };\n\n    loadDeployments();\n  }, [address]);\n\n  const addDeployment = async (deployment) => {\n    if (!address) return;\n    \n    try {\n      await saveTokenDeployment(deployment, address);\n      // Refresh all deployments after adding a new one\n      const allDeployments = await getAllTokenDeployments();\n      setDeployments(allDeployments);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Combine token and NFT deployments for the UI\n  const allDeployments = [...deployments, ...nftDeployments]\n    .sort((a, b) => {\n      const timeA = a.timestamp || a.createdAt;\n      const timeB = b.timestamp || b.createdAt;\n      return timeB - timeA;\n    })\n    .slice(0, 10);\n\n  return (\n    <DeploymentsContext.Provider value={{ deployments: allDeployments, addDeployment }}>\n      {children}\n    </DeploymentsContext.Provider>\n  );\n}\n\nexport const useDeployments = () => {\n  const context = useContext(DeploymentsContext);\n  if (!context) {\n    throw new Error('useDeployments must be used within a DeploymentsProvider');\n  }\n  return context;\n}; ","import axios from 'axios';\nimport { NFTMetadata } from '../types/nft';\n\nconst PINATA_JWT = import.meta.env.VITE_PINATA_JWT;\nconst PINATA_API = 'https://api.pinata.cloud/pinning';\nconst IPFS_GATEWAY = 'https://ipfs.io/ipfs/';\n\nexport async function uploadFileToIPFS(file: File): Promise<string> {\n  const formData = new FormData();\n  formData.append('file', file);\n\n  const response = await axios.post(`${PINATA_API}/pinFileToIPFS`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      Authorization: `Bearer ${PINATA_JWT}`,\n    },\n    maxBodyLength: Infinity,\n  });\n\n  const ipfsHash = response.data.IpfsHash;\n  return `ipfs://${ipfsHash}`;\n}\n\nexport async function uploadMetadataToIPFS(metadata: NFTMetadata): Promise<string> {\n  const metadataCopy = { ...metadata };\n\n  const response = await axios.post(\n    `${PINATA_API}/pinJSONToIPFS`,\n    metadataCopy,\n    {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${PINATA_JWT}`,\n      },\n    }\n  );\n\n  return `ipfs://${response.data.IpfsHash}`;\n}\n\nexport function ipfsToHttp(ipfsUrl: string): string {\n  if (!ipfsUrl) return '';\n  if (ipfsUrl.startsWith('http')) return ipfsUrl;\n  return ipfsUrl.replace('ipfs://', IPFS_GATEWAY);\n} ","import { ethers } from 'ethers';\nimport { db } from './firebase';\nimport { collection, addDoc, query, where, getDocs, orderBy } from 'firebase/firestore';\n\nconst tokenTransfersRef = collection(db, 'tokenTransfers');\n\n// ERC20 Transfer event interface\nconst ERC20_TRANSFER_ABI = [\n  \"event Transfer(address indexed from, address indexed to, uint256 value)\"\n];\n\n// NFT Transfer event interfaces\nconst ERC721_TRANSFER_ABI = [\n  \"event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)\"\n];\n\nconst ERC1155_TRANSFER_SINGLE_ABI = [\n  \"event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)\"\n];\n\nconst ERC1155_TRANSFER_BATCH_ABI = [\n  \"event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)\"\n];\n\n// Keep track of active listeners and processed transactions to avoid duplicates\nconst activeListeners = new Map();\nconst processedTransactions = new Set();\n\nexport const trackTokenTransfers = async (tokenAddress, provider) => {\n  try {\n    // If already tracking this token, don't create another listener\n    if (activeListeners.has(tokenAddress)) {\n      return;\n    }\n\n    const contract = new ethers.Contract(tokenAddress, ERC20_TRANSFER_ABI, provider);\n    \n    // Get the latest block number\n    const latestBlock = await provider.getBlockNumber();\n\n    // Get the network to determine chain ID\n    const network = await provider.getNetwork();\n    const chainId = network.chainId;\n\n    // Check for any recent transfers (last 10000 blocks)\n    const filter = contract.filters.Transfer();\n    const startBlock = Math.max(0, latestBlock - 10000);\n    \n    const events = await contract.queryFilter(filter, startBlock, latestBlock);\n\n    // Save historical transfers\n    for (const event of events) {\n      const txKey = `${event.transactionHash}-${event.args[0]}-${event.args[1]}-${event.args[2]}`;\n      \n      // Skip if we've already processed this transaction\n      if (processedTransactions.has(txKey)) {\n        continue;\n      }\n\n      // Get the block to get the timestamp\n      const block = await provider.getBlock(event.blockNumber);\n\n      const transfer = {\n        tokenAddress,\n        fromAddress: event.args[0].toLowerCase(),\n        toAddress: event.args[1].toLowerCase(),\n        amount: event.args[2].toString(),\n        transactionHash: event.transactionHash,\n        blockNumber: event.blockNumber,\n        timestamp: block.timestamp * 1000,\n        chainId: Number(chainId)\n      };\n\n      // Check if this transfer is already recorded\n      const existingQuery = query(\n        tokenTransfersRef,\n        where('transactionHash', '==', transfer.transactionHash),\n        where('fromAddress', '==', transfer.fromAddress),\n        where('toAddress', '==', transfer.toAddress)\n      );\n      const existingDocs = await getDocs(existingQuery);\n      \n      if (existingDocs.empty) {\n        await addDoc(tokenTransfersRef, transfer);\n      }\n\n      // Mark this transaction as processed\n      processedTransactions.add(txKey);\n    }\n\n    // Set up listener for new transfers\n    const listener = contract.on(\"Transfer\", async (from, to, value, event) => {\n      const txKey = `${event.transactionHash}-${from}-${to}-${value}`;\n      \n      // Skip if we've already processed this transaction\n      if (processedTransactions.has(txKey)) {\n        return;\n      }\n\n      // Get the block to get the timestamp\n      const block = await provider.getBlock(event.blockNumber);\n\n      const transfer = {\n        tokenAddress,\n        fromAddress: from.toLowerCase(),\n        toAddress: to.toLowerCase(),\n        amount: value.toString(),\n        transactionHash: event.transactionHash,\n        blockNumber: event.blockNumber,\n        timestamp: block.timestamp * 1000,\n        chainId: Number(chainId)\n      };\n\n      // Check if this transfer is already recorded\n      const existingQuery = query(\n        tokenTransfersRef,\n        where('transactionHash', '==', transfer.transactionHash),\n        where('fromAddress', '==', transfer.fromAddress),\n        where('toAddress', '==', transfer.toAddress)\n      );\n      const existingDocs = await getDocs(existingQuery);\n      \n      if (existingDocs.empty) {\n        await addDoc(tokenTransfersRef, transfer);\n      }\n\n      // Mark this transaction as processed\n      processedTransactions.add(txKey);\n    });\n\n    activeListeners.set(tokenAddress, listener);\n\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const trackNFTTransfers = async (contractAddress, nftType, provider) => {\n  try {\n    // If already tracking this NFT contract, don't create another listener\n    if (activeListeners.has(contractAddress)) {\n      return;\n    }\n\n    const abi = nftType === 'ERC1155' ? \n      [...ERC1155_TRANSFER_SINGLE_ABI, ...ERC1155_TRANSFER_BATCH_ABI] : \n      ERC721_TRANSFER_ABI;\n\n    const contract = new ethers.Contract(contractAddress, abi, provider);\n    \n    // Get the latest block number\n    const latestBlock = await provider.getBlockNumber();\n\n    // Get the network to determine chain ID\n    const network = await provider.getNetwork();\n    const chainId = network.chainId;\n\n    // Check for any recent transfers (last 10000 blocks)\n    const startBlock = Math.max(0, latestBlock - 10000);\n    \n    if (nftType === 'ERC1155') {\n      // Handle ERC1155 historical transfers\n      const singleFilter = contract.filters.TransferSingle();\n      const batchFilter = contract.filters.TransferBatch();\n      \n      const [singleEvents, batchEvents] = await Promise.all([\n        contract.queryFilter(singleFilter, startBlock, latestBlock),\n        contract.queryFilter(batchFilter, startBlock, latestBlock)\n      ]);\n\n      // Process single transfers\n      for (const event of singleEvents) {\n        const block = await provider.getBlock(event.blockNumber);\n        const transfer = {\n          contractAddress,\n          fromAddress: event.args[1].toLowerCase(),\n          toAddress: event.args[2].toLowerCase(),\n          tokenId: event.args[3].toString(),\n          amount: event.args[4].toString(),\n          transactionHash: event.transactionHash,\n          blockNumber: event.blockNumber,\n          timestamp: block.timestamp * 1000,\n          chainId: Number(chainId)\n        };\n\n        await saveNFTTransfer(transfer);\n      }\n\n      // Process batch transfers\n      for (const event of batchEvents) {\n        const block = await provider.getBlock(event.blockNumber);\n        const ids = event.args[3];\n        const amounts = event.args[4];\n        \n        for (let i = 0; i < ids.length; i++) {\n          const transfer = {\n            contractAddress,\n            fromAddress: event.args[1].toLowerCase(),\n            toAddress: event.args[2].toLowerCase(),\n            tokenId: ids[i].toString(),\n            amount: amounts[i].toString(),\n            transactionHash: event.transactionHash,\n            blockNumber: event.blockNumber,\n            timestamp: block.timestamp * 1000,\n            chainId: Number(chainId)\n          };\n\n          await saveNFTTransfer(transfer);\n        }\n      }\n\n      // Set up listeners for new transfers\n      const singleListener = contract.on(\"TransferSingle\", async (operator, from, to, id, value, event) => {\n        const block = await provider.getBlock(event.blockNumber);\n        const transfer = {\n          contractAddress,\n          fromAddress: from.toLowerCase(),\n          toAddress: to.toLowerCase(),\n          tokenId: id.toString(),\n          amount: value.toString(),\n          transactionHash: event.transactionHash,\n          blockNumber: event.blockNumber,\n          timestamp: block.timestamp * 1000,\n          chainId: Number(chainId)\n        };\n\n        await saveNFTTransfer(transfer);\n      });\n\n      const batchListener = contract.on(\"TransferBatch\", async (operator, from, to, ids, values, event) => {\n        const block = await provider.getBlock(event.blockNumber);\n        for (let i = 0; i < ids.length; i++) {\n          const transfer = {\n            contractAddress,\n            fromAddress: from.toLowerCase(),\n            toAddress: to.toLowerCase(),\n            tokenId: ids[i].toString(),\n            amount: values[i].toString(),\n            transactionHash: event.transactionHash,\n            blockNumber: event.blockNumber,\n            timestamp: block.timestamp * 1000,\n            chainId: Number(chainId)\n          };\n\n          await saveNFTTransfer(transfer);\n        }\n      });\n\n      activeListeners.set(contractAddress, [singleListener, batchListener]);\n    } else {\n      // Handle ERC721 transfers\n      const filter = contract.filters.Transfer();\n      const events = await contract.queryFilter(filter, startBlock, latestBlock);\n\n      for (const event of events) {\n        const block = await provider.getBlock(event.blockNumber);\n        const transfer = {\n          contractAddress,\n          fromAddress: event.args[0].toLowerCase(),\n          toAddress: event.args[1].toLowerCase(),\n          tokenId: event.args[2].toString(),\n          amount: '1',\n          transactionHash: event.transactionHash,\n          blockNumber: event.blockNumber,\n          timestamp: block.timestamp * 1000,\n          chainId: Number(chainId)\n        };\n\n        await saveNFTTransfer(transfer);\n      }\n\n      // Set up listener for new transfers\n      const listener = contract.on(\"Transfer\", async (from, to, tokenId, event) => {\n        const block = await provider.getBlock(event.blockNumber);\n        const transfer = {\n          contractAddress,\n          fromAddress: from.toLowerCase(),\n          toAddress: to.toLowerCase(),\n          tokenId: tokenId.toString(),\n          amount: '1',\n          transactionHash: event.transactionHash,\n          blockNumber: event.blockNumber,\n          timestamp: block.timestamp * 1000,\n          chainId: Number(chainId)\n        };\n\n        await saveNFTTransfer(transfer);\n      });\n\n      activeListeners.set(contractAddress, listener);\n    }\n\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst saveNFTTransfer = async (transfer) => {\n  try {\n    // Check if this transfer is already recorded\n    const existingQuery = query(\n      collection(db, 'nftTransfers'),\n      where('transactionHash', '==', transfer.transactionHash),\n      where('tokenId', '==', transfer.tokenId)\n    );\n    const existingDocs = await getDocs(existingQuery);\n    \n    if (existingDocs.empty) {\n      await addDoc(collection(db, 'nftTransfers'), transfer);\n    }\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getTokenTransfersForAddress = async (address) => {\n  try {\n    // Query for transfers where address is either sender or receiver\n    const sentQuery = query(\n      tokenTransfersRef,\n      where('fromAddress', '==', address.toLowerCase()),\n      orderBy('timestamp', 'desc')\n    );\n\n    const receivedQuery = query(\n      tokenTransfersRef,\n      where('toAddress', '==', address.toLowerCase()),\n      orderBy('timestamp', 'desc')\n    );\n\n    const [sentSnapshot, receivedSnapshot] = await Promise.all([\n      getDocs(sentQuery),\n      getDocs(receivedQuery)\n    ]);\n\n    const sentTransfers = sentSnapshot.docs.map(doc => {\n      const data = doc.data();\n      return {\n        id: doc.id,\n        ...data,\n        type: 'sent',\n        timestamp: new Date(data.timestamp)\n      };\n    });\n\n    const receivedTransfers = receivedSnapshot.docs.map(doc => {\n      const data = doc.data();\n      return {\n        id: doc.id,\n        ...data,\n        type: 'received',\n        timestamp: new Date(data.timestamp)\n      };\n    });\n\n    // Combine and sort by timestamp\n    const allTransfers = [...sentTransfers, ...receivedTransfers].sort(\n      (a, b) => b.timestamp.getTime() - a.timestamp.getTime()\n    );\n\n    return allTransfers;\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const getNFTTransfersForAddress = async (address) => {\n  try {\n    // Query for NFT transfers where address is either sender or receiver\n    const sentQuery = query(\n      collection(db, 'nftTransfers'),\n      where('fromAddress', '==', address.toLowerCase()),\n      orderBy('timestamp', 'desc')\n    );\n\n    const receivedQuery = query(\n      collection(db, 'nftTransfers'),\n      where('toAddress', '==', address.toLowerCase()),\n      orderBy('timestamp', 'desc')\n    );\n\n    const [sentSnapshot, receivedSnapshot] = await Promise.all([\n      getDocs(sentQuery),\n      getDocs(receivedQuery)\n    ]);\n\n    const sentTransfers = sentSnapshot.docs.map(doc => {\n      const data = doc.data();\n      return {\n        id: doc.id,\n        ...data,\n        type: 'sent',\n        timestamp: new Date(data.timestamp)\n      };\n    });\n\n    const receivedTransfers = receivedSnapshot.docs.map(doc => {\n      const data = doc.data();\n      return {\n        id: doc.id,\n        ...data,\n        type: 'received',\n        timestamp: new Date(data.timestamp)\n      };\n    });\n\n    // Combine and sort by timestamp\n    const allTransfers = [...sentTransfers, ...receivedTransfers].sort(\n      (a, b) => b.timestamp.getTime() - a.timestamp.getTime()\n    );\n\n    return allTransfers;\n  } catch (error) {\n    return [];\n  }\n}; ","import React, { useState, useEffect, Fragment } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { ethers } from 'ethers';\nimport toast from 'react-hot-toast';\nimport { BiX, BiImageAdd, BiCopy, BiWallet } from 'react-icons/bi';\nimport clsx from 'clsx';\nimport { useAccount, useNetwork } from 'wagmi';\nimport TokenFactoryABI from '../contracts/TokenFactory.json';\nimport { uploadTokenLogo } from '../services/storage';\nimport { useDeployments } from '../context/DeploymentsContext';\nimport { ipfsToHttp } from '../utils/ipfs';\nimport { trackTokenTransfers } from '../services/tokenTransfers';\nimport Confetti from 'react-confetti';\nimport { useWallet } from '../context/WalletContext';\n\n// Add required keyframe animations\nconst style = document.createElement('style');\nstyle.textContent = `\n  @keyframes draw {\n    to {\n      stroke-dashoffset: 0;\n    }\n  }\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes bounce {\n    0%, 100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-3px);\n    }\n  }\n  @keyframes shake {\n    0%, 100% {\n      transform: translateX(0);\n    }\n    25% {\n      transform: translateX(-2px);\n    }\n    75% {\n      transform: translateX(2px);\n    }\n  }\n`;\ndocument.head.appendChild(style);\n\n// Icons for token creation progress modal\nconst Icons = {\n  Preparing: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ animation: 'rotate 2s linear infinite' }}>\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M12 6v2m0 8v2M6 12h2m8 0h2\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite' }} />\n        <path d=\"M7.75 7.75l1.5 1.5m5.5 5.5l1.5 1.5m0-8.5l-1.5 1.5m-5.5 5.5l-1.5 1.5\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite', animationDelay: '0.2s' }} />\n      </g>\n    </svg>\n  ),\n  UploadingLogo: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M12 18V8m0 0l-4 4m4-4l4 4\" strokeLinecap=\"round\" strokeLinejoin=\"round\" style={{ animation: 'bounce 1s ease-in-out infinite' }} />\n        <path d=\"M8 18h8\" strokeLinecap=\"round\" style={{ animation: 'fadeIn 1s ease-in-out infinite', animationDelay: '0.5s' }} />\n      </g>\n    </svg>\n  ),\n  CreatingToken: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M7 8h10M7 12h10M7 16h10\" strokeLinecap=\"round\" style={{ animation: 'draw 2s ease-in-out infinite' }} />\n        <path d=\"M12 6v12\" strokeLinecap=\"round\" style={{ animation: 'draw 2s ease-in-out infinite', animationDelay: '0.5s' }} />\n        <circle cx=\"12\" cy=\"12\" r=\"3\" style={{ animation: 'rotate 4s linear infinite' }} />\n      </g>\n    </svg>\n  ),\n  Completed: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"animate-[fadeIn_0.5s_ease-in-out]\" />\n        <path d=\"M8 12l3 3 5-5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.5s_ease-in-out_forwards]\" style={{ strokeDasharray: 20, strokeDashoffset: 20 }} />\n      </g>\n    </svg>\n  ),\n  Error: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\" style={{ animation: 'shake 0.5s ease-in-out' }}>\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"text-red-500\" />\n        <path d=\"M12 8v5\" strokeLinecap=\"round\" className=\"text-red-500\" />\n        <path d=\"M12 16v.01\" strokeLinecap=\"round\" className=\"text-red-500\" />\n      </g>\n    </svg>\n  )\n};\n\n// Network Configuration\nconst CHAIN_IDS = {\n  SEPOLIA: 11155111,\n  POLYGON: 137,\n  UNICHAIN_MAINNET: 130,\n  UNICHAIN: 1301,\n  MOONWALKER: 1828369849,\n  MONAD_TESTNET: 10143\n};\n\nconst FACTORY_ADDRESSES = {\n  [CHAIN_IDS.SEPOLIA]: import.meta.env.VITE_FACTORY_ADDRESS_11155111,\n  [CHAIN_IDS.POLYGON]: import.meta.env.VITE_FACTORY_ADDRESS_137,\n  [CHAIN_IDS.UNICHAIN_MAINNET]: import.meta.env.VITE_FACTORY_ADDRESS_130,\n  [CHAIN_IDS.UNICHAIN]: import.meta.env.VITE_FACTORY_ADDRESS_1301,\n  [CHAIN_IDS.MOONWALKER]: import.meta.env.VITE_FACTORY_ADDRESS_1828369849,\n  [CHAIN_IDS.MONAD_TESTNET]: import.meta.env.VITE_FACTORY_ADDRESS_10143\n};\n\nconst CHAIN_FEES = {\n  [CHAIN_IDS.SEPOLIA]: \"0.01\",    // Sepolia fee in ETH\n  [CHAIN_IDS.POLYGON]: \"20\",      // Polygon fee in POL\n  [CHAIN_IDS.UNICHAIN_MAINNET]: \"0.01\",   // Unichain Mainnet fee in ETH\n  [CHAIN_IDS.UNICHAIN]: \"0.01\",   // Unichain fee in ETH\n  [CHAIN_IDS.MOONWALKER]: \"369\",   // Moonwalker fee in ZERO\n  [CHAIN_IDS.MONAD_TESTNET]: \"0.01\"  // Monad Testnet fee in MON\n};\n\nconst NETWORK_NAMES = {\n  [CHAIN_IDS.SEPOLIA]: 'Sepolia',\n  [CHAIN_IDS.POLYGON]: 'Polygon',\n  [CHAIN_IDS.UNICHAIN_MAINNET]: 'Unichain Mainnet',\n  [CHAIN_IDS.UNICHAIN]: 'Unichain Testnet',\n  [CHAIN_IDS.MOONWALKER]: 'Moonwalker',\n  [CHAIN_IDS.MONAD_TESTNET]: 'Monad Testnet'\n};\n\nconst NETWORK_CURRENCIES = {\n  [CHAIN_IDS.SEPOLIA]: 'ETH',\n  [CHAIN_IDS.POLYGON]: 'POL',\n  [CHAIN_IDS.UNICHAIN_MAINNET]: 'ETH',\n  [CHAIN_IDS.UNICHAIN]: 'ETH',\n  [CHAIN_IDS.MOONWALKER]: 'ZERO',\n  [CHAIN_IDS.MONAD_TESTNET]: 'MON'\n};\n\n// Progress Modal Component\nconst ProgressModal = ({ isOpen, onClose, currentStep, tokenName, error, deployedAddress }) => {\n  const steps = [\n    { key: 'preparing', label: 'Preparing Transaction', icon: Icons.Preparing },\n    { key: 'uploading', label: 'Uploading Logo', icon: Icons.UploadingLogo },\n    { key: 'creating', label: 'Creating Token', icon: Icons.CreatingToken },\n    { key: 'completed', label: 'Token Created Successfully', icon: Icons.Completed }\n  ];\n\n  const currentStepIndex = steps.findIndex(step => step.key === currentStep);\n  const isError = Boolean(error);\n\n  // Format error message to be more user-friendly\n  const formatErrorMessage = (error) => {\n    if (error?.includes('user rejected action')) {\n      return 'Transaction was rejected. Please try again.';\n    }\n    if (error?.includes('insufficient funds')) {\n      return 'Insufficient funds to complete the transaction.';\n    }\n    return error?.replace(/\\{\"action\":\"sendTransaction\".*$/, '') || 'An error occurred';\n  };\n\n  const copyToClipboard = async (text) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      toast.success('Address copied to clipboard!');\n    } catch (err) {\n      toast.error('Failed to copy address');\n    }\n  };\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-[99999]\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/25 backdrop-blur-sm z-[99999]\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto z-[99999]\">\n          <div className=\"flex min-h-full items-center justify-center p-4\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all\">\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                  {error ? 'Error Creating Token' : 'Creating Token'}\n                  {tokenName && !error && (\n                    <div className=\"mt-2 text-base font-normal text-gray-500 dark:text-gray-400\">\n                      {tokenName}\n                    </div>\n                  )}\n                </Dialog.Title>\n                <div className=\"space-y-4\">\n                  {steps.map((step, index) => {\n                    const Icon = step.icon;\n                    const isActive = index === currentStepIndex;\n                    const isCompleted = !error && index < currentStepIndex;\n                    const isErrorStep = error && index === currentStepIndex;\n\n                    return (\n                      <div\n                        key={step.key}\n                        className={clsx(\n                          'flex items-center gap-3 p-3 rounded-xl transition-colors',\n                          {\n                            'bg-[#00ffbd]/10 text-[#00ffbd]': isActive && !isErrorStep,\n                            'text-[#00ffbd]': isCompleted,\n                            'bg-red-500/10 text-red-500': isErrorStep,\n                            'text-gray-400': !isActive && !isCompleted && !isErrorStep\n                          }\n                        )}\n                      >\n                        <Icon />\n                        <div className=\"flex-1\">\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{step.label}</span>\n                          {isActive && step.key === 'creating' && !error && (\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                              Creating token {tokenName}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n                {error && (\n                  <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\n                    <div className=\"flex items-start gap-3\">\n                      <Icons.Error />\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\n                        <p className=\"mt-1 text-sm text-red-400\">\n                          {formatErrorMessage(error)}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4 flex justify-end\">\n                      <button\n                        onClick={onClose}\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                )}\n                {currentStep === 'completed' && (\n                  <div className=\"mt-6 space-y-4\">\n                    <div className=\"text-center\">\n                      <p className=\"text-[#00ffbd] font-medium text-lg\">Token created successfully! 🎉</p>\n                      <p className=\"text-gray-500 dark:text-gray-400 mt-2\">Your token has been deployed and is ready for use</p>\n                    </div>\n                    \n                    <div className=\"bg-gray-50 dark:bg-[#2d2f36] p-4 rounded-xl border border-gray-200 dark:border-gray-700\">\n                      <h3 className=\"text-gray-900 dark:text-white font-medium mb-3\">Token Contract Address</h3>\n                      <div className=\"flex items-center gap-2 p-2 bg-gray-100 dark:bg-[#1a1b1f] rounded-lg\">\n                        <code className=\"text-sm text-gray-800 dark:text-gray-200 flex-1 break-all\">\n                          {deployedAddress}\n                        </code>\n                        <button\n                          onClick={() => copyToClipboard(deployedAddress)}\n                          className=\"p-2 hover:bg-gray-200 dark:hover:bg-gray-800 rounded-md transition-colors\"\n                          title=\"Copy address\"\n                        >\n                          <BiCopy className=\"w-5 h-5 text-gray-600 dark:text-gray-400\" />\n                        </button>\n                      </div>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\n                        ℹ️ Copy this address to import your token in your wallet\n                      </p>\n                    </div>\n                    \n                    <div className=\"bg-gray-50 dark:bg-[#2d2f36] p-4 rounded-xl border border-gray-200 dark:border-gray-700\">\n                      <h3 className=\"text-gray-900 dark:text-white font-medium mb-3\">Next Steps</h3>\n                      \n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-start gap-3\">\n                          <div className=\"w-6 h-6 rounded-full bg-[#00ffbd]/10 flex items-center justify-center text-[#00ffbd] shrink-0\">1</div>\n                          <div>\n                            <p className=\"text-gray-900 dark:text-white font-medium\">Import Token</p>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">Add the token to your wallet using the contract address above</p>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-start gap-3\">\n                          <div className=\"w-6 h-6 rounded-full bg-[#00ffbd]/10 flex items-center justify-center text-[#00ffbd] shrink-0\">2</div>\n                          <div>\n                            <p className=\"text-gray-900 dark:text-white font-medium\">Add Liquidity</p>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">Provide liquidity to enable trading of your token</p>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-start gap-3\">\n                          <div className=\"w-6 h-6 rounded-full bg-[#00ffbd]/10 flex items-center justify-center text-[#00ffbd] shrink-0\">3</div>\n                          <div>\n                            <p className=\"text-gray-900 dark:text-white font-medium\">Start Trading</p>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">Use TokenFactory Swap to trade your token</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Star Rating Modal Component\nconst StarRatingModal = ({ isOpen, onClose, onRate }) => {\n  const [rating, setRating] = useState(0);\n  const [hoveredRating, setHoveredRating] = useState(0);\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/25 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 shadow-xl transition-all\">\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white text-center mb-4\">\n                  Rate Your Experience\n                </Dialog.Title>\n                <div className=\"flex justify-center gap-2 mb-6\">\n                  {[...Array(9)].map((_, index) => (\n                    <button\n                      key={index}\n                      onMouseEnter={() => setHoveredRating(index + 1)}\n                      onMouseLeave={() => setHoveredRating(0)}\n                      onClick={() => {\n                        setRating(index + 1);\n                        onRate(index + 1);\n                        onClose();\n                      }}\n                      className=\"focus:outline-none\"\n                    >\n                      <svg\n                        className={`w-8 h-8 transition-colors ${\n                          index + 1 <= (hoveredRating || rating) ? 'text-[#00ffbd]' : 'text-gray-300 dark:text-gray-600'\n                        }`}\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\n                      </svg>\n                    </button>\n                  ))}\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Update DEX configurations\nconst DEX_CONFIGS = {\n  11155111: [ // Sepolia\n    {\n      name: 'Uniswap',\n      logo: '/uniswap.png',\n      addLiquidityUrl: (tokenAddress) => \n        `https://app.uniswap.org/#/add/ETH/${tokenAddress}?chain=sepolia`\n    }\n  ],\n  137: [ // Polygon\n    {\n      name: 'QuickSwap',\n      logo: '/quickswap.png',\n      addLiquidityUrl: (tokenAddress) =>\n        `https://quickswap.exchange/#/add/POL/${tokenAddress}`\n    },\n    {\n      name: 'SushiSwap',\n      logo: '/sushiswap.png',\n      addLiquidityUrl: (tokenAddress) =>\n        `https://app.sushi.com/add/POL/${tokenAddress}`\n    },\n    {\n      name: 'Uniswap',\n      logo: '/uniswap.png',\n      addLiquidityUrl: (tokenAddress) =>\n        `https://app.uniswap.org/#/add/POL/${tokenAddress}?chain=polygon`\n    }\n  ],\n  130: [ // Unichain Mainnet\n    {\n      name: 'UniDex',\n      logo: '/unidex.png',\n      addLiquidityUrl: (tokenAddress) =>\n        `https://unichain.blockscout.com/token/${tokenAddress}`\n    }\n  ],\n  10143: [ // Monad Testnet\n    {\n      name: 'Monad Explorer',\n      logo: '/monad.png',\n      addLiquidityUrl: (tokenAddress) =>\n        `https://monad-testnet.socialscan.io/token/${tokenAddress}`\n    }\n  ]\n};\n\nexport default function CreateTokenModal({ isOpen, onClose }) {\n  const { account } = useWallet();\n  const [currentChainId, setCurrentChainId] = useState(null);\n  const [deployedTokenAddress, setDeployedTokenAddress] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    symbol: '',\n    totalSupply: '',\n    description: '',\n    logo: null\n  });\n  const [previewLogo, setPreviewLogo] = useState(null);\n  const { addDeployment } = useDeployments();\n  const [showProgressModal, setShowProgressModal] = useState(false);\n  const [progressStep, setProgressStep] = useState(null);\n  const [progressError, setProgressError] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    const checkChain = async () => {\n      if (window.ethereum) {\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        setCurrentChainId(parseInt(chainId, 16));\n      }\n    };\n    checkChain();\n\n    window.ethereum?.on('chainChanged', (chainId) => {\n      setCurrentChainId(parseInt(chainId, 16));\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleLogoChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setFormData({ ...formData, logo: file });\n      setPreviewLogo(URL.createObjectURL(file));\n    }\n  };\n\n  const getFactoryAddress = () => {\n    return FACTORY_ADDRESSES[currentChainId];\n  };\n\n  const getFee = () => {\n    const fee = CHAIN_FEES[currentChainId];\n    const currency = NETWORK_CURRENCIES[currentChainId] || 'ETH';\n    return `${fee} ${currency}`;\n  };\n\n  const handleSuccess = async (deployedAddress, eventData, logoUrls) => {\n    try {\n      const getChainName = (chainId) => {\n        switch (chainId) {\n          case 137:\n            return 'Polygon';\n          case 11155111:\n            return 'Sepolia';\n          case 130:\n            return 'Unichain Mainnet';\n          case 1301:\n            return 'Unichain Testnet';\n          case 1828369849:\n            return 'Moonwalker';\n          case 10143:\n            return 'Monad Testnet';\n          default:\n            return 'Unknown';\n        }\n      };\n\n      // If we have the deployed address directly, use it even if saving deployment fails\n      if (deployedAddress) {\n        setDeployedTokenAddress(deployedAddress);\n      }\n\n      // Try to save deployment\n      try {\n        const chainId = await getNetwork().then(network => network.chainId);\n        const deployment = {\n          address: deployedAddress,\n          name: formData.name,\n          symbol: formData.symbol,\n          decimals: 18,\n          totalSupply: formData.totalSupply,\n          logo: logoUrls?.logo,\n          logoIpfs: logoUrls?.logoIpfs,\n          timestamp: Date.now(),\n          chainId: chainId,\n          chainName: getChainName(chainId),\n          type: 'token'\n        };\n        await addDeployment(deployment);\n      } catch (error) {\n        console.warn('Error saving deployment:', error);\n        // Continue anyway since we have the address\n      }\n\n      // Show success state\n      setProgressStep('completed');\n      setProgressError(null);\n    } catch (error) {\n      console.error('Error in handleSuccess:', error);\n      setProgressError(error.message);\n    }\n  };\n\n  const createToken = async (e) => {\n    e.preventDefault();\n    \n    if (!account) {\n      toast.error('Please connect your wallet first');\n      return;\n    }\n\n    setShowProgressModal(true);\n    setProgressStep('preparing');\n    setProgressError(null);\n\n    try {\n      let logoUrls = { ipfsUrl: '', httpUrl: '' };\n      if (formData.logo) {\n        setProgressStep('uploading');\n        try {\n          logoUrls = await uploadTokenLogo(formData.logo);\n        } catch (uploadError) {\n          setProgressStep('error');\n          setProgressError(`Logo upload failed: ${uploadError.message}`);\n          return;\n        }\n      } else {\n        setProgressStep('error');\n        setProgressError('Please upload a logo');\n        return;\n      }\n\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const factoryAddress = getFactoryAddress();\n      \n      if (!factoryAddress) {\n        setProgressStep('error');\n        setProgressError('Factory address not found for this network');\n        return;\n      }\n\n      const factory = new ethers.Contract(factoryAddress, TokenFactoryABI.abi, signer);\n\n      // Calculate fee based on network\n      let fee;\n      if (currentChainId === CHAIN_IDS.MONAD_TESTNET) {\n        fee = ethers.parseEther(CHAIN_FEES[currentChainId]); // Use MON as fee\n        toast.success('Creating token with MON as fee on Monad Testnet');\n      } else if (currentChainId === CHAIN_IDS.MOONWALKER) {\n        fee = ethers.parseEther(\"0.01\"); // Keep original fee until contract update\n        toast.success('Note: 369 ZERO fee will be implemented in the next contract update');\n      } else {\n        fee = ethers.parseEther(CHAIN_FEES[currentChainId]?.toString() || \"0.01\");\n      }\n      \n      setProgressStep('creating');\n\n      // Add specific gas settings for Monad\n      const gasSettings = currentChainId === CHAIN_IDS.MONAD_TESTNET ? {\n        gasLimit: 5000000, // Higher gas limit for Monad\n      } : {\n        gasLimit: 3000000\n      };\n\n      const tx = await factory.createToken(\n        formData.name,\n        formData.symbol,\n        18,\n        ethers.parseUnits(formData.totalSupply, 18),\n        logoUrls.ipfsUrl,\n        { \n          value: fee,\n          ...gasSettings\n        }\n      );\n\n      const receipt = await tx.wait();\n      \n      // Find the TokenCreated event\n      const tokenCreatedEvent = receipt.logs.find(log => {\n        // Check if this log is from our factory contract\n        if (log.address.toLowerCase() !== factoryAddress.toLowerCase()) {\n          return false;\n        }\n        \n        try {\n          // Get the event signature for TokenCreated event\n          const eventSignature = ethers.id(\n            'TokenCreated(address,address,string,string,uint8,uint256,string,bool)'\n          );\n\n          // Check if this log's first topic matches our event signature\n          return log.topics[0].toLowerCase() === eventSignature.toLowerCase();\n        } catch (e) {\n          console.error('Error checking event signature:', e);\n          return false;\n        }\n      });\n\n      // If we can't find the event in logs, try to get it from the transaction receipt events\n      let tokenAddress;\n      if (!tokenCreatedEvent) {\n        // Try to get the address from transaction receipt events\n        const events = receipt.logs.map(log => {\n          try {\n            return factory.interface.parseLog(log);\n          } catch (e) {\n            return null;\n          }\n        }).filter(Boolean);\n        \n        const tokenEvent = events.find(event => event.name === 'TokenCreated');\n        if (tokenEvent) {\n          tokenAddress = tokenEvent.args[1]; // token address should be the second argument\n        } else {\n          console.error('Available logs:', receipt.logs);\n          throw new Error('Could not find token address in transaction events');\n        }\n      } else {\n        // Parse the event data using the factory interface\n        const parsedLog = factory.interface.parseLog({\n          topics: tokenCreatedEvent.topics,\n          data: tokenCreatedEvent.data\n        });\n        tokenAddress = parsedLog.args[1];\n      }\n\n      // Set the token address immediately\n      if (tokenAddress) {\n        setDeployedTokenAddress(tokenAddress);\n        setProgressStep('completed');\n      } else {\n        throw new Error('Failed to get token address from transaction');\n      }\n\n      // Now try to handle the rest of the success flow\n      const tokenData = {\n        name: formData.name,\n        symbol: formData.symbol,\n        decimals: 18,\n        supply: ethers.parseUnits(formData.totalSupply, 18),\n        logo: logoUrls.ipfsUrl\n      };\n\n      await handleSuccess(tokenAddress, tokenData, logoUrls);\n\n      // Show completed state and trigger confetti\n      setProgressStep('completed');\n      setShowConfetti(true);\n\n      // Close progress modal and show rating after a delay\n      setTimeout(() => {\n        setShowProgressModal(false);\n        setProgressStep(null);\n        setProgressError(null);\n        \n        // Show rating modal after a short delay\n        setTimeout(() => {\n          setShowRatingModal(true);\n        }, 1000);\n        \n        // Cleanup confetti after some time\n        setTimeout(() => {\n          setShowConfetti(false);\n        }, 30000);\n      }, 8000);\n\n      onClose();\n      setFormData({\n        name: '',\n        symbol: '',\n        totalSupply: '',\n        description: '',\n        logo: null\n      });\n      setPreviewLogo(null);\n\n    } catch (error) {\n      console.error('Token Creation error:', error);\n      setProgressStep('error');\n      setProgressError(\n        error.message.includes('chain') \n          ? 'Please switch to a supported network'\n          : `Failed to create token: ${error.message}`\n      );\n    }\n  };\n\n  // Add window resize handler\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n    });\n  };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <>\n      <Dialog open={isOpen} onClose={onClose} className=\"relative z-[9999]\">\n        <div className=\"fixed inset-0 bg-black/70 z-[9999]\" aria-hidden=\"true\" />\n        \n        <div className=\"fixed inset-0 flex items-center justify-center p-4 z-[9999]\">\n          <Dialog.Panel className=\"relative w-full max-w-2xl transform overflow-hidden rounded-lg bg-white dark:bg-[#0a0b0f] p-6\">\n            <div className=\"relative\">\n            {/* L-shaped corners */}\n            <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n\n              {/* Glowing dots in corners */}\n              <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n              <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n              <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n              <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n              {/* Three dots in top right */}\n              <div className=\"absolute top-3 right-3 flex gap-1 z-20\">\n                {[1, 2, 3].map((i) => (\n                  <div\n                    key={i}\n                    className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n                    style={{ animationDelay: `${i * 0.2}s` }}\n                  />\n                ))}\n              </div>\n\n              {/* Main Content */}\n              <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <Dialog.Title className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                Create New Token\n              </Dialog.Title>\n                  <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n                    <BiX size={24} />\n              </button>\n            </div>\n            \n            <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-6\">\n                  Launch your own token. Fee: {getFee() || '...'}\n            </p>\n\n                {!account ? (\n                  <div className=\"text-center py-8\">\n                    <div className=\"mb-4\">\n                      <BiWallet size={48} className=\"mx-auto text-gray-400 dark:text-gray-600\" />\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n                      Connect Your Wallet\n                    </h3>\n                    <p className=\"text-gray-500 dark:text-gray-400 mb-6\">\n                      Please connect your wallet to create a token\n                    </p>\n                    <w3m-button />\n                  </div>\n                ) : (\n            <form onSubmit={createToken} className=\"space-y-4\">\n              {/* Logo Upload */}\n              <div className=\"flex justify-center mb-4\">\n                <div className=\"relative w-24 h-24\">\n                  <div className={`w-full h-full rounded-full border-2 border-dashed ${previewLogo ? 'border-[#00ffbd]' : 'border-gray-300'} flex items-center justify-center overflow-hidden`}>\n                    {previewLogo ? (\n                      <img src={previewLogo} alt=\"Token Logo\" className=\"w-full h-full object-cover\" />\n                    ) : (\n                      <BiImageAdd size={32} className=\"text-gray-400\" />\n                    )}\n                  </div>\n                  <input\n                    type=\"file\"\n                    onChange={handleLogoChange}\n                    accept=\"image/*\"\n                    className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\n                  />\n                </div>\n              </div>\n\n              {/* Rest of the form remains the same */}\n              <div>\n                <label className=\"block text-gray-700 dark:text-gray-300 text-sm mb-2\">Token Name</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                  className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none transition-all duration-200\n                  autofill:bg-gray-50 dark:autofill:bg-[#1a1b1f] \n                  [-webkit-autofill]:!bg-gray-50 dark:[-webkit-autofill]:!bg-[#1a1b1f]\n                  [-webkit-autofill]:!text-gray-900 dark:[-webkit-autofill]:!text-white\n                  [-webkit-autofill_selected]:!bg-gray-50 dark:[-webkit-autofill_selected]:!bg-[#1a1b1f]\"\n                  placeholder=\"My Token\"\n                  required\n                  autoComplete=\"off\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-gray-700 dark:text-gray-300 text-sm mb-2\">Token Symbol</label>\n                <input\n                  type=\"text\"\n                  name=\"symbol\"\n                  value={formData.symbol}\n                  onChange={handleChange}\n                  className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none transition-all duration-200\n                  autofill:bg-gray-50 dark:autofill:bg-[#1a1b1f] \n                  [-webkit-autofill]:!bg-gray-50 dark:[-webkit-autofill]:!bg-[#1a1b1f]\n                  [-webkit-autofill]:!text-gray-900 dark:[-webkit-autofill]:!text-white\n                  [-webkit-autofill_selected]:!bg-gray-50 dark:[-webkit-autofill_selected]:!bg-[#1a1b1f]\"\n                  placeholder=\"MTK\"\n                  required\n                  autoComplete=\"off\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-gray-700 dark:text-gray-300 text-sm mb-2\">Decimals</label>\n                <input\n                  type=\"number\"\n                  name=\"decimals\"\n                  value=\"18\"\n                  disabled\n                  className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 cursor-not-allowed opacity-75\"\n                />\n                <div className=\"mt-1 text-xs text-gray-500\">\n                  Standard ERC20 decimal places (non-modifiable)\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-gray-700 dark:text-gray-300 text-sm mb-2\">Total Supply</label>\n                <input\n                  type=\"text\"\n                  name=\"totalSupply\"\n                  value={formData.totalSupply}\n                  onChange={handleChange}\n                  className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none transition-all duration-200\"\n                  placeholder=\"1000000\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-gray-700 dark:text-gray-300 text-sm mb-2\">Description</label>\n                <textarea\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleChange}\n                  className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none resize-none transition-all duration-200\"\n                  placeholder=\"Describe your token...\"\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"flex justify-end gap-4 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={onClose}\n                  className=\"px-4 py-2.5 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-6 py-2.5 bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-semibold rounded-lg transition-colors\"\n                        disabled={!account}\n                >\n                  Create Token\n                </button>\n              </div>\n            </form>\n                )}\n              </div>\n            </div>\n          </Dialog.Panel>\n        </div>\n      </Dialog>\n\n      {/* Add Progress Modal */}\n      <ProgressModal\n        isOpen={showProgressModal}\n        onClose={() => {\n          setShowProgressModal(false);\n          setProgressStep(null);\n        }}\n        currentStep={progressStep}\n        tokenName={formData.name}\n        error={progressError}\n        deployedAddress={deployedTokenAddress}\n      />\n\n      {/* Add Star Rating Modal */}\n      <StarRatingModal\n        isOpen={showRatingModal}\n        onClose={() => setShowRatingModal(false)}\n        onRate={(rating) => {\n          console.log('User rated token creation:', rating);\n          // Here you can implement the logic to save the rating\n        }}\n      />\n\n      {/* Add Confetti */}\n      {showConfetti && (\n        <Confetti\n          width={windowSize.width}\n          height={windowSize.height}\n          numberOfPieces={200}\n          recycle={false}\n          gravity={0.2}\n          initialVelocityX={10}\n          initialVelocityY={10}\n          colors={['#00ffbd', '#00e6a9', '#00cc95', '#00b381', '#00996d']}\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 99999,\n            pointerEvents: 'none'\n          }}\n        />\n      )}\n    </>\n  );\n}","// Network IDs\n// Sepolia: 11155111\n// Polygon Mainnet: 137\n// Unichain Testnet: 1301\n// Moonwalker: 1828369849\n\nexport const NFT_CONTRACTS = {\n    // Sepolia Testnet\n    11155111: {\n        NFT721_IMPLEMENTATION: import.meta.env.VITE_NFT721_IMPLEMENTATION_SEPOLIA,\n        NFT1155_IMPLEMENTATION: import.meta.env.VITE_NFT1155_IMPLEMENTATION_SEPOLIA,\n        NFT_FACTORY: import.meta.env.VITE_NFT_FACTORY_SEPOLIA\n    },\n    // Polygon Mainnet\n    137: {\n        NFT721_IMPLEMENTATION: import.meta.env.VITE_NFT721_IMPLEMENTATION_POLYGON,\n        NFT1155_IMPLEMENTATION: import.meta.env.VITE_NFT1155_IMPLEMENTATION_POLYGON,\n        NFT_FACTORY: import.meta.env.VITE_NFT_FACTORY_POLYGON\n    },\n    // Unichain Testnet\n    1301: {\n        NFT721_IMPLEMENTATION: import.meta.env.VITE_NFT721_IMPLEMENTATION_UNICHAIN,\n        NFT1155_IMPLEMENTATION: import.meta.env.VITE_NFT1155_IMPLEMENTATION_UNICHAIN,\n        NFT_FACTORY: import.meta.env.VITE_NFT_FACTORY_UNICHAIN\n    },\n    // Moonwalker\n    1828369849: {\n        NFT721_IMPLEMENTATION: import.meta.env.VITE_NFT721_IMPLEMENTATION_MOONWALKER,\n        NFT1155_IMPLEMENTATION: import.meta.env.VITE_NFT1155_IMPLEMENTATION_MOONWALKER,\n        NFT_FACTORY: import.meta.env.VITE_NFT_FACTORY_MOONWALKER\n    }\n};\n\n// Keep ERC20 contracts separate\nexport const TOKEN_CONTRACTS = {\n    11155111: {\n        FACTORY: import.meta.env.VITE_FACTORY_ADDRESS_11155111,\n        ROUTER: import.meta.env.VITE_ROUTER_ADDRESS_SEPOLIA\n    },\n    137: {\n        FACTORY: import.meta.env.VITE_FACTORY_ADDRESS_137,\n        ROUTER: import.meta.env.VITE_ROUTER_ADDRESS_POLYGON\n    },\n    1301: {\n        FACTORY: import.meta.env.VITE_FACTORY_ADDRESS_UNICHAIN,\n        ROUTER: import.meta.env.VITE_ROUTER_ADDRESS_UNICHAIN\n    },\n    1828369849: {\n        FACTORY: import.meta.env.VITE_FACTORY_ADDRESS_MOONWALKER,\n        ROUTER: import.meta.env.VITE_ROUTER_ADDRESS_MOONWALKER\n    }\n};\n\n// Network-specific fees are handled by the contract:\n// - Sepolia: 0.015 ETH\n// - Polygon: 20 POL\n// - Unichain: 0.015 ETH\n// - Moonwalker: 0.015 ZERO\n\nexport const TOKEN_ADDRESSES = {\n    11155111: { // Sepolia\n        USDC: import.meta.env.VITE_USDC_ADDRESS_SEPOLIA,\n        USDT: import.meta.env.VITE_USDT_ADDRESS_SEPOLIA,\n        WETH: \"0xfff9976782d46cc05630d1f6ebab18b2324d6b14\"\n    },\n    137: { // Polygon\n        USDC: import.meta.env.VITE_USDC_ADDRESS_POLYGON,\n        USDT: import.meta.env.VITE_USDT_ADDRESS_POLYGON,\n        WMATIC: \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\"\n    },\n    1301: { // Unichain Testnet\n        USDC: import.meta.env.VITE_UNICHAIN_USDC_ADDRESS,\n        USDT: import.meta.env.VITE_UNICHAIN_USDT_ADDRESS,\n        WETH: \"0x4E6F7372696F00000000000000000000000000FF\"\n    },\n    1828369849: { // Moonwalker\n        USDC: import.meta.env.VITE_MOONWALKER_USDC_ADDRESS,\n        USDT: import.meta.env.VITE_MOONWALKER_USDT_ADDRESS,\n        WZERO: import.meta.env.VITE_MOONWALKER_WZERO_ADDRESS\n    }\n};","export const NFTFactoryABI = [\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"collectionType\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"name\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"symbol\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"metadataURI\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"maxSupply\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"mintPrice\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"maxPerWallet\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"releaseDate\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"mintEndDate\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"infiniteMint\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"paymentToken\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"enableWhitelist\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"address\",\n            \"name\": \"royaltyReceiver\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"uint96\",\n            \"name\": \"royaltyFeeNumerator\",\n            \"type\": \"uint96\"\n          }\n        ],\n        \"internalType\": \"struct NFTFactory.CreateNFTCollectionParams\",\n        \"name\": \"params\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"createNFTCollection\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"creator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"collection\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"collectionType\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"CollectionCreated\",\n    \"type\": \"event\"\n  }\n]; ","import { NFTMetadata, Property } from '../types/nft';\nimport { uploadFileToIPFS, uploadMetadataToIPFS, ipfsToHttp } from '../utils/ipfs';\n\n// List of trait types that should be displayed as stats\nconst STAT_TRAITS = ['level', 'strength', 'power', 'speed', 'health', 'mana', 'stamina'];\n\nexport async function prepareAndUploadMetadata(\n  formData: any,\n  artworkFile: File,\n  tokenId?: string\n): Promise<{ metadataUrl: string, imageHttpUrl: string, imageIpfsUrl: string }> {\n  try {\n    // 1. Upload artwork first\n    const imageIpfsUrl = await uploadFileToIPFS(artworkFile);\n    const imageHttpUrl = ipfsToHttp(imageIpfsUrl);\n\n    // Format attributes to ensure proper structure\n    const attributes = formData.attributes?.map((attr: any) => {\n      const value = attr.value?.toString() || '';\n      const numericValue = Number(value);\n      const isNumeric = !isNaN(numericValue) && value !== '';\n      const trait_type = attr.trait_type?.toLowerCase();\n\n      // Only set display_type: \"number\" for specific stat traits\n      return {\n        trait_type: attr.trait_type,\n        value: isNumeric ? numericValue : value,\n        display_type: isNumeric && STAT_TRAITS.includes(trait_type) ? 'number' : undefined\n      };\n    }).filter(attr => attr.trait_type && attr.value !== '') || [];\n\n    // 2. Prepare metadata exactly matching OpenSea's format\n    const metadata: NFTMetadata = {\n      name: formData.name + (tokenId ? ` #${tokenId}` : ''),\n      description: formData.description || '',\n      image: imageIpfsUrl,\n      external_url: formData.website || '',\n      attributes: attributes,\n      background_color: formData.background_color || '000000'\n    };\n\n    // 3. Upload metadata to IPFS\n    const metadataUrl = await uploadMetadataToIPFS(metadata);\n\n    return {\n      metadataUrl,\n      imageHttpUrl,\n      imageIpfsUrl\n    };\n  } catch (error) {\n    throw new Error('Failed to prepare and upload metadata');\n  }\n} ","import React, { useState, useEffect, Fragment } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { BiX, BiImageAdd, BiChevronLeft, BiUpload, BiDownload, BiChevronDown, BiWallet, BiVideo, BiListUl, BiTrash } from 'react-icons/bi';\nimport { FaEthereum, FaFileExcel, FaFileCsv, FaFileCode, FaTelegram, FaTwitter, FaDiscord } from 'react-icons/fa';\nimport { BiWorld } from 'react-icons/bi';\nimport clsx from 'clsx';\nimport { NFT_CONTRACTS, TOKEN_ADDRESSES } from '../config/contracts';\nimport { ethers } from 'ethers';\nimport { NFTFactoryABI } from '../abi/NFTFactory';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { parseEther } from 'viem';\nimport { useAccount, useNetwork } from 'wagmi';\nimport { NFTCollectionABI } from '../abi/NFTCollection';\nimport * as XLSX from 'xlsx';\nimport { createPortal } from 'react-dom';\nimport Papa from 'papaparse';\nimport Confetti from 'react-confetti';\nimport { prepareAndUploadMetadata } from '../services/metadata';\nimport { Contract } from 'ethers';\nimport { saveCollection } from '../services/firebase';\nimport { useConnectModal } from '@rainbow-me/rainbowkit';\n\n// Chain IDs configuration\nconst CHAIN_IDS = {\n  SEPOLIA: 11155111,\n  POLYGON: 137,\n  UNICHAIN_MAINNET: 130,\n  UNICHAIN: 1301,\n  MOONWALKER: 1828369849,\n  MONAD_TESTNET: 10143\n};\n\n// Explorer URL Configuration\nconst EXPLORER_URLS = {\n  [CHAIN_IDS.SEPOLIA]: 'https://sepolia.etherscan.io',\n  [CHAIN_IDS.POLYGON]: 'https://polygonscan.com',\n  [CHAIN_IDS.UNICHAIN_MAINNET]: 'https://unichain.blockscout.com',\n  [CHAIN_IDS.UNICHAIN]: 'https://unichain-sepolia.blockscout.com',\n  [CHAIN_IDS.MOONWALKER]: 'https://moonwalker-blockscout.eu-north-2.gateway.fm',\n  [CHAIN_IDS.MONAD_TESTNET]: 'https://monad-testnet.socialscan.io'\n};\n\nconst NFT_FACTORY_ADDRESSES = {\n  [CHAIN_IDS.SEPOLIA]: import.meta.env.VITE_NFT_FACTORY_SEPOLIA,\n  [CHAIN_IDS.POLYGON]: import.meta.env.VITE_NFT_FACTORY_POLYGON,\n  [CHAIN_IDS.UNICHAIN_MAINNET]: import.meta.env.VITE_NFT_FACTORY_UNICHAIN_MAINNET,\n  [CHAIN_IDS.UNICHAIN]: import.meta.env.VITE_NFT_FACTORY_UNICHAIN,\n  [CHAIN_IDS.MOONWALKER]: import.meta.env.VITE_NFT_FACTORY_MOONWALKER,\n  [CHAIN_IDS.MONAD_TESTNET]: import.meta.env.VITE_NFT_FACTORY_MONAD_TESTNET\n};\n\nconst NETWORK_NAMES = {\n  [CHAIN_IDS.SEPOLIA]: 'Sepolia',\n  [CHAIN_IDS.POLYGON]: 'Polygon',\n  [CHAIN_IDS.UNICHAIN_MAINNET]: 'Unichain Mainnet',\n  [CHAIN_IDS.UNICHAIN]: 'Unichain Testnet',\n  [CHAIN_IDS.MOONWALKER]: 'Moonwalker',\n  [CHAIN_IDS.MONAD_TESTNET]: 'Monad Testnet'\n};\n\nconst NETWORK_CURRENCIES = {\n  [CHAIN_IDS.SEPOLIA]: 'ETH',\n  [CHAIN_IDS.POLYGON]: 'POL',\n  [CHAIN_IDS.UNICHAIN_MAINNET]: 'ETH',\n  [CHAIN_IDS.UNICHAIN]: 'ETH',\n  [CHAIN_IDS.MOONWALKER]: 'ZERO',\n  [CHAIN_IDS.MONAD_TESTNET]: 'MON'\n};\n\n// Add required keyframe animations at the top of the file\nconst style = document.createElement('style');\nstyle.textContent = `\n  @keyframes draw {\n    to {\n      stroke-dashoffset: 0;\n    }\n  }\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes bounce {\n    0%, 100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-3px);\n    }\n  }\n  @keyframes shake {\n    0%, 100% {\n      transform: translateX(0);\n    }\n    25% {\n      transform: translateX(-2px);\n    }\n    75% {\n      transform: translateX(2px);\n    }\n  }\n`;\ndocument.head.appendChild(style);\n\n// Icons for NFT creation progress modal\nconst Icons = {\n  Preparing: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ animation: 'rotate 2s linear infinite' }}>\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M12 6v2m0 8v2M6 12h2m8 0h2\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite' }} />\n        <path d=\"M7.75 7.75l1.5 1.5m5.5 5.5l1.5 1.5m0-8.5l-1.5 1.5m-5.5 5.5l-1.5 1.5\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite', animationDelay: '0.2s' }} />\n      </g>\n    </svg>\n  ),\n  UploadingMetadata: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M12 18V8m0 0l-4 4m4-4l4 4\" strokeLinecap=\"round\" strokeLinejoin=\"round\" style={{ animation: 'bounce 1s ease-in-out infinite' }} />\n        <path d=\"M8 18h8\" strokeLinecap=\"round\" style={{ animation: 'fadeIn 1s ease-in-out infinite', animationDelay: '0.5s' }} />\n      </g>\n    </svg>\n  ),\n  CreatingCollection: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M7 8h10M7 12h10M7 16h10\" strokeLinecap=\"round\" style={{ animation: 'draw 2s ease-in-out infinite' }} />\n        <path d=\"M12 6v12\" strokeLinecap=\"round\" style={{ animation: 'draw 2s ease-in-out infinite', animationDelay: '0.5s' }} />\n        <path d=\"M9 6l6 12M15 6l-6 12\" strokeLinecap=\"round\" style={{ animation: 'draw 2s ease-in-out infinite', animationDelay: '1s' }} />\n        <circle cx=\"12\" cy=\"12\" r=\"3\" style={{ animation: 'rotate 4s linear infinite' }} />\n      </g>\n    </svg>\n  ),\n  SettingWhitelist: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M12 8v8\" strokeLinecap=\"round\" style={{ animation: 'draw 2s ease-in-out infinite' }} />\n        <path d=\"M8 12h8\" strokeLinecap=\"round\" style={{ animation: 'draw 2s ease-in-out infinite', animationDelay: '0.3s' }} />\n        <path d=\"M7 7l2 2 2-2M13 15l2 2 2-2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" style={{ animation: 'bounce 2s ease-in-out infinite', animationDelay: '0.6s' }} />\n      </g>\n    </svg>\n  ),\n  Completed: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"animate-[fadeIn_0.5s_ease-in-out]\" />\n        <path d=\"M8 12l3 3 5-5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.5s_ease-in-out_forwards]\" style={{ strokeDasharray: 20, strokeDashoffset: 20 }} />\n      </g>\n    </svg>\n  ),\n  Error: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\" style={{ animation: 'shake 0.5s ease-in-out' }}>\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"text-red-500\" />\n        <path d=\"M12 8v5\" strokeLinecap=\"round\" className=\"text-red-500\" />\n        <path d=\"M12 16v.01\" strokeLinecap=\"round\" className=\"text-red-500\" />\n      </g>\n    </svg>\n  )\n};\n\n// Progress Modal Component\nconst ProgressModal = ({ isOpen, onClose, currentStep, collectionName, error }) => {\n  const steps = [\n    { key: 'preparing', label: 'Preparing Transaction', icon: Icons.Preparing },\n    { key: 'uploading', label: 'Uploading Metadata', icon: Icons.UploadingMetadata },\n    { key: 'creating', label: 'Creating Collection', icon: Icons.CreatingCollection },\n    { key: 'whitelist', label: 'Setting Whitelist', icon: Icons.SettingWhitelist },\n    { key: 'completed', label: 'Collection Created Successfully', icon: Icons.Completed }\n  ];\n\n  const currentStepIndex = steps.findIndex(step => step.key === currentStep);\n  const isError = Boolean(error);\n\n  // Format error message to be more user-friendly\n  const formatErrorMessage = (error) => {\n    if (error?.includes('user rejected action')) {\n      return 'Transaction was rejected. Please try again.';\n    }\n    if (error?.includes('insufficient funds')) {\n      return 'Insufficient funds to complete the transaction.';\n    }\n    return error?.replace(/\\{\"action\":\"sendTransaction\".*$/, '') || 'An error occurred';\n  };\n\n  return createPortal(\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"fixed inset-0 z-[10000]\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/25 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 shadow-xl transition-all\">\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                  {isError ? 'Error Creating Collection' : 'Creating NFT Collection'}\n                  {collectionName && !isError && (\n                    <div className=\"mt-2 text-base font-normal text-gray-500 dark:text-gray-400\">\n                      {collectionName}\n                    </div>\n                  )}\n                </Dialog.Title>\n                <div className=\"space-y-4\">\n                  {steps.map((step, index) => {\n                    const Icon = step.icon;\n                    const isActive = index === currentStepIndex;\n                    const isCompleted = !isError && index < currentStepIndex;\n                    const isErrorStep = isError && index === currentStepIndex;\n\n                    return (\n                      <div\n                        key={step.key}\n                        className={clsx(\n                          'flex items-center gap-3 p-3 rounded-xl transition-colors',\n                          {\n                            'bg-[#00ffbd]/10 text-[#00ffbd]': isActive && !isErrorStep,\n                            'text-[#00ffbd]': isCompleted,\n                            'bg-red-500/10 text-red-500': isErrorStep,\n                            'text-gray-400': !isActive && !isCompleted && !isErrorStep\n                          }\n                        )}\n                      >\n                        <Icon />\n                        <div className=\"flex-1\">\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{step.label}</span>\n                          {isActive && step.key === 'creating' && !isError && (\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                              Creating collection {collectionName}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n                {isError && (\n                  <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\n                    <div className=\"flex items-start gap-3\">\n                      <Icons.Error />\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\n                        <p className=\"mt-1 text-sm text-red-400\">\n                          {formatErrorMessage(error)}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4 flex justify-end\">\n                      <button\n                        onClick={onClose}\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                )}\n                {currentStep === 'completed' && (\n                  <div className=\"mt-6 text-center\">\n                    <p className=\"text-[#00ffbd] font-medium\">Collection created successfully!</p>\n                  </div>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>,\n    document.body\n  );\n};\n\n// Star Rating Modal Component\nconst StarRatingModal = ({ isOpen, onClose, onRate }) => {\n  const [rating, setRating] = useState(0);\n  const [hoveredRating, setHoveredRating] = useState(0);\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/25 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 shadow-xl transition-all\">\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white text-center mb-4\">\n                  Rate Your Experience\n                </Dialog.Title>\n                <div className=\"flex justify-center gap-2 mb-6\">\n                  {[...Array(9)].map((_, index) => (\n                    <button\n                      key={index}\n                      onMouseEnter={() => setHoveredRating(index + 1)}\n                      onMouseLeave={() => setHoveredRating(0)}\n                      onClick={() => {\n                        setRating(index + 1);\n                        onRate(index + 1);\n                        onClose();\n                      }}\n                      className=\"focus:outline-none\"\n                    >\n                      <svg\n                        className={`w-8 h-8 transition-colors ${\n                          index + 1 <= (hoveredRating || rating) ? 'text-[#00ffbd]' : 'text-gray-300 dark:text-gray-600'\n                        }`}\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\n                      </svg>\n                    </button>\n                  ))}\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nconst STEPS = [\n  { id: 'type', title: 'Collection Type' },\n  { id: 'basics', title: 'Basic Info' },\n  { id: 'artwork', title: 'Artwork' },\n  { id: 'properties', title: 'Properties' },\n  { id: 'minting', title: 'Minting' },\n];\n\nconst CREATION_FEES = {\n  137: \"2 POL\",  // Polygon\n  11155111: \"0.015 ETH\",  // Sepolia\n  1: \"0.015 ETH\",  // Mainnet\n  1301: \"0.015 ETH\", // Unichain\n  1828369849: \"369 ZERO\", // Moonwalker\n  10143: \"0.01 MON\" // Monad Testnet\n};\n\nconst setWhitelistInContract = async (collectionAddress, whitelistAddresses, signer) => {\n  try {\n    const contract = new ethers.Contract(\n      collectionAddress,\n      NFTCollectionABI.ERC721,\n      signer\n    );\n    \n    // Convert addresses and limits to separate arrays\n    const addresses = whitelistAddresses.map(item => \n      typeof item === 'string' ? item : item.address\n    );\n    const limits = whitelistAddresses.map(item => \n      typeof item === 'string' ? 1 : BigInt(item.maxMint)\n    );\n    \n    toast.loading('Setting whitelist addresses...', { id: 'whitelist' });\n    const tx = await contract.setWhitelist(addresses, limits);\n    await tx.wait();\n    toast.success('Whitelist addresses set successfully!', { id: 'whitelist' });\n  } catch (error) {\n    console.error('Error setting whitelist:', error);\n    toast.error('Failed to set whitelist addresses', { id: 'whitelist' });\n    throw error;\n  }\n};\n\n// Separate AddressModal component with isolated event handling\nconst AddressModal = ({ isOpen, onClose, addresses, onRemoveAddress, onUpdateAddress }) => {\n  if (!isOpen) return null;\n\n  const handleModalClick = (e) => {\n    e.stopPropagation();\n  };\n\n  const handleMintLimitChange = (index, e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    const newValue = e.target.value;\n    const updatedAddresses = [...addresses];\n    \n    // Allow empty string or numbers\n    const limit = newValue === '' ? '' : parseInt(newValue) || '';\n    \n    if (typeof updatedAddresses[index] === 'string') {\n      updatedAddresses[index] = { \n        address: updatedAddresses[index], \n        maxMint: limit \n      };\n    } else {\n      updatedAddresses[index] = { \n        ...updatedAddresses[index], \n        maxMint: limit \n      };\n    }\n    \n    onUpdateAddress({ whitelistAddresses: updatedAddresses });\n  };\n\n  return createPortal(\n    <div \n      className=\"fixed inset-0 z-[100]\"\n      onClick={handleModalClick}\n    >\n      <div className=\"fixed inset-0 bg-black/70\" />\n      \n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <div \n          className=\"w-full max-w-2xl transform rounded-lg bg-white dark:bg-[#0a0b0f] p-6 relative\"\n          onClick={handleModalClick}\n        >\n          {/* L-shaped corners */}\n          <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n            <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n            <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n            <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n            <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n\n          {/* Close button */}\n          <button \n            type=\"button\"\n            onClick={(e) => {\n              e.stopPropagation();\n              onClose();\n            }}\n            className=\"absolute top-6 right-6 w-8 h-8 flex items-center justify-center bg-white dark:bg-[#0a0b0f] border border-[#00ffbd] rounded-md hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors z-50\"\n          >\n            <BiX size={20} className=\"text-[#00ffbd]\" />\n          </button>\n\n          {/* Main Content */}\n          <div className=\"mt-2\">\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6\">\n              Whitelist Addresses\n            </h2>\n\n            <div className=\"max-h-[60vh] overflow-y-auto custom-scrollbar [&::-webkit-scrollbar-thumb]:bg-[#00ffbd] hover:[&::-webkit-scrollbar-thumb]:bg-[#00e6a9]\">\n              {addresses.length > 0 ? (\n                <div className=\"grid grid-cols-1 gap-2\">\n                  {addresses.map((addr, index) => (\n                    <div\n                      key={index}\n                      className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-[#1a1b1f] rounded-lg hover:bg-gray-100 dark:hover:bg-[#2a2b2f] transition-colors\"\n                    >\n                      <span className=\"text-sm font-mono text-gray-700 dark:text-gray-300 flex-1\">\n                        {typeof addr === 'object' ? addr.address : addr}\n                      </span>\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"text-sm text-gray-600 dark:text-gray-400\">Mint limit:</span>\n                          <input\n                            type=\"text\"\n                            inputMode=\"numeric\"\n                            pattern=\"[0-9]*\"\n                            value={typeof addr === 'object' ? (addr.maxMint === '' ? '' : addr.maxMint) : 1}\n                            onChange={(e) => handleMintLimitChange(index, e)}\n                            onBlur={(e) => {\n                              const value = e.target.value;\n                              const updatedAddresses = [...addresses];\n                              const finalValue = value === '' || parseInt(value) < 1 ? 1 : parseInt(value);\n                              \n                              if (typeof updatedAddresses[index] === 'string') {\n                                updatedAddresses[index] = { \n                                  address: updatedAddresses[index], \n                                  maxMint: finalValue \n                                };\n                              } else {\n                                updatedAddresses[index] = { \n                                  ...updatedAddresses[index], \n                                  maxMint: finalValue \n                                };\n                              }\n                              \n                              onUpdateAddress({ whitelistAddresses: updatedAddresses });\n                            }}\n                            onKeyDown={(e) => {\n                              e.stopPropagation();\n                              // Allow backspace, delete, and arrow keys\n                              if (e.key === 'Backspace' || e.key === 'Delete' || \n                                  e.key === 'ArrowLeft' || e.key === 'ArrowRight' ||\n                                  e.key === 'Tab') {\n                                return;\n                              }\n                              // Only allow numbers\n                              if (!/[0-9]/.test(e.key) && !e.ctrlKey && !e.metaKey) {\n                                e.preventDefault();\n                              }\n                            }}\n                            className=\"w-16 px-2 py-1 bg-white dark:bg-[#0d0e12] text-gray-900 dark:text-white border border-gray-200 dark:border-gray-700 rounded text-sm focus:border-[#00ffbd] focus:ring-1 focus:ring-[#00ffbd] focus:outline-none\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              e.target.select();\n                            }}\n                          />\n                        </div>\n                        <button\n                          type=\"button\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            onRemoveAddress(index);\n                          }}\n                          className=\"p-2 text-red-500 hover:bg-red-500/10 dark:hover:bg-red-500/20 rounded-lg transition-colors\"\n                        >\n                          <BiTrash size={18} />\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                  No addresses added yet\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nconst getExplorerUrl = (chainId, type, value) => {\n  const baseUrl = EXPLORER_URLS[chainId] || EXPLORER_URLS[CHAIN_IDS.SEPOLIA];\n  \n  switch (type) {\n    case 'tx':\n      return `${baseUrl}/tx/${value}`;\n    case 'token':\n      return `${baseUrl}/token/${value}`;\n    case 'address':\n      return `${baseUrl}/address/${value}`;\n    default:\n      return `${baseUrl}/tx/${value}`;\n  }\n};\n\nexport default function CreateNFTModal({ isOpen, onClose }) {\n  const navigate = useNavigate();\n  const { address: account } = useAccount();\n  const { openConnectModal } = useConnectModal();\n  const { chain } = useNetwork();\n  const [currentStep, setCurrentStep] = useState('type');\n  const [newAddress, setNewAddress] = useState('');\n  const [currentChainId, setCurrentChainId] = useState(null);\n  const [showProgressModal, setShowProgressModal] = useState(false);\n  const [progressStep, setProgressStep] = useState(null);\n  const [progressError, setProgressError] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [isMintingTokenOpen, setIsMintingTokenOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    type: '',\n    name: '',\n    symbol: '',\n    description: '',\n    website: '',\n    category: '',\n    socials: {\n      twitter: '',\n      discord: '',\n      telegram: '',\n      zos: ''\n    },\n    artwork: null,\n    previewUrl: null,\n    artworkType: null,\n    attributes: [],\n    mintPrice: '',\n    maxSupply: '',\n    maxPerWallet: '',\n    releaseDate: '',\n    mintEndDate: '',\n    infiniteMint: false,\n    enableWhitelist: false,\n    whitelistAddresses: [],\n    mintingToken: 'native',\n    customTokenAddress: '',\n    customTokenSymbol: '',\n    royaltyFeePercent: '',\n    royaltyFeeNumerator: 0,\n    royaltyReceiver: ''\n  });\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  // Add near the top of the component, after the initial state declarations\n  const [chainId, setChainId] = useState(null);\n\n  // Add chain detection effect\n  useEffect(() => {\n    const getChainId = async () => {\n      if (window.ethereum) {\n        try {\n          const id = await window.ethereum.request({ method: 'eth_chainId' });\n          setChainId(parseInt(id, 16));\n        } catch (error) {\n          console.error('Error getting chain ID:', error);\n        }\n      }\n    };\n\n    getChainId();\n    if (window.ethereum) {\n      window.ethereum.on('chainChanged', (id) => setChainId(parseInt(id, 16)));\n    }\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('chainChanged', (id) => setChainId(parseInt(id, 16)));\n      }\n    };\n  }, []);\n\n  // Add helper function to get available tokens\n  const getAvailableTokens = () => {\n    if (chainId === 130) { // Unichain Mainnet\n      return [\n        {\n          id: 'native',\n          name: 'Native Token (ETH)',\n          icon: <FaEthereum className=\"text-[#00ffbd]\" />,\n          address: '',\n          symbol: 'ETH'\n        },\n        {\n          id: 'custom',\n          name: 'Custom Token',\n          icon: <BiWallet className=\"text-[#00ffbd]\" />,\n          address: '',\n          symbol: ''\n        }\n      ];\n    } else if (chainId === 1301) { // Unichain Testnet\n      return [\n        {\n          id: 'native',\n          name: 'Native Token (ETH)',\n          icon: <FaEthereum className=\"text-[#00ffbd]\" />,\n          address: '',\n          symbol: 'ETH'\n        },\n        {\n          id: 'custom',\n          name: 'Custom Token',\n          icon: <BiWallet className=\"text-[#00ffbd]\" />,\n          address: '',\n          symbol: ''\n        }\n      ];\n    } else if (chainId === 137) { // Polygon\n      return [\n        {\n          id: 'native',\n          name: 'Native Token (POL)',\n          icon: <img src=\"/polygon.png\" alt=\"POL\" className=\"w-5 h-5\" />,\n          address: '',\n          symbol: 'POL'\n        },\n        {\n          id: 'custom',\n          name: 'Custom Token',\n          icon: <BiWallet className=\"text-[#00ffbd]\" />,\n          address: '',\n          symbol: ''\n        }\n      ];\n    } else if (chainId === 10143) { // Monad Testnet\n      return [\n        {\n          id: 'native',\n          name: 'Native Token (MON)',\n          icon: <img src=\"/monad.png\" alt=\"MON\" className=\"w-5 h-5\" />,\n          address: '',\n          symbol: 'MON'\n        },\n        {\n          id: 'custom',\n          name: 'Custom Token',\n          icon: <BiWallet className=\"text-[#00ffbd]\" />,\n          address: '',\n          symbol: ''\n        }\n      ];\n    }\n    \n    // Default or unsupported chain\n    return [\n      {\n        id: 'custom',\n        name: 'Custom Token',\n        icon: <BiWallet className=\"text-[#00ffbd]\" />,\n        address: '',\n        symbol: ''\n      }\n    ];\n  };\n\n  // Replace the token selection UI with this\n  const renderTokenSelection = () => {\n    const availableTokens = getAvailableTokens();\n    const selectedToken = availableTokens.find(t => t.id === formData.mintingToken) || availableTokens[0];\n\n    return (\n      <div className=\"relative\">\n        <button\n          type=\"button\"\n          onClick={() => setIsMintingTokenOpen(!isMintingTokenOpen)}\n          className=\"w-full bg-white dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-2.5 border border-gray-200 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none flex items-center justify-between\"\n        >\n          <div className=\"flex items-center gap-2\">\n            {selectedToken.icon}\n            <span>{formData.mintingToken === 'custom' && formData.customTokenSymbol \n              ? formData.customTokenSymbol \n              : selectedToken.name}</span>\n          </div>\n          <BiChevronDown className={`transition-transform ${isMintingTokenOpen ? 'rotate-180' : ''}`} />\n        </button>\n\n        {isMintingTokenOpen && (\n          <div className=\"absolute z-10 mt-1 w-full bg-white dark:bg-[#1a1b1f] rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 py-1\">\n            {availableTokens.map((token) => (\n              <button\n                key={token.id}\n                onClick={() => {\n                  updateFormData({ \n                    mintingToken: token.id,\n                    customTokenAddress: token.address,\n                    customTokenSymbol: token.symbol\n                  });\n                  setIsMintingTokenOpen(false);\n                }}\n                className=\"w-full px-4 py-2 text-left text-gray-900 dark:text-white hover:bg-[#00ffbd]/10 flex items-center gap-2\"\n              >\n                {token.icon}\n                <span>{token.name}</span>\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const getCreationFee = async () => {\n    try {\n      // Get chain ID from window.ethereum\n      let chainId;\n      if (window.ethereum) {\n        chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        chainId = parseInt(chainId, 16);\n      }\n      \n      if (!chainId) {\n        console.error('Chain ID not available');\n        return null;\n      }\n\n      // Return the static fee from CREATION_FEES if available\n      if (CREATION_FEES[chainId]) {\n        return CREATION_FEES[chainId];\n      }\n      \n      // Get the factory contract for the current chain\n      const factoryAddress = NFT_FACTORY_ADDRESSES[chainId];\n      if (!factoryAddress) {\n        console.error('Factory address not found for chain:', chainId);\n        return null;\n      }\n\n      // Get the provider for the current chain\n      const provider = new ethers.JsonRpcProvider(\n        chainId === CHAIN_IDS.POLYGON ? \"https://polygon-rpc.com\" :\n        chainId === CHAIN_IDS.UNICHAIN ? \"https://sepolia.unichain.org\" :\n        chainId === CHAIN_IDS.UNICHAIN_MAINNET ? \"https://mainnet.unichain.org\" :\n        chainId === CHAIN_IDS.MONAD_TESTNET ? \"https://testnet-rpc.monad.xyz/\" :\n        \"https://polygon-rpc.com\" // Default to Polygon RPC\n      );\n\n      // Create contract instance\n      const factoryContract = new ethers.Contract(\n        factoryAddress,\n        ['function chainFees(uint256) view returns (uint256)'],\n        provider\n      );\n\n      // Get the fee from the contract\n      const fee = await factoryContract.chainFees(chainId);\n      \n      // Format the fee based on the chain\n      const formattedFee = ethers.formatEther(fee);\n      const currency = NETWORK_CURRENCIES[chainId] || 'ETH';\n      \n      return `${formattedFee} ${currency}`;\n    } catch (error) {\n      console.error('Error getting creation fee:', error);\n      return CREATION_FEES[chainId] || null;\n    }\n  };\n\n  // Update useEffect to call getCreationFee\n  useEffect(() => {\n    const init = async () => {\n      await getCreationFee().then(fee => {\n        setFormData(prev => ({\n          ...prev,\n          fee\n        }));\n      });\n    };\n    init();\n  }, []);\n\n  const updateFormData = (updates) => {\n    setFormData(prev => ({ ...prev, ...updates }));\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      // Check file type\n      const isVideo = file.type === 'video/mp4';\n      const isImage = file.type.startsWith('image/');\n      \n      if (!isVideo && !isImage) {\n        toast.error('Please upload an image or MP4 video file');\n        return;\n      }\n\n      // Check file size\n      const maxSize = isVideo ? 5 * 1024 * 1024 : 2 * 1024 * 1024; // 5MB for video, 2MB for images\n      if (file.size > maxSize) {\n        toast.error(`File size must be less than ${isVideo ? '5MB' : '2MB'}`);\n        return;\n      }\n\n      const url = URL.createObjectURL(file);\n      updateFormData({ \n        artwork: file, \n        previewUrl: url,\n        artworkType: isVideo ? 'video' : 'image'\n      });\n    }\n  };\n\n  const validateAddress = (address) => {\n    return /^0x[a-fA-F0-9]{40}$/.test(address);\n  };\n\n  const handleWhitelistImport = async (file) => {\n    try {\n      let addresses = [];\n      \n      if (file.name.endsWith('.csv')) {\n        const text = await file.text();\n        const result = Papa.parse(text, { header: true });\n        addresses = result.data\n          .map(row => {\n            const addr = row.address || row.wallet || Object.values(row)[0];\n            const limit = parseInt(row.limit || row.maxMint || 1);\n            return addr ? { address: addr, maxMint: limit } : null;\n          })\n          .filter(Boolean);\n      } \n      else if (file.name.endsWith('.xlsx')) {\n        const data = await file.arrayBuffer();\n        const workbook = XLSX.read(data);\n        const sheet = workbook.Sheets[workbook.SheetNames[0]];\n        addresses = XLSX.utils.sheet_to_json(sheet)\n          .map(row => {\n            const addr = row.address || row.wallet || Object.values(row)[0];\n            const limit = parseInt(row.limit || row.maxMint || 1);\n            return addr ? { address: addr, maxMint: limit } : null;\n          });\n      }\n      else if (file.name.endsWith('.json')) {\n        const text = await file.text();\n        const data = JSON.parse(text);\n        addresses = Array.isArray(data) ? data : Object.values(data);\n        addresses = addresses.map(item => {\n          if (typeof item === 'string') {\n            return { address: item, maxMint: 1 };\n          }\n          return {\n            address: item.address || item.wallet,\n            maxMint: parseInt(item.limit || item.maxMint || 1)\n          };\n        });\n      }\n\n      // Filter valid addresses and remove duplicates\n      const validAddresses = [...new Set(\n        addresses\n          .filter(item => item && item.address && validateAddress(item.address))\n          .map(item => JSON.stringify({ address: item.address.toLowerCase(), maxMint: item.maxMint }))\n      )].map(str => JSON.parse(str));\n\n      if (validAddresses.length === 0) {\n        toast.error('No valid addresses found in file');\n        return;\n      }\n\n      updateFormData({ whitelistAddresses: validAddresses });\n      toast.success(\n        <div className=\"flex flex-col\">\n          <span>Imported {validAddresses.length} addresses</span>\n          <span className=\"text-sm text-gray-400 mt-1\">Click the counter to view the list</span>\n        </div>\n      );\n    } catch (error) {\n      console.error('Error importing file:', error);\n      toast.error(`Failed to import ${type} file. Please check the format.`);\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      // Dismiss the whitelist info toast when creating collection\n      toast.dismiss('whitelist-info');\n      \n      if (!account) {\n        toast.error('Please connect your wallet first');\n        return;\n      }\n\n      // Validate form data\n      if (!formData.type || !formData.name || !formData.symbol || !formData.artwork) {\n        toast.error('Please fill in all required fields');\n        return;\n      }\n\n      // Initialize provider and signer\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const currentChainId = await window.ethereum.request({ method: 'eth_chainId' });\n      const networkChainId = parseInt(currentChainId, 16);\n\n      // Get factory address for current chain\n      let factoryAddress;\n      if (networkChainId === 137) { // Polygon Mainnet\n        factoryAddress = import.meta.env.VITE_NFT_FACTORY_POLYGON;\n      } else if (networkChainId === 130) { // Unichain Mainnet\n        factoryAddress = import.meta.env.VITE_NFT_FACTORY_UNICHAIN_MAINNET;\n      } else if (networkChainId === 1301) { // Unichain Testnet\n        factoryAddress = import.meta.env.VITE_NFT_FACTORY_UNICHAIN_TESTNET;\n      } else if (networkChainId === 1828369849) { // Moonwalker\n        factoryAddress = import.meta.env.VITE_NFT_FACTORY_MOONWALKER;\n      } else if (networkChainId === 10143) { // Monad Testnet\n        factoryAddress = import.meta.env.VITE_NFT_FACTORY_MONAD_TESTNET;\n      }\n\n      if (!factoryAddress) {\n        toast.error(`Factory address not found for network with chain ID ${networkChainId}`);\n        return;\n      }\n\n      setShowProgressModal(true);\n      setProgressStep('preparing');\n      setProgressError(null);\n\n      const signer2 = await provider.getSigner();\n      \n      // Calculate fee based on network\n      const actualFee = await getCreationFee();\n      if (!actualFee) {\n        toast.error('Failed to get creation fee from contract');\n        return;\n      }\n      // Extract just the numeric part before parsing to ether\n      const [numericFee] = actualFee.split(' '); // Split by space and take first part\n      const fee = ethers.parseEther(numericFee); // Parse only the numeric part\n      console.log('Setting fee:', fee.toString());\n\n      try {\n        // Step 1: Upload metadata\n        setProgressStep('uploading');\n        const { metadataUrl, imageHttpUrl, imageIpfsUrl } = await prepareAndUploadMetadata(formData, formData.artwork);\n\n        // Step 2: Create collection\n        setProgressStep('creating');\n        const factory = new ethers.Contract(factoryAddress, NFTFactoryABI, signer2);\n\n        const paymentTokenAddress = getPaymentToken(networkChainId);\n        console.log('Payment Token being set:', {\n          type: formData.mintingToken,\n          address: paymentTokenAddress,\n          customAddress: formData.customTokenAddress\n        });\n\n        // For whitelist collections, set a high maxPerWallet in the contract config\n        // since we'll control individual limits through the whitelist\n        const maxPerWallet = formData.enableWhitelist \n          ? BigInt(1000000) // High number to effectively remove the general limit\n          : BigInt(formData.maxPerWallet || 1);\n\n        // Verify fee amount before sending transaction\n        const parsedFee = Number(ethers.formatEther(fee));\n        const expectedFee = Number(numericFee);\n        if (parsedFee !== expectedFee) {\n          throw new Error(`Invalid fee amount: ${parsedFee}. Expected: ${expectedFee}`);\n        }\n\n        // Configure gas settings based on network\n        let gasSettings = {};\n        if (networkChainId === CHAIN_IDS.MONAD_TESTNET) {\n          gasSettings = {\n            gasLimit: 8000000, // Increased gas limit for Monad\n            maxFeePerGas: ethers.parseUnits('100', 'gwei'),\n            maxPriorityFeePerGas: ethers.parseUnits('10', 'gwei')\n          };\n          toast('Using higher gas limit for Monad Testnet', {\n            duration: 4000,\n            icon: 'ℹ️'\n          });\n        }\n\n        const tx = await factory.createNFTCollection(\n          {\n            collectionType: formData.type === 'ERC721' ? 'ERC721' : 'ERC1155',\n            name: formData.name,\n            symbol: formData.symbol,\n            metadataURI: 'ipfs://', // Set base URI as ipfs:// protocol\n            maxSupply: BigInt(formData.maxSupply || 10000),\n            mintPrice: parseEther(formData.mintPrice || '0'),\n            maxPerWallet: maxPerWallet,\n            releaseDate: BigInt(formData.releaseDate ? Math.floor(new Date(formData.releaseDate).getTime() / 1000) : Math.floor(Date.now() / 1000)),\n            mintEndDate: BigInt(formData.mintEndDate ? Math.floor(new Date(formData.mintEndDate).getTime() / 1000) : 0),\n            infiniteMint: Boolean(formData.infiniteMint),\n            paymentToken: formData.mintingToken === 'native' ? '0x0000000000000000000000000000000000000000' : \n              formData.mintingToken === 'custom' ? formData.customTokenAddress :\n              paymentTokenAddress || '0x0000000000000000000000000000000000000000',\n            enableWhitelist: Boolean(formData.enableWhitelist),\n            royaltyReceiver: formData.royaltyReceiver || account,\n            royaltyFeeNumerator: BigInt(formData.royaltyFeeNumerator || 0)\n          },\n          { \n            value: fee,\n            ...gasSettings\n          }\n        );\n\n        const receipt = await tx.wait();\n\n        // Get collection address from events\n        let collectionAddress;\n        const creationEvent = receipt.logs.find(log => \n          log.topics[0] === '0xaf1866185e64615f1cfc5b81e7bf1ff8beafdc402920eb36641743d8fe5f7757'\n        );\n\n        if (creationEvent) {\n          const decodedData = ethers.AbiCoder.defaultAbiCoder().decode(\n            ['tuple(address creator, address collection, string collectionType, string name, string symbol, uint256 maxSupply, uint256 mintPrice, uint256 maxPerWallet, uint256 releaseDate, uint256 mintEndDate, bool infiniteMint)'],\n            creationEvent.data\n          );\n          collectionAddress = decodedData[0].collection;\n        }\n\n        if (!collectionAddress) {\n          const initializedEvent = receipt.logs.find(log => \n            log.topics[0] === '0x82dfd53401a55bb491abcb3e7a97c99da1ed7eaffd89721d3e96e8e8ad4a692d'\n          );\n          collectionAddress = initializedEvent?.address;\n        }\n\n        if (!collectionAddress) {\n          setProgressStep('error');\n          setProgressError('Failed to get collection address from transaction');\n          return;\n        }\n\n        // Add Monad-specific error handling\n        if (networkChainId === CHAIN_IDS.MONAD_TESTNET && !collectionAddress) {\n          throw new Error('Collection deployment failed on Monad Testnet. Please check your MON balance.');\n        }\n\n        // Step 3: Set whitelist if enabled\n        if (formData.enableWhitelist && formData.whitelistAddresses.length > 0) {\n          setProgressStep('whitelist');\n          const nftContract = new ethers.Contract(\n            collectionAddress,\n            NFTCollectionABI.ERC721,\n            signer2\n          );\n          \n          // Convert addresses and limits to separate arrays\n          const addresses = formData.whitelistAddresses.map(item => \n            typeof item === 'string' ? item : item.address\n          );\n          const limits = formData.whitelistAddresses.map(item => \n            typeof item === 'string' ? BigInt(1) : BigInt(item.maxMint)\n          );\n          \n          const whitelistTx = await nftContract.setWhitelist(addresses, limits);\n          await whitelistTx.wait();\n        }\n\n        // Save collection data\n        const collectionData = {\n          ...formData,\n          contractAddress: collectionAddress,\n          network: networkChainId === 1301 ? 'unichain' : \n                  networkChainId === 11155111 ? 'sepolia' : \n                  networkChainId === 137 ? 'polygon' : \n                  networkChainId === 1828369849 ? 'moonwalker' :\n                  networkChainId === 10143 ? 'monad-testnet' : 'unknown',\n          chainId: networkChainId,\n          previewUrl: imageHttpUrl,\n          imageIpfsUrl: imageIpfsUrl,\n          metadataUrl: metadataUrl,\n          mintToken: {\n            type: formData.mintingToken || 'native',\n            symbol: formData.mintingToken === 'usdc' ? 'USDC' : \n                    formData.mintingToken === 'usdt' ? 'USDT' : \n                    formData.mintingToken === 'custom' ? formData.customTokenSymbol :\n                    formData.mintingToken === 'native' ? (\n                      networkChainId === 137 ? 'POL' : \n                      networkChainId === 10143 ? 'MON' : 'ETH'\n                    ) :\n                    networkChainId === 137 ? 'POL' : \n                    networkChainId === 10143 ? 'MON' : 'ETH',\n            address: formData.mintingToken === 'native' ? '0x0000000000000000000000000000000000000000' : \n                    formData.mintingToken === 'custom' ? formData.customTokenAddress :\n                    paymentTokenAddress || '0x0000000000000000000000000000000000000000'\n          },\n          whitelistAddresses: formData.whitelistAddresses,\n          createdAt: Date.now(),\n          totalMinted: 0,\n          creatorAddress: account.toLowerCase()\n        };\n\n        await saveCollection(collectionData);\n        \n        // Show completed state and trigger confetti\n        setProgressStep('completed');\n        setShowConfetti(true);\n\n        // Close progress modal and show rating after a delay\n        setTimeout(() => {\n          setShowProgressModal(false);\n          setProgressStep(null);\n          setProgressError(null);\n          \n          // Show rating modal after a short delay\n          setTimeout(() => {\n            setShowRatingModal(true);\n          }, 1000);\n          \n          // Cleanup confetti after some time\n          setTimeout(() => {\n            setShowConfetti(false);\n          }, 30000);\n        }, 2000);\n\n        onClose();\n        navigate(`/collection/${formData.symbol}`);\n\n      } catch (error) {\n        console.error('Error in collection creation process:', error);\n        setProgressStep('error');\n        setProgressError(error.message || 'Failed to create collection. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error in form submission:', error);\n      setProgressStep('error');\n      setProgressError('Failed to start collection creation. Please check your inputs and try again.');\n    }\n  };\n\n  // Update the JSON import handling\n  const handleFileUpload = (type) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = type === 'csv' ? '.csv' : \n                   type === 'excel' ? '.xlsx,.xls' : \n                   '.json';\n    \n    input.onchange = async (e) => {\n      const file = e.target.files[0];\n      if (!file) return;\n\n      try {\n        let addresses = [];\n        \n        if (type === 'json') {\n          const text = await file.text();\n          let jsonData;\n          try {\n            jsonData = JSON.parse(text);\n          } catch (e) {\n            console.error('JSON parse error:', e);\n            toast.error('Invalid JSON format');\n            return;\n          }\n\n          // Simple function to extract addresses from any string\n          const getAddressFromString = (str) => {\n            if (typeof str !== 'string') return null;\n            const match = str.match(/0x[a-fA-F0-9]{40}/);\n            return match ? match[0] : null;\n          };\n\n          // Function to process any value and extract addresses\n          const processValue = (value) => {\n            const found = new Set();\n\n            const process = (item) => {\n              // If it's a string, try to extract address\n              if (typeof item === 'string') {\n                const addr = getAddressFromString(item);\n                if (addr) found.add(addr);\n                return;\n              }\n\n              // If it's an array, process each item\n              if (Array.isArray(item)) {\n                item.forEach(process);\n                return;\n              }\n\n              // If it's an object, process each value\n              if (item && typeof item === 'object') {\n                Object.values(item).forEach(process);\n              }\n            };\n\n            process(value);\n            return Array.from(found);\n          };\n\n          // Process the JSON data\n          const foundAddresses = processValue(jsonData);\n          console.log('Found addresses:', foundAddresses);\n          addresses = foundAddresses.map(addr => ({ address: addr, maxMint: 1 }));\n        } \n        else {\n          if (type === 'csv') {\n            const text = await file.text();\n            // Split by newline and comma to handle both formats\n            const lines = text.split(/[\\r\\n,]+/);\n            addresses = lines\n              .map(line => line.trim())\n              .filter(line => line.length > 0)\n              .map(address => ({\n                address: address.replace(/['\"]/g, ''), // Remove quotes if present\n                maxMint: 1\n              }));\n          } \n          else if (type === 'excel') {\n            const data = await file.arrayBuffer();\n            const workbook = XLSX.read(data);\n            const sheet = workbook.Sheets[workbook.SheetNames[0]];\n            const rows = XLSX.utils.sheet_to_json(sheet, { header: 1, raw: false });\n            \n            // Extract addresses from all cells\n            addresses = rows.flatMap(row => {\n              if (!Array.isArray(row)) return [];\n              return row.map(cell => {\n                if (!cell) return null;\n                const str = String(cell).trim();\n                return str.startsWith('0x') ? { address: str, maxMint: 1 } : null;\n              }).filter(Boolean);\n            });\n          }\n        }\n\n        // Filter valid addresses and remove duplicates\n        const validAddresses = [...new Set(\n          addresses\n            .filter(item => item && item.address && validateAddress(item.address))\n            .map(item => item.address)\n        )].map(addr => ({ address: addr, maxMint: 1 }));\n\n        console.log('Valid addresses:', validAddresses);\n\n        if (validAddresses.length === 0) {\n          toast.error('No valid addresses found in file');\n          return;\n        }\n\n        updateFormData({ whitelistAddresses: validAddresses });\n        toast.success(\n          <div className=\"flex flex-col\">\n            <span>Imported {validAddresses.length} addresses</span>\n            <span className=\"text-sm text-gray-400 mt-1\">Click the counter to view the list</span>\n          </div>\n        );\n      } catch (error) {\n        console.error('Error importing file:', error);\n        toast.error(`Failed to import ${type} file. Please check the format.`);\n      }\n    }\n\n    input.click();\n  };\n\n  const renderStep = () => {\n    // Common button layout that we'll add to each step\n    const renderButtons = () => (\n      <div className=\"flex justify-between items-center gap-3 mt-6\">\n        {currentStep !== 'type' && (\n          <button \n            onClick={() => {\n              const currentIndex = STEPS.findIndex(s => s.id === currentStep);\n              setCurrentStep(STEPS[currentIndex - 1].id);\n            }}\n            className=\"px-6 py-2 border border-gray-300 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-[#1a1b1f] text-gray-700 dark:text-gray-300 font-semibold rounded-lg transition-colors\"\n          >\n            Back\n          </button>\n        )}\n        {currentStep !== 'minting' && ( // Only show Continue button if not on last step\n          <button\n            onClick={handleButtonClick}\n            className=\"px-6 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-semibold rounded-lg transition-colors ml-auto\"\n          >\n            Continue\n          </button>\n        )}\n        {currentStep === 'minting' && ( // Show Create Collection button on last step\n          <button\n            onClick={handleSubmit}\n            className=\"px-6 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-semibold rounded-lg transition-colors ml-auto\"\n          >\n            Create Collection\n          </button>\n        )}\n      </div>\n    );\n\n    switch (currentStep) {\n      case 'type':\n        return (\n          <div className=\"relative\">\n            {/* L-shaped corners */}\n            <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n\n            {/* Glowing dots in corners */}\n            <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n            {/* Main Content */}\n            <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6 space-y-6\">\n              <div className=\"mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n                  Create NFT Collection\n                </h3>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  Choose your collection type. Creation fee: {formData.fee || 'Loading...'} \n                </p>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <button\n                  onClick={() => {\n                    updateFormData({ type: 'ERC721' });\n                    setCurrentStep('basics');\n                  }}\n                  className={clsx(\n                    'p-4 rounded-lg border-2 text-left',\n                    'hover:border-[#00ffbd] transition-colors',\n                    formData.type === 'ERC721' \n                      ? 'border-[#00ffbd]' \n                      : 'border-gray-200 dark:border-gray-800'\n                  )}\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <FaEthereum size={24} className=\"text-[#00ffbd]\" />\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 dark:text-white\">ERC-721</h3>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Traditional NFTs, unique and non-divisible\n                      </p>\n                    </div>\n                  </div>\n                </button>\n\n                <button\n                  onClick={() => {\n                    updateFormData({ type: 'ERC1155' });\n                    setCurrentStep('basics');\n                  }}\n                  className={clsx(\n                    'p-4 rounded-lg border-2',\n                    'hover:border-[#00ffbd] transition-colors',\n                    formData.type === 'ERC1155' \n                      ? 'border-[#00ffbd]' \n                      : 'border-gray-200 dark:border-gray-800'\n                  )}\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <FaEthereum size={24} className=\"text-[#00ffbd]\" />\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 dark:text-white\">ERC-1155</h3>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Multi-token standard, semi-fungible\n                      </p>\n                    </div>\n                  </div>\n                </button>\n              </div>\n              {renderButtons()}\n            </div>\n          </div>\n        );\n      case 'basics':\n        return (\n          <div className=\"relative\">\n            {/* L-shaped corners */}\n            <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n\n            {/* Glowing dots in corners */}\n            <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n            {/* Main Content */}\n            <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6 space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Collection Name *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.name}\n                  onChange={(e) => updateFormData({ name: e.target.value })}\n                  className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                  placeholder=\"My NFT Collection\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Symbol *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.symbol}\n                  onChange={(e) => updateFormData({ symbol: e.target.value.toUpperCase() })}\n                  className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                  placeholder=\"MYNFT\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Description\n                </label>\n                <textarea\n                  value={formData.description}\n                  onChange={(e) => updateFormData({ description: e.target.value })}\n                  className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none h-24\"\n                  placeholder=\"Describe your collection...\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Website\n                  </label>\n                  <input\n                    type=\"url\"\n                    value={formData.website}\n                    onChange={(e) => updateFormData({ website: e.target.value })}\n                    className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                    placeholder=\"https://\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Category\n                  </label>\n                  <select\n                    value={formData.category}\n                    onChange={(e) => updateFormData({ category: e.target.value })}\n                    className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                  >\n                    <option value=\"\">Select Category</option>\n                    <option value=\"art\">Art</option>\n                    <option value=\"collectibles\">Collectibles</option>\n                    <option value=\"gaming\">Gaming</option>\n                    <option value=\"music\">Music</option>\n                    <option value=\"photography\">Photography</option>\n                    <option value=\"sports\">Sports</option>\n                  </select>\n                </div>\n              </div>\n\n              {/* Social Links Section */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                  Social Links\n                </h3>\n                \n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm text-gray-500 dark:text-gray-400 mb-1\">\n                      Twitter Username\n                    </label>\n                    <div className=\"relative\">\n                      <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\">@</span>\n                      <input\n                        type=\"text\"\n                        value={formData.socials.twitter}\n                        onChange={(e) => updateFormData({\n                          socials: { ...formData.socials, twitter: e.target.value }\n                        })}\n                        className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg pl-8 p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                        placeholder=\"username\"\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm text-gray-500 dark:text-gray-400 mb-1\">\n                      Discord Server\n                    </label>\n                    <input\n                      type=\"url\"\n                      value={formData.socials.discord}\n                      onChange={(e) => updateFormData({\n                        socials: { ...formData.socials, discord: e.target.value }\n                      })}\n                      className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                      placeholder=\"https://discord.gg/...\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm text-gray-500 dark:text-gray-400 mb-1\">\n                      Telegram Group\n                    </label>\n                    <div className=\"relative\">\n                      <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\">t.me/</span>\n                      <input\n                        type=\"text\"\n                        value={formData.socials.telegram}\n                        onChange={(e) => updateFormData({\n                          socials: { ...formData.socials, telegram: e.target.value }\n                        })}\n                        className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg pl-12 p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                        placeholder=\"groupname\"\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm text-gray-500 dark:text-gray-400 mb-1\">\n                      ZOS Profile\n                    </label>\n                    <input\n                      type=\"url\"\n                      value={formData.socials.zos}\n                      onChange={(e) => updateFormData({\n                        socials: { ...formData.socials, zos: e.target.value }\n                      })}\n                      className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                      placeholder=\"https://zos.zero.tech/...\"\n                    />\n                  </div>\n                </div>\n              </div>\n              {renderButtons()}\n            </div>\n          </div>\n        );\n      case 'artwork':\n        return (\n          <div className=\"relative\">\n            {/* L-shaped corners */}\n            <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n\n            {/* Glowing dots in corners */}\n            <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n            {/* Main Content */}\n            <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6 space-y-6\">\n              <div className=\"flex justify-center\">\n                <div className=\"w-64 h-64 relative\">\n                  <div \n                    className={clsx(\n                      'w-full h-full rounded-lg border-2 border-dashed flex items-center justify-center overflow-hidden',\n                      formData.previewUrl ? 'border-[#00ffbd]' : 'border-gray-300 dark:border-gray-700'\n                    )}\n                  >\n                    {formData.previewUrl ? (\n                      formData.artworkType === 'video' ? (\n                        <video \n                          src={formData.previewUrl} \n                          className=\"w-full h-full object-cover\"\n                          controls\n                        />\n                      ) : (\n                        <img \n                          src={formData.previewUrl} \n                          alt=\"Preview\" \n                          className=\"w-full h-full object-cover\"\n                        />\n                      )\n                    ) : (\n                      <div className=\"text-center\">\n                        <div className=\"flex justify-center gap-4 mb-2\">\n                          <BiImageAdd size={24} className=\"text-gray-400\" />\n                          <BiVideo size={24} className=\"text-gray-400\" />\n                        </div>\n                        <p className=\"text-sm text-gray-500\">\n                          Drop your file here, or click to browse\n                        </p>\n                        <p className=\"text-xs text-gray-400 mt-1\">\n                          Supported: Images (2MB) or MP4 Videos (5MB)\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                  <input\n                    type=\"file\"\n                    onChange={handleFileChange}\n                    accept=\"image/*,video/mp4\"\n                    className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\n                  />\n                </div>\n              </div>\n\n              {formData.previewUrl && (\n                <div className=\"text-center\">\n                  <button\n                    onClick={() => updateFormData({ \n                      artwork: null, \n                      previewUrl: null,\n                      artworkType: null\n                    })}\n                    className=\"text-sm text-red-500 hover:text-red-600\"\n                  >\n                    Remove File\n                  </button>\n                </div>\n              )}\n              {renderButtons()}\n            </div>\n          </div>\n        );\n      case 'properties':\n        return (\n          <div className=\"relative\">\n            {/* L-shaped corners */}\n            <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n\n            {/* Glowing dots in corners */}\n            <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n            {/* Main Content */}\n            <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6 space-y-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div>\n                  <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                    Attributes/traits\n                  </h3>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    Add traits that make your NFTs unique\n                  </p>\n                </div>\n                <button\n                  onClick={() => updateFormData({\n                    attributes: [...formData.attributes, { trait_type: '', value: '' }]\n                  })}\n                  className=\"px-3 py-1.5 text-sm bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-medium rounded-lg\"\n                >\n                  Add Attribute\n                </button>\n              </div>\n\n              {formData.attributes.length === 0 ? (\n                <div className=\"text-center py-8 border-2 border-dashed border-gray-300 dark:border-gray-700 rounded-lg\">\n                  <p className=\"text-sm text-gray-500\">\n                    No attributes added yet\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  {formData.attributes.map((prop, index) => (\n                    <div key={index} className=\"flex gap-3 items-start\">\n                      <div className=\"flex-1\">\n                        <input\n                          placeholder=\"Attribute name\"\n                          value={prop.trait_type}\n                          onChange={(e) => {\n                            const newProps = [...formData.attributes];\n                            newProps[index].trait_type = e.target.value;\n                            updateFormData({ attributes: newProps });\n                          }}\n                          className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-2.5 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none text-sm\"\n                        />\n                      </div>\n                      <div className=\"flex-1\">\n                        <input\n                          placeholder=\"Value\"\n                          value={prop.value}\n                          onChange={(e) => {\n                            const newProps = [...formData.attributes];\n                            newProps[index].value = e.target.value;\n                            updateFormData({ attributes: newProps });\n                          }}\n                          className=\"w-full bg-gray-50 dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-2.5 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none text-sm\"\n                        />\n                      </div>\n                      <button\n                        onClick={() => {\n                          const newProps = formData.attributes.filter((_, i) => i !== index);\n                          updateFormData({ attributes: newProps });\n                        }}\n                        className=\"p-2.5 text-red-500 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg\"\n                      >\n                        <BiX size={20} />\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              )}\n              {renderButtons()}\n            </div>\n          </div>\n        );\n      case 'minting':\n        return (\n          <div className=\"relative\">\n            {/* L-shaped corners */}\n            <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n\n            {/* Glowing dots in corners */}\n            <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n            {/* Main Content */}\n            <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6 space-y-6\">\n              <div className=\"space-y-4\">\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Minting Currency *\n                </label>\n                {renderTokenSelection()}\n              </div>\n\n              {formData.mintingToken === 'custom' && (\n                <div className=\"mt-4 space-y-4 animate-[fadeIn_0.3s_ease-in-out]\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5\">\n                      Custom Token Address *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.customTokenAddress}\n                      onChange={(e) => updateFormData({ customTokenAddress: e.target.value })}\n                      className=\"w-full bg-white dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-2.5 border border-gray-200 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                      placeholder=\"Enter token contract address\"\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5\">\n                      Custom Token Symbol *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.customTokenSymbol}\n                      onChange={(e) => updateFormData({ customTokenSymbol: e.target.value })}\n                      className=\"w-full bg-white dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-2.5 border border-gray-200 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                      placeholder=\"Enter token symbol\"\n                      required\n                    />\n                  </div>\n                </div>\n              )}\n\n              <div className=\"grid grid-cols-2 gap-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5\">\n                    Mint Price *\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"number\"\n                      step=\"0.000000000000000001\"\n                      value={formData.mintPrice}\n                      onChange={(e) => updateFormData({ mintPrice: e.target.value })}\n                      className=\"w-full bg-white dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg pl-16 p-2.5 border border-gray-200 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                      placeholder=\"0.00\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5\">\n                    Royalty Fee (%)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={formData.royaltyFeePercent}\n                    onChange={(e) => updateFormData({ royaltyFeePercent: e.target.value })}\n                    className=\"w-full bg-white dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-2.5 border border-gray-200 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                    placeholder=\"Enter royalty percentage (0-100) (Optional)\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5\">\n                    Royalty Receiver Address\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.royaltyReceiver}\n                    onChange={(e) => updateFormData({ royaltyReceiver: e.target.value })}\n                    className=\"w-full bg-white dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-2.5 border border-gray-200 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                    placeholder=\"Enter address (Optional)\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5\">\n                    Max Supply *\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={formData.maxSupply}\n                    onChange={(e) => updateFormData({ maxSupply: e.target.value })}\n                    className=\"w-full bg-white dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-2.5 border border-gray-200 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                    placeholder=\"Enter max supply\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5\">\n                    Max Per Wallet *\n                  </label>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    value={formData.maxPerWallet}\n                    onChange={(e) => updateFormData({ maxPerWallet: e.target.value })}\n                    placeholder=\"Enter max per wallet\"\n                    className={`w-full bg-white dark:bg-[#1a1b1f] text-gray-900 dark:text-white border border-gray-200 dark:border-gray-800 rounded-lg px-3 py-2 focus:outline-none focus:border-[#00ffbd] ${\n                      formData.enableWhitelist ? 'cursor-not-allowed bg-gray-100 dark:bg-[#1a1b1f] opacity-75' : ''\n                    }`}\n                    disabled={formData.enableWhitelist}\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5\">\n                    Release Date *\n                  </label>\n                  <input\n                    type=\"datetime-local\"\n                    value={formData.releaseDate}\n                    onChange={(e) => updateFormData({ releaseDate: e.target.value })}\n                    className=\"w-full bg-white dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-2.5 border border-gray-200 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"mt-6\">\n                <label className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.enableWhitelist}\n                    onChange={(e) => handleWhitelistToggle(e.target.checked)}\n                    className=\"w-4 h-4 text-[#00ffbd] border-gray-300 rounded focus:ring-[#00ffbd]\"\n                  />\n                  <span className=\"text-sm text-gray-700 dark:text-gray-300\">\n                    Enable whitelist for early minting\n                  </span>\n                </label>\n              </div>\n\n              {formData.enableWhitelist && (\n                <div className=\"mt-4 space-y-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                      Import Whitelist\n                    </h3>\n                    <button\n                      onClick={() => setShowAddressModal(true)}\n                      className=\"text-xs text-[#00ffbd] hover:text-[#00e6a9] transition-colors flex items-center gap-1\"\n                    >\n                      <span>{formData.whitelistAddresses.length} Addresses</span>\n                      <BiListUl size={16} />\n                    </button>\n                  </div>\n\n                  {/* Manual address input */}\n                  <div className=\"flex gap-2\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter wallet address (0x...)\"\n                      value={newAddress}\n                      onChange={(e) => setNewAddress(e.target.value)}\n                      className=\"flex-1 bg-white dark:bg-[#0d0e12] text-gray-900 dark:text-white rounded-lg px-3 py-2 text-sm border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                    />\n                    <button\n                      onClick={handleAddAddress}\n                      className=\"px-3 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-medium rounded-lg text-sm\"\n                    >\n                      Add\n                    </button>\n                  </div>\n\n                  {/* File import buttons */}\n                  <div className=\"flex gap-2\">\n                    <button\n                      onClick={() => handleFileUpload('csv')}\n                      className=\"flex items-center gap-2 px-3 py-2 text-sm text-gray-700 dark:text-gray-300 bg-white dark:bg-[#0d0e12] border border-gray-300 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-[#1a1b1f]\"\n                    >\n                      <FaFileCsv size={16} />\n                      Import CSV\n                    </button>\n                    <button\n                      onClick={() => handleFileUpload('excel')}\n                      className=\"flex items-center gap-2 px-3 py-2 text-sm text-gray-700 dark:text-gray-300 bg-white dark:bg-[#0d0e12] border border-gray-300 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-[#1a1b1f]\"\n                    >\n                      <FaFileExcel size={16} />\n                      Import EXCEL\n                    </button>\n                    <button\n                      onClick={() => handleFileUpload('json')}\n                      className=\"flex items-center gap-2 px-3 py-2 text-sm text-gray-700 dark:text-gray-300 bg-white dark:bg-[#0d0e12] border border-gray-300 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-[#1a1b1f]\"\n                    >\n                      <FaFileCode size={16} />\n                      Import JSON\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"mt-6\">\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5\">\n                  Mint End Date *\n                </label>\n                <div className=\"flex items-center gap-3\">\n                  <input\n                    type=\"datetime-local\"\n                    value={formData.mintEndDate}\n                    onChange={(e) => updateFormData({ mintEndDate: e.target.value })}\n                    className={`flex-1 bg-white dark:bg-[#1a1b1f] text-gray-900 dark:text-white rounded-lg p-2.5 border border-gray-200 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none ${\n                      formData.infiniteMint ? 'cursor-not-allowed opacity-50' : ''\n                    }`}\n                    disabled={formData.infiniteMint}\n                    required={!formData.infiniteMint}\n                  />\n                  <label className=\"inline-flex items-center cursor-pointer\">\n                    <input\n                      type=\"checkbox\"\n                      checked={formData.infiniteMint}\n                      onChange={(e) => updateFormData({ infiniteMint: e.target.checked })}\n                      className=\"sr-only peer\"\n                    />\n                    <div className=\"relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-[#00ffbd]/20 dark:peer-focus:ring-[#00ffbd]/30 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-[#00ffbd]\"></div>\n                    <span className=\"ms-3 text-sm font-medium text-gray-700 dark:text-gray-300\">Infinite Mint</span>\n                  </label>\n                </div>\n              </div>\n              {renderButtons()}\n            </div>\n          </div>\n        );\n    }\n  };\n\n  const renderWhitelistSection = () => (\n    <div \n      className=\"mt-4 p-4 bg-gray-50 dark:bg-[#1a1b1f] rounded-lg\"\n      onClick={(e) => e.stopPropagation()}\n    >\n      <div className=\"bg-gray-50 dark:bg-[#1a1b1f] z-10\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div>\n            <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Import Whitelist\n            </h3>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n              Add wallet addresses for whitelist access\n            </p>\n          </div>\n          <button\n            type=\"button\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setShowAddressModal(true);\n              if (formData.whitelistAddresses.length > 0) {\n                toast.success('Click the X button to remove addresses', { duration: 3000 });\n              }\n            }}\n            className=\"px-3 py-1 bg-[#00ffbd]/10 rounded-lg hover:bg-[#00ffbd]/20 transition-colors cursor-pointer group relative\"\n          >\n            <span className=\"text-sm font-medium text-[#00ffbd]\">\n              {formData.whitelistAddresses.length} Addresses\n            </span>\n            <span className=\"absolute -top-8 left-1/2 -translate-x-1/2 bg-black text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\n              Click to view addresses\n            </span>\n          </button>\n        </div>\n\n        {/* Manual address input */}\n        <div className=\"flex gap-2 mb-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter wallet address (0x...)\"\n            value={newAddress}\n            onChange={(e) => setNewAddress(e.target.value)}\n            className=\"flex-1 bg-white dark:bg-[#0d0e12] text-gray-900 dark:text-white rounded-lg px-3 py-2 text-sm border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n          />\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              handleAddAddress(e);\n            }}\n            className=\"px-3 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-medium rounded-lg text-sm\"\n          >\n            Add\n          </button>\n        </div>\n\n        {/* File import buttons */}\n        <div className=\"flex gap-2\">\n          {['csv', 'excel', 'json'].map((type) => (\n            <button\n              key={type}\n              onClick={(e) => {\n                e.stopPropagation();\n                handleFileUpload(type);\n              }}\n              className=\"flex items-center gap-2 px-3 py-2 text-sm text-gray-700 dark:text-gray-300 bg-white dark:bg-[#0d0e12] border border-gray-300 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-[#1a1b1f]\"\n            >\n              {type === 'csv' && <FaFileCsv size={16} />}\n              {type === 'excel' && <FaFileExcel size={16} />}\n              {type === 'json' && <FaFileCode size={16} />}\n              Import {type.toUpperCase()}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const handleButtonClick = () => {\n    if (currentStep === 'minting') {\n      handleSubmit();\n    } else {\n      const currentIndex = STEPS.findIndex(s => s.id === currentStep);\n      setCurrentStep(STEPS[currentIndex + 1].id);\n    }\n  };\n\n  const getPaymentToken = (chainId) => {\n    if (!formData.mintingToken || formData.mintingToken === 'native') {\n      // Return native POL address for Polygon network\n      if (chainId === 137) {\n        return '0x0000000000000000000000000000000000001010';\n      }\n      return '0x0000000000000000000000000000000000000000';\n    }\n    \n    const tokenAddresses = TOKEN_ADDRESSES[chainId];\n    if (!tokenAddresses) {\n      console.warn('Token addresses not configured for this network');\n      return '0x0000000000000000000000000000000000000000';\n    }\n\n    switch (formData.mintingToken) {\n      case 'usdc':\n        return tokenAddresses.USDC;\n      case 'usdt':\n        return tokenAddresses.USDT;\n      case 'custom':\n        return formData.customTokenAddress || '0x0000000000000000000000000000000000000000';\n      default:\n        return '0x0000000000000000000000000000000000000000';\n    }\n  };\n\n  // Add Moonwalker to supported networks\n  const SUPPORTED_NETWORKS = {\n    SEPOLIA: {\n      id: 11155111,\n      name: 'Sepolia',\n      factoryAddress: import.meta.env.VITE_NFT_FACTORY_SEPOLIA,\n      fee: '0.015',\n      nativeCurrency: 'ETH'\n    },\n    POLYGON: {\n      id: 137,\n      name: 'Polygon',\n      factoryAddress: import.meta.env.VITE_NFT_FACTORY_POLYGON,\n      fee: '20',\n      nativeCurrency: 'POL'\n    },\n    UNICHAIN_MAINNET: {\n      id: 130,\n      name: 'Unichain Mainnet',\n      factoryAddress: import.meta.env.VITE_NFT_FACTORY_UNICHAIN_MAINNET,\n      fee: '0.01',\n      nativeCurrency: 'ETH'\n    },\n    UNICHAIN: {\n      id: 1301,\n      name: 'Unichain Testnet',\n      factoryAddress: import.meta.env.VITE_NFT_FACTORY_UNICHAIN,\n      fee: '0.015',\n      nativeCurrency: 'ETH'\n    },\n    MOONWALKER: {\n      id: 1828369849,\n      name: 'Moonwalker',\n      factoryAddress: import.meta.env.VITE_NFT_FACTORY_MOONWALKER,\n      fee: '369',\n      nativeCurrency: 'ZERO'\n    }\n  };\n\n  // Update the createNFT function to support Moonwalker\n  const createNFT = async () => {\n    if (!account) {\n      toast.error('Please connect your wallet first');\n      return;\n    }\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const network = await provider.getNetwork();\n      const chainId = Number(network.chainId);\n\n      // Find network configuration\n      const networkConfig = Object.values(SUPPORTED_NETWORKS).find(n => n.id === chainId);\n      if (!networkConfig) {\n        toast.error('Please switch to a supported network');\n        return;\n      }\n\n      // Get the correct factory address and fee based on the network\n      const factory = new ethers.Contract(\n        networkConfig.factoryAddress,\n        NFTFactoryABI,\n        signer\n      );\n\n      // Prepare transaction with explicit chain configuration\n      const txParams = {\n        value: ethers.parseEther(networkConfig.fee),\n        chainId: chainId,\n      };\n\n      // Create NFT with transaction parameters\n      const tx = await factory.createNFT(\n        formData.name,\n        formData.symbol,\n        formData.baseURI,\n        txParams\n      );\n\n      toast.loading('Creating NFT collection...', { id: 'create' });\n      await tx.wait();\n      toast.success('NFT collection created!', { id: 'create' });\n      onClose();\n\n    } catch (error) {\n      console.error('NFT Creation error:', error);\n      toast.error(\n        error.message.includes('chain') \n          ? 'Please switch to a supported network'\n          : `Failed to create NFT: ${error.message}`,\n        { id: 'create' }\n      );\n    }\n  };\n\n  // If wallet is not connected, show connect prompt\n  const renderConnectPrompt = () => (\n    <div className=\"text-center py-8\">\n      <div className=\"mb-4\">\n        <BiWallet size={48} className=\"mx-auto text-gray-400 dark:text-gray-600\" />\n      </div>\n      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n        Connect Your Wallet\n      </h3>\n      <p className=\"text-gray-500 dark:text-gray-400 mb-6\">\n        Please connect your wallet to create an NFT collection\n      </p>\n      <button\n        onClick={openConnectModal}\n        className=\"px-6 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-semibold rounded-lg transition-colors\"\n      >\n        Connect Wallet\n      </button>\n    </div>\n  );\n\n  // Add useEffect to get chain ID\n  useEffect(() => {\n    const getChainId = async () => {\n      if (window.ethereum) {\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        setCurrentChainId(parseInt(chainId, 16));\n      }\n    };\n    getChainId();\n\n    // Listen for chain changes\n    window.ethereum?.on('chainChanged', (chainId) => {\n      setCurrentChainId(parseInt(chainId, 16));\n    });\n  }, []);\n\n  // Add new state for address modal\n  const [showAddressModal, setShowAddressModal] = useState(false);\n\n  const handleRemoveAddress = (index) => {\n    const newAddresses = formData.whitelistAddresses.filter((_, i) => i !== index);\n    updateFormData({ whitelistAddresses: newAddresses });\n  };\n\n  // Update the manual address addition\n  const handleAddAddress = (e) => {\n    e.stopPropagation();\n    if (validateAddress(newAddress)) {\n      updateFormData({\n        whitelistAddresses: [...formData.whitelistAddresses, { address: newAddress, maxMint: 1 }]\n      });\n      setNewAddress('');\n    } else {\n      toast.error('Invalid wallet address');\n    }\n  };\n\n  const handleUpdateWhitelist = (updates) => {\n    setFormData(prev => ({\n      ...prev,\n      whitelistAddresses: updates.whitelistAddresses\n    }));\n  };\n\n  // Add effect to handle whitelist toggle\n  const [enableWhitelist, setEnableWhitelist] = useState(false);\n  const [maxPerWallet, setMaxPerWallet] = useState('');\n\n  useEffect(() => {\n    if (formData.enableWhitelist) {\n      setMaxPerWallet('1000000');  // Set a high default for whitelist mode\n    }\n  }, [formData.enableWhitelist]);\n\n  const handleWhitelistToggle = (checked) => {\n    if (checked) {\n      updateFormData({ \n        enableWhitelist: checked,\n        maxPerWallet: '1000000'  // Set a high default for whitelist mode\n      });\n      // Show persistent toast\n      toast('When whitelist is enabled, max per wallet is set high to allow individual whitelist limits to control minting. You can set specific mint limits for each address when adding them to the whitelist.', {\n        duration: Infinity,\n        id: 'whitelist-info'\n      });\n    } else {\n      updateFormData({ \n        enableWhitelist: checked,\n        maxPerWallet: ''\n      });\n      // Dismiss the persistent toast\n      toast.dismiss('whitelist-info');\n    }\n  };\n\n  // Add window resize handler\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const handleSuccess = async (deployedAddress, eventData, logoUrls) => {\n    try {\n      // Get chain name based on chain ID\n      const getChainName = (chainId) => {\n        switch (chainId) {\n          case CHAIN_IDS.POLYGON:\n            return 'polygon';\n          case CHAIN_IDS.SEPOLIA:\n            return 'sepolia';\n          case CHAIN_IDS.UNICHAIN_MAINNET:\n            return 'unichain-mainnet';\n          case CHAIN_IDS.UNICHAIN:\n            return 'unichain';\n          case CHAIN_IDS.MOONWALKER:\n            return 'moonwalker';\n          case CHAIN_IDS.MONAD_TESTNET:\n            return 'monad-testnet';\n          default:\n            return 'unknown';\n        }\n      };\n\n      const chainName = getChainName(currentChainId);\n      const { imageHttpUrl, imageIpfsUrl, metadataUrl } = logoUrls;\n\n      console.log('Saving NFT collection with data:', {\n        name: eventData.name,\n        symbol: eventData.symbol,\n        address: deployedAddress,\n        chainId: currentChainId,\n        chainName,\n        previewUrl: imageHttpUrl,\n        imageIpfsUrl: imageIpfsUrl,\n        metadataUrl: metadataUrl,\n        description: formData.description,\n        timestamp: Date.now(),\n        creatorAddress: account.toLowerCase(),\n        network: chainName\n      });\n\n      await saveCollection({\n        name: eventData.name,\n        symbol: eventData.symbol,\n        address: deployedAddress,\n        chainId: currentChainId,\n        chainName,\n        previewUrl: imageHttpUrl,\n        imageIpfsUrl: imageIpfsUrl,\n        metadataUrl: metadataUrl,\n        description: formData.description,\n        timestamp: Date.now(),\n        creatorAddress: account.toLowerCase(),\n        network: chainName\n      });\n\n      console.log('NFT collection saved successfully');\n      setDeployedTokenAddress(deployedAddress);\n      setProgressStep('completed');\n      setShowConfetti(true);\n      \n      // Clear any existing toasts\n      toast.dismiss();\n    } catch (error) {\n      console.error('Error in handleSuccess:', error);\n      setProgressError(error.message);\n      toast.error('Failed to save collection data');\n    }\n  };\n\n  // Add the modal to the main render\n  return (\n    <>\n      <Dialog open={isOpen} onClose={onClose} className=\"relative z-[9999]\">\n        <div className=\"fixed inset-0 bg-black/70 z-[9999]\" aria-hidden=\"true\" />\n        \n        <div className=\"fixed inset-0 flex items-center justify-center p-4 z-[9999]\">\n          <Dialog.Panel className=\"relative w-full max-w-2xl transform overflow-hidden rounded-lg bg-white dark:bg-[#0a0b0f] p-6\">\n            <div className=\"relative\">\n              {/* L-shaped corners */}\n              <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n                <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n                <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n              </div>\n              <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n                <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n                <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n              </div>\n              <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n                <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n                <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n              </div>\n              <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n                <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n                <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n              </div>\n\n              {/* Glowing dots in corners */}\n              <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n              <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n              <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n              <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n              {/* Three dots in top right */}\n              <div className=\"absolute top-3 right-3 flex gap-1 z-20\">\n                {[1, 2, 3].map((i) => (\n                  <div\n                    key={i}\n                    className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n                    style={{ animationDelay: `${i * 0.2}s` }}\n                  />\n                ))}\n              </div>\n\n              {/* Main Content */}\n              <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6\">\n                <div className=\"flex justify-between items-center mb-6\">\n                  <Dialog.Title className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                    Create NFT Collection\n                  </Dialog.Title>\n                  <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n                    <BiX size={24} />\n                  </button>\n                </div>\n\n                {!account ? renderConnectPrompt() : (\n                  <>\n                    {/* Progress Indicator */}\n                    <div className=\"mb-6\">\n                      <div className=\"flex justify-between\">\n                        {STEPS.map((step, index) => (\n                          <div key={step.id} className=\"flex items-center\">\n                            <div className={clsx(\n                              'w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium',\n                              currentStep === step.id\n                                ? 'bg-[#00ffbd] text-black'\n                                : STEPS.findIndex(s => s.id === currentStep) > index\n                                ? 'bg-[#00ffbd] text-black'\n                                : 'bg-gray-100 dark:bg-[#1a1b1f] text-gray-400'\n                            )}>\n                              {index + 1}\n                            </div>\n                            {index !== STEPS.length - 1 && (\n                              <div className={clsx(\n                                'h-0.5 w-full mx-2',\n                                STEPS.findIndex(s => s.id === currentStep) > index\n                                  ? 'bg-[#00ffbd]'\n                                  : 'bg-gray-100 dark:bg-[#1a1b1f]'\n                              )} />\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Step Content */}\n                    {renderStep()}\n                  </>\n                )}\n              </div>\n            </div>\n          </Dialog.Panel>\n        </div>\n      </Dialog>\n      <AddressModal \n        isOpen={showAddressModal} \n        onClose={() => setShowAddressModal(false)}\n        addresses={formData.whitelistAddresses}\n        onRemoveAddress={handleRemoveAddress}\n        onUpdateAddress={handleUpdateWhitelist}\n      />\n      {showConfetti && (\n        <Confetti\n          width={windowSize.width}\n          height={windowSize.height}\n          numberOfPieces={200}\n          recycle={false}\n          gravity={0.2}\n          initialVelocityX={10}\n          initialVelocityY={10}\n          colors={['#00ffbd', '#00e6a9', '#00cc95', '#00b381', '#00996d']}\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 99999,\n            pointerEvents: 'none'\n          }}\n        />\n      )}\n      <ProgressModal\n        isOpen={showProgressModal}\n        onClose={() => {\n          setShowProgressModal(false);\n          setProgressStep(null);\n        }}\n        currentStep={progressStep}\n        collectionName={formData.name}\n        error={progressError}\n      />\n      <StarRatingModal\n        isOpen={showRatingModal}\n        onClose={() => setShowRatingModal(false)}\n        onRate={(rating) => {\n          console.log('User rated NFT creation:', rating);\n          // Here you can implement the logic to save the rating\n        }}\n      />\n    </>\n  );\n}\n\n// Add this function near the top of the file\nconst getGasSettings = async (chainId, provider) => {\n  if (chainId === CHAIN_IDS.MONAD_TESTNET) {\n    return {\n      gasLimit: 10000000, // Increased gas limit for Monad\n      maxFeePerGas: ethers.parseUnits('200', 'gwei'),\n      maxPriorityFeePerGas: ethers.parseUnits('20', 'gwei')\n    };\n  }\n  return {};\n};","import React, { useState } from 'react';\nimport { Dialog, Tab } from '@headlessui/react';\nimport { BiX, BiHelpCircle } from 'react-icons/bi';\n\nconst tokenFaqs = [\n  {\n    question: \"What security measures are in place?\",\n    answer: \"The contract includes initialization protection, ownership controls via OpenZeppelin's Ownable, and ReentrancyGuard protection. Each token can only be initialized once and has input validation for names, symbols, and decimals. Learn more about OpenZeppelin's security features here: \",\n    link: \"https://docs.openzeppelin.com/contracts/4.x/api/security\"\n  },\n  {\n    question: \"What can token creators do?\",\n    answer: \"Token creators can set the initial supply, name, symbol, and decimals (up to 18) of their token. They receive full ownership of their created token and the initial supply is minted to their address. Read more about ERC20 implementation here: \",\n    link: \"https://docs.openzeppelin.com/contracts/4.x/erc20\"\n  },\n  {\n    question: \"What are the limitations?\",\n    answer: \"Tokens are non-upgradeable once deployed. There's no built-in burning mechanism, no additional minting after initial supply, no pausing functionality, and no token recovery mechanism.\"\n  },\n  {\n    question: \"What's the creation fee and how is it used?\",\n    answer: \"The creation fee is 0.02 ETH. This fee helps cover operational costs including server maintenance, IPFS hosting, Firebase services, and most importantly, contributes to my audit fund. My goal is to undergo a comprehensive smart contract audit to ensure maximum security for our users.\"\n  },\n  {\n    question: \"Are the tokens standard ERC20?\",\n    answer: \"Yes, all created tokens are standard ERC20 tokens using OpenZeppelin's implementation, ensuring compatibility with all ERC20-supporting platforms and wallets. Learn more about the standard here: \",\n    link: \"https://eips.ethereum.org/EIPS/eip-20\"\n  }\n];\n\nconst nftFaqs = [\n  {\n    question: \"What security features protect NFT creators and collectors?\",\n    answer: \"Our NFT contracts implement multiple security layers including OpenZeppelin's ReentrancyGuard to prevent reentrancy attacks, Ownable for secure ownership management, and Pausable for emergency stops. We use ERC721Enumerable and ERC1155Supply for accurate token tracking. Learn more about these security features: \",\n    link: \"https://docs.openzeppelin.com/contracts/4.x/api/security\"\n  },\n  {\n    question: \"How are NFT metadata and assets stored?\",\n    answer: \"All NFT metadata and assets are stored on IPFS, ensuring decentralized and permanent storage. The IPFS hashes are immutably recorded on-chain. We use Pinata for reliable pinning services to ensure your NFT assets remain accessible.\"\n  },\n  {\n    question: \"What anti-bot measures are in place?\",\n    answer: \"Our contracts include multiple bot prevention mechanisms: configurable mint limits per wallet, optional whitelist functionality, and transaction rate limiting. For whitelisted sales, we use Merkle trees for efficient and secure verification.\"\n  },\n  {\n    question: \"How does the whitelist system work?\",\n    answer: \"Our whitelist implementation uses Merkle trees (via OpenZeppelin's MerkleProof) for gas-efficient and secure verification. Whitelisted addresses can have custom mint limits and pricing. Learn more about Merkle proofs: \",\n    link: \"https://docs.openzeppelin.com/contracts/4.x/api/utils#MerkleProof\"\n  },\n  {\n    question: \"What royalty standards are supported?\",\n    answer: \"We implement EIP-2981 for on-chain royalties, compatible with major marketplaces. Creators can set royalty percentages (up to 10%) that are enforced at the contract level. Read about the standard: \",\n    link: \"https://eips.ethereum.org/EIPS/eip-2981\"\n  },\n  {\n    question: \"Can the contracts be upgraded after deployment?\",\n    answer: \"No, our contracts are purposely non-upgradeable to ensure immutability and security. All parameters (baseURI, royalties, etc.) are set at deployment and cannot be changed unless specifically allowed through controlled functions.\"\n  },\n  {\n    question: \"What's the creation fee and how is it used?\",\n    answer: \"The creation fee (0.02 ETH for ERC721, 0.025 ETH for ERC1155) supports our infrastructure costs including IPFS hosting, Firebase services, and server maintenance. A portion is allocated to our audit fund - we're actively working towards a comprehensive audit by a reputable firm.\"\n  },\n  {\n    question: \"What's the difference between ERC721 and ERC1155?\",\n    answer: \"ERC721 tokens are unique, ideal for 1/1 artwork or unique collectibles. ERC1155 supports both fungible and non-fungible tokens, perfect for editions or collections with multiple copies. Learn more: \",\n    link: \"https://docs.openzeppelin.com/contracts/4.x/erc721\"\n  },\n  {\n    question: \"How are gas costs optimized?\",\n    answer: \"We implement several gas optimizations: efficient storage packing, minimal storage operations, optimized metadata handling, and batch minting support for ERC1155. Our contracts are thoroughly tested for gas efficiency.\"\n  },\n  {\n    question: \"What happens if something goes wrong?\",\n    answer: \"Contracts include emergency pause functionality (for admins only) and clear error messages. While we can't modify or upgrade contracts, the pause feature provides a safety mechanism in extreme situations.\"\n  }\n];\n\nexport default function FAQ({ isOpen, onClose }) {\n  return (\n    <>\n      <button\n        onClick={() => onClose(true)}\n        className=\"fixed bottom-6 right-6 bg-[#00ffbd] hover:bg-[#00e6a9] text-black p-3 rounded-full shadow-lg\"\n      >\n        <BiHelpCircle size={24} />\n      </button>\n\n      <Dialog open={isOpen} onClose={onClose} className=\"relative z-50\">\n        <div className=\"fixed inset-0 bg-black/70\" aria-hidden=\"true\" />\n        \n        <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n          <Dialog.Panel className=\"relative bg-[#0a0b0f] rounded-lg p-6 max-w-md w-full\">\n            {/* Top left corner */}\n            <div className=\"absolute -top-px -left-px w-24 h-24\">\n              <div className=\"absolute top-0 left-0 w-2 h-2 bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 left-0 w-2 h-2 bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 left-0 w-[1px] h-full bg-gradient-to-b from-[#00ffbd]\" />\n              <div className=\"absolute top-0 left-0 w-full h-[1px] bg-gradient-to-r from-[#00ffbd]\" />\n            </div>\n\n            {/* Top right corner */}\n            <div className=\"absolute -top-px -right-px w-24 h-24\">\n              <div className=\"absolute top-0 right-0 w-2 h-2 bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 right-0 w-2 h-2 bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 right-0 w-[1px] h-full bg-gradient-to-b from-[#00ffbd]\" />\n              <div className=\"absolute top-0 right-0 w-full h-[1px] bg-gradient-to-r to-[#00ffbd]\" />\n            </div>\n\n            {/* Bottom left corner */}\n            <div className=\"absolute -bottom-px -left-px w-24 h-24\">\n              <div className=\"absolute bottom-0 left-0 w-2 h-2 bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 left-0 w-2 h-2 bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 left-0 w-[1px] h-full bg-gradient-to-t from-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 left-0 w-full h-[1px] bg-gradient-to-r from-[#00ffbd]\" />\n            </div>\n\n            {/* Bottom right corner */}\n            <div className=\"absolute -bottom-px -right-px w-24 h-24\">\n              <div className=\"absolute bottom-0 right-0 w-2 h-2 bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 right-0 w-2 h-2 bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 right-0 w-[1px] h-full bg-gradient-to-t from-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 right-0 w-full h-[1px] bg-gradient-to-r to-[#00ffbd]\" />\n            </div>\n\n            {/* Three dots in top right */}\n            <div className=\"absolute top-3 right-3 flex gap-1\">\n              {[1, 2, 3].map((i) => (\n                <div\n                  key={i}\n                  className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n                  style={{ animationDelay: `${i * 0.2}s` }}\n                />\n              ))}\n            </div>\n\n            {/* Content container */}\n            <div className=\"relative z-10\">\n              <div className=\"flex justify-between items-center mb-6\">\n                <Dialog.Title className=\"text-xl font-semibold text-white\">\n                  Frequently Asked Questions\n                </Dialog.Title>\n                <button onClick={() => onClose(false)} className=\"text-gray-400 hover:text-gray-300\">\n                  <BiX size={24} />\n                </button>\n              </div>\n\n              <Tab.Group>\n                <Tab.List className=\"flex space-x-1 rounded-xl bg-[#1a1b1f] p-1 mb-6\">\n                  <Tab className={({ selected }) =>\n                    `w-full rounded-lg py-2.5 text-sm font-medium leading-5\n                     ${selected \n                      ? 'bg-[#00ffbd] text-black shadow'\n                      : 'text-gray-400 hover:bg-[#2a2b2f] hover:text-white'\n                     }`\n                  }>\n                    Tokens\n                  </Tab>\n                  <Tab className={({ selected }) =>\n                    `w-full rounded-lg py-2.5 text-sm font-medium leading-5\n                     ${selected \n                      ? 'bg-[#00ffbd] text-black shadow'\n                      : 'text-gray-400 hover:bg-[#2a2b2f] hover:text-white'\n                     }`\n                  }>\n                    NFTs\n                  </Tab>\n                </Tab.List>\n\n                <div \n                  className=\"overflow-y-auto pr-2 custom-scrollbar\" \n                  style={{ \n                    maxHeight: 'calc(80vh - 140px)',\n                    scrollbarWidth: 'thin',\n                    scrollbarColor: '#00ffbd #1a1b1f'\n                  }}\n                >\n                  <style jsx>{`\n                    .custom-scrollbar::-webkit-scrollbar {\n                      width: 4px;\n                    }\n                    \n                    .custom-scrollbar::-webkit-scrollbar-track {\n                      background: #1a1b1f;\n                      border-radius: 2px;\n                    }\n                    \n                    .custom-scrollbar::-webkit-scrollbar-thumb {\n                      background: #00ffbd;\n                      border-radius: 2px;\n                    }\n                    \n                    .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n                      background: #00e6a9;\n                    }\n                  `}</style>\n\n                  <Tab.Panels>\n                    <Tab.Panel>\n                      <div className=\"space-y-6\">\n                        {tokenFaqs.map((faq, index) => (\n                          <div key={index} className=\"border-b border-gray-200 dark:border-gray-800 pb-4 last:border-0\">\n                            <h3 className=\"font-medium text-gray-900 dark:text-white mb-2\">{faq.question}</h3>\n                            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n                              {faq.answer}\n                              {faq.link && (\n                                <a href={faq.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-[#00ffbd] hover:underline ml-1\">\n                                  Read more\n                                </a>\n                              )}\n                            </p>\n                          </div>\n                        ))}\n                      </div>\n                    </Tab.Panel>\n                    <Tab.Panel>\n                      <div className=\"space-y-6\">\n                        {nftFaqs.map((faq, index) => (\n                          <div key={index} className=\"border-b border-gray-200 dark:border-gray-800 pb-4 last:border-0\">\n                            <h3 className=\"font-medium text-gray-900 dark:text-white mb-2\">{faq.question}</h3>\n                            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n                              {faq.answer}\n                              {faq.link && (\n                                <a href={faq.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-[#00ffbd] hover:underline ml-1\">\n                                  Read more\n                                </a>\n                              )}\n                            </p>\n                          </div>\n                        ))}\n                      </div>\n                    </Tab.Panel>\n                  </Tab.Panels>\n                </div>\n              </Tab.Group>\n            </div>\n          </Dialog.Panel>\n        </div>\n      </Dialog>\n    </>\n  );\n}","import React, { createContext, useContext, useState } from 'react';\n\nconst UniswapVersionContext = createContext();\n\nexport function UniswapVersionProvider({ children }) {\n  const [version, setVersion] = useState('v2');\n\n  return (\n    <UniswapVersionContext.Provider value={{ version, setVersion }}>\n      {children}\n    </UniswapVersionContext.Provider>\n  );\n}\n\nexport function useUniswapVersion() {\n  const context = useContext(UniswapVersionContext);\n  if (!context) {\n    throw new Error('useUniswapVersion must be used within a UniswapVersionProvider');\n  }\n  return context;\n} ","const explorers = {\n  1: 'https://etherscan.io',\n  11155111: 'https://sepolia.etherscan.io',\n  137: 'https://polygonscan.com',\n  80001: 'https://mumbai.polygonscan.com',\n  130: 'https://unichain.blockscout.com',\n  1301: 'https://unichain-sepolia.blockscout.com',\n  1828369849: 'https://moonwalker-blockscout.eu-north-2.gateway.fm'\n};\n\nexport const getExplorerUrl = (chainId, type = 'tx', value) => {\n  const baseUrl = explorers[chainId] || explorers[1];\n\n  switch (type) {\n    case 'tx':\n      return `${baseUrl}/tx/${value}`;\n    case 'address':\n      return `${baseUrl}/address/${value}`;\n    case 'token':\n      return `${baseUrl}/token/${value}`;\n    case 'api':\n      return baseUrl;\n    default:\n      return `${baseUrl}/tx/${value}`;\n  }\n}; ","import { ethers } from 'ethers';\nimport { UNISWAP_ADDRESSES } from './uniswap';\n\n// Pair ABI for swap events\nconst PAIR_ABI = [\n  'event Swap(address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to)',\n  'function token0() external view returns (address)',\n  'function token1() external view returns (address)',\n  'function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast)'\n];\n\nconst VOLUME_CACHE_DURATION = 30 * 1000; // Reduced to 30 seconds for more frequent updates\n\nexport class VolumeTracker {\n  constructor() {\n    this.volumeCache = new Map();\n    this.lastCacheUpdate = 0;\n    this.lastKnownBlock = 0;\n    this.loadCacheFromStorage();\n    this.setupSwapListener();\n  }\n\n  async setupSwapListener() {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      this.lastKnownBlock = await provider.getBlockNumber();\n\n      // Listen for new blocks to detect potential new swaps\n      provider.on('block', (blockNumber) => {\n        if (blockNumber > this.lastKnownBlock) {\n          this.lastKnownBlock = blockNumber;\n          this.invalidateCache();\n        }\n      });\n    } catch (error) {\n      console.warn('Error setting up swap listener:', error);\n    }\n  }\n\n  invalidateCache() {\n    this.volumeCache.clear();\n    this.lastCacheUpdate = 0;\n    localStorage.removeItem('volumeCache');\n  }\n\n  loadCacheFromStorage() {\n    try {\n      const cached = localStorage.getItem('volumeCache');\n      if (cached) {\n        const { volumes, timestamp, lastBlock } = JSON.parse(cached);\n        // Only load cache if it's recent and from the same block range\n        if (Date.now() - timestamp < VOLUME_CACHE_DURATION && lastBlock === this.lastKnownBlock) {\n          this.volumeCache = new Map(Object.entries(volumes));\n          this.lastCacheUpdate = timestamp;\n        }\n      }\n    } catch (error) {\n      console.warn('Error loading volume cache:', error);\n    }\n  }\n\n  saveCacheToStorage() {\n    try {\n      const volumes = Object.fromEntries(this.volumeCache);\n      localStorage.setItem('volumeCache', JSON.stringify({\n        volumes,\n        timestamp: Date.now(),\n        lastBlock: this.lastKnownBlock\n      }));\n    } catch (error) {\n      console.warn('Error saving volume cache:', error);\n    }\n  }\n\n  isStablecoin(tokenAddress) {\n    const stablecoins = [\n      UNISWAP_ADDRESSES.USDC.toLowerCase(),\n      UNISWAP_ADDRESSES.USDT.toLowerCase()\n    ];\n    return stablecoins.includes(tokenAddress.toLowerCase());\n  }\n\n  getTokenPrice(reserves, token0Address, token1Address, token0Decimals, token1Decimals) {\n    // Convert reserves to decimal format\n    const reserve0 = Number(ethers.formatUnits(reserves[0], token0Decimals));\n    const reserve1 = Number(ethers.formatUnits(reserves[1], token1Decimals));\n\n    // If token0 is a stablecoin, price of token1 = reserve0/reserve1\n    if (this.isStablecoin(token0Address)) {\n      return reserve0 / reserve1;\n    }\n    // If token1 is a stablecoin, price of token0 = reserve1/reserve0\n    if (this.isStablecoin(token1Address)) {\n      return reserve1 / reserve0;\n    }\n    // If neither is a stablecoin, return 0 (we can't price it accurately)\n    return 0;\n  }\n\n  async getPoolVolumes(pairAddress, pairContract, token0Decimals, token1Decimals) {\n    try {\n      // Check cache first\n      const cacheKey = pairAddress.toLowerCase();\n      const cachedData = this.volumeCache.get(cacheKey);\n      const now = Date.now();\n\n      if (cachedData && (now - cachedData.timestamp < VOLUME_CACHE_DURATION)) {\n        console.log('Returning volume data from cache for:', pairAddress);\n        return cachedData;\n      }\n\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      \n      // Get current block\n      const currentBlock = await provider.getBlockNumber();\n      const currentBlockData = await provider.getBlock(currentBlock);\n\n      // Get token addresses\n      const [token0Address, token1Address] = await Promise.all([\n        pairContract.token0(),\n        pairContract.token1()\n      ]);\n\n      // Calculate block ranges for different periods\n      const blocksPerDay = 7200; // ~12 seconds per block\n      const oneDayBlocks = blocksPerDay;\n      const sevenDayBlocks = blocksPerDay * 7;\n      const thirtyDayBlocks = blocksPerDay * 30;\n\n      // Get swap events for each period in parallel\n      const swapFilter = pairContract.filters.Swap();\n      \n      const [oneDayEvents, sevenDayEvents, thirtyDayEvents, reserves] = await Promise.all([\n        pairContract.queryFilter(swapFilter, currentBlock - oneDayBlocks, currentBlock),\n        pairContract.queryFilter(swapFilter, currentBlock - sevenDayBlocks, currentBlock),\n        pairContract.queryFilter(swapFilter, currentBlock - thirtyDayBlocks, currentBlock),\n        pairContract.getReserves()\n      ]);\n\n      // Get token prices\n      const token0Price = this.getTokenPrice(\n        reserves,\n        token0Address,\n        token1Address,\n        token0Decimals,\n        token1Decimals\n      );\n\n      // Calculate volumes\n      const calculateVolume = (events) => {\n        let volume = 0;\n        for (const event of events) {\n          let eventVolume = 0;\n          \n          // Get amounts from the event\n          const amount0In = Number(ethers.formatUnits(event.args.amount0In, token0Decimals));\n          const amount0Out = Number(ethers.formatUnits(event.args.amount0Out, token0Decimals));\n          const amount1In = Number(ethers.formatUnits(event.args.amount1In, token1Decimals));\n          const amount1Out = Number(ethers.formatUnits(event.args.amount1Out, token1Decimals));\n\n          // If token0 is a stablecoin, use its amounts directly\n          if (this.isStablecoin(token0Address)) {\n            eventVolume = amount0In + amount0Out;\n          }\n          // If token1 is a stablecoin, use its amounts directly\n          else if (this.isStablecoin(token1Address)) {\n            eventVolume = amount1In + amount1Out;\n          }\n          // If we have a price for token0, use that\n          else if (token0Price > 0) {\n            const token0Amount = amount0In + amount0Out;\n            eventVolume = token0Amount * token0Price;\n          }\n          // If no stablecoin and no price, we can't calculate volume\n          else {\n            continue;\n          }\n\n          volume += eventVolume;\n        }\n        return volume;\n      };\n\n      const volumeData = {\n        oneDayVolume: calculateVolume(oneDayEvents),\n        sevenDayVolume: calculateVolume(sevenDayEvents),\n        thirtyDayVolume: calculateVolume(thirtyDayEvents),\n        oneDayTxCount: oneDayEvents.length,\n        sevenDayTxCount: sevenDayEvents.length,\n        thirtyDayTxCount: thirtyDayEvents.length,\n        timestamp: now\n      };\n\n      // Update cache\n      this.volumeCache.set(cacheKey, volumeData);\n      this.saveCacheToStorage();\n\n      console.log('Volume data for pool:', pairAddress, volumeData);\n      return volumeData;\n    } catch (error) {\n      console.error('Error calculating pool volumes:', error);\n      return {\n        oneDayVolume: 0,\n        sevenDayVolume: 0,\n        thirtyDayVolume: 0,\n        oneDayTxCount: 0,\n        sevenDayTxCount: 0,\n        thirtyDayTxCount: 0,\n        timestamp: Date.now()\n      };\n    }\n  }\n} ","import { ethers } from 'ethers';\nimport { createPublicClient, http, createWalletClient } from 'viem';\nimport { toast } from 'react-hot-toast';\nimport { VolumeTracker } from './VolumeTracker';\n\n// Uniswap V2 Contract Addresses (Sepolia)\nexport const UNISWAP_ADDRESSES = {\n  factory: '0xF62c03E08ada871A0bEb309762E260a7a6a880E6',\n  router: '0xeE567Fe1712Faf6149d80dA1E6934E354124CfE3',\n  // Common tokens on Sepolia\n  WETH: '0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14',\n  USDT: '0x148b1aB3e2321d79027C4b71B6118e70434B4784', // TestUSDT address\n  USDC: '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'  // USDC address\n};\n\n// Uniswap V2 ABIs\nconst FACTORY_ABI = [\n  'function createPair(address tokenA, address tokenB) external returns (address pair)',\n  'function getPair(address tokenA, address tokenB) external view returns (address pair)',\n  'function allPairs(uint) external view returns (address pair)',\n  'function allPairsLength() external view returns (uint)',\n  'function feeTo() external view returns (address)',\n  'function feeToSetter() external view returns (address)',\n  'event PairCreated(address indexed token0, address indexed token1, address pair, uint)'\n];\n\nconst ROUTER_ABI = [\n  // Swapping\n  'function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)',\n  'function swapTokensForExactTokens(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)',\n  // Add ETH specific swap methods\n  'function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts)',\n  'function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts)',\n  'function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)',\n  'function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)',\n  // Liquidity\n  'function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity)',\n  'function removeLiquidity(address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB)',\n  // Quote\n  'function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB)',\n  'function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut)',\n  'function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn)',\n  'function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts)',\n  'function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts)',\n];\n\nconst PAIR_ABI = [\n  'function token0() external view returns (address)',\n  'function token1() external view returns (address)',\n  'function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast)',\n  'function price0CumulativeLast() external view returns (uint)',\n  'function price1CumulativeLast() external view returns (uint)',\n  'event Swap(address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to)',\n];\n\nconst ERC20_ABI = [\n  'function approve(address spender, uint value) external returns (bool)',\n  'function balanceOf(address owner) external view returns (uint)',\n  'function decimals() external view returns (uint8)',\n  'function symbol() external view returns (string)',\n  'function name() external view returns (string)',\n  'function totalSupply() external view returns (uint256)',\n  'function transfer(address to, uint value) external returns (bool)',\n  'function transferFrom(address from, address to, uint value) external returns (bool)',\n  'function allowance(address owner, address spender) external view returns (uint)'\n];\n\nexport class UniswapService {\n  constructor(publicClient, walletClient) {\n    this.publicClient = publicClient;\n    this.walletClient = walletClient;\n    \n    // Create contract instances\n    this.factory = {\n      address: UNISWAP_ADDRESSES.factory,\n      abi: FACTORY_ABI\n    };\n    \n    this.router = {\n      address: UNISWAP_ADDRESSES.router,\n      abi: ROUTER_ABI\n    };\n\n    // Initialize cache with longer duration\n    this.poolCache = new Map();\n    this.poolInfoCache = new Map();\n    this.lastCacheUpdate = 0;\n    this.CACHE_DURATION = 15 * 60 * 1000; // 15 minutes in milliseconds\n    this.volumeTracker = new VolumeTracker();\n    \n    // Load cache from localStorage on initialization\n    this.loadCacheFromStorage();\n  }\n\n  // Cache management methods\n  loadCacheFromStorage() {\n    try {\n      const storedCache = localStorage.getItem('uniswapPoolCache');\n      if (storedCache) {\n        const { pools, poolInfo, timestamp } = JSON.parse(storedCache);\n        // Only load cache if it's not too old (less than 1 hour)\n        if (Date.now() - timestamp < 60 * 60 * 1000) {\n          this.poolCache = new Map(pools);\n          this.poolInfoCache = new Map(poolInfo);\n          this.lastCacheUpdate = timestamp;\n        }\n      }\n    } catch (error) {\n      console.warn('Error loading cache from storage:', error);\n    }\n  }\n\n  saveCacheToStorage() {\n    try {\n      const cacheData = {\n        pools: Array.from(this.poolCache.entries()),\n        poolInfo: Array.from(this.poolInfoCache.entries()),\n        timestamp: Date.now()\n      };\n      localStorage.setItem('uniswapPoolCache', JSON.stringify(cacheData));\n    } catch (error) {\n      console.warn('Error saving cache to storage:', error);\n    }\n  }\n\n  clearCache() {\n    this.poolCache.clear();\n    this.poolInfoCache.clear();\n    this.lastCacheUpdate = 0;\n    localStorage.removeItem('uniswapPoolCache');\n  }\n\n  isCacheValid() {\n    return Date.now() - this.lastCacheUpdate < this.CACHE_DURATION;\n  }\n\n  // Get all pools for a token\n  async getPools(tokenAddress) {\n    if (!tokenAddress) {\n      console.error('tokenAddress is required for getPools');\n      throw new Error('tokenAddress is required');\n    }\n\n    try {\n      console.log('Getting pools for token:', tokenAddress);\n      const factory = new ethers.Contract(\n        UNISWAP_ADDRESSES.factory,\n        FACTORY_ABI,\n        new ethers.BrowserProvider(window.ethereum)\n      );\n\n      const pairCount = await factory.allPairsLength();\n      console.log('Total pairs:', pairCount.toString());\n      const pairs = [];\n\n      for (let i = 0; i < pairCount; i++) {\n        try {\n          const pairAddress = await factory.allPairs(i);\n          console.log(`Checking pair ${i}:`, pairAddress);\n          \n          const pair = new ethers.Contract(\n            pairAddress,\n            PAIR_ABI,\n            new ethers.BrowserProvider(window.ethereum)\n          );\n\n          const [token0, token1, reserves] = await Promise.all([\n            pair.token0(),\n            pair.token1(),\n            pair.getReserves()\n          ]);\n\n          console.log(`Pair ${i} tokens:`, token0, token1);\n          \n          if (token0.toLowerCase() === tokenAddress.toLowerCase() || \n              token1.toLowerCase() === tokenAddress.toLowerCase()) {\n            pairs.push({\n              address: pairAddress,\n              token0,\n              token1,\n              reserves\n            });\n            console.log('Found matching pair:', pairAddress);\n          }\n        } catch (pairError) {\n          console.error(`Error processing pair ${i}:`, pairError);\n          // Continue to next pair\n          continue;\n        }\n      }\n\n      console.log('Found pairs:', pairs.length);\n      return pairs;\n    } catch (error) {\n      console.error('Error getting pools:', error);\n      throw error;\n    }\n  }\n\n  // Add new method to check if pool exists\n  async checkPoolExists(tokenA, tokenB) {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const factory = new ethers.Contract(\n        UNISWAP_ADDRESSES.factory,\n        FACTORY_ABI,\n        provider\n      );\n\n      const pairAddress = await factory.getPair(tokenA, tokenB);\n      return pairAddress !== '0x0000000000000000000000000000000000000000';\n    } catch (error) {\n      console.error('Error checking pool existence:', error);\n      throw error;\n    }\n  }\n\n  // Pool creation only\n  async createPool(\n    token0Address,\n    token1Address,\n    amount0Desired,\n    amount1Desired\n  ) {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const account = await signer.getAddress();\n\n      // Check if one of the tokens is ETH\n      const isToken0ETH = token0Address.toLowerCase() === 'eth';\n      const isToken1ETH = token1Address.toLowerCase() === 'eth';\n      \n      // Convert ETH address to WETH for pair creation\n      const actualToken0 = isToken0ETH ? UNISWAP_ADDRESSES.WETH : token0Address;\n      const actualToken1 = isToken1ETH ? UNISWAP_ADDRESSES.WETH : token1Address;\n\n      // Sort token addresses (required by Uniswap)\n      const [token0, token1] = actualToken0.toLowerCase() < actualToken1.toLowerCase()\n        ? [actualToken0, actualToken1]\n        : [actualToken1, actualToken0];\n\n      // Sort amounts according to token order\n      const [amount0, amount1] = actualToken0.toLowerCase() < actualToken1.toLowerCase()\n        ? [amount0Desired, amount1Desired]\n        : [amount1Desired, amount0Desired];\n\n      // Create contract instances\n      const factory = new ethers.Contract(UNISWAP_ADDRESSES.factory, FACTORY_ABI, signer);\n      const router = new ethers.Contract(UNISWAP_ADDRESSES.router, ROUTER_ABI, signer);\n\n      // Create token contract instances (only for non-ETH tokens)\n      const token0Contract = !isToken0ETH ? new ethers.Contract(token0, ERC20_ABI, signer) : null;\n      const token1Contract = !isToken1ETH ? new ethers.Contract(token1, ERC20_ABI, signer) : null;\n\n      // Check if pair exists\n      console.log('Checking if pair exists...');\n      const existingPair = await factory.getPair(token0, token1);\n      console.log('Existing pair address:', existingPair);\n\n      if (existingPair !== '0x0000000000000000000000000000000000000000') {\n        throw new Error('Pool already exists');\n      }\n\n      // Get optimized gas price (5% above base fee)\n      const feeData = await provider.getFeeData();\n      const gasPrice = feeData.gasPrice * 105n / 100n;\n\n      // Handle approvals for non-ETH tokens\n      const maxApproval = ethers.MaxUint256;\n      const approvalPromises = [];\n\n      // Check and handle approvals for both tokens simultaneously\n      if (!isToken0ETH && !isToken1ETH) {\n        const [allowance0, allowance1] = await Promise.all([\n          token0Contract.allowance(account, UNISWAP_ADDRESSES.router),\n          token1Contract.allowance(account, UNISWAP_ADDRESSES.router)\n        ]);\n\n        // Estimate gas for approvals\n        const [gas0, gas1] = await Promise.all([\n          token0Contract.approve.estimateGas(UNISWAP_ADDRESSES.router, maxApproval),\n          token1Contract.approve.estimateGas(UNISWAP_ADDRESSES.router, maxApproval)\n        ]).catch(e => [100000n, 100000n]); // Fallback gas limits if estimation fails\n\n        if (allowance0 < amount0) {\n          console.log('Approving token0...');\n          toast.loading('Approving first token...', { id: 'approve0' });\n          approvalPromises.push(\n            token0Contract.approve(UNISWAP_ADDRESSES.router, maxApproval, {\n              gasLimit: gas0 * 120n / 100n, // Add 20% buffer to estimated gas\n              gasPrice\n            }).then(tx => tx.wait()).then(() => {\n              toast.success('First token approved', { id: 'approve0' });\n            }).catch(error => {\n              toast.error('Failed to approve first token: ' + error.message, { id: 'approve0' });\n              throw error;\n            })\n          );\n        }\n\n        if (allowance1 < amount1) {\n          console.log('Approving token1...');\n          toast.loading('Approving second token...', { id: 'approve1' });\n          approvalPromises.push(\n            token1Contract.approve(UNISWAP_ADDRESSES.router, maxApproval, {\n              gasLimit: gas1 * 120n / 100n, // Add 20% buffer to estimated gas\n              gasPrice\n            }).then(tx => tx.wait()).then(() => {\n              toast.success('Second token approved', { id: 'approve1' });\n            }).catch(error => {\n              toast.error('Failed to approve second token: ' + error.message, { id: 'approve1' });\n              throw error;\n            })\n          );\n        }\n      } else if (!isToken0ETH) {\n        // Only token0 needs approval\n        const allowance0 = await token0Contract.allowance(account, UNISWAP_ADDRESSES.router);\n        const gas0 = await token0Contract.approve.estimateGas(UNISWAP_ADDRESSES.router, maxApproval)\n          .catch(() => 100000n);\n\n        if (allowance0 < amount0) {\n          console.log('Approving token0...');\n          toast.loading('Approving token...', { id: 'approve0' });\n          approvalPromises.push(\n            token0Contract.approve(UNISWAP_ADDRESSES.router, maxApproval, {\n              gasLimit: gas0 * 120n / 100n,\n              gasPrice\n            }).then(tx => tx.wait()).then(() => {\n              toast.success('Token approved', { id: 'approve0' });\n            }).catch(error => {\n              toast.error('Failed to approve token: ' + error.message, { id: 'approve0' });\n              throw error;\n            })\n          );\n        }\n      } else if (!isToken1ETH) {\n        // Only token1 needs approval\n        const allowance1 = await token1Contract.allowance(account, UNISWAP_ADDRESSES.router);\n        const gas1 = await token1Contract.approve.estimateGas(UNISWAP_ADDRESSES.router, maxApproval)\n          .catch(() => 100000n);\n\n        if (allowance1 < amount1) {\n          console.log('Approving token1...');\n          toast.loading('Approving token...', { id: 'approve1' });\n          approvalPromises.push(\n            token1Contract.approve(UNISWAP_ADDRESSES.router, maxApproval, {\n              gasLimit: gas1 * 120n / 100n,\n              gasPrice\n            }).then(tx => tx.wait()).then(() => {\n              toast.success('Token approved', { id: 'approve1' });\n            }).catch(error => {\n              toast.error('Failed to approve token: ' + error.message, { id: 'approve1' });\n              throw error;\n            })\n          );\n        }\n      }\n\n      // Wait for all approvals to complete\n      if (approvalPromises.length > 0) {\n        await Promise.all(approvalPromises);\n        console.log('All tokens approved');\n        \n        // Double check allowances after approvals\n        const finalAllowances = await Promise.all([\n          !isToken0ETH ? token0Contract.allowance(account, UNISWAP_ADDRESSES.router) : maxApproval,\n          !isToken1ETH ? token1Contract.allowance(account, UNISWAP_ADDRESSES.router) : maxApproval\n        ]);\n\n        if (finalAllowances[0] < amount0 || finalAllowances[1] < amount1) {\n          throw new Error('Approval process failed. Please try again.');\n        }\n      }\n\n      // Create pair\n      console.log('Creating pair...');\n      toast.loading('Creating liquidity pool...', { id: 'create-pool' });\n      \n      // Estimate gas for pair creation\n      const createPairGas = await factory.createPair.estimateGas(token0, token1)\n        .catch(() => 3000000n);\n\n      const createPairTx = await factory.createPair(token0, token1, {\n        gasLimit: createPairGas * 120n / 100n,\n        gasPrice\n      });\n      \n      console.log('Create pair transaction sent:', createPairTx.hash);\n      const createPairReceipt = await createPairTx.wait();\n      console.log('Create pair transaction confirmed');\n      toast.success('Pool created successfully!', { id: 'create-pool' });\n\n      // Get pair address from event\n      const pairCreatedEvent = createPairReceipt.logs.find(log => {\n        try {\n          const parsedLog = factory.interface.parseLog({\n            topics: log.topics,\n            data: log.data\n          });\n          return parsedLog.name === 'PairCreated';\n        } catch (e) {\n          return false;\n        }\n      });\n\n      if (!pairCreatedEvent) {\n        throw new Error('Failed to get pair address from transaction receipt');\n      }\n\n      const parsedLog = factory.interface.parseLog({\n        topics: pairCreatedEvent.topics,\n        data: pairCreatedEvent.data\n      });\n      const pairAddress = parsedLog.args[2];\n      console.log('Created pair address:', pairAddress);\n\n      // Wait for pair to be fully deployed\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // Calculate minimum amounts with 1% slippage tolerance\n      const amount0Min = (amount0 * 99n) / 100n;\n      const amount1Min = (amount1 * 99n) / 100n;\n\n      const deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20); // 20 minutes\n\n      // Add liquidity based on whether ETH is involved\n      let addLiquidityTx;\n      toast.loading('Adding initial liquidity...', { id: 'add-liquidity' });\n      if (isToken0ETH || isToken1ETH) {\n        // One of the tokens is ETH\n        const tokenAddress = isToken0ETH ? token1 : token0;\n        const ethAmount = isToken0ETH ? amount0 : amount1;\n        const tokenAmount = isToken0ETH ? amount1 : amount0;\n        const ethAmountMin = isToken0ETH ? amount0Min : amount1Min;\n        const tokenAmountMin = isToken0ETH ? amount1Min : amount0Min;\n\n        console.log('Adding ETH liquidity with params:', {\n          token: tokenAddress,\n          ethAmount: ethAmount.toString(),\n          tokenAmount: tokenAmount.toString(),\n          ethAmountMin: ethAmountMin.toString(),\n          tokenAmountMin: tokenAmountMin.toString()\n        });\n\n        addLiquidityTx = await router.addLiquidityETH(\n          tokenAddress,\n          tokenAmount,\n          tokenAmountMin,\n          ethAmountMin,\n          account,\n          deadline,\n          {\n            value: ethAmount,\n            gasLimit: 500000,\n            gasPrice\n          }\n        );\n      } else {\n        // Both are ERC20 tokens\n        addLiquidityTx = await router.addLiquidity(\n          token0,\n          token1,\n          amount0,\n          amount1,\n          amount0Min,\n          amount1Min,\n          account,\n          deadline,\n          {\n            gasLimit: 500000,\n            gasPrice\n          }\n        );\n      }\n\n      console.log('Add liquidity transaction sent:', addLiquidityTx.hash);\n      const addLiquidityReceipt = await addLiquidityTx.wait();\n      console.log('Add liquidity transaction confirmed');\n      toast.success('Initial liquidity added successfully!', { id: 'add-liquidity' });\n\n      return {\n        pairAddress,\n        createPairReceipt,\n        addLiquidityReceipt\n      };\n    } catch (error) {\n      console.error('Error in pool creation:', error);\n      if (error.message.includes('INSUFFICIENT_A_AMOUNT')) {\n        toast.error('Insufficient amount for token A. Try increasing the amount.');\n        throw new Error('Insufficient amount for token A. Try increasing the amount.');\n      } else if (error.message.includes('INSUFFICIENT_B_AMOUNT')) {\n        toast.error('Insufficient amount for token B. Try increasing the amount.');\n        throw new Error('Insufficient amount for token B. Try increasing the amount.');\n      } else if (error.message.includes('TRANSFER_FROM_FAILED')) {\n        toast.error('Transfer failed. Please check your token balances and approvals.');\n        throw new Error('Transfer failed. Please check your token balances and approvals.');\n      }\n      toast.error(error.message);\n      throw error;\n    }\n  }\n\n  // Token Swapping\n  async swapExactTokensForTokens(\n    amountIn,\n    amountOutMin,\n    path,\n    to,\n    deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20) // 20 minutes from now\n  ) {\n    try {\n      // Request account access first\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      \n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner().catch(error => {\n        console.error('Error getting signer:', error);\n        if (error.message.includes('Ledger')) {\n          throw new Error('Please make sure your Ledger is connected and the Ethereum app is open');\n        }\n        throw error;\n      });\n\n      // Create contract instances\n      const router = new ethers.Contract(\n        UNISWAP_ADDRESSES.router,\n        ROUTER_ABI,\n        signer\n      );\n\n      const tokenContract = new ethers.Contract(\n        path[0],\n        ERC20_ABI,\n        signer\n      );\n\n      // Check user's token balance\n      const balance = await tokenContract.balanceOf(to);\n      if (balance < amountIn) {\n        throw new Error(`Insufficient token balance. Required: ${ethers.formatUnits(amountIn, await tokenContract.decimals())}, Available: ${ethers.formatUnits(balance, await tokenContract.decimals())}`);\n      }\n\n      // Check current allowance\n      const currentAllowance = await tokenContract.allowance(to, UNISWAP_ADDRESSES.router);\n      console.log('Current allowance:', currentAllowance.toString());\n      console.log('Required amount:', amountIn.toString());\n\n      // Only approve if current allowance is insufficient\n      if (currentAllowance < amountIn) {\n        console.log('Approving token for swap...');\n        try {\n          // First set allowance to 0 to handle non-standard tokens\n          if (currentAllowance > 0) {\n            const resetTx = await tokenContract.approve(UNISWAP_ADDRESSES.router, 0);\n            await resetTx.wait();\n          }\n          \n          const approveTx = await tokenContract.approve(UNISWAP_ADDRESSES.router, amountIn);\n          await approveTx.wait();\n          console.log('Token approved');\n        } catch (approveError) {\n          console.error('Error approving token:', approveError);\n          if (approveError.message.includes('Ledger')) {\n            throw new Error('Please make sure your Ledger is connected and the Ethereum app is open');\n          }\n          throw approveError;\n        }\n      } else {\n        console.log('Sufficient allowance exists, skipping approval');\n      }\n\n      // Verify allowance after approval\n      const finalAllowance = await tokenContract.allowance(to, UNISWAP_ADDRESSES.router);\n      if (finalAllowance < amountIn) {\n        throw new Error('Failed to approve token transfer');\n      }\n\n      console.log('Executing swap with params:', {\n        amountIn: amountIn.toString(),\n        amountOutMin: amountOutMin.toString(),\n        path,\n        to,\n        deadline: deadline.toString()\n      });\n\n      // Execute swap\n      try {\n        const tx = await router.swapExactTokensForTokens(\n          amountIn,\n          amountOutMin,\n          path,\n          to,\n          deadline,\n          { gasLimit: 3000000 }\n        );\n\n        console.log('Swap transaction:', tx.hash);\n        const receipt = await tx.wait();\n        console.log('Swap receipt:', receipt);\n        \n        return receipt;\n      } catch (swapError) {\n        console.error('Error executing swap:', swapError);\n        if (swapError.message.includes('Ledger')) {\n          throw new Error('Please make sure your Ledger is connected and the Ethereum app is open');\n        }\n        throw swapError;\n      }\n    } catch (error) {\n      console.error('Error swapping tokens:', error);\n      throw error;\n    }\n  }\n\n  // Add Liquidity\n  async addLiquidity(\n    tokenA,\n    tokenB,\n    amountADesired,\n    amountBDesired,\n    amountAMin,\n    amountBMin,\n    to,\n    deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20)\n  ) {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      // Get optimized gas price\n      const feeData = await provider.getFeeData();\n      const gasPrice = feeData.gasPrice * 110n / 100n;\n\n      const router = new ethers.Contract(\n        UNISWAP_ADDRESSES.router,\n        ROUTER_ABI,\n        signer\n      );\n\n      const tokenAContract = new ethers.Contract(tokenA, ERC20_ABI, signer);\n      const tokenBContract = new ethers.Contract(tokenB, ERC20_ABI, signer);\n\n      // Get token decimals\n      const [decimalsA, decimalsB] = await Promise.all([\n        tokenAContract.decimals(),\n        tokenBContract.decimals()\n      ]);\n\n      console.log('Token details:', {\n        tokenA: {\n          address: tokenA,\n          decimals: decimalsA,\n          amountDesired: ethers.formatUnits(amountADesired, decimalsA)\n        },\n        tokenB: {\n          address: tokenB,\n          decimals: decimalsB,\n          amountDesired: ethers.formatUnits(amountBDesired, decimalsB)\n        }\n      });\n\n      // Check pool info and calculate optimal amounts\n      console.log('Checking pool info...');\n      const poolInfo = await this.getPoolInfo(tokenA, tokenB);\n      \n      let finalAmountA = amountADesired;\n      let finalAmountB = amountBDesired;\n\n      if (poolInfo) {\n        // Pool exists, calculate optimal amounts based on current ratio\n        const reserve0 = poolInfo.reserve0;\n        const reserve1 = poolInfo.reserve1;\n        \n        if (reserve0 > 0 && reserve1 > 0) {\n          console.log('Current pool reserves:', {\n            reserve0: ethers.formatUnits(reserve0, poolInfo.token0.decimals),\n            reserve1: ethers.formatUnits(reserve1, poolInfo.token1.decimals),\n            ratio: Number(reserve1) / Number(reserve0)\n          });\n\n          if (tokenA.toLowerCase() === poolInfo.token0.address.toLowerCase()) {\n            const optimalB = (amountADesired * reserve1) / reserve0;\n            console.log('Calculated optimal amounts (A is token0):', {\n              optimalB: ethers.formatUnits(optimalB, decimalsB),\n              providedB: ethers.formatUnits(amountBDesired, decimalsB)\n            });\n\n            if (optimalB > amountBDesired) {\n              finalAmountB = amountBDesired;\n              finalAmountA = (amountBDesired * reserve0) / reserve1;\n              console.log('Adjusting token A amount to match ratio');\n            } else {\n              finalAmountB = optimalB;\n              console.log('Using calculated optimal amount for token B');\n            }\n          } else {\n            const optimalB = (amountADesired * reserve0) / reserve1;\n            console.log('Calculated optimal amounts (A is token1):', {\n              optimalB: ethers.formatUnits(optimalB, decimalsB),\n              providedB: ethers.formatUnits(amountBDesired, decimalsB)\n            });\n\n            if (optimalB > amountBDesired) {\n              finalAmountB = amountBDesired;\n              finalAmountA = (amountBDesired * reserve1) / reserve0;\n              console.log('Adjusting token A amount to match ratio');\n            } else {\n              finalAmountB = optimalB;\n              console.log('Using calculated optimal amount for token B');\n            }\n          }\n        }\n      }\n\n      // Check balances\n      const [balanceA, balanceB] = await Promise.all([\n        tokenAContract.balanceOf(to),\n        tokenBContract.balanceOf(to)\n      ]);\n\n      console.log('Token balances:', {\n        tokenA: ethers.formatUnits(balanceA, decimalsA),\n        tokenB: ethers.formatUnits(balanceB, decimalsB)\n      });\n\n      if (balanceA < finalAmountA) {\n        throw new Error(`Insufficient balance for token A. Required: ${ethers.formatUnits(finalAmountA, decimalsA)}, Available: ${ethers.formatUnits(balanceA, decimalsA)}`);\n      }\n\n      if (balanceB < finalAmountB) {\n        throw new Error(`Insufficient balance for token B. Required: ${ethers.formatUnits(finalAmountB, decimalsB)}, Available: ${ethers.formatUnits(balanceB, decimalsB)}`);\n      }\n\n      // Calculate minimum amounts with 1% slippage tolerance\n      const slippageTolerance = 99n; // 99% of the desired amount (1% slippage)\n      const finalAmountAMin = (finalAmountA * slippageTolerance) / 100n;\n      const finalAmountBMin = (finalAmountB * slippageTolerance) / 100n;\n\n      console.log('Final amounts:', {\n        tokenA: {\n          desired: ethers.formatUnits(finalAmountA, decimalsA),\n          minimum: ethers.formatUnits(finalAmountAMin, decimalsA)\n        },\n        tokenB: {\n          desired: ethers.formatUnits(finalAmountB, decimalsB),\n          minimum: ethers.formatUnits(finalAmountBMin, decimalsB)\n        }\n      });\n\n      // Check and handle approvals\n      console.log('Checking allowances...');\n      const [allowanceA, allowanceB] = await Promise.all([\n        tokenAContract.allowance(to, UNISWAP_ADDRESSES.router),\n        tokenBContract.allowance(to, UNISWAP_ADDRESSES.router)\n      ]);\n\n      console.log('Current allowances:', {\n        tokenA: ethers.formatUnits(allowanceA, decimalsA),\n        tokenB: ethers.formatUnits(allowanceB, decimalsB)\n      });\n\n      const maxApproval = ethers.MaxUint256;\n      const approvalPromises = [];\n\n      // Only approve if current allowance is insufficient\n      if (allowanceA < finalAmountA) {\n        console.log('Approving token A...');\n        toast.loading('Approving first token...', { id: 'approve-a' });\n        approvalPromises.push(\n          tokenAContract.approve(UNISWAP_ADDRESSES.router, maxApproval, {\n            gasLimit: 60000,\n            gasPrice\n          })\n            .then(tx => tx.wait())\n            .then(() => {\n              toast.success('First token approved', { id: 'approve-a' });\n            })\n            .catch(error => {\n              toast.error('Failed to approve first token', { id: 'approve-a' });\n              throw error;\n            })\n        );\n      }\n\n      if (allowanceB < finalAmountB) {\n        console.log('Approving token B...');\n        toast.loading('Approving second token...', { id: 'approve-b' });\n        approvalPromises.push(\n          tokenBContract.approve(UNISWAP_ADDRESSES.router, maxApproval, {\n            gasLimit: 60000,\n            gasPrice\n          })\n            .then(tx => tx.wait())\n            .then(() => {\n              toast.success('Second token approved', { id: 'approve-b' });\n            })\n            .catch(error => {\n              toast.error('Failed to approve second token', { id: 'approve-b' });\n              throw error;\n            })\n        );\n      }\n\n      // Wait for all approvals to complete\n      if (approvalPromises.length > 0) {\n        await Promise.all(approvalPromises);\n        console.log('All approvals completed');\n\n        // Double check allowances\n        const [finalAllowanceA, finalAllowanceB] = await Promise.all([\n          tokenAContract.allowance(to, UNISWAP_ADDRESSES.router),\n          tokenBContract.allowance(to, UNISWAP_ADDRESSES.router)\n        ]);\n\n        console.log('Final allowances:', {\n          tokenA: ethers.formatUnits(finalAllowanceA, decimalsA),\n          tokenB: ethers.formatUnits(finalAllowanceB, decimalsB)\n        });\n\n        if (finalAllowanceA < finalAmountA || finalAllowanceB < finalAmountB) {\n          throw new Error('Approval process failed. Please try again.');\n        }\n      }\n\n      console.log('Adding liquidity with parameters:', {\n        tokenA,\n        tokenB,\n        amountADesired: ethers.formatUnits(finalAmountA, decimalsA),\n        amountBDesired: ethers.formatUnits(finalAmountB, decimalsB),\n        amountAMin: ethers.formatUnits(finalAmountAMin, decimalsA),\n        amountBMin: ethers.formatUnits(finalAmountBMin, decimalsB)\n      });\n\n      // Add liquidity with optimized gas\n      const tx = await router.addLiquidity(\n        tokenA,\n        tokenB,\n        finalAmountA,\n        finalAmountB,\n        finalAmountAMin,\n        finalAmountBMin,\n        to,\n        deadline,\n        {\n          gasLimit: 500000, // Increased gas limit for better chances of success\n          gasPrice\n        }\n      );\n\n      console.log('Add liquidity transaction:', tx.hash);\n      const receipt = await tx.wait();\n      console.log('Add liquidity receipt:', receipt);\n      \n      return receipt;\n    } catch (error) {\n      console.error('Error adding liquidity:', error);\n      \n      // Enhanced error handling\n      if (error.message.includes('INSUFFICIENT_A_AMOUNT')) {\n        const errorMessage = 'The amount of first token is too low for the current pool ratio. Try increasing the amount or adjusting the ratio.';\n        toast.error(errorMessage);\n        throw new Error(errorMessage);\n      } else if (error.message.includes('INSUFFICIENT_B_AMOUNT')) {\n        const errorMessage = 'The amount of second token is too low for the current pool ratio. Try increasing the amount or adjusting the ratio.';\n        toast.error(errorMessage);\n        throw new Error(errorMessage);\n      } else if (error.message.includes('TRANSFER_FROM_FAILED')) {\n        const errorMessage = 'Transfer failed. Please check your token balances and approvals.';\n        toast.error(errorMessage);\n        throw new Error(errorMessage);\n      }\n      \n      toast.error(error.message);\n      throw error;\n    }\n  }\n\n  // Get Pool Information\n  async getPoolInfo(tokenA, tokenB) {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const factory = new ethers.Contract(\n        UNISWAP_ADDRESSES.factory,\n        FACTORY_ABI,\n        provider\n      );\n\n      const pairAddress = await factory.getPair(tokenA, tokenB);\n      if (pairAddress === '0x0000000000000000000000000000000000000000') {\n        return null;\n      }\n\n      const pair = new ethers.Contract(\n        pairAddress,\n        PAIR_ABI,\n        provider\n      );\n\n      // Get pool information\n      const [token0, token1, reserves] = await Promise.all([\n        pair.token0(),\n        pair.token1(),\n        pair.getReserves()\n      ]);\n\n      // Get token information\n      const token0Contract = new ethers.Contract(token0, ERC20_ABI, provider);\n      const token1Contract = new ethers.Contract(token1, ERC20_ABI, provider);\n\n      const [\n        token0Symbol,\n        token0Decimals,\n        token1Symbol,\n        token1Decimals\n      ] = await Promise.all([\n        token0Contract.symbol(),\n        token0Contract.decimals(),\n        token1Contract.symbol(),\n        token1Contract.decimals()\n      ]);\n\n      return {\n        pairAddress,\n        token0: {\n          address: token0,\n          symbol: token0Symbol,\n          decimals: token0Decimals\n        },\n        token1: {\n          address: token1,\n          symbol: token1Symbol,\n          decimals: token1Decimals\n        },\n        reserve0: reserves[0],\n        reserve1: reserves[1]\n      };\n    } catch (error) {\n      console.error('Error getting pool info:', error);\n      throw error;\n    }\n  }\n\n  // Quote\n  async getAmountOut(amountIn, path) {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const router = new ethers.Contract(\n        UNISWAP_ADDRESSES.router,\n        ROUTER_ABI,\n        provider\n      );\n      \n      // If first token is ETH, replace with WETH in path for quote\n      const quotePath = [...path];\n      if (quotePath[0].toLowerCase() === 'ETH') {\n        quotePath[0] = UNISWAP_ADDRESSES.WETH;\n      }\n      \n      const amounts = await router.getAmountsOut(amountIn, quotePath);\n      return amounts[amounts.length - 1];\n    } catch (error) {\n      console.error('Error getting amount out:', error);\n      throw error;\n    }\n  }\n\n  // Get Token Info\n  async getTokenInfo(tokenAddress) {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const tokenContract = new ethers.Contract(tokenAddress, ERC20_ABI, provider);\n\n      // Try to get all token information with fallbacks\n      const [symbol, name, decimals] = await Promise.all([\n        tokenContract.symbol().catch(() => 'Unknown'),\n        tokenContract.name().catch(() => 'Unknown Token'),\n        tokenContract.decimals().catch(() => 18)\n      ]);\n\n      // Special handling for known tokens\n      if (tokenAddress.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase()) {\n        return {\n          symbol: 'WETH',\n          name: 'Wrapped Ether',\n          decimals: 18,\n          logo: '/eth.png'\n        };\n      }\n\n      if (tokenAddress.toLowerCase() === UNISWAP_ADDRESSES.USDT.toLowerCase()) {\n        return {\n          symbol: 'tUSDT',\n          name: 'Test USDT',\n          decimals: 6,\n          logo: '/usdt.png'\n        };\n      }\n\n      if (tokenAddress.toLowerCase() === UNISWAP_ADDRESSES.USDC.toLowerCase()) {\n        return {\n          symbol: 'USDC',\n          name: 'USD Coin',\n          decimals: 6,\n          logo: '/usdc.png'\n        };\n      }\n\n      return { \n        symbol: symbol || 'Unknown', \n        name: name || 'Unknown Token', \n        decimals: decimals || 18 \n      };\n    } catch (error) {\n      console.error('Error getting token info:', error);\n      // Return fallback values if there's an error\n      return {\n        symbol: 'Unknown',\n        name: 'Unknown Token',\n        decimals: 18\n      };\n    }\n  }\n\n  // Get Pool Information by Pair Address\n  async getPoolInfoByAddress(pairAddress) {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const pairContract = new ethers.Contract(pairAddress, PAIR_ABI, provider);\n\n      // Get token addresses\n      const [token0Address, token1Address] = await Promise.all([\n        pairContract.token0(),\n        pairContract.token1()\n      ]);\n\n      // Get token contracts\n      const token0Contract = new ethers.Contract(token0Address, ERC20_ABI, provider);\n      const token1Contract = new ethers.Contract(token1Address, ERC20_ABI, provider);\n\n      // Get token info\n      const [token0Symbol, token1Symbol, token0Decimals, token1Decimals, reserves] = await Promise.all([\n        token0Contract.symbol(),\n        token1Contract.symbol(),\n        token0Contract.decimals(),\n        token1Contract.decimals(),\n        pairContract.getReserves()\n      ]);\n\n      // Get volume data\n      const volumeData = await this.volumeTracker.getPoolVolumes(\n        pairAddress,\n        pairContract,\n        token0Decimals,\n        token1Decimals\n      );\n\n      console.log('Pool info volumes:', volumeData);\n\n      return {\n        pairAddress,\n        token0: {\n          address: token0Address,\n          symbol: token0Symbol,\n          decimals: token0Decimals\n        },\n        token1: {\n          address: token1Address,\n          symbol: token1Symbol,\n          decimals: token1Decimals\n        },\n        reserves: {\n          reserve0: reserves[0],\n          reserve1: reserves[1],\n          blockTimestampLast: reserves[2]\n        },\n        volumes: volumeData\n      };\n    } catch (error) {\n      console.error('Error getting pool info:', error);\n      throw error;\n    }\n  }\n\n  // Update swapExactETHForTokens function\n  async swapExactETHForTokens(\n    amountIn,\n    amountOutMin,\n    path,\n    to,\n    deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20) // 20 minutes from now\n  ) {\n    try {\n      // Request account access first\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      \n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner().catch(error => {\n        console.error('Error getting signer:', error);\n        if (error.message.includes('Ledger')) {\n          throw new Error('Please make sure your Ledger is connected and the Ethereum app is open');\n        }\n        throw error;\n      });\n\n      // Verify path starts with WETH\n      if (path[0].toLowerCase() !== UNISWAP_ADDRESSES.WETH.toLowerCase()) {\n        throw new Error('Path must start with WETH for ETH swaps');\n      }\n\n      // Create router contract instance\n      const router = new ethers.Contract(\n        UNISWAP_ADDRESSES.router,\n        ROUTER_ABI,\n        signer\n      );\n\n      console.log('Executing ETH swap with params:', {\n        amountIn: amountIn.toString(),\n        amountOutMin: amountOutMin.toString(),\n        path,\n        to,\n        deadline: deadline.toString()\n      });\n\n      // Execute swap with ETH\n      const tx = await router.swapExactETHForTokens(\n        amountOutMin,\n        path,\n        to,\n        deadline,\n        {\n          value: amountIn,\n          gasLimit: 3000000\n        }\n      );\n\n      console.log('Swap transaction:', tx.hash);\n      const receipt = await tx.wait();\n      console.log('Swap receipt:', receipt);\n      \n      return receipt;\n    } catch (error) {\n      console.error('Error swapping ETH for tokens:', error);\n      throw error;\n    }\n  }\n\n  // Update swapExactTokensForTokens with optimized gas\n  async swapExactTokensForTokens(\n    amountIn,\n    amountOutMin,\n    path,\n    to,\n    deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20)\n  ) {\n    try {\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      \n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      const router = new ethers.Contract(\n        UNISWAP_ADDRESSES.router,\n        ROUTER_ABI,\n        signer\n      );\n\n      const tokenContract = new ethers.Contract(\n        path[0],\n        ERC20_ABI,\n        signer\n      );\n\n      // Get gas price with 10% boost\n      const feeData = await provider.getFeeData();\n      const gasPrice = feeData.gasPrice * 110n / 100n;\n\n      // Check and handle approvals\n      const currentAllowance = await tokenContract.allowance(to, UNISWAP_ADDRESSES.router);\n      if (currentAllowance < amountIn) {\n        const approveTx = await tokenContract.approve(\n          UNISWAP_ADDRESSES.router,\n          amountIn,\n          {\n            gasLimit: 60000,\n            gasPrice\n          }\n        );\n        await approveTx.wait();\n      }\n\n      // Execute swap with optimized gas\n      const tx = await router.swapExactTokensForTokens(\n        amountIn,\n        amountOutMin,\n        path,\n        to,\n        deadline,\n        {\n          gasLimit: 150000,\n          gasPrice\n        }\n      );\n\n      const receipt = await tx.wait();\n      return receipt;\n    } catch (error) {\n      console.error('Error swapping tokens:', error);\n      throw error;\n    }\n  }\n\n  // Update addLiquidity with optimized gas\n  async addLiquidity(\n    tokenA,\n    tokenB,\n    amountADesired,\n    amountBDesired,\n    amountAMin,\n    amountBMin,\n    to,\n    deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20)\n  ) {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      // Get optimized gas price\n      const feeData = await provider.getFeeData();\n      const gasPrice = feeData.gasPrice * 110n / 100n;\n\n      const router = new ethers.Contract(\n        UNISWAP_ADDRESSES.router,\n        ROUTER_ABI,\n        signer\n      );\n\n      const tokenAContract = new ethers.Contract(tokenA, ERC20_ABI, signer);\n      const tokenBContract = new ethers.Contract(tokenB, ERC20_ABI, signer);\n\n      // Optimize approvals\n      const approveAParams = {\n        gasLimit: 60000,\n        gasPrice\n      };\n      const approveBParams = {\n        gasLimit: 60000,\n        gasPrice\n      };\n\n      // Only approve if needed\n      const allowanceA = await tokenAContract.allowance(to, UNISWAP_ADDRESSES.router);\n      const allowanceB = await tokenBContract.allowance(to, UNISWAP_ADDRESSES.router);\n\n      if (allowanceA < amountADesired) {\n        const approveATx = await tokenAContract.approve(\n          UNISWAP_ADDRESSES.router,\n          amountADesired,\n          approveAParams\n        );\n        await approveATx.wait();\n      }\n\n      if (allowanceB < amountBDesired) {\n        const approveBTx = await tokenBContract.approve(\n          UNISWAP_ADDRESSES.router,\n          amountBDesired,\n          approveBParams\n        );\n        await approveBTx.wait();\n      }\n\n      // Add liquidity with optimized gas\n      const tx = await router.addLiquidity(\n        tokenA,\n        tokenB,\n        amountADesired,\n        amountBDesired,\n        amountAMin,\n        amountBMin,\n        to,\n        deadline,\n        {\n          gasLimit: 250000,\n          gasPrice\n        }\n      );\n\n      const receipt = await tx.wait();\n      return receipt;\n    } catch (error) {\n      console.error('Error adding liquidity:', error);\n      throw error;\n    }\n  }\n\n  // Add swapExactTokensForETH function\n  async swapExactTokensForETH(\n    amountIn,\n    amountOutMin,\n    path,\n    to,\n    deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20) // 20 minutes from now\n  ) {\n    try {\n      // Request account access first\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      \n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      // Verify path ends with WETH\n      if (path[path.length - 1].toLowerCase() !== UNISWAP_ADDRESSES.WETH.toLowerCase()) {\n        throw new Error('Path must end with WETH for ETH swaps');\n      }\n\n      // Create contract instances\n      const router = new ethers.Contract(\n        UNISWAP_ADDRESSES.router,\n        ROUTER_ABI,\n        signer\n      );\n\n      const tokenContract = new ethers.Contract(\n        path[0],\n        ERC20_ABI,\n        signer\n      );\n\n      // Check and handle approvals\n      const currentAllowance = await tokenContract.allowance(to, UNISWAP_ADDRESSES.router);\n      if (currentAllowance < amountIn) {\n        console.log('Approving token for swap...');\n        const approveTx = await tokenContract.approve(UNISWAP_ADDRESSES.router, amountIn);\n        await approveTx.wait();\n        console.log('Token approved');\n      }\n\n      console.log('Executing token to ETH swap with params:', {\n        amountIn: amountIn.toString(),\n        amountOutMin: amountOutMin.toString(),\n        path,\n        to,\n        deadline: deadline.toString()\n      });\n\n      // Get gas price with 10% boost for better chances of execution\n      const feeData = await provider.getFeeData();\n      const gasPrice = feeData.gasPrice * 110n / 100n;\n\n      // Execute swap\n      const tx = await router.swapExactTokensForETH(\n        amountIn,\n        amountOutMin,\n        path,\n        to,\n        deadline,\n        {\n          gasLimit: 250000,\n          gasPrice\n        }\n      );\n\n      console.log('Swap transaction:', tx.hash);\n      const receipt = await tx.wait();\n      console.log('Swap receipt:', receipt);\n      \n      return receipt;\n    } catch (error) {\n      console.error('Error swapping tokens for ETH:', error);\n      throw error;\n    }\n  }\n\n  // Update getAllPools with parallel loading\n  async getAllPools() {\n    try {\n      console.log('Getting all pools from factory');\n      \n      // Check cache first\n      if (this.isCacheValid() && this.poolCache.size > 0) {\n        console.log('Returning pools from cache');\n        return Array.from(this.poolCache.values());\n      }\n\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const factory = new ethers.Contract(\n        UNISWAP_ADDRESSES.factory,\n        FACTORY_ABI,\n        provider\n      );\n\n      const pairCount = await factory.allPairsLength();\n      console.log('Total pairs:', pairCount.toString());\n\n      // Load all pairs in parallel with batches of 20\n      const batchSize = 20;\n      const batches = [];\n      for (let i = 0; i < pairCount; i += batchSize) {\n        const batch = [];\n        for (let j = 0; j < batchSize && i + j < pairCount; j++) {\n          batch.push(factory.allPairs(i + j));\n        }\n        batches.push(Promise.all(batch));\n      }\n\n      // Wait for all batches to complete\n      const results = await Promise.all(batches);\n      const pairs = results.flat();\n      \n      // Update cache\n      pairs.forEach(address => {\n        this.poolCache.set(address.toLowerCase(), address);\n      });\n\n      console.log('Found pairs:', pairs.length);\n      \n      // Update cache timestamp and save to storage\n      this.lastCacheUpdate = Date.now();\n      this.saveCacheToStorage();\n      \n      return pairs;\n    } catch (error) {\n      console.error('Error getting all pools:', error);\n      // If there's an error but we have cached data, return it\n      if (this.poolCache.size > 0) {\n        console.log('Returning cached pools due to error');\n        return Array.from(this.poolCache.values());\n      }\n      throw error;\n    }\n  }\n\n  // Update batchLoadPoolInfo with larger batch size\n  async batchLoadPoolInfo(poolAddresses) {\n    const uncachedPools = poolAddresses.filter(\n      address => !this.isCacheValid() || !this.poolInfoCache.has(address.toLowerCase())\n    );\n\n    if (uncachedPools.length === 0) {\n      console.log('All pool info available in cache');\n      return poolAddresses.map(address => \n        this.poolInfoCache.get(address.toLowerCase())\n      );\n    }\n\n    console.log(`Loading info for ${uncachedPools.length} uncached pools`);\n    const batchSize = 10; // Increased from 5 to 10\n    const results = [];\n\n    // Process batches in parallel\n    const batches = [];\n    for (let i = 0; i < uncachedPools.length; i += batchSize) {\n      const batch = uncachedPools.slice(i, i + batchSize);\n      batches.push(Promise.all(batch.map(address => this.getPoolInfoByAddress(address))));\n    }\n\n    const batchResults = await Promise.all(batches);\n    results.push(...batchResults.flat());\n\n    // Update cache with new results\n    results.forEach(poolInfo => {\n      if (poolInfo) {\n        this.poolInfoCache.set(poolInfo.pairAddress.toLowerCase(), poolInfo);\n      }\n    });\n\n    // Save updated cache\n    this.saveCacheToStorage();\n\n    return poolAddresses.map(address => \n      this.poolInfoCache.get(address.toLowerCase()) || null\n    );\n  }\n\n  // Add helper method to calculate liquidity amounts\n  async calculateLiquidityAmounts(tokenA, tokenB, amountADesired) {\n    try {\n      const poolInfo = await this.getPoolInfo(tokenA, tokenB);\n      \n      if (!poolInfo) {\n        // For new pools, return the desired amount as is (initial price setter)\n        console.log('No existing pool - amounts will set initial price');\n        return {\n          amountA: amountADesired,\n          amountB: amountADesired, // Default 1:1, can be adjusted based on desired initial price\n          priceRatio: '1',\n          isNewPool: true,\n          estimatedPrice: '1' // 1:1 initial price\n        };\n      }\n\n      // For existing pools, calculate based on current ratio\n      const { reserve0, reserve1 } = poolInfo;\n      const token0IsTokenA = tokenA.toLowerCase() === poolInfo.token0.address.toLowerCase();\n      \n      // Get token decimals\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const tokenAContract = new ethers.Contract(tokenA, ERC20_ABI, provider);\n      const tokenBContract = new ethers.Contract(tokenB, ERC20_ABI, provider);\n      const [decimalsA, decimalsB] = await Promise.all([\n        tokenAContract.decimals(),\n        tokenBContract.decimals()\n      ]);\n\n      // Calculate amounts and price\n      let optimalAmountB;\n      let priceRatio;\n      let estimatedPrice;\n\n      if (token0IsTokenA) {\n        optimalAmountB = (amountADesired * reserve1) / reserve0;\n        priceRatio = ethers.formatUnits(reserve1, decimalsB) / ethers.formatUnits(reserve0, decimalsA);\n        estimatedPrice = ethers.formatUnits(reserve0, decimalsA) / ethers.formatUnits(reserve1, decimalsB);\n      } else {\n        optimalAmountB = (amountADesired * reserve0) / reserve1;\n        priceRatio = ethers.formatUnits(reserve0, decimalsB) / ethers.formatUnits(reserve1, decimalsA);\n        estimatedPrice = ethers.formatUnits(reserve1, decimalsA) / ethers.formatUnits(reserve0, decimalsB);\n      }\n\n      // Format amounts for display\n      const formattedAmountA = ethers.formatUnits(amountADesired, decimalsA);\n      const formattedAmountB = ethers.formatUnits(optimalAmountB, decimalsB);\n\n      console.log('Calculated liquidity amounts:', {\n        amountA: formattedAmountA,\n        amountB: formattedAmountB,\n        priceRatio: priceRatio.toString(),\n        estimatedPrice: estimatedPrice.toString(),\n        poolReserves: {\n          reserve0: ethers.formatUnits(reserve0, poolInfo.token0.decimals),\n          reserve1: ethers.formatUnits(reserve1, poolInfo.token1.decimals)\n        }\n      });\n\n      return {\n        amountA: amountADesired,\n        amountB: optimalAmountB,\n        priceRatio: priceRatio.toString(),\n        isNewPool: false,\n        estimatedPrice: estimatedPrice.toString(),\n        token0IsTokenA\n      };\n    } catch (error) {\n      console.error('Error calculating liquidity amounts:', error);\n      throw error;\n    }\n  }\n\n  // Add helper method to calculate initial pool price\n  calculateInitialPoolPrice(\n    token0Amount,\n    token1Amount,\n    token0Decimals,\n    token1Decimals\n  ) {\n    try {\n      // Convert amounts to same decimal basis for accurate price calculation\n      const normalizedToken0 = ethers.formatUnits(token0Amount, token0Decimals);\n      const normalizedToken1 = ethers.formatUnits(token1Amount, token1Decimals);\n      \n      // Calculate price in both directions\n      const token0Price = Number(normalizedToken1) / Number(normalizedToken0);\n      const token1Price = Number(normalizedToken0) / Number(normalizedToken1);\n\n      return {\n        token0Price: token0Price.toString(),\n        token1Price: token1Price.toString()\n      };\n    } catch (error) {\n      console.error('Error calculating initial pool price:', error);\n      throw error;\n    }\n  }\n\n  // Add removeLiquidity function\n  async removeLiquidity(\n    tokenA,\n    tokenB,\n    liquidity,\n    amountAMin,\n    amountBMin,\n    to,\n    deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20)\n  ) {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      // Get optimized gas price\n      const feeData = await provider.getFeeData();\n      const gasPrice = feeData.gasPrice * 110n / 100n;\n\n      const router = new ethers.Contract(\n        UNISWAP_ADDRESSES.router,\n        ROUTER_ABI,\n        signer\n      );\n\n      // Execute removeLiquidity with optimized gas\n      const tx = await router.removeLiquidity(\n        tokenA,\n        tokenB,\n        liquidity,\n        amountAMin,\n        amountBMin,\n        to,\n        deadline,\n        {\n          gasLimit: 250000,\n          gasPrice\n        }\n      );\n\n      const receipt = await tx.wait();\n      return receipt;\n    } catch (error) {\n      console.error('Error removing liquidity:', error);\n      throw error;\n    }\n  }\n\n  // Add method to get pool volumes\n  async getPoolVolumes(pairAddress) {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const pair = new ethers.Contract(pairAddress, PAIR_ABI, provider);\n\n      // Get token contracts for decimals\n      const [token0Address, token1Address] = await Promise.all([\n        pair.token0(),\n        pair.token1()\n      ]);\n\n      const token0Contract = new ethers.Contract(token0Address, ERC20_ABI, provider);\n      const token1Contract = new ethers.Contract(token1Address, ERC20_ABI, provider);\n      const [decimals0, decimals1] = await Promise.all([\n        token0Contract.decimals(),\n        token1Contract.decimals()\n      ]);\n\n      // Use VolumeTracker to get volumes\n      return await this.volumeTracker.getPoolVolumes(\n        pairAddress,\n        pair,\n        decimals0,\n        decimals1\n      );\n    } catch (error) {\n      console.error('Error getting pool volumes:', error);\n      return {\n        oneDayVolume: 0,\n        sevenDayVolume: 0,\n        thirtyDayVolume: 0,\n        oneDayTxCount: 0,\n        sevenDayTxCount: 0,\n        thirtyDayTxCount: 0,\n        poolCreatedAt: 0\n      };\n    }\n  }\n} ","import { ethers } from 'ethers';\nimport { UniswapService } from './uniswap';\n\n// Chainlink Price Feed Addresses for different networks\nexport const CHAINLINK_FEEDS = {\n  // Sepolia Testnet\n  11155111: {\n    ETH_USD: '0x694AA1769357215DE4FAC081bf1f309aDC325306',\n    USDC_USD: '0xA2F78ab2355fe2f984D808B5CeE7FD0A93D5270E',\n    USDT_USD: '0xA2F78ab2355fe2f984D808B5CeE7FD0A93D5270E'\n  },\n  // Ethereum Mainnet\n  1: {\n    ETH_USD: '0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419',\n    USDC_USD: '0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6',\n    USDT_USD: '0x3E7d1eAB13ad0104d2750B8863b489D65364e32D'\n  },\n  // Polygon Mainnet\n  137: {\n    ETH_USD: '0xF9680D99D6C9589e2a93a78A04A279e509205945',\n    USDC_USD: '0xfE4A8cc5b5B2366C1B58Bea3858e81843581b2F7',\n    USDT_USD: '0x0A6513e40db6EB1b165753AD52E80663aeA50545'\n  },\n  // Unichain (using Optimism feeds since it's OP Stack based)\n  1301: {\n    ETH_USD: '0x13e3Ee699D1909E989722E753853AE30b17e08c5',\n    USDC_USD: '0x16a9FA2FDa030272Ce99B29CF780dFA30361E0f3',\n    USDT_USD: '0xECef79E109e997bCA29c1c0897ec9d7b03647F5E'\n  }\n};\n\n// Stablecoin addresses for different networks\nexport const STABLECOINS = {\n  // Sepolia Testnet\n  11155111: {\n    USDC: '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238',\n    USDT: '0x148b1ab3e2321d79027c4b71b6118e70434b4784'\n  },\n  // Polygon Mainnet\n  137: {\n    USDC: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n    USDT: '0xc2132D05D31c914a87C6611C10748AEb04B58e8F'\n  },\n  // Unichain\n  1301: {\n    USDC: '0x9c891326Fd8b1a713982003a9733F03707103837', // Add your actual USDC address\n    USDT: '0x70262e266E50603AcFc5D58997eF73e5a8775844'  // Add your actual USDT address\n  }\n};\n\n// AggregatorV3Interface ABI for Price Feeds\nconst AGGREGATOR_ABI = [\n  'function decimals() external view returns (uint8)',\n  'function description() external view returns (string)',\n  'function version() external view returns (uint256)',\n  'function getRoundData(uint80 _roundId) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)',\n  'function latestRoundData() external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)'\n];\n\nexport class ChainlinkService {\n  constructor() {\n    this.provider = new ethers.BrowserProvider(window.ethereum);\n    this.uniswap = new UniswapService();\n    this.chainId = null;\n  }\n\n  async init() {\n    if (!this.chainId) {\n      const network = await this.provider.getNetwork();\n      this.chainId = Number(network.chainId);\n    }\n  }\n\n  async getLatestPrice(feedAddress) {\n    try {\n      // Use Optimism RPC for price feeds since we're using Optimism's feeds\n      const optimismProvider = new ethers.JsonRpcProvider('https://mainnet.optimism.io');\n      const aggregator = new ethers.Contract(\n        feedAddress,\n        AGGREGATOR_ABI,\n        optimismProvider\n      );\n      const [roundData] = await Promise.all([\n        aggregator.latestRoundData(),\n      ]);\n      const price = Number(roundData.answer) / 1e8;\n      return price;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async getETHPrice() {\n    await this.init();\n    const feeds = CHAINLINK_FEEDS[this.chainId];\n    if (!feeds?.ETH_USD) {\n      return null;\n    }\n    return this.getLatestPrice(feeds.ETH_USD);\n  }\n\n  async getUSDCPrice() {\n    await this.init();\n    const feeds = CHAINLINK_FEEDS[this.chainId];\n    if (!feeds?.USDC_USD) {\n      return 1; // Assume 1:1 if no feed available\n    }\n    return this.getLatestPrice(feeds.USDC_USD);\n  }\n\n  async getUSDTPrice() {\n    await this.init();\n    const feeds = CHAINLINK_FEEDS[this.chainId];\n    if (!feeds?.USDT_USD) {\n      return 1; // Assume 1:1 if no feed available\n    }\n    return this.getLatestPrice(feeds.USDT_USD);\n  }\n\n  async getPriceFromStablePair(tokenAddress) {\n    await this.init();\n    const stablecoins = STABLECOINS[this.chainId];\n    if (!stablecoins) {\n      return null;\n    }\n\n    // Try USDC pool first\n    try {\n      const usdcPool = await this.uniswap.getPoolInfo(tokenAddress, stablecoins.USDC);\n      if (usdcPool && usdcPool.reserve0 && usdcPool.reserve1) {\n        const { reserve0, reserve1, token0, token1 } = usdcPool;\n        const isToken0 = tokenAddress.toLowerCase() === token0.address.toLowerCase();\n        \n        const tokenReserve = isToken0 ? reserve0 : reserve1;\n        const usdcReserve = isToken0 ? reserve1 : reserve0;\n        \n        const tokenDecimals = isToken0 ? token0.decimals : token1.decimals;\n        const usdcDecimals = isToken0 ? token1.decimals : token0.decimals;\n        \n        const normalizedTokenReserve = Number(ethers.formatUnits(tokenReserve, tokenDecimals));\n        const normalizedUSDCReserve = Number(ethers.formatUnits(usdcReserve, usdcDecimals));\n        \n        return normalizedUSDCReserve / normalizedTokenReserve;\n      }\n    } catch (error) {\n      // Silently fail and try USDT pool\n    }\n\n    // Try USDT pool if USDC pool doesn't exist or failed\n    try {\n      const usdtPool = await this.uniswap.getPoolInfo(tokenAddress, stablecoins.USDT);\n      if (usdtPool && usdtPool.reserve0 && usdtPool.reserve1) {\n        const { reserve0, reserve1, token0, token1 } = usdtPool;\n        const isToken0 = tokenAddress.toLowerCase() === token0.address.toLowerCase();\n        \n        const tokenReserve = isToken0 ? reserve0 : reserve1;\n        const usdtReserve = isToken0 ? reserve1 : reserve0;\n        \n        const tokenDecimals = isToken0 ? token0.decimals : token1.decimals;\n        const usdtDecimals = isToken0 ? token1.decimals : token0.decimals;\n        \n        const normalizedTokenReserve = Number(ethers.formatUnits(tokenReserve, tokenDecimals));\n        const normalizedUSDTReserve = Number(ethers.formatUnits(usdtReserve, usdtDecimals));\n        \n        return normalizedUSDTReserve / normalizedTokenReserve;\n      }\n    } catch (error) {\n      // Silently fail\n    }\n\n    return null;\n  }\n\n  async calculateUSDValue(tokenAddress, amount, decimals) {\n    try {\n      await this.init();\n      \n      if (!tokenAddress || !amount || decimals === undefined) {\n        return null;\n      }\n\n      let price;\n      \n      // Handle known tokens\n      const stablecoins = STABLECOINS[this.chainId];\n      if (!stablecoins) {\n        return null;\n      }\n\n      switch(tokenAddress.toLowerCase()) {\n        case 'eth':\n        case '0xfff9976782d46cc05630d1f6ebab18b2324d6b14': // WETH Sepolia\n          price = await this.getETHPrice();\n          break;\n        case stablecoins.USDC.toLowerCase():\n          price = 1; // USDC is pegged to USD\n          break;\n        case stablecoins.USDT.toLowerCase():\n          price = 1; // USDT is pegged to USD\n          break;\n        default:\n          // For unknown tokens, try to find their price through pool ratios\n          price = await this.getPriceFromStablePair(tokenAddress);\n      }\n\n      if (!price) {\n        return null;\n      }\n\n      const normalizedAmount = Number(ethers.formatUnits(amount, decimals));\n      return normalizedAmount * price;\n    } catch (error) {\n      return null;\n    }\n  }\n} ","import { useState, useEffect } from 'react';\nimport { ChainlinkService } from '../services/chainlink';\n\nexport function useTokenPrices() {\n  const [prices, setPrices] = useState({\n    ETH: null,\n    USDC: null,\n    USDT: null\n  });\n\n  useEffect(() => {\n    const chainlinkService = new ChainlinkService();\n    let mounted = true;\n\n    async function updatePrices() {\n      try {\n        const [ethPrice, usdcPrice, usdtPrice] = await Promise.all([\n          chainlinkService.getETHPrice(),\n          chainlinkService.getUSDCPrice(),\n          chainlinkService.getUSDTPrice()\n        ]);\n\n        if (mounted) {\n          setPrices({\n            ETH: ethPrice,\n            USDC: usdcPrice,\n            USDT: usdtPrice\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching token prices:', error);\n      }\n    }\n\n    // Update prices immediately and then every 30 seconds\n    updatePrices();\n    const interval = setInterval(updatePrices, 30000);\n\n    return () => {\n      mounted = false;\n      clearInterval(interval);\n    };\n  }, []);\n\n  const calculateUSDValue = async (token, amount) => {\n    try {\n      const chainlinkService = new ChainlinkService();\n      return chainlinkService.calculateUSDValue(token.address, amount, token.decimals);\n    } catch (error) {\n      console.error('Error calculating USD value:', error);\n      return null;\n    }\n  };\n\n  const formatUSD = (value) => {\n    if (value === null || value === undefined) return '---';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  };\n\n  return {\n    prices,\n    calculateUSDValue,\n    formatUSD\n  };\n} ","import { useMemo } from 'react';\nimport { usePublicClient, useWalletClient } from 'wagmi';\nimport { UniswapService } from '../services/uniswap';\n\nexport function useUniswap() {\n  const publicClient = usePublicClient();\n  const { data: walletClient } = useWalletClient();\n\n  const uniswap = useMemo(() => {\n    if (!publicClient || !walletClient) return null;\n    return new UniswapService(publicClient, walletClient);\n  }, [publicClient, walletClient]);\n\n  return uniswap;\n} ","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { FaEthereum, FaBitcoin, FaCoins, FaCog } from 'react-icons/fa';\r\nimport { SiDogecoin, SiLitecoin, SiRipple, SiCardano } from 'react-icons/si';\r\n\r\nconst CryptoSplash = () => {\r\n  // Factory production coins\r\n  const factoryCoins = [\r\n    // Source container coins (left side - static)\r\n    { Icon: FaEthereum, delay: 0, y: -10, x: -70, scale: 0.9, static: true },\r\n    { Icon: FaBitcoin, delay: 0.2, y: -12, x: -68, scale: 0.85, static: true },\r\n    { Icon: SiDogecoin, delay: 0.4, y: -8, x: -72, scale: 0.8, static: true },\r\n    \r\n    // Production line coins (moving from left container to right)\r\n    { Icon: FaEthereum, delay: 0, y: -10, x: -70, scale: 1.0 },\r\n    { Icon: FaBitcoin, delay: 0.4, y: -12, x: -70, scale: 0.95 },\r\n    { Icon: SiDogecoin, delay: 0.8, y: -8, x: -70, scale: 0.9 },\r\n    { Icon: SiLitecoin, delay: 1.2, y: -14, x: -70, scale: 1.0 },\r\n    { Icon: SiRipple, delay: 1.6, y: -10, x: -70, scale: 0.95 },\r\n    { Icon: SiCardano, delay: 2.0, y: -12, x: -70, scale: 1.0 },\r\n    { Icon: FaCoins, delay: 2.4, y: -8, x: -70, scale: 0.9 },\r\n    \r\n    // Target container coins (right side - static)\r\n    { Icon: FaBitcoin, delay: 0, y: -10, x: 65, scale: 0.8, static: true },\r\n    { Icon: SiDogecoin, delay: 0.2, y: -14, x: 68, scale: 0.75, static: true },\r\n    { Icon: FaEthereum, delay: 0.4, y: -12, x: 62, scale: 0.85, static: true },\r\n    { Icon: SiLitecoin, delay: 0.6, y: -8, x: 70, scale: 0.7, static: true },\r\n  ];\r\n\r\n  // Container pulse animation\r\n  const containerVariants = {\r\n    initial: { opacity: 0, scale: 0.95 },\r\n    animate: { \r\n      opacity: [0.15, 0.2, 0.15],\r\n      scale: [0.95, 1, 0.95],\r\n      transition: {\r\n        duration: 2,\r\n        repeat: Infinity,\r\n        ease: \"easeInOut\"\r\n      }\r\n    }\r\n  };\r\n\r\n  // Border shimmer animation\r\n  const borderVariants = {\r\n    initial: { pathLength: 0, opacity: 0 },\r\n    animate: { \r\n      pathLength: [0, 1, 0],\r\n      opacity: [0.3, 0.6, 0.3],\r\n      transition: {\r\n        duration: 3,\r\n        repeat: Infinity,\r\n        ease: \"easeInOut\"\r\n      }\r\n    }\r\n  };\r\n\r\n  // Gear rotation animation\r\n  const gearVariants = {\r\n    initial: { rotate: 0, opacity: 0.4 },\r\n    animate: { \r\n      rotate: 360,\r\n      opacity: [0.4, 0.7, 0.4],\r\n      transition: {\r\n        duration: 8,\r\n        repeat: Infinity,\r\n        ease: \"linear\"\r\n      }\r\n    }\r\n  };\r\n\r\n  // Static coin variants\r\n  const staticCoinVariants = {\r\n    initial: { opacity: 0, scale: 0 },\r\n    animate: (custom) => ({\r\n      opacity: [0.4, 0.5, 0.4],\r\n      scale: custom.scale,\r\n      transition: {\r\n        opacity: {\r\n          duration: 2,\r\n          repeat: Infinity,\r\n          ease: \"easeInOut\"\r\n        },\r\n        scale: {\r\n          duration: 0.5,\r\n          delay: custom.delay\r\n        }\r\n      }\r\n    })\r\n  };\r\n\r\n  // Moving coin variants with enhanced path\r\n  const movingCoinVariants = {\r\n    initial: { \r\n      opacity: 0,\r\n      scale: 0,\r\n      x: -70,\r\n      y: custom => custom.y,\r\n      rotate: 0\r\n    },\r\n    animate: (custom) => ({\r\n      opacity: [0, 1, 1, 1, 0],\r\n      scale: [0, custom.scale, custom.scale * 1.1, custom.scale, 0],\r\n      rotate: [0, 180, 360, 540, 720],\r\n      y: [\r\n        custom.y,\r\n        custom.y - 20, // Arc up\r\n        custom.y - 25, // Peak\r\n        custom.y - 15, // Arc down\r\n        custom.y\r\n      ],\r\n      x: [-70, -20, 0, 40, 65], // Improved path with processing pause\r\n      transition: {\r\n        duration: 3,\r\n        delay: custom.delay,\r\n        repeat: Infinity,\r\n        ease: [0.4, 0, 0.2, 1]\r\n      }\r\n    })\r\n  };\r\n\r\n  // Particle animation for container activity\r\n  const particleVariants = {\r\n    initial: { opacity: 0, y: 0 },\r\n    animate: { \r\n      opacity: [0, 0.5, 0],\r\n      y: [-10, 10],\r\n      transition: {\r\n        duration: 2,\r\n        repeat: Infinity,\r\n        ease: \"easeInOut\"\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"relative w-[480px] h-48\"\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n    >\r\n      {/* Background grid effect */}\r\n      <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-[#00ffbd]/5 to-transparent\" \r\n        style={{ \r\n          backgroundSize: '20px 20px',\r\n          backgroundImage: 'linear-gradient(to right, #00ffbd05 1px, transparent 1px), linear-gradient(to bottom, #00ffbd05 1px, transparent 1px)'\r\n        }} \r\n      />\r\n\r\n      {/* Source container (left) */}\r\n      <motion.div\r\n        variants={containerVariants}\r\n        className=\"absolute left-4 top-1/2 -translate-y-1/2 w-28 h-28 rounded-lg border border-[#00ffbd]/20 bg-[#00ffbd]/5\"\r\n        style={{ \r\n          boxShadow: '0 0 20px rgba(0, 255, 189, 0.15)',\r\n          backdropFilter: 'blur(8px)'\r\n        }}\r\n      >\r\n        {/* Container particles */}\r\n        {[...Array(5)].map((_, i) => (\r\n          <motion.div\r\n            key={`particle-left-${i}`}\r\n            variants={particleVariants}\r\n            className=\"absolute w-1 h-1 rounded-full bg-[#00ffbd]/30\"\r\n            style={{\r\n              left: `${Math.random() * 100}%`,\r\n              top: `${Math.random() * 100}%`,\r\n              animationDelay: `${Math.random() * 2}s`\r\n            }}\r\n          />\r\n        ))}\r\n      </motion.div>\r\n\r\n      {/* Target container (right) */}\r\n      <motion.div\r\n        variants={containerVariants}\r\n        className=\"absolute right-4 top-1/2 -translate-y-1/2 w-28 h-28 rounded-lg border border-[#00ffbd]/20 bg-[#00ffbd]/5\"\r\n        style={{ \r\n          boxShadow: '0 0 20px rgba(0, 255, 189, 0.15)',\r\n          backdropFilter: 'blur(8px)'\r\n        }}\r\n      >\r\n        {/* Container particles */}\r\n        {[...Array(5)].map((_, i) => (\r\n          <motion.div\r\n            key={`particle-right-${i}`}\r\n            variants={particleVariants}\r\n            className=\"absolute w-1 h-1 rounded-full bg-[#00ffbd]/30\"\r\n            style={{\r\n              left: `${Math.random() * 100}%`,\r\n              top: `${Math.random() * 100}%`,\r\n              animationDelay: `${Math.random() * 2}s`\r\n            }}\r\n          />\r\n        ))}\r\n      </motion.div>\r\n\r\n      {/* Conveyor belt effect */}\r\n      <div className=\"absolute top-1/2 left-1/2 -translate-y-1/2 -translate-x-1/2 w-64 h-6\">\r\n        <div className=\"absolute inset-0 bg-[#00ffbd]/5 rounded-full\" />\r\n        <motion.div\r\n          animate={{\r\n            backgroundPosition: ['0px 0px', '20px 0px'],\r\n            transition: { duration: 1, repeat: Infinity, ease: \"linear\" }\r\n          }}\r\n          className=\"absolute inset-0 rounded-full\"\r\n          style={{\r\n            backgroundImage: 'repeating-linear-gradient(45deg, transparent, transparent 10px, rgba(0, 255, 189, 0.1) 10px, rgba(0, 255, 189, 0.1) 20px)',\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Processing beam effect */}\r\n      <motion.div\r\n        animate={{\r\n          opacity: [0.2, 0.4, 0.2],\r\n          scale: [0.95, 1.05, 0.95],\r\n        }}\r\n        transition={{ duration: 2, repeat: Infinity }}\r\n        className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 w-12 h-20 bg-[#00ffbd]/10 rounded-full blur-md\"\r\n      />\r\n\r\n      {/* Rotating gears */}\r\n      <motion.div\r\n        variants={gearVariants}\r\n        className=\"absolute left-24 top-1/2 -translate-y-1/2 w-8 h-8 text-[#00ffbd]\"\r\n        style={{\r\n          filter: 'drop-shadow(0 0 8px rgba(0, 255, 189, 0.5))'\r\n        }}\r\n      >\r\n        <FaCog className=\"w-full h-full\" />\r\n      </motion.div>\r\n      <motion.div\r\n        variants={gearVariants}\r\n        className=\"absolute right-24 top-1/2 -translate-y-1/2 w-8 h-8 text-[#00ffbd]\"\r\n        style={{\r\n          filter: 'drop-shadow(0 0 8px rgba(0, 255, 189, 0.5))'\r\n        }}\r\n      >\r\n        <FaCog className=\"w-full h-full\" />\r\n      </motion.div>\r\n\r\n      {/* Static coins */}\r\n      {factoryCoins.filter(coin => coin.static).map((coin, index) => (\r\n        <motion.div\r\n          key={`static-${index}`}\r\n          custom={coin}\r\n          variants={staticCoinVariants}\r\n          className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2\"\r\n          style={{\r\n            transform: `translate(${coin.x}px, ${coin.y}px)`\r\n          }}\r\n        >\r\n          <div className=\"w-8 h-8 flex items-center justify-center\">\r\n            <coin.Icon \r\n              className=\"text-[#00ffbd]/50\"\r\n              style={{ \r\n                filter: 'drop-shadow(0 0 8px rgba(0, 255, 189, 0.3))',\r\n                width: '100%',\r\n                height: '100%'\r\n              }}\r\n            />\r\n          </div>\r\n        </motion.div>\r\n      ))}\r\n\r\n      {/* Moving coins with trails */}\r\n      {factoryCoins.filter(coin => !coin.static).map((coin, index) => (\r\n        <motion.div\r\n          key={`moving-${index}`}\r\n          custom={coin}\r\n          variants={movingCoinVariants}\r\n          className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2\"\r\n        >\r\n          {/* Coin trail */}\r\n          <motion.div\r\n            className=\"absolute w-full h-full\"\r\n            style={{\r\n              background: 'linear-gradient(90deg, transparent, #00ffbd20)',\r\n              filter: 'blur(4px)',\r\n              width: '20px',\r\n              height: '2px',\r\n              transform: 'translateX(-10px)'\r\n            }}\r\n          />\r\n          <div className=\"w-8 h-8 flex items-center justify-center\">\r\n            <coin.Icon \r\n              className=\"text-[#00ffbd]\"\r\n              style={{ \r\n                filter: 'drop-shadow(0 0 12px rgba(0, 255, 189, 0.5))',\r\n                width: '100%',\r\n                height: '100%'\r\n              }}\r\n            />\r\n          </div>\r\n        </motion.div>\r\n      ))}\r\n\r\n      {/* Processing stage indicators */}\r\n      <div className=\"absolute top-1/2 left-1/2 -translate-y-1/2 -translate-x-1/2 w-64 flex justify-between items-center\">\r\n        <motion.div\r\n          animate={{ opacity: [0.3, 0.6, 0.3] }}\r\n          transition={{ duration: 2, repeat: Infinity }}\r\n          className=\"w-2 h-2 rounded-full bg-[#00ffbd]\"\r\n        />\r\n        <motion.div\r\n          animate={{ opacity: [0.3, 0.6, 0.3] }}\r\n          transition={{ duration: 2, repeat: Infinity, delay: 0.6 }}\r\n          className=\"w-2 h-2 rounded-full bg-[#00ffbd]\"\r\n        />\r\n        <motion.div\r\n          animate={{ opacity: [0.3, 0.6, 0.3] }}\r\n          transition={{ duration: 2, repeat: Infinity, delay: 1.2 }}\r\n          className=\"w-2 h-2 rounded-full bg-[#00ffbd]\"\r\n        />\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default CryptoSplash; ","import React, { useEffect, useState } from 'react';\nimport { BiRocket, BiShield, BiCoin, BiPalette, BiLineChart, BiCog, BiStore, BiTransfer, BiWater, BiCollection } from 'react-icons/bi';\nimport { useDeployments } from '../context/DeploymentsContext';\nimport { formatDistanceToNow } from 'date-fns';\nimport { getExplorerUrl } from '../utils/explorer';\nimport { ipfsToHttp } from '../utils/ipfs';\nimport { Link } from 'react-router-dom';\nimport { useTokenPrices } from '../hooks/useTokenPrices';\nimport { useUniswap } from '../hooks/useUniswap';\nimport CryptoSplash from './CryptoSplash';\n\nexport default function Dashboard() {\n  const { deployments } = useDeployments();\n  const { prices } = useTokenPrices();\n  const uniswap = useUniswap();\n  const [poolStats, setPoolStats] = useState({\n    volume24h: 369,\n    liquidity: 639,\n    holders: 420,\n  });\n  const [loading, setLoading] = useState(true);\n  const [showWelcome, setShowWelcome] = useState(false);\n  const [position, setPosition] = useState(-100);\n  const [isDone, setIsDone] = useState(false);\n\n  useEffect(() => {\n    const loadPoolStats = async () => {\n      if (!uniswap) return;\n      \n      try {\n        setLoading(true);\n        \n        // Get all pools\n        const pools = await uniswap.getAllPools();\n        \n        // Calculate total liquidity and volume\n        let totalLiquidity = 0;\n        let totalVolume24h = 0;\n        let uniqueHolders = new Set();\n\n        for (const poolAddress of pools) {\n          const poolInfo = await uniswap.getPoolInfoByAddress(poolAddress);\n          if (!poolInfo) continue;\n\n          // Calculate liquidity in USD\n          const reserve0USD = poolInfo.reserves?.reserve0 && prices.ETH\n            ? Number(ethers.formatUnits(poolInfo.reserves.reserve0, poolInfo.token0.decimals)) * prices.ETH\n            : 0;\n          const reserve1USD = poolInfo.reserves?.reserve1 && prices.ETH\n            ? Number(ethers.formatUnits(poolInfo.reserves.reserve1, poolInfo.token1.decimals)) * prices.ETH\n            : 0;\n\n          totalLiquidity += reserve0USD + reserve1USD;\n\n          // Get 24h volume\n          const volume = await uniswap.getPoolVolume(poolAddress, '24h');\n          if (volume) {\n            totalVolume24h += volume * prices.ETH;\n          }\n\n          // Add holders to set\n          const holders = await uniswap.getPoolHolders(poolAddress);\n          holders.forEach(holder => uniqueHolders.add(holder));\n        }\n\n        setPoolStats({\n          volume24h: totalVolume24h,\n          liquidity: totalLiquidity,\n          holders: uniqueHolders.size\n        });\n      } catch (error) {\n        console.error('Error loading pool stats:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (uniswap && prices.ETH) {\n      loadPoolStats();\n    }\n  }, [uniswap, prices.ETH]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setPosition(75);\n      setTimeout(() => {\n        setIsDone(true);\n        setShowWelcome(true);\n      }, 1000);\n    }, 500);\n  }, []);\n\n  const formatUSD = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  const features = [\n    {\n      icon: BiShield,\n      title: \"Security First\",\n      description: \"Built with battle-tested OpenZeppelin and Uniswap V2 contracts.\",\n      gradient: \"from-[#00ffbd] to-[#00e6a9]\"\n    },\n    {\n      icon: BiCoin,\n      title: \"Token Types\",\n      description: \"Create immutable ERC20 tokens with fixed supply for enhanced security and trust.\",\n      gradient: \"from-blue-500 to-blue-600\"\n    },\n    {\n      icon: BiRocket,\n      title: \"Launch in Minutes\",\n      description: \"Create your own ERC20 tokens with just a few clicks. No coding required.\",\n      gradient: \"from-purple-500 to-purple-600\"\n    },\n    {\n      icon: BiCog,\n      title: \"Full Control\",\n      description: \"Transfer tokens, manage allowances, and track balances with standard ERC20 features.\",\n      gradient: \"from-pink-500 to-pink-600\"\n    },\n    {\n      icon: BiWater,\n      title: \"Liquidity Tools\",\n      description: \"Easily add liquidity and create trading pairs on DEXes.\",\n      gradient: \"from-yellow-500 to-yellow-600\"\n    },\n    {\n      icon: BiPalette,\n      title: \"NFT Collections\",\n      description: \"Launch your NFT collection with customizable traits and rarity.\",\n      gradient: \"from-green-500 to-green-600\"\n    }\n  ];\n\n  function TokenCard({ deployment }) {\n    const isNFT = deployment.type === 'nft';\n    const collectionUrl = `/collection/${deployment.symbol}`;\n\n    // Helper to normalize network names\n    const normalizeNetworkName = (chainName) => {\n      if (!chainName) return 'unknown';\n      const name = chainName.toLowerCase();\n      switch (name) {\n        case 'unknown':\n        case 'localhost':\n        case '1828369849':\n          return 'moonwalker';\n        case 'sepolia':\n          return 'sepolia';\n        case '130':\n        case 'unichain-mainnet':\n          return 'unichain-mainnet';\n        case '1301':\n        case 'unichain':\n          return 'unichain';\n        case '10143':\n        case 'monad-testnet':\n          return 'monad-testnet';\n        default:\n          return name;\n      }\n    };\n\n    // Get normalized network name\n    const networkName = normalizeNetworkName(deployment.chainName || deployment.network);\n\n    const getExplorerUrl = (chainName, address) => {\n      switch (chainName.toLowerCase()) {\n        case 'sepolia':\n          return `https://sepolia.etherscan.io/token/${address}`;\n        case 'polygon':\n          return `https://polygonscan.com/token/${address}`;\n        case 'unichain-mainnet':\n          return `https://unichain.blockscout.com/token/${address}`;\n        case 'unichain':\n          return `https://unichain-sepolia.blockscout.com/token/${address}`;\n        case 'moonwalker':\n          return `https://moonwalker-sepolia.blockscout.com/token/${address}`;\n        case 'monad-testnet':\n          return `https://monad-testnet.socialscan.io/token/${address}`;\n        default:\n          return '#';\n      }\n    };\n\n    return (\n      <div className=\"flex items-center justify-between py-2 border-b border-gray-100 dark:border-gray-800 last:border-0\">\n        <div className=\"flex items-center gap-3\">\n          {deployment.artworkType === 'video' ? (\n            <div className=\"w-8 h-8 rounded-full overflow-hidden border border-gray-200 dark:border-gray-800\">\n              <video \n                src={deployment.logo || ipfsToHttp(deployment.logoIpfs)}\n                className=\"w-full h-full object-cover\"\n                autoPlay\n                muted\n                loop\n                playsInline\n              />\n            </div>\n          ) : (\n            <img \n              src={deployment.logo || ipfsToHttp(deployment.logoIpfs)} \n              alt={deployment.name}\n              className=\"w-8 h-8 rounded-full\"\n              onError={(e) => {\n                e.target.onerror = null;\n                e.target.src = '/token-default.png';\n              }}\n            />\n          )}\n          <div>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                {deployment.name} ({deployment.symbol})\n              </span>\n              {isNFT ? (\n                <BiCollection \n                  className=\"text-[#00ffbd]\" \n                  size={16} \n                  title=\"NFT Collection\"\n                />\n              ) : (\n                <BiShield \n                  className=\"text-[#00ffbd]\" \n                  size={16} \n                  title=\"Non-Mintable Token\"\n                />\n              )}\n            </div>\n            <div className=\"text-xs text-gray-500\">\n              on {networkName}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"text-right\">\n          <div className=\"text-xs text-gray-500\">\n            {formatDistanceToNow(deployment.timestamp, { addSuffix: true })}\n          </div>\n          {isNFT ? (\n            <Link \n              to={collectionUrl}\n              className=\"text-xs text-[#00ffbd] hover:text-[#00e6a9] transition-colors group relative\"\n            >\n              Supply: {Number(deployment.totalSupply).toLocaleString()}\n              <span className=\"absolute bottom-full right-0 mb-2 w-max px-2 py-1 bg-gray-900 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity\">\n                View Collection\n              </span>\n            </Link>\n          ) : (\n            <a \n              href={getExplorerUrl(networkName, deployment.address)}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-xs text-[#00ffbd] hover:text-[#00e6a9] transition-colors\"\n            >\n              Supply: {Number(deployment.totalSupply).toLocaleString()}\n            </a>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <main className=\"mt-16 p-8\">\n      <div className=\"text-center mb-12 relative h-32\">\n        <div \n          className={`transition-all duration-1000 ${showWelcome ? 'opacity-100 transform translate-y-0' : 'opacity-0 transform -translate-y-10'}`}\n        >\n          <h1 className=\"text-4xl font-bold mb-4 text-gray-900 dark:text-white\">\n            Welcome to Token Factory\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 max-w-2xl mx-auto\">\n            Launch your own tokens and NFTs on Unichain, Polygon and other EVM chains (coming soon). \n            Create, trade, and manage your crypto assets with our powerful platform.\n          </p>\n        </div>\n        <div \n          className={`absolute ${isDone ? 'top-4' : '-top-4'} transition-all duration-1000 ease-out`}\n          style={{ \n            left: `${position}%`,\n            transform: 'translate(-50%, 0)',\n          }}\n        >\n          <CryptoSplash />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-7xl mx-auto mb-12\">\n        {features.map((feature, index) => (\n          <div \n            key={index}\n            className=\"relative group overflow-hidden rounded-2xl\"\n          >\n            <div className={`absolute inset-0 bg-gradient-to-br ${feature.gradient} opacity-0 group-hover:opacity-100 transition-opacity duration-300`} />\n            <div className=\"relative p-6 bg-white dark:bg-[#1a1b1f] rounded-2xl border border-gray-200 dark:border-gray-800 group-hover:border-transparent transition-colors duration-300\">\n              <feature.icon className=\"w-12 h-12 mb-4 text-[#00ffbd]\" />\n              <h3 className=\"text-xl font-semibold mb-2 text-gray-900 dark:text-white\">\n                {feature.title}\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                {feature.description}\n              </p>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"max-w-7xl mx-auto\">\n        <h2 className=\"text-2xl font-bold mb-6 text-gray-900 dark:text-white\">\n          Ecosystem Integrations\n        </h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\">\n          <div className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-6 border border-gray-200 dark:border-gray-800\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <BiWater className=\"w-8 h-8 text-[#00ffbd]\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                Add Liquidity & Trade\n              </h3>\n            </div>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n              List your token on popular DEXes and create trading pairs\n            </p>\n            <div className=\"flex flex-wrap gap-3\">\n              <a href=\"https://token-factory.xyz/trading\" target=\"_blank\" rel=\"noopener noreferrer\" \n                 className=\"text-[#00ffbd] bg-[#00ffbd]/10 px-3 py-1 rounded-full text-sm hover:bg-[#00ffbd]/20 transition-colors\">\n                Token Factory Swap\n              </a>\n              <a href=\"https://app.uniswap.org/#/pools\" target=\"_blank\" rel=\"noopener noreferrer\"\n                 className=\"text-pink-600 dark:text-pink-400 bg-pink-100 dark:bg-pink-900/20 px-3 py-1 rounded-full text-sm hover:bg-pink-200 dark:hover:bg-pink-900/30 transition-colors\">\n                Uniswap\n              </a>\n              <span className=\"text-gray-600 dark:text-gray-400 bg-gray-100 dark:bg-gray-800 px-3 py-1 rounded-full text-sm\">\n                More coming soon\n              </span>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-6 border border-gray-200 dark:border-gray-800\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <BiStore className=\"w-8 h-8 text-[#00ffbd]\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                NFT Marketplaces\n              </h3>\n            </div>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n              List your NFTs on popular marketplaces instantly\n            </p>\n            <div className=\"flex flex-wrap gap-3\">\n              <a href=\"https://opensea.io/\" target=\"_blank\" rel=\"noopener noreferrer\"\n                 className=\"text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/20 px-3 py-1 rounded-full text-sm hover:bg-blue-200 dark:hover:bg-blue-900/30 transition-colors\">\n                OpenSea\n              </a>\n              <a href=\"https://market.wilderworld.com/\" target=\"_blank\" rel=\"noopener noreferrer\"\n                 className=\"text-orange-600 dark:text-orange-400 bg-orange-100 dark:bg-orange-900/20 px-3 py-1 rounded-full text-sm hover:bg-orange-200 dark:hover:bg-orange-900/30 transition-colors\">\n                WWMarket\n              </a>\n              <a href=\"https://rarible.com/\" target=\"_blank\" rel=\"noopener noreferrer\"\n                 className=\"text-purple-600 dark:text-purple-400 bg-purple-100 dark:bg-purple-900/20 px-3 py-1 rounded-full text-sm hover:bg-purple-200 dark:hover:bg-purple-900/30 transition-colors\">\n                Rarible\n              </a>\n              <span className=\"text-gray-600 dark:text-gray-400 bg-gray-100 dark:bg-gray-800 px-3 py-1 rounded-full text-sm\">\n                More coming soon\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          <div className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-6 border border-gray-200 dark:border-gray-800\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <BiTransfer className=\"w-8 h-8 text-[#00ffbd]\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                Recent Deployments\n              </h3>\n            </div>\n            <div className=\"space-y-3\">\n              {deployments.length === 0 ? (\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  No tokens deployed yet\n                </p>\n              ) : (\n                <div className=\"space-y-2\">\n                  {deployments.slice(0, 5).map((deployment) => (\n                    <TokenCard key={deployment.timestamp} deployment={deployment} />\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-6 border border-gray-200 dark:border-gray-800\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <BiLineChart className=\"w-8 h-8 text-[#00ffbd]\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                Token Analytics\n              </h3>\n            </div>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n              Track your token's performance and trading activity\n            </p>\n            \n            <div className=\"mt-4 h-[200px] bg-gray-50 dark:bg-[#1a1b1f] rounded-lg p-4 relative overflow-hidden border border-gray-200 dark:border-gray-800\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">ZFUN/POL</span>\n                  <span className=\"text-xs text-[#00ffbd]\">+2.45%</span>\n                </div>\n                <div className=\"flex gap-2\">\n                  <button className=\"px-2 py-1 text-xs rounded bg-gray-200 dark:bg-[#2d2f36] text-gray-600 dark:text-gray-400 hover:bg-gray-300 dark:hover:bg-[#3d3f46]\">1H</button>\n                  <button className=\"px-2 py-1 text-xs rounded bg-[#00ffbd] text-black\">24H</button>\n                  <button className=\"px-2 py-1 text-xs rounded bg-gray-200 dark:bg-[#2d2f36] text-gray-600 dark:text-gray-400 hover:bg-gray-300 dark:hover:bg-[#3d3f46]\">7D</button>\n                </div>\n              </div>\n              \n              <div className=\"relative h-[120px]\">\n                <div className=\"absolute inset-0\">\n                  <svg className=\"w-full h-full\">\n                    <defs>\n                      <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                        <stop offset=\"0%\" stopColor=\"#00ffbd\" stopOpacity=\"0.1\" />\n                        <stop offset=\"100%\" stopColor=\"#00ffbd\" stopOpacity=\"0\" />\n                      </linearGradient>\n                    </defs>\n                    <path \n                      d=\"M0,100 C50,80 100,120 150,60 C200,0 250,40 300,20 L300,150 L0,150 Z\" \n                      fill=\"url(#gradient)\"\n                      className=\"transition-all duration-300\"\n                    />\n                    <path \n                      d=\"M0,100 C50,80 100,120 150,60 C200,0 250,40 300,20\" \n                      fill=\"none\"\n                      stroke=\"#00ffbd\"\n                      strokeWidth=\"2\"\n                      className=\"transition-all duration-300\"\n                    />\n                  </svg>\n                </div>\n                \n                <div className=\"absolute left-0 top-0 bottom-0 flex flex-col justify-between text-xs text-gray-500 py-2\">\n                  <span>$1.24</span>\n                  <span>$1.12</span>\n                  <span>$1.00</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-3 gap-4 mt-4\">\n              <div className=\"text-center\">\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">Volume 24h</div>\n                <div className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                  {loading ? 'Loading...' : formatUSD(poolStats.volume24h)}\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">Liquidity</div>\n                <div className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                  {loading ? 'Loading...' : formatUSD(poolStats.liquidity)}\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">Holders</div>\n                <div className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                  {loading ? 'Loading...' : poolStats.holders.toLocaleString()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n} ","export default function FuturisticCard({ children, className = '', hideCorners = false }) {\n  return (\n    <div className=\"relative\">\n      {!hideCorners && (\n        <>\n          {/* Corners */}\n          <div className=\"absolute -top-1 -left-1 w-4 h-4 border-t-2 border-l-2 border-[#00ffbd]\" />\n          <div className=\"absolute -top-1 -right-1 w-4 h-4 border-t-2 border-r-2 border-[#00ffbd]\" />\n          <div className=\"absolute -bottom-1 -left-1 w-4 h-4 border-b-2 border-l-2 border-[#00ffbd]\" />\n          <div className=\"absolute -bottom-1 -right-1 w-4 h-4 border-b-2 border-r-2 border-[#00ffbd]\" />\n\n          {/* Glowing Dots */}\n          <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n        </>\n      )}\n\n      {/* Main container */}\n      <div className={`bg-white dark:bg-[#0a0b0f] rounded-xl p-6 ${className}`}>\n        {children}\n      </div>\n    </div>\n  );\n} ","import React, { useState, useMemo, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { FaEthereum, FaDiscord, FaTwitter, FaGlobe, FaTelegram, FaPaintBrush, FaGamepad, FaCamera, FaMusic, FaStar, FaCrown } from 'react-icons/fa';\nimport { BiTime, BiCheck, BiX, BiWorld, BiMoviePlay } from 'react-icons/bi';\nimport { IoMdPaper } from 'react-icons/io';\nimport { GiCrownCoin } from 'react-icons/gi';\nimport TokenIcon from './TokenIcon';\nimport { getAllCollections, getTokenDeploymentByAddress } from '../services/firebase';\nimport { useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport FuturisticCard from './FuturisticCard';\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';\n\n// Category icons mapping\nconst CATEGORY_ICONS = {\n  'Art': { icon: FaPaintBrush, label: 'Art Collection' },\n  'gaming': { icon: FaGamepad, label: 'Gaming Assets' },\n  'photography': { icon: FaCamera, label: 'Photography' },\n  'music': { icon: FaMusic, label: 'Music' },\n  'video': { icon: BiMoviePlay, label: 'Video Content' },\n  'collectibles': { icon: GiCrownCoin, label: 'Collectibles' },\n  'sports': { icon: FaGamepad, label: 'Sports' },\n  'other': { icon: FaStar, label: 'Other' }\n};\n\n// Add container variants for staggered animation\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\n// Add item variants for individual card animations\nconst itemVariants = {\n  hidden: { \n    opacity: 0,\n    y: 20\n  },\n  show: { \n    opacity: 1,\n    y: 0,\n    transition: {\n      type: \"spring\",\n      bounce: 0.3\n    }\n  }\n};\n\n// Add these constants near the top of the file\nconst ITEMS_PER_PAGE = 20;\n\nexport default function CollectionsList() {\n  const [collections, setCollections] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    network: 'all',    // 'all', 'sepolia', 'polygon'\n    type: 'all',       // 'all', 'ERC721', 'ERC1155'\n    sortBy: 'newest'   // 'newest', 'oldest', 'name'\n  });\n  const [tokenLogos, setTokenLogos] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const closeTimeoutRef = useRef(null);\n\n  // Add this useEffect to load collections\n  useEffect(() => {\n    const loadCollections = async () => {\n      try {\n        setLoading(true);\n        const fetchedCollections = await getAllCollections({\n          network: filters.network,\n          type: filters.type\n        });\n        setCollections(fetchedCollections);\n      } catch (error) {\n        toast.error('Failed to load collections');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadCollections();\n  }, [filters.network, filters.type]);\n\n  // Filtering and sorting logic\n  const filteredCollections = useMemo(() => {\n    return collections\n      .filter(collection => {\n        // Network filter\n        if (filters.network !== 'all') {\n          if (filters.network === 'unichain-mainnet') {\n            return collection.chainId === 130;\n          } else if (filters.network === 'unichain') {\n            return collection.chainId === 1301;\n          } else if (filters.network === 'sepolia') {\n            return collection.network === 'sepolia' || collection.chainId === 11155111;\n          } else if (filters.network === 'polygon') {\n            return collection.network === 'polygon' || collection.chainId === 137;\n          } else if (filters.network === 'moonwalker') {\n            return collection.network === 'moonwalker' || collection.chainId === 1828369849;\n          } else if (filters.network === 'monad-testnet') {\n            return collection.network === 'monad-testnet' || collection.chainId === 10143;\n          }\n          return false;\n        }\n        \n        // Type filter\n        if (filters.type !== 'all' && collection.type !== filters.type) return false;\n        \n        return true;\n      })\n      .sort((a, b) => {\n        switch (filters.sortBy) {\n          case 'newest':\n            return new Date(b.createdAt) - new Date(a.createdAt);\n          case 'oldest':\n            return new Date(a.createdAt) - new Date(b.createdAt);\n          case 'name':\n            return a.name.localeCompare(b.name);\n          default:\n            return 0;\n        }\n      });\n  }, [collections, filters]);\n\n  // Add this effect to fetch token logos\n  useEffect(() => {\n    const fetchTokenLogos = async () => {\n      for (const collection of filteredCollections) {\n        if (collection?.mintToken?.address) {\n          try {\n            const tokenDeployment = await getTokenDeploymentByAddress(collection.mintToken.address);\n            if (tokenDeployment?.logo) {\n              setTokenLogos(prev => ({\n                ...prev,\n                [collection.mintToken.address.toLowerCase()]: tokenDeployment.logo\n              }));\n            }\n          } catch (error) {\n            // Silently fail - if logo can't be fetched, default will be used\n          }\n        }\n      }\n    };\n\n    fetchTokenLogos();\n  }, [filteredCollections]);\n\n  // Filter controls UI\n  const FilterControls = () => {\n    const [networkDropdownOpen, setNetworkDropdownOpen] = useState(false);\n    const [typeDropdownOpen, setTypeDropdownOpen] = useState(false);\n    const [sortDropdownOpen, setSortDropdownOpen] = useState(false);\n\n    const handleMouseEnter = (setDropdown) => {\n      if (closeTimeoutRef.current) {\n        clearTimeout(closeTimeoutRef.current);\n      }\n      setDropdown(true);\n    };\n\n    const handleMouseLeave = (setDropdown) => {\n      closeTimeoutRef.current = setTimeout(() => {\n        setDropdown(false);\n      }, 300); // 300ms delay before closing\n    };\n\n    const networks = [\n      { value: 'all', label: 'All Networks' },\n      { value: 'sepolia', label: 'Sepolia' },\n      { value: 'unichain-mainnet', label: 'Unichain Mainnet' },\n      { value: 'unichain', label: 'Unichain Testnet' },\n      { value: 'polygon', label: 'Polygon' },\n      { value: 'moonwalker', label: 'Moonwalker' },\n      { value: 'monad-testnet', label: 'Monad Testnet' }\n    ];\n\n    const types = [\n      { value: 'all', label: 'All Types' },\n      { value: 'ERC721', label: 'ERC721' },\n      { value: 'ERC1155', label: 'ERC1155' }\n    ];\n\n    const sortOptions = [\n      { value: 'newest', label: 'Newest First' },\n      { value: 'oldest', label: 'Oldest First' },\n      { value: 'name', label: 'Name A-Z' }\n    ];\n\n    return (\n      <div className=\"flex gap-4 mb-6 relative z-[100]\">\n        {/* Network Dropdown */}\n        <div \n          className=\"relative\"\n          onMouseEnter={() => handleMouseEnter(setNetworkDropdownOpen)}\n          onMouseLeave={() => handleMouseLeave(setNetworkDropdownOpen)}\n        >\n          <button\n            type=\"button\"\n            className=\"bg-white dark:bg-[#0d0e12] border border-gray-300 dark:border-gray-700 rounded-lg px-4 py-2 text-gray-900 dark:text-white focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none min-w-[160px] flex items-center justify-between\"\n          >\n            <span>{networks.find(n => n.value === filters.network)?.label}</span>\n            <svg\n              className={`w-5 h-5 text-gray-500 transition-transform ${networkDropdownOpen ? 'rotate-180' : ''}`}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </button>\n          {networkDropdownOpen && (\n            <div \n              className=\"absolute z-[110] w-full mt-1 bg-white dark:bg-[#0d0e12] rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\"\n              onMouseEnter={() => clearTimeout(closeTimeoutRef.current)}\n              onMouseLeave={() => handleMouseLeave(setNetworkDropdownOpen)}\n            >\n              {networks.map(network => (\n                <button\n                  key={network.value}\n                  onClick={() => {\n                    setFilters(f => ({ ...f, network: network.value }));\n                    setNetworkDropdownOpen(false);\n                  }}\n                  className={`w-full px-4 py-2 text-left hover:bg-gray-50 dark:hover:bg-gray-800 first:rounded-t-lg last:rounded-b-lg transition-colors duration-150 ${\n                    filters.network === network.value ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : 'text-gray-900 dark:text-white'\n                  }`}\n                >\n                  {network.label}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Type Dropdown */}\n        <div \n          className=\"relative\"\n          onMouseEnter={() => handleMouseEnter(setTypeDropdownOpen)}\n          onMouseLeave={() => handleMouseLeave(setTypeDropdownOpen)}\n        >\n          <button\n            type=\"button\"\n            className=\"bg-white dark:bg-[#0d0e12] border border-gray-300 dark:border-gray-700 rounded-lg px-4 py-2 text-gray-900 dark:text-white focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none min-w-[160px] flex items-center justify-between\"\n          >\n            <span>{types.find(t => t.value === filters.type)?.label}</span>\n            <svg\n              className={`w-5 h-5 text-gray-500 transition-transform ${typeDropdownOpen ? 'rotate-180' : ''}`}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </button>\n          {typeDropdownOpen && (\n            <div \n              className=\"absolute z-[110] w-full mt-1 bg-white dark:bg-[#0d0e12] rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\"\n              onMouseEnter={() => clearTimeout(closeTimeoutRef.current)}\n              onMouseLeave={() => handleMouseLeave(setTypeDropdownOpen)}\n            >\n              {types.map(type => (\n                <button\n                  key={type.value}\n                  onClick={() => {\n                    setFilters(f => ({ ...f, type: type.value }));\n                    setTypeDropdownOpen(false);\n                  }}\n                  className={`w-full px-4 py-2 text-left hover:bg-gray-50 dark:hover:bg-gray-800 first:rounded-t-lg last:rounded-b-lg transition-colors duration-150 ${\n                    filters.type === type.value ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : 'text-gray-900 dark:text-white'\n                  }`}\n                >\n                  {type.label}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Sort Dropdown */}\n        <div \n          className=\"relative\"\n          onMouseEnter={() => handleMouseEnter(setSortDropdownOpen)}\n          onMouseLeave={() => handleMouseLeave(setSortDropdownOpen)}\n        >\n          <button\n            type=\"button\"\n            className=\"bg-white dark:bg-[#0d0e12] border border-gray-300 dark:border-gray-700 rounded-lg px-4 py-2 text-gray-900 dark:text-white focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none min-w-[160px] flex items-center justify-between\"\n          >\n            <span>{sortOptions.find(s => s.value === filters.sortBy)?.label}</span>\n            <svg\n              className={`w-5 h-5 text-gray-500 transition-transform ${sortDropdownOpen ? 'rotate-180' : ''}`}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </button>\n          {sortDropdownOpen && (\n            <div \n              className=\"absolute z-[110] w-full mt-1 bg-white dark:bg-[#0d0e12] rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\"\n              onMouseEnter={() => clearTimeout(closeTimeoutRef.current)}\n              onMouseLeave={() => handleMouseLeave(setSortDropdownOpen)}\n            >\n              {sortOptions.map(option => (\n                <button\n                  key={option.value}\n                  onClick={() => {\n                    setFilters(f => ({ ...f, sortBy: option.value }));\n                    setSortDropdownOpen(false);\n                  }}\n                  className={`w-full px-4 py-2 text-left hover:bg-gray-50 dark:hover:bg-gray-800 first:rounded-t-lg last:rounded-b-lg transition-colors duration-150 ${\n                    filters.sortBy === option.value ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : 'text-gray-900 dark:text-white'\n                  }`}\n                >\n                  {option.label}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n    </div>\n  );\n  };\n\n  const getMintStatus = (collection) => {\n    const now = Date.now();\n    const releaseDate = new Date(collection.releaseDate);\n    const mintEndDate = new Date(collection.mintEndDate || Date.now() + 86400000); // Default 24h if not set\n    const timeUntil = releaseDate - now;\n    const timeUntilEnd = mintEndDate - now;\n    \n    // Check if mint has ended\n    if (timeUntilEnd <= 0 || (!collection.infiniteMint && collection.totalMinted >= collection.maxSupply)) {\n      return {\n        label: 'Ended',\n        color: 'text-red-400 bg-red-400/10',\n        icon: BiX\n      };\n    }\n    \n    // Check if mint hasn't started yet\n    if (timeUntil > 0) {\n      if (timeUntil < 3600000) { // Less than 1 hour\n        return {\n          label: `Starts in ${Math.ceil(timeUntil / 60000)}m`,\n          color: 'text-yellow-400 bg-yellow-400/10',\n          icon: BiTime\n        };\n      }\n      return {\n        label: 'Coming Soon',\n        color: 'text-blue-400 bg-blue-400/10',\n        icon: BiTime\n      };\n    }\n\n    // Mint is live\n    return {\n      label: 'Live',\n      color: 'text-green-400 bg-green-400/10',\n      icon: BiCheck\n    };\n  };\n\n  const getCategoryIcon = (category) => {\n    const categoryKey = (category || 'other').toLowerCase();\n    const iconData = CATEGORY_ICONS[categoryKey] || CATEGORY_ICONS.other;\n    \n    return (\n      <div className=\"group relative\">\n        <div className=\"bg-gray-100 dark:bg-[#1a1b1f] p-2 rounded-lg border border-gray-200 dark:border-gray-800\">\n          <iconData.icon className=\"w-4 h-4 text-gray-700 dark:text-[#00ffbd]\" />\n        </div>\n        {/* Tooltip */}\n        <div className=\"absolute bottom-full left-1/2 -translate-x-1/2 mb-2 px-2 py-1 bg-gray-900 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap pointer-events-none\">\n          {category || 'Other'}\n        </div>\n      </div>\n    );\n  };\n\n  // Add this function to render currency logo\n  const renderCurrencyLogo = (collection) => {\n    const tokenAddress = collection?.mintToken?.address?.toLowerCase();\n    const isNativeToken = !tokenAddress || tokenAddress === '0x0000000000000000000000000000000000000000';\n\n    // Handle native tokens based on network\n    if (isNativeToken) {\n      if (collection?.network === 'moonwalker' || collection?.chainId === 1828369849) {\n        return <img src=\"/Zero.png\" alt=\"ZERO\" className=\"w-5 h-5\" />;\n      }\n      if (collection?.network === 'polygon') {\n        return <img src=\"/polygon.png\" alt=\"POL\" className=\"w-5 h-5\" />;\n      }\n      if (collection?.network === 'monad-testnet' || collection?.chainId === 10143) {\n        return <img src=\"/monad.png\" alt=\"MON\" className=\"w-5 h-5\" />;\n      }\n      return <FaEthereum className=\"w-5 h-5 text-[#00ffbd]\" />;\n    }\n\n    // Handle ZERO token by address\n    if (tokenAddress === '0xf4a67fd6f54ff994b7df9013744a79281f88766e') {\n      return <img src=\"/Zero.png\" alt=\"ZERO\" className=\"w-5 h-5\" />;\n    }\n\n    // For other custom tokens with logo\n    const logoUrl = tokenLogos[tokenAddress];\n    if (logoUrl) {\n      return (\n        <img \n          src={logoUrl} \n          alt=\"Token\"\n          className=\"w-5 h-5 rounded-full\"\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = '/token-default.png';\n          }}\n        />\n      );\n    }\n    \n    // Default fallback\n    return <img src=\"/token-default.png\" alt=\"Token\" className=\"w-5 h-5 rounded-full\" />;\n  };\n\n  // Add skeleton card component\n  const SkeletonCard = () => (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      className=\"relative\"\n    >\n      <div className=\"relative\">\n        {/* L-shaped corners */}\n        <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n          <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n          <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n        </div>\n        <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n          <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n          <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n        </div>\n        <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n          <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n          <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n        </div>\n        <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n          <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n          <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n        </div>\n\n        {/* Glowing dots */}\n        <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n        <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n        <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n        <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n        {/* Three dots */}\n        <div className=\"absolute top-3 right-3 flex gap-1 z-20\">\n          {[1, 2, 3].map((i) => (\n            <div\n              key={i}\n              className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n              style={{ animationDelay: `${i * 0.2}s` }}\n            />\n          ))}\n        </div>\n\n        {/* Main Content */}\n        <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] h-[340px]\">\n          {/* Image skeleton */}\n          <div className=\"h-[180px] w-full bg-gray-200 dark:bg-gray-800 animate-pulse\" />\n\n          {/* Type badge skeleton */}\n          <div className=\"absolute top-3 left-3 z-10\">\n            <div className=\"w-16 h-5 bg-gray-300 dark:bg-gray-700 rounded-full animate-pulse\" />\n          </div>\n\n          {/* Status badge skeleton */}\n          <div className=\"absolute top-3 right-3 z-10\">\n            <div className=\"w-20 h-5 bg-gray-300 dark:bg-gray-700 rounded-full animate-pulse\" />\n          </div>\n\n          {/* Content section */}\n          <div className=\"p-4\">\n            {/* Title and description */}\n            <div className=\"mb-3\">\n              <div className=\"h-6 w-3/4 bg-gray-200 dark:bg-gray-800 rounded animate-pulse mb-2\" />\n              <div className=\"h-4 w-full bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n            </div>\n\n            {/* Price section */}\n            <div className=\"flex items-center justify-between mb-3\">\n              <div className=\"w-8 h-8 bg-gray-200 dark:bg-gray-800 rounded-lg animate-pulse\" />\n              <div className=\"w-24 h-8 bg-gray-200 dark:bg-gray-800 rounded-lg animate-pulse\" />\n            </div>\n\n            {/* Supply and Minted */}\n            <div className=\"grid grid-cols-2 gap-2\">\n              <div className=\"h-10 bg-gray-200 dark:bg-gray-800 rounded-lg animate-pulse\" />\n              <div className=\"h-10 bg-gray-200 dark:bg-gray-800 rounded-lg animate-pulse\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n\n  // Add pagination calculation\n  const paginatedCollections = useMemo(() => {\n    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\n    const endIndex = startIndex + ITEMS_PER_PAGE;\n    return filteredCollections.slice(startIndex, endIndex);\n  }, [filteredCollections, currentPage]);\n\n  const totalPages = Math.ceil(filteredCollections.length / ITEMS_PER_PAGE);\n\n  // Add pagination controls component\n  const PaginationControls = () => (\n    <div className=\"flex items-center justify-between py-4 border-t border-gray-200 dark:border-gray-800\">\n      <div className=\"flex items-center gap-2\">\n        <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n          Showing {((currentPage - 1) * ITEMS_PER_PAGE) + 1} to {Math.min(currentPage * ITEMS_PER_PAGE, filteredCollections.length)} of {filteredCollections.length} collections\n        </span>\n      </div>\n      \n      <div className=\"flex items-center gap-2\">\n        <button\n          onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n          disabled={currentPage === 1}\n          className=\"p-2 rounded-lg border border-gray-200 dark:border-gray-700 disabled:opacity-50 \n            disabled:cursor-not-allowed hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors\"\n        >\n          <ChevronLeftIcon className=\"w-5 h-5 text-gray-600 dark:text-gray-300\" />\n        </button>\n        \n        <div className=\"flex items-center gap-1\">\n          {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\n            <button\n              key={page}\n              onClick={() => setCurrentPage(page)}\n              className={`\n                w-8 h-8 rounded-lg text-sm font-medium transition-colors\n                ${currentPage === page \n                  ? 'bg-[#00ffbd] text-gray-900' \n                  : 'text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800'\n                }\n              `}\n            >\n              {page}\n            </button>\n          ))}\n        </div>\n\n        <button\n          onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n          disabled={currentPage === totalPages}\n          className=\"p-2 rounded-lg border border-gray-200 dark:border-gray-700 disabled:opacity-50 \n            disabled:cursor-not-allowed hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors\"\n        >\n          <ChevronRightIcon className=\"w-5 h-5 text-gray-600 dark:text-gray-300\" />\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"h-screen flex flex-col overflow-hidden pt-16\">\n      <div className=\"max-w-7xl mx-auto w-full px-8 flex-shrink-0\">\n        <motion.div \n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"flex flex-col gap-2 py-2 bg-gray-50 dark:bg-[#0a0b0f] sticky top-16 z-[100]\"\n        >\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Collections</h1>\n          <FilterControls />\n        </motion.div>\n      </div>\n        \n      <div className=\"flex-1 overflow-y-auto px-8 custom-scrollbar bg-white dark:bg-[#0a0b0f] relative z-0\">\n        <div className=\"max-w-7xl mx-auto\">\n          <motion.div \n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"show\"\n            className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6 pt-2\"\n          >\n            {loading ? (\n              Array.from({ length: ITEMS_PER_PAGE }).map((_, index) => (\n                <SkeletonCard key={index} />\n              ))\n            ) : (\n              paginatedCollections.map((collection) => {\n                const status = getMintStatus(collection);\n                \n                return (\n                  <motion.div\n                    key={collection.symbol}\n                    variants={itemVariants}\n                    whileHover={{ \n                      scale: 1.02,\n                      transition: { duration: 0.2 }\n                    }}\n                    whileTap={{ scale: 0.98 }}\n                  >\n                    <Link \n                      to={`/collection/${collection.symbol}`}\n                      className=\"block\"\n                    >\n                      <div className=\"relative\">\n                        {/* L-shaped corners */}\n                        <motion.div \n                          className=\"absolute -top-[2px] -left-[2px] w-8 h-8\"\n                          initial={{ opacity: 0 }}\n                          animate={{ opacity: 1 }}\n                          transition={{ delay: 0.2 }}\n                        >\n                          <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n                          <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n                        </motion.div>\n                        <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n                          <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n                          <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n                        </div>\n                        <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n                          <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n                          <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n                        </div>\n                        <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n                          <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n                          <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n                        </div>\n\n                        {/* Glowing dots in corners */}\n                        <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n                        <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n                        <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n                        <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n                        {/* Three dots in top right */}\n                        <div className=\"absolute top-3 right-3 flex gap-1 z-20\">\n                          {[1, 2, 3].map((i) => (\n                            <div\n                              key={i}\n                              className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n                              style={{ animationDelay: `${i * 0.2}s` }}\n                            />\n                          ))}\n                        </div>\n\n                        {/* Main Content */}\n                        <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] h-[340px]\">\n                          {/* Image section with fade-in animation */}\n                          <motion.div \n                            className=\"relative h-[180px] w-full overflow-hidden\"\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            transition={{ duration: 0.3 }}\n                          >\n                            {collection.artworkType === 'video' ? (\n                              <video \n                                src={collection.previewUrl}\n                                className=\"w-full h-full object-cover\"\n                                autoPlay\n                                muted\n                                loop\n                                playsInline\n                              />\n                            ) : (\n                              <img \n                                src={collection.previewUrl}\n                                alt={collection.name}\n                                className=\"w-full h-full object-cover\"\n                              />\n                            )}\n                          </motion.div>\n\n                          {/* Type badge */}\n                          <div className=\"absolute top-3 left-3 z-10\">\n                            <div className=\"bg-[#0d0e12]/80 backdrop-blur-sm text-white px-2 py-0.5 rounded-full text-xs\">\n                              {collection.type || 'ERC721'}\n                            </div>\n                          </div>\n\n                          {/* Status badge */}\n                          <div className=\"absolute top-3 right-3 z-10\">\n                            <div className={`flex items-center gap-1 px-2 py-0.5 rounded-full text-xs font-medium ${status.color}`}>\n                              <status.icon size={12} />\n                              <span>{status.label}</span>\n                            </div>\n                          </div>\n\n                          {/* Content section */}\n                          <motion.div \n                            className=\"flex flex-col flex-1 p-4\"\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            transition={{ delay: 0.2 }}\n                          >\n                            <div className=\"mb-3\">\n                              <div className=\"flex items-center justify-between gap-2 mb-1 w-full\">\n                                <h3 className=\"text-base font-semibold text-gray-900 dark:text-white truncate flex-shrink min-w-0\">\n                                  {collection.name}\n                                </h3>\n                                {collection.enableWhitelist && (\n                                  <div className=\"flex items-center gap-1 bg-[#00ffbd]/10 px-1.5 py-0.5 rounded-full flex-shrink-0 ml-auto\">\n                                    <span role=\"img\" aria-label=\"crown\" className=\"text-[10px]\">👑</span>\n                                    <span className=\"text-[10px] font-medium text-[#00ffbd]\">Whitelist Mint</span>\n                                  </div>\n                                )}\n                              </div>\n                              <p className=\"text-gray-500 dark:text-gray-400 text-xs truncate\">\n                                {collection.description}\n                              </p>\n                            </div>\n\n                            <div className=\"flex items-center justify-between mb-3\">\n                              {getCategoryIcon(collection.category)}\n                              <div className=\"flex items-center gap-1.5 bg-gray-50 dark:bg-[#1a1b1f] px-3 py-1.5 rounded-lg border border-gray-200 dark:border-gray-800\">\n                                {renderCurrencyLogo(collection)}\n                                <span className=\"text-xs font-medium text-gray-900 dark:text-white\">\n                                  {collection.mintPrice}\n                                </span>\n                              </div>\n                            </div>\n\n                            {/* Add Supply and Minted containers - horizontal layout */}\n                            <div className=\"grid grid-cols-2 gap-2\">\n                              <div className=\"bg-gray-50 dark:bg-[#1a1b1f] px-2 py-1 rounded-lg border border-gray-200 dark:border-gray-800\">\n                                <div className=\"flex items-center justify-between\">\n                                  <span className=\"text-[10px] text-gray-500 dark:text-gray-400\">Supply</span>\n                                  <span className=\"text-xs font-medium text-gray-900 dark:text-white\">\n                                    {collection.maxSupply || 0}\n                                  </span>\n                                </div>\n                              </div>\n                              <div className=\"bg-gray-50 dark:bg-[#1a1b1f] px-2 py-1 rounded-lg border border-gray-200 dark:border-gray-800\">\n                                <div className=\"flex items-center justify-between\">\n                                  <span className=\"text-[10px] text-gray-500 dark:text-gray-400\">Minted</span>\n                                  <span className=\"text-xs font-medium text-gray-900 dark:text-white\">\n                                    {collection.totalMinted || 0}\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                          </motion.div>\n                        </div>\n                      </div>\n                    </Link>\n                  </motion.div>\n                );\n              })\n            )}\n          </motion.div>\n          \n          {/* Add pagination controls */}\n          {!loading && filteredCollections.length > ITEMS_PER_PAGE && (\n            <PaginationControls />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} ","import { mintsRef, holdersRef, mintersRef, volumeRef } from './firebase';\nimport { collection, query, where, orderBy, limit as firestoreLimit, onSnapshot, getDocs, addDoc, serverTimestamp } from 'firebase/firestore';\n\nconst ALCHEMY_API_KEY = import.meta.env.VITE_ALCHEMY_API_KEY;\n\n// Chain-specific Alchemy URLs\nconst ALCHEMY_URLS = {\n  'ethereum': 'https://eth-mainnet.g.alchemy.com/v2/',\n  'sepolia': 'https://eth-sepolia.g.alchemy.com/v2/',\n  'polygon': 'https://polygon-mainnet.g.alchemy.com/v2/',\n  'unichain': 'https://eth-sepolia.g.alchemy.com/v2/',\n};\n\n// Get ETH price (mock for Sepolia testnet)\nexport const getEthPrice = async () => {\n  return 2000; // Mock price for testing\n};\n\nexport const getRecentMints = async (collectionAddress, maxResults = 50) => {\n  try {\n    const q = query(\n      mintsRef,\n      where('collectionAddress', '==', collectionAddress),\n      orderBy('timestamp', 'desc'),\n      firestoreLimit(maxResults)\n    );\n\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => {\n      const data = doc.data();\n      return {\n        id: doc.id,\n        ...data,\n        tokenId: data.tokenId.toString().replace(/[^0-9]/g, ''), // Clean tokenId when retrieving\n        timestamp: data.timestamp?.toDate()\n      };\n    });\n  } catch (error) {\n    return [];\n  }\n};\n\n// Get top holders for a collection using Alchemy API\nexport const getTopHolders = async (collectionAddress, maxResults = 50, network = 'sepolia') => {\n  try {\n    // Map network name to Alchemy URL key\n    const networkKey = network === 'unichain' ? 'unichain' : \n                      network === 'polygon' ? 'polygon' : 'sepolia';\n    \n    // Get the correct Alchemy URL for the network\n    const baseUrl = ALCHEMY_URLS[networkKey];\n    if (!baseUrl) {\n      console.warn('Unsupported network for Alchemy:', network);\n      return fallbackToFirebase(collectionAddress, maxResults);\n    }\n\n    // Use Alchemy API to get holders\n    const alchemyUrl = `${baseUrl}${ALCHEMY_API_KEY}/getOwnersForCollection?contractAddress=${collectionAddress}&withTokenBalances=true`;\n    \n    const response = await fetch(alchemyUrl);\n    const data = await response.json();\n    \n    if (data.owners) {\n      // Transform Alchemy data into our format\n      const holders = data.owners\n        .map(owner => ({\n          holderAddress: owner.ownerAddress,\n          quantity: owner.tokenBalances.reduce((sum, token) => sum + Number(token.balance), 0),\n          lastUpdated: new Date()\n        }))\n        .sort((a, b) => b.quantity - a.quantity)\n        .slice(0, maxResults);\n\n      // Cache the data in Firebase\n      await updateHoldersCache(collectionAddress, holders);\n\n      return holders;\n    }\n\n    return fallbackToFirebase(collectionAddress, maxResults);\n  } catch (error) {\n    console.error('Error getting top holders:', error);\n    return fallbackToFirebase(collectionAddress, maxResults);\n  }\n};\n\n// Helper function to update holders cache in Firebase\nconst updateHoldersCache = async (collectionAddress, holders) => {\n  try {\n    for (const holder of holders) {\n      const holderRef = query(\n        holdersRef,\n        where('collectionAddress', '==', collectionAddress),\n        where('holderAddress', '==', holder.holderAddress)\n      );\n      \n      const holderSnapshot = await getDocs(holderRef);\n      \n      if (holderSnapshot.empty) {\n        await addDoc(holdersRef, {\n          collectionAddress,\n          holderAddress: holder.holderAddress,\n          quantity: holder.quantity,\n          lastUpdated: serverTimestamp()\n        });\n      } else {\n        // Update existing holder data if it's outdated\n        const holderDoc = holderSnapshot.docs[0];\n        const lastUpdated = holderDoc.data().lastUpdated?.toDate();\n        if (!lastUpdated || (new Date() - lastUpdated) > 5 * 60 * 1000) { // 5 minutes cache\n          await holderDoc.ref.update({\n            quantity: holder.quantity,\n            lastUpdated: serverTimestamp()\n          });\n        }\n      }\n    }\n  } catch (error) {\n    // Handle error silently\n  }\n};\n\n// Helper function for Firebase fallback\nconst fallbackToFirebase = async (collectionAddress, maxResults) => {\n  const q = query(\n    holdersRef,\n    where('collectionAddress', '==', collectionAddress),\n    orderBy('quantity', 'desc'),\n    firestoreLimit(maxResults)\n  );\n\n  const snapshot = await getDocs(q);\n  return snapshot.docs.map(doc => ({\n    id: doc.id,\n    ...doc.data()\n  }));\n};\n\n// Get chad minters (frequent minters)\nexport const getChadMinters = async (collectionAddress, maxResults = 10) => {\n  try {\n    const q = query(\n      mintersRef,\n      where('collectionAddress', '==', collectionAddress),\n      orderBy('totalMinted', 'desc'),\n      firestoreLimit(maxResults)\n    );\n\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    return [];\n  }\n};\n\n// Get volume metrics\nexport const getVolumeMetrics = async (collectionAddress, timeRange = '7d') => {\n  try {\n    const ranges = {\n      '24h': 1,\n      '7d': 7,\n      '30d': 30,\n      'all': 365\n    };\n\n    const days = ranges[timeRange];\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n\n    const q = query(\n      volumeRef,\n      where('collectionAddress', '==', collectionAddress),\n      where('timestamp', '>=', startDate),\n      orderBy('timestamp', 'desc')\n    );\n\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const subscribeToMints = (collectionAddress, callback) => {\n  try {\n    const q = query(\n      mintsRef,\n      where('collectionAddress', '==', collectionAddress),\n      orderBy('timestamp', 'desc'),\n      firestoreLimit(50)\n    );\n\n    return onSnapshot(q, (snapshot) => {\n      const mints = snapshot.docs.map(doc => {\n        const data = doc.data();\n        return {\n          id: doc.id,\n          ...data,\n          tokenId: data.tokenId?.toString() || '0', // Preserve the original token ID\n          timestamp: data.timestamp?.toDate()\n        };\n      });\n      \n      callback(mints);\n    });\n  } catch (error) {\n    callback([]);\n    return () => {};\n  }\n};\n\nexport const saveMintData = async (mintData) => {\n  try {\n    // Store the tokenId as-is without cleaning\n    const docRef = await addDoc(mintsRef, {\n      ...mintData,\n      timestamp: serverTimestamp()\n    });\n    \n    return docRef;\n  } catch (error) {\n    throw error;\n  }\n};\n  ","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport { FaEthereum } from 'react-icons/fa';\nimport { BiCopy } from 'react-icons/bi';\nimport { toast } from 'react-hot-toast';\nimport { getRecentMints, subscribeToMints } from '../../../services/analytics';\nimport { useParams } from 'react-router-dom';\nimport { getCollection, getTokenDeploymentByAddress } from '../../../services/firebase';\nimport { ethers } from 'ethers';\nimport { ipfsToHttp } from '../../../utils/ipfs';\n\nexport default function RecentMints() {\n  const [mints, setMints] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const { symbol } = useParams();\n  const [collection, setCollection] = useState(null);\n  const [tokenLogos, setTokenLogos] = useState({});\n  const [displayLimit, setDisplayLimit] = useState(50);\n  const loaderRef = useRef(null);\n\n  // Intersection Observer callback\n  const handleObserver = useCallback((entries) => {\n    const target = entries[0];\n    if (target.isIntersecting && !loadingMore && hasMore) {\n      handleLoadMore();\n    }\n  }, [loadingMore, hasMore]);\n\n  // Set up the intersection observer\n  useEffect(() => {\n    const option = {\n      root: null,\n      rootMargin: \"20px\",\n      threshold: 0\n    };\n    const observer = new IntersectionObserver(handleObserver, option);\n    if (loaderRef.current) observer.observe(loaderRef.current);\n    \n    return () => {\n      if (loaderRef.current) observer.unobserve(loaderRef.current);\n    };\n  }, [handleObserver]);\n\n  useEffect(() => {\n    const loadCollection = async () => {\n      try {\n        const collectionData = await getCollection(symbol);\n        setCollection(collectionData);\n        \n        if (collectionData?.contractAddress) {\n          // Initial fetch\n          const recentMints = await getRecentMints(collectionData.contractAddress, displayLimit);\n\n          // Get token deployment data for the payment token\n          if (collectionData.mintToken?.address) {\n            const tokenAddress = collectionData.mintToken.address;\n            const tokenDeployment = await getTokenDeploymentByAddress(tokenAddress);\n            \n            if (tokenDeployment?.logo) {\n              setTokenLogos(prev => ({\n                ...prev,\n                [tokenAddress]: tokenDeployment.logo\n              }));\n            }\n          }\n\n          setMints(recentMints.map(mint => ({\n            ...mint,\n            artworkType: collectionData.artworkType,\n            tokenName: collectionData.name,\n            tokenId: mint.tokenId\n          })));\n          setLoading(false);\n\n          // Subscribe to real-time updates\n          const unsubscribe = subscribeToMints(collectionData.contractAddress, (updatedMints) => {\n            setMints(prevMints => {\n              // Merge new mints with existing ones, avoiding duplicates\n              const existingIds = new Set(prevMints.map(m => m.id));\n              const newMints = updatedMints.filter(m => !existingIds.has(m.id));\n              return [...newMints, ...prevMints].slice(0, displayLimit);\n            });\n          });\n\n          return () => unsubscribe();\n        }\n      } catch (error) {\n        setLoading(false);\n      }\n    };\n\n    loadCollection();\n  }, [symbol, displayLimit]);\n\n  const handleLoadMore = async () => {\n    if (!collection?.contractAddress || loadingMore || !hasMore) return;\n\n    setLoadingMore(true);\n    try {\n      const newLimit = displayLimit + 50;\n      const moreMints = await getRecentMints(collection.contractAddress, newLimit);\n      \n      if (moreMints.length === mints.length) {\n        setHasMore(false);\n      } else {\n        setMints(moreMints.map(mint => ({\n          ...mint,\n          artworkType: collection.artworkType,\n          tokenName: collection.name,\n          tokenId: mint.tokenId\n        })));\n        setDisplayLimit(newLimit);\n      }\n    } catch (error) {\n      toast.error('Failed to load more mints');\n    } finally {\n      setLoadingMore(false);\n    }\n  };\n\n  const formatValue = (value) => {\n    try {\n      if (!value) return '0';\n      \n      // For custom tokens, we don't need to convert from Wei\n      if (collection?.mintToken?.type === 'custom' || \n          collection?.mintToken?.type === 'usdc' || \n          collection?.mintToken?.type === 'usdt') {\n        return parseFloat(value).toLocaleString('en-US', {\n          maximumFractionDigits: 6,\n          minimumFractionDigits: 0\n        });\n      }\n      \n      // For native tokens (ETH/MATIC/ZERO/MON), convert from Wei\n      let valueInWei;\n      if (typeof value === 'string') {\n        const cleanValue = value.replace(/,/g, '');\n        try {\n          valueInWei = ethers.parseUnits(cleanValue, 'wei');\n        } catch {\n          valueInWei = ethers.parseEther(cleanValue);\n        }\n      } else {\n        valueInWei = BigInt(value.toString());\n      }\n\n      const ethValue = ethers.formatEther(valueInWei);\n      const floatValue = parseFloat(ethValue);\n\n      if (isNaN(floatValue)) return '0';\n      \n      return floatValue.toLocaleString('en-US', {\n        maximumFractionDigits: 6,\n        minimumFractionDigits: 0\n      });\n    } catch (error) {\n      return '0';\n    }\n  };\n\n  const renderMedia = (mint) => {\n    const imageUrl = ipfsToHttp(mint.image);\n\n    if (mint.artworkType === 'video') {\n      return (\n        <div className=\"relative w-12 h-12 rounded-lg overflow-hidden bg-black\">\n          <video\n            src={imageUrl}\n            className=\"w-full h-full object-cover\"\n            autoPlay\n            muted\n            loop\n            playsInline\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"relative w-12 h-12 rounded-lg overflow-hidden bg-black\">\n        <img\n          src={imageUrl}\n          alt=\"NFT\"\n          className=\"w-full h-full object-cover\"\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = '/placeholder.png';\n          }}\n        />\n      </div>\n    );\n  };\n\n  const renderTokenInfo = (mint) => {\n    const explorerUrl = mint.network === 'polygon' \n      ? 'https://polygonscan.com' \n      : mint.network === 'unichain-mainnet' || mint.chainId === 130\n        ? 'https://unichain.blockscout.com'\n        : mint.network === 'unichain' \n          ? 'https://unichain-sepolia.blockscout.com'\n          : mint.network === 'moonwalker' || mint.chainId === 1828369849\n            ? 'https://moonwalker-blockscout.eu-north-2.gateway.fm'\n            : mint.network === 'monad-testnet' || mint.chainId === 10143\n              ? 'https://monad-testnet.socialscan.io'\n              : 'https://sepolia.etherscan.io';\n\n    return (\n      <div className=\"flex items-center gap-2 text-sm text-gray-400\">\n        <a\n          href={`${explorerUrl}/token/${mint.collectionAddress}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"hover:text-[#00ffbd] transition-colors\"\n        >\n          token id\n        </a>\n      </div>\n    );\n  };\n\n  const renderTimeWithHash = (mint) => {\n    const explorerUrl = mint.network === 'polygon' \n      ? 'https://polygonscan.com' \n      : mint.network === 'unichain-mainnet' || mint.chainId === 130\n        ? 'https://unichain.blockscout.com'\n        : mint.network === 'unichain' \n          ? 'https://unichain-sepolia.blockscout.com'\n          : mint.network === 'moonwalker' || mint.chainId === 1828369849\n            ? 'https://moonwalker-blockscout.eu-north-2.gateway.fm'\n            : mint.network === 'monad-testnet' || mint.chainId === 10143\n              ? 'https://monad-testnet.socialscan.io'\n              : 'https://sepolia.etherscan.io';\n\n    return (\n      <div className=\"text-sm text-gray-400\">\n        <a\n          href={`${explorerUrl}/tx/${mint.hash}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"hover:text-[#00ffbd] transition-colors\"\n        >\n          {mint.timestamp ? formatDistanceToNow(mint.timestamp, { addSuffix: true }) : 'Just now'}\n        </a>\n      </div>\n    );\n  };\n\n  const renderCurrencyLogo = (mint) => {\n    const tokenAddress = mint?.paymentToken?.address?.toLowerCase();\n    const isNativeToken = !tokenAddress || tokenAddress === '0x0000000000000000000000000000000000000000';\n\n    // Handle native tokens based on network\n    if (isNativeToken) {\n      if (mint.network === 'moonwalker' || mint.chainId === 1828369849) {\n        return <img src=\"/Zero.png\" alt=\"ZERO\" className=\"w-6 h-6\" />;\n      }\n      if (mint.network === 'polygon') {\n        return <img src=\"/polygon.png\" alt=\"POL\" className=\"w-6 h-6\" />;\n      }\n      if (mint.network === 'monad-testnet' || mint.chainId === 10143) {\n        return <img src=\"/monad.png\" alt=\"MON\" className=\"w-6 h-6\" />;\n      }\n      return <FaEthereum className=\"w-6 h-6 text-[#00ffbd]\" />;\n    }\n\n    // Handle ZERO token by address\n    if (tokenAddress === '0xf4a67fd6f54ff994b7df9013744a79281f88766e') {\n      return <img src=\"/Zero.png\" alt=\"ZERO\" className=\"w-6 h-6\" />;\n    }\n\n    // For custom tokens with logo\n    if (tokenAddress && tokenLogos[tokenAddress]) {\n      return (\n        <img \n          src={tokenLogos[tokenAddress]}\n          alt={mint.paymentToken.symbol || 'Token'}\n          className=\"w-6 h-6 rounded-full\"\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = '/token-default.png';\n          }}\n        />\n      );\n    }\n    \n    // Default to token-default.png for custom tokens without logo\n    if (mint.paymentToken?.type === 'custom') {\n      return <img src=\"/token-default.png\" alt=\"Token\" className=\"w-6 h-6 rounded-full\" />;\n    }\n    \n    return <FaEthereum className=\"w-6 h-6 text-[#00ffbd]\" />;\n  };\n\n  // Update the useEffect to fetch logos for all payment tokens\n  useEffect(() => {\n    const fetchTokenLogos = async () => {\n      for (const mint of mints) {\n        if (mint?.paymentToken?.address && !tokenLogos[mint.paymentToken.address.toLowerCase()]) {\n          try {\n            const tokenDeployment = await getTokenDeploymentByAddress(mint.paymentToken.address);\n            if (tokenDeployment?.logo) {\n              setTokenLogos(prev => ({\n                ...prev,\n                [mint.paymentToken.address.toLowerCase()]: tokenDeployment.logo\n              }));\n            }\n          } catch (error) {\n            console.error('Error fetching token logo:', error);\n          }\n        }\n      }\n    };\n\n    fetchTokenLogos();\n  }, [mints]);\n\n  if (loading) {\n    return <div className=\"text-gray-400\">Loading...</div>;\n  }\n\n  if (!mints.length) {\n    return <div className=\"text-gray-400\">No mints yet</div>;\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\">\n      <div className=\"space-y-4\">\n        <div \n          className=\"overflow-y-auto\" \n          style={{ \n            height: '600px',\n            paddingRight: '8px',\n            scrollbarWidth: 'thin',\n            scrollbarColor: '#00ffbd transparent',\n            marginBottom: '-16px'\n          }}\n          css={`\n            &::-webkit-scrollbar {\n              width: 4px;\n            }\n            &::-webkit-scrollbar-track {\n              background: transparent;\n            }\n            &::-webkit-scrollbar-thumb {\n              background-color: #00ffbd;\n              border-radius: 20px;\n            }\n          `}\n        >\n          {mints.map((mint) => (\n            <div \n              key={mint.id} \n              className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800 min-h-[100px] hover:border-[#00ffbd] transition-colors duration-200 mb-4 last:mb-0\"\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  {renderMedia(mint)}\n                  <div>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-gray-800 dark:text-white font-medium\">\n                        {mint.quantity}x {mint.tokenName || 'Token'}\n                      </span>\n                    </div>\n                    <div className=\"flex flex-col\">\n                      <div className=\"flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400\">\n                        <span>by</span>\n                        <button \n                          onClick={() => {\n                            navigator.clipboard.writeText(mint.minterAddress);\n                            toast.success('Address copied!');\n                          }}\n                          className=\"flex items-center gap-1 hover:text-[#00ffbd] transition-colors\"\n                        >\n                          {mint.minterAddress.slice(0, 6)}...{mint.minterAddress.slice(-4)}\n                          <BiCopy size={14} />\n                        </button>\n                      </div>\n                      {renderTokenInfo(mint)}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex flex-col items-end gap-2\">\n                  <div className=\"flex items-center gap-1 text-[#00ffbd]\">\n                    {renderCurrencyLogo(mint)}\n                    <span className=\"font-medium\">{formatValue(mint.value)}</span>\n                  </div>\n                  {renderTimeWithHash(mint)}\n                </div>\n              </div>\n            </div>\n          ))}\n          \n          {/* Hidden loader for infinite scroll */}\n          <div \n            ref={loaderRef}\n            className=\"h-0 opacity-0\"\n            aria-hidden=\"true\"\n          />\n\n          {/* Loading Spinner - Moved inside the scroll container */}\n          {loadingMore && (\n            <div className=\"flex justify-center py-2\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#00ffbd]\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { BiCopy } from 'react-icons/bi';\nimport { toast } from 'react-hot-toast';\nimport { AreaChart, Area, BarChart, Bar, PieChart, Pie, Cell, ResponsiveContainer, Tooltip, XAxis } from 'recharts';\nimport { FaCrown } from 'react-icons/fa';\nimport { RiMedalFill } from 'react-icons/ri';\nimport { ethers } from 'ethers';\n\n// Get API key from environment variables\nconst ALCHEMY_API_KEY = import.meta.env.VITE_ALCHEMY_API_KEY;\n\n// Add error checking for API key\nif (!ALCHEMY_API_KEY) {\n  console.error('VITE_ALCHEMY_API_KEY is not set in environment variables');\n}\n\nconst ALCHEMY_URLS = {\n  'ethereum': 'https://eth-mainnet.g.alchemy.com/v2/',\n  'sepolia': 'https://eth-sepolia.g.alchemy.com/v2/',\n  'polygon': 'https://polygon-mainnet.g.alchemy.com/v2/',\n  'mumbai': 'https://polygon-mumbai.g.alchemy.com/v2/',\n  'arbitrum': 'https://arb-mainnet.g.alchemy.com/v2/',\n  'optimism': 'https://opt-mainnet.g.alchemy.com/v2/',\n  'unichain': 'https://unichain-sepolia.g.alchemy.com/v2/',\n  'unichain-mainnet': 'https://unichain.blockscout.com/v2/'\n};\n\n// Network RPC URLs\nconst NETWORK_RPC_URLS = {\n  'moonwalker': 'https://moonwalker-rpc.eu-north-2.gateway.fm',\n  'unichain': 'https://sepolia.unichain.org',\n  'unichain-mainnet': 'https://unichain.blockscout.com',\n  'monad-testnet': 'https://testnet-rpc.monad.xyz/'\n};\n\nconst formatAddress = (address) => {\n  if (!address || typeof address !== 'string') return 'Invalid Address';\n  // Ensure the address is properly formatted with 0x prefix\n  const formattedAddress = address.startsWith('0x') ? address : `0x${address}`;\n  return `${formattedAddress.substring(0, 6)}...${formattedAddress.substring(formattedAddress.length - 4)}`;\n};\n\nconst getBadgeIcon = (index) => {\n  switch (index) {\n    case 0:\n      return <FaCrown className=\"text-yellow-400\" size={24} />;\n    case 1:\n      return <RiMedalFill className=\"text-gray-300\" size={24} />;\n    case 2:\n      return <RiMedalFill className=\"text-amber-600\" size={24} />;\n    default:\n      return null;\n  }\n};\n\nconst CustomTooltip = ({ active, payload, type }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"bg-[#1a1b1f] p-2 rounded-lg border border-gray-800\">\n        {type === 'pie' ? (\n          <p className=\"text-[#00ffbd] text-xs\">{`${payload[0].name}: ${payload[0].value} NFTs`}</p>\n        ) : type === 'bar' ? (\n          <div className=\"text-xs\">\n            <p className=\"text-white\">{payload[0].payload.label}</p>\n            <p className=\"text-[#00ffbd]\">{payload[0].value} holders</p>\n          </div>\n        ) : (\n          <p className=\"text-[#00ffbd] text-xs\">{`${payload[0].value} NFTs`}</p>\n        )}\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default function TopHolders({ collection }) {\n  const [holders, setHolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if it's Monad Testnet\n  if (collection?.network === 'monad-testnet' || collection?.chainId === 10143) {\n    return (\n      <div className=\"flex items-center justify-center py-12 bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\">\n        <div className=\"text-center\">\n          <h3 className=\"text-xl font-medium text-gray-900 dark:text-white mb-2\">Coming Soon</h3>\n          <p className=\"text-gray-500 dark:text-gray-400\">Top holders analytics for Monad Testnet are under development.</p>\n        </div>\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        if (!collection?.contractAddress) {\n          throw new Error('No contract address available');\n        }\n\n        // Special handling for Unichain networks\n        if (collection.chainId === 130 || collection.chainId === 1301) {\n          await loadUnichainHolders(collection.contractAddress);\n          return;\n        }\n\n        // Special handling for Moonwalker network\n        if (collection.network === 'moonwalker' || collection.chainId === 1828369849) {\n          await loadMoonwalkerHolders(collection.contractAddress);\n          return;\n        }\n\n        // Special handling for Monad Testnet\n        if (collection.network === 'monad-testnet' || collection.chainId === 10143) {\n          await loadMonadHolders(collection.contractAddress);\n          return;\n        }\n\n        // Check for API key first\n        if (!ALCHEMY_API_KEY) {\n          throw new Error('Alchemy API key is not configured');\n        }\n\n        // Map network name to Alchemy URL key for other networks\n        const networkKey = collection.network === 'polygon' ? 'polygon' : 'sepolia';\n        \n        const baseUrl = ALCHEMY_URLS[networkKey];\n        if (!baseUrl) {\n          throw new Error(`Unsupported network: ${collection.network}`);\n        }\n\n        const contractAddress = collection.contractAddress;\n        console.log('Using contract address:', contractAddress);\n\n        const alchemyUrl = `${baseUrl}${ALCHEMY_API_KEY}/getOwnersForCollection?contractAddress=${contractAddress}&withTokenBalances=true`;\n        const response = await fetch(alchemyUrl);\n        \n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Alchemy API error (${response.status}): ${errorText}`);\n        }\n\n        const data = await response.json();\n        \n        if (!data?.ownerAddresses) {\n          throw new Error('Invalid response format from Alchemy API');\n        }\n\n        const holdersData = data.ownerAddresses\n          .filter(owner => owner && typeof owner === 'object' && owner.ownerAddress)\n          .map(owner => ({\n            holderAddress: owner.ownerAddress,\n            quantity: Array.isArray(owner.tokenBalances) \n              ? owner.tokenBalances.reduce((sum, token) => sum + Number(token.balance || 0), 0)\n              : 0\n          }))\n          .filter(holder => holder.quantity > 0)\n          .sort((a, b) => b.quantity - a.quantity);\n\n        setHolders(holdersData);\n        setError(null);\n      } catch (error) {\n        console.error('Error loading holders:', error);\n        setError(error.message);\n        toast.error(`Failed to load top holders: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Function to load ERC721 holders\n    const loadERC721Holders = async (contractAddress, provider) => {\n      const erc721Interface = ['event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)'];\n      const erc721Contract = new ethers.Contract(contractAddress, erc721Interface, provider);\n      \n      const events = await erc721Contract.queryFilter('Transfer', 0, 'latest');\n      \n      // Track current token ownership\n      const tokenOwners = new Map();\n      for (const event of events) {\n        const { to, tokenId } = event.args;\n        tokenOwners.set(tokenId.toString(), to);\n      }\n\n      // Create a map of addresses to their token counts\n      const holdersMap = new Map();\n      for (const owner of tokenOwners.values()) {\n        if (owner !== '0x0000000000000000000000000000000000000000') {\n          const currentCount = holdersMap.get(owner) || 0;\n          holdersMap.set(owner, currentCount + 1);\n        }\n      }\n\n      // Convert to our format and sort\n      return Array.from(holdersMap.entries())\n        .map(([address, quantity]) => ({\n          holderAddress: address,\n          quantity\n        }))\n        .filter(holder => \n          holder.quantity > 0 && \n          holder.holderAddress !== '0x0000000000000000000000000000000000000000'\n        )\n        .sort((a, b) => b.quantity - a.quantity);\n    };\n\n    // Function to load ERC1155 holders\n    const loadERC1155Holders = async (contractAddress, provider) => {\n      const erc1155Interface = [\n        'event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)',\n        'event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)'\n      ];\n      \n      const erc1155Contract = new ethers.Contract(contractAddress, erc1155Interface, provider);\n      \n      // Track balances for ERC1155\n      const balances = new Map();\n      \n      // Get and process TransferSingle events\n      const singleEvents = await erc1155Contract.queryFilter('TransferSingle', 0, 'latest');\n      \n      for (const event of singleEvents) {\n        const { from, to, value } = event.args;\n        \n        if (from !== '0x0000000000000000000000000000000000000000') {\n          const fromBalance = balances.get(from) || 0;\n          balances.set(from, Math.max(0, fromBalance - Number(value)));\n        }\n        \n        if (to !== '0x0000000000000000000000000000000000000000') {\n          const toBalance = balances.get(to) || 0;\n          balances.set(to, toBalance + Number(value));\n        }\n      }\n\n      // Get and process TransferBatch events\n      const batchEvents = await erc1155Contract.queryFilter('TransferBatch', 0, 'latest');\n      \n      for (const event of batchEvents) {\n        const { from, to, values } = event.args;\n        \n        for (let i = 0; i < values.length; i++) {\n          if (from !== '0x0000000000000000000000000000000000000000') {\n            const fromBalance = balances.get(from) || 0;\n            balances.set(from, Math.max(0, fromBalance - Number(values[i])));\n          }\n          \n          if (to !== '0x0000000000000000000000000000000000000000') {\n            const toBalance = balances.get(to) || 0;\n            balances.set(to, toBalance + Number(values[i]));\n          }\n        }\n      }\n\n      // Convert balances to our format\n      return Array.from(balances.entries())\n        .map(([address, quantity]) => ({\n          holderAddress: address,\n          quantity\n        }))\n        .filter(holder => \n          holder.quantity > 0 && \n          holder.holderAddress !== '0x0000000000000000000000000000000000000000'\n        )\n        .sort((a, b) => b.quantity - a.quantity);\n    };\n\n    // Function to load Unichain holders using ethers.js\n    const loadUnichainHolders = async (contractAddress) => {\n      try {\n        // Initialize ethers provider based on network\n        const provider = new ethers.JsonRpcProvider(\n          collection.chainId === 130 \n            ? 'https://mainnet.unichain.org'\n            : 'https://sepolia.unichain.org'\n        );\n        \n        // Check for ERC1155 in multiple possible properties and formats\n        const isERC1155 = collection.type?.toUpperCase().replace('-', '') === 'ERC1155' || \n                         collection.tokenType?.toUpperCase().replace('-', '') === 'ERC1155' ||\n                         collection.contractType?.toUpperCase().replace('-', '') === 'ERC1155';\n        \n        let holdersData;\n        if (isERC1155) {\n          holdersData = await loadERC1155Holders(contractAddress, provider);\n        } else {\n          holdersData = await loadERC721Holders(contractAddress, provider);\n        }\n\n        setHolders(holdersData);\n        setError(null);\n      } catch (error) {\n        console.error('Error loading Unichain holders:', error);\n        setError(error.message);\n        toast.error(`Failed to load holders: ${error.message}`);\n      }\n    };\n\n    // Function to load Moonwalker holders using ethers.js\n    const loadMoonwalkerHolders = async (contractAddress) => {\n      try {\n        // Initialize ethers provider for Moonwalker using the RPC URL\n        const provider = new ethers.JsonRpcProvider(NETWORK_RPC_URLS.moonwalker);\n        \n        // Check for ERC1155 in multiple possible properties and formats\n        const isERC1155 = collection.type?.toUpperCase().replace('-', '') === 'ERC1155' || \n                         collection.tokenType?.toUpperCase().replace('-', '') === 'ERC1155' ||\n                         collection.contractType?.toUpperCase().replace('-', '') === 'ERC1155';\n        \n        let holdersData;\n        if (isERC1155) {\n          holdersData = await loadERC1155Holders(contractAddress, provider);\n        } else {\n          holdersData = await loadERC721Holders(contractAddress, provider);\n        }\n\n        setHolders(holdersData);\n        setError(null);\n      } catch (error) {\n        console.error('Error loading Moonwalker holders:', error);\n        setError(error.message);\n        toast.error(`Failed to load holders: ${error.message}`);\n      }\n    };\n\n    // Function to load Monad Testnet holders using ethers.js\n    const loadMonadHolders = async (contractAddress) => {\n      try {\n        // Initialize ethers provider for Monad Testnet using the RPC URL\n        const provider = new ethers.JsonRpcProvider(NETWORK_RPC_URLS['monad-testnet']);\n        \n        // Check for ERC1155 in multiple possible properties and formats\n        const isERC1155 = collection.type?.toUpperCase().replace('-', '') === 'ERC1155' || \n                         collection.tokenType?.toUpperCase().replace('-', '') === 'ERC1155' ||\n                         collection.contractType?.toUpperCase().replace('-', '') === 'ERC1155';\n        \n        let holdersData;\n        if (isERC1155) {\n          holdersData = await loadERC1155Holders(contractAddress, provider);\n        } else {\n          holdersData = await loadERC721Holders(contractAddress, provider);\n        }\n\n        setHolders(holdersData);\n        setError(null);\n      } catch (error) {\n        console.error('Error loading Monad holders:', error);\n        setError(error.message);\n        toast.error(`Failed to load holders: ${error.message}`);\n      }\n    };\n\n    if (collection) {\n      loadData();\n    }\n  }, [collection]);\n\n  const prepareChartData = (holdersData) => {\n    const totalNFTs = holdersData.reduce((sum, h) => sum + h.quantity, 0);\n    const maxNFTs = Math.max(...holdersData.map(h => h.quantity));\n    \n    // Create dynamic ranges based on the maximum NFT count\n    const createDynamicRanges = (max) => {\n      if (max <= 5) {\n        return [\n          { min: 1, max: 1, label: '1 NFT' },\n          { min: 2, max: 3, label: '2-3 NFTs' },\n          { min: 4, max: 5, label: '4-5 NFTs' }\n        ];\n      } else if (max <= 10) {\n        return [\n          { min: 1, max: 2, label: '1-2 NFTs' },\n          { min: 3, max: 5, label: '3-5 NFTs' },\n          { min: 6, max: 10, label: '6-10 NFTs' }\n        ];\n      } else if (max <= 20) {\n        return [\n          { min: 1, max: 5, label: '1-5 NFTs' },\n          { min: 6, max: 10, label: '6-10 NFTs' },\n          { min: 11, max: 20, label: '11-20 NFTs' }\n        ];\n      } else {\n        const step = Math.ceil(max / 4); // Split into 4 ranges\n        return [\n          { min: 1, max: step, label: `1-${step} NFTs` },\n          { min: step + 1, max: step * 2, label: `${step + 1}-${step * 2} NFTs` },\n          { min: step * 2 + 1, max: step * 3, label: `${step * 2 + 1}-${step * 3} NFTs` },\n          { min: step * 3 + 1, max: max, label: `${step * 3 + 1}+ NFTs` }\n        ];\n      }\n    };\n\n    const ranges = createDynamicRanges(maxNFTs);\n    \n    // Distribution data for unique holders (bar chart)\n    const distributionData = ranges.map(range => ({\n      name: range.label,\n      label: range.label,\n      value: holdersData.filter(h => \n        h.quantity >= range.min && h.quantity <= range.max\n      ).length\n    })).filter(d => d.value > 0);\n\n    // Top 10 holders data (pie chart)\n    const top10Data = holdersData.slice(0, 10).map(h => ({\n      name: formatAddress(h.holderAddress),\n      value: h.quantity\n    }));\n\n    // Cumulative distribution (area chart)\n    const cumulativeData = holdersData.map((h, i) => ({\n      name: i,\n      value: holdersData.slice(0, i + 1).reduce((sum, h) => sum + h.quantity, 0)\n    }));\n\n    return { distributionData, top10Data, cumulativeData };\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#00ffbd]\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"text-red-500 dark:text-red-400 mb-2\">Error loading holders data</div>\n        <div className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</div>\n      </div>\n    );\n  }\n\n  const { distributionData, top10Data, cumulativeData } = prepareChartData(holders);\n  const totalQuantity = holders.reduce((sum, holder) => sum + holder.quantity, 0);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\">\n          <h3 className=\"text-gray-500 dark:text-gray-400 text-sm mb-2\">Unique Holders</h3>\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">{holders.length}</p>\n          <div className=\"h-32\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart \n                data={distributionData} \n                barSize={24}\n                margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\n              >\n                <XAxis \n                  dataKey=\"name\" \n                  tick={false}\n                />\n                <Tooltip \n                  content={props => <CustomTooltip {...props} type=\"bar\" />}\n                  cursor={{ fill: 'rgba(0, 255, 189, 0.1)' }}\n                />\n                <Bar \n                  dataKey=\"value\" \n                  fill=\"#00ffbd\"\n                  radius={[4, 4, 0, 0]}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2 text-center\">Holder distribution by NFT count</p>\n        </div>\n\n        <div className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\">\n          <h3 className=\"text-gray-500 dark:text-gray-400 text-sm mb-2\">Top 10 Hold</h3>\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n            {totalQuantity > 0 ? \n              ((holders.slice(0, 10).reduce((sum, h) => sum + h.quantity, 0) / totalQuantity) * 100).toFixed(1) \n              : '0'}%\n          </p>\n          <div className=\"h-32\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={top10Data}\n                  dataKey=\"value\"\n                  nameKey=\"name\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={30}\n                  outerRadius={50}\n                >\n                  {top10Data.map((entry, index) => (\n                    <Cell key={index} fill={`hsl(166, 100%, ${50 + (index * 5)}%)`} />\n                  ))}\n                </Pie>\n                <Tooltip content={props => <CustomTooltip {...props} type=\"pie\" />} />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2 text-center\">Top 10 holders by NFT count</p>\n        </div>\n\n        <div className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\">\n          <h3 className=\"text-gray-500 dark:text-gray-400 text-sm mb-2\">Avg. Per Holder</h3>\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n            {holders.length > 0 ? (totalQuantity / holders.length).toFixed(1) : '0'}\n          </p>\n          <div className=\"h-32\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <AreaChart data={cumulativeData}>\n                <defs>\n                  <linearGradient id=\"avgGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#00ffbd\" stopOpacity={0.3}/>\n                    <stop offset=\"95%\" stopColor=\"#00ffbd\" stopOpacity={0}/>\n                  </linearGradient>\n                </defs>\n                <Tooltip content={props => <CustomTooltip {...props} />} />\n                <Area type=\"monotone\" dataKey=\"value\" stroke=\"#00ffbd\" fill=\"url(#avgGradient)\" />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2 text-center\">Cumulative NFT distribution</p>\n        </div>\n      </div>\n\n      {/* Holders List */}\n      <div className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\">\n        <h3 className=\"text-gray-500 dark:text-gray-400 text-sm mb-4\">Top Holders</h3>\n        <div className=\"space-y-4\">\n          {holders.length === 0 ? (\n            <div className=\"text-center text-gray-500 dark:text-gray-400\">\n              No holders data yet\n            </div>\n          ) : (\n            <div \n              className=\"overflow-y-auto\" \n              style={{ \n                maxHeight: holders.length > 5 ? '250px' : 'auto',\n                paddingRight: holders.length > 5 ? '8px' : '0',\n                scrollbarWidth: 'thin',\n                scrollbarColor: '#00ffbd transparent',\n              }}\n              css={`\n                &::-webkit-scrollbar {\n                  width: 4px;\n                }\n                &::-webkit-scrollbar-track {\n                  background: transparent;\n                }\n                &::-webkit-scrollbar-thumb {\n                  background-color: #00ffbd;\n                  border-radius: 20px;\n                }\n              `}\n            >\n              {holders.map((holder, index) => (\n                <div \n                  key={holder.holderAddress} \n                  className=\"flex items-center justify-between text-sm border-b border-gray-100 dark:border-gray-800 last:border-0 pb-3 last:pb-0 mb-3 last:mb-0\"\n                >\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"flex items-center gap-2 min-w-[40px]\">\n                      <span className=\"text-gray-500 dark:text-gray-400\">#{index + 1}</span>\n                      {getBadgeIcon(index)}\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-gray-900 dark:text-white font-medium\">\n                        {formatAddress(holder.holderAddress)}\n                      </span>\n                      <button\n                        onClick={() => {\n                          navigator.clipboard.writeText(holder.holderAddress);\n                          toast.success('Address copied!');\n                        }}\n                        className=\"text-gray-400 hover:text-[#00ffbd] transition-colors\"\n                      >\n                        <BiCopy size={16} />\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-4\">\n                    <span className=\"text-gray-500 dark:text-gray-400\">{holder.quantity} NFTs</span>\n                    <span className=\"text-[#00ffbd] w-16 text-right\">\n                      {((holder.quantity / totalQuantity) * 100).toFixed(1)}%\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} ","export const shortenAddress = (address) => {\r\n  if (!address) return '';\r\n  return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n}; ","import { db } from '../services/firebase';\nimport { \n  collection, \n  addDoc, \n  query, \n  orderBy, \n  limit, \n  onSnapshot,\n  serverTimestamp,\n  where,\n  doc,\n  getDoc,\n  getDocs,\n  Timestamp,\n  updateDoc,\n  deleteDoc,\n  setDoc\n} from 'firebase/firestore';\n\nconst MESSAGES_COLLECTION = 'messages';\nconst MESSAGE_LIMIT = 100;\n\nexport const sendMessage = async ({ text, sender, collectionAddress, replyTo = null }) => {\n  try {\n    const messagesRef = collection(db, 'collections', collectionAddress, 'messages');\n    \n    const messageData = {\n      text: text.trim(),\n      sender: sender.toLowerCase(),\n      timestamp: serverTimestamp(),\n    };\n\n    // Only add reply-related fields if it's a reply\n    if (replyTo) {\n      messageData.replyTo = {\n        messageId: replyTo.messageId,\n        text: replyTo.text.substring(0, 100),\n        sender: replyTo.sender.toLowerCase()\n      };\n      messageData.threadId = replyTo.threadId || replyTo.messageId;\n      messageData.isThread = true;\n      messageData.threadDepth = replyTo.threadDepth ? replyTo.threadDepth + 1 : 0;\n    } else {\n      // Explicitly set reply-related fields to null/false for normal messages\n      messageData.replyTo = null;\n      messageData.threadId = null;\n      messageData.isThread = false;\n      messageData.threadDepth = null;\n    }\n\n    await addDoc(messagesRef, messageData);\n    return true;\n  } catch (error) {\n    console.error('Error sending message:', error);\n    return false;\n  }\n};\n\nexport const subscribeToMessages = (collectionAddress, callback) => {\n  const messagesRef = collection(db, 'collections', collectionAddress, 'messages');\n  \n  const q = query(\n    messagesRef,\n    orderBy('timestamp', 'desc'),\n    limit(100)\n  );\n\n  return onSnapshot(q, (snapshot) => {\n    const messages = [];\n    snapshot.forEach((doc) => {\n      const data = doc.data();\n      messages.push({\n        id: doc.id,\n        ...data,\n        timestamp: data.timestamp instanceof Timestamp ? data.timestamp.toDate() : new Date()\n      });\n    });\n    \n    // Sort messages so threads appear after their parent messages\n    const sortedMessages = messages.sort((a, b) => {\n      // First sort by timestamp\n      const timeCompare = a.timestamp - b.timestamp;\n      if (timeCompare !== 0) return timeCompare;\n      \n      // If timestamps are equal, put replies after their parent messages\n      if (a.threadId === b.id) return 1;\n      if (b.threadId === a.id) return -1;\n      \n      return 0;\n    });\n    \n    callback(sortedMessages);\n  });\n};\n\nexport const updateBannedUsers = async (collectionAddress, bannedList) => {\n  try {\n    // Use a separate moderation document in a subcollection\n    const moderationRef = doc(db, 'collections', collectionAddress, 'moderation', 'bannedUsers');\n    \n    await setDoc(moderationRef, {\n      addresses: bannedList,\n      updatedAt: serverTimestamp()\n    });\n    \n    return true;\n  } catch (error) {\n    console.error('Error updating banned users:', error);\n    throw error;\n  }\n};\n\n// Add function to load banned users\nexport const loadBannedUsers = async (collectionAddress) => {\n  try {\n    const moderationRef = doc(db, 'collections', collectionAddress, 'moderation', 'bannedUsers');\n    const docSnap = await getDoc(moderationRef);\n    \n    if (docSnap.exists()) {\n      return docSnap.data().addresses || [];\n    }\n    return [];\n  } catch (error) {\n    console.error('Error loading banned users:', error);\n    return [];\n  }\n};\n\nexport const deleteMessage = async (collectionAddress, messageId) => {\n  try {\n    const messageRef = doc(db, 'collections', collectionAddress, 'messages', messageId);\n    await deleteDoc(messageRef);\n    return true;\n  } catch (error) {\n    console.error('Error deleting message:', error);\n    throw error; // Throw error to handle it in the component\n  }\n}; ","import React from 'react';\r\n\r\nconst generateColors = (seed) => {\r\n  const hash = seed.toLowerCase().slice(2, 10);\r\n  const hue = parseInt(hash, 16) % 360;\r\n  return {\r\n    primary: `hsl(${hue}, 90%, 65%)`,\r\n    secondary: `hsl(${(hue + 40) % 360}, 85%, 60%)`,\r\n    accent: `hsl(${(hue + 180) % 360}, 80%, 65%)`,\r\n    highlight: `hsl(${(hue + 150) % 360}, 85%, 75%)`,\r\n    background: '#22232b'\r\n  };\r\n};\r\n\r\nconst MessageAvatar = ({ address, size = 32 }) => {\r\n  const colors = generateColors(address);\r\n  \r\n  // Create more varied patterns based on address\r\n  const patterns = Array.from({ length: 6 }, (_, i) => \r\n    parseInt(address.slice(2 + i * 2, 4 + i * 2), 16)\r\n  );\r\n\r\n  // Create unique shapes based on the address\r\n  const createShape = (index) => {\r\n    const angle = (patterns[0] % 360) * (Math.PI / 180);\r\n    const radius = 15 + (patterns[1] % 10);\r\n    const x = 40 + Math.cos(angle + index) * radius;\r\n    const y = 40 + Math.sin(angle + index) * radius;\r\n    return { x, y };\r\n  };\r\n\r\n  // Generate multiple points for the pattern\r\n  const points = Array.from({ length: 6 }, (_, i) => createShape(i * Math.PI / 3));\r\n\r\n  return (\r\n    <svg\r\n      width={size}\r\n      height={size}\r\n      viewBox=\"0 0 80 80\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      {/* Background */}\r\n      <circle cx=\"40\" cy=\"40\" r=\"40\" fill={colors.background} />\r\n      \r\n      {/* Complex geometric pattern */}\r\n      <path\r\n        d={`\r\n          M ${points[0].x} ${points[0].y}\r\n          C ${points[1].x} ${points[1].y},\r\n            ${points[2].x} ${points[2].y},\r\n            ${points[3].x} ${points[3].y}\r\n          S ${points[4].x} ${points[4].y},\r\n            ${points[5].x} ${points[5].y}\r\n          Z\r\n        `}\r\n        fill={colors.primary}\r\n        opacity=\"0.7\"\r\n      />\r\n\r\n      {/* Decorative circles */}\r\n      {points.map((point, i) => (\r\n        <circle\r\n          key={i}\r\n          cx={point.x}\r\n          cy={point.y}\r\n          r={3 + (patterns[i] % 4)}\r\n          fill={i % 2 ? colors.secondary : colors.accent}\r\n          opacity=\"0.9\"\r\n        />\r\n      ))}\r\n\r\n      {/* Central pattern */}\r\n      <path\r\n        d={`\r\n          M ${40 - patterns[2] % 15} ${40 - patterns[3] % 15}\r\n          Q ${40} ${40 - patterns[4] % 20},\r\n            ${40 + patterns[5] % 15} ${40 + patterns[0] % 15}\r\n        `}\r\n        stroke={colors.highlight}\r\n        strokeWidth=\"3\"\r\n        fill=\"none\"\r\n      />\r\n\r\n      {/* Additional decorative elements */}\r\n      <circle\r\n        cx=\"40\"\r\n        cy=\"40\"\r\n        r={5 + (patterns[1] % 5)}\r\n        fill={colors.secondary}\r\n        opacity=\"0.8\"\r\n      />\r\n      \r\n      {/* Dynamic lines */}\r\n      {Array.from({ length: 3 }).map((_, i) => (\r\n        <line\r\n          key={i}\r\n          x1={40 + Math.cos(patterns[i] * Math.PI / 12) * 20}\r\n          y1={40 + Math.sin(patterns[i] * Math.PI / 12) * 20}\r\n          x2={40 + Math.cos((patterns[i] + 2) * Math.PI / 12) * 25}\r\n          y2={40 + Math.sin((patterns[i] + 2) * Math.PI / 12) * 25}\r\n          stroke={colors.accent}\r\n          strokeWidth=\"1.5\"\r\n          opacity=\"0.6\"\r\n        />\r\n      ))}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MessageAvatar; ","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport EmojiPicker from 'emoji-picker-react';\nimport { useAccount } from 'wagmi';\nimport { shortenAddress } from '../../../utils/format';\nimport { FaSmile, FaPaperPlane, FaCrown, FaTrash, FaBan } from 'react-icons/fa';\nimport { sendMessage, subscribeToMessages, updateBannedUsers, deleteMessage, loadBannedUsers } from '../../../utils/firebase';\nimport { ethers } from 'ethers';\nimport { NFTCollectionABI } from '../../../abi/NFTCollection';\nimport MessageAvatar from '../../../components/avatars/MessageAvatar';\nimport { IoColorPaletteOutline } from \"react-icons/io5\";\nimport { XMarkIcon, ArrowUturnLeftIcon } from '@heroicons/react/24/outline';\nimport { toast } from 'react-hot-toast';\nimport { doc, getDoc, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../../services/firebase';\nimport DOMPurify from 'dompurify';\n\nconst CHAT_THEMES = {\n  dark: {\n    bg: 'bg-[#1a1b1f]',\n    header: 'bg-gray-800',\n    messageBubble: {\n      sent: 'bg-[#00ffbd] text-gray-900',\n      received: 'bg-gray-700/90 text-white'\n    },\n    input: {\n      bg: 'bg-gray-700',\n      text: 'text-white',\n      placeholder: 'text-gray-400'\n    },\n    address: {\n      bg: 'bg-gray-800/50',\n      text: 'text-[#00ffbd]'\n    },\n    time: 'text-gray-500',\n    link: 'text-[#00ffbd]',\n    linkPreview: 'bg-black/20'\n  },\n  light: {\n    bg: 'bg-gray-100',\n    header: 'bg-white',\n    messageBubble: {\n      sent: 'bg-[#00ffbd] text-gray-900',\n      received: 'bg-gray-200 text-gray-900'\n    },\n    input: {\n      bg: 'bg-gray-100',\n      text: 'text-gray-900',\n      placeholder: 'text-gray-500'\n    },\n    address: {\n      bg: 'bg-gray-200/50',\n      text: 'text-gray-700'\n    },\n    time: 'text-gray-500'\n  },\n  midnight: {\n    bg: 'bg-gradient-to-br from-blue-900 via-gray-900 to-purple-900',\n    header: 'bg-black/40',\n    messageBubble: {\n      sent: 'bg-blue-500/90 text-white',\n      received: 'bg-gray-700/90 text-white'\n    },\n    input: {\n      bg: 'bg-gray-800/60',\n      text: 'text-blue-100',\n      placeholder: 'text-gray-400'\n    },\n    address: {\n      bg: 'bg-blue-900/30',\n      text: 'text-blue-400'\n    },\n    time: 'text-blue-300/70'\n  },\n  sunset: {\n    bg: 'bg-gradient-to-br from-orange-500 via-red-500 to-pink-500',\n    header: 'bg-black/40',\n    messageBubble: {\n      sent: 'bg-yellow-400 text-gray-900',\n      received: 'bg-white/90 text-gray-900'\n    },\n    input: {\n      bg: 'bg-red-900/30',\n      text: 'text-white',\n      placeholder: 'text-gray-300'\n    },\n    address: {\n      bg: 'bg-orange-900/30',\n      text: 'text-orange-200'\n    },\n    time: 'text-orange-200/70',\n    link: 'text-yellow-400',\n    linkPreview: 'bg-black/20'\n  },\n  forest: {\n    bg: 'bg-gradient-to-br from-green-700 via-green-800 to-green-900',\n    header: 'bg-black/40',\n    messageBubble: {\n      sent: 'bg-green-400 text-gray-900',\n      received: 'bg-gray-200 text-gray-900'\n    },\n    input: {\n      bg: 'bg-green-900/30',\n      text: 'text-green-100',\n      placeholder: 'text-gray-400'\n    },\n    address: {\n      bg: 'bg-green-900/30',\n      text: 'text-green-400'\n    },\n    time: 'text-green-300/70'\n  },\n  sepia: {\n    bg: 'bg-gradient-to-br from-[#704214] via-[#8B5E34] to-[#A0522D]',\n    header: 'bg-[#3E1F0A]/60',\n    messageBubble: {\n      sent: 'bg-[#DEB887] text-[#3E1F0A]',\n      received: 'bg-[#F5DEB3] text-[#3E1F0A]'\n    },\n    input: {\n      bg: 'bg-[#3E1F0A]/30',\n      text: 'text-[#DEB887]',\n      placeholder: 'text-[#DEB887]/60'\n    },\n    address: {\n      bg: 'bg-[#3E1F0A]/40',\n      text: 'text-[#DEB887]'\n    },\n    time: 'text-[#DEB887]/70'\n  },\n  ocean: {\n    bg: 'bg-gradient-to-br from-cyan-600 via-blue-700 to-blue-900',\n    header: 'bg-black/40',\n    messageBubble: {\n      sent: 'bg-cyan-400 text-gray-900',\n      received: 'bg-white/90 text-gray-900'\n    },\n    input: {\n      bg: 'bg-blue-900/30',\n      text: 'text-cyan-100',\n      placeholder: 'text-gray-400'\n    },\n    address: {\n      bg: 'bg-cyan-900/30',\n      text: 'text-cyan-400'\n    },\n    time: 'text-cyan-200/70'\n  },\n  cosmic: {\n    bg: 'bg-gradient-to-br from-purple-900 via-violet-800 to-indigo-900',\n    header: 'bg-black/40',\n    messageBubble: {\n      sent: 'bg-violet-400 text-gray-900',\n      received: 'bg-indigo-200 text-gray-900'\n    },\n    input: {\n      bg: 'bg-purple-900/30',\n      text: 'text-violet-100',\n      placeholder: 'text-gray-400'\n    },\n    address: {\n      bg: 'bg-violet-900/30',\n      text: 'text-violet-400'\n    },\n    time: 'text-violet-200/70'\n  },\n  matrix: {\n    bg: 'bg-gradient-to-br from-gray-900 to-gray-800',\n    header: 'bg-black/40',\n    messageBubble: {\n      sent: 'bg-[#00ff00] text-gray-900',\n      received: 'bg-gray-800 text-[#00ff00] border border-[#00ff00]/30'\n    },\n    input: {\n      bg: 'bg-gray-900',\n      text: 'text-[#00ff00]',\n      placeholder: 'text-[#00ff00]/60'\n    },\n    address: {\n      bg: 'bg-gray-900/50',\n      text: 'text-[#00ff00]'\n    },\n    time: 'text-[#00ff00]/70'\n  }\n};\n\n// Add new ReplyPreview component\nconst ReplyPreview = ({ replyTo, onClose }) => (\n  <div className=\"flex items-center gap-2 bg-black/20 rounded-lg mb-2 overflow-hidden\">\n    <div className=\"w-1 h-full bg-[#00ffbd] self-stretch\" />\n    <div className=\"flex-1 min-w-0 px-3 py-2\">\n      <div className=\"flex items-center gap-2 text-xs mb-0.5\">\n        <ArrowUturnLeftIcon className=\"w-3 h-3 text-[#00ffbd]\" />\n        <span className=\"font-medium text-[#00ffbd]\">\n          Replying to {shortenAddress(replyTo.sender)}\n        </span>\n      </div>\n      <div className=\"text-sm text-gray-400 truncate max-w-[300px]\">\n        {replyTo.text}\n      </div>\n    </div>\n    <button \n      onClick={onClose}\n      className=\"p-2 hover:bg-black/20 transition-colors\"\n    >\n      <XMarkIcon className=\"w-4 h-4 text-gray-400 hover:text-gray-300\" />\n    </button>\n  </div>\n);\n\n// Add a new MessageBubble component\nconst MessageBubble = ({ message, isMyMessage, isCreatorMessage, onReply, currentTheme, getTheme, isCreator, handleModeration, address }) => {\n  const canReply = !message.threadDepth || message.threadDepth < 3;\n  \n  const scrollToMessage = (messageId) => {\n    const element = document.getElementById(`message-${messageId}`);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      element.classList.add('highlight-message');\n      setTimeout(() => element.classList.remove('highlight-message'), 2000);\n    }\n  };\n  \n  // Extract URLs from message\n  const urls = message.text.match(/(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/g) || [];\n  \n  return (\n    <div className=\"relative group\" id={`message-${message.id}`}>\n      {message.replyTo && (\n        <button \n          onClick={() => scrollToMessage(message.replyTo.messageId)}\n          className=\"flex items-center mb-1 max-w-[256px] bg-black/20 rounded-lg \n            hover:bg-black/30 transition-colors overflow-hidden cursor-pointer\"\n        >\n          <div className=\"w-1 h-full bg-[#00ffbd] self-stretch\" />\n          <div className=\"px-3 py-1.5 text-left\">\n            <div className=\"flex items-center gap-1 text-xs\">\n              <ArrowUturnLeftIcon className=\"w-3 h-3 text-[#00ffbd]\" />\n              <span className=\"font-medium text-[#00ffbd]\">\n                {shortenAddress(message.replyTo.sender)}\n              </span>\n            </div>\n            <div className=\"text-xs text-gray-400 truncate\">\n              {message.replyTo.text}\n            </div>\n          </div>\n        </button>\n      )}\n      \n      <div className={`\n        flex\n        ${isMyMessage ? 'justify-end' : 'justify-start'}\n        min-w-[60px] max-w-[85%]\n      `}>\n        <div className={`\n          relative group flex flex-col\n          ${isMyMessage ? 'items-end' : 'items-start'}\n        `}>\n          <div className=\"flex items-center gap-2\">\n            <div className={`\n              px-4 py-2 rounded-2xl break-words relative\n              ${isMyMessage ? 'rounded-tr-sm' : 'rounded-tl-sm'}\n              ${isCreatorMessage \n                ? '!bg-gradient-to-r from-yellow-500 to-yellow-600 !text-white' \n                : isMyMessage \n                  ? getTheme(currentTheme).messageBubble.sent\n                  : getTheme(currentTheme).messageBubble.received\n              }\n            `}>\n              <div className=\"whitespace-pre-wrap inline-block\">\n                {formatMessageWithLinks(message.text)}\n              </div>\n              \n              {/* Link Previews */}\n              {urls.map((url, index) => (\n                <LinkPreview \n                  key={index} \n                  url={url} \n                  currentTheme={currentTheme}\n                  getTheme={getTheme}\n                />\n              ))}\n            </div>\n\n            <div className=\"absolute -right-20 top-1/2 -translate-y-1/2 opacity-0 group-hover:opacity-100 \n              flex items-center gap-2 transition-opacity\">\n              {canReply && (\n                <button\n                  onClick={() => onReply(message)}\n                  className=\"p-1 rounded-full hover:bg-gray-700/50 transition-all\"\n                  title=\"Reply\"\n                >\n                  <ArrowUturnLeftIcon className=\"w-3.5 h-3.5 text-[#00ffbd]\" />\n                </button>\n              )}\n\n              {/* Show delete button for creator's own messages OR when moderating others' messages */}\n              {isCreator(address) && (isMyMessage || !isMyMessage) && (\n                <button\n                  onClick={() => handleModeration('delete', message.sender, message.id)}\n                  className=\"p-1 rounded hover:bg-red-500/10 text-red-400\"\n                  title=\"Delete Message\"\n                >\n                  <FaTrash className=\"w-3.5 h-3.5\" />\n                </button>\n              )}\n\n              {/* Only show ban button for other users' messages */}\n              {isCreator(address) && !isMyMessage && (\n                <button\n                  onClick={() => handleModeration('ban', message.sender)}\n                  className=\"p-1 rounded hover:bg-red-500/10 text-red-400\"\n                  title=\"Ban User\"\n                >\n                  <FaBan className=\"w-3.5 h-3.5\" />\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Thread messages - moved inside the message loop */}\n      {message.threadId && !message.replyTo && (\n        <div className=\"pl-4 border-l-2 border-gray-700 mt-2\">\n          {messages\n            .filter(m => m.threadId === message.threadId && m.id !== message.id)\n            .map(threadMessage => (\n              <MessageBubble\n                key={threadMessage.id}\n                message={threadMessage}\n                isMyMessage={threadMessage.sender.toLowerCase() === address?.toLowerCase()}\n                isCreatorMessage={isCreator(threadMessage.sender)}\n                onReply={handleReply}\n                currentTheme={currentTheme}\n                getTheme={getTheme}\n                isCreator={isCreator}\n                handleModeration={handleModeration}\n                address={address}\n              />\n            ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Add BanList modal\nconst BanList = ({ show, onClose, bannedAddresses, onUnban }) => {\n  if (!show) return null;\n  \n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n      <div className=\"bg-[#1a1b1f] rounded-lg p-6 w-96 max-w-[90vw]\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-bold text-white\">Banned Users</h3>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-white transition-colors\"\n          >\n            <XMarkIcon className=\"w-5 h-5\" />\n          </button>\n        </div>\n        \n        <div className=\"max-h-[300px] overflow-y-auto custom-scrollbar\">\n          {bannedAddresses.length === 0 ? (\n            <p className=\"text-gray-400 text-center py-4\">No banned users</p>\n          ) : (\n            bannedAddresses.map(address => (\n              <div key={address} className=\"flex items-center justify-between py-2 border-b border-gray-800\">\n                <span className=\"text-gray-300\">{shortenAddress(address)}</span>\n                <button\n                  onClick={() => onUnban(address)}\n                  className=\"text-xs bg-red-500/20 text-red-400 px-2 py-1 rounded hover:bg-red-500/30 transition-colors\"\n                >\n                  Unban\n                </button>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Add this utility function to format message text with clickable links\nconst formatMessageWithLinks = (text) => {\n  // URL regex pattern\n  const urlPattern = /(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/g;\n  \n  // Sanitize the text first\n  const sanitizedText = DOMPurify.sanitize(text);\n  \n  // Replace URLs with clickable links\n  return sanitizedText.split(urlPattern).map((part, i) => {\n    if (part.match(urlPattern)) {\n      return (\n        <a\n          key={i}\n          href={part}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-[#00ffbd] hover:underline break-all\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          {part}\n        </a>\n      );\n    }\n    return part;\n  });\n};\n\n// Update the LinkPreview component\nconst LinkPreview = ({ url, currentTheme, getTheme }) => {\n  try {\n    const urlObj = new URL(url);\n    const isImage = /\\.(jpg|jpeg|png|gif|webp)$/i.test(urlObj.pathname);\n    const isTwitter = urlObj.hostname === 'twitter.com' || urlObj.hostname === 'x.com';\n    const theme = getTheme(currentTheme);\n\n    if (isTwitter) {\n      // Extract tweet ID from URL\n      const tweetId = url.split('/').pop().split('?')[0];\n      return (\n        <div className={`mt-2 rounded-lg overflow-hidden ${theme.linkPreview}`}>\n          <div className=\"custom-twitter-embed\">\n            <iframe\n              src={`https://platform.twitter.com/embed/Tweet.html?id=${tweetId}&theme=dark&cards=hidden`}\n              className=\"w-full min-h-[300px] border-0\"\n              allowFullScreen\n            />\n          </div>\n        </div>\n      );\n    }\n\n    if (isImage) {\n      return (\n        <a\n          href={url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={`block mt-2 rounded-lg overflow-hidden ${theme.linkPreview} hover:bg-black/30 transition-colors`}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <div className=\"relative w-full pt-[56.25%]\">\n            <img\n              src={url}\n              alt=\"Preview\"\n              className=\"absolute top-0 left-0 w-full h-full object-contain bg-black/40\"\n              onError={(e) => e.target.parentElement.parentElement.style.display = 'none'}\n            />\n          </div>\n          <div className=\"flex items-center gap-2 p-2 border-t border-white/10\">\n            <img\n              src={`https://www.google.com/s2/favicons?domain=${urlObj.hostname}`}\n              alt=\"\"\n              className=\"w-4 h-4\"\n            />\n            <span className={`text-sm ${theme.link}`} truncate>\n              {urlObj.hostname}\n            </span>\n          </div>\n        </a>\n      );\n    }\n\n    return (\n      <a\n        href={url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={`block mt-2 rounded-lg overflow-hidden ${theme.linkPreview} hover:bg-black/30 transition-colors`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"flex items-center gap-2 p-2\">\n          <img\n            src={`https://www.google.com/s2/favicons?domain=${urlObj.hostname}`}\n            alt=\"\"\n            className=\"w-4 h-4\"\n          />\n          <span className={`text-sm ${theme.link}`} truncate>\n            {urlObj.hostname}\n          </span>\n        </div>\n      </a>\n    );\n  } catch (error) {\n    return null;\n  }\n};\n\nconst Chat = ({ collection }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { address } = useAccount();\n  const messagesEndRef = useRef(null);\n  const chatContainerRef = useRef(null);\n  const textareaRef = useRef(null);\n  const [currentTheme, setCurrentTheme] = useState('dark');\n  const [replyingTo, setReplyingTo] = useState(null);\n  const emojiPickerRef = useRef(null);\n  const [isChatEnabled, setIsChatEnabled] = useState(true);\n  const [bannedAddresses, setBannedAddresses] = useState([]);\n  const [showBanList, setShowBanList] = useState(false);\n\n  // Memoize the creator address\n  const creatorAddress = React.useMemo(() => {\n    if (!collection?.creator && !collection?.creatorAddress) {\n      return null;\n    }\n    return (collection.creator || collection.creatorAddress)?.toLowerCase();\n  }, [collection?.creator, collection?.creatorAddress]);\n\n  // Move isCreator check to a memoized function\n  const isCreator = React.useCallback((messageSender) => {\n    if (!creatorAddress || !messageSender) return false;\n    return creatorAddress === messageSender.toLowerCase();\n  }, [creatorAddress]);\n\n  // Subscribe to messages\n  useEffect(() => {\n    if (!collection?.contractAddress) return;\n    \n    const unsubscribe = subscribeToMessages(collection.contractAddress, (newMessages) => {\n      setMessages(newMessages);\n    });\n\n    return () => unsubscribe();\n  }, [collection?.contractAddress]);\n\n  // Auto scroll to bottom on new messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Add reply handler\n  const handleReply = (message) => {\n    setReplyingTo({\n      messageId: message.id,\n      text: message.text,\n      sender: message.sender,\n      threadId: message.threadId || message.id,\n      threadDepth: message.threadDepth || 0\n    });\n    textareaRef.current?.focus();\n  };\n\n  // Update the handleSubmit function\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim() || isLoading || !isChatEnabled) return;\n\n    // Check if user is banned (case-insensitive check)\n    if (bannedAddresses.some(addr => addr.toLowerCase() === address?.toLowerCase())) {\n      toast.error(\"You have been banned from this chat\");\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      await sendMessage({\n        text: newMessage,\n        sender: address,\n        collectionAddress: collection.contractAddress,\n        replyTo: replyingTo\n      });\n        setNewMessage('');\n      setReplyingTo(null);\n      textareaRef.current?.focus();\n    } catch (error) {\n      console.error('Error sending message:', error);\n      toast.error('Failed to send message');\n    }\n    setIsLoading(false);\n    setTimeout(() => {\n      textareaRef.current?.focus();\n    }, 100);\n  };\n\n  // Handle emoji selection\n  const onEmojiClick = (emojiObject) => {\n    if (newMessage.length + 2 <= 500) { // Check length including emoji\n      setNewMessage(prev => prev + emojiObject.emoji);\n    }\n  };\n\n  // Inside the Chat component, add a function to format the timestamp\n  const formatTimestamp = (timestamp) => {\n    if (!timestamp || !(timestamp instanceof Date)) return '';\n    \n    return new Intl.DateTimeFormat('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    }).format(timestamp);\n  };\n\n  // Add auto-resize function\n  const autoResize = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = Math.min(textarea.scrollHeight, 150) + 'px'; // Max height of 150px\n    }\n  };\n\n  // First, add a helper function to group messages\n  const groupMessages = (messages) => {\n    return messages.reduce((groups, message, index) => {\n      const prevMessage = messages[index - 1];\n      const isSameSender = prevMessage && prevMessage.sender.toLowerCase() === message.sender.toLowerCase();\n      const isWithinTimeWindow = prevMessage && \n        (message.timestamp - prevMessage.timestamp) / (1000 * 60) < 5; // 5 minutes window\n\n      if (isSameSender && isWithinTimeWindow) {\n        // Add to last group\n        const lastGroup = groups[groups.length - 1];\n        lastGroup.messages.push(message);\n        return groups;\n      } else {\n        // Create new group\n        groups.push({\n          id: message.id,\n          sender: message.sender,\n          messages: [message]\n        });\n        return groups;\n      }\n    }, []);\n  };\n\n  // Update the ThemeSelector component\n  const ThemeSelector = () => (\n    <div className=\"relative group z-20\">\n      <button\n        className=\"p-1.5 rounded-lg bg-gray-700/80 hover:bg-gray-600 transition-colors flex items-center gap-2\"\n        title=\"Select Theme\"\n      >\n        <IoColorPaletteOutline className=\"w-4 h-4 text-[#00ffbd]\" />\n        <span className=\"text-xs text-gray-300\">Theme</span>\n      </button>\n      \n      {/* Theme Selector Dropdown */}\n      <div className=\"absolute right-0 top-[120%] mt-1 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200\">\n        <div className=\"bg-gray-800/95 backdrop-blur-sm rounded-lg shadow-xl p-3 border border-gray-700 min-w-[180px]\">\n          <div className=\"text-xs text-gray-400 mb-2\">Select Theme</div>\n          <div className=\"grid grid-cols-3 gap-2\">\n            {Object.entries(CHAT_THEMES).map(([themeName, theme]) => (\n              <button\n                key={themeName}\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  setCurrentTheme(themeName);\n                }}\n                className={`\n                  w-8 h-8 rounded-full border-2 transition-all transform hover:scale-110\n                  ${currentTheme === themeName \n                    ? 'border-[#00ffbd] scale-110 shadow-lg shadow-[#00ffbd]/20' \n                    : 'border-transparent hover:border-gray-500'\n                  }\n                  ${theme.bg}\n                `}\n                title={themeName.charAt(0).toUpperCase() + themeName.slice(1)}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  // Add a helper function to get theme safely\n  const getTheme = (themeName) => {\n    return CHAT_THEMES[themeName] || CHAT_THEMES['dark'];\n  };\n\n  // Add this useEffect for click outside handling\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (emojiPickerRef.current && !emojiPickerRef.current.contains(event.target)) {\n        setShowEmojiPicker(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Add moderation controls for creator\n  const ModeratorControls = ({ isCreator }) => {\n    if (!isCreator) return null;\n    \n    return (\n      <div className=\"flex items-center gap-2 px-4\">\n        <div className=\"h-4 border-l border-gray-300 dark:border-gray-700\" />\n        \n        {/* Ban List Button */}\n        <button\n          onClick={() => setShowBanList(true)}\n          className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 \n            transition-colors group relative\"\n          title=\"Manage Banned Users\"\n        >\n          <FaBan className=\"w-5 h-5 text-gray-400 group-hover:text-red-400\" />\n          {bannedAddresses.length > 0 && (\n            <span className=\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 \n              rounded-full text-[10px] text-white flex items-center justify-center\">\n              {bannedAddresses.length}\n            </span>\n          )}\n        </button>\n      </div>\n    );\n  };\n\n  // Add moderation functions\n  const handleModeration = async (action, userAddress, messageId = null) => {\n    try {\n      switch (action) {\n        case 'ban':\n          const newBannedList = [...bannedAddresses, userAddress.toLowerCase()];\n          await updateBannedUsers(collection.contractAddress, newBannedList);\n          // No need to setBannedAddresses here as the subscription will handle it\n          toast.success(`User ${shortenAddress(userAddress)} banned successfully`);\n          break;\n        \n        case 'delete':\n          if (messageId) {\n            await deleteMessage(collection.contractAddress, messageId);\n            toast.success('Message deleted');\n          }\n          break;\n      }\n    } catch (error) {\n      console.error('Error in moderation:', error);\n      toast.error('Failed to perform moderation action');\n    }\n  };\n\n  // Add a subscription to banned users list\n  useEffect(() => {\n    if (collection?.contractAddress) {\n      // Initial load of banned users\n      const loadBannedList = async () => {\n        try {\n          const bannedList = await loadBannedUsers(collection.contractAddress);\n          setBannedAddresses(bannedList);\n        } catch (error) {\n          console.error('Error loading banned users:', error);\n        }\n      };\n      \n      loadBannedList();\n\n      // Subscribe to banned users changes\n      const unsubscribe = onSnapshot(\n        doc(db, 'collections', collection.contractAddress, 'moderation', 'bannedUsers'),\n        (doc) => {\n          if (doc.exists()) {\n            setBannedAddresses(doc.data().addresses || []);\n          } else {\n            setBannedAddresses([]);\n          }\n        }\n      );\n\n      return () => unsubscribe();\n    }\n  }, [collection?.contractAddress]);\n\n  return (\n    <motion.div \n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className={`w-full h-full rounded-lg shadow-xl overflow-hidden transition-all duration-300 ${getTheme(currentTheme).bg}`}\n    >\n      {/* Chat Header */}\n      <div className={`p-6 border-b border-gray-200 dark:border-gray-700 ${getTheme(currentTheme).header}`}>\n        <h3 className=\"text-lg font-semibold text-white mb-4\">Collection Chat</h3>\n        <div className=\"flex items-center justify-between py-1\">\n          <p className=\"text-sm font-bold text-gray-300\">\n            Join the conversation\n          </p>\n          <div className=\"flex items-center gap-3\">\n            {/* Add Moderation Controls for Creator */}\n            {isCreator(address) && (\n              <div className=\"flex items-center gap-2\">\n                {/* Remove chat toggle button, keep only ban list */}\n                <button\n                  onClick={() => setShowBanList(true)}\n                  className=\"p-2 rounded-lg hover:bg-gray-700/50 transition-colors relative\"\n                  title=\"Manage Banned Users\"\n                >\n                  <FaBan className=\"w-5 h-5 text-gray-400 hover:text-red-400\" />\n                  {bannedAddresses.length > 0 && (\n                    <span className=\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 \n                      rounded-full text-[10px] text-white flex items-center justify-center\">\n                      {bannedAddresses.length}\n                    </span>\n                  )}\n                </button>\n              </div>\n            )}\n            <ThemeSelector />\n          </div>\n        </div>\n      </div>\n\n      {/* Messages Container */}\n      <div \n        ref={chatContainerRef}\n        className=\"h-[calc(100%-10rem)] overflow-y-auto overflow-x-hidden p-4 space-y-4 \n          custom-scrollbar\"\n      >\n        <AnimatePresence>\n          {groupMessages(messages).map((group) => {\n            const isMyMessage = group.sender.toLowerCase() === address?.toLowerCase();\n            const isCreatorMessage = isCreator(group.sender);\n            \n            return (\n            <motion.div\n                key={group.id}\n                initial={{ opacity: 0, x: isMyMessage ? 20 : -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0 }}\n                className={`flex w-full ${isMyMessage ? 'justify-end' : 'justify-start'}`}\n              >\n                <div className=\"flex gap-2 max-w-[60%]\">\n                  <div className={`\n                    flex-shrink-0 self-start mt-1\n                    ${isMyMessage ? 'order-2' : ''}\n                  `}>\n                    <div className=\"relative\">\n                      <MessageAvatar address={group.sender} size={32} />\n                      {isCreatorMessage && (\n                        <div className=\"group absolute -top-1 -left-1\">\n                          <FaCrown \n                            className=\"text-yellow-400 w-4 h-4 cursor-help\" \n                          />\n                          <span className=\"absolute -top-6 left-0 \n                            scale-0 transition-all group-hover:scale-100\n                            px-2 py-1 text-xs rounded bg-gray-800 text-yellow-400 whitespace-nowrap z-10\"\n                          >\n                            Creator\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col flex-grow gap-1\">\n                    {group.messages.map((message, index) => (\n                      <div key={message.id} className=\"flex flex-col\">\n                        <MessageBubble\n                          message={message}\n                          isMyMessage={isMyMessage}\n                          isCreatorMessage={isCreatorMessage}\n                          onReply={handleReply}\n                          currentTheme={currentTheme}\n                          getTheme={getTheme}\n                          isCreator={isCreator}\n                          handleModeration={handleModeration}\n                          address={address}\n                        />\n\n                        {/* Thread messages - moved inside the message loop */}\n                        {message.threadId && !message.replyTo && (\n                          <div className=\"pl-4 border-l-2 border-gray-700 mt-2\">\n                            {messages\n                              .filter(m => m.threadId === message.threadId && m.id !== message.id)\n                              .map(threadMessage => (\n                                <MessageBubble\n                                  key={threadMessage.id}\n                                  message={threadMessage}\n                                  isMyMessage={threadMessage.sender.toLowerCase() === address?.toLowerCase()}\n                                  isCreatorMessage={isCreator(threadMessage.sender)}\n                                  onReply={handleReply}\n                                  currentTheme={currentTheme}\n                                  getTheme={getTheme}\n                                  isCreator={isCreator}\n                                  handleModeration={handleModeration}\n                                  address={address}\n                                />\n                              ))}\n                          </div>\n                        )}\n              </div>\n                    ))}\n\n                    {/* Single Timestamp and Address for the group */}\n                    <div className={`\n                      flex items-center mt-1 gap-2 text-xs\n                      ${isMyMessage ? 'justify-end' : 'justify-start'}\n                    `}>\n                      <div className=\"flex items-center gap-1\">\n                        {!isCreatorMessage && (\n                          <span className={`\n                            px-2 py-0.5 rounded-full\n                            ${getTheme(currentTheme).address.bg}\n                            ${getTheme(currentTheme).address.text}\n                          `}>\n                            {shortenAddress(group.sender)}\n                </span>\n                        )}\n                      </div>\n                      <span className={getTheme(currentTheme).time}>\n                        {formatTimestamp(group.messages[group.messages.length - 1].timestamp)}\n                </span>\n                    </div>\n                  </div>\n              </div>\n            </motion.div>\n            );\n          })}\n        </AnimatePresence>\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Message Input */}\n      <form \n        onSubmit={handleSubmit} \n        className={`\n          sticky bottom-0\n          relative p-4 border-t border-gray-200 dark:border-gray-700 \n          ${getTheme(currentTheme).header}\n          ${replyingTo ? 'pt-2 pb-3' : 'py-4'}\n          transition-all duration-200\n          bg-inherit\n        `}\n      >\n        {replyingTo && (\n          <ReplyPreview \n            replyTo={replyingTo} \n            onClose={() => setReplyingTo(null)} \n          />\n        )}\n        \n        <div className=\"relative flex items-start\">\n          <div ref={emojiPickerRef} className=\"relative\">\n          <button\n            type=\"button\"\n            onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n              className={`\n                p-2 transition-colors self-start\n                ${getTheme(currentTheme).input.text} \n                hover:text-[#00ffbd]\n              `}\n              disabled={isLoading}\n          >\n            <FaSmile className=\"w-5 h-5\" />\n          </button>\n          \n            {/* Update Emoji Picker positioning */}\n            <AnimatePresence>\n              {showEmojiPicker && (\n                <motion.div\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: 10 }}\n                  className=\"absolute bottom-full mb-2 left-0\"\n                >\n                  <div className=\"bg-gray-800 rounded-lg shadow-xl border border-gray-700\">\n                    <div \n                      className=\"relative\"\n                      onClick={(e) => e.stopPropagation()} // Prevent closing when clicking inside\n                    >\n                      <EmojiPicker\n                        onEmojiClick={onEmojiClick}\n                        theme=\"dark\"\n                        width={280}\n                        height={350}\n                        lazyLoadEmojis={true}\n                        searchPlaceHolder=\"Search emoji...\"\n                        previewConfig={{\n                          showPreview: false\n                        }}\n                        skinTonesDisabled\n                        categories={['smileys_people', 'animals_nature', 'food_drink', 'travel_places', 'activities', 'objects', 'symbols', 'flags']}\n                        style={{\n                          '--epr-bg-color': '#1a1b1f',\n                          '--epr-category-label-bg-color': '#2d2e35',\n                          '--epr-hover-bg-color': '#2d2e35',\n                          '--epr-search-border-color': '#2d2e35',\n                          '--epr-border-radius': '0.5rem',\n                          '--epr-category-label-text-color': '#ffffff80',\n                          '--epr-scrollbar-width': '8px',\n                          '--epr-scrollbar-track-color': 'transparent',\n                          '--epr-scrollbar-thumb-color': 'rgba(255, 255, 255, 0.2)',\n                          '--epr-scrollbar-thumb-hover-color': 'rgba(255, 255, 255, 0.3)',\n                        }}\n                      />\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n\n          <textarea\n            ref={textareaRef}\n            rows=\"1\"\n            value={newMessage}\n            onChange={(e) => {\n              setNewMessage(e.target.value.slice(0, 500));\n              autoResize();\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSubmit(e);\n              }\n            }}\n            autoFocus\n            onFocus={(e) => e.target.select()}\n            placeholder={isLoading ? \"Sending...\" : \"Type a message...\"}\n            className={`\n              flex-1 rounded-lg px-4 py-2 ml-2 \n              focus:outline-none focus:ring-2 focus:ring-[#00ffbd] \n              resize-none overflow-hidden min-h-[40px] max-h-[150px]\n              custom-scrollbar transition-all duration-200\n              ${getTheme(currentTheme).input.bg}\n              ${getTheme(currentTheme).input.text}\n              placeholder:${getTheme(currentTheme).input.placeholder}\n            `}\n            disabled={isLoading}\n          />\n          \n          <button\n            type=\"submit\"\n            className={`\n              p-2 ml-2 transition-colors self-start mt-1\n              ${getTheme(currentTheme).input.text}\n              hover:text-[#00ffbd]\n              disabled:opacity-50 disabled:cursor-not-allowed\n            `}\n            disabled={!newMessage.trim() || isLoading}\n          >\n            <FaPaperPlane className=\"w-5 h-5\" />\n          </button>\n        </div>\n\n        <div className={`\n          mt-1 text-xs text-right\n          ${getTheme(currentTheme).time}\n        `}>\n            {newMessage.length}/500\n          </div>\n      </form>\n\n      {/* Add BanList Modal */}\n      <BanList \n        show={showBanList}\n        onClose={() => setShowBanList(false)}\n        bannedAddresses={bannedAddresses}\n        onUnban={async (address) => {\n          try {\n            const newBannedList = bannedAddresses.filter(a => a !== address);\n            await updateBannedUsers(collection.contractAddress, newBannedList);\n            setBannedAddresses(newBannedList);\n            toast.success('User unbanned successfully');\n          } catch (error) {\n            console.error('Error unbanning user:', error);\n            toast.error('Failed to unban user');\n          }\n        }}\n      />\n    </motion.div>\n  );\n};\n\nexport default Chat; ","import React, { useState, useEffect } from 'react';\nimport { FaEthereum } from 'react-icons/fa';\nimport { useParams } from 'react-router-dom';\nimport { AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';\nimport { format, subDays, subHours, startOfDay, isWithinInterval } from 'date-fns';\nimport { useTokenPrices } from '../../../hooks/useTokenPrices';\nimport { getCollection, getTokenDeploymentByAddress } from '../../../services/firebase';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\nimport { ethers } from 'ethers';\n\nconst TIME_RANGES = [\n  { label: '24h', value: '24h' },\n  { label: '7d', value: '7d' },\n  { label: '30d', value: '30d' },\n  { label: 'All', value: 'all' }\n];\n\n// Add ERC1155 ABI for transfer events\nconst ERC1155_ABI = [\n  'event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)',\n  'event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)'\n];\n\n// Network RPC URLs\nconst NETWORK_RPC_URLS = {\n  'moonwalker': 'https://moonwalker-rpc.eu-north-2.gateway.fm',\n  'unichain': 'https://sepolia.unichain.org',\n  'unichain-mainnet': 'https://unichain.blockscout.com',\n  'monad-testnet': 'testnet-rpc.monad.xyz'\n};\n\n// Helper function to get provider based on network/chainId\nconst getProvider = (network, chainId) => {\n  if (chainId === 130) {\n    return new ethers.JsonRpcProvider('https://unichain.blockscout.com');\n  } else if (chainId === 1301) {\n    return new ethers.JsonRpcProvider('https://sepolia.unichain.org');\n  } else if (network === 'moonwalker' || chainId === 1828369849) {\n    return new ethers.JsonRpcProvider(NETWORK_RPC_URLS.moonwalker);\n  } else if (network === 'monad-testnet' || chainId === 10143) {\n    return new ethers.JsonRpcProvider(NETWORK_RPC_URLS['monad-testnet']);\n  }\n  return new ethers.BrowserProvider(window.ethereum);\n};\n\n// Helper function to get explorer URL\nconst getExplorerUrl = (network, chainId) => {\n  if (chainId === 130) {\n    return 'https://unichain.blockscout.com';\n  } else if (chainId === 1301) {\n    return 'https://unichain-sepolia.blockscout.com';\n  } else if (network === 'moonwalker' || chainId === 1828369849) {\n    return 'https://moonwalker-blockscout.eu-north-2.gateway.fm';\n  } else if (network === 'monad-testnet' || chainId === 10143) {\n    return 'https://monad-testnet.socialscan.io';\n  } else if (network === 'polygon' || chainId === 137) {\n    return 'https://polygon.blockscout.com';\n  }\n  return 'https://sepolia.etherscan.io';\n};\n\nconst fetchTransferEvents = async (address, network, chainId) => {\n  try {\n    // Get the appropriate provider\n    const provider = getProvider(network, chainId);\n    \n    // Create contract instance\n    const contract = new ethers.Contract(address, ERC1155_ABI, provider);\n    \n    // Get the current block\n    const currentBlock = await provider.getBlockNumber();\n    const fromBlock = Math.max(0, currentBlock - 10000); // Last 10000 blocks\n    \n    console.log('Fetching transfer events:', {\n      network,\n      chainId,\n      address,\n      fromBlock,\n      currentBlock\n    });\n\n    // Get both types of transfer events\n    const singleFilter = contract.filters.TransferSingle();\n    const batchFilter = contract.filters.TransferBatch();\n    \n    const [singleEvents, batchEvents] = await Promise.all([\n      contract.queryFilter(singleFilter, fromBlock),\n      contract.queryFilter(batchFilter, fromBlock)\n    ]);\n\n    // Process TransferSingle events\n    const singleTransfers = singleEvents.map(event => ({\n      timestamp: null, // We'll get this from the block\n      type: 'ERC-1155',\n      value: event.args.value.toString(),\n      blockNumber: event.blockNumber\n    }));\n\n    // Process TransferBatch events - each value in the batch is a separate transfer\n    const batchTransfers = batchEvents.flatMap(event => {\n      return event.args.values.map((value, index) => ({\n        timestamp: null,\n        type: 'ERC-1155',\n        value: value.toString(),\n        blockNumber: event.blockNumber\n      }));\n    });\n\n    // Combine all transfers\n    const allTransfers = [...singleTransfers, ...batchTransfers];\n\n    // Get timestamps for all unique blocks\n    const uniqueBlocks = [...new Set(allTransfers.map(t => t.blockNumber))];\n    const blockData = await Promise.all(\n      uniqueBlocks.map(blockNumber => provider.getBlock(blockNumber))\n    );\n    const blockTimestamps = Object.fromEntries(\n      blockData.map(block => [block.number, block.timestamp * 1000]) // Convert to milliseconds\n    );\n\n    // Add timestamps to transfers\n    return allTransfers.map(transfer => ({\n      ...transfer,\n      timestamp: new Date(blockTimestamps[transfer.blockNumber])\n    }));\n  } catch (error) {\n    console.error('Error fetching transfer events:', error);\n    throw error;\n  }\n};\n\nconst fetchPolygonData = async (address) => {\n  try {\n    const apiKey = import.meta.env.VITE_POLYGONSCAN_API_KEY;\n    if (!apiKey) {\n      throw new Error('Polygonscan API key not found in environment variables');\n    }\n\n    // First, determine if this is an ERC721 or ERC1155\n    const abiResponse = await fetch(`/polygon-api/api?module=contract&action=getabi&address=${address}&apikey=${apiKey}`);\n    const abiData = await abiResponse.json();\n    \n    let isERC1155 = false;\n    if (abiData.status === '1') {\n      const abi = JSON.parse(abiData.result);\n      isERC1155 = abi.some(item => \n        item.type === 'event' && \n        (item.name === 'TransferBatch' || item.name === 'TransferSingle')\n      );\n    }\n\n    console.log('Contract type:', isERC1155 ? 'ERC1155' : 'ERC721');\n\n    // Get token transfers based on contract type\n    const transfersResponse = await fetch(`/polygon-api/api`, {\n      params: {\n        module: 'account',\n        action: isERC1155 ? 'token1155tx' : 'tokennfttx', // Use tokennfttx for NFT transfers\n        address: address,\n        apikey: apiKey,\n        sort: 'desc',\n        startblock: 0,\n        endblock: 99999999\n      }\n    });\n\n    const data = await transfersResponse.json();\n    console.log('Polygon transfer data:', data);\n\n    if (data.status === '1' && data.result) {\n      // Transform the data to match our expected format\n      const transfers = data.result.map(tx => ({\n        timestamp: new Date(parseInt(tx.timeStamp) * 1000),\n        type: isERC1155 ? 'ERC-1155' : 'ERC-721',\n        value: isERC1155 ? tx.tokenValue : '1', // For ERC721, each transfer is 1 NFT\n        blockNumber: parseInt(tx.blockNumber),\n        from: tx.from.toLowerCase(),\n        to: tx.to.toLowerCase()\n      }));\n      \n      // Filter out self-transfers and only count actual transfers\n      const validTransfers = transfers.filter(tx => \n        tx.from !== tx.to && // Exclude self-transfers\n        tx.from !== '0x0000000000000000000000000000000000000000' // Include mints\n      );\n\n      return { \n        transfers: validTransfers, \n        tokenData: { \n          type: isERC1155 ? 'ERC-1155' : 'ERC-721'\n        } \n      };\n    }\n    \n    if (data.status === '0' && data.message === 'No transactions found') {\n      console.log('No transactions found for address:', address);\n    }\n    \n    return { transfers: [], tokenData: null };\n  } catch (error) {\n    console.error('Error fetching Polygon data:', error);\n    const errorMessage = error.response?.data?.message || error.message;\n    console.error('Detailed error:', errorMessage);\n    \n    if (error.message.includes('CORS')) {\n      console.error('CORS error detected. Please ensure CORS is properly configured');\n    }\n    \n    throw error;\n  }\n};\n\nconst fetchBlockscoutData = async (address, network, chainId) => {\n  try {\n    const baseUrl = getExplorerUrl(network, chainId);\n    console.log('Using Blockscout URL:', baseUrl);\n    \n    // Ensure the address is properly formatted\n    const formattedAddress = address?.toLowerCase();\n    \n    // Get token info first to determine type\n    const tokenEndpoint = `/api/v2/tokens/${formattedAddress}`;\n    console.log('Fetching token info from:', `${baseUrl}${tokenEndpoint}`);\n    const tokenResponse = await axios.get(`${baseUrl}${tokenEndpoint}`);\n    const tokenData = tokenResponse.data;\n    \n    if (tokenData.type === 'ERC-1155') {\n      // For ERC1155, use blockchain events\n      const transfers = await fetchTransferEvents(address, network, chainId);\n      return { transfers, tokenData };\n    }\n    \n    // For other token types (ERC721), use Blockscout API\n    const transfersEndpoint = `/api/v2/tokens/${formattedAddress}/transfers`;\n    console.log('Fetching transfers from:', `${baseUrl}${transfersEndpoint}`);\n    const transfersResponse = await axios.get(`${baseUrl}${transfersEndpoint}`);\n    const transfers = transfersResponse.data.items || [];\n\n    return { transfers, tokenData };\n  } catch (error) {\n    console.error(`Error fetching ${network} data:`, error);\n    return { transfers: [], tokenData: null };\n  }\n};\n\n// Helper function to format value\nconst formatValue = (value, mintToken) => {\n  try {\n    if (!value || value === '0') return '0';\n    \n    // For custom tokens, we don't need to convert from Wei\n    if (mintToken?.type === 'custom' || \n        mintToken?.type === 'usdc' || \n        mintToken?.type === 'usdt') {\n      const numValue = Number(value);\n      return isNaN(numValue) ? '0' : numValue.toLocaleString('en-US', {\n        maximumFractionDigits: 6,\n        minimumFractionDigits: 0\n      });\n    }\n    \n    // For native tokens (ETH/MATIC), ensure we're working with a clean number\n    const numValue = typeof value === 'string' ? value.replace(/[^0-9.]/g, '') : value;\n    if (!numValue || isNaN(Number(numValue))) return '0';\n    \n    const floatValue = parseFloat(numValue);\n    return floatValue.toLocaleString('en-US', {\n      maximumFractionDigits: 6,\n      minimumFractionDigits: 0\n    });\n  } catch (error) {\n    console.error('Error formatting value:', error, typeof value, value);\n    return '0';\n  }\n};\n\n// Helper function to process volume data\nconst processVolumeData = (data, timeRange, collection) => {\n  const now = new Date();\n  let startDate;\n\n  switch (timeRange) {\n    case '24h':\n      startDate = subHours(now, 24);\n      break;\n    case '7d':\n      startDate = subDays(now, 7);\n      break;\n    case '30d':\n      startDate = subDays(now, 30);\n      break;\n    default:\n      startDate = new Date(0); // All time\n  }\n\n  // Group transactions by day\n  const volumeByDay = new Map();\n  \n  // Ensure data is an array before processing\n  const transfers = Array.isArray(data) ? data : [];\n  \n  transfers.forEach(item => {\n    const date = startOfDay(new Date(item.timestamp));\n    let volume = 0;\n    let ethValue = 0;\n\n    try {\n      if (item.type === 'ERC-1155') {\n        // For ERC1155, use the actual value from the transfer event\n        volume = Number(item.value);\n        ethValue = volume * (collection?.mintPrice ? Number(collection.mintPrice) : 0);\n      } else if (item.token?.type === 'ERC-721') {\n        volume = 1; // Each ERC721 transfer is 1 NFT\n        ethValue = collection?.mintPrice ? Number(collection.mintPrice) : 0;\n      }\n      \n      if (isWithinInterval(date, { start: startDate, end: now })) {\n        const existing = volumeByDay.get(date.getTime()) || { \n          volume: 0, \n          transactions: 0,\n          ethVolume: 0\n        };\n        volumeByDay.set(date.getTime(), {\n          volume: existing.volume + volume,\n          transactions: existing.transactions + 1,\n          ethVolume: existing.ethVolume + ethValue\n        });\n      }\n    } catch (error) {\n      console.error('Error processing transfer:', error, item);\n    }\n  });\n\n  return Array.from(volumeByDay.entries())\n    .map(([timestamp, data]) => ({\n      date: new Date(timestamp),\n      volume: data.volume,\n      transactions: data.transactions,\n      ethVolume: formatValue(data.ethVolume, collection?.mintToken)\n    }))\n    .sort((a, b) => a.date - b.date);\n};\n\nconst CustomTooltip = ({ active, payload, label, collection, tokenLogo }) => {\n  if (active && payload && payload.length) {\n    const renderTokenIcon = () => {\n      const tokenAddress = collection?.mintToken?.address?.toLowerCase();\n\n      // Check for ZERO token by address first\n      if (tokenAddress === '0xf4a67fd6f54ff994b7df9013744a79281f88766e') {\n        return <img src=\"/Zero.png\" alt=\"ZERO\" className=\"inline-block w-4 h-4 mr-1\" />;\n      }\n\n      const isNativeToken = !tokenAddress || tokenAddress === '0x0000000000000000000000000000000000000000';\n      if (isNativeToken) {\n        if (collection?.network === 'moonwalker' || collection?.chainId === 1828369849) {\n          return <img src=\"/Zero.png\" alt=\"ZERO\" className=\"inline-block w-4 h-4 mr-1\" />;\n        }\n        if (collection?.network === 'polygon') {\n          return <img src=\"/polygon.png\" alt=\"POL\" className=\"inline-block w-4 h-4 mr-1\" />;\n        }\n        if (collection?.network === 'monad-testnet' || collection?.chainId === 10143) {\n          return <img src=\"/monad.png\" alt=\"MON\" className=\"inline-block w-4 h-4 mr-1\" />;\n        }\n        return <FaEthereum className=\"inline mr-1\" />;\n      }\n\n      // For custom tokens\n      if (collection?.mintToken?.type === 'custom' && tokenLogo) {\n        return (\n          <img \n            src={tokenLogo} \n            alt=\"Token\" \n            className=\"inline-block w-4 h-4 mr-1 rounded-full\"\n            onError={(e) => {\n              e.target.onerror = null;\n              e.target.src = '/placeholder.png';\n            }}\n          />\n        );\n      }\n\n      return <FaEthereum className=\"inline mr-1\" />;\n    };\n\n    const getTokenSymbol = () => {\n      const tokenAddress = collection?.mintToken?.address?.toLowerCase();\n\n      // Check for ZERO token by address first\n      if (tokenAddress === '0xf4a67fd6f54ff994b7df9013744a79281f88766e') {\n        return 'ZERO';\n      }\n\n      const isNativeToken = !tokenAddress || tokenAddress === '0x0000000000000000000000000000000000000000';\n      if (isNativeToken) {\n        if (collection?.network === 'moonwalker' || collection?.chainId === 1828369849) {\n          return 'ZERO';\n        }\n        if (collection?.network === 'polygon') {\n          return 'POL';\n        }\n        if (collection?.network === 'monad-testnet' || collection?.chainId === 10143) {\n          return 'MON';\n        }\n        return 'ETH';\n      }\n\n      return collection?.mintToken?.type === 'custom' ? collection.mintToken.symbol : 'ETH';\n    };\n\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-[#1a1b1f] border border-gray-700 rounded-lg p-3 shadow-lg\"\n      >\n        <p className=\"text-white font-medium mb-1\">\n          {format(new Date(label), 'MMM dd, yyyy')}\n        </p>\n        <p className=\"text-[#00ffbd] text-sm\">\n          Volume: {payload[0].value.toLocaleString()} NFTs\n        </p>\n        <p className=\"text-gray-400 text-sm flex items-center\">\n          {renderTokenIcon()}\n          {payload[0].payload.ethVolume} {getTokenSymbol()}\n        </p>\n        <p className=\"text-gray-400 text-sm\">\n          Transactions: {payload[0].payload.transactions}\n        </p>\n      </motion.div>\n    );\n  }\n  return null;\n};\n\nexport default function VolumeMetrics({ contractAddress, network }) {\n  const [volumeData, setVolumeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [timeRange, setTimeRange] = useState('24h');\n  const { prices } = useTokenPrices();\n  const { symbol } = useParams();\n  const [collection, setCollection] = useState(null);\n  const [tokenLogo, setTokenLogo] = useState(null);\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Get collection data first\n        const collectionData = await getCollection(symbol);\n        setCollection(collectionData);\n\n        // Get the chainId from collection data\n        const chainId = collectionData?.chainId;\n\n        console.log('Loading volume data for:', {\n          network,\n          chainId,\n          contractAddress\n        });\n\n        // Fetch data from Blockscout\n        const { transfers, tokenData } = await fetchBlockscoutData(contractAddress, network, chainId);\n        \n        // Process volume data\n        if (transfers && transfers.length > 0) {\n          const processedData = processVolumeData(transfers, timeRange, collectionData);\n          setVolumeData(processedData);\n        } else {\n          setVolumeData([]);\n        }\n\n        // Fetch token logo if available\n        if (collectionData?.mintToken?.address) {\n          const tokenDeployment = await getTokenDeploymentByAddress(collectionData.mintToken.address);\n          if (tokenDeployment?.logo) {\n            setTokenLogo(tokenDeployment.logo);\n          }\n        }\n      } catch (error) {\n        console.error('Error loading volume metrics:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (contractAddress && symbol) {\n      loadData();\n    }\n  }, [contractAddress, network, timeRange, symbol]);\n\n  const renderTokenIcon = () => {\n    const tokenAddress = collection?.mintToken?.address?.toLowerCase();\n\n    // Check for ZERO token by address first\n    if (tokenAddress === '0xf4a67fd6f54ff994b7df9013744a79281f88766e') {\n      return <img src=\"/Zero.png\" alt=\"ZERO\" className=\"inline-block w-4 h-4 mr-1\" />;\n    }\n\n    const isNativeToken = !tokenAddress || tokenAddress === '0x0000000000000000000000000000000000000000';\n    if (isNativeToken) {\n      if (collection?.network === 'moonwalker' || collection?.chainId === 1828369849) {\n        return <img src=\"/Zero.png\" alt=\"ZERO\" className=\"inline-block w-4 h-4 mr-1\" />;\n      }\n      if (collection?.network === 'polygon') {\n        return <img src=\"/polygon.png\" alt=\"POL\" className=\"inline-block w-4 h-4 mr-1\" />;\n      }\n      if (collection?.network === 'monad-testnet' || collection?.chainId === 10143) {\n        return <img src=\"/monad.png\" alt=\"MON\" className=\"inline-block w-4 h-4 mr-1\" />;\n      }\n      return <FaEthereum className=\"inline mr-1\" />;\n    }\n\n    // For custom tokens\n    if (collection?.mintToken?.type === 'custom' && tokenLogo) {\n      return (\n        <img \n          src={tokenLogo} \n          alt=\"Token\" \n          className=\"inline-block w-4 h-4 mr-1 rounded-full\"\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = '/placeholder.png';\n          }}\n        />\n      );\n    }\n\n    return <FaEthereum className=\"inline mr-1\" />;\n  };\n\n  // Calculate summary metrics\n  const totalVolume = volumeData.reduce((sum, m) => sum + m.volume, 0);\n  const totalEthVolume = volumeData.reduce((sum, m) => sum + Number(m.ethVolume.replace(/,/g, '')), 0);\n  const totalTransactions = volumeData.reduce((sum, m) => sum + m.transactions, 0);\n  const avgVolume = totalTransactions > 0 ? totalVolume / totalTransactions : 0;\n\n  // Check if it's Monad Testnet\n  if (network === 'monad-testnet' || collection?.chainId === 10143) {\n    return (\n      <div className=\"flex items-center justify-center py-12 bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\">\n        <div className=\"text-center\">\n          <h3 className=\"text-xl font-medium text-gray-900 dark:text-white mb-2\">Coming Soon</h3>\n          <p className=\"text-gray-500 dark:text-gray-400\">Volume metrics for Monad Testnet are under development.</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#00ffbd]\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Time Range Selector */}\n      <div className=\"flex justify-end space-x-2\">\n        {TIME_RANGES.map(range => (\n          <motion.button\n            key={range.value}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => setTimeRange(range.value)}\n            className={`px-3 py-1 rounded-lg text-sm transition-colors ${\n              timeRange === range.value\n                ? 'bg-[#00ffbd] text-black font-medium'\n                : 'bg-white/10 dark:bg-[#1a1b1f] text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\n            }`}\n          >\n            {range.label}\n          </motion.button>\n        ))}\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\"\n        >\n          <h3 className=\"text-gray-500 dark:text-gray-400 text-sm mb-2\">Market Cap</h3>\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center\">\n            {renderTokenIcon()}\n            {collection?.mintPrice && totalVolume\n              ? (totalVolume * Number(collection.mintPrice)).toFixed(4)\n              : '0.0000'\n            }\n          </p>\n        </motion.div>\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\"\n        >\n          <h3 className=\"text-gray-500 dark:text-gray-400 text-sm mb-2\">Total Volume</h3>\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            {totalVolume.toLocaleString()} NFTs\n          </p>\n        </motion.div>\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n          className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\"\n        >\n          <h3 className=\"text-gray-500 dark:text-gray-400 text-sm mb-2\">\n            {(() => {\n              const tokenAddress = collection?.mintToken?.address?.toLowerCase();\n              if (tokenAddress === '0xf4a67fd6f54ff994b7df9013744a79281f88766e') return 'ZERO';\n              \n              const isNativeToken = !tokenAddress || tokenAddress === '0x0000000000000000000000000000000000000000';\n              if (isNativeToken) {\n                if (collection?.network === 'moonwalker' || collection?.chainId === 1828369849) return 'ZERO';\n                if (collection?.network === 'polygon') return 'POL';\n                if (collection?.network === 'monad-testnet' || collection?.chainId === 10143) return 'MON';\n                return 'ETH';\n              }\n              \n              return collection?.mintToken?.type === 'custom' ? collection.mintToken.symbol : 'ETH';\n            })()} Volume\n          </h3>\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center\">\n            {renderTokenIcon()}\n            {totalEthVolume.toFixed(4)}\n          </p>\n        </motion.div>\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\"\n        >\n          <h3 className=\"text-gray-500 dark:text-gray-400 text-sm mb-2\">Transactions</h3>\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            {totalTransactions.toLocaleString()}\n          </p>\n        </motion.div>\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.3 }}\n          className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\"\n        >\n          <h3 className=\"text-gray-500 dark:text-gray-400 text-sm mb-2\">Avg. Per Transaction</h3>\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            {avgVolume.toFixed(2)} NFTs\n          </p>\n        </motion.div>\n      </div>\n\n      {/* Volume Chart */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.4 }}\n        className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-4 border border-gray-100 dark:border-gray-800\"\n      >\n        <h3 className=\"text-gray-900 dark:text-white font-medium mb-4\">Volume</h3>\n        <div className=\"h-[300px]\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <AreaChart data={volumeData}>\n              <defs>\n                <linearGradient id=\"volumeGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"0%\" stopColor=\"#00ffbd\" stopOpacity={0.3} />\n                  <stop offset=\"100%\" stopColor=\"#00ffbd\" stopOpacity={0} />\n                </linearGradient>\n              </defs>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2d2f36\" />\n              <XAxis\n                dataKey=\"date\"\n                tickFormatter={date => format(date, timeRange === '24h' ? 'HH:mm' : 'MMM dd')}\n                stroke=\"#4b5563\"\n                tick={{ fill: '#4b5563' }}\n              />\n              <YAxis\n                stroke=\"#4b5563\"\n                tickFormatter={value => `${value} NFTs`}\n                tick={{ fill: '#4b5563' }}\n              />\n              <Tooltip content={<CustomTooltip collection={collection} tokenLogo={tokenLogo} />} />\n              <Area\n                type=\"monotone\"\n                dataKey=\"volume\"\n                stroke=\"#00ffbd\"\n                strokeWidth={2}\n                fill=\"url(#volumeGradient)\"\n                animationDuration={1000}\n                animationBegin={0}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n      </motion.div>\n\n      {volumeData.length === 0 && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          className=\"text-center py-12\"\n        >\n          <div className=\"text-gray-500 dark:text-gray-400\">No volume data available</div>\n        </motion.div>\n      )}\n    </div>\n  );\n} ","import React, { useState } from 'react';\nimport RecentMints from './tabs/RecentMints';\nimport TopHolders from './tabs/TopHolders';\nimport Chat from './tabs/Chat';\nimport VolumeMetrics from './tabs/VolumeMetrics';\n\nconst TABS = [\n  { id: 'recent', label: '🔥 Recent Mints' },\n  { id: 'holders', label: '👑 Top Holders' },\n  { id: 'chat', label: '💬 Chat' },\n  { id: 'volume', label: '📈 Volume' },\n];\n\n// Animated Cat Component for Coming Soon\nconst ComingSoonCat = () => (\n  <div className=\"flex flex-col items-center justify-center h-full space-y-6\">\n    <div className=\"relative w-48 h-48\">\n      {/* Cat Body */}\n      <div className=\"absolute w-32 h-24 bg-[#00ffbd]/20 rounded-[50%] left-1/2 -translate-x-1/2 top-1/2 -translate-y-1/2 animate-[float_3s_ease-in-out_infinite]\">\n        {/* Cat Head */}\n        <div className=\"absolute w-24 h-20 bg-[#00ffbd]/20 rounded-full -left-4 -top-8\">\n          {/* Eyes */}\n          <div className=\"absolute top-8 left-6 w-3 h-3 bg-[#00ffbd] rounded-full animate-[blink_4s_ease-in-out_infinite]\" />\n          <div className=\"absolute top-8 right-6 w-3 h-3 bg-[#00ffbd] rounded-full animate-[blink_4s_ease-in-out_infinite]\" />\n          {/* Nose */}\n          <div className=\"absolute top-11 left-1/2 -translate-x-1/2 w-2 h-1.5 bg-[#00ffbd] rounded-full\" />\n          {/* Whiskers */}\n          <div className=\"absolute top-12 left-4 w-6 h-0.5 bg-[#00ffbd]/60 rotate-[15deg] animate-[whiskerMove_4s_ease-in-out_infinite]\" />\n          <div className=\"absolute top-13 left-4 w-6 h-0.5 bg-[#00ffbd]/60 -rotate-[5deg] animate-[whiskerMove_4s_ease-in-out_infinite]\" />\n          <div className=\"absolute top-12 right-4 w-6 h-0.5 bg-[#00ffbd]/60 -rotate-[15deg] animate-[whiskerMove_4s_ease-in-out_infinite]\" />\n          <div className=\"absolute top-13 right-4 w-6 h-0.5 bg-[#00ffbd]/60 rotate-[5deg] animate-[whiskerMove_4s_ease-in-out_infinite]\" />\n        </div>\n        {/* Ears */}\n        <div className=\"absolute -top-12 left-2 w-8 h-8 bg-[#00ffbd]/20 rounded-tr-[50%] rounded-tl-[50%] -rotate-[15deg] animate-[earTwitch_5s_ease-in-out_infinite]\" />\n        <div className=\"absolute -top-12 right-8 w-8 h-8 bg-[#00ffbd]/20 rounded-tr-[50%] rounded-tl-[50%] rotate-[15deg] animate-[earTwitch_5s_ease-in-out_infinite_0.5s]\" />\n        {/* Legs */}\n        <div className=\"absolute bottom-0 left-2 w-4 h-8 bg-[#00ffbd]/20 rounded-b-full animate-[legSwing_2s_ease-in-out_infinite]\" />\n        <div className=\"absolute bottom-0 left-8 w-4 h-8 bg-[#00ffbd]/20 rounded-b-full animate-[legSwing_2s_ease-in-out_infinite_0.5s]\" />\n        <div className=\"absolute bottom-0 right-8 w-4 h-8 bg-[#00ffbd]/20 rounded-b-full animate-[legSwing_2s_ease-in-out_infinite_1s]\" />\n        <div className=\"absolute bottom-0 right-2 w-4 h-8 bg-[#00ffbd]/20 rounded-b-full animate-[legSwing_2s_ease-in-out_infinite_1.5s]\" />\n        {/* Tail */}\n        <div className=\"absolute -right-12 top-1/2 w-12 h-3 bg-[#00ffbd]/20 rounded-full origin-left animate-[tailWag_3s_ease-in-out_infinite]\" />\n      </div>\n    </div>\n    <div className=\"text-[#00ffbd] font-medium text-xl animate-pulse\">Coming Soon...</div>\n  </div>\n);\n\n// Add keyframes for the animations\nconst style = document.createElement('style');\nstyle.textContent = `\n  @keyframes float {\n    0%, 100% { transform: translate(-50%, -50%) translateY(0px); }\n    50% { transform: translate(-50%, -50%) translateY(-10px); }\n  }\n  @keyframes blink {\n    0%, 95%, 100% { transform: scaleY(1); }\n    97.5% { transform: scaleY(0); }\n  }\n  @keyframes tailWag {\n    0%, 100% { transform: rotate(0deg); }\n    25% { transform: rotate(20deg); }\n    75% { transform: rotate(-20deg); }\n  }\n  @keyframes legSwing {\n    0%, 100% { transform: rotate(0deg); }\n    50% { transform: rotate(15deg); }\n  }\n  @keyframes whiskerMove {\n    0%, 100% { transform: rotate(var(--rotate, 0deg)); }\n    50% { transform: rotate(calc(var(--rotate, 0deg) + 5deg)); }\n  }\n  @keyframes earTwitch {\n    0%, 90%, 100% { transform: rotate(var(--rotate, 0deg)); }\n    95% { transform: rotate(calc(var(--rotate, 0deg) + 5deg)); }\n  }\n`;\ndocument.head.appendChild(style);\n\nexport default function AnalyticsTabs({ collection }) {\n  const [activeTab, setActiveTab] = useState('recent');\n\n  // Make collection data available globally for child components\n  if (collection?.contractAddress) {\n    window.collectionData = collection;\n  }\n\n  return (\n    <div className=\"w-full\">\n      {/* Tab Navigation */}\n      <div className=\"flex gap-2 mb-6 overflow-x-auto hide-scrollbar\">\n        {TABS.map(tab => (\n          <div key={tab.id} className=\"relative group\">\n            <button\n              onClick={() => setActiveTab(tab.id)}\n              className={`\n                px-4 py-2 rounded-lg text-sm font-medium whitespace-nowrap\n                transition-all duration-200 relative group\n                ${activeTab === tab.id \n                  ? 'text-[#00ffbd] bg-[#00ffbd]/10' \n                  : 'text-gray-500 dark:text-gray-400 bg-white dark:bg-[#1a1b1f] hover:bg-gray-50 dark:hover:bg-[#1a1b1f]/80'\n                }\n                border border-gray-100 dark:border-gray-800\n              `}\n            >\n              {/* Glow Effect */}\n              {activeTab === tab.id && (\n                <div className=\"absolute inset-0 rounded-lg bg-[#00ffbd]/5 blur-xl -z-10\" />\n              )}\n              \n              {/* Tab Label */}\n              <span className=\"relative z-10\">{tab.label}</span>\n              \n              {/* Active Indicator */}\n              <div className={`\n                absolute bottom-0 left-0 right-0 h-0.5 rounded-full\n                transition-all duration-200\n                ${activeTab === tab.id ? 'bg-[#00ffbd]' : 'bg-transparent group-hover:bg-[#00ffbd]/30'}\n              `} />\n            </button>\n\n            {/* Coming Soon Tooltip */}\n            {tab.comingSoon && (\n              <div className=\"absolute -top-8 left-1/2 -translate-x-1/2 px-2 py-1 bg-gray-900 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\n                Coming Soon\n                <div className=\"absolute bottom-0 left-1/2 -translate-x-1/2 translate-y-full w-2 h-2 bg-gray-900 rotate-45\" />\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Modified Tab Content Container with Futuristic Style */}\n      <div className=\"relative\">\n        {/* L-shaped corners */}\n        <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n          <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n          <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n        </div>\n        <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n          <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n          <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n        </div>\n        <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n          <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n          <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n        </div>\n        <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n          <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n          <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n        </div>\n\n        {/* Glowing dots in corners */}\n        <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n        <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n        <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n        <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n        {/* Three dots in top right */}\n        <div className=\"absolute top-3 right-3 flex gap-1 z-20\">\n          {[1, 2, 3].map((i) => (\n            <div\n              key={i}\n              className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n              style={{ animationDelay: `${i * 0.2}s` }}\n            />\n          ))}\n        </div>\n\n        {/* Main Content */}\n        <div className=\"relative z-10 bg-white dark:bg-[#1a1b1f] rounded-xl\">\n          <div className=\"p-6 h-[400px] md:h-[600px]\">\n            {activeTab === 'recent' && <RecentMints />}\n            {activeTab === 'holders' && <TopHolders collection={collection} />}\n            {activeTab === 'chat' && <Chat \n              collection={{\n                ...collection,\n                creator: collection.creator || collection.creatorAddress,\n                contractAddress: collection.contractAddress\n              }} \n            />}\n            {activeTab === 'volume' && <VolumeMetrics contractAddress={collection?.contractAddress} network={collection?.network} />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect, useMemo, Fragment } from 'react';\nimport { FaEthereum, FaDiscord, FaTwitter, FaTelegram } from 'react-icons/fa';\nimport { BiMinus, BiPlus, BiCopy, BiCheck, BiX, BiWorld } from 'react-icons/bi';\nimport toast from 'react-hot-toast';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport TokenIcon from './TokenIcon';\nimport { NFTCollectionABI } from '../abi/NFTCollection';\nimport { ethers } from 'ethers';\nimport { getCollection, updateCollectionMinted, subscribeToCollection, saveMintData, getTokenDeploymentByAddress } from '../services/firebase';\nimport FuturisticCard from './FuturisticCard';\nimport { ipfsToHttp } from '../utils/ipfs';\nimport AnalyticsTabs from './analytics/AnalyticsTabs';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { prepareAndUploadMetadata } from '../services/metadata';\nimport { Dialog, Transition } from '@headlessui/react';\nimport Confetti from 'react-confetti';\nimport clsx from 'clsx';\nimport { motion } from 'framer-motion';\n\n\nconst validateAddress = (address) => {\n  return /^0x[a-fA-F0-9]{40}$/.test(address);\n};\n\nfunction CountdownTimer({ targetDate }) {\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  function calculateTimeLeft() {\n    const difference = +new Date(targetDate) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  }\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [targetDate]);\n\n  if (Object.keys(timeLeft).length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"grid grid-cols-4 gap-2 text-center\">\n      {Object.entries(timeLeft).map(([key, value]) => (\n        <div key={key} className=\"bg-gray-50 dark:bg-[#0d0e12] rounded-lg p-2 border border-gray-200 dark:border-gray-800\">\n          <div className=\"text-xl font-bold text-[#00ffbd]\">\n            {String(value).padStart(2, '0')}\n          </div>\n          <div className=\"text-xs text-gray-500 dark:text-gray-400 capitalize\">{key}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n// Add this new countdown component for mint end\nfunction MintEndCountdown({ endDate, infiniteMint }) {\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  function calculateTimeLeft() {\n    if (infiniteMint) return null;\n    const now = new Date().getTime();\n    const end = new Date(endDate).getTime();\n    const difference = end - now;\n\n    if (difference <= 0) return null;\n\n    return {\n      days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n      hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n      minutes: Math.floor((difference / 1000 / 60) % 60),\n      seconds: Math.floor((difference / 1000) % 60)\n    };\n  }\n\n  useEffect(() => {\n    if (infiniteMint) return;\n\n    const timer = setInterval(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [endDate, infiniteMint]);\n\n  if (infiniteMint || !timeLeft) return null;\n\n  return (\n    <div className=\"mb-4\">\n      <div className=\"text-center mb-2\">\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">Mint Ends In</h3>\n      </div>\n      <div className=\"grid grid-cols-4 gap-2 text-center\">\n        {Object.entries(timeLeft).map(([key, value]) => (\n          <div key={key} className=\"bg-gray-50 dark:bg-[#0d0e12] rounded-lg p-2 border border-gray-200 dark:border-gray-800\">\n            <div className=\"text-xl font-bold text-[#00ffbd]\">\n              {String(value).padStart(2, '0')}\n            </div>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 capitalize\">{key}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction RemainingMintAmount({ userMintedAmount, maxPerWallet }) {\n  const remaining = maxPerWallet - userMintedAmount;\n  \n  return (\n    <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\">\n      You can mint {remaining} more NFT{remaining !== 1 ? 's' : ''}\n    </div>\n  );\n}\n\n// Icons for minting progress modal\nconst Icons = {\n  Preparing: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ animation: 'rotate 2s linear infinite' }}>\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M12 6v2m0 8v2M6 12h2m8 0h2\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite' }} />\n        <path d=\"M7.75 7.75l1.5 1.5m5.5 5.5l1.5 1.5m0-8.5l-1.5 1.5m-5.5 5.5l-1.5 1.5\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite', animationDelay: '0.2s' }} />\n      </g>\n    </svg>\n  ),\n  UploadingMetadata: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M12 18V8m0 0l-4 4m4-4l4 4\" strokeLinecap=\"round\" strokeLinejoin=\"round\" style={{ animation: 'bounce 1s ease-in-out infinite' }} />\n        <path d=\"M8 18h8\" strokeLinecap=\"round\" style={{ animation: 'fadeIn 1s ease-in-out infinite', animationDelay: '0.5s' }} />\n      </g>\n    </svg>\n  ),\n  Minting: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M7 8h10M7 12h10M7 16h10\" strokeLinecap=\"round\" style={{ animation: 'draw 2s ease-in-out infinite' }} />\n        <path d=\"M12 6v12\" strokeLinecap=\"round\" style={{ animation: 'draw 2s ease-in-out infinite', animationDelay: '0.5s' }} />\n        <circle cx=\"12\" cy=\"12\" r=\"3\" style={{ animation: 'rotate 4s linear infinite' }} />\n      </g>\n    </svg>\n  ),\n  Completed: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"animate-[fadeIn_0.5s_ease-in-out]\" />\n        <path d=\"M8 12l3 3 5-5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.5s_ease-in-out_forwards]\" style={{ strokeDasharray: 20, strokeDashoffset: 20 }} />\n      </g>\n    </svg>\n  ),\n  Error: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\" style={{ animation: 'shake 0.5s ease-in-out' }}>\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"text-red-500\" />\n        <path d=\"M12 8v5\" strokeLinecap=\"round\" className=\"text-red-500\" />\n        <path d=\"M12 16v.01\" strokeLinecap=\"round\" className=\"text-red-500\" />\n      </g>\n    </svg>\n  )\n};\n\n// Progress Modal Component\nconst ProgressModal = ({ isOpen, onClose, currentStep, error }) => {\n  const steps = [\n    { key: 'preparing', label: 'Preparing Transaction', icon: Icons.Preparing },\n    { key: 'uploading', label: 'Preparing Mint', icon: Icons.UploadingMetadata },\n    { key: 'minting', label: 'Minting NFT', icon: Icons.Minting },\n    { key: 'completed', label: 'Minting Completed', icon: Icons.Completed }\n  ];\n\n  const currentStepIndex = steps.findIndex(step => step.key === currentStep);\n  const isError = Boolean(error);\n\n  // Format error message to be more user-friendly\n  const formatErrorMessage = (error) => {\n    if (error?.includes('user rejected action')) {\n      return 'Transaction was rejected. Please try again.';\n    }\n    if (error?.includes('insufficient funds')) {\n      return 'Insufficient funds to complete the transaction.';\n    }\n    return error?.replace(/\\{\"action\":\"sendTransaction\".*$/, '') || 'An error occurred';\n  };\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/25 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 shadow-xl transition-all\">\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                  {isError ? 'Error Minting NFT' : 'Minting NFT'}\n                </Dialog.Title>\n                <div className=\"space-y-4\">\n                  {steps.map((step, index) => {\n                    const Icon = step.icon;\n                    const isActive = index === currentStepIndex;\n                    const isCompleted = !isError && index < currentStepIndex;\n                    const isErrorStep = isError && index === currentStepIndex;\n\n                    return (\n                      <div\n                        key={step.key}\n                        className={clsx(\n                          'flex items-center gap-3 p-3 rounded-xl transition-colors',\n                          {\n                            'bg-[#00ffbd]/10 text-[#00ffbd]': isActive && !isErrorStep,\n                            'text-[#00ffbd]': isCompleted,\n                            'bg-red-500/10 text-red-500': isErrorStep,\n                            'text-gray-400': !isActive && !isCompleted && !isErrorStep\n                          }\n                        )}\n                      >\n                        <Icon />\n                        <div className=\"flex-1\">\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{step.label}</span>\n                        </div>\n                        {isCompleted && (\n                          <svg className=\"w-5 h-5 text-[#00ffbd]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n                {isError && (\n                  <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\n                    <div className=\"flex items-start gap-3\">\n                      <Icons.Error />\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\n                        <p className=\"mt-1 text-sm text-red-400\">\n                          {formatErrorMessage(error)}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4 flex justify-end\">\n                      <button\n                        onClick={onClose}\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                )}\n                {currentStep === 'completed' && (\n                  <div className=\"mt-6 text-center\">\n                    <p className=\"text-[#00ffbd] font-medium\">NFT minted successfully!</p>\n                  </div>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Star Rating Modal Component\nconst StarRatingModal = ({ isOpen, onClose, onRate }) => {\n  const [rating, setRating] = useState(0);\n  const [hoveredRating, setHoveredRating] = useState(0);\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/25 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 shadow-xl transition-all\">\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white text-center mb-4\">\n                  Rate Your Minting Experience\n                </Dialog.Title>\n                <div className=\"flex justify-center gap-2 mb-6\">\n                  {[1, 2, 3, 4, 5].map((star) => (\n                    <button\n                      key={star}\n                      onMouseEnter={() => setHoveredRating(star)}\n                      onMouseLeave={() => setHoveredRating(0)}\n                      onClick={() => {\n                        setRating(star);\n                        onRate(star);\n                        setTimeout(onClose, 500);\n                      }}\n                      className=\"p-1 transition-transform hover:scale-110\"\n                    >\n                      <svg\n                        className={`w-8 h-8 ${\n                          star <= (hoveredRating || rating)\n                            ? 'text-[#00ffbd]'\n                            : 'text-gray-300 dark:text-gray-600'\n                        } transition-colors`}\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                      >\n                        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                      </svg>\n                    </button>\n                  ))}\n                </div>\n                <div className=\"text-center text-sm text-gray-500 dark:text-gray-400\">\n                  {hoveredRating === 1 && \"Could be better\"}\n                  {hoveredRating === 2 && \"It's okay\"}\n                  {hoveredRating === 3 && \"Good\"}\n                  {hoveredRating === 4 && \"Great\"}\n                  {hoveredRating === 5 && \"Excellent!\"}\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nexport default function CollectionPage() {\n  const { symbol } = useParams();\n  const navigate = useNavigate();\n  const [mintAmount, setMintAmount] = useState(1);\n  const [collection, setCollection] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [checkingAddress, setCheckingAddress] = useState('');\n  const [isEligible, setIsEligible] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [maxSupply, setMaxSupply] = useState(0);\n  const [userMintedAmount, setUserMintedAmount] = useState(0);\n  const [totalMinted, setTotalMinted] = useState(0);\n  const [provider, setProvider] = useState(null);\n  const [whitelistChecked, setWhitelistChecked] = useState(false);\n  const [isWhitelisted, setIsWhitelisted] = useState(false);\n  const [whitelistEntry, setWhitelistEntry] = useState(null);\n  const [paymentTokenInfo, setPaymentTokenInfo] = useState(null);\n  const [tokenLogos, setTokenLogos] = useState({});\n  const [currentChainId, setCurrentChainId] = useState(null);\n  const [showProgressModal, setShowProgressModal] = useState(false);\n  const [progressStep, setProgressStep] = useState(null);\n  const [progressError, setProgressError] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  // Add chain ID effect at component level\n  useEffect(() => {\n    const getChainId = async () => {\n      if (window.ethereum) {\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const parsedChainId = parseInt(chainId, 16);\n        console.log('Current Chain ID:', parsedChainId);\n        console.log('Current Network:', collection?.network);\n        setCurrentChainId(parsedChainId);\n      }\n    };\n    getChainId();\n\n    // Listen for chain changes\n    const handleChainChanged = (chainId) => {\n      setCurrentChainId(parseInt(chainId, 16));\n    };\n    window.ethereum?.on('chainChanged', handleChainChanged);\n\n    return () => {\n      window.ethereum?.removeListener('chainChanged', handleChainChanged);\n    };\n  }, []);\n\n  // Load on-chain data when wallet connects\n  useEffect(() => {\n    if (collection?.contractAddress && account) {\n      const loadContractData = async () => {\n        try {\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          const contract = new ethers.Contract(\n            collection.contractAddress,\n            collection.type === 'ERC1155' ? NFTCollectionABI.ERC1155Royalty : NFTCollectionABI.ERC721Royalty,\n            provider\n          );\n\n          // Get contract data based on type and network\n          if (collection.type === 'ERC1155') {\n            const [totalMinted, userMinted] = await Promise.all([\n              contract.totalSupply(),\n              contract.mintedPerWallet(account)\n            ]);\n            setTotalMinted(Number(totalMinted));\n            setUserMintedAmount(Number(userMinted));\n          } else {\n            // Add higher gas limit for Unichain networks and Monad Testnet\n            const options = collection.network === 'unichain-mainnet' || collection.network === 'unichain' \n              ? { gasLimit: 1000000 }\n              : collection.network === 'monad-testnet'\n                ? { gasLimit: 5000000 }\n                : {};\n              \n            const [totalMinted, userMinted] = await Promise.all([\n              contract.totalSupply(options),\n              contract.mintedPerWallet(account, options)\n            ]);\n            setTotalMinted(Number(totalMinted));\n            setUserMintedAmount(Number(userMinted));\n          }\n        } catch (error) {\n          console.error('Error loading contract data:', error);\n          // Reset user minted amount when there's an error or wallet disconnects\n          setUserMintedAmount(0);\n        }\n      };\n\n      loadContractData();\n    } else {\n      // Reset states when no wallet is connected\n      setUserMintedAmount(0);\n    }\n  }, [account, collection?.contractAddress]);\n\n  // Add this effect to reset states on disconnect\n  useEffect(() => {\n    if (!account) {\n      setUserMintedAmount(0);\n    }\n  }, [account]);\n\n  // Calculate progress based on maxSupply from contract\n  const progress = maxSupply > 0 ? (totalMinted / maxSupply) * 100 : 0;\n\n  // Load collection data\n  useEffect(() => {\n    const loadCollectionData = async () => {\n      try {\n        const data = await getCollection(symbol);\n        if (!data) {\n          toast.error('Collection not found');\n          navigate('/');\n          return;\n        }\n        setCollection(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error loading collection:', error);\n        toast.error('Error loading collection data');\n      }\n    };\n\n    loadCollectionData();\n  }, [symbol, navigate]);\n\n  // Check account\n  useEffect(() => {\n    const checkAccount = async () => {\n      if (window.ethereum) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n      }\n    };\n\n    checkAccount();\n  }, []);\n\n  // Add this effect to subscribe to real-time updates\n  useEffect(() => {\n    if (!symbol) return;\n    \n    const unsubscribe = subscribeToCollection(symbol, (data) => {\n      setCollection(data);\n      setTotalMinted(data.totalMinted || 0);\n    });\n\n    return () => unsubscribe();\n  }, [symbol]);\n\n  // Update maxSupply handling\n  useEffect(() => {\n    // Initialize maxSupply to 0 if collection is not loaded yet\n    if (!collection) {\n      setMaxSupply(0);\n      return;\n    }\n\n    // For Unichain mainnet, Unichain testnet, and Moonwalker, use the collection data directly\n    if (collection.network === 'unichain-mainnet' || collection.network === 'unichain' || collection.network === 'moonwalker') {\n      setMaxSupply(Number(collection.maxSupply) || 0);\n      return;\n    }\n\n    // For other networks, try to get from contract\n    if (collection.contractAddress) {\n      const getMaxSupply = async () => {\n        try {\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          const contract = new ethers.Contract(\n            collection.contractAddress,\n            collection.type === 'ERC1155' ? NFTCollectionABI.ERC1155Royalty : NFTCollectionABI.ERC721Royalty,\n            provider\n          );\n\n          // Get maxSupply from contract config\n          const config = await contract.config();\n          setMaxSupply(Number(config.maxSupply) || 0);\n        } catch (error) {\n          // Fallback to collection data\n          setMaxSupply(Number(collection.maxSupply) || 0);\n        }\n      };\n\n      getMaxSupply();\n    } else {\n      // Fallback to collection data if no contract address\n      setMaxSupply(Number(collection.maxSupply) || 0);\n    }\n  }, [collection]);\n\n  // Add this useEffect to initialize provider\n  useEffect(() => {\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      setProvider(provider);\n    }\n  }, []);\n\n  // Update payment token info handling\n  useEffect(() => {\n    const fetchPaymentTokenInfo = async () => {\n      if (collection?.contractAddress && window.ethereum) {\n        try {\n          // Use the payment token info directly from collection data\n          const paymentToken = collection.mintToken;\n\n          if (paymentToken && paymentToken.type === 'custom') {\n            setPaymentTokenInfo({\n              address: paymentToken.address,\n              symbol: paymentToken.symbol || collection.customTokenSymbol || 'TOKEN',\n              decimals: 18,\n              isNative: false\n            });\n          } else {\n            // Native token case\n            setPaymentTokenInfo({\n              address: ethers.ZeroAddress,\n              symbol: collection.network === 'polygon' ? 'POL' :\n                     collection.network === 'moonwalker' ? 'ZERO' : 'ETH',\n              decimals: 18,\n              isNative: true\n            });\n          }\n        } catch (error) {\n          // Silently fail\n        }\n      }\n    };\n\n    fetchPaymentTokenInfo();\n  }, [collection?.contractAddress, collection?.network]);\n\n  useEffect(() => {\n    const fetchTokenLogo = async () => {\n      if (collection?.mintToken?.address) {\n        try {\n          const tokenDeployment = await getTokenDeploymentByAddress(collection.mintToken.address);\n          console.log('Token Deployment Result:', tokenDeployment);\n          \n          if (tokenDeployment?.logo) {\n            setTokenLogos(prev => ({\n              ...prev,\n              [collection.mintToken.address.toLowerCase()]: tokenDeployment.logo\n            }));\n          }\n        } catch (error) {\n          console.error('Error fetching token logo:', error);\n        }\n      }\n    };\n\n    fetchTokenLogo();\n  }, [collection?.mintToken?.address]);\n\n  const renderCurrencyLogo = () => {\n    const tokenAddress = collection?.mintToken?.address?.toLowerCase();\n    const isNativeToken = !tokenAddress || tokenAddress === '0x0000000000000000000000000000000000000000';\n\n    // Handle native tokens based on network\n    if (isNativeToken) {\n      if (collection?.network === 'moonwalker' || collection?.chainId === 1828369849) {\n        return <img src=\"/Zero.png\" alt=\"ZERO\" className=\"w-5 h-5\" />;\n      }\n      if (collection?.network === 'polygon') {\n        return <img src=\"/polygon.png\" alt=\"POL\" className=\"w-5 h-5\" />;\n      }\n      if (collection?.network === 'monad-testnet' || collection?.chainId === 10143) {\n        return <img src=\"/monad.png\" alt=\"MON\" className=\"w-5 h-5\" />;\n      }\n      // Both Unichain mainnet and testnet use ETH\n      if (collection?.network === 'unichain-mainnet' || collection?.network === 'unichain') {\n        return <FaEthereum className=\"w-5 h-5 text-[#00ffbd]\" />;\n      }\n      return <FaEthereum className=\"w-5 h-5 text-[#00ffbd]\" />;\n    }\n\n    // Handle ZERO token by address\n    if (tokenAddress === '0xf4a67fd6f54ff994b7df9013744a79281f88766e') {\n      return <img src=\"/Zero.png\" alt=\"ZERO\" className=\"w-5 h-5\" />;\n    }\n\n    // For other custom tokens with logo\n    const logoUrl = tokenLogos[tokenAddress];\n    if (logoUrl) {\n      return (\n        <img \n          src={logoUrl}\n          alt={collection.mintToken.symbol || 'Token'}\n          className=\"w-5 h-5 rounded-full\"\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = '/token-default.png';\n          }}\n        />\n      );\n    }\n    \n    // Default fallback\n    return <img src=\"/token-default.png\" alt=\"Token\" className=\"w-5 h-5 rounded-full\" />;\n  };\n\n  // Add window size effect\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  if (loading || !collection) {\n    return (\n      <motion.div \n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.3 }}\n        className=\"min-h-screen bg-inherit\"\n      >\n        {/* Hero Section Skeleton */}\n        <div className=\"relative h-[300px] sm:h-[400px] bg-gradient-to-br from-gray-100/5 to-gray-200/5 dark:from-gray-800/10 dark:to-gray-700/10\">\n          <div className=\"absolute inset-0 bg-gradient-to-t from-gray-50 dark:from-[#0a0b0f] to-transparent\" />\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 -mt-32 relative z-10\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* Collection Info Card Skeleton */}\n            <div className=\"relative\">\n              <div className=\"bg-white dark:bg-[#0a0b0f] p-6 rounded-lg border border-gray-200 dark:border-gray-800\">\n                <div className=\"flex items-center gap-6 mb-6\">\n                  <div className=\"w-24 h-24 rounded-xl bg-gray-200 dark:bg-gray-800 animate-pulse\" />\n                  <div className=\"flex-1\">\n                    <div className=\"h-8 w-3/4 bg-gray-200 dark:bg-gray-800 rounded animate-pulse mb-2\" />\n                    <div className=\"h-4 w-1/4 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n                  </div>\n                </div>\n                <div className=\"space-y-2 mb-6\">\n                  <div className=\"h-4 w-full bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n                  <div className=\"h-4 w-5/6 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n                  <div className=\"h-4 w-4/6 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n                </div>\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-4\">\n                  {[1, 2, 3, 4, 5, 6].map((i) => (\n                    <div key={i} className=\"h-20 bg-gray-200 dark:bg-gray-800 rounded-lg animate-pulse\" />\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Minting Section Card Skeleton */}\n            <div className=\"relative\">\n              <div className=\"bg-white dark:bg-[#0a0b0f] p-6 rounded-lg border border-gray-200 dark:border-gray-800\">\n                <div className=\"h-12 w-full bg-gray-200 dark:bg-gray-800 rounded-lg animate-pulse mb-6\" />\n                <div className=\"h-48 w-full bg-gray-200 dark:bg-gray-800 rounded-lg animate-pulse mb-6\" />\n                <div className=\"space-y-4\">\n                  <div className=\"h-8 w-full bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n                  <div className=\"h-4 w-3/4 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n                  <div className=\"h-2 w-full bg-gray-200 dark:bg-gray-800 rounded-full animate-pulse\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </motion.div>\n    );\n  }\n\n  const handleMint = async () => {\n    try {\n      if (!account) {\n        setProgressStep('error');\n        setShowProgressModal(true);\n        setProgressError('Please connect your wallet first');\n        return;\n      }\n\n      setProgressStep('preparing');\n      setShowProgressModal(true);\n      setProgressError(null);\n\n      // Prepare metadata before minting\n      setProgressStep('preparing');\n      const imageResponse = await fetch(collection.previewUrl);\n      const imageBlob = await imageResponse.blob();\n      const artworkFile = new File([imageBlob], 'artwork.png', { type: 'image/png' });\n      \n      const { metadataUrl } = await prepareAndUploadMetadata(\n        {\n          ...collection,\n          name: collection.name,\n          description: collection.description,\n          attributes: collection.attributes || [],\n          website: collection.website,\n          background_color: collection.background_color\n        },\n        artworkFile\n      );\n\n      // Extract IPFS hash without the protocol prefix\n      const ipfsHash = metadataUrl.replace('ipfs://', '').trim();\n\n      const signer = await provider.getSigner();\n      \n      // Calculate mint price in Wei\n      let mintPriceWei;\n      try {\n        if (collection.mintToken?.type === 'custom') {\n          // For custom tokens, use the price as is (no conversion needed)\n          mintPriceWei = BigInt(Math.floor(Number(collection.mintPrice) * Math.pow(10, collection.mintToken.decimals || 18)));\n        } else {\n          // For native tokens (ETH), convert to Wei\n          mintPriceWei = ethers.parseEther(collection.mintPrice.toString());\n        }\n      } catch (error) {\n        mintPriceWei = BigInt(0);\n      }\n\n      // Calculate total cost\n      const totalCost = mintPriceWei * BigInt(mintAmount);\n\n      setProgressStep('minting');\n\n      const nftContract = new ethers.Contract(\n        collection.contractAddress,\n        collection.type === 'ERC1155' ? NFTCollectionABI.ERC1155Royalty : NFTCollectionABI.ERC721Royalty,\n        signer\n      );\n\n      // Mint the NFT with proper parameters based on contract type\n      let tx;\n      if (collection.type === 'ERC1155') {\n        if (collection.mintToken?.type === 'custom') {\n          // First approve the NFT contract to spend the custom token\n          const tokenContract = new ethers.Contract(collection.mintToken.address, ['function approve(address spender, uint256 amount) public returns (bool)'], signer);\n          const approveTx = await tokenContract.approve(collection.contractAddress, totalCost);\n          await approveTx.wait();\n          \n          // Then mint with custom token\n          tx = await nftContract.mint(0, mintAmount, ipfsHash);\n        } else {\n          // Mint with native token (ETH)\n          tx = await nftContract.mint(0, mintAmount, ipfsHash, {\n            value: totalCost\n          });\n        }\n      } else {\n        if (collection.mintToken?.type === 'custom') {\n          // First approve the NFT contract to spend the custom token\n          const tokenContract = new ethers.Contract(collection.mintToken.address, ['function approve(address spender, uint256 amount) public returns (bool)'], signer);\n          const approveTx = await tokenContract.approve(collection.contractAddress, totalCost);\n          await approveTx.wait();\n          \n          // Then mint with custom token\n          tx = await nftContract.mint(mintAmount, ipfsHash);\n        } else {\n          // Mint with native token (ETH)\n          tx = await nftContract.mint(mintAmount, ipfsHash, {\n            value: totalCost,\n            gasLimit: collection.network === 'unichain' ? 1000000 * mintAmount : 500000 * mintAmount // Higher gas limit for Unichain\n          });\n        }\n      }\n\n      const receipt = await tx.wait();\n\n      // Update states after successful mint\n      const [newTotal, newUserMinted] = await Promise.all([\n        nftContract.totalSupply(),\n        nftContract.mintedPerWallet(account)\n      ]);\n\n      setTotalMinted(Number(newTotal));\n      setUserMintedAmount(Number(newUserMinted));\n      await updateCollectionMinted(symbol, Number(newTotal));\n\n      // Format values for Firebase\n      let formattedValue = '0';\n      let formattedMintPrice = '0';\n      \n      try {\n        if (collection.mintPrice) {\n          formattedMintPrice = parseFloat(collection.mintPrice).toFixed(6);\n          const ethValue = ethers.formatEther(totalCost);\n          formattedValue = parseFloat(ethValue).toFixed(6);\n        }\n      } catch (error) {\n        // Silently handle formatting errors\n      }\n\n      // Get current chain ID\n      const network = await provider.getNetwork();\n      const currentChainId = Number(network.chainId);\n\n      // Save mint data to Firebase\n      await saveMintData({\n        collectionAddress: collection.contractAddress,\n        minterAddress: account,\n        tokenId: collection.type === 'ERC1155' ? '0' : String(newTotal),\n        quantity: String(mintAmount),\n        hash: receipt.hash,\n        image: collection.previewUrl,\n        value: formattedValue,\n        type: collection.type,\n        name: collection.name,\n        symbol: collection.symbol,\n        artworkType: collection.artworkType || 'image',\n        network: currentChainId === 130 ? 'unichain-mainnet' :\n                currentChainId === 1301 ? 'unichain' :\n                currentChainId === 137 ? 'polygon' :\n                currentChainId === 1828369849 ? 'moonwalker' :\n                currentChainId === 10143 ? 'monad-testnet' : 'sepolia',\n        mintPrice: formattedMintPrice,\n        paymentToken: collection.mintToken || null\n      });\n\n      // Show completed state and trigger confetti\n      setProgressStep('completed');\n      setShowConfetti(true);\n\n      // Close progress modal and show rating after a delay\n      setTimeout(() => {\n        setShowProgressModal(false);\n        setProgressStep(null);\n        setProgressError(null);\n        \n        // Show rating modal after a short delay\n        setTimeout(() => {\n          setShowRatingModal(true);\n        }, 1000);\n        \n        // Cleanup confetti after some time\n        setTimeout(() => {\n          setShowConfetti(false);\n        }, 30000);\n      }, 2000);\n\n    } catch (error) {\n      console.error('Minting error:', error);\n      setProgressStep('error');\n      setProgressError(error.message || 'Transaction failed');\n      // Keep the modal open to show the error\n    }\n  };\n\n  // Calculate remaining time until release\n  const now = Date.now();\n  const releaseDate = new Date(collection.releaseDate);\n  const isLive = now >= releaseDate;\n  \n  const checkEligibility = async () => {\n    if (!validateAddress(checkingAddress)) {\n      toast.error('Invalid wallet address');\n      return;\n    }\n\n    try {\n      // First check local whitelist\n      const whitelistAddresses = collection.whitelistAddresses || [];\n      const checkAddress = checkingAddress.toLowerCase();\n      \n      const foundEntry = whitelistAddresses.find(addr => {\n        if (!addr) return false;\n        const addressToCheck = typeof addr === 'object' ? addr.address : addr;\n        return addressToCheck && addressToCheck.toLowerCase() === checkAddress;\n      });\n\n      const isWhitelisted = !!foundEntry;\n      const mintLimit = foundEntry && typeof foundEntry === 'object' ? foundEntry.maxMint : 1;\n\n      setWhitelistChecked(true);\n      setIsWhitelisted(isWhitelisted);\n      setWhitelistEntry(foundEntry);\n\n      if (isWhitelisted) {\n        toast.success(`Address is whitelisted! Can mint up to ${mintLimit} NFTs`);\n      } else {\n        toast.error('Address is not whitelisted');\n      }\n\n      // Also check contract if available\n      if (collection.contractAddress && provider) {\n        const contract = new ethers.Contract(\n          collection.contractAddress, \n          collection.type === 'ERC1155' ? NFTCollectionABI.ERC1155Royalty : NFTCollectionABI.ERC721Royalty,\n          provider\n        );\n        \n        try {\n          // Use whitelist mapping and whitelistMintLimit mapping directly\n          const [onChainWhitelist, onChainLimit] = await Promise.all([\n            contract.whitelist(checkingAddress),\n            contract.whitelistMintLimit(checkingAddress)\n          ]);\n\n          console.log('On-chain whitelist status:', {\n            isWhitelisted: onChainWhitelist,\n            mintLimit: onChainLimit.toString()\n          });\n\n          if (onChainWhitelist !== isWhitelisted) {\n            console.warn('Whitelist status mismatch between local and contract');\n          }\n          if (onChainLimit.toString() !== mintLimit.toString()) {\n            console.warn('Whitelist mint limit mismatch between local and contract');\n          }\n        } catch (error) {\n          console.warn('Contract whitelist check failed:', error);\n        }\n      }\n    } catch (error) {\n      console.error('Error checking whitelist:', error);\n      toast.error('Error checking whitelist status');\n    }\n  };\n\n  // Update the price display section to show correct price\n  const renderPrice = () => {\n    if (!collection?.mintPrice) return null;\n\n    return (\n      <div className=\"flex items-center justify-between mb-6\">\n        <span className=\"text-gray-700 dark:text-gray-300\">Price</span>\n        <div className=\"flex items-center gap-1\">\n          {renderCurrencyLogo()}\n          <span className=\"text-xl font-bold text-gray-900 dark:text-white\">\n            {collection.mintPrice}\n          </span>\n        </div>\n      </div>\n    );\n  };\n\n  // Update the mint button section to include end time check\n  const renderMintButton = () => {\n    const now = Date.now();\n    const releaseDate = new Date(collection.releaseDate);\n    const mintEndDate = collection.mintEndDate ? new Date(collection.mintEndDate) : null;\n    const isMintEnded = !collection.infiniteMint && mintEndDate && now >= mintEndDate;\n    const isBeforeRelease = now < releaseDate;\n\n    // Determine if on wrong network\n    const expectedChainId = collection.network === 'unichain-mainnet' || collection.chainId === 130 ? 130 :\n                           collection.network === 'unichain' ? 1301 :\n                           collection.network === 'sepolia' ? 11155111 :\n                           collection.network === 'moonwalker' || collection.chainId === 1828369849 ? 1828369849 :\n                           collection.network === 'monad-testnet' || collection.chainId === 10143 ? 10143 :\n                           collection.network === 'polygon' ? 137 : null;\n    \n    const isWrongNetwork = currentChainId && currentChainId !== expectedChainId;\n\n    // Get network display name\n    const networkDisplayName = collection.network === 'unichain-mainnet' || collection.chainId === 130 ? 'Unichain Mainnet' :\n                             collection.network === 'unichain' ? 'Unichain Testnet' :\n                             collection.network === 'sepolia' ? 'Sepolia' :\n                             collection.network === 'moonwalker' || collection.chainId === 1828369849 ? 'MoonWalker' :\n                             collection.network === 'monad-testnet' || collection.chainId === 10143 ? 'Monad Testnet' :\n                             collection.network === 'polygon' ? 'Polygon' : 'Unknown Network';\n\n    return (\n      <div className=\"flex flex-col gap-2\">\n        {/* Show countdown timer when before release */}\n        {isBeforeRelease && (\n          <div className=\"mb-4\">\n            <div className=\"text-center mb-2\">\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">Minting Starts In</h3>\n            </div>\n            <CountdownTimer targetDate={releaseDate} />\n          </div>\n        )}\n\n        {/* Show mint end countdown if applicable */}\n        {!collection.infiniteMint && isLive && !isMintEnded && (\n          <MintEndCountdown \n            endDate={collection.mintEndDate} \n            infiniteMint={collection.infiniteMint}\n          />\n        )}\n\n        <div className=\"flex items-center justify-between bg-gray-50 dark:bg-[#0d0e12] rounded-lg p-4 border border-gray-200 dark:border-gray-800\">\n          <button\n            onClick={() => setMintAmount(Math.max(1, mintAmount - 1))}\n            className=\"p-2 rounded-lg bg-white dark:bg-[#1a1b1f] text-gray-400 hover:text-gray-600 dark:hover:text-white transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            disabled={!isLive || mintAmount <= 1 || (\n              collection.enableWhitelist && (!whitelistChecked || !isWhitelisted)\n            )}\n          >\n            <BiMinus size={24} />\n          </button>\n          <span className=\"text-2xl font-bold text-gray-900 dark:text-white min-w-[60px] text-center\">\n            {mintAmount}\n          </span>\n          <button\n            onClick={() => {\n              const maxAllowed = collection.enableWhitelist && whitelistEntry\n                ? (whitelistEntry.maxMint || 1)\n                : collection.maxPerWallet;\n              const remaining = maxAllowed - userMintedAmount;\n              setMintAmount(Math.min(remaining, mintAmount + 1));\n            }}\n            className=\"p-2 rounded-lg bg-white dark:bg-[#1a1b1f] text-gray-400 hover:text-gray-600 dark:hover:text-white transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            disabled={!isLive || (\n              collection.enableWhitelist ? (\n                !whitelistChecked || \n                !isWhitelisted || \n                userMintedAmount >= (whitelistEntry?.maxMint || 1) ||\n                mintAmount >= (whitelistEntry?.maxMint || 1) - userMintedAmount\n              ) : (\n                userMintedAmount >= collection.maxPerWallet ||\n                mintAmount >= collection.maxPerWallet - userMintedAmount\n              )\n            )}\n          >\n            <BiPlus size={24} />\n          </button>\n        </div>\n\n        {account && (\n          <RemainingMintAmount \n            userMintedAmount={userMintedAmount} \n            maxPerWallet={collection.enableWhitelist ? (whitelistEntry?.maxMint || 1) : collection.maxPerWallet}\n          />\n        )}\n\n        <button\n          onClick={handleMint}\n          disabled={\n            isBeforeRelease ||\n            isMintEnded ||\n            isWrongNetwork ||\n            (collection.enableWhitelist ? (\n              !whitelistChecked || \n              !isWhitelisted || \n              userMintedAmount >= (whitelistEntry?.maxMint || 1)\n            ) : (\n              userMintedAmount >= collection.maxPerWallet\n            )) || \n            mintAmount === 0\n          }\n          className={`w-full py-3 ${\n            isBeforeRelease ? 'bg-gray-400 cursor-not-allowed' :\n            isMintEnded ? 'bg-gray-400 cursor-not-allowed' :\n            isWrongNetwork ? 'bg-yellow-500 hover:bg-yellow-600 text-black' :\n            collection.enableWhitelist && (!whitelistChecked || !isWhitelisted)\n              ? 'bg-gray-200 dark:bg-[#1a1b1f] text-gray-900 dark:text-white'\n              : 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black'\n          } disabled:opacity-50 disabled:cursor-not-allowed font-bold rounded-lg text-lg transition-colors`}\n        >\n          {!account ? 'Connect Wallet' :\n           isBeforeRelease ? 'Minting Not Live Yet' :\n           isMintEnded ? 'Minting Ended' :\n           isWrongNetwork ? `Switch to ${networkDisplayName} Network` :\n           collection.enableWhitelist && !whitelistChecked ? 'Check Whitelist Status' :\n           collection.enableWhitelist && !isWhitelisted ? 'Not Whitelisted' :\n           'Mint Now'\n          }\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-[#0a0b0f] overflow-x-hidden\">\n      {/* Hero Section */}\n      <div className=\"relative h-[300px] sm:h-[400px] bg-gradient-to-br from-[#00ffbd]/5 to-[#00e6a9]/5 dark:from-[#00ffbd]/10 dark:to-[#00e6a9]/10\">\n        {collection.artworkType === 'video' ? (\n          <video \n            src={collection.previewUrl || ipfsToHttp(collection.imageIpfsUrl)}\n            className=\"w-full h-full object-cover opacity-20 dark:opacity-30\"\n            autoPlay\n            muted\n            loop\n            playsInline\n          />\n        ) : (\n          <img \n            src={collection.previewUrl || ipfsToHttp(collection.imageIpfsUrl)}\n            alt={collection.name}\n            className=\"w-full h-full object-cover opacity-20 dark:opacity-30\"\n          />\n        )}\n        <div className=\"absolute inset-0 bg-gradient-to-t from-gray-50 dark:from-[#0a0b0f] to-transparent\" />\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 -mt-32 relative z-10 pb-12\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Collection Info Card */}\n          <div className=\"relative\">\n            {/* L-shaped corners */}\n            <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n\n            {/* Glowing dots in corners */}\n            <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n            {/* Three dots in top right */}\n            <div className=\"absolute top-3 right-3 flex gap-1 z-20\">\n              {[1, 2, 3].map((i) => (\n                <div\n                  key={i}\n                  className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n                  style={{ animationDelay: `${i * 0.2}s` }}\n                />\n              ))}\n            </div>\n\n            {/* Main Content */}\n            <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6\">\n              {/* Top section with large image and description side by side */}\n              <div className=\"flex gap-6 mb-6\">\n                {/* Large Image */}\n                <div className=\"flex-1\">\n                  {collection.artworkType === 'video' ? (\n                    <div className=\"w-full aspect-square rounded-xl overflow-hidden border-2 border-[#00ffbd]\">\n                      <video \n                        src={collection.previewUrl || ipfsToHttp(collection.imageIpfsUrl)}\n                        className=\"w-full h-full object-cover\"\n                        controls\n                        playsInline\n                      />\n                    </div>\n                  ) : (\n                    <img \n                      src={collection.previewUrl || ipfsToHttp(collection.imageIpfsUrl)}\n                      alt={collection.name}\n                      className=\"w-full aspect-square rounded-xl object-cover border-2 border-[#00ffbd]\"\n                    />\n                  )}\n                </div>\n\n                {/* Description Section */}\n                <div className=\"flex-1\">\n                  <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n                    {collection.name}\n                  </h1>\n                  <div className=\"flex items-center gap-2 text-gray-600 dark:text-gray-400 mb-4\">\n                    <span>{collection.symbol}</span>\n                    <button \n                      onClick={() => {\n                        navigator.clipboard.writeText(collection.symbol);\n                        toast.success('Symbol copied!');\n                      }}\n                      className=\"hover:text-[#00ffbd] transition-colors\"\n                    >\n                      <BiCopy size={16} />\n                    </button>\n                  </div>\n                  <p className=\"text-gray-600 dark:text-gray-400 leading-relaxed\">\n                    {collection.description}\n                  </p>\n                </div>\n              </div>\n\n              {/* Social Links Section */}\n              <div className=\"mb-6 pt-4 border-t border-gray-200 dark:border-gray-800\">\n                <div className=\"flex gap-4\">\n                  {collection.website && (\n                    <a \n                      href={collection.website}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-gray-400 hover:text-[#00ffbd] transition-colors\"\n                    >\n                      <BiWorld size={20} />\n                    </a>\n                  )}\n                  {collection.socials?.twitter && (\n                    <a \n                      href={`https://twitter.com/${collection.socials.twitter}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-gray-400 hover:text-[#00ffbd] transition-colors\"\n                    >\n                      <FaTwitter size={20} />\n                    </a>\n                  )}\n                  {collection.socials?.discord && (\n                    <a \n                      href={collection.socials.discord}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-gray-400 hover:text-[#00ffbd] transition-colors\"\n                    >\n                      <FaDiscord size={20} />\n                    </a>\n                  )}\n                  {collection.socials?.telegram && (\n                    <a \n                      href={collection.socials.telegram}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-gray-400 hover:text-[#00ffbd] transition-colors\"\n                    >\n                      <FaTelegram size={20} />\n                    </a>\n                  )}\n                </div>\n              </div>\n\n              {/* Traits Grid */}\n              <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2\">\n                {collection.attributes?.map((attr, index) => (\n                  <div \n                    key={index}\n                    className=\"bg-gray-50 dark:bg-[#0d0e12] rounded-lg p-2.5 border border-gray-200 dark:border-gray-800\"\n                  >\n                    <p className=\"text-xs text-gray-500 mb-0.5\">{attr.trait_type}</p>\n                    <p className=\"text-sm font-medium text-[#00ffbd]\">\n                      {typeof attr.value === 'number' ? attr.value.toString() : attr.value}\n                    </p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Minting Section Card */}\n          <div className=\"relative\">\n            {/* L-shaped corners */}\n            <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n            <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n              <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n              <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n            </div>\n\n            {/* Glowing dots */}\n            <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n            <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n            {/* Three dots */}\n            <div className=\"absolute top-3 right-3 flex gap-1 z-20\">\n              {[1, 2, 3].map((i) => (\n                <div\n                  key={i}\n                  className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n                  style={{ animationDelay: `${i * 0.2}s` }}\n                />\n              ))}\n            </div>\n\n            {/* Main Content - Update background */}\n            <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6\">\n              {renderPrice()}\n\n              {/* Whitelist Checker */}\n              {collection.enableWhitelist && (\n                <div className=\"mb-8 p-4 bg-gray-50 dark:bg-[#0d0e12] rounded-lg border border-gray-200 dark:border-gray-800\">\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <h3 className=\"text-gray-900 dark:text-white font-semibold\">Whitelist Checker</h3>\n                    {whitelistChecked && isWhitelisted && (\n                      <span className=\"text-xs bg-[#00ffbd]/10 text-[#00ffbd] px-2 py-1 rounded-full\">\n                        Whitelisted\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"flex gap-2\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter your wallet address\"\n                      value={checkingAddress}\n                      onChange={(e) => setCheckingAddress(e.target.value)}\n                      className=\"flex-1 bg-white dark:bg-[#1a1b1f] border border-gray-200 dark:border-gray-800 rounded-lg px-3 py-2 text-gray-900 dark:text-white text-sm focus:outline-none focus:border-[#00ffbd]\"\n                    />\n                    <button\n                      onClick={checkEligibility}\n                      disabled={!checkingAddress || !validateAddress(checkingAddress)}\n                      className={`px-4 py-2 rounded-lg text-sm font-semibold transition-colors ${\n                        checkingAddress && validateAddress(checkingAddress)\n                          ? 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black' \n                          : 'bg-gray-200 dark:bg-gray-800 text-gray-500 cursor-not-allowed'\n                      }`}\n                    >\n                      Check\n                    </button>\n                  </div>\n                  {whitelistChecked && (\n                    <div className={`mt-3 p-3 rounded-lg ${\n                      isWhitelisted \n                        ? 'bg-[#00ffbd]/10 border border-[#00ffbd]/20' \n                        : 'bg-red-500/10 border border-red-500/20'\n                    }`}>\n                      {isWhitelisted ? (\n                        <div className=\"space-y-2\">\n                          <div className=\"flex items-center text-sm text-[#00ffbd]\">\n                            <span className=\"mr-2\">✓</span>\n                            Address is whitelisted\n                          </div>\n                          {whitelistEntry && typeof whitelistEntry === 'object' && (\n                            <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                              You can mint up to {whitelistEntry.maxMint} NFTs during the whitelist phase\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex items-center text-sm text-red-500\">\n                          <span className=\"mr-2\">✗</span>\n                          Address is not whitelisted\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {renderMintButton()}\n\n              {/* Contract and Creator Addresses */}\n              <div className=\"flex items-center justify-between text-center mt-4\">\n                {collection.creatorAddress && (\n                  <div className=\"group relative\">\n                    <a\n                      href={`${\n                        collection.network === 'polygon' \n                          ? 'https://polygonscan.com' \n                          : collection.network === 'unichain-mainnet' || collection.chainId === 130\n                            ? 'https://unichain.blockscout.com'\n                            : collection.network === 'unichain'\n                                ? 'https://unichain-sepolia.blockscout.com'\n                                : collection.network === 'moonwalker' || collection.chainId === 1828369849\n                                    ? 'https://moonwalker-blockscout.eu-north-2.gateway.fm'\n                                    : collection.network === 'monad-testnet' || collection.chainId === 10143\n                                        ? 'https://monad-testnet.socialscan.io'\n                                        : 'https://sepolia.etherscan.io'\n                      }/address/${collection.creatorAddress}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-sm text-gray-600 hover:text-[#00ffbd] dark:text-gray-400 dark:hover:text-[#00ffbd] transition-colors\"\n                    >\n                      Creator Address\n                    </a>\n                    <div className=\"absolute bottom-full left-1/2 -translate-x-1/2 mb-2 px-2 py-1 bg-gray-900 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap pointer-events-none\">\n                      {collection.creatorAddress}\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"group relative\">\n                  <a\n                    href={`${\n                      collection.network === 'polygon' \n                        ? 'https://polygonscan.com' \n                        : collection.network === 'unichain-mainnet' || collection.chainId === 130\n                          ? 'https://unichain.blockscout.com'\n                          : collection.network === 'unichain'\n                              ? 'https://unichain-sepolia.blockscout.com'\n                              : collection.network === 'moonwalker' || collection.chainId === 1828369849\n                                  ? 'https://moonwalker-blockscout.eu-north-2.gateway.fm'\n                                  : collection.network === 'monad-testnet' || collection.chainId === 10143\n                                      ? 'https://monad-testnet.socialscan.io'\n                                      : 'https://sepolia.etherscan.io'\n                    }/address/${collection.contractAddress}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-sm text-gray-600 hover:text-[#00ffbd] dark:text-gray-400 dark:hover:text-[#00ffbd] transition-colors\"\n                  >\n                    Contract Address\n                  </a>\n                  <div className=\"absolute bottom-full left-1/2 -translate-x-1/2 mb-2 px-2 py-1 bg-gray-900 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap pointer-events-none\">\n                    {collection.contractAddress}\n                  </div>\n                </div>\n              </div>\n\n              {/* Progress Bar */}\n              <div>\n                <div className=\"flex justify-between text-sm text-gray-500 dark:text-gray-400 mb-2\">\n                  <span>Progress</span>\n                  <span>{totalMinted}/{maxSupply} Minted</span>\n                </div>\n                <div className=\"h-2 bg-gray-100 dark:bg-[#0d0e12] rounded-full overflow-hidden\">\n                  <div \n                    className=\"h-full bg-[#00ffbd] transition-all duration-500\"\n                    style={{ width: `${Math.min(progress, 100)}%` }}\n                  />\n                </div>\n              </div>\n\n              {/* Additional Stats */}\n              <div className=\"grid grid-cols-2 gap-4 mb-6\">\n                <div className=\"bg-gray-50 dark:bg-[#0d0e12] rounded-lg p-4 border border-gray-200 dark:border-gray-800\">\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Max Per Wallet</div>\n                  <div className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                    {collection.enableWhitelist ? (\n                      <span className=\"text-sm text-gray-600 dark:text-gray-400\">Check your mint cap in whitelist checker above</span>\n                    ) : (\n                      collection.maxPerWallet\n                    )}\n                  </div>\n                </div>\n                <div className=\"bg-gray-50 dark:bg-[#0d0e12] rounded-lg p-4 border border-gray-200 dark:border-gray-800\">\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">Total Supply</div>\n                  <div className=\"text-xl font-bold text-gray-900 dark:text-white\">{maxSupply}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Analytics Section */}\n        <div className=\"mt-12\">\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">\n            Collection Analytics\n          </h2>\n          <FuturisticCard>\n            <AnalyticsTabs collection={collection} />\n          </FuturisticCard>\n        </div>\n      </div>\n\n      {showConfetti && (\n        <Confetti\n          width={windowSize.width}\n          height={windowSize.height}\n          numberOfPieces={200}\n          recycle={false}\n          gravity={0.2}\n          initialVelocityX={10}\n          initialVelocityY={10}\n          colors={['#00ffbd', '#00e6a9', '#00cc95', '#00b381', '#00996d']}\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 99999,\n            pointerEvents: 'none'\n          }}\n        />\n      )}\n      \n      <ProgressModal\n        isOpen={showProgressModal}\n        onClose={() => {\n          setShowProgressModal(false);\n          setProgressStep(null);\n        }}\n        currentStep={progressStep}\n        error={progressError}\n      />\n      \n      <StarRatingModal\n        isOpen={showRatingModal}\n        onClose={() => setShowRatingModal(false)}\n        onRate={(rating) => {\n          console.log('User rated minting experience:', rating);\n          // Here you can implement the logic to save the rating\n        }}\n      />\n    </div>\n  );\n} ","import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { useAccount, useNetwork } from 'wagmi';\nimport { motion } from 'framer-motion';\nimport { formatDistanceToNow } from 'date-fns';\nimport { FaEthereum } from 'react-icons/fa';\nimport { BiCopy } from 'react-icons/bi';\nimport { toast } from 'react-hot-toast';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { \n  getTokenDeploymentsByWallet, \n  getCollectionsByWallet, \n  getRecentMints, \n  getAllCollections,\n  getCollection,\n  getTokenDetails\n} from '../services/firebase';\nimport { getTokenTransfersForAddress, trackTokenTransfers, getNFTTransfersForAddress, trackNFTTransfers } from '../services/tokenTransfers';\nimport { ipfsToHttp } from '../utils/ipfs';\nimport { ethers } from 'ethers';\nimport { useConnectModal } from '@rainbow-me/rainbowkit';\nimport { getExplorerUrl as getExplorerUrlFromUtils } from '../utils/explorer';\n\n// Memory cache for activities\nconst CACHE_DURATION = 30000; // 30 seconds\nconst activityCache = new Map();\n\n// Helper function to get cached data\nconst getCachedActivities = (address, chainId) => {\n  const cacheKey = `${address}-${chainId}`;\n  const cachedData = activityCache.get(cacheKey);\n  \n  if (cachedData) {\n    const { timestamp, data } = cachedData;\n    if (Date.now() - timestamp < CACHE_DURATION) {\n      return data;\n    }\n    activityCache.delete(cacheKey);\n  }\n  \n  // Check localStorage for backup cache\n  const localCache = localStorage.getItem(cacheKey);\n  if (localCache) {\n    try {\n      const { timestamp, data } = JSON.parse(localCache);\n      if (Date.now() - timestamp < CACHE_DURATION) {\n        return data;\n      }\n      localStorage.removeItem(cacheKey);\n    } catch (error) {\n      localStorage.removeItem(cacheKey);\n    }\n  }\n  \n  return null;\n};\n\n// Helper function to cache activities\nconst cacheActivities = (address, chainId, activities) => {\n  const cacheKey = `${address}-${chainId}`;\n  const cacheData = {\n    timestamp: Date.now(),\n    data: activities\n  };\n  \n  // Update memory cache\n  activityCache.set(cacheKey, cacheData);\n  \n  // Update localStorage cache\n  try {\n    localStorage.setItem(cacheKey, JSON.stringify(cacheData));\n  } catch (error) {\n    console.error('Error saving to localStorage:', error);\n  }\n};\n\n// Add animation variants\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.05\n    }\n  }\n};\n\nconst itemVariants = {\n  hidden: { \n    opacity: 0,\n    x: -20\n  },\n  show: { \n    opacity: 1,\n    x: 0,\n    transition: {\n      type: \"spring\",\n      bounce: 0.3\n    }\n  }\n};\n\nexport default function HistoryPage() {\n  const [nfts, setNfts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { address: account, isConnected } = useAccount();\n  const { chain } = useNetwork();\n  const [activities, setActivities] = useState([]);\n  const [selectedNetwork, setSelectedNetwork] = useState('all');\n  const closeTimeoutRef = useRef(null);\n  const { openConnectModal } = useConnectModal();\n  const [networkDropdownOpen, setNetworkDropdownOpen] = useState(false);\n\n  // Add NetworkFilter component\n  const NetworkFilter = () => {\n    const networks = [\n      { id: 'all', label: 'All Networks' },\n      { id: 'sepolia', label: 'Sepolia' },\n      { id: 'unichain-mainnet', label: 'Unichain Mainnet' },\n      { id: 'unichain', label: 'Unichain Testnet' },\n      { id: 'polygon', label: 'Polygon' },\n      { id: 'moonwalker', label: 'Moonwalker' },\n      { id: 'monad-testnet', label: 'Monad Testnet' }\n    ];\n\n    const networkCounts = {\n      all: activities.length,\n      sepolia: activities.filter(a => a.network === 'sepolia' || a.chainId === 11155111).length,\n      'unichain-mainnet': activities.filter(a => a.network === 'unichain-mainnet' || a.chainId === 130).length,\n      unichain: activities.filter(a => a.network === 'unichain' || a.chainId === 1301).length,\n      polygon: activities.filter(a => a.network === 'polygon' || a.chainId === 137).length,\n      moonwalker: activities.filter(a => a.network === 'moonwalker' || a.chainId === 1828369849).length,\n      'monad-testnet': activities.filter(a => a.network === 'monad-testnet' || a.chainId === 10143).length\n    };\n\n    return (\n      <div className=\"relative\">\n        <button\n          type=\"button\"\n          onClick={() => setNetworkDropdownOpen(!networkDropdownOpen)}\n          className=\"bg-white dark:bg-[#1a1b1f] border border-gray-200 dark:border-gray-800 rounded-xl px-4 py-2 text-gray-900 dark:text-white focus:outline-none min-w-[160px] flex items-center justify-between\"\n        >\n          <span>{networks.find(n => n.id === selectedNetwork)?.label} ({networkCounts[selectedNetwork]})</span>\n          <svg\n            className={`w-4 h-4 text-gray-500 transition-transform ${networkDropdownOpen ? 'rotate-180' : ''}`}\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </button>\n\n        {networkDropdownOpen && (\n          <div className=\"absolute z-10 w-full mt-1 bg-white dark:bg-[#1a1b1f] rounded-xl shadow-lg border border-gray-200 dark:border-gray-800\">\n            {networks.map(network => (\n              <button\n                key={network.id}\n                onClick={() => {\n                  setSelectedNetwork(network.id);\n                  setNetworkDropdownOpen(false);\n                }}\n                className={`w-full px-4 py-2 text-left hover:bg-gray-50 dark:hover:bg-gray-800 first:rounded-t-xl last:rounded-b-xl transition-colors duration-150 ${\n                  selectedNetwork === network.id ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : 'text-gray-900 dark:text-white'\n                }`}\n              >\n                {network.label} ({networkCounts[network.id]})\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Update the filtering logic\n  const filteredActivities = useMemo(() => {\n    return activities.filter(activity => {\n      if (selectedNetwork === 'all') return true;\n      return activity.network === selectedNetwork || \n             (selectedNetwork === 'sepolia' && activity.chainId === 11155111) ||\n             (selectedNetwork === 'unichain-mainnet' && activity.chainId === 130) ||\n             (selectedNetwork === 'unichain' && activity.chainId === 1301) ||\n             (selectedNetwork === 'polygon' && activity.chainId === 137) ||\n             (selectedNetwork === 'moonwalker' && activity.chainId === 1828369849) ||\n             (selectedNetwork === 'monad-testnet' && activity.chainId === 10143);\n    });\n  }, [activities, selectedNetwork]);\n\n  useEffect(() => {\n    const loadHistory = async () => {\n      if (!account) {\n        setActivities([]);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        // Check cache first\n        const cachedActivities = getCachedActivities(account, chain?.id);\n        if (cachedActivities) {\n          setActivities(cachedActivities);\n          setLoading(false);\n          \n          // Load fresh data in the background\n          loadFreshData();\n          return;\n        }\n\n        await loadFreshData();\n      } catch (error) {\n        setLoading(false);\n        toast.error('Error loading history');\n      }\n    };\n\n    const loadFreshData = async () => {\n      try {\n        // Load all data in parallel\n        const [\n          deployments, \n          transfers, \n          transferEvents,\n          collections,\n          allCollectionsData\n        ] = await Promise.all([\n          getTokenDeploymentsByWallet(account),\n          getTokenTransfersForAddress(account),\n          getNFTTransfersForAddress(account),\n          getCollectionsByWallet(account),\n          getAllCollections()\n        ]);\n\n        // Create token details map first\n        const tokenDetailsMap = deployments.reduce((acc, token) => {\n          acc[token.address.toLowerCase()] = {\n            name: token.name,\n            symbol: token.symbol,\n            logo: token.logo,\n            decimals: token.decimals || 18\n          };\n          return acc;\n        }, {});\n\n        // Format token transfers\n        const formattedTokenTransfers = await Promise.all(transfers.map(async tx => {\n          let tokenDetails = tokenDetailsMap[tx.tokenAddress.toLowerCase()];\n          \n          if (!tokenDetails) {\n            const fetchedDetails = await getTokenDetails(tx.tokenAddress);\n            if (fetchedDetails) {\n              tokenDetails = {\n                name: fetchedDetails.name,\n                symbol: fetchedDetails.symbol,\n                logo: fetchedDetails.logo,\n                decimals: fetchedDetails.decimals || 18\n              };\n            }\n          }\n\n          tokenDetails = tokenDetails || {\n            name: 'Unknown Token',\n            symbol: 'TOKEN',\n            decimals: 18\n          };\n          \n          const formattedAmount = ethers.formatUnits(tx.amount, tokenDetails.decimals);\n          \n          // Determine the network based on chainId first, then fallback to network field\n          let network = 'sepolia';\n          let chainId = tx.chainId;\n          \n          if (chainId === 137 || tx.network === 'polygon') {\n            network = 'polygon';\n            chainId = 137;\n          } else if (chainId === 130 || tx.network === 'unichain-mainnet') {\n            network = 'unichain-mainnet';\n            chainId = 130;\n          } else if (chainId === 1301 || tx.network === 'unichain') {\n            network = 'unichain';\n            chainId = 1301;\n          } else if (chainId === 1828369849 || tx.network === 'moonwalker') {\n            network = 'moonwalker';\n            chainId = 1828369849;\n          } else if (chainId === 10143 || tx.network === 'monad-testnet') {\n            network = 'monad-testnet';\n            chainId = 10143;\n          } else if (chainId === 11155111 || tx.network === 'sepolia') {\n            network = 'sepolia';\n            chainId = 11155111;\n          }\n          \n          return {\n            id: tx.transactionHash,\n            activityType: 'token_transaction',\n            timestamp: tx.timestamp,\n            image: tokenDetails.logo,\n            title: tx.type === 'sent' \n              ? `Sent ${formattedAmount} ${tokenDetails.symbol}`\n              : `Received ${formattedAmount} ${tokenDetails.symbol}`,\n            subtitle: tx.type === 'sent'\n              ? `To ${tx.toAddress.slice(0, 6)}...${tx.toAddress.slice(-4)}`\n              : `From ${tx.fromAddress.slice(0, 6)}...${tx.fromAddress.slice(-4)}`,\n            address: tx.tokenAddress,\n            network,\n            chainId,\n            transactionHash: tx.transactionHash,\n            amount: formattedAmount,\n            tokenSymbol: tokenDetails.symbol,\n            fromAddress: tx.fromAddress,\n            toAddress: tx.toAddress\n          };\n        }));\n\n        // Format token deployments\n        const formattedTokenDeployments = deployments.map(token => {\n          // Determine network and chainId based on token data\n          let network = 'sepolia';\n          let chainId = token.chainId;\n\n          if (chainId === 137 || token.chainName?.toLowerCase().includes('polygon')) {\n            network = 'polygon';\n            chainId = 137;\n          } else if (chainId === 130) {\n            network = 'unichain-mainnet';\n            chainId = 130;\n          } else if (chainId === 1301) {\n            network = 'unichain';\n            chainId = 1301;\n          } else if (chainId === 1828369849) {\n            network = 'moonwalker';\n            chainId = 1828369849;\n          } else if (chainId === 11155111) {\n            network = 'sepolia';\n            chainId = 11155111;\n          }\n\n          return {\n            id: token.address,\n            activityType: 'token_creation',\n            timestamp: token.createdAt,\n            image: token.logo,\n            title: `Created ${token.name}`,\n            subtitle: 'Token Creation',\n            address: token.address,\n            network,\n            chainId\n          };\n        });\n\n        // Get unique token addresses and fetch missing details\n        const uniqueTokenAddresses = new Set([\n          ...deployments.map(t => t.address.toLowerCase()),\n          ...transfers.map(t => t.tokenAddress.toLowerCase())\n        ]);\n\n        // Create collections map\n        const collectionsMap = new Map(\n          collections.map(collection => [collection.contractAddress.toLowerCase(), collection])\n        );\n\n        // Format NFT transfers with proper network identification\n        const formattedNFTTransfers = transferEvents.map(tx => {\n          const collection = collectionsMap.get(tx.contractAddress.toLowerCase());\n          let network = collection?.network || 'sepolia';\n          let chainId = collection?.chainId;\n\n          // Determine network and chainId based on collection or transaction data\n          if (collection?.chainId === 137 || tx.chainId === 137) {\n            network = 'polygon';\n            chainId = 137;\n          } else if (collection?.chainId === 130 || tx.chainId === 130) {\n            network = 'unichain-mainnet';\n            chainId = 130;\n          } else if (collection?.chainId === 1301 || tx.chainId === 1301) {\n            network = 'unichain';\n            chainId = 1301;\n          } else if (collection?.chainId === 1828369849 || tx.chainId === 1828369849) {\n            network = 'moonwalker';\n            chainId = 1828369849;\n          } else if (collection?.chainId === 10143 || tx.chainId === 10143) {\n            network = 'monad-testnet';\n            chainId = 10143;\n          } else if (collection?.chainId === 11155111 || tx.chainId === 11155111) {\n            network = 'sepolia';\n            chainId = 11155111;\n          }\n\n          return {\n            id: `${tx.transactionHash}-${tx.tokenId}`,\n            activityType: 'nft_transfer',\n            timestamp: tx.timestamp,\n            image: collection?.previewUrl || '/placeholder.png',\n            title: tx.type === 'sent'\n              ? `Sent ${collection?.name || 'NFT'} #${tx.tokenId}`\n              : `Received ${collection?.name || 'NFT'} #${tx.tokenId}`,\n            subtitle: tx.type === 'sent'\n              ? `To ${tx.toAddress.slice(0, 6)}...${tx.toAddress.slice(-4)}`\n              : `From ${tx.fromAddress.slice(0, 6)}...${tx.fromAddress.slice(-4)}`,\n            address: tx.contractAddress,\n            network,\n            chainId,\n            symbol: collection?.symbol,\n            artworkType: collection?.artworkType,\n            tokenId: tx.tokenId,\n            amount: tx.amount,\n            transactionHash: tx.transactionHash\n          };\n        });\n\n        // Format NFT creations\n        const formattedNFTCreations = collections.map(collection => ({\n          id: collection.contractAddress,\n          activityType: 'nft_creation',\n          timestamp: collection.createdAt,\n          image: collection.previewUrl,\n          title: `Created ${collection.name}`,\n          subtitle: 'NFT Collection',\n          address: collection.contractAddress,\n          network: collection.network,\n          chainId: collection.chainId,\n          symbol: collection.symbol\n        }));\n\n        // Process mints in parallel\n        const allMints = (await Promise.all(\n          allCollectionsData.map(async (collection) => {\n            const mints = await getRecentMints(collection.contractAddress);\n            return mints\n              .filter(mint => mint.minterAddress?.toLowerCase() === account.toLowerCase())\n              .flatMap(mint => {\n                // Determine network and chainId based on collection data\n                let network = collection.network || 'sepolia';\n                let chainId = collection.chainId;\n\n                if (chainId === 137 || network === 'polygon') {\n                  network = 'polygon';\n                  chainId = 137;\n                } else if (chainId === 130 || network === 'unichain-mainnet') {\n                  network = 'unichain-mainnet';\n                  chainId = 130;\n                } else if (chainId === 1301 || network === 'unichain') {\n                  network = 'unichain';\n                  chainId = 1301;\n                } else if (chainId === 1828369849 || network === 'moonwalker') {\n                  network = 'moonwalker';\n                  chainId = 1828369849;\n                } else if (chainId === 11155111 || network === 'sepolia') {\n                  network = 'sepolia';\n                  chainId = 11155111;\n                }\n\n                // Handle multiple mints in a single transaction\n                const quantity = parseInt(mint.quantity || '1');\n                if (quantity > 1) {\n                  return Array(quantity).fill().map((_, index) => ({\n                    id: `${mint.id || `${collection.contractAddress}-${mint.tokenId}`}-${index}`,\n                    activityType: 'nft_mint',\n                    timestamp: mint.timestamp,\n                    image: mint.image || collection.previewUrl,\n                    title: `Minted ${collection.name} #${parseInt(mint.tokenId) + index}`,\n                    subtitle: `NFT Mint #${parseInt(mint.tokenId) + index}`,\n                    address: collection.contractAddress,\n                    network,\n                    chainId,\n                    symbol: collection.symbol,\n                    artworkType: collection.artworkType,\n                    transactionHash: mint.hash,\n                    quantity: quantity,\n                    tokenId: String(parseInt(mint.tokenId) + index)\n                  }));\n                }\n                \n                // Single mint\n                return [{\n                  id: mint.id || `${collection.contractAddress}-${mint.tokenId}`,\n                  activityType: 'nft_mint',\n                  timestamp: mint.timestamp,\n                  image: mint.image || collection.previewUrl,\n                  title: `Minted ${collection.name} #${mint.tokenId}`,\n                  subtitle: `NFT Mint #${mint.tokenId}`,\n                  address: collection.contractAddress,\n                  network,\n                  chainId,\n                  symbol: collection.symbol,\n                  artworkType: collection.artworkType,\n                  transactionHash: mint.hash,\n                  quantity: 1,\n                  tokenId: mint.tokenId\n                }];\n              });\n          })\n        )).flat();\n\n        // Filter and sort activities\n        const uniqueTransactions = new Set();\n        \n        const filteredActivities = [\n          ...formattedTokenDeployments,\n          ...formattedTokenTransfers,\n          ...formattedNFTTransfers,\n          ...formattedNFTCreations,\n          ...allMints,\n        ]\n        // Only filter out duplicates, don't filter by network\n        .filter(activity => {\n          if (!activity.transactionHash) return true; // Keep activities without transactionHash\n          \n          // For NFT mints, create a unique key that includes the token ID\n          const txKey = activity.activityType === 'nft_mint' \n            ? `${activity.transactionHash}-${activity.activityType}-${activity.tokenId}`\n            : `${activity.transactionHash}-${activity.activityType}`;\n          \n          if (uniqueTransactions.has(txKey)) {\n            return false;\n          }\n          \n          uniqueTransactions.add(txKey);\n          return true;\n        })\n        .sort((a, b) => {\n          const timeA = a.timestamp instanceof Date ? \n            a.timestamp.getTime() : \n            typeof a.timestamp === 'number' ?\n              a.timestamp :\n              typeof a.timestamp === 'string' ? \n                new Date(a.timestamp).getTime() : \n                0;\n          const timeB = b.timestamp instanceof Date ? \n            b.timestamp.getTime() : \n            typeof b.timestamp === 'number' ?\n              b.timestamp :\n              typeof b.timestamp === 'string' ? \n                new Date(b.timestamp).getTime() : \n                0;\n          return timeB - timeA;\n        });\n\n        // Cache the results before setting state\n        cacheActivities(account, chain?.id, filteredActivities);\n        \n        setActivities(filteredActivities);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n        toast.error('Error loading activity data');\n      }\n    };\n\n    loadHistory();\n  }, [account, chain]);\n\n  const renderMedia = (activity) => {\n    const imageUrl = ipfsToHttp(activity.image);\n\n    if (activity.artworkType === 'video') {\n      return (\n        <div className=\"relative w-12 h-12 rounded-lg overflow-hidden bg-black/5 dark:bg-black/20\">\n          <video\n            src={imageUrl}\n            className=\"w-full h-full object-cover\"\n            autoPlay\n            muted\n            loop\n            playsInline\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"relative w-12 h-12 rounded-lg overflow-hidden bg-black/5 dark:bg-black/20\">\n        <img\n          src={imageUrl}\n          alt={activity.title}\n          className=\"w-full h-full object-cover\"\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = '/placeholder.png';\n          }}\n        />\n      </div>\n    );\n  };\n\n  const getExplorerUrl = (network, chainId) => {\n    // Convert network name to chainId if not provided\n    const resolvedChainId = chainId || (\n      network === 'unichain-mainnet' ? 130 :\n      network === 'unichain' ? 1301 :\n      network === 'polygon' ? 137 :\n      network === 'moonwalker' ? 1828369849 :\n      network === 'monad-testnet' ? 10143 :\n      11155111 // Sepolia as default\n    );\n\n    // Return the appropriate explorer URL based on chainId\n    switch (resolvedChainId) {\n      case 130:\n        return 'https://mainnet.uniscan.org';\n      case 1301:\n        return 'https://testnet.uniscan.org';\n      case 137:\n        return 'https://polygonscan.com';\n      case 1828369849:\n        return 'https://moonwalker-blockscout.eu-north-2.gateway.fm';\n      case 10143:\n        return 'https://monad-testnet.socialscan.io';\n      default:\n        return 'https://sepolia.etherscan.io';\n    }\n  };\n\n  const getNetworkDisplayName = (network, chainId) => {\n    // First check chainId as it's more reliable\n    if (chainId) {\n      switch (chainId) {\n        case 130:\n          return 'Unichain Mainnet';\n        case 1301:\n          return 'Unichain Testnet';\n        case 137:\n          return 'Polygon';\n        case 1828369849:\n          return 'Moonwalker';\n        case 10143:\n          return 'Monad Testnet';\n        case 11155111:\n          return 'Sepolia';\n        default:\n          return 'Unknown Network';\n      }\n    }\n\n    // Fallback to network name if chainId not available\n    switch (network) {\n      case 'unichain-mainnet':\n        return 'Unichain Mainnet';\n      case 'unichain':\n        return 'Unichain Testnet';\n      case 'polygon':\n        return 'Polygon';\n      case 'moonwalker':\n        return 'Moonwalker';\n      case 'monad-testnet':\n        return 'Monad Testnet';\n      default:\n        return 'Sepolia';\n    }\n  };\n\n  const renderActivityCard = (activity) => {\n    // Parse the timestamp, handling all possible formats\n    const getTimestamp = (timestamp) => {\n      if (timestamp instanceof Date) return timestamp;\n      if (typeof timestamp === 'number') return new Date(timestamp);\n      if (timestamp?.seconds) return new Date(timestamp.seconds * 1000);\n      if (typeof timestamp === 'string') return new Date(timestamp);\n      return new Date();\n    };\n\n    const timestamp = getTimestamp(activity.timestamp);\n    const isNFTActivity = activity.activityType === 'nft_creation' || activity.activityType === 'nft_mint';\n    const isTokenTransaction = activity.activityType === 'token_transaction';\n\n    // Get tag color based on activity type\n    const getTagColor = () => {\n      switch (activity.activityType) {\n        case 'token_creation':\n          return 'bg-purple-500/10 text-purple-500';\n        case 'token_transaction':\n          return 'bg-blue-500/10 text-blue-500';\n        case 'nft_creation':\n          return 'bg-pink-500/10 text-pink-500';\n        case 'nft_mint':\n          return 'bg-green-500/10 text-green-500';\n        default:\n          return 'bg-gray-500/10 text-gray-500';\n      }\n    };\n\n    // Get tag text based on activity type\n    const getTagText = () => {\n      switch (activity.activityType) {\n        case 'token_creation':\n          return 'Token Creation';\n        case 'token_transaction':\n          return 'Token Transfer';\n        case 'nft_creation':\n          return 'NFT Collection';\n        case 'nft_mint':\n          return 'NFT Mint';\n        default:\n          return 'Transaction';\n      }\n    };\n\n    return (\n      <motion.div \n        key={activity.id}\n        variants={itemVariants}\n        whileHover={{ \n          scale: 1.01,\n          transition: { duration: 0.2 }\n        }}\n        className=\"relative bg-white dark:bg-[#1a1b1f] rounded-xl p-3 border border-gray-100 dark:border-gray-800 hover:border-[#00ffbd] transition-colors duration-200\"\n      >\n        <div className=\"flex items-center gap-3\">\n          {/* Image/Logo with fade in */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.3 }}\n          >\n            {renderMedia(activity)}\n          </motion.div>\n\n          {/* Content with slide in */}\n          <motion.div \n            className=\"flex-1 min-w-0\"\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.3, delay: 0.1 }}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                {isNFTActivity ? (\n                  <button\n                    onClick={() => navigate(`/collection/${activity.symbol}`)}\n                    className=\"text-sm font-medium text-gray-900 dark:text-white hover:text-[#00ffbd] dark:hover:text-[#00ffbd] transition-colors truncate\"\n                  >\n                    {activity.title}\n                  </button>\n                ) : (\n                  <h3 className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n                    {activity.title}\n                  </h3>\n                )}\n                <span className={`text-xs px-2 py-1 rounded-full ${getTagColor()}`}>\n                  {getTagText()}\n                </span>\n              </div>\n              <span className=\"text-xs text-gray-500 dark:text-gray-400 ml-2\">\n                {formatDistanceToNow(timestamp, { addSuffix: true })}\n              </span>\n            </div>\n\n            <div className=\"flex items-center gap-2 mt-1\">\n              <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                {activity.subtitle}\n              </span>\n              \n              {activity.network && (\n                <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  on {getNetworkDisplayName(activity.network, activity.chainId)}\n                </span>\n              )}\n\n              {/* Add transaction link */}\n              {activity.transactionHash && (\n                <a\n                  href={getExplorerUrlFromUtils(activity.chainId, 'tx', activity.transactionHash)}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-center gap-1 text-xs text-gray-500 dark:text-gray-400 hover:text-[#00ffbd] transition-colors\"\n                >\n                  <span>View Transaction</span>\n                  <BiCopy \n                    size={12} \n                    className=\"ml-1 cursor-pointer\" \n                    onClick={(e) => {\n                      e.preventDefault();\n                      navigator.clipboard.writeText(activity.transactionHash);\n                      toast.success('Transaction hash copied!');\n                    }} \n                  />\n                </a>\n              )}\n            </div>\n          </motion.div>\n        </div>\n      </motion.div>\n    );\n  };\n\n  if (!isConnected) {\n    return (\n      <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6 rounded-xl\">\n        <div className=\"flex flex-col items-center justify-center py-16 px-4\">\n          <div className=\"w-20 h-20 mb-6 rounded-full bg-[#00ffbd]/10 flex items-center justify-center\">\n            <svg className=\"w-10 h-10 text-[#00ffbd]\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 9l-6 6m0-6l6 6\" />\n            </svg>\n          </div>\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-3\">\n            Connect Your Wallet\n          </h2>\n          <p className=\"text-gray-500 dark:text-gray-400 text-center mb-6 max-w-md\">\n            Please connect your wallet to view your activity history. You'll be able to see all your transactions, token transfers, and NFT activities.\n          </p>\n          <button\n            onClick={openConnectModal}\n            className=\"px-6 py-3 bg-[#00ffbd] hover:bg-[#00ffbd]/90 text-black font-medium rounded-lg transition-colors duration-200 flex items-center gap-2\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n            </svg>\n            Connect Wallet\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <motion.div \n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        className=\"min-h-screen bg-gray-50 dark:bg-[#0a0b0f] flex items-center justify-center\"\n      >\n        <motion.div \n          className=\"flex flex-col items-center gap-4\"\n          initial={{ scale: 0.9 }}\n          animate={{ scale: 1 }}\n          transition={{ duration: 0.3 }}\n        >\n          <div className=\"relative\">\n            <div className=\"w-12 h-12 border-4 border-[#00ffbd] rounded-full animate-spin border-t-transparent\"></div>\n            <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-6 h-6 bg-[#00ffbd] rounded-full opacity-30\"></div>\n          </div>\n          <span className=\"text-gray-500 dark:text-gray-400\">Loading history...</span>\n        </motion.div>\n      </motion.div>\n    );\n  }\n\n  return (\n    <div className=\"h-screen bg-gray-50 dark:bg-[#0a0b0f] pt-20 px-8 pb-8 overflow-hidden\">\n      <div className=\"max-w-7xl mx-auto h-full overflow-hidden\">\n        <div className=\"flex items-center justify-between mb-12 sticky top-4 z-[120]\">\n          <motion.h1 \n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n            className=\"text-xl font-bold text-gray-900 dark:text-white\"\n          >\n            Activity History\n          </motion.h1>\n          <NetworkFilter />\n        </div>\n        \n        {/* Main Container with animation */}\n        <motion.div \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"relative mt-8 h-[calc(100%-6rem)] overflow-hidden\"\n        >\n          {/* L-shaped corners */}\n          <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n            <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n            <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n            <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n            <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n\n          {/* Glowing dots in corners */}\n          <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n          {/* Three dots in top right */}\n          <div className=\"absolute top-3 right-3 flex gap-1 z-20\">\n            {[1, 2, 3].map((i) => (\n              <div\n                key={i}\n                className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n                style={{ animationDelay: `${i * 0.2}s` }}\n              />\n            ))}\n          </div>\n\n          {/* Main Content */}\n          <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6 rounded-xl h-full overflow-hidden\">\n            <div className=\"h-full overflow-y-auto overflow-x-hidden custom-scrollbar\">\n              <motion.div \n                variants={containerVariants}\n                initial=\"hidden\"\n                animate=\"show\"\n                className=\"space-y-3\"\n              >\n                {filteredActivities.length > 0 ? (\n                  filteredActivities.map(activity => renderActivityCard(activity))\n                ) : (\n                  <motion.div \n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ delay: 0.3 }}\n                    className=\"text-center text-gray-500 dark:text-gray-400\"\n                  >\n                    No activity found\n                  </motion.div>\n                )}\n              </motion.div>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect, useMemo, useRef, useCallback } from 'react';\nimport { useAccount, useNetwork } from 'wagmi';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { formatDistanceToNow } from 'date-fns';\nimport { ethers } from 'ethers';\nimport { getOwnedNFTs, getTokenDeploymentByAddress } from '../services/firebase';\nimport { ipfsToHttp } from '../utils/ipfs';\nimport { FaEthereum } from 'react-icons/fa';\nimport { query, collection, where, getDocs } from 'firebase/firestore';\nimport { db } from '../services/firebase';\nimport axios from 'axios';\nimport { useConnectModal } from '@rainbow-me/rainbowkit';\n\n// Memory cache for NFTs\nconst CACHE_DURATION = 30000; // 30 seconds\nconst nftCache = new Map();\n\n// Helper function to get cached NFTs\nconst getCachedNFTs = (address, chainId) => {\n  const cacheKey = `${address}-${chainId}`;\n  const cachedData = nftCache.get(cacheKey);\n  \n  if (cachedData) {\n    const { timestamp, data } = cachedData;\n    if (Date.now() - timestamp < CACHE_DURATION) {\n      console.log('Using cached NFTs');\n      // Process cached NFTs to ensure network information\n      return data.map(nft => ({\n        ...nft,\n        network: nft.network || \n          (nft.chainId === 11155111 ? 'sepolia' :\n           nft.chainId === 1301 ? 'unichain' :\n           nft.chainId === 1828369849 ? 'moonwalker' :\n           nft.chainId === 10143 ? 'monad-testnet' : 'sepolia')\n      }));\n    }\n    // Cache expired, remove it\n    nftCache.delete(cacheKey);\n  }\n  \n  // Check localStorage for backup cache\n  const localCache = localStorage.getItem(`nfts-${cacheKey}`);\n  if (localCache) {\n    try {\n      const { timestamp, data } = JSON.parse(localCache);\n      if (Date.now() - timestamp < CACHE_DURATION) {\n        console.log('Using localStorage cached NFTs');\n        // Process cached NFTs to ensure network information\n        return data.map(nft => ({\n          ...nft,\n          network: nft.network || \n            (nft.chainId === 11155111 ? 'sepolia' :\n             nft.chainId === 1301 ? 'unichain' :\n             nft.chainId === 1828369849 ? 'moonwalker' :\n             nft.chainId === 10143 ? 'monad-testnet' : 'sepolia')\n        }));\n      }\n      // Cache expired, remove it\n      localStorage.removeItem(`nfts-${cacheKey}`);\n    } catch (error) {\n      console.error('Error parsing localStorage cache:', error);\n    }\n  }\n  \n  return null;\n};\n\n// Helper function to cache NFTs\nconst cacheNFTs = (address, chainId, nfts) => {\n  const cacheKey = `${address}-${chainId}`;\n  const cacheData = {\n    timestamp: Date.now(),\n    data: nfts\n  };\n  \n  // Update memory cache\n  nftCache.set(cacheKey, cacheData);\n  \n  // Update localStorage cache\n  try {\n    localStorage.setItem(`nfts-${cacheKey}`, JSON.stringify(cacheData));\n  } catch (error) {\n    console.error('Error saving to localStorage:', error);\n  }\n};\n\n// Update the Blockscout API function to handle multiple networks\nconst fetchBlockscoutNFTs = async (address, chainId) => {\n  try {\n    let baseUrl;\n    if (chainId === 130) {\n      baseUrl = 'https://unichain.blockscout.com';\n    } else if (chainId === 1301) {\n      baseUrl = 'https://unichain-sepolia.blockscout.com';\n    } else if (chainId === 137) {\n      baseUrl = 'https://polygon.blockscout.com';\n    } else if (chainId === 1828369849) {\n      baseUrl = 'https://moonwalker-blockscout.eu-north-2.gateway.fm';\n    } else if (chainId === 10143) {\n      baseUrl = 'https://monad-testnet.socialscan.io';\n    } else if (chainId === 11155111) {\n      baseUrl = 'https://eth-sepolia.blockscout.com';\n    } else {\n      return [];\n    }\n\n    console.log('Fetching NFTs from Blockscout:', { baseUrl, address, chainId });\n\n    // First get all NFT tokens owned by the address\n    const response = await axios.get(`${baseUrl}/api/v2/addresses/${address}/nft?type=ERC-721%2CERC-404%2CERC-1155`);\n    const nftTokens = response.data.items || [];\n\n    // Process each NFT token to get its transfers and metadata\n    const processedNFTs = await Promise.all(nftTokens.map(async (nft) => {\n      try {\n        // Get token transfers for this specific NFT\n        const transfersResponse = await axios.get(\n          `${baseUrl}/api/v2/tokens/${nft.token.address}/transfers`, {\n            params: {\n              type: nft.token.type,\n              holder: address,\n              token_id: nft.id\n            }\n          }\n        );\n\n        const transfers = transfersResponse.data.items || [];\n        const latestTransfer = transfers[0]; // Most recent transfer\n\n        // Get token metadata\n        const metadataResponse = await axios.get(\n          `${baseUrl}/api/v2/tokens/${nft.token.address}/instances/${nft.id}/metadata`\n        );\n        const metadata = metadataResponse.data;\n\n        return {\n          contractAddress: nft.token.address,\n          tokenId: nft.id,\n          type: nft.token.type,\n          name: metadata.name || `${nft.token.name} #${nft.id}`,\n          symbol: nft.token.symbol,\n          collectionName: nft.token.name,\n          description: metadata.description,\n          image: metadata.image,\n          balance: nft.value || '1',\n          chainId,\n          network: chainId === 137 ? 'polygon' : \n                  chainId === 1301 ? 'unichain' :\n                  chainId === 130 ? 'unichain-mainnet' :\n                  chainId === 1828369849 ? 'moonwalker' :\n                  chainId === 10143 ? 'monad-testnet' : 'sepolia',\n          mintedAt: latestTransfer?.timestamp || Date.now(),\n          value: latestTransfer?.value || '0',\n          mintToken: {\n            address: '0x0000000000000000000000000000000000000000', // Native token\n            type: 'native'\n          }\n        };\n      } catch (error) {\n        console.error('Error processing NFT:', error);\n        return null;\n      }\n    }));\n\n    return processedNFTs.filter(Boolean); // Remove any null entries\n  } catch (error) {\n    console.error('Error fetching from Blockscout:', error);\n    return [];\n  }\n};\n\n// Add animation variants\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst itemVariants = {\n  hidden: { \n    opacity: 0,\n    y: 20\n  },\n  show: { \n    opacity: 1,\n    y: 0,\n    transition: {\n      type: \"spring\",\n      bounce: 0.3\n    }\n  }\n};\n\n// Add skeleton card component\nconst SkeletonCard = () => (\n  <motion.div\n    initial={{ opacity: 0 }}\n    animate={{ opacity: 1 }}\n    className=\"relative\"\n  >\n    <div className=\"relative\">\n      {/* L-shaped corners */}\n      <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n        <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n        <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n      </div>\n      <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n        <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n        <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n      </div>\n      <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n        <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n        <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n      </div>\n      <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n        <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n        <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n      </div>\n\n      {/* Glowing dots */}\n      <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n      <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n      <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n      <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n      {/* Three dots */}\n      <div className=\"absolute top-3 right-3 flex gap-1 z-20\">\n        {[1, 2, 3].map((i) => (\n          <div\n            key={i}\n            className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n            style={{ animationDelay: `${i * 0.2}s` }}\n          />\n        ))}\n      </div>\n\n      {/* Main Content */}\n      <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] h-[340px]\">\n        {/* Image skeleton */}\n        <div className=\"h-[180px] w-full bg-gray-200 dark:bg-gray-800 animate-pulse\" />\n\n        {/* Type badge skeleton */}\n        <div className=\"absolute top-3 left-3 z-10\">\n          <div className=\"w-16 h-5 bg-gray-300 dark:bg-gray-700 rounded-full animate-pulse\" />\n        </div>\n\n        {/* Status badge skeleton */}\n        <div className=\"absolute top-3 right-3 z-10\">\n          <div className=\"w-20 h-5 bg-gray-300 dark:bg-gray-700 rounded-full animate-pulse\" />\n        </div>\n\n        {/* Content section */}\n        <div className=\"p-4\">\n          {/* Title and description */}\n          <div className=\"mb-3\">\n            <div className=\"h-6 w-3/4 bg-gray-200 dark:bg-gray-800 rounded animate-pulse mb-2\" />\n            <div className=\"h-4 w-full bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n          </div>\n\n          {/* Price section */}\n          <div className=\"flex items-center justify-between mb-3\">\n            <div className=\"w-8 h-8 bg-gray-200 dark:bg-gray-800 rounded-lg animate-pulse\" />\n            <div className=\"w-24 h-8 bg-gray-200 dark:bg-gray-800 rounded-lg animate-pulse\" />\n          </div>\n\n          {/* Supply and Minted */}\n          <div className=\"grid grid-cols-2 gap-2\">\n            <div className=\"h-10 bg-gray-200 dark:bg-gray-800 rounded-lg animate-pulse\" />\n            <div className=\"h-10 bg-gray-200 dark:bg-gray-800 rounded-lg animate-pulse\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </motion.div>\n);\n\nexport default function AccountPage() {\n  const [nfts, setNfts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { address: account, isConnected } = useAccount();\n  const { chain } = useNetwork();\n  const { openConnectModal } = useConnectModal();\n  const [tokenLogos, setTokenLogos] = useState({});\n  const [filters, setFilters] = useState({\n    type: 'all',       // 'all', 'ERC721', 'ERC1155'\n    network: 'all'     // 'all', 'sepolia', 'unichain', 'moonwalker'\n  });\n  const closeTimeoutRef = useRef(null);\n\n  // Add filteredNFTs memo\n  const filteredNFTs = useMemo(() => {\n    return nfts.filter(nft => {\n      // Type filter\n      if (filters.type !== 'all' && nft.type !== filters.type) return false;\n      \n      // Network filter\n      if (filters.network !== 'all') {\n        const networkId = parseInt(filters.network);\n        return nft.chainId === networkId || \n               (networkId === 11155111 && nft.network === 'sepolia') ||\n               (networkId === 130 && nft.network === 'unichain-mainnet') ||\n               (networkId === 1301 && nft.network === 'unichain') ||\n               (networkId === 137 && nft.network === 'polygon') ||\n               (networkId === 1828369849 && nft.network === 'moonwalker');\n      }\n      \n      return true;\n    });\n  }, [nfts, filters]);\n\n  // Function to get token details from Firebase\n  const getTokenDetails = async (tokenAddress) => {\n    if (!tokenAddress || tokenAddress === '0x0000000000000000000000000000000000000000') {\n      return { symbol: 'ETH', logo: null };\n    }\n\n    try {\n      const tokenDeployment = await getTokenDeploymentByAddress(tokenAddress);\n      if (tokenDeployment?.logo) {\n        return {\n          symbol: tokenDeployment.symbol || 'Unknown',\n          logo: tokenDeployment.logo\n        };\n      }\n      return { symbol: 'ETH', logo: null };\n    } catch (error) {\n      console.error('Error getting token details:', error);\n      return { symbol: 'ETH', logo: null };\n    }\n  };\n\n  useEffect(() => {\n    const loadNFTs = async () => {\n      if (!account) {\n        setNfts([]);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        // Check cache first\n        const cachedNFTs = getCachedNFTs(account, chain?.id);\n        if (cachedNFTs) {\n          setNfts(cachedNFTs);\n          setLoading(false);\n          \n          // Load fresh data in the background\n          loadFreshData();\n          return;\n        }\n\n        await loadFreshData();\n      } catch (error) {\n        console.error('Error loading NFTs:', error);\n        setLoading(false);\n      }\n    };\n\n    const loadFreshData = async () => {\n      try {\n        // Load owned NFTs from Firebase\n        const ownedNFTs = await getOwnedNFTs(account);\n        \n        // Get NFTs from Blockscout for all supported chains\n        const supportedChains = [\n          137,  // Polygon\n          1301, // Unichain Testnet\n          130,  // Unichain Mainnet\n          1828369849, // Moonwalker\n          11155111    // Sepolia\n        ];\n\n        // Fetch NFTs from all chains in parallel\n        const chainNFTs = await Promise.all(\n          supportedChains.map(async (chainId) => {\n            try {\n              console.log(`Fetching NFTs for chain ${chainId}`);\n              const nfts = await fetchBlockscoutNFTs(account, chainId);\n              return nfts.map(nft => ({\n                ...nft,\n                uniqueId: `${nft.contractAddress}-${nft.tokenId}-${nft.type}-${chainId}`\n              }));\n            } catch (error) {\n              console.error(`Error fetching NFTs for chain ${chainId}:`, error);\n              return [];\n            }\n          })\n        );\n\n        // Combine NFTs from all chains\n        const allNFTs = chainNFTs.flat();\n        \n        // Create a map for quick lookup of Blockscout NFT data\n        const blockscoutNFTMap = new Map(\n          allNFTs.map(nft => [`${nft.contractAddress}-${nft.tokenId}`, nft])\n        );\n        \n        // Process and merge NFTs from Firebase with Blockscout data\n        const processedNFTs = ownedNFTs.map(nft => {\n          const blockscoutData = blockscoutNFTMap.get(`${nft.contractAddress}-${nft.tokenId}`);\n          \n          return {\n            ...nft,\n            ...blockscoutData,\n            balance: blockscoutData?.balance || nft.balance || '1',\n            uniqueId: `${nft.contractAddress}-${nft.tokenId}-${nft.type}-${nft.chainId || blockscoutData?.chainId}`,\n            network: nft.network || blockscoutData?.network || \n              (nft.chainId === 137 ? 'polygon' :\n               nft.chainId === 1301 ? 'unichain' :\n               nft.chainId === 130 ? 'unichain-mainnet' :\n               nft.chainId === 1828369849 ? 'moonwalker' : 'sepolia')\n          };\n        });\n\n        // Add any NFTs from Blockscout that aren't in Firebase\n        const firebaseNFTKeys = new Set(\n          ownedNFTs.map(nft => `${nft.contractAddress}-${nft.tokenId}`)\n        );\n\n        const newBlockscoutNFTs = allNFTs.filter(\n          nft => !firebaseNFTKeys.has(`${nft.contractAddress}-${nft.tokenId}`)\n        );\n\n        // Combine all NFTs and sort by mint date\n        const finalNFTs = [...processedNFTs, ...newBlockscoutNFTs].sort((a, b) => {\n          const dateA = new Date(a.mintedAt || 0);\n          const dateB = new Date(b.mintedAt || 0);\n          return dateB - dateA;\n        });\n\n        // Cache and set the results\n        cacheNFTs(account, chain?.id, finalNFTs);\n        setNfts(finalNFTs);\n        setLoading(false);\n\n        // Load token logos\n        const uniqueTokenAddresses = [...new Set(\n          finalNFTs\n            .filter(nft => nft.mintToken?.address)\n            .map(nft => nft.mintToken.address.toLowerCase())\n        )];\n\n        const logos = {};\n        await Promise.all(\n          uniqueTokenAddresses.map(async (tokenAddress) => {\n            try {\n              const tokenDeployment = await getTokenDeploymentByAddress(tokenAddress);\n              if (tokenDeployment?.logo) {\n                logos[tokenAddress] = tokenDeployment.logo;\n              }\n            } catch (error) {\n              console.error(`Error loading logo for token ${tokenAddress}:`, error);\n            }\n          })\n        );\n\n        setTokenLogos(logos);\n      } catch (error) {\n        console.error('Error loading fresh NFT data:', error);\n        setLoading(false);\n      }\n    };\n\n    loadNFTs();\n  }, [account, chain]);\n\n  // Update the useEffect to fetch logos for all payment tokens\n  useEffect(() => {\n    const fetchTokenLogos = async () => {\n      for (const nft of nfts) {\n        if (nft?.mintToken?.address && !tokenLogos[nft.mintToken.address.toLowerCase()]) {\n          try {\n            const tokenDeployment = await getTokenDeploymentByAddress(nft.mintToken.address);\n            if (tokenDeployment?.logo) {\n              setTokenLogos(prev => ({\n                ...prev,\n                [nft.mintToken.address.toLowerCase()]: tokenDeployment.logo\n              }));\n            }\n          } catch (error) {\n            console.error('Error fetching token logo:', error);\n          }\n        }\n      }\n    };\n\n    fetchTokenLogos();\n  }, [nfts]);\n\n  const formatMintPrice = (price, nft) => {\n    if (!price) return '0';\n    try {\n      // Check if it's ZERO token\n      const tokenAddress = nft?.mintToken?.address?.toLowerCase();\n      const isZeroToken = tokenAddress === '0xf4a67fd6f54ff994b7df9013744a79281f88766e' || nft.network === 'moonwalker';\n      \n      // Get the individual NFT price by dividing total value by quantity\n      const quantity = parseInt(nft.quantity || '1');\n      let individualPrice = price;\n      \n      if (quantity > 1) {\n        // If it's a number or numeric string, divide by quantity\n        if (!isNaN(price)) {\n          individualPrice = String(Number(price) / quantity);\n        } else {\n          // For Wei/ETH values, convert to number first\n          const cleanValue = price.toString().replace(/,/g, '');\n          try {\n            const valueInWei = ethers.parseUnits(cleanValue, 'wei');\n            const totalEthValue = ethers.formatEther(valueInWei);\n            individualPrice = String(Number(totalEthValue) / quantity);\n          } catch {\n            const totalEthValue = ethers.formatEther(cleanValue);\n            individualPrice = String(Number(totalEthValue) / quantity);\n          }\n        }\n      }\n\n      // For ZERO tokens, custom tokens, USDC, or USDT, we don't need to convert from Wei\n      if (isZeroToken ||\n          nft?.mintToken?.type === 'custom' || \n          nft?.mintToken?.type === 'usdc' || \n          nft?.mintToken?.type === 'usdt') {\n        return parseFloat(individualPrice).toLocaleString('en-US', {\n          maximumFractionDigits: 6,\n          minimumFractionDigits: 0\n        });\n      }\n\n      // For native tokens (ETH/MATIC), ensure proper conversion\n      let valueInWei;\n      if (typeof individualPrice === 'string') {\n        const cleanValue = individualPrice.replace(/,/g, '');\n        try {\n          valueInWei = ethers.parseUnits(cleanValue, 'wei');\n        } catch {\n          valueInWei = ethers.parseEther(cleanValue);\n        }\n      } else {\n        valueInWei = BigInt(individualPrice.toString());\n      }\n\n      const ethValue = ethers.formatEther(valueInWei);\n      const floatValue = parseFloat(ethValue);\n\n      if (isNaN(floatValue)) return '0';\n      \n      return floatValue.toLocaleString('en-US', {\n        maximumFractionDigits: 6,\n        minimumFractionDigits: 0\n      });\n    } catch (error) {\n      console.error('Error formatting price:', error);\n      return price?.toString() || '0';\n    }\n  };\n\n  // Filter controls UI\n  const FilterControls = () => {\n    const [networkDropdownOpen, setNetworkDropdownOpen] = useState(false);\n    const [typeDropdownOpen, setTypeDropdownOpen] = useState(false);\n\n    const handleMouseEnter = (setDropdown) => {\n      if (closeTimeoutRef.current) {\n        clearTimeout(closeTimeoutRef.current);\n      }\n      setDropdown(true);\n    };\n\n    const handleMouseLeave = (setDropdown) => {\n      closeTimeoutRef.current = setTimeout(() => {\n        setDropdown(false);\n      }, 300);\n    };\n\n    const typeCount = {\n      all: nfts.length,\n      ERC721: nfts.filter(nft => nft.type === 'ERC721').length,\n      ERC1155: nfts.filter(nft => nft.type === 'ERC1155').length\n    };\n\n    const networkCount = {\n      all: nfts.length,\n      11155111: nfts.filter(nft => nft.network === 'sepolia' || nft.chainId === 11155111).length,\n      130: nfts.filter(nft => nft.network === 'unichain-mainnet' || nft.chainId === 130).length,\n      1301: nfts.filter(nft => nft.network === 'unichain' || nft.chainId === 1301).length,\n      137: nfts.filter(nft => nft.network === 'polygon' || nft.chainId === 137).length,\n      1828369849: nfts.filter(nft => nft.network === 'moonwalker' || nft.chainId === 1828369849).length,\n      10143: nfts.filter(nft => nft.network === 'monad-testnet' || nft.chainId === 10143).length\n    };\n\n    const types = [\n      { value: 'all', label: `All Types (${typeCount.all})` },\n      { value: 'ERC721', label: `ERC721 (${typeCount.ERC721})` },\n      { value: 'ERC1155', label: `ERC1155 (${typeCount.ERC1155})` }\n    ];\n\n    const networks = [\n      { value: 'all', label: 'All Networks' },\n      { value: '11155111', label: 'Sepolia' },\n      { value: '130', label: 'Unichain Mainnet' },\n      { value: '1301', label: 'Unichain Testnet' },\n      { value: '137', label: 'Polygon' },\n      { value: '1828369849', label: 'Moonwalker' },\n      { value: '10143', label: 'Monad Testnet' }\n    ];\n\n    const networkFilters = [\n      { id: 'all', label: `All Networks (${networkCount.all})` },\n      { id: '11155111', label: `Sepolia (${networkCount[11155111]})` },\n      { id: '130', label: `Unichain Mainnet (${networkCount[130]})` },\n      { id: '1301', label: `Unichain Testnet (${networkCount[1301]})` },\n      { id: '137', label: `Polygon (${networkCount[137]})` },\n      { id: '1828369849', label: `Moonwalker (${networkCount[1828369849]})` },\n      { id: '10143', label: `Monad Testnet (${networkCount[10143]})` }\n    ];\n\n    return (\n      <div className=\"flex gap-2\">\n        {/* Type Dropdown */}\n        <div \n          className=\"relative\"\n          onMouseEnter={() => handleMouseEnter(setTypeDropdownOpen)}\n          onMouseLeave={() => handleMouseLeave(setTypeDropdownOpen)}\n        >\n          <button\n            type=\"button\"\n            className=\"bg-white dark:bg-[#0d0e12] border border-gray-300 dark:border-gray-700 rounded-lg px-4 py-2 text-gray-900 dark:text-white focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none min-w-[160px] flex items-center justify-between text-xs\"\n          >\n            <span>{types.find(t => t.value === filters.type)?.label}</span>\n            <svg\n              className={`w-4 h-4 text-gray-500 transition-transform ${typeDropdownOpen ? 'rotate-180' : ''}`}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </button>\n          {typeDropdownOpen && (\n            <div \n              className=\"absolute z-[110] w-full mt-1 bg-white dark:bg-[#0d0e12] rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\"\n              onMouseEnter={() => clearTimeout(closeTimeoutRef.current)}\n              onMouseLeave={() => handleMouseLeave(setTypeDropdownOpen)}\n            >\n              {types.map(type => (\n                <button\n                  key={type.value}\n                  onClick={() => {\n                    setFilters(f => ({ ...f, type: type.value }));\n                    setTypeDropdownOpen(false);\n                  }}\n                  className={`w-full px-4 py-2 text-left hover:bg-gray-50 dark:hover:bg-gray-800 first:rounded-t-lg last:rounded-b-lg transition-colors duration-150 text-xs ${\n                    filters.type === type.value ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : 'text-gray-900 dark:text-white'\n                  }`}\n                >\n                  {type.label}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Network Dropdown */}\n        <div \n          className=\"relative\"\n          onMouseEnter={() => handleMouseEnter(setNetworkDropdownOpen)}\n          onMouseLeave={() => handleMouseLeave(setNetworkDropdownOpen)}\n        >\n          <button\n            type=\"button\"\n            className=\"bg-white dark:bg-[#0d0e12] border border-gray-300 dark:border-gray-700 rounded-lg px-4 py-2 text-gray-900 dark:text-white focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none min-w-[160px] flex items-center justify-between text-xs\"\n          >\n            <span>{networkFilters.find(n => n.id === filters.network)?.label}</span>\n            <svg\n              className={`w-4 h-4 text-gray-500 transition-transform ${networkDropdownOpen ? 'rotate-180' : ''}`}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </button>\n          {networkDropdownOpen && (\n            <div \n              className=\"absolute z-[110] w-full mt-1 bg-white dark:bg-[#0d0e12] rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\"\n              onMouseEnter={() => clearTimeout(closeTimeoutRef.current)}\n              onMouseLeave={() => handleMouseLeave(setNetworkDropdownOpen)}\n            >\n              {networkFilters.map(network => (\n                <button\n                  key={network.id}\n                  onClick={() => {\n                    setFilters(f => ({ ...f, network: network.id }));\n                    setNetworkDropdownOpen(false);\n                  }}\n                  className={`w-full px-4 py-2 text-left hover:bg-gray-50 dark:hover:bg-gray-800 first:rounded-t-lg last:rounded-b-lg transition-colors duration-150 text-xs ${\n                    filters.network === network.id ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : 'text-gray-900 dark:text-white'\n                  }`}\n                >\n                  {network.label}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  // Add renderCurrencyLogo function\n  const renderCurrencyLogo = (nft) => {\n    const tokenAddress = nft?.mintToken?.address?.toLowerCase();\n    const isNativeToken = !tokenAddress || tokenAddress === '0x0000000000000000000000000000000000000000';\n\n    // Handle native tokens based on network\n    if (isNativeToken) {\n      if (nft?.network === 'moonwalker' || nft?.chainId === 1828369849) {\n        return <img src=\"/Zero.png\" alt=\"ZERO\" className=\"w-5 h-5\" />;\n      }\n      if (nft?.network === 'polygon' || nft?.chainId === 137) {\n        return <img src=\"/polygon.png\" alt=\"POL\" className=\"w-5 h-5\" />;\n      }\n      if (nft?.network === 'monad-testnet' || nft?.chainId === 10143) {\n        return <img src=\"/monad.png\" alt=\"MON\" className=\"w-5 h-5\" />;\n      }\n      return <FaEthereum className=\"w-5 h-5 text-[#00ffbd]\" />;\n    }\n\n    // Handle ZERO token by address\n    if (tokenAddress === '0xf4a67fd6f54ff994b7df9013744a79281f88766e') {\n      return <img src=\"/Zero.png\" alt=\"ZERO\" className=\"w-4 h-4\" />;\n    }\n\n    // For custom tokens with logo\n    if (tokenAddress && tokenLogos[tokenAddress]) {\n      return (\n        <img \n          src={tokenLogos[tokenAddress]}\n          alt={nft.mintToken.symbol || 'Token'}\n          className=\"w-4 h-4 rounded-full\"\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = '/token-default.png';\n          }}\n        />\n      );\n    }\n    \n    // Default to token-default.png for custom tokens without logo\n    if (nft.mintToken?.type === 'custom') {\n      return <img src=\"/token-default.png\" alt=\"Token\" className=\"w-4 h-4 rounded-full\" />;\n    }\n    \n    return <FaEthereum className=\"w-4 h-4 text-[#00ffbd]\" />;\n  };\n\n  const renderNFTCard = (nft) => {\n    const imageUrl = ipfsToHttp(nft.image || nft.previewUrl);\n    const displayName = nft.name?.replace(/ #0$/, '');\n\n    return (\n      <motion.div\n        key={nft.uniqueId}\n        variants={itemVariants}\n        whileHover={{ \n          scale: 1.02,\n          transition: { duration: 0.2 }\n        }}\n        whileTap={{ scale: 0.98 }}\n        className=\"block\"\n      >\n        <div className=\"relative\">\n          {/* L-shaped corners with animation */}\n          <motion.div \n            className=\"absolute -top-[2px] -left-[2px] w-8 h-8\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.2 }}\n          >\n            <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </motion.div>\n          <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n            <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n            <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n            <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n\n          {/* Glowing dots in corners */}\n          <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n          {/* Three dots in top right */}\n          <div className=\"absolute top-3 right-3 flex gap-1 z-20\">\n            {[1, 2, 3].map((i) => (\n              <div\n                key={i}\n                className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n                style={{ animationDelay: `${i * 0.2}s` }}\n              />\n            ))}\n          </div>\n\n          {/* Main Content */}\n          <div className=\"relative z-10 bg-white dark:bg-[#1a1b1f] h-[340px]\">\n            {/* Image section with fade-in animation */}\n            <motion.div \n              className=\"relative h-[180px] w-full overflow-hidden\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 0.3 }}\n            >\n              {nft.artworkType === 'video' ? (\n                <video \n                  src={imageUrl}\n                  className=\"w-full h-full object-cover\"\n                  autoPlay\n                  muted\n                  loop\n                  playsInline\n                />\n              ) : (\n                <img \n                  src={imageUrl}\n                  alt={displayName}\n                  className=\"w-full h-full object-cover\"\n                  onError={(e) => {\n                    e.target.onerror = null;\n                    e.target.src = '/placeholder.png';\n                  }}\n                />\n              )}\n            </motion.div>\n\n            {/* Content section with fade-in animation */}\n            <motion.div \n              className=\"flex flex-col flex-1 p-4\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.2 }}\n            >\n              <div className=\"mb-3\">\n                <div className=\"flex items-center justify-between gap-2 mb-1 w-full\">\n                  <h3 className=\"text-base font-semibold text-gray-900 dark:text-white truncate flex-shrink min-w-0\">\n                    {displayName}\n                  </h3>\n                </div>\n              </div>\n\n              <div className=\"space-y-2 text-sm text-gray-500 dark:text-gray-400\">\n                <div className=\"flex justify-between\">\n                  <span>Minted:</span>\n                  <span>{formatDistanceToNow(new Date(nft.mintedAt), { addSuffix: true })}</span>\n                </div>\n                {nft.value && (\n                  <div className=\"flex justify-between items-center\">\n                    <span>Mint Price:</span>\n                    <div className=\"flex items-center gap-1 text-[#00ffbd]\">\n                      {renderCurrencyLogo(nft)}\n                      <span className=\"font-medium\">\n                        {formatMintPrice(nft.value, nft)} {(() => {\n                          const tokenAddress = nft?.mintToken?.address?.toLowerCase();\n                          if (tokenAddress === '0xf4a67fd6f54ff994b7df9013744a79281f88766e') return 'ZERO';\n                          \n                          const isNativeToken = !tokenAddress || tokenAddress === '0x0000000000000000000000000000000000000000';\n                          if (isNativeToken) {\n                            if (nft.network === 'moonwalker' || nft.chainId === 1828369849) return 'ZERO';\n                            if (nft.network === 'polygon' || nft.chainId === 137) return 'POL';\n                            return 'ETH';\n                          }\n                          \n                          return nft?.mintToken?.type === 'custom' ? nft.mintToken.symbol : 'ETH';\n                        })()}\n                      </span>\n                    </div>\n                  </div>\n                )}\n                <div className=\"flex justify-between\">\n                  <span>Collection:</span>\n                  <Link \n                    to={`/collection/${nft.symbol}`}\n                    className=\"text-[#00ffbd] hover:underline\"\n                  >\n                    {nft.collectionName}\n                  </Link>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n\n          {/* Add balance badge for ERC1155 */}\n          {nft.type === 'ERC1155' && nft.balance > 1 && (\n            <div className=\"absolute top-3 right-12 z-10\">\n              <div className=\"bg-[#00ffbd] text-black px-2 py-0.5 rounded-full text-xs font-medium\">\n                x{nft.balance}\n              </div>\n            </div>\n          )}\n        </div>\n      </motion.div>\n    );\n  };\n\n  // Early return for wallet connection\n  if (!isConnected) {\n    return (\n      <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6 rounded-xl\">\n        <div className=\"flex flex-col items-center justify-center py-16 px-4\">\n          <div className=\"w-20 h-20 mb-6 rounded-full bg-[#00ffbd]/10 flex items-center justify-center\">\n            <svg className=\"w-10 h-10 text-[#00ffbd]\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 9l-6 6m0-6l6 6\" />\n            </svg>\n          </div>\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-3\">\n            Connect Your Wallet\n          </h2>\n          <p className=\"text-gray-500 dark:text-gray-400 text-center mb-6 max-w-md\">\n            Please connect your wallet to view your NFTs. You'll be able to see all your NFT collections and manage them.\n          </p>\n          <button\n            onClick={openConnectModal}\n            className=\"px-6 py-3 bg-[#00ffbd] hover:bg-[#00ffbd]/90 text-black font-medium rounded-lg transition-colors duration-200 flex items-center gap-2\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n            </svg>\n            Connect Wallet\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-[#0a0b0f]\">\n        <div className=\"ml-[256px] relative\">\n          <div className=\"sticky top-0 z-50 bg-gray-50 dark:bg-[#0a0b0f] border-b border-gray-200 dark:border-gray-800\">\n            <div className=\"max-w-7xl mx-auto px-8\">\n              <motion.div \n                initial={{ opacity: 0, y: -20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5 }}\n                className=\"relative inline-block mb-3 pt-4\"\n              >\n                <div className=\"h-6 w-32 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n                <div className=\"absolute -bottom-2 left-0 w-full h-0.5 bg-[#00ffbd]\"></div>\n              </motion.div>\n              \n              <motion.div\n                initial={{ opacity: 0, y: -10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2 }}\n                className=\"max-w-xl pb-3\"\n              >\n                <div className=\"flex gap-2\">\n                  <div className=\"w-24 h-8 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n                  <div className=\"w-24 h-8 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n                </div>\n              </motion.div>\n            </div>\n          </div>\n\n          <div className=\"max-w-7xl mx-auto px-8 py-4 overflow-y-auto custom-scrollbar\" style={{\n            height: 'calc(100vh - 120px)',\n            scrollbarWidth: 'thin',\n            scrollbarColor: `#00ffbd ${document.documentElement.classList.contains('dark') ? '#1a1b1f' : '#ffffff'}`\n          }}>\n            <motion.div\n              variants={containerVariants}\n              initial=\"hidden\"\n              animate=\"show\"\n              className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\"\n            >\n              {Array.from({ length: 10 }).map((_, index) => (\n                <SkeletonCard key={index} />\n              ))}\n            </motion.div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-[#0a0b0f]\">\n      <div className=\"ml-[256px] relative\">\n        <div className=\"sticky top-0 z-50 bg-gray-50 dark:bg-[#0a0b0f] border-b border-gray-200 dark:border-gray-800\">\n          <div className=\"max-w-7xl mx-auto px-8\">\n            <motion.div \n              initial={{ opacity: 0, y: -20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5 }}\n              className=\"relative inline-block mb-3 pt-4\"\n            >\n              <h1 className=\"text-xl font-bold text-gray-900 dark:text-white\">My NFTs</h1>\n              <div className=\"absolute -bottom-2 left-0 w-full h-0.5 bg-[#00ffbd]\"></div>\n            </motion.div>\n            \n            <motion.div\n              initial={{ opacity: 0, y: -10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.2 }}\n              className=\"max-w-xl pb-3\"\n            >\n              <FilterControls />\n            </motion.div>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-8 py-4 overflow-y-auto custom-scrollbar\" style={{\n          height: 'calc(100vh - 120px)',\n          scrollbarWidth: 'thin',\n          scrollbarColor: `#00ffbd ${document.documentElement.classList.contains('dark') ? '#1a1b1f' : '#ffffff'}`\n        }}>\n          <motion.div\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"show\"\n            className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\"\n          >\n            {filteredNFTs.length > 0 ? (\n              filteredNFTs.map(renderNFTCard)\n            ) : (\n              <motion.div \n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.3 }}\n                className=\"text-center py-12 col-span-full\"\n              >\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                  No NFTs Found\n                </h3>\n                <p className=\"text-gray-500 dark:text-gray-400\">\n                  You haven't minted any NFTs yet.\n                </p>\n              </motion.div>\n            )}\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n} \n\nconst getExplorerUrl = (chainId, type, value) => {\n  let baseUrl;\n  \n  switch (chainId) {\n    case 130:\n      baseUrl = 'https://unichain.blockscout.com';\n      break;\n    case 1301:\n      baseUrl = 'https://unichain-sepolia.blockscout.com';\n      break;\n    case 137:\n      baseUrl = 'https://polygon.blockscout.com';\n      break;\n    case 1828369849:\n      baseUrl = 'https://moonwalker-blockscout.eu-north-2.gateway.fm';\n      break;\n    case 10143:\n      baseUrl = 'https://monad-testnet.socialscan.io';\n      break;\n    default:\n      baseUrl = 'https://sepolia.etherscan.io';\n  }\n\n  switch (type) {\n    case 'tx':\n      return `${baseUrl}/tx/${value}`;\n    case 'token':\n      return `${baseUrl}/token/${value}`;\n    case 'address':\n      return `${baseUrl}/address/${value}`;\n    default:\n      return `${baseUrl}/tx/${value}`;\n  }\n}; ","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Dialog } from '@headlessui/react';\r\nimport { useBalance, useAccount } from 'wagmi';\r\nimport { ethers } from 'ethers';\r\nimport { UNISWAP_ADDRESSES } from '../../services/uniswap';\r\nimport { useUniswap } from '../../hooks/useUniswap';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { getTokenDeploymentByAddress, getAllTokenDeployments } from '../../services/firebase';\r\nimport { ipfsToHttp } from '../../utils/ipfs';\r\n\r\n// Common tokens with metadata\r\nconst COMMON_TOKENS = [\r\n  {\r\n    address: 'ETH',\r\n    symbol: 'ETH',\r\n    name: 'Ethereum',\r\n    decimals: 18,\r\n    logo: '/eth.png'\r\n  },\r\n  {\r\n    address: UNISWAP_ADDRESSES.WETH,\r\n    symbol: 'WETH',\r\n    name: 'Wrapped Ethereum',\r\n    decimals: 18,\r\n    logo: '/eth.png'\r\n  },\r\n  {\r\n    address: UNISWAP_ADDRESSES.USDC,\r\n    symbol: 'USDC',\r\n    name: 'USD Coin',\r\n    decimals: 6,\r\n    logo: '/usdc.png'\r\n  },\r\n  {\r\n    address: UNISWAP_ADDRESSES.USDT,\r\n    symbol: 'USDT',\r\n    name: 'Test USDT',\r\n    decimals: 6,\r\n    logo: '/usdt.png'\r\n  }\r\n];\r\n\r\n// Add CSS for custom scrollbar\r\nconst scrollbarStyles = `\r\n  .token-list-scrollbar::-webkit-scrollbar {\r\n    width: 6px;\r\n  }\r\n  .token-list-scrollbar::-webkit-scrollbar-track {\r\n    background: #2d2f36;\r\n    border-radius: 3px;\r\n  }\r\n  .token-list-scrollbar::-webkit-scrollbar-thumb {\r\n    background: #00ffbd;\r\n    border-radius: 3px;\r\n  }\r\n  .token-list-scrollbar {\r\n    scrollbar-width: thin;\r\n    scrollbar-color: #00ffbd #2d2f36;\r\n  }\r\n`;\r\n\r\nfunction TokenRow({ token, userAddress, onSelect, isSelected }) {\r\n  const [balance, setBalance] = useState('0');\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      if (!userAddress || !token) return;\r\n\r\n      try {\r\n        const provider = new ethers.BrowserProvider(window.ethereum);\r\n        let rawBalance, decimals;\r\n\r\n        if (token.address === 'ETH') {\r\n          rawBalance = await provider.getBalance(userAddress);\r\n          decimals = 18;\r\n        } else {\r\n          const contract = new ethers.Contract(\r\n            token.address,\r\n            ['function balanceOf(address) view returns (uint256)', 'function decimals() view returns (uint8)'],\r\n            provider\r\n          );\r\n\r\n          // Get decimals first\r\n          try {\r\n            decimals = await contract.decimals();\r\n          } catch {\r\n            decimals = 18;\r\n          }\r\n\r\n          // Get balance using raw call\r\n          const data = contract.interface.encodeFunctionData('balanceOf', [userAddress]);\r\n          const result = await provider.call({\r\n            to: token.address,\r\n            data: data\r\n          });\r\n          rawBalance = ethers.toBigInt(result);\r\n        }\r\n\r\n        const formatted = Number(ethers.formatUnits(rawBalance, decimals));\r\n        const displayBalance = new Intl.NumberFormat('en-US', {\r\n          minimumFractionDigits: 0,\r\n          maximumFractionDigits: token.symbol === 'USDC' ? 2 : 6\r\n        }).format(formatted);\r\n\r\n        setBalance(displayBalance);\r\n      } catch (error) {\r\n        console.error(`Error fetching balance for ${token.symbol}:`, error);\r\n        setBalance('0');\r\n      }\r\n    };\r\n\r\n    fetchBalance();\r\n  }, [token, userAddress]);\r\n\r\n  const renderTokenLogo = () => {\r\n    // For common tokens, use their predefined logos\r\n    const commonToken = COMMON_TOKENS.find(t => t.address === token.address);\r\n    if (commonToken) {\r\n      return <img src={commonToken.logo} alt={commonToken.symbol} className=\"w-8 h-8 rounded-full\" />;\r\n    }\r\n\r\n    // For tokens with IPFS logo or direct logo\r\n    const logoUrl = token.logo || (token.logoIpfs ? ipfsToHttp(token.logoIpfs) : null);\r\n    if (logoUrl) {\r\n      return (\r\n        <img \r\n          src={logoUrl}\r\n          alt={token.symbol}\r\n          className=\"w-8 h-8 rounded-full\"\r\n          onError={(e) => {\r\n            e.target.onerror = null;\r\n            e.target.src = '/token-default.png';\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    // Default token logo\r\n    return (\r\n      <img \r\n        src=\"/token-default.png\"\r\n        alt={token.symbol || 'Unknown'}\r\n        className=\"w-8 h-8 rounded-full\"\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={() => onSelect(token)}\r\n      className={`w-full flex items-center justify-between p-3 hover:bg-gray-100 dark:hover:bg-[#2d2f36] rounded-xl transition-colors ${\r\n        isSelected ? 'bg-[#00ffbd]/10 border-[#00ffbd] border' : ''\r\n      }`}\r\n    >\r\n      <div className=\"flex items-center gap-3\">\r\n        {renderTokenLogo()}\r\n        <div className=\"text-left\">\r\n          <div className=\"font-medium text-gray-900 dark:text-white\">\r\n            {token.symbol || 'Unknown'}\r\n          </div>\r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            {token.name || 'Unknown Token'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"text-right text-sm text-gray-900 dark:text-white\">\r\n        {balance}\r\n      </div>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default function TokenSelectionModal({ isOpen, onClose, onSelect, selectedTokenAddress }) {\r\n  const { address: userAddress } = useAccount();\r\n  const uniswap = useUniswap();\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [customToken, setCustomToken] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n  const [deployedTokens, setDeployedTokens] = useState([]);\r\n  const [tokensWithBalance, setTokensWithBalance] = useState([]);\r\n\r\n  // Fetch all deployed tokens when modal opens\r\n  useEffect(() => {\r\n    const fetchDeployedTokens = async () => {\r\n      if (!isOpen || !userAddress) return;\r\n      \r\n      try {\r\n        setIsLoading(true);\r\n        const tokens = await getAllTokenDeployments();\r\n        console.log('Fetched deployed tokens:', tokens);\r\n        \r\n        const formattedTokens = tokens.map(token => ({\r\n          address: token.address,\r\n          symbol: token.symbol,\r\n          name: token.name,\r\n          decimals: token.decimals || 18,\r\n          logo: token.logo,\r\n          logoIpfs: token.logoIpfs,\r\n          artworkType: token.artworkType,\r\n          verified: true\r\n        }));\r\n        \r\n        setDeployedTokens(formattedTokens);\r\n\r\n        // Check balances for all tokens\r\n        const provider = new ethers.BrowserProvider(window.ethereum);\r\n        \r\n        // First check if the contract is valid ERC20 before checking balance\r\n        const checkTokenBalance = async (token) => {\r\n          try {\r\n            if (token.address === 'ETH') {\r\n              const balance = await provider.getBalance(userAddress);\r\n              const formattedBalance = ethers.formatUnits(balance, 18);\r\n              return {\r\n                ...token,\r\n                formattedBalance\r\n              };\r\n            }\r\n\r\n            // First verify if the contract exists and has the required methods\r\n            const code = await provider.getCode(token.address);\r\n            if (code === '0x') return null; // Contract doesn't exist\r\n\r\n            const contract = new ethers.Contract(\r\n              token.address,\r\n              [\r\n                'function balanceOf(address) view returns (uint256)',\r\n                'function decimals() view returns (uint8)',\r\n                'function symbol() view returns (string)',\r\n                'function name() view returns (string)'\r\n              ],\r\n              provider\r\n            );\r\n\r\n            // Get balance and decimals\r\n            const [balance, decimals] = await Promise.all([\r\n              contract.balanceOf(userAddress),\r\n              contract.decimals().catch(() => 18) // Default to 18 if decimals() fails\r\n            ]);\r\n\r\n            // Format the balance\r\n            const formattedBalance = ethers.formatUnits(balance, decimals);\r\n            \r\n            // Return token with balance info\r\n            return {\r\n              ...token,\r\n              formattedBalance\r\n            };\r\n          } catch (error) {\r\n            console.error(`Error checking token ${token.symbol}:`, error);\r\n            return {\r\n              ...token,\r\n              formattedBalance: '0'\r\n            };\r\n          }\r\n        };\r\n\r\n        const tokensWithBalances = await Promise.all(\r\n          [...COMMON_TOKENS, ...formattedTokens].map(checkTokenBalance)\r\n        );\r\n\r\n        const validTokens = tokensWithBalances.filter(token => token !== null);\r\n        console.log('All tokens with balances:', validTokens);\r\n        setTokensWithBalance(validTokens);\r\n      } catch (error) {\r\n        console.error('Error fetching deployed tokens:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDeployedTokens();\r\n  }, [isOpen, userAddress]);\r\n\r\n  // Reset search and force refresh when modal opens\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setSearchQuery('');\r\n      setCustomToken(null);\r\n      setError('');\r\n      setRefreshTrigger(prev => prev + 1);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Handle search for custom token\r\n  useEffect(() => {\r\n    const searchCustomToken = async () => {\r\n      // Clear custom token if search is empty or too short\r\n      if (!searchQuery || searchQuery.length < 42) {\r\n        setCustomToken(null);\r\n        setError('');\r\n        return;\r\n      }\r\n\r\n      // Check if the search query looks like an address\r\n      if (!ethers.isAddress(searchQuery)) {\r\n        setCustomToken(null);\r\n        if (searchQuery.startsWith('0x')) {\r\n          setError('Invalid token address');\r\n        }\r\n        return;\r\n      }\r\n\r\n      setIsLoading(true);\r\n      setError('');\r\n\r\n      try {\r\n        // First try to get token info from Firestore deployments\r\n        const tokenDeployment = await getTokenDeploymentByAddress(searchQuery);\r\n        \r\n        if (tokenDeployment) {\r\n          console.log('Found custom token in Firebase:', tokenDeployment);\r\n          setCustomToken({\r\n            address: searchQuery,\r\n            symbol: tokenDeployment.symbol,\r\n            name: tokenDeployment.name,\r\n            decimals: tokenDeployment.decimals || 18,\r\n            logo: tokenDeployment.logo,\r\n            logoIpfs: tokenDeployment.logoIpfs,\r\n            artworkType: tokenDeployment.artworkType,\r\n            verified: true\r\n          });\r\n          setError('');\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n\r\n        // If not in Firebase, try direct contract call\r\n        const provider = new ethers.BrowserProvider(window.ethereum);\r\n        const tokenContract = new ethers.Contract(\r\n          searchQuery,\r\n          [\r\n            'function symbol() view returns (string)',\r\n            'function name() view returns (string)',\r\n            'function decimals() view returns (uint8)'\r\n          ],\r\n          provider\r\n        );\r\n\r\n        const [symbol, name, decimals] = await Promise.all([\r\n          tokenContract.symbol(),\r\n          tokenContract.name(),\r\n          tokenContract.decimals()\r\n        ]);\r\n\r\n        setCustomToken({\r\n          address: searchQuery,\r\n          symbol: symbol,\r\n          name: name,\r\n          decimals: decimals,\r\n          logo: null,\r\n          logoIpfs: null,\r\n          artworkType: null,\r\n          verified: true\r\n        });\r\n        setError('');\r\n      } catch (error) {\r\n        console.error('Error loading token:', error);\r\n        setError('Could not load token information. Make sure this is a valid ERC20 token.');\r\n        setCustomToken(null);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    // Debounce the search to avoid too many requests\r\n    const timeoutId = setTimeout(searchCustomToken, 500);\r\n    return () => clearTimeout(timeoutId);\r\n  }, [searchQuery]);\r\n\r\n  // Filter tokens based on search query\r\n  const filteredTokens = useMemo(() => {\r\n    const searchLower = searchQuery.toLowerCase();\r\n    return tokensWithBalance.filter(token => \r\n      token.symbol?.toLowerCase().includes(searchLower) ||\r\n      token.name?.toLowerCase().includes(searchLower) ||\r\n      token.address?.toLowerCase().includes(searchLower)\r\n    );\r\n  }, [searchQuery, tokensWithBalance]);\r\n\r\n  const handleTokenSelect = async (token) => {\r\n    try {\r\n      let finalToken;\r\n      if (token.symbol === 'ETH') {\r\n        finalToken = {\r\n          ...token,\r\n          address: UNISWAP_ADDRESSES.WETH\r\n        };\r\n      } else {\r\n        // Try to get token info from Firebase\r\n        const tokenDeployment = await getTokenDeploymentByAddress(token.address);\r\n        if (tokenDeployment) {\r\n          finalToken = {\r\n            ...token,\r\n            symbol: token.symbol || tokenDeployment.symbol, // Preserve original symbol if exists\r\n            name: token.name || tokenDeployment.name, // Preserve original name if exists\r\n            decimals: token.decimals || tokenDeployment.decimals || 18,\r\n            logo: token.logo || tokenDeployment.logo,\r\n            logoIpfs: token.logoIpfs || tokenDeployment.logoIpfs,\r\n            artworkType: token.artworkType || tokenDeployment.artworkType,\r\n            verified: true\r\n          };\r\n        } else {\r\n          // If not in Firebase, keep all original token information\r\n          finalToken = {\r\n            ...token,\r\n            decimals: token.decimals || 18,\r\n            verified: true\r\n          };\r\n        }\r\n      }\r\n\r\n      onSelect(finalToken);\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error in handleTokenSelect:', error);\r\n      setError('Failed to process token selection');\r\n    }\r\n  };\r\n\r\n  const fetchBalance = async () => {\r\n    if (!userAddress || !customToken) return;\r\n    \r\n    try {\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      let rawBalance;\r\n      let decimals;\r\n\r\n      if (customToken.symbol === 'ETH') {\r\n        rawBalance = await provider.getBalance(userAddress);\r\n        decimals = 18;\r\n      } else {\r\n        // Create contract instance with full ERC20 interface\r\n        const contract = new ethers.Contract(\r\n          customToken.address,\r\n          [\r\n            'function balanceOf(address) view returns (uint256)',\r\n            'function decimals() view returns (uint8)',\r\n            'function symbol() view returns (string)',\r\n            'function name() view returns (string)'\r\n          ],\r\n          provider\r\n        );\r\n\r\n        try {\r\n          // Try to get decimals first\r\n          decimals = await contract.decimals();\r\n        } catch (error) {\r\n          console.log('Failed to get decimals, using default 18');\r\n          decimals = 18;\r\n        }\r\n\r\n        try {\r\n          // Get balance with a lower-level call to handle non-standard implementations\r\n          rawBalance = await provider.call({\r\n            to: customToken.address,\r\n            data: contract.interface.encodeFunctionData('balanceOf', [userAddress])\r\n          });\r\n          rawBalance = ethers.zeroPadValue(rawBalance, 32); // Ensure proper padding\r\n          rawBalance = ethers.toBigInt(rawBalance);\r\n        } catch (error) {\r\n          console.error('Failed to get balance with low-level call:', error);\r\n          // Fallback to standard call\r\n          rawBalance = await contract.balanceOf(userAddress);\r\n        }\r\n      }\r\n\r\n      const formatted = Number(ethers.formatUnits(rawBalance, decimals));\r\n      setCustomToken({\r\n        ...customToken,\r\n        formattedBalance: new Intl.NumberFormat('en-US', {\r\n          minimumFractionDigits: 0,\r\n          maximumFractionDigits: customToken.symbol === 'USDC' ? 2 : 6\r\n        }).format(formatted)\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching balance:', error);\r\n      setCustomToken({\r\n        ...customToken,\r\n        formattedBalance: '0'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onClose={onClose} className=\"relative z-50\">\r\n      <style>{scrollbarStyles}</style>\r\n      <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm\" aria-hidden=\"true\" />\r\n      \r\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\r\n        <Dialog.Panel className=\"w-full max-w-md rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 shadow-xl border border-gray-200 dark:border-gray-800\">\r\n          <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\r\n            Select Token\r\n          </Dialog.Title>\r\n\r\n          {/* Search Input */}\r\n          <div className=\"relative mb-4\">\r\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n              <FaSearch className=\"text-gray-400\" />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              placeholder=\"Search by name or paste address\"\r\n              className=\"w-full pl-10 pr-4 py-3 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500\"\r\n            />\r\n            {error && (\r\n              <p className=\"mt-2 text-sm text-red-500\">{error}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Token List Container */}\r\n          <div className=\"token-list-scrollbar overflow-y-auto max-h-[60vh] pr-2\">\r\n            {isLoading ? (\r\n              <div className=\"flex items-center justify-center py-4\">\r\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#00ffbd]\"></div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {/* Common Tokens Section */}\r\n                <div className=\"mb-4\">\r\n                  <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400 mb-2\">\r\n                    Your Tokens\r\n                  </h3>\r\n                  <div className=\"space-y-2\">\r\n                    {filteredTokens.map((token) => (\r\n                      <TokenRow\r\n                        key={`${token.address}-${refreshTrigger}`}\r\n                        token={token}\r\n                        userAddress={userAddress}\r\n                        onSelect={handleTokenSelect}\r\n                        isSelected={selectedTokenAddress === (token.symbol === 'ETH' ? UNISWAP_ADDRESSES.WETH : token.address)}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Custom Token Section */}\r\n                {customToken && !error && (\r\n                  <div className=\"mt-4\">\r\n                    <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400 mb-2\">\r\n                      Custom Token\r\n                    </h3>\r\n                    <TokenRow\r\n                      token={customToken}\r\n                      userAddress={userAddress}\r\n                      onSelect={handleTokenSelect}\r\n                      isSelected={selectedTokenAddress === customToken.address}\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                {/* No Results Message */}\r\n                {filteredTokens.length === 0 && !customToken && !error && (\r\n                  <div className=\"text-center py-4 text-gray-500 dark:text-gray-400\">\r\n                    No tokens found with balance\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </Dialog.Panel>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n} ","// Standard ERC20 token ABI\nexport const ERC20_ABI = [\n  // Read-only functions\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }],\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }],\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"uint8\" }],\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }],\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [{ \"name\": \"_owner\", \"type\": \"address\" }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{ \"name\": \"balance\", \"type\": \"uint256\" }],\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      { \"name\": \"_owner\", \"type\": \"address\" },\n      { \"name\": \"_spender\", \"type\": \"address\" }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }],\n    \"type\": \"function\"\n  },\n  // Write functions\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"name\": \"_to\", \"type\": \"address\" },\n      { \"name\": \"_value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }],\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"name\": \"_spender\", \"type\": \"address\" },\n      { \"name\": \"_value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }],\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"name\": \"_from\", \"type\": \"address\" },\n      { \"name\": \"_to\", \"type\": \"address\" },\n      { \"name\": \"_value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }],\n    \"type\": \"function\"\n  },\n  // Events\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      { \"indexed\": true, \"name\": \"owner\", \"type\": \"address\" },\n      { \"indexed\": true, \"name\": \"spender\", \"type\": \"address\" },\n      { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      { \"indexed\": true, \"name\": \"from\", \"type\": \"address\" },\n      { \"indexed\": true, \"name\": \"to\", \"type\": \"address\" },\n      { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  }\n]; ","import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { FaExchangeAlt } from 'react-icons/fa';\r\nimport { useAccount, useBalance } from 'wagmi';\r\nimport { toast } from 'react-hot-toast';\r\nimport { ethers } from 'ethers';\r\nimport TokenSelectionModal from './TokenSelectionModal';\r\nimport { useUniswap } from '../../hooks/useUniswap';\r\nimport { UNISWAP_ADDRESSES } from '../../services/uniswap';\r\nimport axios from 'axios';\r\nimport { ERC20_ABI } from '../../services/erc20';\r\n\r\nexport default function TokenSwap() {\r\n  const { address } = useAccount();\r\n  const uniswap = useUniswap();\r\n  \r\n  // State declarations\r\n  const [fromToken, setFromToken] = useState(null);\r\n  const [toToken, setToToken] = useState(null);\r\n  const [fromAmount, setFromAmount] = useState('');\r\n  const [toAmount, setToAmount] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [route, setRoute] = useState(null);\r\n  const [showFromTokenModal, setShowFromTokenModal] = useState(false);\r\n  const [showToTokenModal, setShowToTokenModal] = useState(false);\r\n  const [fromTokenBalance, setFromTokenBalance] = useState('0');\r\n  const [toTokenBalance, setToTokenBalance] = useState('0');\r\n  const [slippage, setSlippage] = useState(2.0);\r\n  const [customSlippage, setCustomSlippage] = useState('');\r\n  const [showCustomSlippage, setShowCustomSlippage] = useState(false);\r\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n  const [showMoreDetails, setShowMoreDetails] = useState(false);\r\n  const [estimatedFee, setEstimatedFee] = useState(null);\r\n  const [networkCost, setNetworkCost] = useState(null);\r\n  const [exchangeRate, setExchangeRate] = useState(null);\r\n\r\n  // Calculate exchange rate and fees\r\n  const calculateTradeDetails = useCallback(() => {\r\n    if (!fromAmount || !toAmount || !fromToken || !toToken) {\r\n      setEstimatedFee(null);\r\n      setExchangeRate(null);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Calculate exchange rate\r\n      const fromAmountDecimal = Number(fromAmount);\r\n      const toAmountDecimal = Number(toAmount);\r\n      const rate = toAmountDecimal / fromAmountDecimal;\r\n      \r\n      // Calculate estimated fee (0.3% for Uniswap V2)\r\n      const fee = fromAmountDecimal * 0.003;\r\n      \r\n      setEstimatedFee(fee);\r\n      setExchangeRate(rate);\r\n      \r\n      // Estimate network cost (this would normally come from the provider)\r\n      setNetworkCost('~0.003 ETH');\r\n    } catch (error) {\r\n      console.error('Error calculating trade details:', error);\r\n    }\r\n  }, [fromAmount, toAmount, fromToken, toToken]);\r\n\r\n  // Update trade details when amounts change\r\n  useEffect(() => {\r\n    calculateTradeDetails();\r\n  }, [calculateTradeDetails, fromAmount, toAmount]);\r\n\r\n  // Quote effect\r\n  useEffect(() => {\r\n    async function getQuote() {\r\n      if (!uniswap || !fromToken || !toToken || !fromAmount || fromAmount === '0') {\r\n        setToAmount('');\r\n        setRoute(null);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const poolInfo = await uniswap.getPoolInfo(fromToken.address, toToken.address);\r\n        console.log('Pool info:', poolInfo);\r\n        \r\n        if (!poolInfo?.token0) {\r\n          console.log('No liquidity pool exists for this pair');\r\n          setToAmount('');\r\n          setRoute('No liquidity pool exists');\r\n          return;\r\n        }\r\n\r\n        const amountIn = ethers.parseUnits(fromAmount, fromToken.decimals);\r\n        const path = [fromToken.address, toToken.address];\r\n        const amountOut = await uniswap.getAmountOut(amountIn, path);\r\n        const formattedAmount = ethers.formatUnits(amountOut, toToken.decimals);\r\n        setToAmount(formattedAmount);\r\n        \r\n        setRoute(`${fromToken.symbol} → ${toToken.symbol}`);\r\n      } catch (error) {\r\n        console.error('Error in getQuote:', error);\r\n        setToAmount('');\r\n        setRoute('Error: ' + (error.reason || 'Failed to get quote'));\r\n      }\r\n    }\r\n\r\n    getQuote();\r\n  }, [uniswap, fromToken, toToken, fromAmount]);\r\n\r\n  // Render trade details section\r\n  const renderTradeDetails = () => {\r\n    if (!fromToken || !toToken || !fromAmount || !toAmount) return null;\r\n\r\n    return (\r\n      <div className=\"space-y-3\">\r\n        <button\r\n          onClick={() => setShowMoreDetails(!showMoreDetails)}\r\n          className=\"flex items-center justify-between w-full text-sm text-gray-500 hover:text-gray-400\"\r\n        >\r\n          {showMoreDetails ? 'Show less' : 'Show more'} \r\n          <svg\r\n            className={`w-4 h-4 transition-transform ${showMoreDetails ? 'rotate-180' : ''}`}\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n          </svg>\r\n        </button>\r\n\r\n        {showMoreDetails && (\r\n          <div className=\"space-y-2 text-sm\">\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-gray-500\">Expected Output</span>\r\n              <span className=\"text-gray-200\">{toAmount} {toToken.symbol}</span>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-gray-500\">Fee</span>\r\n              <span className=\"text-gray-200\">\r\n                {estimatedFee ? `${estimatedFee.toFixed(6)} ${fromToken.symbol} (0.3%)` : '--'}\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-gray-500\">Network Cost</span>\r\n              <span className=\"text-gray-200\">{networkCost || '--'}</span>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-gray-500\">Route</span>\r\n              <span className=\"text-gray-200\">{route || '--'}</span>\r\n            </div>\r\n\r\n            {exchangeRate && (\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-500\">Exchange Rate</span>\r\n                <span className=\"text-gray-200\">\r\n                  1 {fromToken.symbol} = {exchangeRate.toFixed(6)} {toToken.symbol}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Add updateBalances function\r\n  const updateBalances = async () => {\r\n    if (!address || !fromToken || !toToken) return;\r\n\r\n    try {\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      \r\n      // Get ETH balance if either token is ETH\r\n      if (fromToken.symbol === 'ETH') {\r\n        const ethBalance = await provider.getBalance(address);\r\n        setFromTokenBalance(ethers.formatEther(ethBalance));\r\n      } else {\r\n        const fromTokenContract = new ethers.Contract(fromToken.address, ERC20_ABI, provider);\r\n        const fromBalance = await fromTokenContract.balanceOf(address);\r\n        setFromTokenBalance(ethers.formatUnits(fromBalance, fromToken.decimals));\r\n      }\r\n\r\n      if (toToken.symbol === 'ETH') {\r\n        const ethBalance = await provider.getBalance(address);\r\n        setToTokenBalance(ethers.formatEther(ethBalance));\r\n      } else {\r\n        const toTokenContract = new ethers.Contract(toToken.address, ERC20_ABI, provider);\r\n        const toBalance = await toTokenContract.balanceOf(address);\r\n        setToTokenBalance(ethers.formatUnits(toBalance, toToken.decimals));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating balances:', error);\r\n    }\r\n  };\r\n\r\n  // Add useEffect to update balances when tokens change or after refresh trigger\r\n  useEffect(() => {\r\n    updateBalances();\r\n  }, [address, fromToken, toToken, refreshTrigger]);\r\n\r\n  // Update handleSwap function to call updateBalances after successful swap\r\n  const handleSwap = async () => {\r\n    if (!address) {\r\n      toast.error('Please connect your wallet');\r\n      return;\r\n    }\r\n\r\n    if (!fromToken || !toToken || !fromAmount) {\r\n      toast.error('Please fill in all fields');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const signer = await provider.getSigner();\r\n      \r\n      // Parse input amount with proper decimals\r\n      const amountIn = ethers.parseUnits(fromAmount, fromToken.decimals);\r\n      \r\n      // Parse output amount with proper decimals (especially for USDC)\r\n      const amountOutMinRaw = ethers.parseUnits(toAmount, toToken.decimals);\r\n      \r\n      // Calculate slippage using user-defined slippage value\r\n      const slippageMultiplier = BigInt(Math.floor((100 - slippage) * 100)); // Convert percentage to basis points\r\n      const amountOutMin = (amountOutMinRaw * slippageMultiplier) / 10000n;\r\n\r\n      const path = [fromToken.address, toToken.address];\r\n      const deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20); // 20 minutes\r\n\r\n      // Create router contract\r\n      const router = new ethers.Contract(\r\n        UNISWAP_ADDRESSES.router,\r\n        [\r\n          'function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)',\r\n          'function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts)',\r\n          'function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)'\r\n        ],\r\n        signer\r\n      );\r\n\r\n      console.log('Swap parameters:', {\r\n        amountIn: amountIn.toString(),\r\n        amountOutMin: amountOutMin.toString(),\r\n        path,\r\n        to: address,\r\n        deadline: deadline.toString()\r\n      });\r\n\r\n      let tx;\r\n      if (fromToken.symbol === 'ETH') {\r\n        tx = await router.swapExactETHForTokens(\r\n          amountOutMin,\r\n          path,\r\n          address,\r\n          deadline,\r\n          { value: amountIn, gasLimit: 300000 }\r\n        );\r\n      } else if (toToken.symbol === 'ETH') {\r\n        tx = await router.swapExactTokensForETH(\r\n          amountIn,\r\n          amountOutMin,\r\n          path,\r\n          address,\r\n          deadline,\r\n          { gasLimit: 300000 }\r\n        );\r\n      } else {\r\n        // For token to token swaps (including USDC)\r\n        // First approve if needed\r\n        if (fromToken.symbol !== 'ETH') {\r\n          const tokenContract = new ethers.Contract(\r\n            fromToken.address,\r\n            [\r\n              'function approve(address spender, uint256 amount) external returns (bool)',\r\n              'function allowance(address owner, address spender) external view returns (uint256)'\r\n            ],\r\n            signer\r\n          );\r\n          \r\n          const allowance = await tokenContract.allowance(address, UNISWAP_ADDRESSES.router);\r\n          if (allowance < amountIn) {\r\n            console.log('Approving tokens...');\r\n            const approveTx = await tokenContract.approve(UNISWAP_ADDRESSES.router, amountIn);\r\n            await approveTx.wait();\r\n            console.log('Tokens approved');\r\n          }\r\n        }\r\n\r\n        tx = await router.swapExactTokensForTokens(\r\n          amountIn,\r\n          amountOutMin,\r\n          path,\r\n          address,\r\n          deadline,\r\n          { gasLimit: 300000 }\r\n        );\r\n      }\r\n\r\n      console.log('Swap transaction sent:', tx.hash);\r\n      const receipt = await tx.wait();\r\n      console.log('Swap receipt:', receipt);\r\n      \r\n      // Update balances after successful swap\r\n      await updateBalances();\r\n      \r\n      toast.success('Swap successful!');\r\n      setFromAmount('');\r\n      setToAmount('');\r\n      \r\n      // Refresh balances\r\n      setRefreshTrigger(prev => prev + 1);\r\n    } catch (error) {\r\n      console.error('Swap error:', error);\r\n      \r\n      // Handle specific error messages\r\n      if (error.message.includes('insufficient')) {\r\n        toast.error('Insufficient balance for swap');\r\n      } else if (error.message.includes('INSUFFICIENT_OUTPUT_AMOUNT')) {\r\n        toast.error('Price impact too high, try a smaller amount');\r\n      } else if (error.message.includes('EXCESSIVE_INPUT_AMOUNT')) {\r\n        toast.error('Insufficient liquidity for this trade');\r\n      } else if (error.message.includes('user rejected')) {\r\n        toast.error('Transaction rejected');\r\n      } else {\r\n        toast.error(error.reason || 'Failed to swap tokens');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFromTokenSelect = async (token) => {\r\n    if (token.symbol === 'ETH') {\r\n      // For ETH, we don't need to get token info\r\n      setFromToken({\r\n        ...token,\r\n        address: UNISWAP_ADDRESSES.WETH, // Use WETH address for Uniswap\r\n        decimals: 18\r\n      });\r\n    } else {\r\n      // For other tokens, get token info but preserve name and symbol\r\n      const tokenInfo = await uniswap.getTokenInfo(token.address);\r\n      setFromToken({ \r\n        ...token,\r\n        ...tokenInfo,\r\n        name: token.name || tokenInfo.name,\r\n        symbol: token.symbol || tokenInfo.symbol,\r\n        logo: token.logo || tokenInfo.logo,\r\n        logoIpfs: token.logoIpfs || tokenInfo.logoIpfs\r\n      });\r\n    }\r\n    setShowFromTokenModal(false);\r\n  };\r\n\r\n  const handleToTokenSelect = async (token) => {\r\n    if (token.symbol === 'ETH') {\r\n      // For ETH, we don't need to get token info\r\n      setToToken({\r\n        ...token,\r\n        address: UNISWAP_ADDRESSES.WETH, // Use WETH address for Uniswap\r\n        decimals: 18\r\n      });\r\n    } else {\r\n      // For other tokens, get token info but preserve name and symbol\r\n      const tokenInfo = await uniswap.getTokenInfo(token.address);\r\n      setToToken({ \r\n        ...token,\r\n        ...tokenInfo,\r\n        name: token.name || tokenInfo.name,\r\n        symbol: token.symbol || tokenInfo.symbol,\r\n        logo: token.logo || tokenInfo.logo,\r\n        logoIpfs: token.logoIpfs || tokenInfo.logoIpfs\r\n      });\r\n    }\r\n    setShowToTokenModal(false);\r\n  };\r\n\r\n  // Fetch price ratio from CoinGecko when tokens are selected\r\n  useEffect(() => {\r\n    async function fetchPriceRatio() {\r\n      if (!fromToken || !toToken) return;\r\n\r\n      try {\r\n        // Get token addresses in lowercase\r\n        const token0Address = fromToken.address.toLowerCase();\r\n        const token1Address = toToken.address.toLowerCase();\r\n\r\n        // Fetch token info from CoinGecko using contract addresses\r\n        const response = await axios.get(\r\n          `https://api.coingecko.com/api/v3/simple/token_price/ethereum?contract_addresses=${token0Address},${token1Address}&vs_currencies=usd`\r\n        );\r\n\r\n        // If token is ETH, use ETH price endpoint\r\n        let token0Price = response.data[token0Address]?.usd;\r\n        let token1Price = response.data[token1Address]?.usd;\r\n\r\n        // If either token is ETH (WETH), fetch ETH price\r\n        if (fromToken.address.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase()) {\r\n          const ethResponse = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd');\r\n          token0Price = ethResponse.data.ethereum.usd;\r\n        }\r\n        if (toToken.address.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase()) {\r\n          const ethResponse = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd');\r\n          token1Price = ethResponse.data.ethereum.usd;\r\n        }\r\n\r\n        if (!token0Price || !token1Price) {\r\n          console.log('Could not fetch prices for tokens');\r\n          return;\r\n        }\r\n\r\n        const ratio = token0Price / token1Price;\r\n        console.log('Price ratio:', ratio);\r\n\r\n        setPoolCreationState(prev => ({\r\n          ...prev,\r\n          priceRatio: ratio\r\n        }));\r\n      } catch (error) {\r\n        console.error('Error fetching prices:', error);\r\n        setPoolCreationState(prev => ({\r\n          ...prev,\r\n          error: 'Failed to fetch token prices'\r\n        }));\r\n      }\r\n    }\r\n\r\n    if (route === 'No liquidity pool exists') {\r\n      fetchPriceRatio();\r\n    }\r\n  }, [fromToken, toToken, route]);\r\n\r\n  // Calculate other token amount based on price ratio\r\n  const calculateOtherAmount = (amount, isToken0) => {\r\n    if (!poolCreationState.priceRatio || !amount) return '';\r\n    const ratio = poolCreationState.priceRatio;\r\n    return isToken0 \r\n      ? (Number(amount) * ratio).toFixed(6)\r\n      : (Number(amount) / ratio).toFixed(6);\r\n  };\r\n\r\n  // Update pool creation UI\r\n  const renderPoolCreation = () => {\r\n    if (route !== 'No liquidity pool exists') return null;\r\n\r\n    return (\r\n      <div className=\"mt-4 space-y-4\">\r\n        {!poolCreationState.showInputs ? (\r\n          <button\r\n            onClick={() => setPoolCreationState(prev => ({ ...prev, showInputs: true }))}\r\n            className=\"w-full px-4 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black rounded-xl font-medium transition-colors\"\r\n          >\r\n            Create Pool & Add Liquidity\r\n          </button>\r\n        ) : (\r\n          <>\r\n            <div className=\"space-y-2\">\r\n              <label className=\"block text-sm text-gray-500\">\r\n                {fromToken?.symbol} Amount\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={poolCreationState.token0Amount}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\r\n                    setPoolCreationState(prev => ({\r\n                      ...prev,\r\n                      token0Amount: value,\r\n                      token1Amount: calculateOtherAmount(value, true)\r\n                    }));\r\n                  }\r\n                }}\r\n                placeholder={`Enter ${fromToken?.symbol} amount`}\r\n                className=\"w-full px-3 py-2 bg-white/10 dark:bg-[#2d2f36] rounded-lg text-white\"\r\n              />\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <label className=\"block text-sm text-gray-500\">\r\n                {toToken?.symbol} Amount\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={poolCreationState.token1Amount}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\r\n                    setPoolCreationState(prev => ({\r\n                      ...prev,\r\n                      token1Amount: value,\r\n                      token0Amount: calculateOtherAmount(value, false)\r\n                    }));\r\n                  }\r\n                }}\r\n                placeholder={`Enter ${toToken?.symbol} amount`}\r\n                className=\"w-full px-3 py-2 bg-white/10 dark:bg-[#2d2f36] rounded-lg text-white\"\r\n              />\r\n            </div>\r\n            {poolCreationState.error && (\r\n              <div className=\"text-red-500 text-sm\">\r\n                {poolCreationState.error}\r\n              </div>\r\n            )}\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                onClick={() => handleCreatePool()}\r\n                disabled={poolCreationState.loading || !poolCreationState.token0Amount || !poolCreationState.token1Amount}\r\n                className=\"flex-1 px-4 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black rounded-xl font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {poolCreationState.loading ? 'Creating Pool...' : 'Confirm'}\r\n              </button>\r\n              <button\r\n                onClick={() => setPoolCreationState({\r\n                  showInputs: false,\r\n                  token0Amount: '',\r\n                  token1Amount: '',\r\n                  loading: false,\r\n                  priceRatio: null,\r\n                  error: null\r\n                })}\r\n                className=\"px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white rounded-xl font-medium transition-colors\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleCreatePool = async () => {\r\n    if (!fromToken || !toToken) {\r\n      toast.error('Please select both tokens');\r\n      return;\r\n    }\r\n\r\n    setPoolCreationState(prev => ({ ...prev, loading: true }));\r\n    try {\r\n      // Parse amounts to BigInt with proper decimals\r\n      const amount0 = ethers.parseUnits(\r\n        poolCreationState.token0Amount,\r\n        fromToken.decimals\r\n      );\r\n      const amount1 = ethers.parseUnits(\r\n        poolCreationState.token1Amount,\r\n        toToken.decimals\r\n      );\r\n\r\n      // Create pool and add initial liquidity\r\n      const result = await uniswap.createPool(\r\n        fromToken.address,\r\n        toToken.address,\r\n        amount0,\r\n        amount1\r\n      );\r\n\r\n      toast.success('Pool created and initial liquidity added successfully!');\r\n      console.log('Pool address:', result.pairAddress);\r\n\r\n      // Save the created pool address to localStorage\r\n      const userPools = JSON.parse(localStorage.getItem('userCreatedPools') || '[]');\r\n      if (!userPools.includes(result.pairAddress)) {\r\n        userPools.push(result.pairAddress);\r\n        localStorage.setItem('userCreatedPools', JSON.stringify(userPools));\r\n      }\r\n\r\n      // Reset the pool creation state\r\n      setPoolCreationState({\r\n        showInputs: false,\r\n        token0Amount: '',\r\n        token1Amount: '',\r\n        loading: false,\r\n        priceRatio: null,\r\n        error: null\r\n      });\r\n\r\n      // Show success message with the pool address\r\n      toast.success(\r\n        'Pool created and liquidity added! You can now start swapping.',\r\n        { duration: 5000 }\r\n      );\r\n      \r\n    } catch (error) {\r\n      console.error('Error creating pool:', error);\r\n      setPoolCreationState(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: error.reason || 'Failed to create pool'\r\n      }));\r\n      \r\n      if (error.message.includes('Pool already exists')) {\r\n        toast.error('Pool already exists. Try adding liquidity instead.');\r\n      } else {\r\n        toast.error(error.reason || 'Failed to create pool');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Add useEffect to handle refresh\r\n  useEffect(() => {\r\n    if (refreshTrigger > 0) {\r\n      // Refresh balances and other data\r\n      updateBalances();\r\n      // You can add other refresh logic here\r\n    }\r\n  }, [refreshTrigger]);\r\n\r\n  // Add balance display component\r\n  const TokenBalance = ({ token }) => {\r\n    const { address } = useAccount();\r\n    const [balance, setBalance] = React.useState(null);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [error, setError] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n      const fetchBalance = async () => {\r\n        if (!address || !token) return;\r\n        \r\n        try {\r\n          setIsLoading(true);\r\n          setError(null);\r\n          const provider = new ethers.BrowserProvider(window.ethereum);\r\n\r\n          let rawBalance;\r\n          let decimals;\r\n\r\n          if (token.symbol === 'ETH') {\r\n            rawBalance = await provider.getBalance(address);\r\n            decimals = 18;\r\n          } else {\r\n            const contract = new ethers.Contract(\r\n              token.address,\r\n              [\r\n                'function balanceOf(address) view returns (uint256)',\r\n                'function decimals() view returns (uint8)'\r\n              ],\r\n              provider\r\n            );\r\n\r\n            [rawBalance, decimals] = await Promise.all([\r\n              contract.balanceOf(address),\r\n              contract.decimals()\r\n            ]);\r\n          }\r\n\r\n          console.log(`Balance for ${token.symbol}:`, {\r\n            raw: rawBalance.toString(),\r\n            decimals,\r\n            formatted: ethers.formatUnits(rawBalance, decimals)\r\n          });\r\n\r\n          setBalance({\r\n            value: rawBalance,\r\n            decimals\r\n          });\r\n        } catch (err) {\r\n          console.error('Error fetching balance:', err);\r\n          setError(err.message);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchBalance();\r\n    }, [token, address]);\r\n\r\n    if (error) {\r\n      return (\r\n        <div className=\"text-sm text-red-500 mt-1\">\r\n          Error: {error}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n          Loading balance...\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const formatBalance = (balance) => {\r\n      if (!balance?.value) return '0';\r\n      \r\n      const formatted = Number(ethers.formatUnits(balance.value, balance.decimals));\r\n      \r\n      return new Intl.NumberFormat('en-US', {\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: token.symbol === 'USDC' ? 2 : 6,\r\n        useGrouping: true\r\n      }).format(formatted);\r\n    };\r\n\r\n    return (\r\n      <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n        Balance: {formatBalance(balance)} {token.symbol}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleSlippageChange = (value) => {\r\n    if (value === 'custom') {\r\n      setShowCustomSlippage(true);\r\n    } else {\r\n      setSlippage(parseFloat(value));\r\n      setShowCustomSlippage(false);\r\n      setCustomSlippage('');\r\n    }\r\n  };\r\n\r\n  const handleCustomSlippageChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '' || (/^\\d*\\.?\\d*$/.test(value) && parseFloat(value) <= 100)) {\r\n      setCustomSlippage(value);\r\n      if (value !== '') {\r\n        setSlippage(parseFloat(value));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"space-y-6 max-w-lg mx-auto\">\r\n        {/* Card Container */}\r\n        <div className=\"bg-white/5 dark:bg-[#1a1b1f] backdrop-blur-xl rounded-2xl p-6 border border-gray-200 dark:border-gray-800\">\r\n          {/* From Token */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n              From\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                value={fromAmount}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  if (value === '' || /^\\d*\\.?\\d*$/.test(value)) { // Allow only numbers and decimals\r\n                    setFromAmount(value);\r\n                  }\r\n                }}\r\n                placeholder=\"0.0\"\r\n                className=\"w-full px-4 py-3 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n              />\r\n              <button\r\n                onClick={() => setShowFromTokenModal(true)}\r\n                className=\"absolute right-2 top-1/2 -translate-y-1/2 px-3 py-1.5 bg-white/10 dark:bg-[#2d2f36] rounded-lg text-sm font-medium text-gray-900 dark:text-white hover:bg-white/20 dark:hover:bg-[#2d2f36]/80 transition-colors border border-gray-200 dark:border-gray-800\"\r\n              >\r\n                {fromToken ? (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <img src={fromToken.logo} alt={fromToken.symbol} className=\"w-5 h-5\" />\r\n                    <span>{fromToken.symbol}</span>\r\n                  </div>\r\n                ) : (\r\n                  'Select Token'\r\n                )}\r\n              </button>\r\n            </div>\r\n            {fromToken && <TokenBalance token={fromToken} />}\r\n          </div>\r\n\r\n          {/* Swap Icon */}\r\n          <div className=\"flex justify-center my-4\">\r\n            <button\r\n              onClick={() => {\r\n                const tempToken = fromToken;\r\n                const tempAmount = fromAmount;\r\n                setFromToken(toToken);\r\n                setFromAmount(toAmount);\r\n                setToToken(tempToken);\r\n                setToAmount(tempAmount);\r\n              }}\r\n              className=\"p-2.5 rounded-xl bg-[#00ffbd]/10 text-[#00ffbd] hover:bg-[#00ffbd]/20 transition-colors border border-[#00ffbd]/20\"\r\n            >\r\n              <FaExchangeAlt size={16} />\r\n            </button>\r\n          </div>\r\n\r\n          {/* To Token */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n              To\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                value={toAmount}\r\n                readOnly\r\n                placeholder=\"0.0\"\r\n                className=\"w-full px-4 py-3 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n              />\r\n              <button\r\n                onClick={() => setShowToTokenModal(true)}\r\n                className=\"absolute right-2 top-1/2 -translate-y-1/2 px-3 py-1.5 bg-white/10 dark:bg-[#2d2f36] rounded-lg text-sm font-medium text-gray-900 dark:text-white hover:bg-white/20 dark:hover:bg-[#2d2f36]/80 transition-colors border border-gray-200 dark:border-gray-800\"\r\n              >\r\n                {toToken ? (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <img src={toToken.logo} alt={toToken.symbol} className=\"w-5 h-5\" />\r\n                    <span>{toToken.symbol}</span>\r\n                  </div>\r\n                ) : (\r\n                  'Select Token'\r\n                )}\r\n              </button>\r\n            </div>\r\n            {toToken && <TokenBalance token={toToken} />}\r\n          </div>\r\n\r\n          {/* Trade Details Section */}\r\n          <div className=\"mt-4 p-3 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800\">\r\n            {/* Compact View (Always Visible) */}\r\n            <div className=\"space-y-2 text-sm mb-2\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"flex items-center gap-1\">\r\n                  <span className=\"text-gray-500\">Fee (0.3%)</span>\r\n                  <span className=\"text-gray-500 cursor-help\" title=\"A portion of each trade (0.3%) goes to liquidity providers as a protocol incentive.\">ⓘ</span>\r\n                </div>\r\n                <span className=\"text-gray-200\">\r\n                  {fromAmount ? `${(Number(fromAmount) * 0.003).toFixed(6)} ${fromToken?.symbol}` : '--'}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"flex items-center gap-1\">\r\n                  <span className=\"text-gray-500\">Network cost</span>\r\n                  <span className=\"text-gray-500 cursor-help\" title=\"Estimated cost of the transaction on Ethereum\">ⓘ</span>\r\n                </div>\r\n                <span className=\"text-gray-200\">{networkCost || '~0.003 ETH'}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Divider */}\r\n            <div className=\"border-t border-gray-200 dark:border-gray-800 my-2\"></div>\r\n\r\n            {/* Show More Button */}\r\n            <button\r\n              onClick={() => setShowMoreDetails(!showMoreDetails)}\r\n              className=\"flex items-center justify-between w-full text-sm text-gray-500 hover:text-gray-400\"\r\n            >\r\n              {showMoreDetails ? 'Hide Details' : 'Show Details'} \r\n              <svg\r\n                className={`w-4 h-4 transition-transform ${showMoreDetails ? 'rotate-180' : ''}`}\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n              </svg>\r\n            </button>\r\n\r\n            {/* Expanded Details */}\r\n            {showMoreDetails && (\r\n              <div className=\"space-y-3 pt-2 border-t border-gray-200 dark:border-gray-800\">\r\n                <div className=\"flex justify-between text-sm\">\r\n                  <span className=\"text-gray-500\">Expected Output</span>\r\n                  <span className=\"text-gray-200\">{toAmount} {toToken?.symbol}</span>\r\n                </div>\r\n\r\n                <div className=\"flex justify-between text-sm\">\r\n                  <span className=\"text-gray-500\">Minimum received after slippage ({slippage}%)</span>\r\n                  <span className=\"text-gray-200\">\r\n                    {toAmount && Number(toAmount * (1 - slippage/100)).toFixed(6)} {toToken?.symbol}\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"flex justify-between text-sm\">\r\n                  <span className=\"text-gray-500\">Route</span>\r\n                  <span className=\"text-gray-200\">{route || '--'}</span>\r\n                </div>\r\n\r\n                {exchangeRate && (\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span className=\"text-gray-500\">Rate</span>\r\n                    <span className=\"text-gray-200\">\r\n                      1 {fromToken?.symbol} = {exchangeRate.toFixed(6)} {toToken?.symbol}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Slippage Settings */}\r\n        <div className=\"bg-white/5 dark:bg-[#1a1b1f] backdrop-blur-xl rounded-2xl p-4 border border-gray-200 dark:border-gray-800\">\r\n          <div className=\"flex flex-col space-y-3\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                Slippage Tolerance\r\n              </span>\r\n              <div className=\"flex space-x-2\">\r\n                {[0.5, 1.0, 2.0].map((value) => (\r\n                  <button\r\n                    key={value}\r\n                    onClick={() => handleSlippageChange(value.toString())}\r\n                    className={`px-3 py-1.5 text-sm rounded-xl transition-all\r\n                      ${slippage === value && !showCustomSlippage\r\n                        ? 'bg-[#00ffbd] text-black font-medium shadow-lg shadow-[#00ffbd]/20'\r\n                        : 'bg-white/5 dark:bg-[#2d2f36] text-gray-900 dark:text-gray-100 hover:bg-[#00ffbd]/10'\r\n                      } border border-gray-200 dark:border-gray-800`}\r\n                  >\r\n                    {value}%\r\n                  </button>\r\n                ))}\r\n                <button\r\n                  onClick={() => handleSlippageChange('custom')}\r\n                  className={`px-3 py-1.5 text-sm rounded-xl transition-all\r\n                    ${showCustomSlippage\r\n                      ? 'bg-[#00ffbd] text-black font-medium shadow-lg shadow-[#00ffbd]/20'\r\n                      : 'bg-white/5 dark:bg-[#2d2f36] text-gray-900 dark:text-gray-100 hover:bg-[#00ffbd]/10'\r\n                    } border border-gray-200 dark:border-gray-800`}\r\n                >\r\n                  Custom\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            {showCustomSlippage && (\r\n              <div className=\"flex items-center space-x-2 bg-white/5 dark:bg-[#2d2f36] rounded-xl p-2 border border-gray-200 dark:border-gray-800\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={customSlippage}\r\n                  onChange={handleCustomSlippageChange}\r\n                  placeholder=\"Enter slippage %\"\r\n                  className=\"w-full px-3 py-2 bg-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none\"\r\n                />\r\n                <span className=\"text-gray-900 dark:text-gray-100 pr-2\">%</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Swap Button */}\r\n        <button\r\n          onClick={handleSwap}\r\n          disabled={loading || !fromToken || !toToken || !fromAmount || !toAmount}\r\n          className={`\r\n            w-full px-4 py-4 rounded-xl font-medium text-black text-lg\r\n            ${loading || !fromToken || !toToken || !fromAmount || !toAmount\r\n              ? 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed'\r\n              : 'bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors'\r\n            }\r\n          `}\r\n        >\r\n          {loading ? 'Swapping...' : 'Swap'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Token Selection Modals */}\r\n      <TokenSelectionModal\r\n        isOpen={showFromTokenModal}\r\n        onClose={() => setShowFromTokenModal(false)}\r\n        onSelect={handleFromTokenSelect}\r\n        selectedTokenAddress={fromToken?.address}\r\n      />\r\n      <TokenSelectionModal\r\n        isOpen={showToTokenModal}\r\n        onClose={() => setShowToTokenModal(false)}\r\n        onSelect={handleToTokenSelect}\r\n        selectedTokenAddress={toToken?.address}\r\n      />\r\n    </>\r\n  );\r\n} ","import { ethers } from 'ethers';\nimport { toast } from 'react-hot-toast';\n\n// Uniswap V2 Contract Addresses\nexport const UNISWAP_ADDRESSES = {\n  // Monad Testnet (10143)\n  10143: {\n    router: '0xfb8e1c3b833f9e67a71c859a132cf783b645e436',\n    factory: '0x733e88f248b742db6c14c0b1713af5ad7fdd59d0',\n    WETH: '0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701', // WMONA address\n    USDT: '0x88b8E2161DEDC77EF4ab7585569D2415a1C1055D',\n  },\n  // Unichain Testnet (1301)\n  1301: {\n    router: '0x920b806E40A00E02E7D2b94fFc89860fDaEd3640',\n    factory: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n    WETH: '0x4200000000000000000000000000000000000006',\n    USDT: '0x70262e266E50603AcFc5D58997eF73e5a8775844',\n  },\n  // Unichain Mainnet (130)\n  130: {\n    router: '0x284F11109359a7e1306C3e447ef14D38400063FF',\n    factory: '0x1F98400000000000000000000000000000000002',\n    WETH: '0x4200000000000000000000000000000000000006',\n    USDT: '0x70262e266E50603AcFc5D58997eF73e5a8775844',\n  }\n};\n\n// ERC20 ABI for token interactions\nconst ERC20_ABI = [\n  'function approve(address spender, uint value) external returns (bool)',\n  'function allowance(address owner, address spender) external view returns (uint)',\n  'function balanceOf(address owner) external view returns (uint)',\n  'function decimals() external view returns (uint8)',\n  'function symbol() external view returns (string)',\n  'function name() external view returns (string)'\n];\n\n// Router ABI from Uniswap V2 specification\nconst ROUTER_ABI = [\n  // Factory and WETH\n  'function factory() external pure returns (address)',\n  'function WETH() external pure returns (address)',\n\n  // Add liquidity\n  'function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity)',\n  'function addLiquidityETH(address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity)',\n\n  // Remove liquidity\n  'function removeLiquidity(address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB)',\n  'function removeLiquidityETH(address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH)',\n  'function removeLiquidityWithPermit(address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountA, uint amountB)',\n  'function removeLiquidityETHWithPermit(address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountToken, uint amountETH)',\n  'function removeLiquidityETHSupportingFeeOnTransferTokens(address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountETH)',\n  'function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountETH)',\n\n  // Swap\n  'function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)',\n  'function swapTokensForExactTokens(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)',\n  'function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts)',\n  'function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)',\n  'function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)',\n  'function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts)',\n\n  // Supporting fee-on-transfer tokens\n  'function swapExactTokensForTokensSupportingFeeOnTransferTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external',\n  'function swapExactETHForTokensSupportingFeeOnTransferTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable',\n  'function swapExactTokensForETHSupportingFeeOnTransferTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external',\n\n  // Price functions\n  'function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB)',\n  'function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut)',\n  'function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn)',\n  'function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts)',\n  'function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts)'\n];\n\n// Add factory ABI after ROUTER_ABI\nconst FACTORY_ABI = [\n  'function getPair(address tokenA, address tokenB) external view returns (address)',\n  'function createPair(address tokenA, address tokenB) external returns (address)',\n  'function allPairs(uint) external view returns (address)',\n  'function allPairsLength() external view returns (uint)',\n  'function feeTo() external view returns (address)',\n  'function feeToSetter() external view returns (address)'\n];\n\n// Add PAIR_ABI constant after FACTORY_ABI\nconst PAIR_ABI = [\n  'function token0() external view returns (address)',\n  'function token1() external view returns (address)',\n  'function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast)'\n];\n\n// Add WETH ABI after other ABIs\nconst WETH_ABI = [\n  'function deposit() external payable',\n  'function withdraw(uint) external',\n  'function balanceOf(address) external view returns (uint)',\n  'function approve(address spender, uint value) external returns (bool)'\n];\n\n// Add Chainlink price feed addresses for Optimism\nexport const CHAINLINK_FEEDS = {\n  'ETH/USD': '0x13e3ee699d1909e989722e753853ae30b17e08c5',\n  'USDT/USD': '0xECef79E109e997bCA29c1c0897ec9d7b03647F5E'\n};\n\n// Add Chainlink aggregator ABI\nconst CHAINLINK_AGGREGATOR_ABI = [\n  'function latestRoundData() external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)',\n  'function decimals() external view returns (uint8)'\n];\n\nexport class UnichainUniswapService {\n  constructor() {\n    this.provider = null;\n    this.signer = null;\n    this.router = null;\n    this.chainId = null;\n    \n    // Initialize cache\n    this.poolCache = new Map();\n    this.poolInfoCache = new Map();\n    this.lastCacheUpdate = 0;\n    this.CACHE_DURATION = 15 * 60 * 1000; // 15 minutes\n    \n    // Load cache from localStorage\n    this.loadCacheFromStorage();\n  }\n\n  // Cache management methods\n  loadCacheFromStorage() {\n    try {\n      const storedCache = localStorage.getItem('unichainPoolCache');\n      if (storedCache) {\n        const { pools, poolInfo, timestamp } = JSON.parse(storedCache);\n        if (Date.now() - timestamp < 60 * 60 * 1000) {\n          this.poolCache = new Map(pools);\n          this.poolInfoCache = new Map(poolInfo);\n          this.lastCacheUpdate = timestamp;\n        }\n      }\n    } catch (error) {\n      // Remove console.warn and handle silently\n    }\n  }\n\n  saveCacheToStorage() {\n    try {\n      const cacheData = {\n        pools: Array.from(this.poolCache.entries()),\n        poolInfo: Array.from(this.poolInfoCache.entries()),\n        timestamp: Date.now()\n      };\n      localStorage.setItem('unichainPoolCache', JSON.stringify(cacheData));\n    } catch (error) {\n      // Remove console.warn and handle silently\n    }\n  }\n\n  clearCache() {\n    this.poolCache.clear();\n    this.poolInfoCache.clear();\n    this.lastCacheUpdate = 0;\n    localStorage.removeItem('unichainPoolCache');\n  }\n\n  isCacheValid() {\n    return Date.now() - this.lastCacheUpdate < this.CACHE_DURATION;\n  }\n\n  async init() {\n    if (!window.ethereum) throw new Error('No Web3 Provider found');\n\n    this.provider = new ethers.BrowserProvider(window.ethereum);\n    this.signer = await this.provider.getSigner();\n    const network = await this.provider.getNetwork();\n    this.chainId = Number(network.chainId);\n\n    // Get the correct addresses for the current network\n    const addresses = UNISWAP_ADDRESSES[this.chainId];\n    if (!addresses) throw new Error('Unsupported network');\n\n    this.router = new ethers.Contract(addresses.router, ROUTER_ABI, this.signer);\n  }\n\n  // Helper function to approve tokens\n  async approveToken(tokenAddress, amount) {\n    try {\n      const token = new ethers.Contract(tokenAddress, ERC20_ABI, this.signer);\n      const account = await this.signer.getAddress();\n      const chainId = await this.signer.provider.getNetwork().then(network => network.chainId);\n      const addresses = UNISWAP_ADDRESSES[chainId];\n      \n      if (!addresses) {\n        throw new Error('Network not supported');\n      }\n\n      const allowance = await token.allowance(account, addresses.router);\n      \n      if (allowance < amount) {\n        const tx = await token.approve(addresses.router, ethers.MaxUint256);\n        await tx.wait();\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Get token information\n  async getTokenInfo(tokenAddress) {\n    try {\n      // Handle ETH specially\n      if (tokenAddress === 'ETH') {\n        return {\n          symbol: 'ETH',\n          name: 'Ethereum',\n          decimals: 18\n        };\n      }\n\n      // Use window.ethereum provider to match user's network\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const token = new ethers.Contract(\n        tokenAddress,\n        [\n          'function symbol() view returns (string)',\n          'function name() view returns (string)',\n          'function decimals() view returns (uint8)'\n        ],\n        provider\n      );\n      \n      const [symbol, name, decimals] = await Promise.all([\n        token.symbol().catch(() => 'Unknown'),\n        token.name().catch(() => 'Unknown Token'),\n        token.decimals().catch(() => 18)\n      ]);\n      \n      return {\n        symbol,\n        name,\n        decimals,\n        address: tokenAddress\n      };\n    } catch (error) {\n      console.error('Error in getTokenInfo:', error);\n      return {\n        symbol: 'Unknown',\n        name: 'Unknown Token',\n        decimals: 18,\n        address: tokenAddress\n      };\n    }\n  }\n\n  // Calculate initial pool price\n  calculateInitialPoolPrice(amount0, amount1, decimals0, decimals1) {\n    try {\n      // Convert BigInt amounts to decimal representation using ethers.formatUnits\n      const amount0Decimal = Number(ethers.formatUnits(amount0, decimals0));\n      const amount1Decimal = Number(ethers.formatUnits(amount1, decimals1));\n\n      // Calculate price ratios\n      const token0Price = amount1Decimal / amount0Decimal;\n      const token1Price = amount0Decimal / amount1Decimal;\n\n      return { \n        token0Price: token0Price.toFixed(6),\n        token1Price: token1Price.toFixed(6)\n      };\n    } catch (error) {\n      console.error('Error calculating initial pool price:', error);\n      return {\n        token0Price: '0',\n        token1Price: '0'\n      };\n    }\n  }\n\n  // Modify createPool function\n  async createPool(token0Address, token1Address, amount0, amount1) {\n    try {\n      if (!this.router) await this.init();\n      \n      const account = await this.signer.getAddress();\n      const chainId = await this.signer.provider.getNetwork().then(network => network.chainId);\n      const addresses = UNISWAP_ADDRESSES[chainId];\n      \n      if (!addresses) {\n        throw new Error('Network not supported');\n      }\n\n      const deadline = Math.floor(Date.now() / 1000) + 60 * 20; // 20 minutes\n\n      const isToken0WETH = token0Address.toLowerCase() === addresses.WETH.toLowerCase();\n      const isToken1WETH = token1Address.toLowerCase() === addresses.WETH.toLowerCase();\n      const isETHPair = isToken0WETH || isToken1WETH;\n\n      const factoryAddress = await this.router.factory();\n      const factory = new ethers.Contract(factoryAddress, FACTORY_ABI, this.signer);\n\n      const existingPair = await factory.getPair(token0Address, token1Address);\n      const isNewPair = existingPair === '0x0000000000000000000000000000000000000000';\n\n      if (isETHPair) {\n        const tokenAddress = isToken0WETH ? token1Address : token0Address;\n        const ethAmount = isToken0WETH ? amount0 : amount1;\n        const tokenAmount = isToken0WETH ? amount1 : amount0;\n\n        if (isNewPair) {\n          const createPairTx = await factory.createPair(addresses.WETH, tokenAddress);\n          await createPairTx.wait();\n        }\n\n        await this.approveToken(tokenAddress, tokenAmount);\n\n        const tokenAmountMin = (tokenAmount * 990n) / 1000n;\n        const ethAmountMin = (ethAmount * 990n) / 1000n;\n\n        const tx = await this.router.addLiquidityETH(\n          tokenAddress,\n          tokenAmount,\n          tokenAmountMin,\n          ethAmountMin,\n          account,\n          deadline,\n          {\n            value: ethAmount,\n            gasLimit: ethers.getBigInt(1000000)\n          }\n        );\n\n        const receipt = await tx.wait();\n\n        return {\n          receipt,\n          priceInfo: {\n            token0Price: (Number(ethAmount) / Number(tokenAmount)).toFixed(6),\n            token1Price: (Number(tokenAmount) / Number(ethAmount)).toFixed(6)\n          }\n        };\n      } else {\n        let finalAmount0Big = BigInt(amount0);\n        let finalAmount1Big = BigInt(amount1);\n\n        if (!isNewPair) {\n          const pairContract = new ethers.Contract(existingPair, PAIR_ABI, this.provider);\n          const [reserve0, reserve1] = await pairContract.getReserves();\n          const token0InPair = await pairContract.token0();\n          \n          if (token0Address.toLowerCase() !== token0InPair.toLowerCase()) {\n            [finalAmount0Big, finalAmount1Big] = [finalAmount1Big, finalAmount0Big];\n            [token0Address, token1Address] = [token1Address, token0Address];\n          }\n\n          if (reserve0 > 0n && reserve1 > 0n) {\n            try {\n              const quote = await this.router.quote(finalAmount0Big, reserve0, reserve1);\n              finalAmount1Big = quote;\n            } catch (error) {\n              throw new Error('Failed to calculate optimal amounts for the pool ratio');\n            }\n          }\n        } else {\n          const createPairTx = await factory.createPair(token0Address, token1Address);\n          await createPairTx.wait();\n        }\n\n        const [token0Contract, token1Contract] = await Promise.all([\n          new ethers.Contract(token0Address, ERC20_ABI, this.provider),\n          new ethers.Contract(token1Address, ERC20_ABI, this.provider)\n        ]);\n\n        const [decimals0, decimals1] = await Promise.all([\n          token0Contract.decimals(),\n          token1Contract.decimals()\n        ]);\n\n        const priceInfo = this.calculateInitialPoolPrice(finalAmount0Big, finalAmount1Big, decimals0, decimals1);\n\n        await Promise.all([\n          this.approveToken(token0Address, finalAmount0Big),\n          this.approveToken(token1Address, finalAmount1Big)\n        ]);\n\n        const amountAMin = (finalAmount0Big * 990n) / 1000n;\n        const amountBMin = (finalAmount1Big * 990n) / 1000n;\n\n        const tx = await this.router.addLiquidity(\n          token0Address,\n          token1Address,\n          finalAmount0Big,\n          finalAmount1Big,\n          amountAMin,\n          amountBMin,\n          account,\n          deadline,\n          {\n            gasLimit: ethers.getBigInt(1000000)\n          }\n        );\n\n        const receipt = await tx.wait();\n\n        return {\n          receipt,\n          priceInfo\n        };\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Add ETH liquidity\n  async addLiquidityETH(tokenAddress, amountToken, amountETH, target) {\n    try {\n      if (!this.router) await this.init();\n\n      const chainId = await this.signer.provider.getNetwork().then(network => network.chainId);\n      const addresses = UNISWAP_ADDRESSES[chainId];\n      \n      if (!addresses) {\n        throw new Error('Network not supported');\n      }\n\n      const deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20); // 20 minutes\n\n      // Approve token first\n      await this.approveToken(tokenAddress, amountToken);\n\n      // Calculate minimum amounts (1% slippage)\n      const amountTokenMin = (amountToken * 990n) / 1000n;\n      const amountETHMin = (amountETH * 990n) / 1000n;\n\n      // Replace WETH with actual token address if it's WETH\n      const actualTokenAddress = tokenAddress.toLowerCase() === addresses.WETH.toLowerCase() \n        ? addresses.WETH \n        : tokenAddress;\n\n      const tx = await this.router.addLiquidityETH(\n        actualTokenAddress,\n        amountToken,\n        amountTokenMin,\n        amountETHMin,\n        target,\n        deadline,\n        {\n          value: amountETH,\n          gasLimit: ethers.getBigInt(1000000)\n        }\n      );\n\n      return tx;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Add regular token-token liquidity\n  async addLiquidity(token0Address, token1Address, amount0, amount1, account) {\n    try {\n      if (!this.router) await this.init();\n\n      const deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20); // 20 minutes\n\n      // Approve both tokens\n      await Promise.all([\n        this.approveToken(token0Address, amount0),\n        this.approveToken(token1Address, amount1)\n      ]);\n\n      // Calculate minimum amounts (allow for some slippage)\n      const amount0Min = (amount0 * 990n) / 1000n; // 1% slippage\n      const amount1Min = (amount1 * 990n) / 1000n; // 1% slippage\n\n      // Get the signer's address if account is not provided\n      const target = account || await this.signer.getAddress();\n\n      const tx = await this.router.addLiquidity(\n        token0Address,\n        token1Address,\n        amount0,\n        amount1,\n        amount0Min,\n        amount1Min,\n        target,\n        deadline,\n        {\n          gasLimit: ethers.getBigInt(1000000)\n        }\n      );\n\n      return tx;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Add checkPoolExists method\n  async checkPoolExists(tokenA, tokenB) {\n    try {\n      if (!this.router) await this.init();\n      \n      const chainId = await this.provider.getNetwork().then(n => Number(n.chainId));\n      \n      // For Monad testnet, use direct RPC calls\n      if (chainId === 10143) {\n        const factoryAddress = UNISWAP_ADDRESSES[10143].factory;\n        \n        // Encode the getPair function call\n        const getPairData = ethers.AbiCoder.defaultAbiCoder().encode(\n          ['address', 'address'],\n          [tokenA, tokenB]\n        ).slice(2);\n        \n        const pairAddress = await window.ethereum.request({\n          method: 'eth_call',\n          params: [{\n            to: factoryAddress,\n            data: '0xe6a43905' + getPairData // getPair function selector\n          }, 'latest']\n        });\n        \n        return pairAddress !== '0x0000000000000000000000000000000000000000000000000000000000000000';\n      }\n      \n      // For other networks, use the original implementation\n      const factoryAddress = await this.router.factory();\n      const factory = new ethers.Contract(\n        factoryAddress,\n        FACTORY_ABI,\n        this.provider\n      );\n\n      const pairAddress = await factory.getPair(tokenA, tokenB);\n      return pairAddress !== '0x0000000000000000000000000000000000000000';\n    } catch (error) {\n      console.error('Error checking pool exists:', error);\n      return false;\n    }\n  }\n\n  // Helper function to round amounts\n  roundAmount(amount, decimals = 18) {\n    try {\n      // Convert to human readable with full decimals\n      const fullAmount = ethers.formatUnits(amount, decimals);\n      // Round to 4 decimal places maximum\n      const roundedAmount = Number(fullAmount).toFixed(4);\n      // Convert back to token units\n      return ethers.parseUnits(roundedAmount, decimals);\n    } catch (error) {\n      console.error('Error rounding amount:', error);\n      return amount;\n    }\n  }\n\n  // Modify swap method\n  async swap(fromToken, toToken, amountIn, amountOutMin, path, deadline) {\n    try {\n      if (!this.router) await this.init();\n      \n      const account = await this.signer.getAddress();\n      const isFromNative = fromToken.symbol === 'ETH' || fromToken.symbol === 'MON';\n      const isToNative = toToken.symbol === 'ETH' || toToken.symbol === 'MON';\n      \n      if (!isFromNative) {\n        await this.approveToken(fromToken.address, amountIn);\n      }\n\n      const minOutWithSlippage = 0n;\n\n      let tx;\n\n      if (isFromNative) {\n        // Use swapExactETHForTokens for native token (MON/ETH) to token swaps\n        tx = await this.router.swapExactETHForTokens(\n          minOutWithSlippage,\n          path,\n          account,\n          deadline,\n          {\n            value: amountIn,\n            gasLimit: ethers.getBigInt(1000000)\n          }\n        );\n      } else if (isToNative) {\n        // Use swapExactTokensForETH for token to native token (MON/ETH) swaps\n        tx = await this.router.swapExactTokensForETH(\n          amountIn,\n          minOutWithSlippage,\n          path,\n          account,\n          deadline,\n          {\n            gasLimit: ethers.getBigInt(1000000)\n          }\n        );\n      } else {\n        // Regular token to token swap\n        tx = await this.router.swapExactTokensForTokens(\n          amountIn,\n          minOutWithSlippage,\n          path,\n          account,\n          deadline,\n          {\n            gasLimit: ethers.getBigInt(1000000)\n          }\n        );\n      }\n\n      return tx;\n    } catch (error) {\n      if (error.data) {\n        throw new Error('Transaction failed: ' + error.data);\n      }\n      throw error;\n    }\n  }\n\n  // Add getAmountOut method\n  async getAmountOut(amountIn, path) {\n    try {\n      if (!this.router) await this.init();\n      \n      if (!amountIn || !path || path.length < 2) {\n        return '0';\n      }\n\n      const amounts = await this.router.getAmountsOut(amountIn, path);\n      return amounts[amounts.length - 1];\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Modify updateRoute method\n  async updateRoute(fromToken, toToken, amount) {\n    try {\n      if (!this.router) await this.init();\n      \n      if (!fromToken || !toToken || !amount) {\n        return { route: null, toAmount: '0' };\n      }\n\n      const chainId = await this.provider.getNetwork().then(network => network.chainId);\n      const addresses = UNISWAP_ADDRESSES[chainId];\n      \n      if (!addresses) {\n        throw new Error('Network not supported');\n      }\n\n      // Handle MON/ETH (native) token by using WETH\n      const fromAddress = fromToken.symbol === 'MON' || fromToken.symbol === 'ETH' ? addresses.WETH : fromToken.address;\n      const toAddress = toToken.symbol === 'MON' || toToken.symbol === 'ETH' ? addresses.WETH : toToken.address;\n\n      // Parse input amount - use 18 decimals for native tokens\n      const amountIn = ethers.parseUnits(\n        amount, \n        fromToken.symbol === 'MON' || fromToken.symbol === 'ETH' ? 18 : fromToken.decimals\n      );\n\n      // Cache key for this swap\n      const cacheKey = `${fromAddress}_${toAddress}_${amount}`;\n      if (this.routeCache && this.routeCache[cacheKey] && Date.now() - this.routeCache[cacheKey].timestamp < 30000) {\n        return this.routeCache[cacheKey].route;\n      }\n\n      // Common intermediary tokens for multi-hop routes\n      const intermediaryTokens = [\n        addresses.WETH,\n        addresses.USDC,\n        addresses.USDT\n      ].filter(addr => addr && addr !== fromAddress && addr !== toAddress);\n\n      // Try all possible routes in parallel\n      const routePromises = [];\n\n      // 1. Direct route\n      if (fromAddress !== toAddress) {\n        routePromises.push(\n          this.tryRoute([fromAddress, toAddress], amountIn)\n            .then(result => ({ ...result, path: [fromAddress, toAddress] }))\n            .catch(() => null)\n        );\n      }\n\n      // 2. Single-hop routes through intermediary tokens\n      for (const intermediary of intermediaryTokens) {\n        routePromises.push(\n          this.tryRoute([fromAddress, intermediary, toAddress], amountIn)\n            .then(result => ({ ...result, path: [fromAddress, intermediary, toAddress] }))\n            .catch(() => null)\n        );\n      }\n\n      // 3. Double-hop routes for complex paths\n      if (chainId !== 10143) { // Skip for Monad testnet to reduce RPC calls\n        for (let i = 0; i < intermediaryTokens.length; i++) {\n          for (let j = i + 1; j < intermediaryTokens.length; j++) {\n            const path = [fromAddress, intermediaryTokens[i], intermediaryTokens[j], toAddress];\n            routePromises.push(\n              this.tryRoute(path, amountIn)\n                .then(result => ({ ...result, path }))\n                .catch(() => null)\n            );\n          }\n        }\n      }\n\n      // Wait for all route checks to complete\n      const routes = (await Promise.all(routePromises)).filter(Boolean);\n\n      // Find the best route (highest output amount)\n      let bestRoute = null;\n      let maxOutput = ethers.parseUnits('0', toToken.decimals);\n\n      for (const route of routes) {\n        if (route.amountOut > maxOutput) {\n          maxOutput = route.amountOut;\n          bestRoute = route;\n        }\n      }\n\n      if (!bestRoute) {\n        return { route: null, toAmount: '0', error: 'No valid route found' };\n      }\n\n      // Format the route description\n      const routeSymbols = bestRoute.path.map(addr => {\n        if (addr === addresses.WETH) {\n          return fromToken.symbol === 'MON' || toToken.symbol === 'MON' ? 'WMONAD' :\n                 fromToken.symbol === 'ETH' || toToken.symbol === 'ETH' ? 'WETH' : 'WETH';\n        }\n        if (addr === fromAddress) return fromToken.symbol;\n        if (addr === toAddress) return toToken.symbol;\n        if (addr === addresses.USDC) return 'USDC';\n        if (addr === addresses.USDT) return 'USDT';\n        return 'Unknown';\n      });\n\n      const result = {\n        route: routeSymbols.join(' → '),\n        toAmount: ethers.formatUnits(bestRoute.amountOut, toToken.decimals),\n        path: bestRoute.path\n      };\n\n      // Cache the result\n      if (!this.routeCache) this.routeCache = {};\n      this.routeCache[cacheKey] = {\n        route: result,\n        timestamp: Date.now()\n      };\n\n      return result;\n    } catch (error) {\n      console.error('Error in updateRoute:', error);\n      throw error;\n    }\n  }\n\n  // Helper method to try a specific route\n  async tryRoute(path, amountIn) {\n    if (path.length < 2) return null;\n\n    // For Monad testnet, use direct RPC calls\n    if (await this.provider.getNetwork().then(n => n.chainId) === 10143) {\n      try {\n        // Encode getAmountsOut function call\n        const getAmountsOutData = ethers.AbiCoder.defaultAbiCoder().encode(\n          ['uint256', 'address[]'],\n          [amountIn, path]\n        ).slice(2);\n        \n        const amountsHex = await window.ethereum.request({\n          method: 'eth_call',\n          params: [{\n            to: UNISWAP_ADDRESSES[10143].router,\n            data: '0xd06ca61f' + getAmountsOutData // getAmountsOut function selector\n          }, 'latest']\n        });\n        \n        const amounts = ethers.AbiCoder.defaultAbiCoder().decode(['uint256[]'], amountsHex)[0];\n        return { amountOut: amounts[amounts.length - 1] };\n      } catch (error) {\n        throw new Error('Failed to get amounts for route');\n      }\n    }\n\n    // For other networks, use the router contract\n    try {\n      const amounts = await this.router.getAmountsOut(amountIn, path);\n      return { amountOut: amounts[amounts.length - 1] };\n    } catch (error) {\n      throw new Error('Failed to get amounts for route');\n    }\n  }\n\n  // Get token balance\n  async getTokenBalance(tokenAddress, userAddress) {\n    try {\n      if (!this.provider) await this.init();\n\n      // Handle ETH balance\n      if (tokenAddress === 'ETH') {\n        const balance = await this.provider.getBalance(userAddress);\n        return ethers.formatEther(balance);\n      }\n\n      // Handle ERC20 token balance\n      const token = new ethers.Contract(\n        tokenAddress,\n        ERC20_ABI,\n        this.provider\n      );\n\n      const [balance, decimals] = await Promise.all([\n        token.balanceOf(userAddress),\n        token.decimals()\n      ]);\n\n      return ethers.formatUnits(balance, decimals);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Add wrapETH method\n  async wrapETH(amount) {\n    try {\n      if (!this.signer) await this.init();\n\n      const chainId = await this.provider.getNetwork().then(network => network.chainId);\n      const addresses = UNISWAP_ADDRESSES[chainId];\n      \n      if (!addresses) {\n        throw new Error('Network not supported');\n      }\n\n      // Create WETH contract instance\n      const weth = new ethers.Contract(\n        addresses.WETH,\n        WETH_ABI,\n        this.signer\n      );\n\n      // Call deposit with the ETH amount\n      const tx = await weth.deposit({\n        value: amount,\n        gasLimit: ethers.getBigInt(100000)\n      });\n\n      return tx;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Add unwrapWETH method\n  async unwrapWETH(amount) {\n    try {\n      if (!this.signer) await this.init();\n\n      const chainId = await this.provider.getNetwork().then(network => network.chainId);\n      const addresses = UNISWAP_ADDRESSES[chainId];\n      \n      if (!addresses) {\n        throw new Error('Network not supported');\n      }\n\n      // Create WETH contract instance\n      const weth = new ethers.Contract(\n        addresses.WETH,\n        WETH_ABI,\n        this.signer\n      );\n\n      // Call withdraw with the WETH amount\n      const tx = await weth.withdraw(amount);\n\n      return tx;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Add getWETHBalance method\n  async getWETHBalance(address) {\n    try {\n      if (!this.provider) await this.init();\n\n      const chainId = await this.provider.getNetwork().then(network => network.chainId);\n      const addresses = UNISWAP_ADDRESSES[chainId];\n      \n      if (!addresses) {\n        throw new Error('Network not supported');\n      }\n\n      const weth = new ethers.Contract(\n        addresses.WETH,\n        WETH_ABI,\n        this.provider\n      );\n\n      const balance = await weth.balanceOf(address);\n      return balance;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Get pools where user has LP tokens\n  async getUserPools(userAddress) {\n    try {\n      if (!this.provider) await this.init();\n\n      // Get factory contract\n      const factory = new ethers.Contract(\n        addresses.factory,\n        FACTORY_ABI,\n        this.provider\n      );\n\n      // Get total number of pairs\n      const pairCount = await factory.allPairsLength();\n\n      // Get all pair addresses\n      const pairAddresses = await Promise.all(\n        Array.from({ length: Number(pairCount) }, (_, i) => factory.allPairs(i))\n      );\n\n      // Check each pair for user's LP tokens\n      const userPools = await Promise.all(\n        pairAddresses.map(async (pairAddress) => {\n          try {\n            const pair = new ethers.Contract(\n              pairAddress,\n              [\n                'function balanceOf(address) view returns (uint256)',\n                'function token0() view returns (address)',\n                'function token1() view returns (address)'\n              ],\n              this.provider\n            );\n\n            // Get user's balance\n            const balance = await pair.balanceOf(userAddress);\n\n            // If user has LP tokens, get token info\n            if (balance > 0) {\n              const [token0, token1] = await Promise.all([\n                pair.token0(),\n                pair.token1()\n              ]);\n\n              return {\n                pairAddress,\n                token0,\n                token1,\n                balance\n              };\n            }\n            return null;\n          } catch (err) {\n            return null;\n          }\n        })\n      );\n\n      // Filter out null values (pairs where user has no balance)\n      const validPools = userPools.filter(pool => pool !== null);\n\n      return validPools.map(pool => pool.pairAddress);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Get pool information\n  async getPoolInfo(token0Address, token1Address) {\n    try {\n      const cacheKey = `${token0Address}-${token1Address}`;\n      \n      // Check cache first\n      if (this.isCacheValid() && this.poolInfoCache.has(cacheKey)) {\n        return this.poolInfoCache.get(cacheKey);\n      }\n\n      if (!this.provider) await this.init();\n\n      // Get factory address from router\n      const factoryAddress = await this.router.factory();\n      const factory = new ethers.Contract(factoryAddress, FACTORY_ABI, this.provider);\n\n      // Get pair address\n      const pairAddress = await factory.getPair(token0Address, token1Address);\n      if (pairAddress === '0x0000000000000000000000000000000000000000') {\n        return null;\n      }\n\n      // Get pair contract\n      const pair = new ethers.Contract(pairAddress, PAIR_ABI, this.provider);\n      const [token0, token1, reserves] = await Promise.all([\n        pair.token0(),\n        pair.token1(),\n        pair.getReserves()\n      ]);\n\n      // Get token metadata\n      const [token0Info, token1Info] = await Promise.all([\n        token0Address === 'ETH' ? { symbol: 'ETH', name: 'Ethereum', decimals: 18 } : this.getTokenInfo(token0),\n        token1Address === 'ETH' ? { symbol: 'ETH', name: 'Ethereum', decimals: 18 } : this.getTokenInfo(token1)\n      ]);\n\n      const poolInfo = {\n        token0: { address: token0Address, ...token0Info },\n        token1: { address: token1Address, ...token1Info },\n        reserves: {\n          reserve0: reserves[0],\n          reserve1: reserves[1],\n          blockTimestampLast: reserves[2]\n        },\n        pairAddress\n      };\n\n      // Update cache\n      this.poolInfoCache.set(cacheKey, poolInfo);\n      this.saveCacheToStorage();\n\n      return poolInfo;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Get pool information by address\n  async getPoolInfoByAddress(pairAddress) {\n    try {\n      if (!this.provider) await this.init();\n\n      // Get pair contract\n      const pair = new ethers.Contract(\n        pairAddress,\n        [\n          'function token0() view returns (address)',\n          'function token1() view returns (address)',\n          'function getReserves() view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast)',\n          'function balanceOf(address) view returns (uint256)',\n          'function decimals() view returns (uint8)'\n        ],\n        this.provider\n      );\n\n      // Get basic pool info\n      const [token0Address, token1Address, reserves] = await Promise.all([\n        pair.token0(),\n        pair.token1(),\n        pair.getReserves()\n      ]);\n\n      // Get token metadata\n      const [token0Info, token1Info] = await Promise.all([\n        this.getTokenInfo(token0Address),\n        this.getTokenInfo(token1Address)\n      ]);\n\n      return {\n        token0: { ...token0Info, address: token0Address },\n        token1: { ...token1Info, address: token1Address },\n        reserves: {\n          reserve0: reserves[0],\n          reserve1: reserves[1],\n          blockTimestampLast: reserves[2]\n        },\n        pairAddress\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Add method to get price from Chainlink\n  async getPriceFromChainlink(tokenSymbol) {\n    try {\n      let feedAddress;\n      if (tokenSymbol === 'ETH' || tokenSymbol === 'WETH') {\n        feedAddress = CHAINLINK_FEEDS['ETH/USD'];\n      } else if (tokenSymbol === 'USDT') {\n        feedAddress = CHAINLINK_FEEDS['USDT/USD'];\n      }\n\n      if (!feedAddress) return null;\n\n      const feed = new ethers.Contract(\n        feedAddress,\n        CHAINLINK_AGGREGATOR_ABI,\n        this.provider\n      );\n\n      const [price, decimals] = await Promise.all([\n        feed.latestRoundData().then(data => data.answer),\n        feed.decimals()\n      ]);\n\n      return Number(ethers.formatUnits(price, decimals));\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Add method to get price from pool ratio\n  async getPriceFromPool(tokenAddress, quoteTokenAddress = addresses.USDT) {\n    try {\n      const factory = new ethers.Contract(\n        addresses.factory,\n        FACTORY_ABI,\n        this.provider\n      );\n\n      const pairAddress = await factory.getPair(tokenAddress, quoteTokenAddress);\n      if (pairAddress === '0x0000000000000000000000000000000000000000') {\n        return null;\n      }\n\n      const pair = new ethers.Contract(\n        pairAddress,\n        PAIR_ABI,\n        this.provider\n      );\n\n      const [reserves, token0] = await Promise.all([\n        pair.getReserves(),\n        pair.token0()\n      ]);\n\n      const [reserve0, reserve1] = reserves;\n      const isToken0 = tokenAddress.toLowerCase() === token0.toLowerCase();\n\n      // Get token decimals\n      const tokenContract = new ethers.Contract(\n        tokenAddress,\n        ERC20_ABI,\n        this.provider\n      );\n      const quoteTokenContract = new ethers.Contract(\n        quoteTokenAddress,\n        ERC20_ABI,\n        this.provider\n      );\n      const [tokenDecimals, quoteTokenDecimals] = await Promise.all([\n        tokenContract.decimals(),\n        quoteTokenContract.decimals()\n      ]);\n\n      // Calculate price based on reserves\n      if (isToken0) {\n        return Number(ethers.formatUnits(reserve1, quoteTokenDecimals)) / \n               Number(ethers.formatUnits(reserve0, tokenDecimals));\n      } else {\n        return Number(ethers.formatUnits(reserve0, quoteTokenDecimals)) / \n               Number(ethers.formatUnits(reserve1, tokenDecimals));\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Update getPools method to load more pools faster\n  async getPools(tokenAddress) {\n    if (!tokenAddress) {\n      throw new Error('tokenAddress is required');\n    }\n\n    try {\n      if (this.isCacheValid() && this.poolCache.has(tokenAddress)) {\n        return this.poolCache.get(tokenAddress);\n      }\n\n      if (!this.provider) await this.init();\n      \n      const chainId = await this.provider.getNetwork().then(network => network.chainId);\n      const addresses = UNISWAP_ADDRESSES[chainId];\n      \n      if (!addresses) {\n        throw new Error('Network not supported');\n      }\n\n      const factory = new ethers.Contract(\n        addresses.factory,\n        FACTORY_ABI,\n        this.provider\n      );\n\n      const pairCount = await factory.allPairsLength();\n      const userAddress = await this.signer.getAddress();\n      \n      const uniquePairs = new Set();\n      const pairs = [];\n      \n      const batchSize = 40;\n      const maxPairsToCheck = Math.min(Number(pairCount), 200);\n      \n      for (let i = 0; i < maxPairsToCheck; i += batchSize) {\n        const currentBatchSize = Math.min(batchSize, maxPairsToCheck - i);\n        const batch = Array.from({ length: currentBatchSize }, (_, j) => i + j);\n        \n        const pairAddresses = await Promise.all(\n          batch.map(index => factory.allPairs(index))\n        );\n        \n        const pairContracts = pairAddresses.map(addr => \n          new ethers.Contract(\n            addr,\n            [...PAIR_ABI, 'function balanceOf(address) view returns (uint256)'],\n            this.provider\n          )\n        );\n        \n        const pairDataPromises = pairContracts.map(async (pair, idx) => {\n          try {\n            const pairAddress = pairAddresses[idx];\n            if (uniquePairs.has(pairAddress)) return null;\n            \n            const [balance, token0Address, token1Address, reserves] = await Promise.all([\n              pair.balanceOf(userAddress),\n              pair.token0(),\n              pair.token1(),\n              pair.getReserves()\n            ]);\n            \n            if (token0Address.toLowerCase() === tokenAddress.toLowerCase() || \n                token1Address.toLowerCase() === tokenAddress.toLowerCase()) {\n              \n              const [token0Info, token1Info] = await Promise.all([\n                this.getTokenInfo(token0Address),\n                this.getTokenInfo(token1Address)\n              ]);\n\n              return {\n                address: pairAddress,\n                token0: { address: token0Address, ...token0Info },\n                token1: { address: token1Address, ...token1Info },\n                reserves,\n                owned: balance > 0\n              };\n            }\n            return null;\n          } catch (error) {\n            return null;\n          }\n        });\n        \n        const batchResults = await Promise.all(pairDataPromises);\n        const validResults = batchResults.filter(result => result !== null);\n        \n        for (const result of validResults) {\n          if (!uniquePairs.has(result.address)) {\n            uniquePairs.add(result.address);\n            pairs.push(result);\n          }\n        }\n        \n        if (pairs.length >= 40) break;\n      }\n\n      pairs.sort((a, b) => {\n        if (a.owned === b.owned) return 0;\n        return a.owned ? -1 : 1;\n      });\n\n      this.poolCache.set(tokenAddress, pairs);\n      this.lastCacheUpdate = Date.now();\n      this.saveCacheToStorage();\n\n      return pairs;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Update getTokenBalance method to be more robust\n  async getTokenBalance(tokenAddress, userAddress) {\n    try {\n      if (!this.provider) await this.init();\n\n      // Handle ETH balance\n      if (tokenAddress === 'ETH') {\n        const balance = await this.provider.getBalance(userAddress);\n        return ethers.formatEther(balance);\n      }\n\n      // Handle ERC20 token balance\n      const token = new ethers.Contract(\n        tokenAddress,\n        ERC20_ABI,\n        this.provider\n      );\n\n      const [balance, decimals] = await Promise.all([\n        token.balanceOf(userAddress),\n        token.decimals()\n      ]);\n\n      return ethers.formatUnits(balance, decimals);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Add method to get pool information with caching\n  async getPoolInfo(token0Address, token1Address) {\n    try {\n      const cacheKey = `${token0Address}-${token1Address}`;\n      \n      // Check cache first\n      if (this.isCacheValid() && this.poolInfoCache.has(cacheKey)) {\n        return this.poolInfoCache.get(cacheKey);\n      }\n\n      if (!this.provider) await this.init();\n\n      // Get factory address from router\n      const factoryAddress = await this.router.factory();\n      const factory = new ethers.Contract(factoryAddress, FACTORY_ABI, this.provider);\n\n      // Get pair address\n      const pairAddress = await factory.getPair(token0Address, token1Address);\n      if (pairAddress === '0x0000000000000000000000000000000000000000') {\n        return null;\n      }\n\n      // Get pair contract\n      const pair = new ethers.Contract(pairAddress, PAIR_ABI, this.provider);\n      const [token0, token1, reserves] = await Promise.all([\n        pair.token0(),\n        pair.token1(),\n        pair.getReserves()\n      ]);\n\n      // Get token metadata\n      const [token0Info, token1Info] = await Promise.all([\n        token0Address === 'ETH' ? { symbol: 'ETH', name: 'Ethereum', decimals: 18 } : this.getTokenInfo(token0),\n        token1Address === 'ETH' ? { symbol: 'ETH', name: 'Ethereum', decimals: 18 } : this.getTokenInfo(token1)\n      ]);\n\n      const poolInfo = {\n        token0: { address: token0Address, ...token0Info },\n        token1: { address: token1Address, ...token1Info },\n        reserves: {\n          reserve0: reserves[0],\n          reserve1: reserves[1],\n          blockTimestampLast: reserves[2]\n        },\n        pairAddress\n      };\n\n      // Update cache\n      this.poolInfoCache.set(cacheKey, poolInfo);\n      this.saveCacheToStorage();\n\n      return poolInfo;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Add removeLiquidity function\n  async removeLiquidity(tokenA, tokenB, liquidity, amountAMin, amountBMin, to) {\n    try {\n      if (!this.router) await this.init();\n\n      const deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20); // 20 minutes\n\n      // Check if one of the tokens is WETH\n      const isTokenAWETH = tokenA.toLowerCase() === addresses.WETH.toLowerCase();\n      const isTokenBWETH = tokenB.toLowerCase() === addresses.WETH.toLowerCase();\n\n      let tx;\n      if (isTokenAWETH || isTokenBWETH) {\n        // Use removeLiquidityETH for ETH pairs\n        const token = isTokenAWETH ? tokenB : tokenA;\n        const amountTokenMin = isTokenAWETH ? amountBMin : amountAMin;\n        const amountETHMin = isTokenAWETH ? amountAMin : amountBMin;\n\n        tx = await this.router.removeLiquidityETH(\n          token,\n          liquidity,\n          amountTokenMin,\n          amountETHMin,\n          to,\n          deadline,\n          {\n            gasLimit: ethers.getBigInt(1000000)\n          }\n        );\n      } else {\n        // Use regular removeLiquidity for token-token pairs\n        tx = await this.router.removeLiquidity(\n          tokenA,\n          tokenB,\n          liquidity,\n          amountAMin,\n          amountBMin,\n          to,\n          deadline,\n          {\n            gasLimit: ethers.getBigInt(1000000)\n          }\n        );\n      }\n\n      return tx;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async swapExactTokensForETHSupportingFeeOnTransferTokens(amountIn, amountOutMin, path, to, deadline) {\n    if (!this.router) await this.init();\n    return this.router.swapExactTokensForETHSupportingFeeOnTransferTokens(\n      amountIn,\n      amountOutMin,\n      path,\n      to,\n      deadline\n    );\n  }\n\n  async swapExactETHForTokensSupportingFeeOnTransferTokens(amountOutMin, path, to, deadline, options) {\n    if (!this.router) await this.init();\n    return this.router.swapExactETHForTokensSupportingFeeOnTransferTokens(\n      amountOutMin,\n      path,\n      to,\n      deadline,\n      options\n    );\n  }\n\n  async swapExactTokensForETH(amountIn, amountOutMin, path, to, deadline) {\n    if (!this.router) await this.init();\n    return this.router.swapExactTokensForETH(\n      amountIn,\n      amountOutMin,\n      path,\n      to,\n      deadline\n    );\n  }\n\n  async swapExactETHForTokens(amountOutMin, path, to, deadline, options) {\n    if (!this.router) await this.init();\n    return this.router.swapExactETHForTokens(\n      amountOutMin,\n      path,\n      to,\n      deadline,\n      options\n    );\n  }\n\n  async swapExactTokensForTokensSupportingFeeOnTransferTokens(amountIn, amountOutMin, path, to, deadline) {\n    if (!this.router) await this.init();\n    return this.router.swapExactTokensForTokensSupportingFeeOnTransferTokens(\n      amountIn,\n      amountOutMin,\n      path,\n      to,\n      deadline,\n      {\n        gasLimit: ethers.getBigInt(1000000)\n      }\n    );\n  }\n} ","import { useMemo } from 'react';\nimport { usePublicClient, useWalletClient } from 'wagmi';\nimport { UnichainUniswapService } from '../services/unichain/uniswap';\n\nexport function useUnichain() {\n  const publicClient = usePublicClient();\n  const { data: walletClient } = useWalletClient();\n\n  const unichain = useMemo(() => {\n    if (!publicClient || !walletClient) return null;\n    return new UnichainUniswapService(publicClient, walletClient);\n  }, [publicClient, walletClient]);\n\n  return unichain;\n} ","import { getTokenDeploymentByAddress } from '../services/firebase';\nimport { UNISWAP_ADDRESSES } from '../services/uniswap';\nimport { ipfsToHttp } from './ipfs';\n\n// Common tokens with metadata\nexport const COMMON_TOKENS = [\n  {\n    address: 'ETH',\n    symbol: 'ETH',\n    name: 'Ethereum',\n    decimals: 18,\n    logo: '/logos/eth.png'\n  },\n  {\n    address: UNISWAP_ADDRESSES.WETH,\n    symbol: 'WETH',\n    name: 'Wrapped Ethereum',\n    decimals: 18,\n    logo: '/logos/eth.png'\n  },\n  {\n    address: UNISWAP_ADDRESSES.USDC,\n    symbol: 'USDC',\n    name: 'USD Coin',\n    decimals: 6,\n    logo: '/logos/usdc.png'\n  },\n  {\n    address: UNISWAP_ADDRESSES.USDT,\n    symbol: 'USDT',\n    name: 'Tether USD',\n    decimals: 6,\n    logo: '/logos/usdt.png'\n  }\n];\n\n// Add Monad specific tokens\nexport const MONAD_TOKENS = [\n  {\n    symbol: 'MON',\n    name: 'Monad',\n    decimals: 18,\n    logo: '/monad.png',\n    isNative: true\n  },\n  {\n    address: '0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701',\n    symbol: 'WMONAD',\n    name: 'Wrapped Monad',\n    decimals: 18,\n    logo: '/monad.png'\n  },\n  {\n    address: '0xc60A9A0E7F3cBea1852B945EdB35Be52c2c8954e',\n    symbol: 'PYRO',\n    name: 'PYRO',\n    decimals: 18,\n    logo: '/pyro.png'\n  },\n  {\n    address: '0xB5a30b0FDc5EA94A52fDc42e3E9760Cb8449Fb37',\n    symbol: 'WETH',\n    name: 'Wrapped Ether',\n    decimals: 18,\n    logo: '/eth.png'\n  }\n];\n\n// Helper function to get chain-specific token addresses\nexport const getChainTokens = (chainId) => {\n  switch (chainId) {\n    case 10143: // Monad Testnet\n      return MONAD_TOKENS; // Return the full MONAD_TOKENS array directly\n    case 1301: // Unichain\n      return [\n        {\n          address: 'ETH',\n          symbol: 'ETH',\n          name: 'Ethereum',\n          decimals: 18,\n          logo: '/logos/eth.png'\n        },\n        {\n          address: '0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14',\n          symbol: 'WETH',\n          name: 'Wrapped Ethereum',\n          decimals: 18,\n          logo: '/logos/eth.png'\n        },\n        {\n          address: '0x31d0220469e10c4E71834a79b1f276d740d3768F',\n          symbol: 'USDC',\n          name: 'USD Coin',\n          decimals: 6,\n          logo: '/logos/usdc.png'\n        },\n        {\n          address: '0x70262e266E50603AcFc5D58997eF73e5a8775844',\n          symbol: 'USDT',\n          name: 'Tether USD',\n          decimals: 6,\n          logo: '/logos/usdt.png'\n        }\n      ];\n    default:\n      return COMMON_TOKENS.filter(token => !token.chainId || token.chainId === chainId);\n  }\n};\n\nexport const getTokenMetadata = async (token, chainId) => {\n  // Return default metadata if token is null/undefined\n  if (!token) {\n    return {\n      address: '',\n      symbol: 'Unknown',\n      name: 'Unknown Token',\n      decimals: 18,\n      logo: '/token-default.png',\n      verified: false\n    };\n  }\n\n  // Handle case where token is just an address string\n  const tokenAddress = typeof token === 'string' ? token : token.address;\n  if (!tokenAddress) {\n    return {\n      address: '',\n      symbol: 'Unknown',\n      name: 'Unknown Token',\n      decimals: 18,\n      logo: '/token-default.png',\n      verified: false\n    };\n  }\n\n  // 1. Check if it's a common token\n  const chainTokens = getChainTokens(chainId);\n  const commonToken = chainTokens.find(t => {\n    if (!t.address || !tokenAddress) return false;\n    return t.address.toLowerCase() === tokenAddress.toLowerCase();\n  });\n\n  if (commonToken) {\n    return {\n      ...token,\n      ...commonToken,\n      verified: true\n    };\n  }\n\n  // 2. Check Firebase for custom tokens\n  try {\n    const tokenDeployment = await getTokenDeploymentByAddress(tokenAddress);\n    if (tokenDeployment) {\n      return {\n        ...token,\n        name: tokenDeployment.name,\n        symbol: tokenDeployment.symbol || 'ERC20 Token',\n        decimals: tokenDeployment.decimals || 18,\n        logo: tokenDeployment.logo,\n        logoIpfs: tokenDeployment.logoIpfs,\n        artworkType: tokenDeployment.artworkType,\n        verified: true\n      };\n    }\n  } catch (error) {\n    console.error('Error fetching token from Firebase:', error);\n  }\n\n  // 3. Return token with default values if no metadata found\n  return {\n    ...token,\n    name: token.name || 'ERC20 Token',\n    symbol: token.symbol || 'ERC20',\n    decimals: token.decimals || 18,\n    logo: token.logo || '/token-default.png',\n    verified: false\n  };\n};\n\nexport const getTokenLogo = (token, chainId) => {\n  if (!token) return generateTokenInitialsLogo('??');\n\n  // Check if it's a common token by address\n  const chainTokens = getChainTokens(chainId);\n  const commonToken = chainTokens.find(t => {\n    if (!t.address || !token.address) return false;\n    return t.address.toLowerCase() === token.address.toLowerCase();\n  });\n\n  if (commonToken) {\n    return commonToken.logo;\n  }\n\n  // Check for IPFS or direct logo from token data\n  if (token.logo || token.logoIpfs) {\n    const logoUrl = token.logo || ipfsToHttp(token.logoIpfs);\n    if (!logoUrl.includes('token-default.png')) {\n      return logoUrl;\n    }\n  }\n\n  // Generate token initials logo\n  return generateTokenInitialsLogo(token.symbol || '??');\n};\n\n// Helper function to generate a data URL for token initials\nconst generateTokenInitialsLogo = (symbol) => {\n  const canvas = document.createElement('canvas');\n  canvas.width = 40;\n  canvas.height = 40;\n  const ctx = canvas.getContext('2d');\n\n  // Draw background\n  ctx.fillStyle = '#1a1b1f';\n  ctx.beginPath();\n  ctx.arc(20, 20, 20, 0, Math.PI * 2);\n  ctx.fill();\n\n  // Draw text\n  ctx.fillStyle = '#00ffbd';\n  ctx.font = 'bold 16px Arial';\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.fillText(symbol.slice(0, 2).toUpperCase(), 20, 20);\n\n  return canvas.toDataURL('image/png');\n}; ","import React, { useState, useEffect, useMemo } from 'react';\nimport { Dialog } from '@headlessui/react';\nimport { useBalance, useAccount } from 'wagmi';\nimport { ethers } from 'ethers';\nimport { UNISWAP_ADDRESSES } from '../../../../services/unichain/uniswap.js';\nimport { useUnichain } from '../../../../hooks/useUnichain';\nimport { FaSearch, FaCoins } from 'react-icons/fa';\nimport { getTokenDeploymentByAddress, getAllTokenDeployments } from '../../../../services/firebase';\nimport { ipfsToHttp } from '../../../../utils/ipfs';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Contract } from 'ethers';\nimport { getChainTokens } from '../../../../utils/tokens';\n\n// Add RPC URL constant at the top\nconst UNICHAIN_RPC_URLS = {\n  1301: 'https://sepolia.unichain.org',\n  130: 'https://mainnet.unichain.org',\n  10143: 'https://monad-testnet.drpc.org'\n};\n\n// Add chain ID constant at the top\nconst UNICHAIN_CHAIN_IDS = {\n  TESTNET: 1301,\n  MAINNET: 130,\n  MONAD_TESTNET: 10143\n};\n\n// Common tokens with metadata\nconst COMMON_TOKENS = {\n  // Monad Testnet tokens (10143)\n  10143: [\n    {\n      symbol: 'MON',\n      name: 'Monad',\n      decimals: 18,\n      logo: '/monad.png',\n      isNative: true\n    },\n    {\n      address: '0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701',\n      symbol: 'WMONAD',\n      name: 'Wrapped Monad',\n      decimals: 18,\n      logo: '/monad.png'\n    },\n    {\n      address: '0xB5a30b0FDc5EA94A52fDc42e3E9760Cb8449Fb37',\n      symbol: 'WETH',\n      name: 'Wrapped Ether',\n      decimals: 18,\n      logo: '/eth.png'\n    }\n  ],\n  // Testnet tokens (1301)\n  1301: [\n    {\n      address: 'ETH',\n      symbol: 'ETH',\n      name: 'Ethereum',\n      decimals: 18,\n      logo: '/eth.png'\n    },\n    {\n      address: UNISWAP_ADDRESSES[1301].WETH,\n      symbol: 'WETH',\n      name: 'Wrapped Ethereum',\n      decimals: 18,\n      logo: '/eth.png'\n    },\n    {\n      address: '0x31d0220469e10c4E71834a79b1f276d740d3768F',\n      symbol: 'USDC',\n      name: 'USD Coin',\n      decimals: 6,\n      logo: '/usdc.png'\n    },\n    {\n      address: UNISWAP_ADDRESSES[1301].USDT,\n      symbol: 'USDT',\n      name: 'Test USDT',\n      decimals: 6,\n      logo: '/usdt.png'\n    }\n  ],\n  // Mainnet tokens (130)\n  130: [\n    {\n      address: 'ETH',\n      symbol: 'ETH',\n      name: 'Ethereum',\n      decimals: 18,\n      logo: '/eth.png'\n    },\n    {\n      address: UNISWAP_ADDRESSES[130].WETH,\n      symbol: 'WETH',\n      name: 'Wrapped Ethereum',\n      decimals: 18,\n      logo: '/eth.png'\n    },\n    {\n      address: UNISWAP_ADDRESSES[130].USDT,\n      symbol: 'USDT',\n      name: 'USDT',\n      decimals: 6,\n      logo: '/usdt.png'\n    }\n  ]\n};\n\n// Add CSS for custom scrollbar\nconst scrollbarStyles = `\n  .token-list-scrollbar::-webkit-scrollbar {\n    width: 6px;\n  }\n  .token-list-scrollbar::-webkit-scrollbar-track {\n    background: #2d2f36;\n    border-radius: 3px;\n  }\n  .token-list-scrollbar::-webkit-scrollbar-thumb {\n    background: #00ffbd;\n    border-radius: 3px;\n  }\n  .token-list-scrollbar {\n    scrollbar-width: thin;\n    scrollbar-color: #00ffbd #2d2f36;\n  }\n`;\n\nconst formatBalance = (balance, decimals = 18) => {\n  if (!balance) return '0';\n  return Number(ethers.formatUnits(balance, decimals)).toString();\n};\n\nconst scanForTokens = async (provider, userAddress, chainId) => {\n  try {\n    // Handle Monad testnet differently\n    if (chainId === UNICHAIN_CHAIN_IDS.MONAD_TESTNET) {\n      const commonTokens = getChainTokens(chainId);\n      const tokens = [...commonTokens];\n\n      // Get token balances\n      for (const token of tokens) {\n        try {\n          if (token.isNative) {\n            // For native MON token\n            const balance = await window.ethereum.request({\n              method: 'eth_getBalance',\n              params: [userAddress, 'latest']\n            });\n            const balanceBigInt = BigInt(balance);\n            token.balance = balanceBigInt.toString();\n            token.formatted = ethers.formatEther(balanceBigInt);\n          } else {\n            // For other tokens\n            const tokenContract = new ethers.Contract(\n              token.address,\n              [\n                'function balanceOf(address) view returns (uint256)',\n                'function decimals() view returns (uint8)'\n              ],\n              provider\n            );\n            const balance = await tokenContract.balanceOf(userAddress);\n            token.balance = balance.toString();\n            token.formatted = ethers.formatUnits(balance, token.decimals);\n          }\n        } catch (error) {\n          console.warn(`Error fetching balance for token ${token.symbol}:`, error);\n          token.balance = '0';\n          token.formatted = '0';\n        }\n      }\n\n      return tokens;\n    }\n\n    // Original Blockscout logic for Unichain networks\n    const blockscoutUrl = chainId === UNICHAIN_CHAIN_IDS.TESTNET \n      ? 'https://unichain-sepolia.blockscout.com'\n      : 'https://unichain.blockscout.com';\n\n    const response = await fetch(\n      `${blockscoutUrl}/api/v2/addresses/${userAddress}/token-balances`\n    );\n\n    if (!response.ok) {\n      console.warn(`Blockscout API error: ${response.status}`);\n      return getChainTokens(chainId);\n    }\n\n    const data = await response.json();\n    \n    // Filter and format tokens\n    const tokens = data\n      .filter(item => {\n        const isERC20 = item.token?.type === 'ERC-20' && item.token?.address;\n        const isValidAddress = ethers.isAddress(item.token?.address || '');\n        const isNotLP = !item.token?.symbol?.includes('LP') && !item.token?.symbol?.includes('UNI-V2');\n        return isERC20 && isValidAddress && isNotLP;\n      })\n      .map(item => ({\n        address: item.token.address,\n        symbol: item.token.symbol || 'Unknown',\n        name: item.token.name || 'Unknown Token',\n        decimals: parseInt(item.token.decimals || '18'),\n        balance: item.value,\n        verified: true\n      }));\n\n    // Add common tokens if they're not already included\n    const commonTokens = getChainTokens(chainId);\n    const allTokens = [...tokens];\n    \n    for (const commonToken of commonTokens) {\n      if (commonToken.address === 'ETH' || (commonToken.address && !allTokens.some(t => t.address?.toLowerCase() === commonToken.address?.toLowerCase()))) {\n        allTokens.push(commonToken);\n      }\n    }\n\n    return allTokens;\n  } catch (error) {\n    console.error('Token scanning error:', error);\n    // Return common tokens as fallback\n    return getChainTokens(chainId);\n  }\n};\n\nconst getWalletTokens = async (provider, userAddress, chainId) => {\n  try {\n    const ethersProvider = new ethers.BrowserProvider(provider);\n    \n    // Get tokens from wallet and from scanning\n    const [walletTokens, scannedTokens] = await Promise.all([\n      provider.request({\n        method: 'wallet_getPermissions'\n      }).then(permissions => {\n        const tokenPermission = permissions.find(p => p.parentCapability === 'eth_accounts');\n        return tokenPermission?.caveats?.[0]?.value || [];\n      }).catch(() => []),\n      scanForTokens(ethersProvider, userAddress, chainId)\n    ]);\n\n    // Combine and format tokens\n    const formattedWalletTokens = (walletTokens || [])\n      .filter(token => token && typeof token === 'object' && token.address)\n      .map(token => ({\n        address: token.address,\n        symbol: token.symbol || 'Unknown',\n        name: token.name || 'Unknown Token',\n        decimals: token.decimals || 18,\n        logo: token.logo || '/token-default.png',\n        verified: true\n      }));\n\n    // Combine tokens and remove duplicates\n    const allTokens = [...formattedWalletTokens, ...scannedTokens].filter(token => token && token.address);\n    const uniqueTokens = Array.from(\n      new Map(allTokens.map(token => [token.address.toLowerCase(), token]))\n    ).values();\n\n    return Array.from(uniqueTokens);\n  } catch (error) {\n    console.error('Error getting wallet tokens:', error);\n    return [];\n  }\n};\n\nconst getTokenBalance = async (tokenAddress, userAddress) => {\n  try {\n    if (!provider) await init();\n\n    // Handle native token balance (ETH or MN)\n    if (tokenAddress === 'ETH' || tokenAddress === 'MN') {\n      const balance = await provider.getBalance(userAddress);\n      return ethers.formatEther(balance);\n    }\n\n    // Handle ERC20 token balance\n    const token = new ethers.Contract(\n      tokenAddress,\n      ERC20_ABI,\n      provider\n    );\n\n    const [balance, decimals] = await Promise.all([\n      token.balanceOf(userAddress),\n      token.decimals()\n    ]);\n\n    return ethers.formatUnits(balance, decimals);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Add Multicall ABI\nconst MULTICALL_ABI = [\n  'function aggregate(tuple(address target, bytes callData)[] calls) view returns (uint256 blockNumber, bytes[] returnData)'\n];\n\n// Add ERC20 interface\nconst ERC20_INTERFACE = [\n  'function balanceOf(address) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n  'function symbol() view returns (string)',\n  'function name() view returns (string)'\n];\n\n// Add Multicall addresses\nconst MULTICALL_ADDRESSES = {\n  10143: '0x6a49F8E8d4F21F4A6Fb9A1d3D67E793f5676eEf0', // Monad testnet\n  1301: '0x6a49F8E8d4F21F4A6Fb9A1d3D67E793f5676eEf0',  // Unichain testnet\n  130: '0x6a49F8E8d4F21F4A6Fb9A1d3D67E793f5676eEf0'    // Unichain mainnet\n};\n\n// Add balance cache\nconst balanceCache = new Map();\nconst CACHE_DURATION = 30000; // 30 seconds\n\n// Update Blockscout API endpoints\nconst BLOCKSCOUT_URLS = {\n  1301: 'https://unichain-sepolia.blockscout.com/api/v2/addresses',\n  130: 'https://unichain.blockscout.com/api/v2/addresses'\n};\n\nexport default function TokenSelectionModal({ isOpen, onClose, onSelect, selectedTokenAddress }) {\n  const { address: userAddress } = useAccount();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [customToken, setCustomToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const [tokenBalances, setTokenBalances] = useState({});\n  const [deployedTokens, setDeployedTokens] = useState([]);\n  const [tokensWithBalance, setTokensWithBalance] = useState([]);\n  const [currentChainId, setCurrentChainId] = useState(null);\n\n  const fetchTokensAndBalances = async () => {\n    setIsLoading(true);\n    setError('');\n    \n    try {\n      // Check if ethereum provider exists\n      if (!window.ethereum) {\n        console.warn('No ethereum provider found');\n        setError('Please install a Web3 wallet like MetaMask');\n        setIsLoading(false);\n        return;\n      }\n\n      // Wait for provider to be ready\n      let retries = 0;\n      while (!window.ethereum.request && retries < 10) {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        retries++;\n      }\n\n      if (!window.ethereum.request) {\n        throw new Error('Ethereum provider not initialized');\n      }\n\n      // Get chainId directly from ethereum provider\n      const chainIdHex = await window.ethereum.request({ method: 'eth_chainId' }).catch(err => {\n        console.error('Error getting chainId:', err);\n        throw new Error('Could not get network information');\n      });\n      \n      const chainId = parseInt(chainIdHex, 16);\n      console.log('Current chain ID:', chainId);\n      setCurrentChainId(chainId);\n\n      // Check cache first\n      const cacheKey = `${userAddress}-${chainId}`;\n      const cachedData = balanceCache.get(cacheKey);\n      if (cachedData && Date.now() - cachedData.timestamp < CACHE_DURATION) {\n        console.log('Using cached balances:', cachedData);\n        setTokenBalances(cachedData.balances);\n        setTokensWithBalance(cachedData.tokensWithBalance);\n        setIsLoading(false);\n        return;\n      }\n\n      // Get both common tokens and Blockscout tokens\n      let allTokens = getChainTokens(chainId);\n      const newBalances = {};\n\n      // Fetch additional tokens from Blockscout for Unichain networks\n      if (chainId === 1301 || chainId === 130) {\n        try {\n          const blockscoutUrl = BLOCKSCOUT_URLS[chainId];\n          console.log('Fetching tokens from Blockscout:', `${blockscoutUrl}/${userAddress}/token-balances`);\n          \n          const response = await fetch(\n            `${blockscoutUrl}/${userAddress}/token-balances`,\n            {\n              headers: {\n                'Accept': 'application/json'\n              }\n            }\n          );\n\n          console.log('Blockscout response status:', response.status);\n          if (response.ok) {\n            const data = await response.json();\n            console.log('Blockscout tokens data:', data);\n\n            const blockscoutTokens = data\n              .filter(item => {\n                const isValidToken = item.token?.type === 'ERC-20' && \n                                   ethers.isAddress(item.token?.address) && \n                                   !item.token?.symbol?.includes('LP') && \n                                   !item.token?.symbol?.includes('UNI-V2');\n                \n                // Check for TEMP in various forms\n                const hasTemp = (str) => {\n                  if (!str) return false;\n                  const lowerStr = str.toLowerCase();\n                  return lowerStr.includes('temp') || \n                         lowerStr.includes('tmp') ||\n                         lowerStr.includes('temporary');\n                };\n                \n                const isNotTempToken = !hasTemp(item.token?.symbol) && !hasTemp(item.token?.name);\n                \n                // Don't add tokens that are already in common tokens\n                const isDuplicate = allTokens.some(t => \n                  t.address?.toLowerCase() === item.token?.address?.toLowerCase()\n                );\n                \n                return isValidToken && isNotTempToken && !isDuplicate;\n              })\n              .map(item => ({\n                address: item.token.address,\n                symbol: item.token.symbol || 'Unknown',\n                name: item.token.name || 'Unknown Token',\n                decimals: parseInt(item.token.decimals || '18'),\n                logo: item.token.icon_url || '/token-default.png',\n                balance: item.value || '0'\n              }));\n            \n            console.log('Processed Blockscout tokens:', blockscoutTokens);\n            allTokens = [...allTokens, ...blockscoutTokens];\n          }\n        } catch (err) {\n          console.warn('Error fetching Blockscout tokens:', err);\n        }\n      }\n\n      // Get native token balance (MON for Monad testnet, ETH for Unichain)\n      try {\n        console.log('Fetching native token balance...');\n        const nativeBalance = await window.ethereum.request({\n          method: 'eth_getBalance',\n          params: [userAddress, 'latest']\n        });\n        console.log('Raw native balance:', nativeBalance);\n        const balanceBigInt = BigInt(nativeBalance);\n        const nativeSymbol = chainId === 10143 ? 'MON' : 'ETH';\n        const formattedBalance = ethers.formatEther(balanceBigInt);\n        console.log('Formatted native balance:', { symbol: nativeSymbol, balance: formattedBalance });\n        \n        newBalances[nativeSymbol] = {\n          raw: balanceBigInt.toString(),\n          formatted: formattedBalance\n        };\n      } catch (err) {\n        console.error('Error fetching native balance:', err);\n        const nativeSymbol = chainId === 10143 ? 'MON' : 'ETH';\n        newBalances[nativeSymbol] = { raw: '0', formatted: '0' };\n      }\n\n      // Get ERC20 token balances\n      console.log('Starting ERC20 token balance fetching for all tokens:', allTokens);\n      const tokenPromises = allTokens\n        .filter(token => !token.isNative && token.address && token.address !== 'ETH')\n        .map(async (token) => {\n          try {\n            console.log('Fetching balance for token:', token);\n            \n            // Use direct RPC calls for all networks to avoid ENS issues\n            const data = ethers.AbiCoder.defaultAbiCoder().encode(\n              ['address'],\n              [userAddress]\n            ).slice(2);\n            \n            const balanceOfSelector = '0x70a08231'; // balanceOf(address)\n            const callData = balanceOfSelector + data;\n            \n            console.log('Making RPC call with data:', {\n              to: token.address,\n              data: callData\n            });\n            \n            const result = await window.ethereum.request({\n              method: 'eth_call',\n              params: [{\n                to: token.address,\n                data: callData\n              }, 'latest']\n            });\n            \n            console.log('Raw balance result:', result);\n            const balance = BigInt(result || '0');\n            const formatted = ethers.formatUnits(balance, token.decimals || 18);\n\n            console.log('Token balance fetched:', {\n              token: token.symbol,\n              balance: balance.toString(),\n              formatted\n            });\n\n            return {\n              token,\n              balance: balance.toString(),\n              formatted\n            };\n          } catch (err) {\n            console.error(`Error fetching balance for token ${token.symbol}:`, err);\n            return {\n              token,\n              balance: '0',\n              formatted: '0'\n            };\n          }\n        });\n\n      console.log('Waiting for all token balances...');\n      const tokenResults = await Promise.all(tokenPromises);\n      console.log('All token balances received:', tokenResults);\n\n      // Update balances object\n      tokenResults.forEach(({ token, balance, formatted }) => {\n        newBalances[token.address] = {\n          raw: balance,\n          formatted\n        };\n      });\n\n      // Update tokens with balances\n      const tokensWithBalances = allTokens.map(token => {\n        let balance;\n        if (token.isNative || token.address === 'ETH') {\n          // For native token (ETH/MON)\n          balance = newBalances[chainId === 10143 ? 'MON' : 'ETH']?.formatted || '0';\n        } else if (token.symbol === 'WETH' && chainId === 1301) {\n          // Special case for WETH on Unichain testnet\n          balance = newBalances[UNISWAP_ADDRESSES[1301].WETH]?.formatted || '0';\n        } else {\n          // For other ERC20 tokens\n          balance = newBalances[token.address]?.formatted || '0';\n        }\n        \n        console.log('Mapping token balance:', {\n          token: token.symbol,\n          isNative: token.isNative,\n          address: token.address,\n          balance\n        });\n\n        return {\n          ...token,\n          balance\n        };\n      });\n\n      console.log('Final balances:', {\n        newBalances,\n        tokensWithBalances\n      });\n\n      // Update cache\n      balanceCache.set(cacheKey, {\n        timestamp: Date.now(),\n        balances: newBalances,\n        tokensWithBalance: tokensWithBalances\n      });\n\n      setTokenBalances(newBalances);\n      setTokensWithBalance(tokensWithBalances);\n    } catch (error) {\n      console.error('Error in fetchTokensAndBalances:', error);\n      setError('Failed to fetch tokens. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Update the useEffect for chainId\n  useEffect(() => {\n    const getChainId = async () => {\n      // Check if provider exists and is ready\n      if (!window.ethereum?.request) {\n        console.warn('Ethereum provider not ready');\n        return;\n      }\n\n      try {\n        const hexChainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const decimalChainId = parseInt(hexChainId, 16);\n        setCurrentChainId(decimalChainId);\n      } catch (error) {\n        console.error('Error getting chain ID:', error);\n      }\n    };\n\n    // Add event listener for provider\n    const handleProviderChange = () => {\n      if (window.ethereum?.request) {\n    getChainId();\n      }\n    };\n\n    // Check periodically for provider\n    const checkForProvider = setInterval(() => {\n      if (window.ethereum?.request) {\n        getChainId();\n        clearInterval(checkForProvider);\n      }\n    }, 1000);\n\n    // Cleanup\n    return () => {\n      clearInterval(checkForProvider);\n    };\n  }, []);\n\n  // Update useEffect to trigger on searchQuery changes\n  useEffect(() => {\n    fetchTokensAndBalances();\n  }, [isOpen, userAddress, refreshTrigger, searchQuery]);\n\n  // Filter tokens based on search query\n  const filteredTokens = useMemo(() => {\n    if (!tokensWithBalance) return [];\n    \n    // If search query is a valid address, only show that token\n    if (ethers.isAddress(searchQuery)) {\n      const token = tokensWithBalance.find(t => \n        t.address?.toLowerCase() === searchQuery.toLowerCase()\n      );\n      return token ? [token] : [];\n    }\n\n    const searchLower = searchQuery.toLowerCase();\n    return tokensWithBalance.filter(token => {\n      if (!token) return false;\n      return (\n        token.symbol?.toLowerCase().includes(searchLower) ||\n        token.name?.toLowerCase().includes(searchLower) ||\n        token.address?.toLowerCase().includes(searchLower)\n      );\n    });\n  }, [searchQuery, tokensWithBalance]);\n\n  // Update useEffect to fetch token info when address is pasted\n  useEffect(() => {\n    const fetchCustomTokenInfo = async () => {\n      if (!ethers.isAddress(searchQuery) || !window.ethereum) return;\n\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const chainId = await provider.getNetwork().then(n => Number(n.chainId));\n\n        // For Monad testnet, use direct RPC calls\n        if (chainId === 10143) {\n                const tokenContract = new ethers.Contract(\n            searchQuery,\n            [\n              'function symbol() view returns (string)',\n              'function name() view returns (string)',\n              'function decimals() view returns (uint8)',\n              'function balanceOf(address) view returns (uint256)'\n            ],\n                  provider\n                );\n                \n          const [symbol, name, decimals, balance] = await Promise.all([\n            window.ethereum.request({\n              method: 'eth_call',\n              params: [{\n                to: searchQuery,\n                data: tokenContract.interface.encodeFunctionData('symbol')\n              }, 'latest']\n            }).then(data => tokenContract.interface.decodeFunctionResult('symbol', data)[0]),\n            window.ethereum.request({\n              method: 'eth_call',\n              params: [{\n                to: searchQuery,\n                data: tokenContract.interface.encodeFunctionData('name')\n              }, 'latest']\n            }).then(data => tokenContract.interface.decodeFunctionResult('name', data)[0]),\n            window.ethereum.request({\n              method: 'eth_call',\n              params: [{\n                to: searchQuery,\n                data: tokenContract.interface.encodeFunctionData('decimals')\n              }, 'latest']\n            }).then(data => tokenContract.interface.decodeFunctionResult('decimals', data)[0]),\n            window.ethereum.request({\n              method: 'eth_call',\n              params: [{\n                to: searchQuery,\n                data: tokenContract.interface.encodeFunctionData('balanceOf', [userAddress])\n              }, 'latest']\n            }).then(data => tokenContract.interface.decodeFunctionResult('balanceOf', data)[0])\n          ]);\n\n          const customToken = {\n            address: searchQuery,\n            symbol,\n            name,\n            decimals,\n            balance: ethers.formatUnits(balance, decimals)\n          };\n\n          setTokensWithBalance([customToken]);\n          setTokenBalances({\n            [searchQuery]: {\n              raw: balance.toString(),\n              formatted: ethers.formatUnits(balance, decimals)\n            }\n          });\n        } else {\n          const tokenContract = new ethers.Contract(\n            searchQuery,\n            [\n              'function symbol() view returns (string)',\n              'function name() view returns (string)',\n              'function decimals() view returns (uint8)',\n              'function balanceOf(address) view returns (uint256)'\n            ],\n            provider\n          );\n\n          const [symbol, name, decimals, balance] = await Promise.all([\n            tokenContract.symbol().catch(() => 'Unknown'),\n            tokenContract.name().catch(() => 'Unknown Token'),\n            tokenContract.decimals().catch(() => 18),\n            tokenContract.balanceOf(userAddress).catch(() => '0')\n          ]);\n\n          const customToken = {\n            address: searchQuery,\n            symbol,\n            name,\n            decimals,\n            balance: ethers.formatUnits(balance, decimals)\n          };\n\n          setTokensWithBalance([customToken]);\n          setTokenBalances({\n            [searchQuery]: {\n              raw: balance.toString(),\n              formatted: ethers.formatUnits(balance, decimals)\n            }\n          });\n        }\n\n        setError('');\n      } catch (err) {\n        console.error('Error fetching custom token:', err);\n        setError('Could not fetch token information. Please verify the contract address.');\n      }\n    };\n\n    fetchCustomTokenInfo();\n  }, [searchQuery, userAddress]);\n\n  const TokenRow = ({ token, onSelect, isSelected }) => {\n    const tokenBalance = token.isNative ? \n      tokenBalances['MON']?.formatted || '0' : \n      tokenBalances[token.address]?.formatted || '0';\n    const isTokenLoading = token.isNative ? \n      !tokenBalances['MON'] : \n      !tokenBalances[token.address];\n\n    return (\n      <motion.button\n        onClick={() => onSelect(token)}\n        className={`w-full flex items-center justify-between p-3 hover:bg-gray-100 dark:hover:bg-[#2d2f36] rounded-xl transition-colors ${\n          isSelected ? 'bg-[#00ffbd]/10 border-[#00ffbd] border' : ''\n        }`}\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -20 }}\n        whileHover={{ scale: 1.02 }}\n        whileTap={{ scale: 0.98 }}\n      >\n        <div className=\"flex items-center gap-3\">\n          {renderTokenLogo(token)}\n          <div className=\"text-left\">\n            <div className=\"text-base font-semibold text-gray-900 dark:text-white\">\n              {token.symbol || 'Unknown'}\n            </div>\n            <div className=\"text-sm text-gray-500 dark:text-gray-300\">\n              {token.name || 'Unknown Token'}\n            </div>\n          </div>\n        </div>\n        <div className=\"text-right\">\n          <div className=\"text-base font-semibold text-gray-900 dark:text-white\">\n            {isTokenLoading ? (\n              <motion.div \n                className=\"w-12 h-4 bg-gray-200 dark:bg-gray-700 rounded\"\n                animate={{ opacity: [0.5, 1, 0.5] }}\n                transition={{ duration: 1.5, repeat: Infinity }}\n              />\n            ) : (\n              tokenBalance\n            )}\n          </div>\n        </div>\n      </motion.button>\n    );\n  };\n\n  const hasBalance = token => {\n    const balance = token.isNative ? \n      tokenBalances['MON']?.formatted || '0' : \n      tokenBalances[token.address]?.formatted || '0';\n    return parseFloat(balance) > 0;\n  };\n\n  // Move renderTokenLogo outside of TokenRow\n  const renderTokenLogo = (token) => {\n    // For common tokens, use their predefined logos\n    const commonToken = COMMON_TOKENS[currentChainId]?.find(t => t.address === token.address);\n    if (commonToken?.logo) {\n      return (\n        <div className=\"relative w-8 h-8\">\n          <img src={commonToken.logo} alt={commonToken.symbol} className=\"w-8 h-8 rounded-full\" />\n          <img \n            src={currentChainId === 10143 ? '/monad.png' : '/unichain-logo.png'} \n            alt=\"Chain Logo\" \n            className=\"absolute -bottom-1 -right-1 w-4 h-4 rounded-full ring-1 ring-black\"\n          />\n        </div>\n      );\n    }\n\n    // For tokens with direct logo or IPFS logo\n    const logoUrl = token.logo || (token.logoIpfs ? ipfsToHttp(token.logoIpfs) : null);\n    if (logoUrl && !logoUrl.includes('token-default.png')) {\n      return (\n        <div className=\"relative w-8 h-8\">\n        <img \n          src={logoUrl}\n          alt={token.symbol}\n          className=\"w-8 h-8 rounded-full\"\n          onError={(e) => {\n            e.target.onerror = null;\n              e.target.parentElement.innerHTML = `\n                <div class=\"w-8 h-8 rounded-full bg-[#1a1b1f] flex items-center justify-center relative\">\n                  <span class=\"text-[#00ffbd] font-bold text-sm\">${token.symbol?.slice(0, 2).toUpperCase() || '??'}</span>\n                  <img \n                    src=\"${currentChainId === 10143 ? '/monad.png' : '/unichain-logo.png'}\" \n                    alt=\"Chain Logo\" \n                    class=\"absolute -bottom-1 -right-1 w-4 h-4 rounded-full ring-1 ring-black\"\n                  />\n                </div>\n              `;\n            }}\n          />\n        </div>\n      );\n    }\n\n    // Default case: show initials with chain logo\n    return (\n      <div className=\"w-8 h-8 rounded-full bg-[#1a1b1f] flex items-center justify-center relative\">\n        <span className=\"text-[#00ffbd] font-bold text-sm\">{token.symbol?.slice(0, 2).toUpperCase() || '??'}</span>\n        <img \n          src={currentChainId === 10143 ? '/monad.png' : '/unichain-logo.png'} \n          alt=\"Chain Logo\" \n          className=\"absolute -bottom-1 -right-1 w-4 h-4 rounded-full ring-1 ring-black\"\n        />\n      </div>\n    );\n  };\n\n  const handleTokenSelect = async (token) => {\n    try {\n      if (!token) {\n        console.error('No token provided to handleTokenSelect');\n        setError('Invalid token selection');\n        return;\n      }\n\n      let finalToken;\n      \n      // Handle native MON token\n      if (token.isNative && token.symbol === 'MON') {\n        finalToken = {\n          ...token,\n          address: 'MON', // Special identifier for native token\n          decimals: 18,\n          verified: true\n        };\n      }\n      // Handle ETH/WETH case\n      else if (token.symbol === 'ETH') {\n        if (!currentChainId || !UNISWAP_ADDRESSES[currentChainId]?.WETH) {\n          console.error('No WETH address found for current chain');\n          setError('WETH address not configured for this chain');\n          return;\n        }\n        finalToken = {\n          ...token,\n          address: UNISWAP_ADDRESSES[currentChainId].WETH\n        };\n      } \n      // Handle custom token address search\n      else if (ethers.isAddress(searchQuery)) {\n        try {\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          const tokenContract = new ethers.Contract(\n            searchQuery,\n            [\n              'function symbol() view returns (string)',\n              'function name() view returns (string)',\n              'function decimals() view returns (uint8)'\n            ],\n            provider\n          );\n\n          const [symbol, name, decimals] = await Promise.all([\n            tokenContract.symbol().catch(() => 'Unknown'),\n            tokenContract.name().catch(() => 'Unknown Token'),\n            tokenContract.decimals().catch(() => 18)\n          ]);\n\n          finalToken = {\n            address: searchQuery,\n            symbol,\n            name,\n            decimals,\n            verified: true\n          };\n        } catch (err) {\n          console.error('Error fetching custom token info:', err);\n          setError('Invalid token address or token not found');\n          return;\n        }\n      }\n      // Handle regular token selection\n      else {\n        if (!token.address) {\n          console.error('Token has no address:', token);\n          setError('Invalid token: no address found');\n          return;\n        }\n        finalToken = {\n          ...token,\n          decimals: token.decimals || 18,\n          verified: true\n        };\n      }\n\n      // Final validation - allow 'MON' as a valid address for native token\n      if (!finalToken.address || (finalToken.address !== 'MON' && !ethers.isAddress(finalToken.address))) {\n        console.error('Invalid final token address:', finalToken);\n        setError('Invalid token address');\n        return;\n      }\n\n      onSelect(finalToken);\n      onClose();\n    } catch (error) {\n      console.error('Error in handleTokenSelect:', error);\n      setError('Error selecting token: ' + error.message);\n    }\n  };\n\n  // Animation variants\n  const overlayVariants = {\n    hidden: { opacity: 0 },\n    visible: { opacity: 1 }\n  };\n\n  const modalVariants = {\n    hidden: { opacity: 0, scale: 0.95, y: 20 },\n    visible: { \n      opacity: 1, \n      scale: 1, \n      y: 0,\n      transition: {\n        type: \"spring\",\n        duration: 0.5\n      }\n    },\n    exit: {\n      opacity: 0,\n      scale: 0.95,\n      y: 20,\n      transition: {\n        duration: 0.3\n      }\n    }\n  };\n\n  const listContainerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.05\n      }\n    }\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <Dialog open={isOpen} onClose={onClose} className=\"relative z-50\">\n          <style>{scrollbarStyles}</style>\n          \n          <motion.div \n            className=\"fixed inset-0 bg-black/30 backdrop-blur-sm\" \n            aria-hidden=\"true\"\n            variants={overlayVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"hidden\"\n          />\n          \n          <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n            <motion.div\n              variants={modalVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n            >\n              <Dialog.Panel className=\"mx-auto w-[448px] rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 shadow-xl border border-gray-200 dark:border-gray-800\">\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                  Select Token\n                </Dialog.Title>\n\n                {/* Search Input */}\n                <motion.div \n                  className=\"relative mb-4\"\n                  initial={{ opacity: 0, y: -20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.2 }}\n                >\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <FaSearch className=\"text-gray-400\" />\n                  </div>\n                  <input\n                    type=\"text\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    placeholder=\"Search by name or paste address\"\n                    className=\"w-full pl-10 pr-4 py-3 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500\"\n                  />\n                  <AnimatePresence>\n                    {error && (\n                      <motion.p \n                        className=\"mt-2 text-sm text-red-500\"\n                        initial={{ opacity: 0, height: 0 }}\n                        animate={{ opacity: 1, height: \"auto\" }}\n                        exit={{ opacity: 0, height: 0 }}\n                      >\n                        {error}\n                      </motion.p>\n                    )}\n                  </AnimatePresence>\n                </motion.div>\n\n                {/* Token List Container */}\n                <div className=\"token-list-scrollbar overflow-y-auto overflow-x-hidden h-[60vh]\">\n                  <AnimatePresence mode=\"wait\">\n                    {isLoading ? (\n                      <motion.div \n                        className=\"space-y-2\"\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                      >\n                          <motion.div \n                          className=\"w-full flex items-center justify-between p-3 bg-white/5 dark:bg-[#2d2f36] rounded-xl\"\n                            animate={{ opacity: [0.5, 1, 0.5] }}\n                            transition={{ duration: 1.5, repeat: Infinity }}\n                          >\n                            <div className=\"flex items-center gap-3\">\n                            <div className=\"w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-700\" />\n                              <div className=\"space-y-2\">\n                              <div className=\"h-4 w-20 rounded bg-gray-200 dark:bg-gray-700\" />\n                              <div className=\"h-3 w-24 rounded bg-gray-200 dark:bg-gray-700\" />\n                              </div>\n                            </div>\n                          <div className=\"h-4 w-16 rounded bg-gray-200 dark:bg-gray-700\" />\n                          </motion.div>\n                      </motion.div>\n                    ) : (\n                      <motion.div\n                        variants={listContainerVariants}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        className=\"min-h-[400px]\"\n                      >\n                        {ethers.isAddress(searchQuery) ? (\n                          // When searching by address, show only the token\n                          <motion.div className=\"space-y-2\">\n                            {filteredTokens.map((token) => (\n                              <TokenRow\n                                key={token.address || token.symbol}\n                                token={token}\n                                onSelect={handleTokenSelect}\n                                isSelected={selectedTokenAddress === token.address}\n                              />\n                            ))}\n                          </motion.div>\n                        ) : (\n                          // Normal search view with sections\n                          <>\n                        {/* Your Tokens Section */}\n                            <motion.div className=\"mb-4\">\n                          <div className=\"flex items-center gap-2 mb-3\">\n                            <FaCoins className=\"text-[#00ffbd] w-4 h-4\" />\n                            <h3 className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                              Your Tokens\n                            </h3>\n                          </div>\n                          <motion.div className=\"space-y-2\">\n                              {filteredTokens\n                                .filter(hasBalance)\n                                .map((token) => (\n                                  <TokenRow\n                                      key={token.address || token.symbol}\n                                    token={token}\n                                    onSelect={handleTokenSelect}\n                                      isSelected={selectedTokenAddress === token.address}\n                                  />\n                                ))}\n                          </motion.div>\n                        </motion.div>\n\n                        {/* Separator */}\n                        <motion.div \n                          className=\"my-4 border-t border-gray-200 dark:border-gray-700\"\n                          initial={{ scaleX: 0 }}\n                          animate={{ scaleX: 1 }}\n                        />\n\n                        {/* Other Tokens Section */}\n                            <motion.div>\n                          <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400 mb-3\">\n                            Other Tokens\n                          </h3>\n                          <motion.div className=\"space-y-2\">\n                              {filteredTokens\n                                .filter(token => !hasBalance(token))\n                                .map((token) => (\n                                  <TokenRow\n                                      key={token.address || token.symbol}\n                                    token={token}\n                                    onSelect={handleTokenSelect}\n                                      isSelected={selectedTokenAddress === token.address}\n                                  />\n                                ))}\n                          </motion.div>\n                        </motion.div>\n                          </>\n                        )}\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </div>\n              </Dialog.Panel>\n            </motion.div>\n          </div>\n        </Dialog>\n      )}\n    </AnimatePresence>\n  );\n} ","import React from 'react';\nimport TokenSelectionModal from './TokenSelectionModal';\n\nexport default function TokenSelector({ isOpen, onClose, onSelect, selectedTokenAddress, excludeToken }) {\n  return (\n    <TokenSelectionModal\n      isOpen={isOpen}\n      onClose={onClose}\n      onSelect={onSelect}\n      selectedTokenAddress={selectedTokenAddress}\n      excludeToken={excludeToken}\n    />\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { ethers } from 'ethers';\nimport { toast } from 'react-hot-toast';\nimport { BiWallet } from 'react-icons/bi';\nimport { FaExchangeAlt, FaStar, FaGasPump } from 'react-icons/fa';\nimport { useUnichain } from '../../../../hooks/useUnichain';\nimport TokenSelector from '../shared/TokenSelector';\nimport { getTokenLogo } from '../../../../utils/tokens';\nimport { UNISWAP_ADDRESSES } from '../../../../services/unichain/uniswap';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Fragment } from 'react';\nimport Confetti from 'react-confetti';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Animation variants\nconst containerVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.4,\n      when: \"beforeChildren\",\n      staggerChildren: 0.1\n    }\n  },\n  exit: {\n    opacity: 0,\n    y: -20,\n    transition: {\n      duration: 0.3\n    }\n  }\n};\n\nconst itemVariants = {\n  hidden: { opacity: 0, x: -10 },\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: { duration: 0.2 }\n  }\n};\n\nconst buttonVariants = {\n  hover: {\n    scale: 1.02,\n    transition: { duration: 0.2 }\n  },\n  tap: {\n    scale: 0.98\n  }\n};\n\n// Add Tooltip component\nconst Tooltip = ({ children, content }) => {\n  const [show, setShow] = useState(false);\n\n  return (\n    <div className=\"relative inline-block\">\n      <div\n        onMouseEnter={() => setShow(true)}\n        onMouseLeave={() => setShow(false)}\n      >\n        {children}\n      </div>\n      {show && (\n        <div className=\"absolute z-50 px-3 py-2 text-sm bg-gray-900 text-white rounded-lg shadow-lg whitespace-nowrap\">\n          {content}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Add these modern DeFi-inspired icons for swap steps\nconst Icons = {\n  Preparing: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path className=\"animate-[spin_1s_linear_infinite]\" \n          d=\"M12 6v1M12 17v1M7.05 7.05l.707.707M16.243 16.243l.707.707M6 12h1M17 12h1M7.757 16.243l-.707.707M16.95 7.05l-.707.707\">\n        </path>\n        <path \n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" \n          strokeOpacity=\"0.2\" \n        />\n        <path \n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2\" \n          strokeLinecap=\"round\" \n          className=\"origin-center animate-[spin_1.5s_linear_infinite]\" \n        />\n      </g>\n    </svg>\n  ),\n  Approval: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <path className=\"animate-[draw_1s_ease-in-out]\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} stroke=\"currentColor\"\n        d=\"M7 11l3 3L19 5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        strokeDasharray=\"60\"\n        strokeDashoffset=\"60\">\n        <animate\n          attributeName=\"stroke-dashoffset\"\n          from=\"60\"\n          to=\"0\"\n          dur=\"0.6s\"\n          fill=\"freeze\"\n        />\n      </path>\n    </svg>\n  ),\n  Swapping: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        {/* Background circle */}\n        <path \n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" \n          strokeOpacity=\"0.2\" \n        />\n        \n        {/* Top arrow */}\n        <path \n          className=\"origin-center animate-[slideRight_1.5s_ease-in-out_infinite]\"\n          strokeLinecap=\"round\" \n          strokeLinejoin=\"round\"\n          d=\"M6 9h8l-2.5-2.5M6 9l2.5 2.5M6 9\"\n        >\n          <animate\n            attributeName=\"opacity\"\n            values=\"0;1;1;0\"\n            dur=\"1.5s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        \n        {/* Bottom arrow */}\n        <path \n          className=\"origin-center animate-[slideLeft_1.5s_ease-in-out_infinite]\"\n          strokeLinecap=\"round\" \n          strokeLinejoin=\"round\"\n          d=\"M18 15h-8l2.5-2.5M18 15l-2.5 2.5M18 15\"\n        >\n          <animate\n            attributeName=\"opacity\"\n            values=\"0;1;1;0\"\n            dur=\"1.5s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n\n        {/* Animated dots */}\n        <circle cx=\"18\" cy=\"9\" r=\"0.5\" className=\"animate-[fadeInOut_1.5s_ease-in-out_infinite]\">\n          <animate\n            attributeName=\"opacity\"\n            values=\"0;1;0\"\n            dur=\"1.5s\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <circle cx=\"6\" cy=\"15\" r=\"0.5\" className=\"animate-[fadeInOut_1.5s_ease-in-out_infinite_0.75s]\">\n          <animate\n            attributeName=\"opacity\"\n            values=\"0;1;0\"\n            dur=\"1.5s\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </g>\n    </svg>\n  ),\n  Confirming: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n        <path strokeLinecap=\"round\" className=\"origin-center animate-[spin_2s_linear_infinite]\"\n          d=\"M12 6v6l4 4\" />\n      </g>\n    </svg>\n  ),\n  Completed: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g>\n        <path className=\"animate-[draw_0.6s_ease-in-out]\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} stroke=\"currentColor\"\n          d=\"M7 13l3 3L17 8\" strokeDasharray=\"60\" strokeDashoffset=\"60\">\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            from=\"60\"\n            to=\"0\"\n            dur=\"0.6s\"\n            fill=\"freeze\"\n          />\n        </path>\n        <path fill=\"currentColor\" fillOpacity=\"0.2\" d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n      </g>\n    </svg>\n  ),\n  Error: () => (\n    <svg className=\"w-6 h-6 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n    </svg>\n  )\n};\n\n// Add modern icons for wrapping/unwrapping\nconst WrapIcons = {\n  Preparing: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path className=\"animate-[spin_1s_linear_infinite]\" \n          d=\"M12 6v1M12 17v1M7.05 7.05l.707.707M16.243 16.243l.707.707M6 12h1M17 12h1M7.757 16.243l-.707.707M16.95 7.05l-.707.707\">\n        </path>\n        <path \n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" \n          strokeOpacity=\"0.2\" \n        />\n        <path \n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2\" \n          strokeLinecap=\"round\" \n          className=\"origin-center animate-[spin_1.5s_linear_infinite]\" \n        />\n      </g>\n    </svg>\n  ),\n  Wrapping: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        {/* Box */}\n        <path className=\"animate-[draw_1s_ease-in-out]\" \n          strokeLinecap=\"round\" \n          strokeLinejoin=\"round\"\n          d=\"M12 3l7 4v10l-7 4-7-4V7l7-4z\"\n          strokeDasharray=\"60\"\n          strokeDashoffset=\"60\"\n        >\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            from=\"60\"\n            to=\"0\"\n            dur=\"1s\"\n            fill=\"freeze\"\n          />\n        </path>\n        {/* Animated ribbon */}\n        <path \n          className=\"origin-center animate-[spin_3s_linear_infinite]\"\n          strokeLinecap=\"round\"\n          d=\"M12 3v18M5 7l14 8M19 7l-14 8\"\n          strokeDasharray=\"4 4\"\n        />\n        {/* Animated dots */}\n        <circle cx=\"12\" cy=\"12\" r=\"1\" className=\"animate-[pulse_2s_ease-in-out_infinite]\">\n          <animate\n            attributeName=\"r\"\n            values=\"0;1;0\"\n            dur=\"2s\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </g>\n    </svg>\n  ),\n  Unwrapping: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        {/* Box opening animation */}\n        <path \n          className=\"origin-bottom animate-[openBox_1.5s_ease-in-out_infinite]\"\n          strokeLinecap=\"round\" \n          strokeLinejoin=\"round\"\n          d=\"M12 3l7 4v10l-7 4-7-4V7l7-4z\"\n        >\n          <animate\n            attributeName=\"d\"\n            values=\"M12 3l7 4v10l-7 4-7-4V7l7-4z;M12 3l7 0v14l-7 4-7-4V3l7 0z\"\n            dur=\"1.5s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        {/* Animated particles */}\n        <g className=\"animate-[float_2s_ease-in-out_infinite]\">\n          <circle cx=\"12\" cy=\"12\" r=\"0.5\" />\n          <circle cx=\"14\" cy=\"10\" r=\"0.5\" />\n          <circle cx=\"10\" cy=\"10\" r=\"0.5\" />\n          <animate\n            attributeName=\"opacity\"\n            values=\"0;1;0\"\n            dur=\"2s\"\n            repeatCount=\"indefinite\"\n          />\n        </g>\n      </g>\n    </svg>\n  ),\n  Confirming: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n        <path strokeLinecap=\"round\" className=\"origin-center animate-[spin_2s_linear_infinite]\"\n          d=\"M12 6v6l4 4\" />\n      </g>\n    </svg>\n  ),\n  Completed: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g>\n        <path className=\"animate-[draw_0.6s_ease-in-out]\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} stroke=\"currentColor\"\n          d=\"M7 13l3 3L17 8\" strokeDasharray=\"60\" strokeDashoffset=\"60\">\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            from=\"60\"\n            to=\"0\"\n            dur=\"0.6s\"\n            fill=\"freeze\"\n          />\n        </path>\n        <path fill=\"currentColor\" fillOpacity=\"0.2\" d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n      </g>\n    </svg>\n  )\n};\n\n// Add SwapProgressModal component\nconst SwapProgressModal = ({ isOpen, onClose, currentStep, tokenIn, tokenOut, error }) => {\n  const steps = [\n    { id: 'preparing', title: 'Preparing', icon: <Icons.Preparing /> },\n    { id: 'approval', title: 'Token Approval', icon: <Icons.Approval /> },\n    { id: 'swapping', title: 'Swapping', icon: <Icons.Swapping /> },\n    { id: 'confirming', title: 'Confirming', icon: <Icons.Confirming /> },\n    { id: 'completed', title: 'Completed', icon: <Icons.Completed /> }\n  ];\n\n  const isError = Boolean(error);\n\n  // Format error message to be more user-friendly\n  const formatErrorMessage = (error) => {\n    if (error?.includes('user rejected')) {\n      return 'Transaction was rejected. Please try again.';\n    }\n    if (error?.includes('insufficient')) {\n      return 'Insufficient balance for swap.';\n    }\n    if (error?.includes('INSUFFICIENT_OUTPUT_AMOUNT')) {\n      return 'Price impact too high, try a smaller amount.';\n    }\n    if (error?.includes('EXCESSIVE_INPUT_AMOUNT')) {\n      return 'Insufficient liquidity for this trade.';\n    }\n    return error?.replace(/\\{\"action\":\"sendTransaction\".*$/, '') || 'An error occurred';\n  };\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\n                >\n                  {isError ? 'Error Swapping Tokens' : 'Swapping Tokens'}\n                  {!isError && tokenIn && tokenOut && (\n                    <div className=\"mt-2 text-base font-normal text-gray-500 dark:text-gray-400\">\n                      {tokenIn.symbol} → {tokenOut.symbol}\n                    </div>\n                  )}\n                </Dialog.Title>\n\n                <div className=\"space-y-4\">\n                  {steps.map((step, index) => {\n                    const isActive = currentStep === step.id;\n                    const isCompleted = !isError && steps.findIndex(s => s.id === currentStep) > index;\n                    const isErrorStep = isError && currentStep === step.id;\n                    \n                    return (\n                      <div\n                        key={step.id}\n                        className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\n                          isActive && !isErrorStep ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : \n                          isCompleted ? 'text-[#00ffbd]' : \n                          isErrorStep ? 'bg-red-500/10 text-red-500' : \n                          'text-gray-400'\n                        }`}\n                      >\n                        {step.icon}\n                        <div className=\"flex-1\">\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{step.title}</span>\n                          {isActive && !isError && (\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                              {step.id === 'preparing' && 'Preparing transaction...'}\n                              {step.id === 'approval' && `Approving ${tokenIn?.symbol}`}\n                              {step.id === 'swapping' && `Swapping ${tokenIn?.symbol} for ${tokenOut?.symbol}`}\n                              {step.id === 'confirming' && 'Waiting for confirmation...'}\n                              {step.id === 'completed' && `Successfully swapped ${tokenIn?.symbol} for ${tokenOut?.symbol}!`}\n                            </p>\n                          )}\n                        </div>\n                        {isCompleted && (\n                          <svg className=\"w-5 h-5 text-[#00ffbd]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {isError && (\n                  <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\n                    <div className=\"flex items-start gap-3\">\n                      <Icons.Error />\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\n                        <p className=\"mt-1 text-sm text-red-400\">\n                          {formatErrorMessage(error)}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4 flex justify-end\">\n                      <button\n                        onClick={onClose}\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {currentStep === 'completed' && (\n                  <div className=\"mt-6\">\n                    <button\n                      onClick={onClose}\n                      className=\"w-full px-4 py-3 rounded-xl font-medium bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors text-black\"\n                    >\n                      Close\n                    </button>\n                  </div>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Update WrapProgressModal component\nconst WrapProgressModal = ({ isOpen, onClose, currentStep, fromToken, toToken, error }) => {\n  const provider = new ethers.BrowserProvider(window.ethereum);\n  const [chainId, setChainId] = useState(null);\n\n  useEffect(() => {\n    const getChainId = async () => {\n      const network = await provider.getNetwork();\n      setChainId(Number(network.chainId));\n    };\n    getChainId();\n  }, [provider]);\n\n  const isWrapping = fromToken?.symbol === (chainId === 10143 ? 'MON' : 'ETH');\n  const steps = [\n    { id: 'preparing', title: 'Preparing', icon: <WrapIcons.Preparing /> },\n    { id: 'wrapping', title: isWrapping ? 'Wrapping' : 'Unwrapping', icon: isWrapping ? <WrapIcons.Wrapping /> : <WrapIcons.Unwrapping /> },\n    { id: 'confirming', title: 'Confirming', icon: <WrapIcons.Confirming /> },\n    { id: 'completed', title: 'Completed', icon: <WrapIcons.Completed /> }\n  ];\n\n  const isError = Boolean(error);\n\n  const formatErrorMessage = (error) => {\n    if (!error) return '';\n    if (error.includes('user rejected')) return 'Transaction was rejected. Please try again.';\n    if (error.includes('insufficient funds')) return 'Insufficient balance for the operation.';\n    return error;\n  };\n\n  const getOperationText = () => {\n    if (chainId === 10143) {\n      return isWrapping ? 'MON to WMONAD' : 'WMONAD to MON';\n    }\n    return isWrapping ? 'ETH to WETH' : 'WETH to ETH';\n  };\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\n                >\n                  {isError ? 'Error Processing Transaction' : (isWrapping ? `Wrapping ${getOperationText()}` : `Unwrapping ${getOperationText()}`)}\n                </Dialog.Title>\n\n                <div className=\"space-y-4\">\n                  {steps.map((step) => {\n                    const isActive = currentStep === step.id;\n                    const isCompleted = !isError && steps.findIndex(s => s.id === currentStep) > steps.findIndex(s => s.id === step.id);\n                    const isErrorStep = isError && currentStep === step.id;\n                    \n                    return (\n                      <div\n                        key={step.id}\n                        className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\n                          isActive && !isErrorStep ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : \n                          isCompleted ? 'text-[#00ffbd]' : \n                          isErrorStep ? 'bg-red-500/10 text-red-500' : \n                          'text-gray-400'\n                        }`}\n                      >\n                        {step.icon}\n                        <div className=\"flex-1\">\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{step.title}</span>\n                          {isActive && !isError && (\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                              {step.id === 'preparing' && 'Preparing transaction...'}\n                              {step.id === 'wrapping' && (isWrapping \n                                ? `Converting ${chainId === 10143 ? 'MON to WMONAD' : 'ETH to WETH'}...` \n                                : `Converting ${chainId === 10143 ? 'WMONAD to MON' : 'WETH to ETH'}...`)}\n                              {step.id === 'confirming' && 'Waiting for confirmation...'}\n                              {step.id === 'completed' && (isWrapping \n                                ? `Successfully wrapped ${chainId === 10143 ? 'MON to WMONAD' : 'ETH to WETH'}!` \n                                : `Successfully unwrapped ${chainId === 10143 ? 'WMONAD to MON' : 'WETH to ETH'}!`)}\n                            </p>\n                          )}\n                        </div>\n                        {isCompleted && (\n                          <svg className=\"w-5 h-5 text-[#00ffbd]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {isError && (\n                  <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\n                    <div className=\"flex items-start gap-3\">\n                      <Icons.Error />\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\n                        <p className=\"mt-1 text-sm text-red-400\">\n                          {formatErrorMessage(error)}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4 flex justify-end\">\n                      <button\n                        onClick={onClose}\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {currentStep === 'completed' && (\n                  <div className=\"mt-6\">\n                    <button\n                      onClick={onClose}\n                      className=\"w-full px-4 py-3 rounded-xl font-medium bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors text-black\"\n                    >\n                      Close\n                    </button>\n                  </div>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Add StarRatingModal component\nconst StarRatingModal = ({ isOpen, onClose, onRate }) => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-[99998]\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white text-center mb-4\"\n                >\n                  Rate Your Swap Experience\n                </Dialog.Title>\n                \n                <div className=\"flex flex-col items-center space-y-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    {[...Array(9)].map((_, index) => {\n                      const starValue = index + 1;\n                      return (\n                        <button\n                          key={starValue}\n                          className=\"transition-transform hover:scale-110 focus:outline-none\"\n                          onClick={() => setRating(starValue)}\n                          onMouseEnter={() => setHover(starValue)}\n                          onMouseLeave={() => setHover(0)}\n                        >\n                          <FaStar\n                            size={28}\n                            className={`transition-colors ${\n                              (hover || rating) >= starValue\n                                ? 'text-[#00ffbd]'\n                                : 'text-gray-300 dark:text-gray-600'\n                            }`}\n                          />\n                        </button>\n                      );\n                    })}\n                  </div>\n                  \n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {rating === 0 ? 'Select a rating' : `You rated: ${rating} star${rating !== 1 ? 's' : ''}`}\n                  </p>\n\n                  <div className=\"flex space-x-3 mt-4\">\n                    <button\n                      onClick={() => {\n                        if (rating > 0) {\n                          onRate(rating);\n                          onClose();\n                        }\n                      }}\n                      className={`px-4 py-2 rounded-xl font-medium transition-colors ${\n                        rating > 0\n                          ? 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black'\n                          : 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed text-gray-500 dark:text-gray-400'\n                      }`}\n                    >\n                      Submit Rating\n                    </button>\n                    <button\n                      onClick={onClose}\n                      className=\"px-4 py-2 rounded-xl font-medium bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-900 dark:text-white transition-colors\"\n                    >\n                      Skip\n                    </button>\n                  </div>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Add supported network IDs\nconst SUPPORTED_CHAIN_IDS = [130, 1301, 10143];\n\n// Add network names mapping\nconst NETWORK_NAMES = {\n  130: 'Unichain Mainnet',\n  1301: 'Unichain Testnet',\n  10143: 'Monad Testnet'\n};\n\n// Update the network validation message\nconst getNetworkMessage = (chainId) => {\n  if (!chainId) return 'Please connect your wallet';\n  if (!SUPPORTED_CHAIN_IDS.includes(chainId)) {\n    return `Please switch to Unichain network or Monad Testnet`;\n  }\n  return null;\n};\n\n// Add WMONAD ABI\nconst WMONAD_ABI = [\n  'function deposit() external payable',\n  'function withdraw(uint256 amount) external',\n  'function balanceOf(address) view returns (uint256)',\n  'function approve(address spender, uint256 amount) external returns (bool)'\n];\n\nexport default function TokenSwap() {\n  const { address, isConnected } = useAccount();\n  const uniswap = useUnichain();\n  const [fromToken, setFromToken] = useState(null);\n  const [toToken, setToToken] = useState(null);\n  const [fromAmount, setFromAmount] = useState('');\n  const [toAmount, setToAmount] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [route, setRoute] = useState(null);\n  const [showTokenSelector, setShowTokenSelector] = useState(false);\n  const [activeSide, setActiveSide] = useState(null);\n  const [showMoreDetails, setShowMoreDetails] = useState(false);\n  const [estimatedFee, setEstimatedFee] = useState(null);\n  const [networkCost, setNetworkCost] = useState(null);\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const [slippage, setSlippage] = useState(2.0);\n  const [customSlippage, setCustomSlippage] = useState('');\n  const [showCustomSlippage, setShowCustomSlippage] = useState(false);\n  const [routeError, setRouteError] = useState(null);\n  const [showProgressModal, setShowProgressModal] = useState(false);\n  const [swapStep, setSwapStep] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [swapError, setSwapError] = useState(null);\n  const [currentChainId, setCurrentChainId] = useState(null);\n  const [networkError, setNetworkError] = useState(null);\n  const [findingRoute, setFindingRoute] = useState(false);\n\n  // Update useEffect for network validation\n  useEffect(() => {\n    const validateNetwork = async () => {\n      if (!window.ethereum) return;\n      try {\n        const hexChainId = await window.ethereum.request({ method: 'eth_chainId' });\n        const chainId = parseInt(hexChainId, 16);\n        setCurrentChainId(chainId);\n        \n        // Only set network error if we're not on Monad testnet\n        if (chainId !== 10143) {\n          const errorMessage = getNetworkMessage(chainId);\n          setNetworkError(errorMessage);\n        } else {\n          setNetworkError(null); // Clear any network error if we're on Monad\n        }\n      } catch (error) {\n        console.error('Error validating network:', error);\n      }\n    };\n\n    validateNetwork();\n\n    if (window.ethereum) {\n      window.ethereum.on('chainChanged', (chainId) => {\n        const decimalChainId = parseInt(chainId, 16);\n        setCurrentChainId(decimalChainId);\n        \n        // Only set network error if we're not on Monad testnet\n        if (decimalChainId !== 10143) {\n          const errorMessage = getNetworkMessage(decimalChainId);\n          setNetworkError(errorMessage);\n        } else {\n          setNetworkError(null); // Clear any network error if we're on Monad\n        }\n      });\n    }\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('chainChanged', () => {});\n      }\n    };\n  }, []);\n\n  // Add window resize handler\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Add confetti timeout handler\n  useEffect(() => {\n    if (showConfetti) {\n      const timer = setTimeout(() => {\n        setShowConfetti(false);\n      }, 5000); // Run confetti for 5 seconds\n\n      return () => clearTimeout(timer);\n    }\n  }, [showConfetti]);\n\n  // Add balance display component\n  const TokenBalance = ({ token }) => {\n    const { address: userAddress } = useAccount();\n    const [balance, setBalance] = useState('0');\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n      const fetchBalance = async () => {\n        if (!userAddress || !token) return;\n        \n        try {\n          setIsLoading(true);\n          \n          // Handle native MON token\n          if (token.isNative && token.symbol === 'MON') {\n            const balance = await window.ethereum.request({\n              method: 'eth_getBalance',\n              params: [userAddress, 'latest']\n            });\n            const formattedBalance = ethers.formatEther(BigInt(balance));\n            setBalance(formattedBalance);\n            return;\n          }\n\n          // Handle ERC20 tokens\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          const tokenContract = new ethers.Contract(\n            token.address,\n            ['function balanceOf(address) view returns (uint256)'],\n            provider\n          );\n          const balance = await tokenContract.balanceOf(userAddress);\n          setBalance(ethers.formatUnits(balance, token.decimals || 18));\n        } catch (error) {\n          console.error('Error fetching balance:', error);\n          setBalance('0');\n        } finally {\n          setIsLoading(false);\n        }\n      };\n\n      fetchBalance();\n    }, [token, userAddress]);\n\n    if (!token) return null;\n\n    return (\n      <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n        Balance: {isLoading ? 'Loading...' : Number(balance).toLocaleString(undefined, {\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 6\n        })} {token.symbol}\n      </div>\n    );\n  };\n\n  // Update useEffect for route calculation\n  useEffect(() => {\n    const updateRoute = async () => {\n      if (!fromToken || !toToken || !fromAmount) {\n        setToAmount('');\n        setRoute(null);\n        setRouteError(null);\n        return;\n      }\n\n      // For wrap/unwrap operations, set toAmount equal to fromAmount\n      if (isWrapUnwrapOperation()) {\n        setToAmount(fromAmount);\n        setRoute(null);\n        setRouteError(null);\n        return;\n      }\n\n      setFindingRoute(true);\n      try {\n        const { route: newRoute, toAmount: newToAmount, path } = await uniswap.updateRoute(\n          fromToken,\n          toToken,\n          fromAmount\n        );\n\n        if (!newRoute || !newToAmount || newToAmount === '0') {\n          setToAmount('');\n          setRoute(null);\n          setRouteError('No valid route found');\n          return;\n        }\n\n        setRoute(newRoute);\n        setToAmount(newToAmount);\n        setRouteError(null);\n      } catch (error) {\n        setToAmount('');\n        setRoute(null);\n        setRouteError('Error finding route');\n      } finally {\n        setFindingRoute(false);\n      }\n    };\n\n    updateRoute();\n  }, [fromToken, toToken, fromAmount, uniswap]);\n\n  const handleTokenSelect = (token) => {\n    if (activeSide === 'from') {\n      setFromToken(token);\n    } else {\n      setToToken(token);\n    }\n    setShowTokenSelector(false);\n  };\n\n  const handleSwap = async () => {\n    if (!address) {\n      toast.error('Please connect your wallet');\n      return;\n    }\n\n    if (!fromToken || !toToken || !fromAmount) {\n      toast.error('Please fill in all fields');\n      return;\n    }\n\n    if (routeError) {\n      setShowProgressModal(true);\n      setSwapStep('preparing');\n      setSwapError('No valid route found for this swap. Please try a different amount or token pair.');\n      return;\n    }\n    \n    setLoading(true);\n    setShowProgressModal(true);\n    setSwapStep('preparing');\n    setSwapError(null);\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      \n      // Get the route path from updateRoute\n      const routeInfo = await uniswap.updateRoute(fromToken, toToken, fromAmount);\n      if (!routeInfo || !routeInfo.path) {\n        throw new Error('No valid route found');\n      }\n\n      // Parse input amount with proper decimals\n      const amountIn = ethers.parseUnits(fromAmount, fromToken.decimals);\n      \n      // Parse output amount with proper decimals\n      const amountOutMinRaw = ethers.parseUnits(toAmount, toToken.decimals);\n      \n      // Calculate slippage using user-defined slippage value\n      const slippageMultiplier = BigInt(Math.floor((100 - slippage) * 100));\n      const amountOutMin = (amountOutMinRaw * slippageMultiplier) / 10000n;\n\n      let actualFromToken = fromToken;\n\n      // Check if we need to wrap native token (ETH/MON) first\n      const isFromNative = fromToken.symbol === 'ETH' || fromToken.symbol === 'MON';\n      const isToNative = toToken.symbol === 'ETH' || toToken.symbol === 'MON';\n\n      if (isFromNative && routeInfo.path[0] === UNISWAP_ADDRESSES[currentChainId]?.WETH) {\n        const wethBalance = await uniswap.getWETHBalance(address);\n        if (wethBalance < amountIn) {\n          setSwapStep('wrapping');\n          await uniswap.wrapETH(amountIn);\n          \n          actualFromToken = {\n            ...fromToken,\n            symbol: 'WETH',\n            address: UNISWAP_ADDRESSES[currentChainId].WETH,\n            decimals: 18\n          };\n        }\n      }\n\n      const deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20); // 20 minutes\n\n      // First approve if needed\n      if (!isFromNative) {\n        setSwapStep('approval');\n        \n        // Get the router address for the current chain\n        const routerAddress = UNISWAP_ADDRESSES[currentChainId]?.router;\n        if (!routerAddress) {\n          throw new Error('Router address not found for current chain');\n        }\n\n        const tokenContract = new ethers.Contract(\n          actualFromToken.address,\n          [\n            'function approve(address spender, uint256 amount) external returns (bool)',\n            'function allowance(address owner, address spender) external view returns (uint256)',\n            'function balanceOf(address) view returns (uint256)',\n            'function burnFee() view returns (uint256)',\n            'function marketingFee() view returns (uint256)',\n            'function liquidityFee() view returns (uint256)'\n          ],\n          signer\n        );\n        \n        const allowance = await tokenContract.allowance(address, routerAddress);\n        if (allowance < amountIn) {\n          console.log('Approving tokens...');\n          const approveTx = await tokenContract.approve(routerAddress, amountIn);\n          await approveTx.wait();\n        }\n\n        // Check if either token has fees\n        let fromTokenHasFees = false;\n        let toTokenHasFees = false;\n\n        try {\n          const [burnFee, marketingFee, liquidityFee] = await Promise.all([\n            tokenContract.burnFee().catch(() => 0),\n            tokenContract.marketingFee().catch(() => 0),\n            tokenContract.liquidityFee().catch(() => 0)\n          ]);\n          fromTokenHasFees = (burnFee > 0 || marketingFee > 0 || liquidityFee > 0);\n        } catch (error) {\n          fromTokenHasFees = false;\n        }\n\n        // Check if the destination token has fees\n        const toTokenContract = new ethers.Contract(\n          toToken.address,\n          [\n            'function burnFee() view returns (uint256)',\n            'function marketingFee() view returns (uint256)',\n            'function liquidityFee() view returns (uint256)'\n          ],\n          signer\n        );\n\n        try {\n          const [burnFee, marketingFee, liquidityFee] = await Promise.all([\n            toTokenContract.burnFee().catch(() => 0),\n            toTokenContract.marketingFee().catch(() => 0),\n            toTokenContract.liquidityFee().catch(() => 0)\n          ]);\n          toTokenHasFees = (burnFee > 0 || marketingFee > 0 || liquidityFee > 0);\n        } catch (error) {\n          toTokenHasFees = false;\n        }\n\n        setSwapStep('swapping');\n\n        // Use appropriate swap function based on whether either token has fees\n        if (fromTokenHasFees || toTokenHasFees) {\n          if (isToNative) {\n            const tx = await uniswap.swapExactTokensForETHSupportingFeeOnTransferTokens(\n              amountIn,\n              amountOutMin,\n              routeInfo.path,\n              address,\n              deadline\n            );\n            await tx.wait();\n          } else {\n            const tx = await uniswap.swapExactTokensForTokensSupportingFeeOnTransferTokens(\n              amountIn,\n              amountOutMin,\n              routeInfo.path,\n              address,\n              deadline\n            );\n            await tx.wait();\n          }\n        } else {\n          if (isToNative) {\n            const tx = await uniswap.swapExactTokensForETH(\n              amountIn,\n              amountOutMin,\n              routeInfo.path,\n              address,\n              deadline\n            );\n            await tx.wait();\n          } else {\n            const tx = await uniswap.swapExactTokensForTokens(\n              amountIn,\n              amountOutMin,\n              routeInfo.path,\n              address,\n              deadline\n            );\n            await tx.wait();\n          }\n        }\n      } else {\n        // Handle native token (MON/ETH) to token swap\n        setSwapStep('swapping');\n        \n        // For native token to token, we'll also check if the output token has fees\n        const tokenContract = new ethers.Contract(\n          toToken.address,\n          [\n            'function burnFee() view returns (uint256)',\n            'function marketingFee() view returns (uint256)',\n            'function liquidityFee() view returns (uint256)'\n          ],\n          signer\n        );\n\n        let hasFees = false;\n        try {\n          const [burnFee, marketingFee, liquidityFee] = await Promise.all([\n            tokenContract.burnFee().catch(() => 0),\n            tokenContract.marketingFee().catch(() => 0),\n            tokenContract.liquidityFee().catch(() => 0)\n          ]);\n          hasFees = (burnFee > 0 || marketingFee > 0 || liquidityFee > 0);\n        } catch (error) {\n          hasFees = false;\n        }\n\n        if (hasFees) {\n          const tx = await uniswap.swapExactETHForTokensSupportingFeeOnTransferTokens(\n            amountOutMin,\n            routeInfo.path,\n            address,\n            deadline,\n            { value: amountIn }\n          );\n          await tx.wait();\n        } else {\n          const tx = await uniswap.swapExactETHForTokens(\n            amountOutMin,\n            routeInfo.path,\n            address,\n            deadline,\n            { value: amountIn }\n          );\n          await tx.wait();\n        }\n      }\n\n      // Remove the updateBalances call and use the existing balance update mechanism\n      // Trigger a balance refresh by updating the fromAmount\n      setFromAmount('');\n      \n      setSwapStep('completed');\n      \n      // Show completed state briefly, then close modal and show confetti\n      setTimeout(() => {\n        setShowProgressModal(false);\n        setSwapStep(null);\n        setShowConfetti(true);\n        \n        setTimeout(() => {\n          setShowRatingModal(true);\n        }, 1000);\n        \n        setTimeout(() => {\n          setFromAmount('');\n          setToAmount('');\n          setShowConfetti(false);\n        }, 30000);\n      }, 1000);\n\n    } catch (error) {\n      console.error('Swap error:', error);\n      let errorMessage = 'Failed to swap tokens';\n      \n      // Handle specific error cases\n      if (error.code === 'CALL_EXCEPTION') {\n        errorMessage = 'Transaction failed - insufficient gas or contract error';\n      } else if (error.code === 'UNPREDICTABLE_GAS_LIMIT') {\n        errorMessage = 'Unable to estimate gas - the transaction may fail';\n      } else if (error.reason) {\n        errorMessage = error.reason;\n      }\n      \n      setSwapError(errorMessage);\n      setSwapStep('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSlippageChange = (value) => {\n    if (value === 'custom') {\n      setShowCustomSlippage(true);\n    } else {\n      setSlippage(parseFloat(value));\n      setShowCustomSlippage(false);\n      setCustomSlippage('');\n    }\n  };\n\n  const handleCustomSlippageChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || (/^\\d*\\.?\\d*$/.test(value) && parseFloat(value) <= 100)) {\n      setCustomSlippage(value);\n      if (value !== '') {\n        setSlippage(parseFloat(value));\n      }\n    }\n  };\n\n  // Add new function for wrapping/unwrapping\n  const handleWrapUnwrap = async () => {\n    if (!address) {\n      toast.error('Please connect your wallet');\n      return;\n    }\n\n    if (!fromToken || !toToken || !fromAmount) {\n      toast.error('Please fill in all fields');\n      return;\n    }\n\n    setLoading(true);\n    setShowProgressModal(true);\n    setSwapStep('preparing');\n    setSwapError(null);\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const chainId = await provider.getNetwork().then(n => Number(n.chainId));\n      const parsedAmount = ethers.parseUnits(fromAmount, 18);\n\n      if (chainId === 10143) {\n        // Handle MON/WMONAD on Monad testnet\n        const wmonadContract = new ethers.Contract(\n          '0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701', // WMONAD address\n          WMONAD_ABI,\n          signer\n        );\n\n        if (fromToken.symbol === 'MON') {\n          // Wrap MON to WMONAD\n          setSwapStep('wrapping');\n          const tx = await wmonadContract.deposit({ value: parsedAmount });\n          setSwapStep('confirming');\n          await tx.wait();\n        } else {\n          // Unwrap WMONAD to MON\n          setSwapStep('unwrapping');\n          const tx = await wmonadContract.withdraw(parsedAmount);\n          setSwapStep('confirming');\n          await tx.wait();\n        }\n      } else {\n        // Original ETH/WETH handling for other networks\n        if (fromToken.symbol === 'ETH') {\n          // Wrap ETH to WETH\n          setSwapStep('wrapping');\n          const tx = await uniswap.wrapETH(parsedAmount);\n          setSwapStep('confirming');\n          await tx.wait();\n        } else {\n          // Unwrap WETH to ETH\n          setSwapStep('unwrapping');\n          const tx = await uniswap.unwrapWETH(parsedAmount);\n          setSwapStep('confirming');\n          await tx.wait();\n        }\n      }\n\n      setSwapStep('completed');\n      \n      // Show completed state briefly, then close modal and show confetti\n      setTimeout(() => {\n        setShowProgressModal(false);\n        setSwapStep(null);\n        setShowConfetti(true);\n        \n        setTimeout(() => {\n          setShowRatingModal(true);\n        }, 1000);\n        \n        setTimeout(() => {\n          setFromAmount('');\n          setToAmount('');\n          setShowConfetti(false);\n        }, 30000);\n      }, 1000);\n\n    } catch (error) {\n      console.error('Wrap/Unwrap error:', error);\n      setSwapError(error.message || 'Transaction failed. Please try again.');\n      setSwapStep('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper function to determine if it's a wrap/unwrap operation\n  const isWrapUnwrapOperation = () => {\n    if (currentChainId === 10143) {\n      return (fromToken?.symbol === 'MON' && toToken?.symbol === 'WMONAD') ||\n             (fromToken?.symbol === 'WMONAD' && toToken?.symbol === 'MON');\n    }\n    return (fromToken?.symbol === 'ETH' && toToken?.symbol === 'WETH') ||\n           (fromToken?.symbol === 'WETH' && toToken?.symbol === 'ETH');\n  };\n\n  // Helper function to get button text\n  const getActionButtonText = () => {\n    if (loading) return 'Processing...';\n    if (findingRoute) return 'Finding best route...';\n    if (!fromToken || !toToken) return 'Select Tokens';\n    if (!fromAmount) return 'Enter Amount';\n    if (routeError && !isWrapUnwrapOperation()) return 'No Route Available';\n    if (currentChainId === 10143) {\n      if (fromToken?.symbol === 'MON' && toToken?.symbol === 'WMONAD') return 'Wrap MON to WMONAD';\n      if (fromToken?.symbol === 'WMONAD' && toToken?.symbol === 'MON') return 'Unwrap WMONAD to MON';\n    }\n    if (fromToken?.symbol === 'ETH' && toToken?.symbol === 'WETH') return 'Wrap ETH to WETH';\n    if (fromToken?.symbol === 'WETH' && toToken?.symbol === 'ETH') return 'Unwrap WETH to ETH';\n    return 'Swap';\n  };\n\n  // Add these keyframes to your CSS/Tailwind config\n  const style = document.createElement('style');\n  style.textContent = `\n    @keyframes slideRight {\n      0% { transform: translateX(-4px); opacity: 0; }\n      20% { transform: translateX(0); opacity: 1; }\n      80% { transform: translateX(0); opacity: 1; }\n      100% { transform: translateX(4px); opacity: 0; }\n    }\n    @keyframes slideLeft {\n      0% { transform: translateX(4px); opacity: 0; }\n      20% { transform: translateX(0); opacity: 1; }\n      80% { transform: translateX(0); opacity: 1; }\n      100% { transform: translateX(-4px); opacity: 0; }\n    }\n    @keyframes fadeInOut {\n      0% { opacity: 0; }\n      50% { opacity: 1; }\n      100% { opacity: 0; }\n    }\n  `;\n  document.head.appendChild(style);\n\n  const handleRating = (rating) => {\n    console.log('User rated:', rating);\n    // Here you can implement the logic to save the rating\n  };\n\n  return (\n    <motion.div \n      className=\"space-y-6 max-w-lg mx-auto\"\n      variants={containerVariants}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n    >\n      {/* Add Confetti component with higher z-index */}\n      {showConfetti && (\n        <Confetti\n          width={windowSize.width}\n          height={windowSize.height}\n          numberOfPieces={200}\n          recycle={false}\n          gravity={0.2}\n          initialVelocityX={10}\n          initialVelocityY={10}\n          colors={['#00ffbd', '#00e6a9', '#00cc95', '#00b381', '#00996d']}\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 99999,\n            pointerEvents: 'none'\n          }}\n        />\n      )}\n\n      {/* Card Container */}\n      <motion.div \n        className=\"bg-white/5 dark:bg-[#1a1b1f] backdrop-blur-xl rounded-2xl p-6 border border-gray-200 dark:border-gray-800\"\n        variants={itemVariants}\n      >\n        {networkError ? (\n          <motion.div \n            className=\"text-center py-8\"\n            variants={itemVariants}\n          >\n            <motion.div \n              className=\"mb-4\"\n              whileHover={{ scale: 1.1 }}\n              transition={{ type: \"spring\", stiffness: 400, damping: 10 }}\n            >\n              <img src=\"/logo.png\" alt=\"Logo\" className=\"w-16 h-16 mx-auto mb-4\" />\n            </motion.div>\n            <motion.h2 \n              className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\"\n              variants={itemVariants}\n            >\n              {networkError}\n            </motion.h2>\n            <p className=\"text-gray-500 dark:text-gray-400\">\n              Trading is available on Unichain networks and Monad Testnet\n            </p>\n          </motion.div>\n        ) : (\n          <AnimatePresence mode=\"wait\">\n            <motion.div \n              className=\"space-y-4\"\n              variants={containerVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n            >\n              {/* From Token */}\n              <motion.div \n                className=\"space-y-2\"\n                variants={itemVariants}\n              >\n                <label className=\"block text-sm font-medium text-gray-900 dark:text-gray-100\">\n                  From\n                </label>\n                <motion.div \n                  className=\"relative\"\n                  whileHover={{ scale: 1.01 }}\n                  transition={{ type: \"spring\", stiffness: 300 }}\n                >\n                  <input\n                    type=\"text\"\n                    value={fromAmount}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n                        setFromAmount(value);\n                      }\n                    }}\n                    placeholder=\"0.0\"\n                    className=\"w-full px-4 py-3 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n                  />\n                  <motion.button\n                    onClick={() => {\n                      setActiveSide('from');\n                      setShowTokenSelector(true);\n                    }}\n                    className=\"absolute right-2 top-1/2 -translate-y-1/2 px-3 py-1.5 bg-white/10 dark:bg-[#2d2f36] rounded-lg text-sm font-medium text-gray-900 dark:text-white hover:bg-white/20 dark:hover:bg-[#2d2f36]/80 transition-colors border border-gray-200 dark:border-gray-800\"\n                    variants={buttonVariants}\n                    whileHover=\"hover\"\n                    whileTap=\"tap\"\n                  >\n                    {fromToken ? (\n                      <div className=\"flex items-center gap-2\">\n                        <img src={getTokenLogo(fromToken)} alt={fromToken.symbol} className=\"w-5 h-5\" />\n                        <span>{fromToken.symbol}</span>\n                      </div>\n                    ) : (\n                      'Select Token'\n                    )}\n                  </motion.button>\n                </motion.div>\n                {fromToken && <TokenBalance token={fromToken} />}\n              </motion.div>\n\n              {/* Swap Icon */}\n              <motion.div \n                className=\"flex justify-center my-4\"\n                variants={itemVariants}\n              >\n                <motion.button\n                  onClick={() => {\n                    const tempToken = fromToken;\n                    const tempAmount = fromAmount;\n                    setFromToken(toToken);\n                    setFromAmount(toAmount);\n                    setToToken(tempToken);\n                    setToAmount(tempAmount);\n                  }}\n                  className=\"p-2.5 rounded-xl bg-[#00ffbd]/10 text-[#00ffbd] hover:bg-[#00ffbd]/20 transition-colors border border-[#00ffbd]/20\"\n                  whileHover={{ rotate: 180 }}\n                  transition={{ type: \"spring\", stiffness: 200, damping: 10 }}\n                >\n                  <FaExchangeAlt size={16} />\n                </motion.button>\n              </motion.div>\n\n              {/* To Token */}\n              <motion.div \n                className=\"space-y-2\"\n                variants={itemVariants}\n              >\n                <label className=\"block text-sm font-medium text-gray-900 dark:text-gray-100\">\n                  To\n                </label>\n                <motion.div \n                  className=\"relative\"\n                  whileHover={{ scale: 1.01 }}\n                  transition={{ type: \"spring\", stiffness: 300 }}\n                >\n                  <input\n                    type=\"text\"\n                    value={toAmount}\n                    readOnly\n                    placeholder=\"0.0\"\n                    className=\"w-full px-4 py-3 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n                  />\n                  <motion.button\n                    onClick={() => {\n                      setActiveSide('to');\n                      setShowTokenSelector(true);\n                    }}\n                    className=\"absolute right-2 top-1/2 -translate-y-1/2 px-3 py-1.5 bg-white/10 dark:bg-[#2d2f36] rounded-lg text-sm font-medium text-gray-900 dark:text-white hover:bg-white/20 dark:hover:bg-[#2d2f36]/80 transition-colors border border-gray-200 dark:border-gray-800\"\n                    variants={buttonVariants}\n                    whileHover=\"hover\"\n                    whileTap=\"tap\"\n                  >\n                    {toToken ? (\n                      <div className=\"flex items-center gap-2\">\n                        <img src={getTokenLogo(toToken)} alt={toToken.symbol} className=\"w-5 h-5\" />\n                        <span>{toToken.symbol}</span>\n                      </div>\n                    ) : (\n                      'Select Token'\n                    )}\n                  </motion.button>\n                </motion.div>\n                {toToken && <TokenBalance token={toToken} />}\n              </motion.div>\n\n              {/* Trade Details Section */}\n              <AnimatePresence>\n                <motion.div \n                  className=\"mt-4 p-3 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800\"\n                  variants={itemVariants}\n                  initial=\"hidden\"\n                  animate=\"visible\"\n                  exit=\"exit\"\n                >\n                  {/* Compact View (Always Visible) */}\n                  <div className=\"space-y-2 text-sm mb-2\">\n                    <div className=\"flex justify-between items-center\">\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Fee (0.3%)</span>\n                        <span className=\"text-gray-500 cursor-help\" title=\"A portion of each trade (0.3%) goes to liquidity providers as a protocol incentive.\">ⓘ</span>\n                      </div>\n                      <span className=\"text-gray-200\">\n                        {fromAmount ? `${(Number(fromAmount) * 0.003).toFixed(6)} ${fromToken?.symbol}` : '--'}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Network cost</span>\n                        <span className=\"text-gray-500 cursor-help\" title=\"Estimated cost of the transaction on Ethereum\">ⓘ</span>\n                      </div>\n                      <span className=\"text-gray-200\">Check wallet for gas cost</span>\n                    </div>\n                  </div>\n\n                  {/* Divider */}\n                  <div className=\"border-t border-gray-200 dark:border-gray-800 my-2\"></div>\n\n                  {/* Show More Button */}\n                  <button\n                    onClick={() => setShowMoreDetails(!showMoreDetails)}\n                    className=\"flex items-center justify-between w-full text-sm text-gray-500 hover:text-gray-400\"\n                  >\n                    {showMoreDetails ? 'Hide Details' : 'Show Details'} \n                    <svg\n                      className={`w-4 h-4 transition-transform ${showMoreDetails ? 'rotate-180' : ''}`}\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </button>\n\n                  {/* Expanded Details */}\n                  {showMoreDetails && (\n                    <div className=\"space-y-3 pt-2 border-t border-gray-200 dark:border-gray-800\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-500\">Expected Output</span>\n                        <span className=\"text-gray-200\">{toAmount} {toToken?.symbol}</span>\n                      </div>\n\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-500\">Minimum received after slippage ({slippage}%)</span>\n                        <span className=\"text-gray-200\">\n                          {toAmount && Number(toAmount * (1 - slippage/100)).toFixed(6)} {toToken?.symbol}\n                        </span>\n                      </div>\n\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-500\">Route</span>\n                        <span className=\"text-gray-200\">{route || '--'}</span>\n                      </div>\n\n                      {exchangeRate && (\n                        <div className=\"flex justify-between text-sm\">\n                          <span className=\"text-gray-500\">Rate</span>\n                          <span className=\"text-gray-200\">\n                            1 {fromToken?.symbol} = {exchangeRate.toFixed(6)} {toToken?.symbol}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </motion.div>\n              </AnimatePresence>\n            </motion.div>\n          </AnimatePresence>\n        )}\n      </motion.div>\n\n      {/* Slippage Settings */}\n      <motion.div \n        className=\"bg-white/5 dark:bg-[#1a1b1f] backdrop-blur-xl rounded-2xl p-4 border border-gray-200 dark:border-gray-800\"\n        variants={itemVariants}\n      >\n        <div className=\"flex flex-col space-y-3\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\n              Slippage Tolerance\n            </span>\n            <div className=\"flex space-x-2\">\n              {[0.5, 1.0, 2.0].map((value) => (\n                <button\n                  key={value}\n                  onClick={() => handleSlippageChange(value.toString())}\n                  className={`px-3 py-1.5 text-sm rounded-xl transition-all\n                    ${slippage === value && !showCustomSlippage\n                      ? 'bg-[#00ffbd] text-black font-medium shadow-lg shadow-[#00ffbd]/20'\n                      : 'bg-white/5 dark:bg-[#2d2f36] text-gray-900 dark:text-gray-100 hover:bg-[#00ffbd]/10'\n                    } border border-gray-200 dark:border-gray-800`}\n                >\n                  {value}%\n                </button>\n              ))}\n              <button\n                onClick={() => handleSlippageChange('custom')}\n                className={`px-3 py-1.5 text-sm rounded-xl transition-all\n                  ${showCustomSlippage\n                    ? 'bg-[#00ffbd] text-black font-medium shadow-lg shadow-[#00ffbd]/20'\n                    : 'bg-white/5 dark:bg-[#2d2f36] text-gray-900 dark:text-gray-100 hover:bg-[#00ffbd]/10'\n                  } border border-gray-200 dark:border-gray-800`}\n              >\n                Custom\n              </button>\n            </div>\n          </div>\n          \n          {showCustomSlippage && (\n            <div className=\"flex items-center space-x-2 bg-white/5 dark:bg-[#2d2f36] rounded-xl p-2 border border-gray-200 dark:border-gray-800\">\n              <input\n                type=\"text\"\n                value={customSlippage}\n                onChange={handleCustomSlippageChange}\n                placeholder=\"Enter slippage %\"\n                className=\"w-full px-3 py-2 bg-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none\"\n              />\n              <span className=\"text-gray-900 dark:text-gray-100 pr-2\">%</span>\n            </div>\n          )}\n        </div>\n      </motion.div>\n\n      {/* Single Action Button */}\n      <motion.button\n        onClick={isWrapUnwrapOperation() ? handleWrapUnwrap : handleSwap}\n        disabled={loading || !fromToken || !toToken || !fromAmount || (!toAmount && !isWrapUnwrapOperation())}\n        className={`\n          w-full px-4 py-4 rounded-xl font-medium text-lg\n          ${loading || !fromToken || !toToken || !fromAmount || (!toAmount && !isWrapUnwrapOperation())\n            ? 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed text-gray-500 dark:text-gray-400'\n            : 'bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors text-black'\n          }\n        `}\n        variants={buttonVariants}\n        whileHover=\"hover\"\n        whileTap=\"tap\"\n      >\n        {getActionButtonText()}\n      </motion.button>\n\n      {/* Token Selector Modal */}\n      <TokenSelector\n        isOpen={showTokenSelector}\n        onClose={() => setShowTokenSelector(false)}\n        onSelect={handleTokenSelect}\n        excludeToken={activeSide === 'from' ? toToken : fromToken}\n      />\n\n      {isWrapUnwrapOperation() ? (\n        <WrapProgressModal\n          isOpen={showProgressModal}\n          onClose={() => {\n            setShowProgressModal(false);\n            setSwapStep(null);\n            setSwapError(null);\n          }}\n          currentStep={swapStep}\n          fromToken={fromToken}\n          toToken={toToken}\n          error={swapError}\n        />\n      ) : (\n        <SwapProgressModal\n          isOpen={showProgressModal}\n          onClose={() => {\n            setShowProgressModal(false);\n            setSwapStep(null);\n          }}\n          currentStep={swapStep}\n          tokenIn={fromToken}\n          tokenOut={toToken}\n          error={swapError}\n        />\n      )}\n\n      {/* Add Rating Modal */}\n      <StarRatingModal\n        isOpen={showRatingModal}\n        onClose={() => setShowRatingModal(false)}\n        onRate={handleRating}\n      />\n    </motion.div>\n  );\n} ","import React, { useState, useEffect, useCallback, useRef, Fragment } from 'react';\nimport { useAccount, useNetwork } from 'wagmi';\nimport { ethers } from 'ethers';\nimport { toast } from 'react-hot-toast';\nimport { BiWallet } from 'react-icons/bi';\nimport { FaExchangeAlt, FaStar } from 'react-icons/fa';\nimport { useUnichain } from '../../../../hooks/useUnichain';\nimport TokenSelector from '../shared/TokenSelector';\nimport { getTokenLogo } from '../../../../utils/tokens';\nimport { Dialog, Transition } from '@headlessui/react';\nimport Confetti from 'react-confetti';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Uniswap V3 Contract Addresses for Unichain\nconst UNISWAP_V3_ADDRESSES = {\n  swapRouter: '0xd1AAE39293221B77B0C71fBD6dCb7Ea29Bb5B166',\n  quoter: '0x6Dd37329A1A225a6Fca658265D460423DCafBF89',\n  WETH: '0x4200000000000000000000000000000000000006',\n  USDT: '0x70262e266E50603AcFc5D58997eF73e5a8775844'\n};\n\n// Add ERC20 ABI after UNISWAP_V3_ADDRESSES\nconst ERC20_ABI = [\n  'function approve(address spender, uint256 amount) external returns (bool)',\n  'function allowance(address owner, address spender) external view returns (uint256)',\n  'function balanceOf(address owner) external view returns (uint256)',\n  'function decimals() external view returns (uint8)',\n  'function symbol() external view returns (string)',\n  'function name() external view returns (string)'\n];\n\n// Add Quoter ABI\nconst QUOTER_ABI = [\n  'function quoteExactInput(bytes path, uint256 amountIn) external returns (uint256 amountOut, uint160[] sqrtPriceX96AfterList, uint32[] initializedTicksCrossedList, uint256 gasEstimate)',\n  'function quoteExactInputSingle(tuple(address tokenIn, address tokenOut, uint256 amountIn, uint24 fee, uint160 sqrtPriceLimitX96) params) external returns (uint256 amountOut, uint160 sqrtPriceX96After, uint32 initializedTicksCrossed, uint256 gasEstimate)'\n];\n\n// Add Swap Router ABI\nconst SWAP_ROUTER_ABI = [\n  'function exactInput(tuple(bytes path, address recipient, uint256 amountIn, uint256 amountOutMinimum) params) external payable returns (uint256 amountOut)',\n  'function exactInputSingle(tuple(address tokenIn, address tokenOut, uint24 fee, address recipient, uint256 amountIn, uint256 amountOutMinimum, uint160 sqrtPriceLimitX96) params) external payable returns (uint256 amountOut)',\n  'function exactOutput(tuple(bytes path, address recipient, uint256 amountOut, uint256 amountInMaximum) params) external payable returns (uint256 amountIn)',\n  'function exactOutputSingle(tuple(address tokenIn, address tokenOut, uint24 fee, address recipient, uint256 amountOut, uint256 amountInMaximum, uint160 sqrtPriceLimitX96) params) external payable returns (uint256 amountIn)',\n  'function multicall(bytes[] data) external payable returns (bytes[] results)',\n  'function wrapETH(uint256 value) external payable',\n  'function unwrapWETH9(uint256 amountMinimum, address recipient) external payable',\n  'function WETH9() external view returns (address)',\n  'function refundETH() external payable',\n  'function selfPermit(address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external payable',\n  'function sweepToken(address token, uint256 amountMinimum, address recipient) external payable'\n];\n\n// Add Tooltip component\nconst Tooltip = ({ children, content }) => {\n  const [show, setShow] = useState(false);\n\n  return (\n    <div className=\"relative inline-block\">\n      <div\n        onMouseEnter={() => setShow(true)}\n        onMouseLeave={() => setShow(false)}\n      >\n        {children}\n      </div>\n      {show && (\n        <div className=\"absolute z-50 px-3 py-2 text-sm bg-gray-900 text-white rounded-lg shadow-lg whitespace-nowrap\">\n          {content}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Add these modern DeFi-inspired icons for swap steps\nconst Icons = {\n  Preparing: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path className=\"animate-[spin_1s_linear_infinite]\" \n          d=\"M12 6v1M12 17v1M7.05 7.05l.707.707M16.243 16.243l.707.707M6 12h1M17 12h1M7.757 16.243l-.707.707M16.95 7.05l-.707.707\">\n        </path>\n        <path \n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" \n          strokeOpacity=\"0.2\" \n        />\n        <path \n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2\" \n          strokeLinecap=\"round\" \n          className=\"origin-center animate-[spin_1.5s_linear_infinite]\" \n        />\n      </g>\n    </svg>\n  ),\n  Approval: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <path className=\"animate-[draw_1s_ease-in-out]\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} stroke=\"currentColor\"\n        d=\"M7 11l3 3L19 5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        strokeDasharray=\"60\"\n        strokeDashoffset=\"60\">\n        <animate\n          attributeName=\"stroke-dashoffset\"\n          from=\"60\"\n          to=\"0\"\n          dur=\"0.6s\"\n          fill=\"freeze\"\n        />\n      </path>\n    </svg>\n  ),\n  Swapping: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        {/* Background circle */}\n        <path \n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" \n          strokeOpacity=\"0.2\" \n        />\n        \n        {/* Top arrow */}\n        <path \n          className=\"origin-center animate-[slideRight_1.5s_ease-in-out_infinite]\"\n          strokeLinecap=\"round\" \n          strokeLinejoin=\"round\"\n          d=\"M6 9h8l-2.5-2.5M6 9l2.5 2.5M6 9\"\n        >\n          <animate\n            attributeName=\"opacity\"\n            values=\"0;1;1;0\"\n            dur=\"1.5s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        \n        {/* Bottom arrow */}\n        <path \n          className=\"origin-center animate-[slideLeft_1.5s_ease-in-out_infinite]\"\n          strokeLinecap=\"round\" \n          strokeLinejoin=\"round\"\n          d=\"M18 15h-8l2.5-2.5M18 15l-2.5 2.5M18 15\"\n        >\n          <animate\n            attributeName=\"opacity\"\n            values=\"0;1;1;0\"\n            dur=\"1.5s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n\n        {/* Animated dots */}\n        <circle cx=\"18\" cy=\"9\" r=\"0.5\" className=\"animate-[fadeInOut_1.5s_ease-in-out_infinite]\">\n          <animate\n            attributeName=\"opacity\"\n            values=\"0;1;0\"\n            dur=\"1.5s\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <circle cx=\"6\" cy=\"15\" r=\"0.5\" className=\"animate-[fadeInOut_1.5s_ease-in-out_infinite_0.75s]\">\n          <animate\n            attributeName=\"opacity\"\n            values=\"0;1;0\"\n            dur=\"1.5s\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </g>\n    </svg>\n  ),\n  Confirming: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n        <path strokeLinecap=\"round\" className=\"origin-center animate-[spin_2s_linear_infinite]\"\n          d=\"M12 6v6l4 4\" />\n      </g>\n    </svg>\n  ),\n  Completed: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g>\n        <path className=\"animate-[draw_0.6s_ease-in-out]\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} stroke=\"currentColor\"\n          d=\"M7 13l3 3L17 8\" strokeDasharray=\"60\" strokeDashoffset=\"60\">\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            from=\"60\"\n            to=\"0\"\n            dur=\"0.6s\"\n            fill=\"freeze\"\n          />\n        </path>\n        <path fill=\"currentColor\" fillOpacity=\"0.2\" d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n      </g>\n    </svg>\n  ),\n  Error: () => (\n    <svg className=\"w-6 h-6 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n    </svg>\n  )\n};\n\n// Add modern icons for wrapping/unwrapping\nconst WrapIcons = {\n  Preparing: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path className=\"animate-[spin_1s_linear_infinite]\" \n          d=\"M12 6v1M12 17v1M7.05 7.05l.707.707M16.243 16.243l.707.707M6 12h1M17 12h1M7.757 16.243l-.707.707M16.95 7.05l-.707.707\">\n        </path>\n        <path \n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" \n          strokeOpacity=\"0.2\" \n        />\n        <path \n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2\" \n          strokeLinecap=\"round\" \n          className=\"origin-center animate-[spin_1.5s_linear_infinite]\" \n        />\n      </g>\n    </svg>\n  ),\n  Wrapping: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        {/* Box */}\n        <path className=\"animate-[draw_1s_ease-in-out]\" \n          strokeLinecap=\"round\" \n          strokeLinejoin=\"round\"\n          d=\"M12 3l7 4v10l-7 4-7-4V7l7-4z\"\n          strokeDasharray=\"60\"\n          strokeDashoffset=\"60\"\n        >\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            from=\"60\"\n            to=\"0\"\n            dur=\"1s\"\n            fill=\"freeze\"\n          />\n        </path>\n        {/* Animated ribbon */}\n        <path \n          className=\"origin-center animate-[spin_3s_linear_infinite]\"\n          strokeLinecap=\"round\"\n          d=\"M12 3v18M5 7l14 8M19 7l-14 8\"\n          strokeDasharray=\"4 4\"\n        />\n        {/* Animated dots */}\n        <circle cx=\"12\" cy=\"12\" r=\"1\" className=\"animate-[pulse_2s_ease-in-out_infinite]\">\n          <animate\n            attributeName=\"r\"\n            values=\"0;1;0\"\n            dur=\"2s\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </g>\n    </svg>\n  ),\n  Unwrapping: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        {/* Box opening animation */}\n        <path \n          className=\"origin-bottom animate-[openBox_1.5s_ease-in-out_infinite]\"\n          strokeLinecap=\"round\" \n          strokeLinejoin=\"round\"\n          d=\"M12 3l7 4v10l-7 4-7-4V7l7-4z\"\n        >\n          <animate\n            attributeName=\"d\"\n            values=\"M12 3l7 4v10l-7 4-7-4V7l7-4z;M12 3l7 0v14l-7 4-7-4V3l7 0z\"\n            dur=\"1.5s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        {/* Animated particles */}\n        <g className=\"animate-[float_2s_ease-in-out_infinite]\">\n          <circle cx=\"12\" cy=\"12\" r=\"0.5\" />\n          <circle cx=\"14\" cy=\"10\" r=\"0.5\" />\n          <circle cx=\"10\" cy=\"10\" r=\"0.5\" />\n          <animate\n            attributeName=\"opacity\"\n            values=\"0;1;0\"\n            dur=\"2s\"\n            repeatCount=\"indefinite\"\n          />\n        </g>\n      </g>\n    </svg>\n  ),\n  Confirming: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n        <path strokeLinecap=\"round\" className=\"origin-center animate-[spin_2s_linear_infinite]\"\n          d=\"M12 6v6l4 4\" />\n      </g>\n    </svg>\n  )\n};\n\n// V3-specific constants\nconst FEE_TIERS = {\n  LOWEST: 100,   // 0.01%\n  LOW: 500,      // 0.05%\n  MEDIUM: 3000,  // 0.3%\n  HIGH: 10000    // 1%\n};\n\n// Add balance display component\nconst TokenBalance = ({ token }) => {\n  const { address: userAddress } = useAccount();\n  const uniswap = useUnichain();\n  const [balance, setBalance] = useState('0');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      if (!userAddress || !token || !uniswap) return;\n      \n      try {\n        setIsLoading(true);\n        const balance = await uniswap.getTokenBalance(\n          token.symbol === 'ETH' ? 'ETH' : token.address,\n          userAddress\n        );\n        setBalance(balance);\n      } catch (error) {\n        console.error('Error fetching balance:', error);\n        setBalance('0');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchBalance();\n  }, [token, userAddress, uniswap]);\n\n  if (!token) return null;\n\n  return (\n    <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n      Balance: {isLoading ? 'Loading...' : balance} {token.symbol}\n    </div>\n  );\n};\n\n// Helper function to encode path for V3 swaps\nfunction encodePath(path, fees) {\n  if (path.length !== fees.length + 1) {\n    throw new Error('path/fee lengths do not match');\n  }\n\n  let encoded = '0x';\n  for (let i = 0; i < fees.length; i++) {\n    // Remove '0x' prefix and pad address to 32 bytes\n    encoded += path[i].slice(2).padStart(40, '0');\n    // Encode fee as uint24\n    encoded += fees[i].toString(16).padStart(6, '0');\n  }\n  // Add final token address\n  encoded += path[path.length - 1].slice(2).padStart(40, '0');\n  return encoded;\n}\n\n// Add SwapProgressModal component\nconst SwapProgressModal = ({ isOpen, onClose, currentStep, tokenIn, tokenOut, error }) => {\n  const steps = [\n    { id: 'preparing', title: 'Preparing', icon: <Icons.Preparing /> },\n    { id: 'approval', title: 'Token Approval', icon: <Icons.Approval /> },\n    { id: 'swapping', title: 'Swapping', icon: <Icons.Swapping /> },\n    { id: 'confirming', title: 'Confirming', icon: <Icons.Confirming /> },\n    { id: 'completed', title: 'Completed', icon: <Icons.Completed /> }\n  ];\n\n  const isError = Boolean(error);\n\n  // Format error message to be more user-friendly\n  const formatErrorMessage = (error) => {\n    if (error?.includes('user rejected')) {\n      return 'Transaction was rejected. Please try again.';\n    }\n    if (error?.includes('insufficient')) {\n      return 'Insufficient balance for swap.';\n    }\n    if (error?.includes('INSUFFICIENT_OUTPUT_AMOUNT')) {\n      return 'Price impact too high, try a smaller amount.';\n    }\n    if (error?.includes('EXCESSIVE_INPUT_AMOUNT')) {\n      return 'Insufficient liquidity for this trade.';\n    }\n    return error?.replace(/\\{\"action\":\"sendTransaction\".*$/, '') || 'An error occurred';\n  };\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\n                >\n                  {isError ? 'Error Swapping Tokens' : 'Swapping Tokens'}\n                  {!isError && tokenIn && tokenOut && (\n                    <div className=\"mt-2 text-base font-normal text-gray-500 dark:text-gray-400\">\n                      {tokenIn.symbol} → {tokenOut.symbol}\n                    </div>\n                  )}\n                </Dialog.Title>\n\n                <div className=\"space-y-4\">\n                  {steps.map((step, index) => {\n                    const isActive = currentStep === step.id;\n                    const isCompleted = !isError && steps.findIndex(s => s.id === currentStep) > index;\n                    const isErrorStep = isError && currentStep === step.id;\n                    \n                    return (\n                      <div\n                        key={step.id}\n                        className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\n                          isActive && !isErrorStep ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : \n                          isCompleted ? 'text-[#00ffbd]' : \n                          isErrorStep ? 'bg-red-500/10 text-red-500' : \n                          'text-gray-400'\n                        }`}\n                      >\n                        {step.icon}\n                        <div className=\"flex-1\">\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{step.title}</span>\n                          {isActive && !isError && (\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                              {step.id === 'preparing' && 'Preparing transaction...'}\n                              {step.id === 'approval' && `Approving ${tokenIn?.symbol}`}\n                              {step.id === 'swapping' && `Swapping ${tokenIn?.symbol} for ${tokenOut?.symbol}`}\n                              {step.id === 'confirming' && 'Waiting for confirmation...'}\n                              {step.id === 'completed' && `Successfully swapped ${tokenIn?.symbol} for ${tokenOut?.symbol}!`}\n                            </p>\n                          )}\n                        </div>\n                        {isCompleted && (\n                          <svg className=\"w-5 h-5 text-[#00ffbd]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {isError && (\n                  <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\n                    <div className=\"flex items-start gap-3\">\n                      <Icons.Error />\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\n                        <p className=\"mt-1 text-sm text-red-400\">\n                          {formatErrorMessage(error)}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4 flex justify-end\">\n                      <button\n                        onClick={onClose}\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {currentStep === 'completed' && (\n                  <div className=\"mt-6\">\n                    <button\n                      onClick={onClose}\n                      className=\"w-full px-4 py-3 rounded-xl font-medium bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors text-black\"\n                    >\n                      Close\n                    </button>\n                  </div>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Update WrapProgressModal component\nconst WrapProgressModal = ({ isOpen, onClose, currentStep, fromToken, toToken, error }) => {\n  const isWrapping = fromToken?.symbol === 'ETH';\n  const steps = [\n    { id: 'preparing', title: 'Preparing', icon: <WrapIcons.Preparing /> },\n    { id: 'wrapping', title: isWrapping ? 'Wrapping ETH' : 'Unwrapping WETH', icon: isWrapping ? <WrapIcons.Wrapping /> : <WrapIcons.Unwrapping /> },\n    { id: 'confirming', title: 'Confirming', icon: <WrapIcons.Confirming /> },\n    { id: 'completed', title: 'Completed', icon: <Icons.Completed /> }\n  ];\n\n  const isError = Boolean(error);\n\n  // Format error message to be more user-friendly\n  const formatErrorMessage = (error) => {\n    if (error?.includes('user rejected')) {\n      return 'Transaction was rejected. Please try again.';\n    }\n    if (error?.includes('insufficient')) {\n      return `Insufficient ${isWrapping ? 'ETH' : 'WETH'} balance.`;\n    }\n    return error?.replace(/\\{\"action\":\"sendTransaction\".*$/, '') || 'An error occurred';\n  };\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\n                >\n                  {isError ? 'Error Processing Transaction' : (isWrapping ? 'Wrapping ETH' : 'Unwrapping WETH')}\n                </Dialog.Title>\n\n                <div className=\"space-y-4\">\n                  {steps.map((step, index) => {\n                    const isActive = currentStep === step.id;\n                    const isCompleted = !isError && steps.findIndex(s => s.id === currentStep) > index;\n                    const isErrorStep = isError && currentStep === step.id;\n                    \n                    return (\n                      <div\n                        key={step.id}\n                        className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\n                          isActive && !isErrorStep ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : \n                          isCompleted ? 'text-[#00ffbd]' : \n                          isErrorStep ? 'bg-red-500/10 text-red-500' : \n                          'text-gray-400'\n                        }`}\n                      >\n                        {step.icon}\n                        <div className=\"flex-1\">\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{step.title}</span>\n                          {isActive && !isError && (\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                              {step.id === 'preparing' && 'Preparing transaction...'}\n                              {step.id === 'wrapping' && (isWrapping \n                                ? 'Converting ETH to WETH...' \n                                : 'Converting WETH to ETH...')}\n                              {step.id === 'confirming' && 'Waiting for confirmation...'}\n                              {step.id === 'completed' && (isWrapping \n                                ? 'Successfully wrapped ETH to WETH!' \n                                : 'Successfully unwrapped WETH to ETH!')}\n                            </p>\n                          )}\n                        </div>\n                        {isCompleted && (\n                          <svg className=\"w-5 h-5 text-[#00ffbd]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {isError && (\n                  <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\n                    <div className=\"flex items-start gap-3\">\n                      <Icons.Error />\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\n                        <p className=\"mt-1 text-sm text-red-400\">\n                          {formatErrorMessage(error)}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4 flex justify-end\">\n                      <button\n                        onClick={onClose}\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {currentStep === 'completed' && (\n                  <div className=\"mt-6\">\n                    <button\n                      onClick={onClose}\n                      className=\"w-full px-4 py-3 rounded-xl font-medium bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors text-black\"\n                    >\n                      Close\n                    </button>\n                  </div>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nexport default function TokenSwap() {\n  const { address } = useAccount();\n  const { chain } = useNetwork();\n  \n  // Add shared provider ref\n  const providerRef = useRef(null);\n  const quoterContractRef = useRef(null);\n\n  // Initialize shared provider\n  useEffect(() => {\n    if (window.ethereum) {\n      providerRef.current = new ethers.BrowserProvider(window.ethereum);\n      quoterContractRef.current = new ethers.Contract(\n        UNISWAP_V3_ADDRESSES.quoter,\n        QUOTER_ABI,\n        providerRef.current\n      );\n    }\n  }, []);\n\n  // Token states\n  const [fromToken, setFromToken] = useState(null);\n  const [toToken, setToToken] = useState(null);\n  const [fromAmount, setFromAmount] = useState('');\n  const [toAmount, setToAmount] = useState('');\n  \n  // UI states\n  const [loading, setLoading] = useState(false);\n  const [showTokenSelector, setShowTokenSelector] = useState(false);\n  const [activeSide, setActiveSide] = useState('from');\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showProgressModal, setShowProgressModal] = useState(false);\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [swapStep, setSwapStep] = useState(null);\n  const [swapError, setSwapError] = useState(null);\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  const [showMoreDetails, setShowMoreDetails] = useState(false);\n  const [slippage, setSlippage] = useState(0.5);\n  const [showCustomSlippage, setShowCustomSlippage] = useState(false);\n  const [routeInfo, setRouteInfo] = useState(null);\n  const [priceImpact, setPriceImpact] = useState(null);\n  const [routeError, setRouteError] = useState(null);\n  const [findingRoute, setFindingRoute] = useState(false);\n\n  // Add window resize handler\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Add a cleanup ref\n  const abortController = useRef(null);\n\n  // Move getSmartRoute inside component\n  const getSmartRoute = useCallback(async (fromTokenObj, toTokenObj, amountIn) => {\n    if (!quoterContractRef.current) return null;\n\n    // If direct route exists, use it\n    const directPath = encodePath(\n      [fromTokenObj.address, toTokenObj.address],\n      [FEE_TIERS.MEDIUM]\n    );\n\n    try {\n      const [directQuote] = await quoterContractRef.current.quoteExactInput(directPath, amountIn);\n      return {\n        path: [fromTokenObj.address, toTokenObj.address],\n        fees: [FEE_TIERS.MEDIUM],\n        quote: directQuote,\n        isDirectRoute: true\n      };\n    } catch (error) {\n      // If direct route fails and toToken is USDT, try routing through WETH\n      if (toTokenObj.address.toLowerCase() === UNISWAP_V3_ADDRESSES.USDT.toLowerCase()) {\n        try {\n          // Get quote for token -> WETH\n          const pathToWeth = encodePath(\n            [fromTokenObj.address, UNISWAP_V3_ADDRESSES.WETH],\n            [FEE_TIERS.MEDIUM]\n          );\n          const [wethQuote] = await quoterContractRef.current.quoteExactInput(pathToWeth, amountIn);\n\n          // Get quote for WETH -> USDT\n          const pathToUsdt = encodePath(\n            [UNISWAP_V3_ADDRESSES.WETH, UNISWAP_V3_ADDRESSES.USDT],\n            [FEE_TIERS.MEDIUM]\n          );\n          const [finalQuote] = await quoterContractRef.current.quoteExactInput(pathToUsdt, wethQuote);\n\n          return {\n            path: [fromTokenObj.address, UNISWAP_V3_ADDRESSES.WETH, UNISWAP_V3_ADDRESSES.USDT],\n            fees: [FEE_TIERS.MEDIUM, FEE_TIERS.MEDIUM],\n            quote: finalQuote,\n            isDirectRoute: false\n          };\n        } catch (error) {\n          console.error('Failed to route through WETH:', error);\n          return null;\n        }\n      }\n      return null;\n    }\n  }, []);\n\n  // Helper function to determine if it's a wrap/unwrap operation\n  const isWrapUnwrapOperation = useCallback(() => {\n    return (fromToken?.symbol === 'ETH' && toToken?.symbol === 'WETH') ||\n           (fromToken?.symbol === 'WETH' && toToken?.symbol === 'ETH');\n  }, [fromToken?.symbol, toToken?.symbol]);\n\n  // Update getQuote function\n  const getQuote = useCallback(async () => {\n    if (!fromToken || !toToken || !fromAmount || !chain?.id || !quoterContractRef.current) return;\n\n    try {\n      setFindingRoute(true);\n      setRouteError(null); // Clear any previous errors when starting a new quote\n      if (abortController.current) {\n        abortController.current.abort();\n      }\n      abortController.current = new AbortController();\n\n      const amountIn = ethers.parseUnits(fromAmount, fromToken.decimals);\n\n      // Handle ETH/WETH cases\n      const effectiveFromToken = fromToken.symbol === 'ETH' ? UNISWAP_V3_ADDRESSES.WETH : fromToken.address;\n      const effectiveToToken = toToken.symbol === 'ETH' ? UNISWAP_V3_ADDRESSES.WETH : toToken.address;\n\n      // Try common routing paths\n      const routingPaths = [\n        // Direct path with different fee tiers\n        { path: [effectiveFromToken, effectiveToToken], fees: [3000] },\n        { path: [effectiveFromToken, effectiveToToken], fees: [500] },\n        { path: [effectiveFromToken, effectiveToToken], fees: [10000] }\n      ];\n\n      // If not a direct pair with WETH, add paths through WETH\n      if (!routingPaths[0].path.includes(UNISWAP_V3_ADDRESSES.WETH)) {\n        routingPaths.push(\n          { \n            path: [effectiveFromToken, UNISWAP_V3_ADDRESSES.WETH, effectiveToToken], \n            fees: [3000, 3000] \n          },\n          { \n            path: [effectiveFromToken, UNISWAP_V3_ADDRESSES.WETH, effectiveToToken], \n            fees: [500, 500] \n          },\n          { \n            path: [effectiveFromToken, UNISWAP_V3_ADDRESSES.WETH, effectiveToToken], \n            fees: [3000, 500] \n          },\n          { \n            path: [effectiveFromToken, UNISWAP_V3_ADDRESSES.WETH, effectiveToToken], \n            fees: [500, 3000] \n          }\n        );\n      }\n\n      let bestAmountOut = 0n;\n      let bestPath = null;\n\n      for (const route of routingPaths) {\n        try {\n          const path = encodePath(route.path, route.fees);\n          const [quotedAmountOut] = await quoterContractRef.current.quoteExactInput.staticCall(\n            path,\n            amountIn\n          );\n\n          if (quotedAmountOut > bestAmountOut) {\n            bestAmountOut = quotedAmountOut;\n            bestPath = route;\n          }\n        } catch (error) {\n          continue;\n        }\n      }\n\n      if (bestAmountOut === 0n || !bestPath) {\n        setToAmount('');\n        setRouteInfo(null);\n        // Only set route error if we're not currently typing (use a small delay)\n        if (fromAmount && fromAmount.length > 0) {\n          setTimeout(() => {\n            if (!findingRoute) {\n              setRouteError('No liquidity found');\n            }\n          }, 500);\n        }\n        return;\n      }\n\n      const formattedAmount = ethers.formatUnits(bestAmountOut, toToken.decimals);\n      setToAmount(formattedAmount);\n      setRouteError(null);\n\n      // Store route information\n      const route = {\n        path: bestPath.path.map((address, index) => {\n          const isWETH = address.toLowerCase() === UNISWAP_V3_ADDRESSES.WETH.toLowerCase();\n          return {\n            symbol: isWETH ? 'WETH' :\n                    address.toLowerCase() === fromToken.address?.toLowerCase() ? fromToken.symbol :\n                    address.toLowerCase() === toToken.address?.toLowerCase() ? toToken.symbol : 'Unknown',\n          };\n        }),\n        expectedOutput: formattedAmount,\n        priceImpact: 0,\n        fees: bestPath.fees\n      };\n\n      // If the path ends with WETH and toToken is ETH, add ETH to the path\n      if (toToken.symbol === 'ETH') {\n        route.path.push({ symbol: 'ETH' });\n      }\n      // If the path starts with WETH and fromToken is ETH, add ETH to the beginning\n      if (fromToken.symbol === 'ETH') {\n        route.path.unshift({ symbol: 'ETH' });\n      }\n\n      // Calculate price impact\n      const calculatePriceImpact = async () => {\n        try {\n          const midPriceAmountIn = ethers.parseUnits('1', fromToken.decimals);\n          const path = encodePath(bestPath.path, bestPath.fees);\n          const [midPriceAmountOut] = await quoterContractRef.current.quoteExactInput.staticCall(\n            path,\n            midPriceAmountIn\n          );\n          \n          const expectedOutput = (amountIn * midPriceAmountOut) / midPriceAmountIn;\n          const impact = ((expectedOutput - bestAmountOut) * 10000n) / expectedOutput;\n          return Number(impact) / 100;\n        } catch (error) {\n          console.error('Error calculating price impact:', error);\n          return 0;\n        }\n      };\n\n      const impact = await calculatePriceImpact();\n      route.priceImpact = impact;\n      setRouteInfo(route);\n      setPriceImpact(impact);\n\n    } catch (error) {\n      if (error.name === 'AbortError') return;\n      console.error('Error getting quote:', error);\n      // Only set route error if we're not currently typing\n      if (fromAmount && fromAmount.length > 0) {\n        setTimeout(() => {\n          if (!findingRoute) {\n            setRouteError('Error finding route');\n          }\n        }, 500);\n      }\n    } finally {\n      setFindingRoute(false);\n    }\n  }, [fromToken, toToken, fromAmount, chain?.id]);\n\n  // Update quote when inputs change\n  useEffect(() => {\n    if (fromToken && toToken && fromAmount) {\n      if (isWrapUnwrapOperation()) {\n        // For wrap/unwrap operations, set toAmount equal to fromAmount (1:1 conversion)\n        setToAmount(fromAmount);\n        setRouteInfo(null);\n        setRouteError(null);\n        setPriceImpact(null);\n      } else {\n        getQuote();\n      }\n    } else {\n      setToAmount('');\n      setPriceImpact(null);\n    }\n  }, [fromToken, toToken, fromAmount, getQuote, isWrapUnwrapOperation]);\n\n  // Update checkAndSetAllowance function\n  const checkAndSetAllowance = async (token, amount) => {\n    if (!token || token.symbol === 'ETH' || !providerRef.current) return true;\n\n    try {\n      const signer = await providerRef.current.getSigner();\n      const tokenContract = new ethers.Contract(token.address, ERC20_ABI, signer);\n      \n      const [routerAllowance] = await Promise.all([\n        tokenContract.allowance(address, UNISWAP_V3_ADDRESSES.swapRouter)\n      ]);\n\n      if (routerAllowance < amount) {\n        const maxApproval = ethers.MaxUint256;\n        const approveTx = await tokenContract.approve(\n          UNISWAP_V3_ADDRESSES.swapRouter,\n          maxApproval\n        );\n        await approveTx.wait();\n      }\n      return true;\n    } catch (error) {\n      console.error('Error in checkAndSetAllowance:', error);\n      return false;\n    }\n  };\n\n  // Update the swap function to use Unichain's contract addresses\n  const handleSwap = async () => {\n    if (!address || !fromToken || !toToken || !fromAmount || !chain?.id || !providerRef.current) {\n      toast.error('Please fill in all fields');\n      return;\n    }\n\n    setLoading(true);\n    setShowProgressModal(true);\n    setSwapStep('preparing');\n    setSwapError(null);\n\n    try {\n      const signer = await providerRef.current.getSigner();\n      const amountIn = ethers.parseUnits(fromAmount, fromToken.decimals);\n\n      // Handle ETH <-> WETH wrapping/unwrapping\n      if (isWrapUnwrapOperation()) {\n        const wethContract = new ethers.Contract(\n          UNISWAP_V3_ADDRESSES.WETH,\n          [\n            'function deposit() external payable',\n            'function withdraw(uint256) external',\n            'function approve(address spender, uint256 amount) external returns (bool)'\n          ],\n          signer\n        );\n\n        setSwapStep('wrapping');\n        let tx;\n\n        if (fromToken.symbol === 'ETH' && toToken.symbol === 'WETH') {\n          // Wrap ETH to WETH using deposit()\n          tx = await wethContract.deposit({\n            value: amountIn\n          });\n        } else {\n          // Unwrap WETH to ETH using withdraw()\n          tx = await wethContract.withdraw(amountIn);\n        }\n\n        setSwapStep('confirming');\n        await tx.wait();\n        setSwapStep('completed');\n\n        // Show completed state briefly, then close modal and show confetti\n        setTimeout(() => {\n          setShowProgressModal(false);\n          setSwapStep(null);\n          \n          setTimeout(() => {\n            setShowConfetti(true);\n            \n            setTimeout(() => {\n              setShowRatingModal(true);\n            }, 1000);\n            \n            setTimeout(() => {\n              setFromAmount('');\n              setToAmount('');\n              setShowConfetti(false);\n            }, 30000);\n          }, 100);\n        }, 1000);\n\n        return;\n      }\n\n      // Handle normal token swaps\n      if (!isWrapUnwrapOperation()) {\n        // Check and set allowance if needed\n        if (fromToken.symbol !== 'ETH') {\n          setSwapStep('approval');\n          const approved = await checkAndSetAllowance(fromToken, amountIn);\n          if (!approved) {\n            setSwapError('Failed to approve token');\n            setSwapStep('error');\n            return;\n          }\n        }\n\n        // Parse amounts\n        const parsedToAmount = ethers.parseUnits(toAmount, toToken.decimals);\n        const slippageMultiplier = BigInt(Math.floor((100 - slippage) * 100));\n        const amountOutMin = (parsedToAmount * slippageMultiplier) / 10000n;\n\n        setSwapStep('swapping');\n        const router = new ethers.Contract(\n          UNISWAP_V3_ADDRESSES.swapRouter,\n          SWAP_ROUTER_ABI,\n          signer\n        );\n\n        const deadline = Math.floor(Date.now() / 1000) + 1200; // 20 minutes\n\n        let tx;\n        if (fromToken.symbol === 'ETH' || toToken.symbol === 'ETH') {\n          // Handle ETH <-> ERC20 swaps\n          const effectiveFromToken = fromToken.symbol === 'ETH' ? UNISWAP_V3_ADDRESSES.WETH : fromToken.address;\n          const effectiveToToken = toToken.symbol === 'ETH' ? UNISWAP_V3_ADDRESSES.WETH : toToken.address;\n          \n          const path = encodePath(\n            [effectiveFromToken, effectiveToToken],\n            [FEE_TIERS.MEDIUM]\n          );\n\n          // Get gas estimate first\n          const gasEstimate = await router.exactInput.estimateGas(\n            {\n              path,\n              recipient: toToken.symbol === 'ETH' ? UNISWAP_V3_ADDRESSES.swapRouter : address,\n              deadline,\n              amountIn,\n              amountOutMinimum: amountOutMin\n            },\n            { value: fromToken.symbol === 'ETH' ? amountIn : 0 }\n          );\n\n          // Add 20% buffer to gas estimate\n          const gasLimit = gasEstimate * 120n / 100n;\n\n          if (toToken.symbol === 'ETH') {\n            // If output token is ETH, we need to unwrap WETH\n            const swapData = router.interface.encodeFunctionData('exactInput', [params]);\n            const unwrapData = router.interface.encodeFunctionData('unwrapWETH9', [amountOutMin, address]);\n            const refundData = router.interface.encodeFunctionData('refundETH');\n            \n            tx = await router.multicall(\n              [swapData, unwrapData, refundData],\n              {\n                value: fromToken.symbol === 'ETH' ? amountIn : 0,\n                gasLimit\n              }\n            );\n          } else {\n            tx = await router.exactInput(\n              {\n                path,\n                recipient: address,\n                deadline,\n                amountIn,\n                amountOutMinimum: amountOutMin\n              },\n              {\n                value: fromToken.symbol === 'ETH' ? amountIn : 0,\n                gasLimit\n              }\n            );\n          }\n        } else {\n          // Handle ERC20 <-> ERC20 swaps\n          const path = encodePath(\n            routeInfo.path.map(token => \n              token.symbol === 'WETH' ? UNISWAP_V3_ADDRESSES.WETH : \n              token.symbol === fromToken.symbol ? fromToken.address : \n              toToken.address\n            ),\n            routeInfo.fees\n          );\n\n          // Get gas estimate first\n          const gasEstimate = await router.exactInput.estimateGas({\n            path,\n            recipient: address,\n            deadline,\n            amountIn,\n            amountOutMinimum: amountOutMin\n          });\n\n          // Add 20% buffer to gas estimate\n          const gasLimit = gasEstimate * 120n / 100n;\n\n          tx = await router.exactInput(\n            {\n              path,\n              recipient: address,\n              deadline,\n              amountIn,\n              amountOutMinimum: amountOutMin\n            },\n            { gasLimit }\n          );\n        }\n\n        setSwapStep('confirming');\n        await tx.wait();\n        setSwapStep('completed');\n\n        // Show completed state briefly, then close modal and show confetti\n        setTimeout(() => {\n          setShowProgressModal(false);\n          setSwapStep(null);\n          \n          setTimeout(() => {\n            setShowConfetti(true);\n            \n            setTimeout(() => {\n              setShowRatingModal(true);\n            }, 1000);\n            \n            setTimeout(() => {\n              setFromAmount('');\n              setToAmount('');\n              setShowConfetti(false);\n            }, 30000);\n          }, 100);\n        }, 1000);\n      }\n\n    } catch (error) {\n      console.error('Swap error:', error);\n      let errorMessage = 'Failed to swap tokens';\n      \n      // Handle specific error cases\n      if (error.code === 'CALL_EXCEPTION') {\n        errorMessage = 'Transaction failed - insufficient gas or contract error';\n      } else if (error.code === 'UNPREDICTABLE_GAS_LIMIT') {\n        errorMessage = 'Unable to estimate gas - the transaction may fail';\n      } else if (error.reason) {\n        errorMessage = error.reason;\n      }\n      \n      setSwapError(errorMessage);\n      setSwapStep('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSlippageChange = (value) => {\n    if (value === 'custom') {\n      setShowCustomSlippage(true);\n    } else {\n      setShowCustomSlippage(false);\n      setSlippage(parseFloat(value));\n    }\n  };\n\n  // Helper function to get button text\n  const getActionButtonText = () => {\n    if (!address) return 'Connect Wallet';\n    if (loading) return 'Processing...';\n    if (!fromToken || !toToken) return 'Select Tokens';\n    if (!fromAmount) return 'Enter Amount';\n    if (findingRoute && !isWrapUnwrapOperation()) return 'Finding best route...';\n    if (routeError && !isWrapUnwrapOperation() && !findingRoute) return 'No Route Available';\n    if (fromToken.symbol === 'ETH' && toToken?.symbol === 'WETH') return 'Wrap ETH';\n    if (fromToken.symbol === 'WETH' && toToken?.symbol === 'ETH') return 'Unwrap WETH';\n    return 'Swap';\n  };\n\n  // Add this helper function after getActionButtonText\n  const getButtonStyles = () => {\n    if (!address) return 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black';\n    if (loading) return 'bg-gray-400 cursor-not-allowed text-gray-700';\n    if (findingRoute && !isWrapUnwrapOperation()) return 'bg-[#2d2f36] hover:bg-[#2d2f36]/80 text-white cursor-wait';\n    if (!fromToken || !toToken || !fromAmount) return 'bg-[#2d2f36] hover:bg-[#2d2f36]/80 text-white';\n    if (routeError && !isWrapUnwrapOperation() && !findingRoute) return 'bg-red-500/20 text-red-500 cursor-not-allowed';\n    return 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black shadow-lg shadow-[#00ffbd]/20';\n  };\n\n  // Add these keyframes to your CSS/Tailwind config\n  const style = document.createElement('style');\n  style.textContent = `\n    @keyframes slideRight {\n      0% { transform: translateX(-4px); opacity: 0; }\n      20% { transform: translateX(0); opacity: 1; }\n      80% { transform: translateX(0); opacity: 1; }\n      100% { transform: translateX(4px); opacity: 0; }\n    }\n    @keyframes slideLeft {\n      0% { transform: translateX(4px); opacity: 0; }\n      20% { transform: translateX(0); opacity: 1; }\n      80% { transform: translateX(0); opacity: 1; }\n      100% { transform: translateX(-4px); opacity: 0; }\n    }\n    @keyframes fadeInOut {\n      0% { opacity: 0; }\n      50% { opacity: 1; }\n      100% { opacity: 0; }\n    }\n  `;\n  document.head.appendChild(style);\n\n  const handleRating = (rating) => {\n    // Here you can implement the logic to save the rating\n    setShowRatingModal(false);\n  };\n\n  const handleTokenSelect = (token) => {\n    if (activeSide === 'from') {\n      setFromToken(token);\n    } else {\n      setToToken(token);\n    }\n    setShowTokenSelector(false);\n  };\n\n  const handleMaxAmount = (amount) => {\n    setFromAmount(amount);\n  };\n\n  const handleWrapUnwrap = async () => {\n    if (!address || !fromToken || !fromAmount) {\n      toast.error('Please fill in all fields');\n      return;\n    }\n    \n    setLoading(true);\n    setShowProgressModal(true);\n    setSwapStep('preparing');\n    setSwapError(null);\n    \n    try {\n      console.log('Starting wrap/unwrap operation:', {\n        fromToken: fromToken.symbol,\n        toToken: toToken?.symbol,\n        amount: fromAmount,\n        address: address\n      });\n\n      // Use the existing provider if available, otherwise create a new one\n      const provider = providerRef.current || new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      console.log('Got signer:', await signer.getAddress());\n\n      const amount = ethers.parseUnits(fromAmount, 18); // Both ETH and WETH use 18 decimals\n      console.log('Parsed amount:', amount.toString());\n      \n      const wethContract = new ethers.Contract(\n        UNISWAP_V3_ADDRESSES.WETH,\n        [\n          'function deposit() external payable',\n          'function withdraw(uint256) external',\n          'function approve(address spender, uint256 amount) external returns (bool)',\n          'function balanceOf(address) external view returns (uint256)'\n        ],\n        signer\n      );\n\n      // Check WETH balance before operation\n      if (fromToken.symbol === 'WETH') {\n        const balance = await wethContract.balanceOf(address);\n        console.log('Current WETH balance:', balance.toString());\n        if (balance < amount) {\n          throw new Error(`Insufficient WETH balance. Required: ${ethers.formatUnits(amount, 18)}, Available: ${ethers.formatUnits(balance, 18)}`);\n        }\n      }\n\n      setSwapStep('wrapping');\n      let tx;\n      if (fromToken.symbol === 'ETH' && toToken?.symbol === 'WETH') {\n        console.log('Wrapping ETH to WETH...');\n        tx = await wethContract.deposit({ value: amount });\n      } else if (fromToken.symbol === 'WETH' && toToken?.symbol === 'ETH') {\n        console.log('Unwrapping WETH to ETH...');\n        tx = await wethContract.withdraw(amount);\n      }\n\n      console.log('Transaction sent:', tx.hash);\n      setSwapStep('confirming');\n      \n      const receipt = await tx.wait();\n      console.log('Transaction confirmed:', receipt);\n      setSwapStep('completed');\n\n      // Show completed state briefly, then close modal and show confetti\n      setTimeout(() => {\n        setShowProgressModal(false);\n        setSwapStep(null);\n        \n        setTimeout(() => {\n          setShowConfetti(true);\n          \n          setTimeout(() => {\n            setShowRatingModal(true);\n          }, 1000);\n          \n          setTimeout(() => {\n            setFromAmount('');\n            setToAmount('');\n            setShowConfetti(false);\n          }, 30000);\n        }, 100);\n      }, 1000);\n\n    } catch (error) {\n      console.error('Wrap/Unwrap error:', error);\n      const errorMessage = error.reason || error.message || 'Failed to wrap/unwrap';\n      console.error('Error details:', {\n        code: error.code,\n        message: error.message,\n        reason: error.reason,\n        data: error.data\n      });\n      setSwapError(errorMessage);\n      setSwapStep('error');\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.4,\n        when: \"beforeChildren\",\n        staggerChildren: 0.1\n      }\n    },\n    exit: {\n      opacity: 0,\n      y: -20,\n      transition: {\n        duration: 0.3\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, x: -10 },\n    visible: {\n      opacity: 1,\n      x: 0,\n      transition: { duration: 0.2 }\n    }\n  };\n\n  const buttonVariants = {\n    hover: {\n      scale: 1.02,\n      transition: { duration: 0.2 }\n    },\n    tap: {\n      scale: 0.98\n    }\n  };\n\n  const swapButtonVariants = {\n    hover: { \n      scale: 1.1,\n      rotate: 180,\n      transition: { duration: 0.2 }\n    },\n    tap: { scale: 0.95 }\n  };\n\n  return (\n    <motion.div \n      className=\"space-y-6 max-w-lg mx-auto\"\n      variants={containerVariants}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n    >\n      {/* Add Confetti component with higher z-index */}\n      {showConfetti && (\n        <Confetti\n          width={windowSize.width}\n          height={windowSize.height}\n          numberOfPieces={200}\n          recycle={false}\n          gravity={0.2}\n          initialVelocityX={10}\n          initialVelocityY={10}\n          colors={['#00ffbd', '#00e6a9', '#00cc95', '#00b381', '#00996d']}\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 99999,\n            pointerEvents: 'none'\n          }}\n        />\n      )}\n\n      {/* Card Container */}\n      <motion.div \n        className=\"bg-white dark:bg-[#1a1b1f] backdrop-blur-xl rounded-2xl p-6 border border-gray-200 dark:border-gray-800\"\n        variants={itemVariants}\n      >\n        <AnimatePresence mode=\"wait\">\n          {!address ? (\n            <motion.div \n              className=\"text-center py-8\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n            >\n              <motion.div \n                className=\"mb-4\"\n                whileHover={{ scale: 1.1 }}\n                transition={{ type: \"spring\", stiffness: 400, damping: 10 }}\n              >\n                <BiWallet size={48} className=\"mx-auto text-gray-400 dark:text-gray-600\" />\n              </motion.div>\n              <motion.h3 \n                className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\"\n                variants={itemVariants}\n              >\n                Connect Your Wallet\n              </motion.h3>\n              <motion.p \n                className=\"text-gray-500 dark:text-gray-400 mb-6\"\n                variants={itemVariants}\n              >\n                Please connect your wallet to start swapping tokens\n              </motion.p>\n              <motion.button\n                onClick={openConnectModal}\n                className=\"px-6 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-semibold rounded-lg transition-colors\"\n                variants={buttonVariants}\n                whileHover=\"hover\"\n                whileTap=\"tap\"\n              >\n                Connect Wallet\n              </motion.button>\n            </motion.div>\n          ) : (\n            <motion.div \n              className=\"space-y-4\"\n              variants={containerVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n            >\n              {/* From Token */}\n              <motion.div \n                className=\"space-y-2\"\n                variants={itemVariants}\n              >\n                <label className=\"block text-sm font-medium text-gray-900 dark:text-gray-100\">\n                  From\n                </label>\n                <motion.div \n                  className=\"relative\"\n                  whileHover={{ scale: 1.01 }}\n                  transition={{ type: \"spring\", stiffness: 300 }}\n                >\n                  <input\n                    type=\"text\"\n                    value={fromAmount}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n                        setFromAmount(value);\n                        setRouteError(null);\n                        setFindingRoute(true);\n                      }\n                    }}\n                    placeholder=\"0.0\"\n                    className=\"w-full px-4 py-3 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n                  />\n                  <motion.button\n                    onClick={() => {\n                      setActiveSide('from');\n                      setShowTokenSelector(true);\n                    }}\n                    className=\"absolute right-2 top-1/2 -translate-y-1/2 px-3 py-1.5 bg-white/10 dark:bg-[#2d2f36] rounded-lg text-sm font-medium text-gray-900 dark:text-white hover:bg-white/20 dark:hover:bg-[#2d2f36]/80 transition-colors border border-gray-200 dark:border-gray-800\"\n                    variants={buttonVariants}\n                    whileHover=\"hover\"\n                    whileTap=\"tap\"\n                  >\n                    {fromToken ? (\n                      <div className=\"flex items-center gap-2\">\n                        <img src={getTokenLogo(fromToken)} alt={fromToken.symbol} className=\"w-5 h-5\" />\n                        <span>{fromToken.symbol}</span>\n                      </div>\n                    ) : (\n                      'Select Token'\n                    )}\n                  </motion.button>\n                </motion.div>\n                {fromToken && <TokenBalance token={fromToken} />}\n              </motion.div>\n\n              {/* Swap Icon */}\n              <div className=\"flex justify-center my-4\">\n                <motion.button\n                  onClick={() => {\n                    const tempToken = fromToken;\n                    const tempAmount = fromAmount;\n                    setFromToken(toToken);\n                    setFromAmount(toAmount);\n                    setToToken(tempToken);\n                    setToAmount(tempAmount);\n                  }}\n                  className=\"p-2.5 rounded-xl bg-[#00ffbd]/10 text-[#00ffbd] hover:bg-[#00ffbd]/20 transition-colors border border-[#00ffbd]/20\"\n                  variants={swapButtonVariants}\n                  whileHover=\"hover\"\n                  whileTap=\"tap\"\n                >\n                  <FaExchangeAlt size={16} />\n                </motion.button>\n              </div>\n\n              {/* To Token */}\n              <motion.div \n                className=\"space-y-2\"\n                variants={itemVariants}\n              >\n                <label className=\"block text-sm font-medium text-gray-900 dark:text-gray-100\">\n                  To\n                </label>\n                <motion.div \n                  className=\"relative\"\n                  whileHover={{ scale: 1.01 }}\n                  transition={{ type: \"spring\", stiffness: 300 }}\n                >\n                  <input\n                    type=\"text\"\n                    value={toAmount}\n                    readOnly\n                    placeholder=\"0.0\"\n                    className=\"w-full px-4 py-3 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n                  />\n                  <motion.button\n                    onClick={() => {\n                      setActiveSide('to');\n                      setShowTokenSelector(true);\n                    }}\n                    className=\"absolute right-2 top-1/2 -translate-y-1/2 px-3 py-1.5 bg-white/10 dark:bg-[#2d2f36] rounded-lg text-sm font-medium text-gray-900 dark:text-white hover:bg-white/20 dark:hover:bg-[#2d2f36]/80 transition-colors border border-gray-200 dark:border-gray-800\"\n                    variants={buttonVariants}\n                    whileHover=\"hover\"\n                    whileTap=\"tap\"\n                  >\n                    {toToken ? (\n                      <div className=\"flex items-center gap-2\">\n                        <img src={getTokenLogo(toToken)} alt={toToken.symbol} className=\"w-5 h-5\" />\n                        <span>{toToken.symbol}</span>\n                      </div>\n                    ) : (\n                      'Select Token'\n                    )}\n                  </motion.button>\n                </motion.div>\n                {toToken && <TokenBalance token={toToken} />}\n              </motion.div>\n\n              {/* Trade Details Section */}\n              <AnimatePresence>\n                <motion.div \n                  className=\"mt-4 p-3 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800\"\n                  variants={itemVariants}\n                  initial=\"hidden\"\n                  animate=\"visible\"\n                  exit=\"exit\"\n                >\n                  {/* Compact View (Always Visible) */}\n                  <div className=\"space-y-2 text-sm mb-2\">\n                    <div className=\"flex justify-between items-center\">\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Fee ({routeInfo ? routeInfo.fees.map(fee => (fee / 10000).toFixed(2)).join('% + ') : '--'}%)</span>\n                        <span className=\"text-gray-500 cursor-help\" title=\"A portion of each trade goes to liquidity providers as a protocol incentive.\">ⓘ</span>\n                      </div>\n                      <span className=\"text-gray-200\">\n                        {routeInfo && fromAmount ? (\n                          `${(fromAmount * (routeInfo.fees.reduce((a, b) => a + b, 0) / 1000000)).toFixed(6)} ${fromToken?.symbol}`\n                        ) : '--'}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Network cost</span>\n                        <span className=\"text-gray-500 cursor-help\" title=\"Estimated cost of the transaction on Ethereum\">ⓘ</span>\n                      </div>\n                      <span className=\"text-gray-200\">Check wallet for gas cost</span>\n                    </div>\n                  </div>\n\n                  {/* Divider */}\n                  <div className=\"border-t border-gray-200 dark:border-gray-800 my-2\"></div>\n\n                  {/* Show More Button */}\n                  <button\n                    onClick={() => setShowMoreDetails(!showMoreDetails)}\n                    className=\"flex items-center justify-between w-full text-sm text-gray-500 hover:text-gray-400\"\n                  >\n                    {showMoreDetails ? 'Hide Details' : 'Show Details'} \n                    <motion.svg\n                      className=\"w-4 h-4\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                      animate={{ rotate: showMoreDetails ? 180 : 0 }}\n                      transition={{ duration: 0.3 }}\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </motion.svg>\n                  </button>\n\n                  {/* Expanded Details */}\n                  <AnimatePresence>\n                    {showMoreDetails && (\n                      <motion.div \n                        className=\"space-y-3 pt-2 border-t border-gray-200 dark:border-gray-800\"\n                        initial={{ height: 0, opacity: 0 }}\n                        animate={{ height: \"auto\", opacity: 1 }}\n                        exit={{ height: 0, opacity: 0 }}\n                        transition={{ duration: 0.3 }}\n                      >\n                        <div className=\"flex justify-between text-sm\">\n                          <span className=\"text-gray-500\">Expected Output</span>\n                          <span className=\"text-gray-200\">\n                            {isWrapUnwrapOperation() ? fromAmount : toAmount} {toToken?.symbol}\n                          </span>\n                        </div>\n\n                        {!isWrapUnwrapOperation() && (\n                          <>\n                            <div className=\"flex justify-between text-sm\">\n                              <span className=\"text-gray-500\">Minimum received after slippage ({slippage}%)</span>\n                              <span className=\"text-gray-200\">\n                                {toAmount && Number(toAmount * (1 - slippage/100)).toFixed(6)} {toToken?.symbol}\n                              </span>\n                            </div>\n\n                            {routeInfo && (\n                              <div className=\"flex justify-between text-sm\">\n                                <span className=\"text-gray-500\">Route</span>\n                                <span className=\"text-gray-200\">\n                                  {routeInfo.path.map((token, index) => (\n                                    <React.Fragment key={index}>\n                                      {index > 0 && ' → '}\n                                      {token.symbol}\n                                    </React.Fragment>\n                                  ))}\n                                </span>\n                              </div>\n                            )}\n\n                            {priceImpact !== null && (\n                              <div className=\"flex justify-between text-sm\">\n                                <span className=\"text-gray-500\">Price Impact</span>\n                                <span className={`${\n                                  priceImpact > 15 ? 'text-red-500' :\n                                  priceImpact > 5 ? 'text-yellow-500' :\n                                  'text-gray-200'\n                                }`}>\n                                  {priceImpact.toFixed(2)}%\n                                </span>\n                              </div>\n                            )}\n                          </>\n                        )}\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </motion.div>\n              </AnimatePresence>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </motion.div>\n\n      {/* Slippage Settings */}\n      <motion.div \n        className=\"bg-white/5 dark:bg-[#1a1b1f] backdrop-blur-xl rounded-2xl p-4 border border-gray-200 dark:border-gray-800\"\n        variants={itemVariants}\n      >\n        <div className=\"flex flex-col space-y-3\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\n              Slippage Tolerance\n            </span>\n            <div className=\"flex space-x-2\">\n              {[0.5, 1.0, 2.0].map((value) => (\n                <button\n                  key={value}\n                  onClick={() => handleSlippageChange(value.toString())}\n                  className={`px-3 py-1.5 text-sm rounded-xl transition-all\n                    ${slippage === value && !showCustomSlippage\n                      ? 'bg-[#00ffbd] text-black font-medium shadow-lg shadow-[#00ffbd]/20'\n                      : 'bg-white/5 dark:bg-[#2d2f36] text-gray-900 dark:text-gray-100 hover:bg-[#00ffbd]/10'\n                    } border border-gray-200 dark:border-gray-800`}\n                >\n                  {value}%\n                </button>\n              ))}\n              <button\n                onClick={() => handleSlippageChange('custom')}\n                className={`px-3 py-1.5 text-sm rounded-xl transition-all\n                  ${showCustomSlippage\n                    ? 'bg-[#00ffbd] text-black font-medium shadow-lg shadow-[#00ffbd]/20'\n                    : 'bg-white/5 dark:bg-[#2d2f36] text-gray-900 dark:text-gray-100 hover:bg-[#00ffbd]/10'\n                  } border border-gray-200 dark:border-gray-800`}\n              >\n                Custom\n              </button>\n            </div>\n          </div>\n\n          {showCustomSlippage && (\n            <div className=\"flex items-center space-x-2\">\n              <input\n                type=\"number\"\n                value={slippage}\n                onChange={(e) => {\n                  const value = parseFloat(e.target.value);\n                  if (!isNaN(value) && value >= 0 && value <= 100) {\n                    setSlippage(value);\n                  }\n                }}\n                className=\"w-24 px-3 py-1.5 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl text-sm text-gray-900 dark:text-white focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent placeholder-gray-500 dark:placeholder-gray-400\"\n                placeholder=\"Custom %\"\n              />\n              <span className=\"text-sm text-gray-900 dark:text-gray-400\">%</span>\n            </div>\n          )}\n        </div>\n      </motion.div>\n\n      {/* Swap Button */}\n      <motion.button\n        onClick={isWrapUnwrapOperation() ? handleWrapUnwrap : handleSwap}\n        disabled={loading || !fromToken || !toToken || !fromAmount || (!toAmount && !isWrapUnwrapOperation())}\n        className={`\n          w-full px-4 py-4 rounded-xl font-medium text-lg\n          ${loading || !fromToken || !toToken || !fromAmount || (!toAmount && !isWrapUnwrapOperation())\n            ? 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed text-gray-500 dark:text-gray-400'\n            : 'bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors text-black'\n          }\n        `}\n        variants={buttonVariants}\n        whileHover=\"hover\"\n        whileTap=\"tap\"\n      >\n        {getActionButtonText()}\n      </motion.button>\n\n      {/* Add error message if there's a route error */}\n      {routeError && !isWrapUnwrapOperation() && (\n        <div className=\"text-sm text-red-500 mt-2 text-center\">\n          {routeError}\n        </div>\n      )}\n\n      {/* Token Selector Modal */}\n      <TokenSelector\n        isOpen={showTokenSelector}\n        onClose={() => setShowTokenSelector(false)}\n        onSelect={handleTokenSelect}\n        selectedToken={activeSide === 'from' ? fromToken : toToken}\n        excludeToken={activeSide === 'from' ? toToken : fromToken}\n      />\n\n      {/* Progress Modal */}\n      {isWrapUnwrapOperation() ? (\n        <WrapProgressModal\n          isOpen={showProgressModal}\n          onClose={() => {\n            setShowProgressModal(false);\n            setSwapStep(null);\n          }}\n          currentStep={swapStep}\n          fromToken={fromToken}\n          toToken={toToken}\n          error={swapError}\n        />\n      ) : (\n        <SwapProgressModal\n          isOpen={showProgressModal}\n          onClose={() => {\n            setShowProgressModal(false);\n            setSwapStep(null);\n          }}\n          currentStep={swapStep}\n          tokenIn={fromToken}\n          tokenOut={toToken}\n          error={swapError}\n        />\n      )}\n\n      {/* Rating Modal */}\n      <Transition appear show={showRatingModal} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"relative z-50\"\n          onClose={() => setShowRatingModal(false)}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-0 overflow-y-auto\">\n            <div className=\"flex min-h-full items-center justify-center p-4\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0 scale-95\"\n                enterTo=\"opacity-100 scale-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100 scale-100\"\n                leaveTo=\"opacity-0 scale-95\"\n              >\n                <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all\">\n                  <Dialog.Title\n                    as=\"h3\"\n                    className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white text-center\"\n                  >\n                    How was your experience?\n                  </Dialog.Title>\n\n                  <div className=\"mt-4\">\n                    <div className=\"flex justify-center space-x-2\">\n                      {[1, 2, 3, 4, 5].map((rating) => (\n                        <button\n                          key={rating}\n                          onClick={() => handleRating(rating)}\n                          className=\"p-2 hover:bg-[#00ffbd]/10 rounded-full transition-colors\"\n                        >\n                          <FaStar\n                            size={24}\n                            className={rating <= 3 ? 'text-yellow-500' : 'text-[#00ffbd]'}\n                          />\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"mt-6\">\n                    <button\n                      onClick={() => setShowRatingModal(false)}\n                      className=\"w-full py-2 bg-[#00ffbd] text-black rounded-lg\"\n                    >\n                      Close\n                    </button>\n                  </div>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition>\n    </motion.div>\n  );\n} ","import React, { useState, useEffect } from 'react';\r\nimport { useAccount } from 'wagmi';\r\nimport { toast } from 'react-hot-toast';\r\nimport { ethers } from 'ethers';\r\nimport TokenSelectionModal from './TokenSelectionModal';\r\nimport { useUniswap } from '../../hooks/useUniswap';\r\nimport { UNISWAP_ADDRESSES } from '../../services/uniswap';\r\nimport { ERC20_ABI } from '../../services/erc20';\r\nimport { BiWallet } from 'react-icons/bi';\r\nimport { getTokenDeploymentByAddress } from '../../services/firebase';\r\n\r\n// Common tokens with metadata\r\nconst COMMON_TOKENS = [\r\n  {\r\n    address: 'ETH',\r\n    symbol: 'ETH',\r\n    name: 'Ethereum',\r\n    decimals: 18,\r\n    logo: '/eth.png'\r\n  },\r\n  {\r\n    address: UNISWAP_ADDRESSES.WETH,\r\n    symbol: 'WETH',\r\n    name: 'Wrapped Ethereum',\r\n    decimals: 18,\r\n    logo: '/eth.png'\r\n  },\r\n  {\r\n    address: '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238',\r\n    symbol: 'USDC',\r\n    name: 'USD Coin',\r\n    decimals: 6,\r\n    logo: '/usdc.png'\r\n  },\r\n  {\r\n    address: UNISWAP_ADDRESSES.USDT,\r\n    symbol: 'USDT',\r\n    name: 'Test USDT',\r\n    decimals: 6,\r\n    logo: '/usdt.png'\r\n  }\r\n];\r\n\r\nexport default function PoolCreation() {\r\n  const { address: account, isConnected } = useAccount();\r\n  const { open: openConnectModal } = useWeb3Modal();\r\n  const [currentChainId, setCurrentChainId] = useState(null);\r\n  const uniswap = useUniswap();\r\n  const [token0, setToken0] = useState(null);\r\n  const [token1, setToken1] = useState(null);\r\n  const [amount0, setAmount0] = useState('');\r\n  const [amount1, setAmount1] = useState('');\r\n  const [fee, setFee] = useState('0.3');\r\n  const [loading, setLoading] = useState(false);\r\n  const [showToken0Modal, setShowToken0Modal] = useState(false);\r\n  const [showToken1Modal, setShowToken1Modal] = useState(false);\r\n  const [priceInfo, setPriceInfo] = useState(null);\r\n\r\n  // Add useEffect to get chain ID and listen for changes\r\n  useEffect(() => {\r\n    const checkChain = async () => {\r\n      if (window.ethereum) {\r\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n        setCurrentChainId(parseInt(chainId, 16));\r\n      }\r\n    };\r\n    checkChain();\r\n\r\n    window.ethereum?.on('chainChanged', (chainId) => {\r\n      setCurrentChainId(parseInt(chainId, 16));\r\n    });\r\n  }, []);\r\n\r\n  // Add function to validate Ethereum address\r\n  const isValidAddress = (address) => {\r\n    try {\r\n      return ethers.isAddress(address);\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Handle token selection\r\n  const handleToken0Select = async (token) => {\r\n    if (token.symbol === 'ETH') {\r\n      setToken0({\r\n        ...token,\r\n        address: UNISWAP_ADDRESSES.WETH,\r\n        decimals: 18\r\n      });\r\n    } else {\r\n      // Try to get token info from Firebase first\r\n      const tokenDeployment = await getTokenDeploymentByAddress(token.address);\r\n      if (tokenDeployment) {\r\n        setToken0({\r\n          ...token,\r\n          name: tokenDeployment.name,\r\n          symbol: tokenDeployment.symbol,\r\n          decimals: tokenDeployment.decimals || 18,\r\n          logo: tokenDeployment.logo,\r\n          logoIpfs: tokenDeployment.logoIpfs\r\n        });\r\n      } else {\r\n        // Fallback to contract info\r\n        const tokenInfo = await uniswap.getTokenInfo(token.address);\r\n        setToken0({ \r\n          ...token,\r\n          ...tokenInfo,\r\n          name: token.name || tokenInfo.name,\r\n          symbol: token.symbol || tokenInfo.symbol\r\n        });\r\n      }\r\n    }\r\n    setShowToken0Modal(false);\r\n  };\r\n\r\n  const handleToken1Select = async (token) => {\r\n    if (token.symbol === 'ETH') {\r\n      setToken1({\r\n        ...token,\r\n        address: UNISWAP_ADDRESSES.WETH,\r\n        decimals: 18\r\n      });\r\n    } else {\r\n      // Try to get token info from Firebase first\r\n      const tokenDeployment = await getTokenDeploymentByAddress(token.address);\r\n      if (tokenDeployment) {\r\n        setToken1({\r\n          ...token,\r\n          name: tokenDeployment.name,\r\n          symbol: tokenDeployment.symbol,\r\n          decimals: tokenDeployment.decimals || 18,\r\n          logo: tokenDeployment.logo,\r\n          logoIpfs: tokenDeployment.logoIpfs\r\n        });\r\n      } else {\r\n        // Fallback to contract info\r\n        const tokenInfo = await uniswap.getTokenInfo(token.address);\r\n        setToken1({ \r\n          ...token,\r\n          ...tokenInfo,\r\n          name: token.name || tokenInfo.name,\r\n          symbol: token.symbol || tokenInfo.symbol\r\n        });\r\n      }\r\n    }\r\n    setShowToken1Modal(false);\r\n  };\r\n\r\n  // Handle amount changes\r\n  const handleAmount0Change = (value) => {\r\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\r\n      setAmount0(value);\r\n    }\r\n  };\r\n\r\n  const handleAmount1Change = (value) => {\r\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\r\n      setAmount1(value);\r\n    }\r\n  };\r\n\r\n  // Modify handleCreatePool\r\n  const handleCreatePool = async () => {\r\n    if (!isConnected) {\r\n      openConnectModal();\r\n      return;\r\n    }\r\n\r\n    if (!token0 || !token1) {\r\n      toast.error('Please select both tokens');\r\n      return;\r\n    }\r\n\r\n    if (!amount0 || !amount1) {\r\n      toast.error('Please enter both amounts');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Check if pool exists first\r\n      const poolExists = await uniswap.checkPoolExists(token0.address, token1.address);\r\n      \r\n      if (poolExists) {\r\n        toast.error('This pool already exists. Please use the Add Liquidity feature instead.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Parse amounts\r\n      const parsedAmount0 = ethers.parseUnits(amount0, token0.decimals);\r\n      const parsedAmount1 = ethers.parseUnits(amount1, token1.decimals);\r\n\r\n      // Create pool and add liquidity\r\n      toast.loading('Creating pool and adding liquidity...', { id: 'pool-create' });\r\n\r\n      const result = await uniswap.createPool(\r\n        token0.address,\r\n        token1.address,\r\n        parsedAmount0,\r\n        parsedAmount1\r\n      );\r\n\r\n      console.log('Pool created at:', result.pairAddress);\r\n      toast.success('Pool created and liquidity added successfully!', { id: 'pool-create' });\r\n      \r\n      // Reset form\r\n      setAmount0('');\r\n      setAmount1('');\r\n      setToken0(null);\r\n      setToken1(null);\r\n    } catch (error) {\r\n      console.error('Error creating pool:', error);\r\n      toast.error(\r\n        error.message.includes('insufficient')\r\n          ? 'Insufficient balance for transaction'\r\n          : error.message.includes('chain')\r\n          ? 'Please switch to a supported network'\r\n          : error.message.includes('approve')\r\n          ? error.message\r\n          : `Failed to create pool: ${error.message}`,\r\n        { id: 'pool-create' }\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch price ratio when tokens are selected\r\n  useEffect(() => {\r\n    async function fetchPriceRatio() {\r\n      if (!token0 || !token1) return;\r\n\r\n      try {\r\n        // For demo purposes, using a simple 1:1 ratio\r\n        setPriceRatio(1);\r\n        \r\n        // If amounts exist and auto-price is enabled, update them\r\n        if (useAutoPrice) {\r\n          if (amount0) {\r\n            setAmount1(calculateOtherAmount(amount0, true));\r\n          } else if (amount1) {\r\n            setAmount0(calculateOtherAmount(amount1, false));\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching prices:', error);\r\n        setPriceRatio(1);\r\n      }\r\n    }\r\n\r\n    fetchPriceRatio();\r\n  }, [token0, token1]);\r\n\r\n  // Add useEffect to calculate and update price info\r\n  useEffect(() => {\r\n    async function updatePriceInfo() {\r\n      if (!token0 || !token1 || !amount0 || !amount1) {\r\n        setPriceInfo(null);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const parsedAmount0 = ethers.parseUnits(amount0, token0.decimals);\r\n        const parsedAmount1 = ethers.parseUnits(amount1, token1.decimals);\r\n\r\n        const prices = uniswap.calculateInitialPoolPrice(\r\n          parsedAmount0,\r\n          parsedAmount1,\r\n          token0.decimals,\r\n          token1.decimals\r\n        );\r\n\r\n        setPriceInfo({\r\n          token0Price: prices.token0Price,\r\n          token1Price: prices.token1Price\r\n        });\r\n      } catch (error) {\r\n        console.error('Error calculating price:', error);\r\n        setPriceInfo(null);\r\n      }\r\n    }\r\n\r\n    updatePriceInfo();\r\n  }, [token0, token1, amount0, amount1]);\r\n\r\n  // Add TokenBalance component\r\n  const TokenBalance = ({ token }) => {\r\n    const [balance, setBalance] = useState('0');\r\n    const { address } = useAccount();\r\n\r\n    useEffect(() => {\r\n      async function getBalance() {\r\n        if (!token || !address) return;\r\n\r\n        try {\r\n          const provider = new ethers.BrowserProvider(window.ethereum);\r\n          const tokenContract = new ethers.Contract(token.address, ERC20_ABI, provider);\r\n          const rawBalance = await tokenContract.balanceOf(address);\r\n          const formattedBalance = ethers.formatUnits(rawBalance, token.decimals);\r\n          setBalance(formattedBalance);\r\n        } catch (error) {\r\n          console.error('Error fetching balance:', error);\r\n          setBalance('0');\r\n        }\r\n      }\r\n\r\n      getBalance();\r\n    }, [token, address]);\r\n\r\n    if (!token) return null;\r\n\r\n    return (\r\n      <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n        Balance: {Number(balance).toLocaleString(undefined, { maximumFractionDigits: 6 })}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6 max-w-lg mx-auto\">\r\n      <div className=\"bg-white/5 dark:bg-[#1a1b1f] backdrop-blur-xl rounded-2xl p-6 border border-gray-200 dark:border-gray-800\">\r\n        {!isConnected ? (\r\n          <div className=\"text-center py-8\">\r\n            <div className=\"mb-4\">\r\n              <BiWallet size={48} className=\"mx-auto text-gray-400 dark:text-gray-600\" />\r\n            </div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n              Connect Your Wallet\r\n            </h3>\r\n            <p className=\"text-gray-500 dark:text-gray-400 mb-6\">\r\n              Please connect your wallet to create a liquidity pool\r\n            </p>\r\n            <button\r\n              onClick={openConnectModal}\r\n              className=\"px-6 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-semibold rounded-lg transition-colors\"\r\n            >\r\n              Connect Wallet\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Token 0 Selection */}\r\n            <div className=\"space-y-2\">\r\n              <label className=\"block text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                Token 1\r\n              </label>\r\n              <div className=\"space-y-2\">\r\n                <button\r\n                  onClick={() => setShowToken0Modal(true)}\r\n                  className=\"w-full px-4 py-3 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl text-left text-gray-900 dark:text-white hover:bg-white/20 dark:hover:bg-[#2d2f36]/80 transition-colors\"\r\n                >\r\n                  {token0 ? (\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <img src={token0.logo} alt={token0.symbol} className=\"w-5 h-5\" />\r\n                      <span>{token0.symbol}</span>\r\n                    </div>\r\n                  ) : (\r\n                    'Select Token'\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {token0 && (\r\n                <input\r\n                  type=\"text\"\r\n                  value={amount0}\r\n                  onChange={(e) => handleAmount0Change(e.target.value)}\r\n                  placeholder=\"Enter amount\"\r\n                  className=\"w-full px-4 py-3 mt-2 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl text-gray-900 dark:text-white\"\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* Token 1 Selection */}\r\n            <div className=\"mt-4 space-y-2\">\r\n              <label className=\"block text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                Token 2\r\n              </label>\r\n              <div className=\"space-y-2\">\r\n                <button\r\n                  onClick={() => setShowToken1Modal(true)}\r\n                  className=\"w-full px-4 py-3 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl text-left text-gray-900 dark:text-white hover:bg-white/20 dark:hover:bg-[#2d2f36]/80 transition-colors\"\r\n                >\r\n                  {token1 ? (\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <img src={token1.logo} alt={token1.symbol} className=\"w-5 h-5\" />\r\n                      <span>{token1.symbol}</span>\r\n                    </div>\r\n                  ) : (\r\n                    'Select Token'\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {token1 && (\r\n                <input\r\n                  type=\"text\"\r\n                  value={amount1}\r\n                  onChange={(e) => handleAmount1Change(e.target.value)}\r\n                  placeholder=\"Enter amount\"\r\n                  className=\"w-full px-4 py-3 mt-2 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl text-gray-900 dark:text-white\"\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* Price Information */}\r\n            {priceInfo && token0 && token1 && (\r\n              <div className=\"mt-6 p-4 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800\">\r\n                <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-3\">\r\n                  Initial Pool Price\r\n                </h3>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span className=\"text-gray-500 dark:text-gray-400\">\r\n                      1 {token0.symbol} =\r\n                    </span>\r\n                    <span className=\"text-gray-900 dark:text-white font-medium\">\r\n                      {Number(priceInfo.token0Price).toLocaleString(undefined, { maximumFractionDigits: 6 })} {token1.symbol}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span className=\"text-gray-500 dark:text-gray-400\">\r\n                      1 {token1.symbol} =\r\n                    </span>\r\n                    <span className=\"text-gray-900 dark:text-white font-medium\">\r\n                      {Number(priceInfo.token1Price).toLocaleString(undefined, { maximumFractionDigits: 6 })} {token0.symbol}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Fee Tier Selection */}\r\n            <div className=\"mt-6 space-y-2\">\r\n              <label className=\"block text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                Fee Tier\r\n              </label>\r\n              <div className=\"grid grid-cols-4 gap-2\">\r\n                {['0.01', '0.05', '0.3', '1'].map((feeTier) => (\r\n                  <button\r\n                    key={feeTier}\r\n                    onClick={() => setFee(feeTier)}\r\n                    className={`\r\n                      px-4 py-2 rounded-xl text-sm font-medium\r\n                      ${fee === feeTier\r\n                        ? 'bg-[#00ffbd] text-black'\r\n                        : 'bg-white/10 dark:bg-[#2d2f36] text-gray-900 dark:text-white hover:bg-white/20 dark:hover:bg-[#2d2f36]/80'\r\n                      }\r\n                      transition-colors\r\n                    `}\r\n                  >\r\n                    {feeTier}%\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Info Box */}\r\n            <div className=\"mt-6 p-4 bg-blue-500/5 dark:bg-blue-500/10 rounded-xl border border-blue-200 dark:border-blue-800\">\r\n              <h3 className=\"text-sm font-medium text-blue-900 dark:text-blue-100 mb-2\">\r\n                About Pool Creation\r\n              </h3>\r\n              <p className=\"text-sm text-blue-800 dark:text-blue-200\">\r\n                Creating a new liquidity pool allows you to be the first liquidity provider.\r\n                The ratio of tokens you add will set the initial price. Make sure to add sufficient liquidity to minimize price impact from trades.\r\n              </p>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Create Pool Button */}\r\n      <button\r\n        onClick={handleCreatePool}\r\n        disabled={loading || !token0 || !token1 || !amount0 || !amount1}\r\n        className={`\r\n          w-full px-4 py-4 rounded-xl font-medium text-black text-lg\r\n          ${loading || !token0 || !token1 || !amount0 || !amount1\r\n            ? 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed'\r\n            : 'bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors'\r\n          }\r\n        `}\r\n      >\r\n        {loading ? 'Creating Pool...' : 'Create Pool'}\r\n      </button>\r\n\r\n      {/* Token Selection Modals */}\r\n      <TokenSelectionModal\r\n        isOpen={showToken0Modal}\r\n        onClose={() => setShowToken0Modal(false)}\r\n        onSelect={handleToken0Select}\r\n        selectedTokenAddress={token0?.address}\r\n      />\r\n      <TokenSelectionModal\r\n        isOpen={showToken1Modal}\r\n        onClose={() => setShowToken1Modal(false)}\r\n        onSelect={handleToken1Select}\r\n        selectedTokenAddress={token1?.address}\r\n      />\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect, Fragment } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { useAccount } from 'wagmi';\nimport { ethers } from 'ethers';\nimport Confetti from 'react-confetti';\nimport { FaStar } from 'react-icons/fa';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useUnichain } from '../../../../hooks/useUnichain';\nimport TokenSelectionModal from '../shared/TokenSelectionModal';\nimport { UNISWAP_ADDRESSES } from '../../../../services/unichain/uniswap';\nimport { getTokenDeploymentByAddress } from '../../../../services/firebase';\nimport { BiWallet } from 'react-icons/bi';\nimport { toast } from 'react-hot-toast';\n\n// Add CSS keyframes at the top of the file\nconst style = document.createElement('style');\nstyle.textContent = `\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes bounce {\n    0%, 100% {\n      transform: scale(1);\n      opacity: 1;\n    }\n    50% {\n      transform: scale(0.8);\n      opacity: 0.5;\n    }\n  }\n`;\ndocument.head.appendChild(style);\n\n// Common tokens with metadata\nconst COMMON_TOKENS = [\n  {\n    address: 'ETH',\n    symbol: 'ETH',\n    name: 'Ethereum',\n    decimals: 18,\n    logo: '/eth.png'\n  },\n  {\n    address: UNISWAP_ADDRESSES.WETH,\n    symbol: 'WETH',\n    name: 'Wrapped Ethereum',\n    decimals: 18,\n    logo: '/eth.png'\n  },\n  {\n    address: '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238',\n    symbol: 'USDC',\n    name: 'USD Coin',\n    decimals: 6,\n    logo: '/usdc.png'\n  },\n  {\n    address: UNISWAP_ADDRESSES.USDT,\n    symbol: 'USDT',\n    name: 'Test USDT',\n    decimals: 6,\n    logo: '/usdt.png'\n  }\n];\n\n// Replace the Icons object with modern DeFi-inspired icons\nconst Icons = {\n  Preparing: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ animation: 'rotate 2s linear infinite' }}>\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M12 6v2m0 8v2M6 12h2m8 0h2\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite' }} />\n        <path d=\"M7.75 7.75l1.5 1.5m5.5 5.5l1.5 1.5m0-8.5l-1.5 1.5m-5.5 5.5l-1.5 1.5\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite', animationDelay: '0.2s' }} />\n      </g>\n    </svg>\n  ),\n  Approval: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <path className=\"animate-[draw_1s_ease-in-out]\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} stroke=\"currentColor\"\n        d=\"M7 11l3 3L19 5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        strokeDasharray=\"60\"\n        strokeDashoffset=\"60\">\n        <animate\n          attributeName=\"stroke-dashoffset\"\n          from=\"60\"\n          to=\"0\"\n          dur=\"0.6s\"\n          fill=\"freeze\"\n        />\n      </path>\n    </svg>\n  ),\n  Creating: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path className=\"animate-pulse\" d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path className=\"animate-[spin_3s_linear_infinite]\" d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2\" strokeLinecap=\"round\" />\n        <circle cx=\"12\" cy=\"12\" r=\"4\" className=\"animate-[pulse_2s_ease-in-out_infinite]\" />\n      </g>\n    </svg>\n  ),\n  Adding: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 8v8m-4-4h8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.6s_ease-in-out]\" />\n        <path d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" className=\"animate-[pulse_2s_ease-in-out_infinite]\" />\n      </g>\n    </svg>\n  ),\n  Confirming: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n        <path strokeLinecap=\"round\" className=\"origin-center animate-[spin_2s_linear_infinite]\"\n          d=\"M12 6v6l4 4\" />\n      </g>\n    </svg>\n  ),\n  Completed: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g>\n        <path className=\"animate-[draw_0.6s_ease-in-out]\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} stroke=\"currentColor\"\n          d=\"M7 13l3 3L17 8\" strokeDasharray=\"60\" strokeDashoffset=\"60\">\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            from=\"60\"\n            to=\"0\"\n            dur=\"0.6s\"\n            fill=\"freeze\"\n          />\n        </path>\n        <path fill=\"currentColor\" fillOpacity=\"0.2\" d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n      </g>\n    </svg>\n  ),\n  Error: () => (\n    <svg className=\"w-6 h-6 text-red-500\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n    </svg>\n  ),\n  Info: () => (\n    <svg className=\"w-6 h-6 text-blue-500\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n    </svg>\n  )\n};\n\n// Add PoolProgressModal component\nconst PoolProgressModal = ({ isOpen, onClose, currentStep, token0, token1, isNewPool, error, poolExists, setActiveTab }) => {\n  const steps = [\n    { id: 'preparing', title: 'Preparing', icon: <Icons.Preparing /> },\n    { id: 'approval', title: 'Token Approval', icon: <Icons.Approval /> },\n    ...(isNewPool ? [{ id: 'creating', title: 'Creating Pool', icon: <Icons.Creating /> }] : []),\n    { id: 'adding', title: 'Adding Liquidity', icon: <Icons.Adding /> },\n    { id: 'confirming', title: 'Confirming', icon: <Icons.Confirming /> },\n    { id: 'completed', title: 'Completed', icon: <Icons.Completed /> }\n  ];\n\n  const isError = Boolean(error);\n  const isExistingPool = error === 'pool exists';\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\n                >\n                  {isExistingPool ? 'Pool Already Exists' : (isNewPool ? 'Creating New Pool' : 'Adding Initial Liquidity')}\n                </Dialog.Title>\n\n                {isExistingPool && poolExists ? (\n                  <ExistingPoolMessage \n                    token0={token0} \n                    token1={token1} \n                    poolAddress={poolExists.address} \n                    onClose={onClose} \n                    setActiveTab={setActiveTab} \n                  />\n                ) : (\n                  <div className=\"space-y-4\">\n                    {steps.map((step, index) => {\n                      const isActive = currentStep === step.id;\n                      const isCompleted = !isError && steps.findIndex(s => s.id === currentStep) > index;\n                      const isErrorStep = isError && currentStep === step.id;\n                      \n                      return (\n                        <div\n                          key={step.id}\n                          className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\n                            isActive && !isErrorStep ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : \n                            isCompleted ? 'text-[#00ffbd]' : \n                            isErrorStep ? 'bg-red-500/10 text-red-500' : \n                            'text-gray-400'\n                          }`}\n                        >\n                          {step.icon}\n                          <div className=\"flex-1\">\n                            <span className=\"font-medium text-gray-900 dark:text-white\">{step.title}</span>\n                            {isActive && !isError && (\n                              <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                                {step.id === 'preparing' && 'Preparing transaction...'}\n                                {step.id === 'approval' && `Approving ${token0?.symbol} and ${token1?.symbol}`}\n                                {step.id === 'creating' && 'Creating new liquidity pool...'}\n                                {step.id === 'adding' && 'Adding initial liquidity...'}\n                                {step.id === 'confirming' && 'Waiting for confirmation...'}\n                                {step.id === 'completed' && 'Transaction completed!'}\n                              </p>\n                            )}\n                          </div>\n                          {isCompleted && (\n                            <svg className=\"w-5 h-5 text-[#00ffbd]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                            </svg>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Add StarRatingModal component\nconst StarRatingModal = ({ isOpen, onClose, onRate }) => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-[99998]\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white text-center mb-4\"\n                >\n                  Rate Your Pool Creation Experience\n                </Dialog.Title>\n                \n                <div className=\"flex flex-col items-center space-y-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    {[...Array(9)].map((_, index) => {\n                      const starValue = index + 1;\n                      return (\n                        <button\n                          key={starValue}\n                          className=\"transition-transform hover:scale-110 focus:outline-none\"\n                          onClick={() => setRating(starValue)}\n                          onMouseEnter={() => setHover(starValue)}\n                          onMouseLeave={() => setHover(0)}\n                        >\n                          <FaStar\n                            size={28}\n                            className={`transition-colors ${\n                              (hover || rating) >= starValue\n                                ? 'text-[#00ffbd]'\n                                : 'text-gray-300 dark:text-gray-600'\n                            }`}\n                          />\n                        </button>\n                      );\n                    })}\n                  </div>\n                  \n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {rating === 0 ? 'Select a rating' : `You rated: ${rating} star${rating !== 1 ? 's' : ''}`}\n                  </p>\n\n                  <div className=\"flex space-x-3 mt-4\">\n                    <button\n                      onClick={() => {\n                        if (rating > 0) {\n                          onRate(rating);\n                          onClose();\n                        }\n                      }}\n                      className={`px-4 py-2 rounded-xl font-medium transition-colors ${\n                        rating > 0\n                          ? 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black'\n                          : 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed text-gray-500 dark:text-gray-400'\n                      }`}\n                    >\n                      Submit Rating\n                    </button>\n                    <button\n                      onClick={onClose}\n                      className=\"px-4 py-2 rounded-xl font-medium bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-900 dark:text-white transition-colors\"\n                    >\n                      Skip\n                    </button>\n                  </div>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nconst ExistingPoolMessage = ({ token0, token1, poolAddress, onClose, setActiveTab }) => {\n  const navigate = useNavigate();\n\n  const handleAddLiquidity = () => {\n    onClose();\n    // Set the active tab to 'liquidity'\n    setActiveTab('liquidity', {\n      selectedTokens: { token0, token1 },\n      poolAddress: poolAddress\n    });\n  };\n\n  const handleCopyAddress = () => {\n    navigator.clipboard.writeText(poolAddress);\n    toast.success('Pool address copied to clipboard!', {\n      style: {\n        borderRadius: '10px',\n        background: '#333',\n        color: '#fff',\n      },\n    });\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"p-4 rounded-xl bg-[#00ffbd]/5 dark:bg-[#00ffbd]/10 border border-[#00ffbd]/10 dark:border-[#00ffbd]/20\">\n        <div className=\"flex items-start gap-3\">\n          <svg className=\"w-5 h-5 text-[#00ffbd] mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n          <div className=\"flex-1 min-w-0\">\n            <h3 className=\"text-sm font-medium text-gray-900 dark:text-white\">Pool Already Exists</h3>\n            <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-300\">\n              A liquidity pool for {token0?.symbol}/{token1?.symbol} already exists.\n            </p>\n            <div className=\"mt-2 p-2 bg-white/50 dark:bg-black/50 rounded-lg border border-gray-200 dark:border-gray-700\">\n              <div className=\"flex items-center justify-between gap-2\">\n                <span className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">Pool Address:</span>\n                <button \n                  onClick={handleCopyAddress} \n                  className=\"text-xs text-[#00ffbd] hover:text-[#00ffbd]/80 transition-colors truncate\"\n                  title={poolAddress}\n                >\n                  {poolAddress.slice(0, 6)}...{poolAddress.slice(-4)} (Click to Copy)\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-4 flex justify-end gap-3\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-800 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-gray-500 focus-visible:ring-offset-2 transition-colors\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleAddLiquidity}\n            className=\"px-4 py-2 text-sm font-medium text-black dark:text-black bg-[#00ffbd] rounded-lg hover:bg-[#00ffbd]/90 focus:outline-none focus-visible:ring-2 focus-visible:ring-[#00ffbd] focus-visible:ring-offset-2 transition-colors\"\n          >\n            Add Liquidity\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Add this function at the top level, before the PoolCreation component\nconst fetchPriceRatio = async (token0, token1, amount0, amount1) => {\n  if (!token0 || !token1 || !amount0 || !amount1) {\n    return null;\n  }\n\n  try {\n    const price = parseFloat(amount1) / parseFloat(amount0);\n    return price;\n  } catch (error) {\n    console.error('Error calculating price ratio:', error);\n    return null;\n  }\n};\n\n// Animation variants\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst itemVariants = {\n  hidden: { \n    opacity: 0,\n    y: 20\n  },\n  show: { \n    opacity: 1,\n    y: 0,\n    transition: {\n      type: \"spring\",\n      stiffness: 100,\n      damping: 15\n    }\n  }\n};\n\nconst buttonVariants = {\n  hover: {\n    scale: 1.02,\n    transition: {\n      type: \"spring\",\n      stiffness: 400,\n      damping: 10\n    }\n  },\n  tap: {\n    scale: 0.98\n  }\n};\n\n// Add NetworkStatus component\nconst NetworkStatus = ({ currentChainId }) => {\n  const getNetworkInfo = () => {\n    switch (currentChainId) {\n      case 1301:\n        return {\n          name: 'Unichain Testnet',\n          status: 'supported',\n          className: 'bg-green-500/10 text-green-500 border-green-500/20'\n        };\n      case 130:\n        return {\n          name: 'Unichain Mainnet',\n          status: 'supported',\n          className: 'bg-blue-500/10 text-blue-500 border-blue-500/20'\n        };\n      case 10143:\n        return {\n          name: 'Monad Testnet',\n          status: 'supported',\n          className: 'bg-purple-500/10 text-purple-500 border-purple-500/20'\n        };\n      default:\n        return {\n          name: 'Unsupported Network',\n          status: 'unsupported',\n          className: 'bg-red-500/10 text-red-500 border-red-500/20'\n        };\n    }\n  };\n\n  const networkInfo = getNetworkInfo();\n\n  return (\n    <div className={`px-4 py-2 rounded-xl text-sm font-medium ${networkInfo.className} border mb-4`}>\n      <div className=\"flex items-center gap-2\">\n        <div className={`w-2 h-2 rounded-full ${networkInfo.status === 'supported' ? 'bg-current' : 'bg-red-500'}`} />\n        <span>{networkInfo.name}</span>\n      </div>\n      {networkInfo.status === 'unsupported' && (\n        <p className=\"text-xs mt-1\">\n          Please switch to Unichain network (Testnet or Mainnet) or Monad Testnet to create pools\n        </p>\n      )}\n    </div>\n  );\n};\n\n// Add all ABIs at the top of the file\nconst ROUTER_ABI = [\n  'function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity)',\n  'function addLiquidityETH(address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity)',\n  'function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB)',\n  'function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external view returns (uint amountOut)'\n];\n\nconst PAIR_ABI = [\n  'function getReserves() view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast)',\n  'function token0() view returns (address)',\n  'function token1() view returns (address)'\n];\n\nconst FACTORY_ABI = [\n  'function getPair(address tokenA, address tokenB) view returns (address)'\n];\n\nconst ERC20_ABI = [\n  'function balanceOf(address) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n  'function symbol() view returns (string)',\n  'function name() view returns (string)'\n];\n\n// Update TokenBalance component\nconst TokenBalance = ({ token }) => {\n  const [balance, setBalance] = useState('0');\n  const [isLoading, setIsLoading] = useState(false);\n  const { address } = useAccount();\n\n  useEffect(() => {\n    async function getBalance() {\n      if (!token || !address || !window.ethereum) return;\n\n      try {\n        setIsLoading(true);\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const chainId = await provider.getNetwork().then(n => Number(n.chainId));\n        \n        // Handle native token (ETH/MON) balance\n        if (token.isNative || token.symbol === 'ETH' || token.symbol === 'MON') {\n          const balance = await provider.getBalance(address);\n          setBalance(ethers.formatEther(balance));\n          return;\n        }\n\n        // For ERC20 tokens\n        try {\n          const tokenContract = new ethers.Contract(\n            token.address,\n            ERC20_ABI,\n            provider\n          );\n\n          const [rawBalance, decimals] = await Promise.all([\n            tokenContract.balanceOf(address),\n            tokenContract.decimals()\n          ]);\n\n          setBalance(ethers.formatUnits(rawBalance, decimals));\n        } catch (error) {\n          console.error('Error fetching ERC20 balance:', error);\n          // Fallback to basic balance fetch for Monad testnet\n          if (chainId === 10143) {\n            const data = ethers.AbiCoder.defaultAbiCoder().encode(\n              ['address'],\n              [address]\n            ).slice(2);\n            \n            const result = await window.ethereum.request({\n              method: 'eth_call',\n              params: [{\n                to: token.address,\n                data: '0x70a08231' + data // balanceOf(address) selector\n              }, 'latest']\n            });\n            \n            const balance = BigInt(result);\n            setBalance(ethers.formatUnits(balance, token.decimals || 18));\n          } else {\n            throw error;\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching balance:', error);\n        setBalance('0');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getBalance();\n  }, [token, address]);\n\n  if (!token || !address) return null;\n\n  return (\n    <div className=\"flex justify-between items-center text-sm\">\n      <span className=\"text-gray-500 dark:text-gray-400\">Balance:</span>\n      {isLoading ? (\n        <div className=\"animate-pulse bg-gray-200 dark:bg-gray-700 h-4 w-20 rounded\"></div>\n      ) : (\n        <span className=\"text-gray-900 dark:text-white font-medium\">\n          {Number(balance).toLocaleString(undefined, {\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 6\n          })} {token.symbol}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default function PoolCreation({ setActiveTab }) {\n  const { address: isConnected } = useAccount();\n  const navigate = useNavigate();\n  const [currentChainId, setCurrentChainId] = useState(null);\n  const uniswap = useUnichain();\n  const [token0, setToken0] = useState(null);\n  const [token1, setToken1] = useState(null);\n  const [amount0, setAmount0] = useState('');\n  const [amount1, setAmount1] = useState('');\n  const [fee, setFee] = useState('0.3');\n  const [loading, setLoading] = useState(false);\n  const [showToken0Modal, setShowToken0Modal] = useState(false);\n  const [showToken1Modal, setShowToken1Modal] = useState(false);\n  const [priceInfo, setPriceInfo] = useState(null);\n  const [priceRatio, setPriceRatio] = useState(null);\n  const [showProgressModal, setShowProgressModal] = useState(false);\n  const [currentStep, setCurrentStep] = useState(null);\n  const [isNewPool, setIsNewPool] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [error, setError] = useState(null);\n  const [poolExists, setPoolExists] = useState(null);\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  // Add useEffect to get chain ID and listen for changes\n  useEffect(() => {\n    let mounted = true;\n\n    const checkChain = async () => {\n      if (!window.ethereum || !mounted) return;\n      try {\n        const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n        if (mounted) {\n          setCurrentChainId(parseInt(chainId, 16));\n        }\n      } catch (error) {\n        console.error('Error checking chain:', error);\n      }\n    };\n\n    const handleChainChanged = (chainId) => {\n      if (mounted) {\n        setCurrentChainId(parseInt(chainId, 16));\n      }\n    };\n\n    checkChain();\n\n    if (window.ethereum) {\n      window.ethereum.on('chainChanged', handleChainChanged);\n    }\n\n    return () => {\n      mounted = false;\n      if (window.ethereum) {\n        window.ethereum.removeListener('chainChanged', handleChainChanged);\n      }\n    };\n  }, []);\n\n  // Add network validation\n  const isValidNetwork = currentChainId === 1301 || currentChainId === 130 || currentChainId === 10143;\n\n  // Handle token selection\n  const handleToken0Select = async (token) => {\n    try {\n      if (!isValidNetwork) {\n        toast.error('Please switch to Unichain network (Testnet or Mainnet) or Monad Testnet');\n        return;\n      }\n\n      if (token.symbol === 'WETH' && currentChainId !== 10143) {\n        toast.error('Please use ETH instead of WETH. The router will automatically convert ETH to WETH.', {\n          duration: 6000,\n          style: {\n            borderRadius: '10px',\n            background: '#333',\n            color: '#fff',\n          },\n        });\n        return;\n      }\n\n      let selectedToken;\n      if (token.symbol === 'ETH' || token.symbol === 'MON') {\n        selectedToken = {\n          ...token,\n          address: UNISWAP_ADDRESSES[currentChainId]?.WETH,\n          decimals: 18,\n          isNative: true\n        };\n      } else {\n        try {\n          const tokenDeployment = await getTokenDeploymentByAddress(token.address);\n          if (tokenDeployment) {\n            selectedToken = {\n              ...token,\n              name: tokenDeployment.name,\n              symbol: tokenDeployment.symbol,\n              decimals: tokenDeployment.decimals || 18,\n              logo: tokenDeployment.logo,\n              logoIpfs: tokenDeployment.logoIpfs\n            };\n          } else {\n            const tokenInfo = await uniswap.getTokenInfo(token.address);\n            selectedToken = { \n              ...token,\n              ...tokenInfo,\n              name: token.name || tokenInfo.name,\n              symbol: token.symbol || tokenInfo.symbol,\n              logo: token.logo || '/token-placeholder.png'\n            };\n          }\n        } catch (error) {\n          const tokenInfo = await uniswap.getTokenInfo(token.address);\n          selectedToken = { \n            ...token,\n            ...tokenInfo,\n            name: token.name || tokenInfo.name,\n            symbol: token.symbol || tokenInfo.symbol,\n            logo: token.logo || '/token-placeholder.png'\n          };\n        }\n      }\n      \n      setToken0(selectedToken);\n      setShowToken0Modal(false);\n\n      // Check for pool existence if both tokens are selected\n      if (token1) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const factoryAddress = UNISWAP_ADDRESSES[currentChainId]?.factory;\n        \n        if (!factoryAddress) {\n          throw new Error('Invalid network configuration');\n        }\n\n        // For Monad testnet, use direct RPC calls\n        if (currentChainId === 10143) {\n          const getPairData = ethers.AbiCoder.defaultAbiCoder().encode(\n            ['address', 'address'],\n            [selectedToken.address, token1.address]\n          ).slice(2);\n          \n          const pairAddress = await window.ethereum.request({\n            method: 'eth_call',\n            params: [{\n              to: factoryAddress,\n              data: '0xe6a43905' + getPairData // getPair function selector\n            }, 'latest']\n          });\n          \n          if (pairAddress && pairAddress !== '0x0000000000000000000000000000000000000000000000000000000000000000') {\n            const actualAddress = '0x' + pairAddress.slice(26);\n            setPoolExists({ address: actualAddress });\n            setError('pool exists');\n            setShowProgressModal(true);\n            setCurrentStep('preparing');\n          } else {\n            setPoolExists(null);\n            setError(null);\n          }\n        } else {\n          const factoryContract = new ethers.Contract(\n            factoryAddress,\n            ['function getPair(address tokenA, address tokenB) external view returns (address pair)'],\n            provider\n          );\n          \n          const poolAddress = await factoryContract.getPair(selectedToken.address, token1.address);\n          \n          if (poolAddress && poolAddress !== ethers.ZeroAddress) {\n            setPoolExists({ address: poolAddress });\n            setError('pool exists');\n            setShowProgressModal(true);\n            setCurrentStep('preparing');\n          } else {\n            setPoolExists(null);\n            setError(null);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error selecting token0:', error);\n      toast.error('Failed to load token information. Please try again.');\n    }\n  };\n\n  const handleToken1Select = async (token) => {\n    try {\n      if (!isValidNetwork) {\n        toast.error('Please switch to Unichain network (Testnet or Mainnet) or Monad Testnet');\n        return;\n      }\n\n      // Check for WETH and show warning\n      if (token.symbol === 'WETH' && currentChainId !== 10143) {\n        toast.error('Please use ETH instead of WETH. The router will automatically convert ETH to WETH.', {\n          duration: 6000,\n          style: {\n            borderRadius: '10px',\n            background: '#333',\n            color: '#fff',\n          },\n        });\n        return;\n      }\n\n      let selectedToken;\n      if (token.symbol === 'ETH' || token.symbol === 'MON') {\n        selectedToken = {\n          ...token,\n          address: UNISWAP_ADDRESSES[currentChainId]?.WETH,\n          decimals: 18,\n          isNative: true\n        };\n      } else {\n        // Try to get token info from Firebase first\n        try {\n          const tokenDeployment = await getTokenDeploymentByAddress(token.address);\n          if (tokenDeployment) {\n            selectedToken = {\n              ...token,\n              name: tokenDeployment.name,\n              symbol: tokenDeployment.symbol,\n              decimals: tokenDeployment.decimals || 18,\n              logo: tokenDeployment.logo,\n              logoIpfs: tokenDeployment.logoIpfs\n            };\n          } else {\n            // Fallback to contract info\n            const tokenInfo = await uniswap.getTokenInfo(token.address);\n            selectedToken = { \n              ...token,\n              ...tokenInfo,\n              name: token.name || tokenInfo.name,\n              symbol: token.symbol || tokenInfo.symbol,\n              logo: token.logo || '/token-placeholder.png'\n            };\n          }\n        } catch (firebaseError) {\n          console.warn('Firebase fetch failed, falling back to contract:', firebaseError);\n          const tokenInfo = await uniswap.getTokenInfo(token.address);\n          selectedToken = { \n            ...token,\n            ...tokenInfo,\n            name: token.name || tokenInfo.name,\n            symbol: token.symbol || tokenInfo.symbol,\n            logo: token.logo || '/token-placeholder.png'\n          };\n        }\n      }\n      \n      setToken1(selectedToken);\n      setShowToken1Modal(false);\n\n      // Check for pool existence if both tokens are selected\n      if (token0) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const factoryAddress = UNISWAP_ADDRESSES[currentChainId]?.factory;\n        \n        if (!factoryAddress) {\n          throw new Error('Invalid network configuration');\n        }\n\n        const factoryContract = new ethers.Contract(\n          factoryAddress,\n          ['function getPair(address tokenA, address tokenB) external view returns (address pair)'],\n          provider\n        );\n        \n        const poolAddress = await factoryContract.getPair(token0.address, selectedToken.address);\n        \n        if (poolAddress && poolAddress !== ethers.ZeroAddress) {\n          setPoolExists({ address: poolAddress });\n          setError('pool exists');\n          setShowProgressModal(true);\n          setCurrentStep('preparing');\n        } else {\n          setPoolExists(null);\n          setError(null);\n        }\n      }\n    } catch (error) {\n      console.error('Error selecting token1:', error);\n      toast.error('Failed to load token information. Please try again.');\n    }\n  };\n\n  // Handle amount changes\n  const handleAmount0Change = (value) => {\n    setAmount0(value);\n    if (value && token0 && token1) {\n      // Update price info when amount0 changes\n      const calculatedAmount1 = amount1 || value; // Use existing amount1 or same as input\n      setPriceInfo({\n        token0Price: parseFloat(calculatedAmount1) / parseFloat(value),\n        token1Price: parseFloat(value) / parseFloat(calculatedAmount1)\n      });\n    }\n  };\n\n  const handleAmount1Change = (value) => {\n    setAmount1(value);\n    if (value && token0 && token1 && amount0) {\n      // Update price info when amount1 changes\n      setPriceInfo({\n        token0Price: parseFloat(value) / parseFloat(amount0),\n        token1Price: parseFloat(amount0) / parseFloat(value)\n      });\n    }\n  };\n\n  // Add window resize handler\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const handleRating = (rating) => {\n    console.log('User rated pool creation:', rating);\n    // Here you can implement the logic to save the rating\n  };\n\n  // Modify handleCreatePool\n  const handleCreatePool = async () => {\n    if (!isConnected) {\n      openConnectModal();\n      return;\n    }\n\n    if (!isValidNetwork) {\n      toast.error('Please switch to a supported network (Unichain or Monad Testnet)');\n      return;\n    }\n\n    if (!token0 || !token1) {\n      setError('Please select both tokens');\n      setShowProgressModal(true);\n      setCurrentStep('preparing');\n      return;\n    }\n\n    if (!amount0 || !amount1) {\n      setError('Please enter both amounts');\n      setShowProgressModal(true);\n      setCurrentStep('preparing');\n      return;\n    }\n\n    setLoading(true);\n    setShowProgressModal(true);\n    setCurrentStep('preparing');\n    setError(null);\n    \n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const factoryAddress = UNISWAP_ADDRESSES[currentChainId]?.factory;\n      \n      if (!factoryAddress) {\n        throw new Error('Invalid network configuration');\n      }\n\n      // Check if pool exists\n      let poolAddress;\n      if (currentChainId === 10143) {\n        // For Monad testnet, use direct RPC call\n        const factoryInterface = new ethers.Interface([\n          'function getPair(address tokenA, address tokenB) external view returns (address pair)'\n        ]);\n        const data = factoryInterface.encodeFunctionData('getPair', [token0.address, token1.address]);\n        const result = await provider.call({\n          to: factoryAddress,\n          data: data\n        });\n        poolAddress = ethers.getAddress(ethers.dataSlice(result, 12));\n      } else {\n        const factoryContract = new ethers.Contract(\n          factoryAddress,\n          ['function getPair(address tokenA, address tokenB) external view returns (address pair)'],\n          provider\n        );\n        poolAddress = await factoryContract.getPair(token0.address, token1.address);\n      }\n      \n      if (poolAddress && poolAddress !== ethers.ZeroAddress) {\n        setPoolExists({ address: poolAddress });\n        setError('pool exists');\n        setCurrentStep('preparing');\n        setLoading(false);\n        return;\n      }\n\n      setIsNewPool(true);\n      setCurrentStep('approval');\n      \n      const parsedAmount0 = ethers.parseUnits(amount0, token0.decimals);\n      const parsedAmount1 = ethers.parseUnits(amount1, token1.decimals);\n\n      // Handle pool creation based on network\n      if (currentChainId === 10143) {\n        // For Monad testnet\n        const routerAddress = UNISWAP_ADDRESSES[currentChainId].router;\n        const routerInterface = new ethers.Interface([\n          'function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity)',\n          'function addLiquidityETH(address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity)'\n        ]);\n\n        const signer = await provider.getSigner();\n        const deadline = Math.floor(Date.now() / 1000) + 60 * 20; // 20 minutes from now\n\n        if (token0.isNative || token1.isNative) {\n          // Handle native MON + token pair\n          const tokenAddress = token0.isNative ? token1.address : token0.address;\n          const tokenAmount = token0.isNative ? parsedAmount1 : parsedAmount0;\n          const ethAmount = token0.isNative ? parsedAmount0 : parsedAmount1;\n\n          // Approve token first if needed\n          if (!token0.isNative) {\n            const tokenContract = new ethers.Contract(\n              token0.address,\n              ['function approve(address spender, uint256 amount) external returns (bool)'],\n              signer\n            );\n            await tokenContract.approve(routerAddress, parsedAmount0);\n          } else if (!token1.isNative) {\n            const tokenContract = new ethers.Contract(\n              token1.address,\n              ['function approve(address spender, uint256 amount) external returns (bool)'],\n              signer\n            );\n            await tokenContract.approve(routerAddress, parsedAmount1);\n          }\n\n          const tx = await signer.sendTransaction({\n            to: routerAddress,\n            data: routerInterface.encodeFunctionData('addLiquidityETH', [\n              tokenAddress,\n              tokenAmount,\n              tokenAmount,\n              ethAmount,\n              await signer.getAddress(),\n              deadline\n            ]),\n            value: ethAmount\n          });\n          await tx.wait();\n        } else {\n          // Handle token + token pair\n          // Approve both tokens\n          const token0Contract = new ethers.Contract(\n            token0.address,\n            ['function approve(address spender, uint256 amount) external returns (bool)'],\n            signer\n          );\n          const token1Contract = new ethers.Contract(\n            token1.address,\n            ['function approve(address spender, uint256 amount) external returns (bool)'],\n            signer\n          );\n\n          await token0Contract.approve(routerAddress, parsedAmount0);\n          await token1Contract.approve(routerAddress, parsedAmount1);\n\n          const tx = await signer.sendTransaction({\n            to: routerAddress,\n            data: routerInterface.encodeFunctionData('addLiquidity', [\n              token0.address,\n              token1.address,\n              parsedAmount0,\n              parsedAmount1,\n              parsedAmount0,\n              parsedAmount1,\n              await signer.getAddress(),\n              deadline\n            ])\n          });\n          await tx.wait();\n        }\n      } else {\n        // For other networks, use existing uniswap service\n        await uniswap.createPool(\n          token0.address,\n          token1.address,\n          parsedAmount0,\n          parsedAmount1\n        );\n      }\n\n      setCurrentStep('completed');\n      \n      setTimeout(() => {\n        setShowProgressModal(false);\n        setCurrentStep(null);\n        setShowConfetti(true);\n        \n        setTimeout(() => {\n          setShowRatingModal(true);\n        }, 1000);\n        \n        setTimeout(() => {\n          setAmount0('');\n          setAmount1('');\n          setShowConfetti(false);\n        }, 30000);\n      }, 1000);\n    } catch (error) {\n      console.error('Pool creation error:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update the useEffect for price ratio calculation\n  useEffect(() => {\n    const updatePriceRatio = async () => {\n      if (token0 && token1 && amount0 && amount1) {\n        const ratio = await fetchPriceRatio(token0, token1, amount0, amount1);\n        setPriceRatio(ratio);\n        \n        // Calculate and set price info\n        setPriceInfo({\n          token0Price: parseFloat(amount1) / parseFloat(amount0),\n          token1Price: parseFloat(amount0) / parseFloat(amount1)\n        });\n      } else {\n        setPriceRatio(null);\n        setPriceInfo(null);\n      }\n    };\n\n    updatePriceRatio();\n  }, [token0, token1, amount0, amount1]);\n\n  return (\n    <motion.div \n      variants={containerVariants}\n      initial=\"hidden\"\n      animate=\"show\"\n      className=\"space-y-6 max-w-lg mx-auto\"\n    >\n      {showConfetti && (\n        <Confetti\n          width={windowSize.width}\n          height={windowSize.height}\n          numberOfPieces={200}\n          recycle={false}\n          gravity={0.2}\n          initialVelocityX={10}\n          initialVelocityY={10}\n          colors={['#00ffbd', '#00e6a9', '#00cc95', '#00b381', '#00996d']}\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 99999,\n            pointerEvents: 'none'\n          }}\n        />\n      )}\n\n      <motion.div \n        variants={itemVariants}\n        className=\"bg-white/5 dark:bg-[#1a1b1f] backdrop-blur-xl rounded-2xl p-6 border border-gray-200 dark:border-gray-800\"\n      >\n        {/* Add NetworkStatus component */}\n        <NetworkStatus currentChainId={currentChainId} />\n\n        {!isConnected ? (\n          <motion.div \n            variants={itemVariants}\n            className=\"text-center py-8\"\n          >\n            <motion.div \n              className=\"mb-4\"\n              animate={{ rotate: 360 }}\n              transition={{ duration: 2, repeat: Infinity, ease: \"linear\" }}\n            >\n              <BiWallet size={48} className=\"mx-auto text-gray-400 dark:text-gray-600\" />\n            </motion.div>\n            <motion.h3 \n              variants={itemVariants}\n              className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\"\n            >\n              Connect Your Wallet\n            </motion.h3>\n            <motion.p \n              variants={itemVariants}\n              className=\"text-gray-500 dark:text-gray-400 mb-6\"\n            >\n              Please connect your wallet to create a liquidity pool\n            </motion.p>\n            <motion.button\n              variants={buttonVariants}\n              whileHover=\"hover\"\n              whileTap=\"tap\"\n              onClick={openConnectModal}\n              className=\"px-6 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-semibold rounded-lg transition-colors\"\n            >\n              Connect Wallet\n            </motion.button>\n          </motion.div>\n        ) : (\n          <AnimatePresence mode=\"wait\">\n            <motion.div \n              variants={itemVariants}\n              className=\"space-y-4\"\n            >\n              {/* Token 0 Selection */}\n              <motion.div variants={itemVariants} className=\"space-y-2\">\n                <label className=\"block text-sm font-medium text-gray-900 dark:text-gray-100\">\n                  Token 1\n                </label>\n                <motion.button\n                  variants={buttonVariants}\n                  whileHover=\"hover\"\n                  whileTap=\"tap\"\n                  onClick={() => setShowToken0Modal(true)}\n                  className=\"w-full px-4 py-3 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl text-left text-gray-900 dark:text-white hover:bg-white/20 dark:hover:bg-[#2d2f36]/80 transition-colors\"\n                >\n                  {token0 ? (\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <img src={token0.logo} alt={token0.symbol} className=\"w-5 h-5\" />\n                        <span>{token0.symbol}</span>\n                      </div>\n                      <TokenBalance token={token0} />\n                    </div>\n                  ) : (\n                    'Select Token'\n                  )}\n                </motion.button>\n                {token0 && (\n                  <motion.input\n                    variants={itemVariants}\n                    initial={{ opacity: 0, y: -10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    type=\"text\"\n                    value={amount0}\n                    onChange={(e) => handleAmount0Change(e.target.value)}\n                    placeholder=\"Enter amount\"\n                    className=\"w-full px-4 py-3 mt-2 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl text-gray-900 dark:text-white\"\n                  />\n                )}\n              </motion.div>\n\n              {/* Token 1 Selection */}\n              <motion.div variants={itemVariants} className=\"space-y-2\">\n                <label className=\"block text-sm font-medium text-gray-900 dark:text-gray-100\">\n                  Token 2\n                </label>\n                <motion.button\n                  variants={buttonVariants}\n                  whileHover=\"hover\"\n                  whileTap=\"tap\"\n                  onClick={() => setShowToken1Modal(true)}\n                  className=\"w-full px-4 py-3 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl text-left text-gray-900 dark:text-white hover:bg-white/20 dark:hover:bg-[#2d2f36]/80 transition-colors\"\n                >\n                  {token1 ? (\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <img src={token1.logo} alt={token1.symbol} className=\"w-5 h-5\" />\n                        <span>{token1.symbol}</span>\n                      </div>\n                      <TokenBalance token={token1} />\n                    </div>\n                  ) : (\n                    'Select Token'\n                  )}\n                </motion.button>\n                {token1 && (\n                  <motion.input\n                    variants={itemVariants}\n                    initial={{ opacity: 0, y: -10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    type=\"text\"\n                    value={amount1}\n                    onChange={(e) => handleAmount1Change(e.target.value)}\n                    placeholder=\"Enter amount\"\n                    className=\"w-full px-4 py-3 mt-2 bg-white/10 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl text-gray-900 dark:text-white\"\n                  />\n                )}\n              </motion.div>\n\n              {/* Add Price Information Display right after Token 2 */}\n              {priceInfo && token0 && token1 && amount0 && amount1 && (\n                <motion.div\n                  variants={itemVariants}\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className=\"mt-2 p-4 bg-white/5 dark:bg-[#2d2f36]/50 rounded-xl border border-gray-200 dark:border-gray-700\"\n                >\n                  <div className=\"mb-2\">\n                    <h3 className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">Initial Prices</h3>\n                    <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-0.5\">\n                      The ratio of tokens you add will set the initial price of the pool.\n                    </p>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between items-center bg-white/5 dark:bg-black/20 p-2 rounded-lg\">\n                      <span className=\"text-sm text-gray-600 dark:text-gray-400\">1 {token0.symbol} =</span>\n                      <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        {priceInfo.token0Price.toFixed(6)} {token1.symbol}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center bg-white/5 dark:bg-black/20 p-2 rounded-lg\">\n                      <span className=\"text-sm text-gray-600 dark:text-gray-400\">1 {token1.symbol} =</span>\n                      <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        {priceInfo.token1Price.toFixed(6)} {token0.symbol}\n                      </span>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n\n              {/* Fee Tier Selection */}\n              <motion.div variants={itemVariants} className=\"mt-6 space-y-2\">\n                <label className=\"block text-sm font-medium text-gray-900 dark:text-gray-100\">\n                  Fee Tier\n                </label>\n                <motion.div \n                  variants={itemVariants}\n                  className=\"w-full\"\n                >\n                  <div className=\"px-4 py-3 bg-[#00ffbd]/10 rounded-xl text-sm font-medium text-[#00ffbd] flex items-center justify-center\">\n                    0.3% (Fixed Fee Tier)\n                  </div>\n                </motion.div>\n              </motion.div>\n\n              {/* Info Box */}\n              <motion.div \n                variants={itemVariants}\n                className=\"mt-6 p-4 bg-blue-500/5 dark:bg-blue-500/10 rounded-xl border border-blue-200 dark:border-blue-800\"\n              >\n                <h3 className=\"text-sm font-medium text-blue-900 dark:text-blue-100 mb-2\">\n                  About Pool Creation\n                </h3>\n                <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n                  Creating a new liquidity pool allows you to be the first liquidity provider.\n                  The ratio of tokens you add will set the initial price. Make sure to add sufficient liquidity to minimize price impact from trades.\n                </p>\n              </motion.div>\n            </motion.div>\n          </AnimatePresence>\n        )}\n      </motion.div>\n\n      {/* Create Pool Button */}\n      {!poolExists && (\n        <motion.button\n          variants={buttonVariants}\n          whileHover=\"hover\"\n          whileTap=\"tap\"\n          onClick={handleCreatePool}\n          disabled={loading || !token0 || !token1 || !amount0 || !amount1 || !isValidNetwork}\n          className={`\n            w-full px-4 py-4 rounded-xl font-medium text-black text-lg\n            ${loading || !token0 || !token1 || !amount0 || !amount1 || !isValidNetwork\n              ? 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed'\n              : 'bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors'\n            }\n          `}\n        >\n          {loading ? 'Creating Pool...' : !isValidNetwork ? 'Switch to Unichain Network' : 'Create Pool'}\n        </motion.button>\n      )}\n\n      {/* Keep existing modals */}\n      <TokenSelectionModal\n        isOpen={showToken0Modal}\n        onClose={() => setShowToken0Modal(false)}\n        onSelect={handleToken0Select}\n        selectedTokenAddress={token0?.address}\n        currentChainId={currentChainId}\n      />\n      <TokenSelectionModal\n        isOpen={showToken1Modal}\n        onClose={() => setShowToken1Modal(false)}\n        onSelect={handleToken1Select}\n        selectedTokenAddress={token1?.address}\n        currentChainId={currentChainId}\n      />\n      <PoolProgressModal\n        isOpen={showProgressModal}\n        onClose={() => {\n          setShowProgressModal(false);\n          setCurrentStep(null);\n          setError(null);\n        }}\n        currentStep={currentStep}\n        token0={token0}\n        token1={token1}\n        isNewPool={isNewPool}\n        error={error}\n        poolExists={poolExists}\n        setActiveTab={setActiveTab}\n      />\n      <StarRatingModal\n        isOpen={showRatingModal}\n        onClose={() => setShowRatingModal(false)}\n        onRate={handleRating}\n      />\n    </motion.div>\n  );\n} ","import { ethers } from 'ethers';\r\n\r\n// Add ERC20 ABI for token approvals\r\nconst ERC20_ABI = [\r\n  \"function approve(address spender, uint256 amount) external returns (bool)\",\r\n  \"function allowance(address owner, address spender) external view returns (uint256)\"\r\n];\r\n\r\nconst POSITION_MANAGER_ADDRESS = '0xb7610f9b733e7d45184be3a1bc8a847be6ec4f0b';\r\nconst POSITION_MANAGER_ABI = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenDescriptor_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}];\r\n\r\n// Fee amounts for V3 pools\r\nexport const FeeAmount = {\r\n  LOWEST: 100,    // 0.01%\r\n  LOW: 500,       // 0.05%\r\n  MEDIUM: 3000,   // 0.3%\r\n  HIGH: 10000     // 1%\r\n};\r\n\r\n// Tick spacings for each fee tier\r\nexport const TICK_SPACINGS = {\r\n  [FeeAmount.LOWEST]: 1,\r\n  [FeeAmount.LOW]: 10,\r\n  [FeeAmount.MEDIUM]: 60,\r\n  [FeeAmount.HIGH]: 200\r\n};\r\n\r\n// Add QuoterV2 address\r\nexport const QUOTER_V2_ADDRESS = '0x385a5cf5f83e99f7bb2852b6a19c3538b9fa7658';\r\n\r\n// Add QuoterV2 ABI\r\nconst QUOTER_V2_ABI = [\r\n  'function quoteExactInputSingle(tuple(address tokenIn, address tokenOut, uint256 amountIn, uint24 fee, uint160 sqrtPriceLimitX96) params) external view returns (uint256 amountOut, uint160 sqrtPriceX96After, uint32 initializedTicksCrossed, uint256 gasEstimate)',\r\n  'function quoteExactOutputSingle(tuple(address tokenIn, address tokenOut, uint256 amount, uint24 fee, uint160 sqrtPriceLimitX96) params) external view returns (uint256 amountIn, uint160 sqrtPriceX96After, uint32 initializedTicksCrossed, uint256 gasEstimate)'\r\n];\r\n\r\n// Add factory address at the top with other constants\r\nconst FACTORY_ADDRESS = '0x1f984000000000000000000000000000000000003';\r\n\r\n// Add pool interface ABI\r\nconst POOL_INTERFACE = [\r\n  'function slot0() external view returns (uint160 sqrtPriceX96, int24 tick, uint16 observationIndex, uint16 observationCardinality, uint16 observationCardinalityNext, uint8 feeProtocol, bool unlocked)',\r\n  'function liquidity() external view returns (uint128)',\r\n  'function token0() external view returns (address)',\r\n  'function token1() external view returns (address)'\r\n];\r\n\r\n// Add UNISWAP_V3_ADDRESSES at the top with other constants\r\nconst UNISWAP_V3_ADDRESSES = {\r\n  factory: '0x1f984000000000000000000000000000000000003',\r\n  quoter: '0x385a5cf5f83e99f7bb2852b6a19c3538b9f7658',\r\n};\r\n\r\n// Add pool address computation\r\nexport function computePoolAddress({ tokenA, tokenB, fee }) {\r\n  // Sort tokens (token0 must be less than token1)\r\n  const [token0, token1] = tokenA.toLowerCase() < tokenB.toLowerCase() \r\n    ? [tokenA, tokenB] \r\n    : [tokenB, tokenA];\r\n\r\n  // Uniswap V3 constants\r\n  const POOL_INIT_CODE_HASH = '0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54';\r\n  const FACTORY_ADDRESS = '0x1f984000000000000000000000000000000000003';\r\n\r\n  // First encode the tokens and fee using abi.encode\r\n  const encodedTokenData = ethers.AbiCoder.defaultAbiCoder().encode(\r\n    ['address', 'address', 'uint24'],\r\n    [token0, token1, fee]\r\n  );\r\n\r\n  // Create the final encoded data matching the Solidity implementation\r\n  const encodedData = ethers.concat([\r\n    '0xff',\r\n    FACTORY_ADDRESS,\r\n    ethers.keccak256(encodedTokenData),\r\n    POOL_INIT_CODE_HASH\r\n  ]);\r\n\r\n  // Compute the address using keccak256\r\n  const poolAddress = ethers.getAddress(\r\n    '0x' + ethers.keccak256(encodedData).slice(26)\r\n  );\r\n\r\n  return poolAddress;\r\n}\r\n\r\nexport class V3PositionManager {\r\n  constructor(signerOrProvider) {\r\n    if (!signerOrProvider) {\r\n      throw new Error('Signer or provider is required');\r\n    }\r\n\r\n    // If it's a signer with a provider, use those directly\r\n    if (signerOrProvider.provider) {\r\n      this.provider = signerOrProvider.provider;\r\n      this.signer = signerOrProvider;\r\n    }\r\n    // If it's a provider with a getSigner method, get the signer\r\n    else if (signerOrProvider.getSigner) {\r\n      this.provider = signerOrProvider;\r\n      this.signer = signerOrProvider.getSigner();\r\n    }\r\n    // Otherwise assume it's a provider\r\n    else {\r\n      this.provider = signerOrProvider;\r\n      this.signer = null;\r\n    }\r\n\r\n    // Initialize the contract with the signer if available, otherwise use provider\r\n    this.contract = new ethers.Contract(\r\n      POSITION_MANAGER_ADDRESS,\r\n      POSITION_MANAGER_ABI,\r\n      this.signer || this.provider\r\n    );\r\n  }\r\n\r\n  // Token Approval Methods\r\n  async checkTokenAllowance(tokenAddress, ownerAddress) {\r\n    try {\r\n      const tokenContract = new ethers.Contract(\r\n        tokenAddress,\r\n        ERC20_ABI,\r\n        this.provider\r\n      );\r\n      \r\n      const allowance = await tokenContract.allowance(\r\n        ownerAddress,\r\n        POSITION_MANAGER_ADDRESS\r\n      );\r\n      \r\n      return allowance;\r\n    } catch (error) {\r\n      console.error('Error checking token allowance:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async approveToken(tokenAddress, amount) {\r\n    if (!this.signer) {\r\n      throw new Error('Signer is required for approving tokens');\r\n    }\r\n\r\n    try {\r\n      const tokenContract = new ethers.Contract(\r\n        tokenAddress,\r\n        ERC20_ABI,\r\n        this.signer\r\n      );\r\n      \r\n      const tx = await tokenContract.approve(\r\n        POSITION_MANAGER_ADDRESS,\r\n        amount\r\n      );\r\n      \r\n      return await tx.wait();\r\n    } catch (error) {\r\n      console.error('Error approving token:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Helper method to check and approve tokens if needed\r\n  async ensureTokenApprovals(params) {\r\n    const { token0, token1, amount0Desired, amount1Desired, ownerAddress } = params;\r\n    \r\n    try {\r\n      // Check allowances\r\n      const allowance0 = await this.checkTokenAllowance(token0, ownerAddress);\r\n      const allowance1 = await this.checkTokenAllowance(token1, ownerAddress);\r\n\r\n      // Convert to BigNumber for comparison\r\n      const amount0BN = ethers.getBigInt(amount0Desired.toString());\r\n      const amount1BN = ethers.getBigInt(amount1Desired.toString());\r\n      const allowance0BN = ethers.getBigInt(allowance0.toString());\r\n      const allowance1BN = ethers.getBigInt(allowance1.toString());\r\n\r\n      // Approve if needed\r\n      if (allowance0BN < amount0BN) {\r\n        await this.approveToken(token0, ethers.MaxUint256);\r\n      }\r\n      if (allowance1BN < amount1BN) {\r\n        await this.approveToken(token1, ethers.MaxUint256);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error ensuring token approvals:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Pool Management\r\n  async createAndInitializePool(token0, token1, fee, sqrtPriceX96) {\r\n    if (!this.signer) {\r\n      throw new Error('Signer is required for creating pool');\r\n    }\r\n\r\n    try {\r\n      // Ensure token0 and token1 are in the correct order\r\n      let finalToken0 = token0;\r\n      let finalToken1 = token1;\r\n      let finalSqrtPriceX96 = sqrtPriceX96;\r\n\r\n      if (BigInt(token0) > BigInt(token1)) {\r\n        finalToken0 = token1;\r\n        finalToken1 = token0;\r\n        // If tokens were swapped and a specific price was provided, adjust it\r\n        if (sqrtPriceX96) {\r\n          finalSqrtPriceX96 = (2n ** 192n) / BigInt(sqrtPriceX96);\r\n        }\r\n      }\r\n\r\n      // If no specific price is provided, use a reasonable default\r\n      // This sets the initial price to 1:1 scaled by token decimals\r\n      if (!finalSqrtPriceX96) {\r\n        finalSqrtPriceX96 = ethers.toBigInt('79228162514264337593543950336'); // sqrt(1) * 2^96\r\n      }\r\n\r\n      // First, try to create and initialize the pool\r\n      const tx = await this.contract.createAndInitializePoolIfNecessary(\r\n        finalToken0,\r\n        finalToken1,\r\n        fee,\r\n        finalSqrtPriceX96,\r\n        { \r\n          gasLimit: 5000000 // Provide enough gas for pool creation\r\n        }\r\n      );\r\n\r\n      const receipt = await tx.wait();\r\n      \r\n      // Parse logs to find pool address\r\n      const events = receipt.logs.map(log => {\r\n        try {\r\n          return this.contract.interface.parseLog(log);\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n      }).filter(Boolean);\r\n\r\n      // Look for pool creation event\r\n      const poolCreatedEvent = events.find(event => \r\n        event.name === 'PoolCreated' || \r\n        event.name === 'Pool' || \r\n        event.fragment?.name === 'PoolCreated'\r\n      );\r\n      \r\n      if (!poolCreatedEvent) {\r\n        // If we can't find the event, the pool might already exist\r\n        // We can derive the pool address from the factory\r\n        const factory = await this.contract.factory();\r\n        const factoryContract = new ethers.Contract(\r\n          factory,\r\n          ['function getPool(address,address,uint24) view returns (address)'],\r\n          this.provider\r\n        );\r\n        const poolAddress = await factoryContract.getPool(finalToken0, finalToken1, fee);\r\n        \r\n        if (poolAddress === '0x0000000000000000000000000000000000000000') {\r\n          throw new Error('Failed to create or find pool');\r\n        }\r\n\r\n        return {\r\n          pool: poolAddress,\r\n          token0: finalToken0,\r\n          token1: finalToken1,\r\n          fee,\r\n          receipt\r\n        };\r\n      }\r\n\r\n      return {\r\n        pool: poolCreatedEvent.args.pool,\r\n        token0: finalToken0,\r\n        token1: finalToken1,\r\n        fee,\r\n        receipt\r\n      };\r\n    } catch (error) {\r\n      console.error('Error creating pool:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Position Management\r\n  async mint(params) {\r\n    if (!this.signer) {\r\n      throw new Error('Signer is required for minting');\r\n    }\r\n\r\n    try {\r\n      const {\r\n        token0,\r\n        token1,\r\n        fee,\r\n        tickLower,\r\n        tickUpper,\r\n        amount0Desired,\r\n        amount1Desired,\r\n        amount0Min = 0,\r\n        amount1Min = 0,\r\n        recipient,\r\n        deadline = Math.floor(Date.now() / 1000) + 1200 // 20 minutes from now\r\n      } = params;\r\n\r\n      // Ensure tokens are in the correct order\r\n      let finalToken0 = token0;\r\n      let finalToken1 = token1;\r\n      let finalAmount0Desired = amount0Desired;\r\n      let finalAmount1Desired = amount1Desired;\r\n      let finalAmount0Min = amount0Min;\r\n      let finalAmount1Min = amount1Min;\r\n      let finalTickLower = tickLower;\r\n      let finalTickUpper = tickUpper;\r\n\r\n      if (BigInt(token0) > BigInt(token1)) {\r\n        finalToken0 = token1;\r\n        finalToken1 = token0;\r\n        finalAmount0Desired = amount1Desired;\r\n        finalAmount1Desired = amount0Desired;\r\n        finalAmount0Min = amount1Min;\r\n        finalAmount1Min = amount0Min;\r\n        // Swap ticks when tokens are swapped\r\n        finalTickLower = -tickUpper;\r\n        finalTickUpper = -tickLower;\r\n      }\r\n\r\n      // Ensure the ticks are spaced correctly\r\n      const tickSpacing = TICK_SPACINGS[fee];\r\n      finalTickLower = Math.floor(finalTickLower / tickSpacing) * tickSpacing;\r\n      finalTickUpper = Math.floor(finalTickUpper / tickSpacing) * tickSpacing;\r\n\r\n      // First approve the position manager to spend tokens if needed\r\n      const signerAddress = await this.signer.getAddress();\r\n      await this.ensureTokenApprovals({\r\n        token0: finalToken0,\r\n        token1: finalToken1,\r\n        amount0Desired: finalAmount0Desired,\r\n        amount1Desired: finalAmount1Desired,\r\n        ownerAddress: signerAddress\r\n      });\r\n\r\n      // Prepare mint parameters according to the Uniswap spec\r\n      const mintParams = {\r\n        token0: finalToken0,\r\n        token1: finalToken1,\r\n        fee,\r\n        tickLower: finalTickLower,\r\n        tickUpper: finalTickUpper,\r\n        amount0Desired: finalAmount0Desired,\r\n        amount1Desired: finalAmount1Desired,\r\n        amount0Min: finalAmount0Min,\r\n        amount1Min: finalAmount1Min,\r\n        recipient: recipient || signerAddress,\r\n        deadline\r\n      };\r\n\r\n      // Call mint on the position manager contract\r\n      const tx = await this.contract.mint(\r\n        mintParams,\r\n        {\r\n          gasLimit: 1000000 // Provide enough gas for minting\r\n        }\r\n      );\r\n      \r\n      const receipt = await tx.wait();\r\n\r\n      // Parse all events from the receipt\r\n      const events = receipt.logs.map(log => {\r\n        try {\r\n          return this.contract.interface.parseLog(log);\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n      }).filter(Boolean);\r\n\r\n      // Find the relevant events\r\n      const transferEvent = events.find(event => event.name === 'Transfer');\r\n      const mintEvent = events.find(event => \r\n        event.name === 'IncreaseLiquidity' || \r\n        event.fragment?.name === 'IncreaseLiquidity'\r\n      );\r\n      \r\n      if (!transferEvent || !mintEvent) {\r\n        throw new Error('Required events not found in transaction receipt');\r\n      }\r\n\r\n      // Return the minting results\r\n      return {\r\n        tokenId: transferEvent.args.tokenId || transferEvent.args.id,\r\n        liquidity: mintEvent.args.liquidity,\r\n        amount0: mintEvent.args.amount0,\r\n        amount1: mintEvent.args.amount1,\r\n        receipt\r\n      };\r\n    } catch (error) {\r\n      console.error('Error minting position:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async increaseLiquidity(params) {\r\n    try {\r\n      // Ensure tokens are approved before increasing liquidity\r\n      await this.ensureTokenApprovals(params);\r\n      \r\n      const tx = await this.contract.increaseLiquidity(params);\r\n      return await tx.wait();\r\n    } catch (error) {\r\n      console.error('Error increasing liquidity:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async decreaseLiquidity(params) {\r\n    try {\r\n      const tx = await this.contract.decreaseLiquidity(params);\r\n      return await tx.wait();\r\n    } catch (error) {\r\n      console.error('Error decreasing liquidity:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async collect(params) {\r\n    try {\r\n      const tx = await this.contract.collect(params);\r\n      return await tx.wait();\r\n    } catch (error) {\r\n      console.error('Error collecting fees:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async burn(tokenId) {\r\n    try {\r\n      const tx = await this.contract.burn(tokenId);\r\n      return await tx.wait();\r\n    } catch (error) {\r\n      console.error('Error burning position:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Position Information\r\n  async getPosition(tokenId) {\r\n    try {\r\n      const position = await this.contract.positions(tokenId);\r\n      return {\r\n        nonce: position.nonce,\r\n        operator: position.operator,\r\n        token0: position.token0,\r\n        token1: position.token1,\r\n        fee: position.fee,\r\n        tickLower: position.tickLower,\r\n        tickUpper: position.tickUpper,\r\n        liquidity: position.liquidity,\r\n        feeGrowthInside0LastX128: position.feeGrowthInside0LastX128,\r\n        feeGrowthInside1LastX128: position.feeGrowthInside1LastX128,\r\n        tokensOwed0: position.tokensOwed0,\r\n        tokensOwed1: position.tokensOwed1\r\n      };\r\n    } catch (error) {\r\n      console.error('Error getting position:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getPositionsForOwner(owner) {\r\n    try {\r\n      const balance = await this.contract.balanceOf(owner);\r\n      const positions = [];\r\n      \r\n      for (let i = 0; i < balance; i++) {\r\n        const tokenId = await this.contract.tokenOfOwnerByIndex(owner, i);\r\n        const position = await this.getPosition(tokenId);\r\n        positions.push({ tokenId, ...position });\r\n      }\r\n      \r\n      return positions;\r\n    } catch (error) {\r\n      console.error('Error getting positions for owner:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Helper function to format parameters for minting\r\n  static formatMintParams({\r\n    token0,\r\n    token1,\r\n    fee,\r\n    tickLower,\r\n    tickUpper,\r\n    amount0Desired,\r\n    amount1Desired,\r\n    amount0Min,\r\n    amount1Min,\r\n    recipient,\r\n    deadline\r\n  }) {\r\n    return {\r\n      token0,\r\n      token1,\r\n      fee,\r\n      tickLower,\r\n      tickUpper,\r\n      amount0Desired,\r\n      amount1Desired,\r\n      amount0Min: amount0Min || 0,\r\n      amount1Min: amount1Min || 0,\r\n      recipient,\r\n      deadline: deadline || Math.floor(Date.now() / 1000) + 1200 // 20 minutes from now\r\n    };\r\n  }\r\n\r\n  // Helper function to format parameters for increasing liquidity\r\n  static formatIncreaseLiquidityParams({\r\n    tokenId,\r\n    amount0Desired,\r\n    amount1Desired,\r\n    amount0Min,\r\n    amount1Min,\r\n    deadline\r\n  }) {\r\n    return {\r\n      tokenId,\r\n      amount0Desired,\r\n      amount1Desired,\r\n      amount0Min: amount0Min || 0,\r\n      amount1Min: amount1Min || 0,\r\n      deadline: deadline || Math.floor(Date.now() / 1000) + 1200 // 20 minutes from now\r\n    };\r\n  }\r\n\r\n  // Helper function to format parameters for decreasing liquidity\r\n  static formatDecreaseLiquidityParams({\r\n    tokenId,\r\n    liquidity,\r\n    amount0Min,\r\n    amount1Min,\r\n    deadline\r\n  }) {\r\n    return {\r\n      tokenId,\r\n      liquidity,\r\n      amount0Min: amount0Min || 0,\r\n      amount1Min: amount1Min || 0,\r\n      deadline: deadline || Math.floor(Date.now() / 1000) + 1200 // 20 minutes from now\r\n    };\r\n  }\r\n\r\n  // Helper function to format parameters for collecting fees\r\n  static formatCollectParams({\r\n    tokenId,\r\n    recipient,\r\n    amount0Max,\r\n    amount1Max\r\n  }) {\r\n    return {\r\n      tokenId,\r\n      recipient,\r\n      amount0Max: amount0Max || ethers.MaxUint128,\r\n      amount1Max: amount1Max || ethers.MaxUint128\r\n    };\r\n  }\r\n\r\n  // UI Helper Functions\r\n  \r\n  // Calculate price from tick\r\n  static getPriceFromTick(tick, decimals0, decimals1) {\r\n    const price = 1.0001 ** tick;\r\n    return price * (10 ** (decimals1 - decimals0));\r\n  }\r\n\r\n  // Calculate tick from price\r\n  static getTickFromPrice(price, decimals0, decimals1) {\r\n    const adjustedPrice = price / (10 ** (decimals1 - decimals0));\r\n    return Math.floor(Math.log(adjustedPrice) / Math.log(1.0001));\r\n  }\r\n\r\n  // Get nearest valid tick for a given price and fee tier\r\n  static getNearestValidTick(tick, feeAmount) {\r\n    const tickSpacing = TICK_SPACINGS[feeAmount];\r\n    return Math.round(tick / tickSpacing) * tickSpacing;\r\n  }\r\n\r\n  // Calculate liquidity amounts for full range\r\n  static getFullRangeTicks(feeAmount) {\r\n    return {\r\n      tickLower: -887272,  // Min tick for v3\r\n      tickUpper: 887272    // Max tick for v3\r\n    };\r\n  }\r\n\r\n  // Calculate price range ticks\r\n  static getPriceRangeTicks({\r\n    basePrice,\r\n    lowerPricePercent,\r\n    upperPricePercent,\r\n    decimals0,\r\n    decimals1,\r\n    feeAmount\r\n  }) {\r\n    const lowerPrice = basePrice * (1 - lowerPricePercent / 100);\r\n    const upperPrice = basePrice * (1 + upperPricePercent / 100);\r\n\r\n    let tickLower = this.getTickFromPrice(lowerPrice, decimals0, decimals1);\r\n    let tickUpper = this.getTickFromPrice(upperPrice, decimals0, decimals1);\r\n\r\n    // Ensure ticks are valid for the fee tier\r\n    tickLower = this.getNearestValidTick(tickLower, feeAmount);\r\n    tickUpper = this.getNearestValidTick(tickUpper, feeAmount);\r\n\r\n    return { tickLower, tickUpper };\r\n  }\r\n\r\n  // Format amounts with slippage\r\n  static getAmountsWithSlippage(amount0Desired, amount1Desired, slippagePercent) {\r\n    const slippageFactor = 1 - slippagePercent / 100;\r\n    return {\r\n      amount0Min: BigInt(Math.floor(Number(amount0Desired) * slippageFactor)),\r\n      amount1Min: BigInt(Math.floor(Number(amount1Desired) * slippageFactor))\r\n    };\r\n  }\r\n\r\n  // Add Liquidity Helpers\r\n  async addLiquidityPreview({\r\n    token0,\r\n    token1,\r\n    fee,\r\n    amount0Desired,\r\n    amount1Desired,\r\n    tickLower,\r\n    tickUpper,\r\n    slippagePercent = 0.5,\r\n    recipient,\r\n    deadline\r\n  }) {\r\n    try {\r\n      const { amount0Min, amount1Min } = this.constructor.getAmountsWithSlippage(\r\n        amount0Desired,\r\n        amount1Desired,\r\n        slippagePercent\r\n      );\r\n\r\n      const params = this.constructor.formatMintParams({\r\n        token0,\r\n        token1,\r\n        fee,\r\n        tickLower,\r\n        tickUpper,\r\n        amount0Desired,\r\n        amount1Desired,\r\n        amount0Min,\r\n        amount1Min,\r\n        recipient,\r\n        deadline\r\n      });\r\n\r\n      return params;\r\n    } catch (error) {\r\n      console.error('Error previewing add liquidity:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Remove Liquidity Helpers\r\n  async removeLiquidityPreview({\r\n    tokenId,\r\n    liquidity,\r\n    slippagePercent = 0.5,\r\n    deadline\r\n  }) {\r\n    try {\r\n      const position = await this.getPosition(tokenId);\r\n      \r\n      // Calculate expected amounts based on current position\r\n      const amount0Expected = position.tokensOwed0;\r\n      const amount1Expected = position.tokensOwed1;\r\n\r\n      const { amount0Min, amount1Min } = this.constructor.getAmountsWithSlippage(\r\n        amount0Expected,\r\n        amount1Expected,\r\n        slippagePercent\r\n      );\r\n\r\n      const params = this.constructor.formatDecreaseLiquidityParams({\r\n        tokenId,\r\n        liquidity,\r\n        amount0Min,\r\n        amount1Min,\r\n        deadline\r\n      });\r\n\r\n      return {\r\n        params,\r\n        expectedAmounts: {\r\n          amount0: amount0Expected,\r\n          amount1: amount1Expected\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Error previewing remove liquidity:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Position Display Helpers\r\n  static formatPositionDisplay(position) {\r\n    return {\r\n      tokenId: position.tokenId,\r\n      token0Symbol: position.token0Symbol,\r\n      token1Symbol: position.token1Symbol,\r\n      fee: position.fee / 10000, // Convert to percentage\r\n      tickLower: position.tickLower,\r\n      tickUpper: position.tickUpper,\r\n      priceLower: this.getPriceFromTick(position.tickLower, position.decimals0, position.decimals1),\r\n      priceUpper: this.getPriceFromTick(position.tickUpper, position.decimals0, position.decimals1),\r\n      liquidity: position.liquidity.toString(),\r\n      tokensOwed0: position.tokensOwed0.toString(),\r\n      tokensOwed1: position.tokensOwed1.toString()\r\n    };\r\n  }\r\n\r\n  // Fee Tier Helpers\r\n  static getFeeTierOptions() {\r\n    return [\r\n      { value: FeeAmount.LOWEST, label: '0.01%', description: 'Best for very stable pairs' },\r\n      { value: FeeAmount.LOW, label: '0.05%', description: 'Best for stable pairs' },\r\n      { value: FeeAmount.MEDIUM, label: '0.3%', description: 'Best for most pairs' },\r\n      { value: FeeAmount.HIGH, label: '1%', description: 'Best for volatile pairs' }\r\n    ];\r\n  }\r\n\r\n  // Price Range Presets\r\n  static getPriceRangePresets() {\r\n    return [\r\n      { label: 'Full Range', value: 'full', description: 'Provides liquidity across all price ranges' },\r\n      { label: 'Safe', value: 'safe', lowerPricePercent: 10, upperPricePercent: 10, description: '±10% from current price' },\r\n      { label: 'Moderate', value: 'moderate', lowerPricePercent: 20, upperPricePercent: 20, description: '±20% from current price' },\r\n      { label: 'Wide', value: 'wide', lowerPricePercent: 50, upperPricePercent: 50, description: '±50% from current price' }\r\n    ];\r\n  }\r\n\r\n  // Add multicall method\r\n  async multicall(calls, options = {}) {\r\n    if (!this.signer) {\r\n      throw new Error('Signer is required for multicall');\r\n    }\r\n\r\n    try {\r\n      // Encode the multicall data\r\n      const multicallData = this.contract.interface.encodeFunctionData('multicall', [calls]);\r\n\r\n      // Get the transaction parameters\r\n      const txParams = {\r\n        to: this.contract.address,\r\n        data: multicallData,\r\n        ...options,\r\n        // Ensure value is properly formatted for display\r\n        value: options.value ? options.value : 0n\r\n      };\r\n\r\n      // Send the transaction\r\n      const tx = await this.signer.sendTransaction(txParams);\r\n      \r\n      const receipt = await tx.wait();\r\n      \r\n      // Parse the results from the multicall\r\n      const results = receipt.logs.map(log => {\r\n        try {\r\n          return this.contract.interface.parseLog(log);\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n      }).filter(Boolean);\r\n\r\n      return {\r\n        receipt,\r\n        results\r\n      };\r\n    } catch (error) {\r\n      console.error('Error in multicall:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Helper method to encode function data for multicall\r\n  encodeFunctionData(functionName, params) {\r\n    return this.contract.interface.encodeFunctionData(functionName, params);\r\n  }\r\n\r\n  // Add method to get quote for exact input\r\n  async quoteExactInputSingle(params) {\r\n    try {\r\n      const formattedInputAmount = ethers.formatUnits(params.amountIn, 18);\r\n      console.log('Quoting:', formattedInputAmount, 'of token:', params.tokenIn, 'to token:', params.tokenOut);\r\n\r\n      // For new pools, we can't get a quote since the pool doesn't exist yet\r\n      // Instead, we'll return a default quote based on the input amount\r\n      // This is just for UI purposes until the pool is created\r\n      const defaultQuote = {\r\n        amountOut: BigInt(0), // Will be determined by initial pool creation\r\n        sqrtPriceX96After: BigInt(0),\r\n        initializedTicksCrossed: 0,\r\n        gasEstimate: BigInt(0),\r\n        formattedAmountOut: '0',\r\n        isNewPool: true\r\n      };\r\n\r\n      // Return the default quote for new pools\r\n      return defaultQuote;\r\n    } catch (error) {\r\n      console.error('Error getting quote:', error);\r\n      // Return default quote on error since this likely means the pool doesn't exist\r\n      return {\r\n        amountOut: BigInt(0),\r\n        sqrtPriceX96After: BigInt(0),\r\n        initializedTicksCrossed: 0,\r\n        gasEstimate: BigInt(0),\r\n        formattedAmountOut: '0',\r\n        isNewPool: true,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  // Add method to get quote for exact output\r\n  async quoteExactOutputSingle(params) {\r\n    try {\r\n      const formattedOutputAmount = ethers.formatUnits(params.amount, 18);\r\n      console.log('Quoting for desired output:', formattedOutputAmount, 'of token:', params.tokenOut);\r\n\r\n      // For new pools, return a default quote\r\n      const defaultQuote = {\r\n        amountIn: BigInt(0), // Will be determined by initial pool creation\r\n        sqrtPriceX96After: BigInt(0),\r\n        initializedTicksCrossed: 0,\r\n        gasEstimate: BigInt(0),\r\n        formattedAmountIn: '0',\r\n        isNewPool: true\r\n      };\r\n\r\n      // Return the default quote for new pools\r\n      return defaultQuote;\r\n    } catch (error) {\r\n      console.error('Error getting quote:', error);\r\n      // Return default quote on error since this likely means the pool doesn't exist\r\n      return {\r\n        amountIn: BigInt(0),\r\n        sqrtPriceX96After: BigInt(0),\r\n        initializedTicksCrossed: 0,\r\n        gasEstimate: BigInt(0),\r\n        formattedAmountIn: '0',\r\n        isNewPool: true,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  // Update method to get existing pool data\r\n  async getPoolData(token0Address, token1Address, fee) {\r\n    try {\r\n      // Get factory contract\r\n      const factoryContract = new ethers.Contract(\r\n        FACTORY_ADDRESS,\r\n        [\r\n          'function getPool(address tokenA, address tokenB, uint24 fee) external view returns (address pool)'\r\n        ],\r\n        this.provider\r\n      );\r\n\r\n      // Get pool address - note that token order doesn't matter for this call\r\n      const poolAddress = await factoryContract.getPool(token0Address, token1Address, fee);\r\n      \r\n      // If pool doesn't exist, return default values\r\n      if (poolAddress === ethers.ZeroAddress) {\r\n        return {\r\n          exists: false,\r\n          sqrtPriceX96: 0n,\r\n          tick: 0,\r\n          liquidity: 0n,\r\n          token0: token0Address,\r\n          token1: token1Address,\r\n          poolAddress: null\r\n        };\r\n      }\r\n\r\n      // Get pool contract\r\n      const poolContract = new ethers.Contract(\r\n        poolAddress,\r\n        POOL_INTERFACE,\r\n        this.provider\r\n      );\r\n\r\n      // Get all pool data in parallel\r\n      const [slot0, liquidity, actualToken0, actualToken1] = await Promise.all([\r\n        poolContract.slot0(),\r\n        poolContract.liquidity(),\r\n        poolContract.token0(),\r\n        poolContract.token1()\r\n      ]);\r\n\r\n      console.log('Pool data:', {\r\n        address: poolAddress,\r\n        sqrtPriceX96: slot0.sqrtPriceX96.toString(),\r\n        tick: slot0.tick,\r\n        token0: actualToken0,\r\n        token1: actualToken1\r\n      });\r\n\r\n      return {\r\n        exists: true,\r\n        sqrtPriceX96: slot0.sqrtPriceX96,\r\n        tick: slot0.tick,\r\n        liquidity,\r\n        token0: actualToken0,\r\n        token1: actualToken1,\r\n        poolAddress\r\n      };\r\n    } catch (error) {\r\n      console.error('Error getting pool data:', error);\r\n      return {\r\n        exists: false,\r\n        sqrtPriceX96: 0n,\r\n        tick: 0,\r\n        liquidity: 0n,\r\n        token0: token0Address,\r\n        token1: token1Address,\r\n        poolAddress: null\r\n      };\r\n    }\r\n  }\r\n} ","import React, { useState, useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { ethers } from 'ethers';\nimport { BiWallet } from 'react-icons/bi';\nimport { useUnichain } from '../../../../hooks/useUnichain';\nimport TokenSelectionModal from '../shared/TokenSelectionModal';\nimport { UNISWAP_ADDRESSES } from '../../../../services/unichain/uniswap';\nimport { ERC20_ABI } from '../../../../services/erc20';\nimport { getTokenDeploymentByAddress } from '../../../../services/firebase';\nimport { getTokenLogo } from '../../../../utils/tokens';\nimport { toast } from 'react-hot-toast';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Fragment } from 'react';\nimport Confetti from 'react-confetti';\nimport { FaStar } from 'react-icons/fa';\nimport { V3PositionManager, TICK_SPACINGS, computePoolAddress } from '../../../../services/unichain/v3/positionManager';\n\n\n// Get WETH9 address from UNISWAP_ADDRESSES\nconst WETH9_ADDRESS = UNISWAP_ADDRESSES.WETH;\n\n// V3-specific constants\nconst FEE_TIERS = {\n  LOWEST: 100,   // 0.01%\n  LOW: 500,      // 0.05%\n  MEDIUM: 3000,  // 0.3%\n  HIGH: 10000    // 1%\n};\n\n// Add these modern DeFi-inspired icons for pool creation steps\nconst Icons = {\n  Preparing: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path className=\"animate-[spin_1s_linear_infinite]\" \n          d=\"M12 6v1M12 17v1M7.05 7.05l.707.707M16.243 16.243l.707.707M6 12h1M17 12h1M7.757 16.243l-.707.707M16.95 7.05l-.707.707\">\n        </path>\n        <path \n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" \n          strokeOpacity=\"0.2\" \n        />\n        <path \n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2\" \n          strokeLinecap=\"round\" \n          className=\"origin-center animate-[spin_1.5s_linear_infinite]\" \n        />\n      </g>\n    </svg>\n  ),\n  Approval: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <path className=\"animate-[draw_1s_ease-in-out]\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} stroke=\"currentColor\"\n        d=\"M7 11l3 3L19 5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        strokeDasharray=\"60\"\n        strokeDashoffset=\"60\">\n        <animate\n          attributeName=\"stroke-dashoffset\"\n          from=\"60\"\n          to=\"0\"\n          dur=\"0.6s\"\n          fill=\"freeze\"\n        />\n      </path>\n    </svg>\n  ),\n  Creating: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path className=\"animate-pulse\" d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path className=\"animate-[spin_3s_linear_infinite]\" d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2\" strokeLinecap=\"round\" />\n        <circle cx=\"12\" cy=\"12\" r=\"4\" className=\"animate-[pulse_2s_ease-in-out_infinite]\" />\n      </g>\n    </svg>\n  ),\n  Adding: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 8v8m-4-4h8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.6s_ease-in-out]\" />\n        <path d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" className=\"animate-[pulse_2s_ease-in-out_infinite]\" />\n      </g>\n    </svg>\n  ),\n  Confirming: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n        <path strokeLinecap=\"round\" className=\"origin-center animate-[spin_2s_linear_infinite]\"\n          d=\"M12 6v6l4 4\" />\n      </g>\n    </svg>\n  ),\n  Completed: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g>\n        <path className=\"animate-[draw_0.6s_ease-in-out]\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} stroke=\"currentColor\"\n          d=\"M7 13l3 3L17 8\" strokeDasharray=\"60\" strokeDashoffset=\"60\">\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            from=\"60\"\n            to=\"0\"\n            dur=\"0.6s\"\n            fill=\"freeze\"\n          />\n        </path>\n        <path fill=\"currentColor\" fillOpacity=\"0.2\" d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n      </g>\n    </svg>\n  ),\n  Error: () => (\n    <svg className=\"w-6 h-6 text-red-500\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n    </svg>\n  )\n};\n\n// Update balance display format\nconst formatBalance = (balance) => {\n  const num = Number(balance);\n  if (num === 0) return '0';\n  if (num < 0.0001) return '< 0.0001';\n  return Math.floor(num).toLocaleString('en-US');\n};\n\n// Add helper function for token symbol display\nconst getDisplaySymbol = (token) => {\n  return token?.symbol === 'ETH' ? 'WETH' : token?.symbol;\n};\n\nexport default function PoolCreation() {\n  const { address } = useAccount();\n  const [token0, setToken0] = useState(null);\n  const [token1, setToken1] = useState(null);\n  const [amount0, setAmount0] = useState('');\n  const [amount1, setAmount1] = useState('');\n  const [selectedFeeTier, setSelectedFeeTier] = useState(FEE_TIERS.MEDIUM);\n  const [loading, setLoading] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showTokenSelector, setShowTokenSelector] = useState(false);\n  const [activeSide, setActiveSide] = useState(null);\n  const [currentStep, setCurrentStep] = useState('select-pair');\n  const [error, setError] = useState(null);\n  const [showProgressModal, setShowProgressModal] = useState(false);\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [isFeeTierExpanded, setIsFeeTierExpanded] = useState(true);\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  \n  // Initial price state\n  const [initialPrice, setInitialPrice] = useState('');\n  const [priceRangeType, setPriceRangeType] = useState('full');\n  const [tickLower, setTickLower] = useState(null);\n  const [tickUpper, setTickUpper] = useState(null);\n  const [showPriceRangeModal, setShowPriceRangeModal] = useState(false);\n  const [selectedRange, setSelectedRange] = useState('full');\n  const [priceRange, setPriceRange] = useState({ min: 0, max: 0 });\n\n  // Add state for fee tier details visibility\n  const [showFeeTierDetails, setShowFeeTierDetails] = useState(true);\n\n  // Add state for token order toggle\n  const [showTokenOrder, setShowTokenOrder] = useState(false);\n\n  // Add balance reading functionality\n  const [token0Balance, setToken0Balance] = useState('0');\n  const [token1Balance, setToken1Balance] = useState('0');\n\n  const { uniswap } = useUnichain();\n\n  // Add state for pool data\n  const [poolData, setPoolData] = useState(null);\n  const [isLoadingPoolData, setIsLoadingPoolData] = useState(false);\n\n  // Update price formatting function to match Uniswap exactly\n  const formatPrice = (price, inverted = false) => {\n    if (!price || price === 0) return '0';\n    if (!Number.isFinite(price)) return '∞';\n    \n    let num = inverted ? 1 / price : price;\n    if (num === 0) return '0';\n    if (!Number.isFinite(num)) return '∞';\n    \n    // For very small numbers\n    if (Math.abs(num) < 0.0001) {\n      return '< 0.0001';\n    }\n    \n    // For regular numbers (under 1 trillion)\n    if (num < 1e12) {\n      return num.toLocaleString('en-US', {\n        minimumFractionDigits: 4,\n        maximumFractionDigits: 4\n      });\n    }\n    \n    // For very large numbers, use scientific notation\n    return num.toExponential(4).replace('e+', 'E');\n  };\n\n  // Update the price display section\n  const renderPriceSection = () => {\n    if (isLoadingPoolData) {\n      return (\n        <div className=\"mb-4 text-sm text-gray-500 dark:text-[#98A1C0]\">\n          Loading pool data...\n        </div>\n      );\n    }\n\n    if (!poolData?.exists) {\n      return (\n        <div className=\"mt-4 p-4 rounded-lg bg-gray-100 dark:bg-[#131A2A] text-gray-500 dark:text-[#98A1C0]\">\n          This pool does not exist yet. You will be the first liquidity provider.\n        </div>\n      );\n    }\n\n    const price = poolData.price;\n    const invertedPrice = 1 / price;\n\n    return (\n      <div className=\"mt-4 p-4 rounded-lg bg-gray-100 dark:bg-[#131A2A] text-gray-900 dark:text-white\">\n        <div className=\"text-lg mb-2\">Current price:</div>\n        <div className=\"text-2xl font-bold mb-4\">\n          1 {getDisplaySymbol(token0)} = {formatPrice(price)} {getDisplaySymbol(token1)}\n        </div>\n        <div className=\"text-base text-gray-500 dark:text-[#98A1C0]\">\n          1 {getDisplaySymbol(token1)} = {formatPrice(invertedPrice)} {getDisplaySymbol(token0)}\n        </div>\n      </div>\n    );\n  };\n\n  // Update function to fetch pool data with proper price calculation\n  const fetchPoolData = async () => {\n    if (!token0 || !token1 || !selectedFeeTier) return;\n\n    setIsLoadingPoolData(true);\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const positionManager = new V3PositionManager(provider);\n\n      // Get addresses (handle ETH/WETH conversion)\n      const token0Address = token0.symbol === 'ETH' ? WETH9_ADDRESS : token0.address;\n      const token1Address = token1.symbol === 'ETH' ? WETH9_ADDRESS : token1.address;\n\n      const data = await positionManager.getPoolData(token0Address, token1Address, selectedFeeTier);\n      \n      if (data.exists && data.sqrtPriceX96) {\n        // Check if our token order matches the pool's token order\n        const poolToken0IsOurToken0 = data.token0.toLowerCase() === token0Address.toLowerCase();\n\n        // Convert sqrtPriceX96 to price following Uniswap's method\n        const sqrtPriceX96 = BigInt(data.sqrtPriceX96);\n        const Q96 = BigInt(2) ** BigInt(96);\n        \n        // Calculate price = (sqrtPriceX96/Q96)^2 * 10^(decimals0-decimals1)\n        const price = Number(sqrtPriceX96) / Number(Q96);\n        const squaredPrice = price * price;\n        \n        // Get decimals based on actual pool token order\n        const token0Decimals = poolToken0IsOurToken0 ? token0.decimals : token1.decimals;\n        const token1Decimals = poolToken0IsOurToken0 ? token1.decimals : token0.decimals;\n        \n        // Adjust for decimals\n        const decimalAdjustment = Math.pow(10, token0Decimals - token1Decimals);\n        let adjustedPrice = squaredPrice * decimalAdjustment;\n\n        // If our token order is different from pool's token order, invert the price\n        if (!poolToken0IsOurToken0) {\n          adjustedPrice = 1 / adjustedPrice;\n        }\n\n        console.log('Price calculation:', {\n          sqrtPriceX96: sqrtPriceX96.toString(),\n          Q96: Q96.toString(),\n          price,\n          squaredPrice,\n          decimalAdjustment,\n          adjustedPrice,\n          poolAddress: data.poolAddress,\n          token0: {\n            address: token0Address,\n            decimals: token0.decimals,\n            isPoolToken0: poolToken0IsOurToken0\n          },\n          token1: {\n            address: token1Address,\n            decimals: token1.decimals,\n            isPoolToken1: !poolToken0IsOurToken0\n          }\n        });\n        \n        data.price = adjustedPrice;\n      }\n      \n      setPoolData(data);\n\n      // If pool exists, set initial price based on current pool price\n      if (data?.exists && data?.price) {\n        const formattedPrice = formatPrice(data.price);\n        setInitialPrice(formattedPrice);\n      }\n    } catch (error) {\n      console.error('Error fetching pool data:', error);\n      setPoolData(null);\n    } finally {\n      setIsLoadingPoolData(false);\n    }\n  };\n\n  // Update useEffect to fetch pool data when tokens or fee tier changes\n  useEffect(() => {\n    fetchPoolData();\n  }, [token0?.address, token1?.address, selectedFeeTier]);\n\n  // Add useEffect to handle initial price based on pool existence\n  useEffect(() => {\n    if (poolData) {\n      if (poolData.exists && poolData.price) {\n        // If pool exists, set initial price to current pool price\n        const formattedPrice = formatPrice(poolData.price);\n        setInitialPrice(formattedPrice);\n      } else {\n        // If pool doesn't exist, reset initial price to allow user input\n        setInitialPrice('');\n      }\n    }\n  }, [poolData]);\n\n  // Update amount handlers to calculate based on pool price\n  const handleAmount0Change = (value) => {\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n      setAmount0(value);\n      // Calculate amount1 based on pool price or initial price\n      if (value) {\n        const price = poolData?.price || Number(initialPrice);\n        const calculatedAmount1 = parseFloat(value) * price;\n        setAmount1(calculatedAmount1.toString());\n      } else {\n        setAmount1('');\n      }\n    }\n  };\n\n  const handleAmount1Change = (value) => {\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n      setAmount1(value);\n      // Calculate amount0 based on pool price or initial price\n      if (value) {\n        const price = poolData?.price || Number(initialPrice);\n        const calculatedAmount0 = parseFloat(value) / price;\n        setAmount0(calculatedAmount0.toString());\n      } else {\n        setAmount0('');\n      }\n    }\n  };\n\n  // Add initial price handler\n  const handleInitialPriceChange = (value) => {\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n      setInitialPrice(value);\n      // Calculate amounts based on initial price if needed\n      if (amount0 && value) {\n        const calculatedAmount1 = parseFloat(amount0) * parseFloat(value);\n        setAmount1(calculatedAmount1.toString());\n      } else if (amount1 && value) {\n        const calculatedAmount0 = parseFloat(amount1) / parseFloat(value);\n        setAmount0(calculatedAmount0.toString());\n      }\n    }\n  };\n\n  // Function to move to next step\n  const nextStep = () => {\n    if (currentStep === 'select-pair' && token0 && token1 && selectedFeeTier) {\n      setCurrentStep('set-price');\n    } else if (currentStep === 'set-price' && initialPrice) {\n      setCurrentStep('deposit-amounts');\n    }\n  };\n\n  // Function to go back to previous step\n  const prevStep = () => {\n    if (currentStep === 'set-price') {\n      setCurrentStep('select-pair');\n    } else if (currentStep === 'deposit-amounts') {\n      setCurrentStep('set-price');\n    }\n  };\n\n  const handleTokenSelect = (token) => {\n    if (activeSide === 'token0') {\n      setToken0(token);\n    } else {\n      setToken1(token);\n    }\n    setShowTokenSelector(false);\n  };\n\n  const handleCreatePool = async () => {\n    if (!address) {\n      toast.error('Please connect your wallet');\n      return;\n    }\n\n    if (!token0 || !token1 || !amount0 || !amount1 || !initialPrice) {\n      toast.error('Please fill in all fields');\n      return;\n    }\n\n    setLoading(true);\n    setShowProgressModal(true);\n    setCurrentStep('preparing');\n    setError(null);\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const positionManager = new V3PositionManager(signer);\n\n      // Parse amounts with proper decimals, ensuring we don't exceed the token's decimal places\n      const parsedAmount0 = ethers.parseUnits(\n        Number(amount0).toFixed(token0.decimals), \n        token0.decimals\n      );\n      const parsedAmount1 = ethers.parseUnits(\n        Number(amount1).toFixed(token1.decimals), \n        token1.decimals\n      );\n\n      // Check and set allowances if needed\n      setCurrentStep('approval');\n      \n      // Ensure token approvals\n      await positionManager.ensureTokenApprovals({\n        token0: token0.address,\n        token1: token1.address,\n        amount0Desired: parsedAmount0,\n        amount1Desired: parsedAmount1,\n        ownerAddress: address\n      });\n\n      setCurrentStep('creating');\n      \n      // Handle ETH/WETH conversion first\n      const token0IsEth = token0.symbol === 'ETH';\n      const token1IsEth = token1.symbol === 'ETH';\n      \n      // Get actual addresses for comparison (using WETH9 for ETH)\n      const token0Address = token0IsEth ? WETH9_ADDRESS : token0.address;\n      const token1Address = token1IsEth ? WETH9_ADDRESS : token1.address;\n\n      // Determine which amount corresponds to ETH (if any)\n      const ethValue = token0IsEth ? parsedAmount0 : (token1IsEth ? parsedAmount1 : 0n);\n\n      // Get pool data and determine token ordering\n      const poolData = await positionManager.getPoolData(\n        token0Address,\n        token1Address,\n        selectedFeeTier\n      );\n\n      // Set final tokens and amounts based on pool data\n      const shouldOrderByAddress = token0Address.toLowerCase() > token1Address.toLowerCase();\n      const finalToken0 = poolData.exists \n        ? (token0Address.toLowerCase() === poolData.token0.toLowerCase() ? token0 : token1)\n        : (shouldOrderByAddress ? token1 : token0);\n      const finalToken1 = poolData.exists\n        ? (token0Address.toLowerCase() === poolData.token0.toLowerCase() ? token1 : token0)\n        : (shouldOrderByAddress ? token0 : token1);\n      const finalAmount0 = finalToken0.address === token0.address ? parsedAmount0 : parsedAmount1;\n      const finalAmount1 = finalToken0.address === token0.address ? parsedAmount1 : parsedAmount0;\n\n      // Calculate sqrtPriceX96 from initial price\n      const token0Decimals = finalToken0.decimals;\n      const token1Decimals = finalToken1.decimals;\n      \n      // If pool exists, use its actual price data\n      let sqrtPriceX96;\n      if (poolData.exists) {\n        sqrtPriceX96 = BigInt(poolData.sqrtPriceX96);\n        console.log('Using existing pool price:', {\n          sqrtPriceX96: sqrtPriceX96.toString(),\n          poolData\n        });\n      } else {\n        // For new pools, calculate price\n        let rawPrice;\n        if (typeof initialPrice === 'string' && initialPrice.startsWith('< ')) {\n          // For very small numbers, use a more precise minimum value\n          rawPrice = 1e-12; // Much smaller minimum that won't distort the pool ratio\n        } else {\n          rawPrice = parseFloat(initialPrice.toString());\n        }\n\n        // Validate raw price\n        if (isNaN(rawPrice) || rawPrice <= 0) {\n          console.error('Invalid initial price:', {\n            initialPrice,\n            rawPrice,\n            type: typeof initialPrice\n          });\n          throw new Error('Invalid initial price: must be a positive number');\n        }\n\n        // Calculate decimal adjustment\n        const decimalAdjustment = 10 ** (token1Decimals - token0Decimals);\n        \n        // Calculate adjusted price based on token order\n        const adjustedPrice = shouldOrderByAddress ? \n          1 / (rawPrice * decimalAdjustment) : \n          rawPrice * decimalAdjustment;\n        \n        // Calculate sqrtPriceX96 = sqrt(price) * 2^96\n        const sqrtPrice = Math.sqrt(adjustedPrice);\n        const Q96 = BigInt('79228162514264337593543950336'); // 2^96\n        sqrtPriceX96 = BigInt(Math.floor(sqrtPrice * Number(Q96)));\n      }\n\n      console.log('Price calculation:', {\n        sqrtPriceX96: sqrtPriceX96.toString(),\n        token0: {\n          address: finalToken0.address,\n          decimals: token0Decimals,\n          isPoolToken0: finalToken0.address === (poolData.exists ? poolData.token0 : finalToken0.address)\n        },\n        token1: {\n          address: finalToken1.address,\n          decimals: token1Decimals,\n          isPoolToken1: finalToken1.address === (poolData.exists ? poolData.token1 : finalToken1.address)\n        }\n      });\n\n      // Validate the result\n      if (sqrtPriceX96 <= 0n) {\n        throw new Error('Invalid price: must be greater than 0');\n      }\n\n      // Calculate ticks based on selected range\n      let tickLower, tickUpper;\n\n      if (selectedRange === 'full') {\n        const fullRange = V3PositionManager.getFullRangeTicks(selectedFeeTier);\n        tickLower = fullRange.tickLower;\n        tickUpper = fullRange.tickUpper;\n      } else {\n        const { tickLower: lower, tickUpper: upper } = V3PositionManager.getPriceRangeTicks({\n          basePrice: finalInitialPrice,\n          lowerPricePercent: Number(priceRange.min || 0),\n          upperPricePercent: Number(priceRange.max || 0),\n          decimals0: finalToken0.decimals,\n          decimals1: finalToken1.decimals,\n          feeAmount: selectedFeeTier\n        });\n        tickLower = lower;\n        tickUpper = upper;\n      }\n\n      // Create the multicall array\n      const calls = [];\n\n      // First call: create and initialize pool\n      const createPoolCall = positionManager.contract.interface.encodeFunctionData(\n        'createAndInitializePoolIfNecessary',\n        [\n          finalToken0.address,\n          finalToken1.address,\n          selectedFeeTier,\n          sqrtPriceX96\n        ]\n      );\n      calls.push(createPoolCall);\n\n      // Second call: mint position\n      const mintCall = positionManager.contract.interface.encodeFunctionData(\n        'mint',\n        [{\n          token0: finalToken0.address,\n          token1: finalToken1.address,\n          fee: selectedFeeTier,\n          tickLower: Math.ceil(tickLower / TICK_SPACINGS[selectedFeeTier]) * TICK_SPACINGS[selectedFeeTier],\n          tickUpper: Math.floor(tickUpper / TICK_SPACINGS[selectedFeeTier]) * TICK_SPACINGS[selectedFeeTier],\n          amount0Desired: finalAmount0,\n          amount1Desired: finalAmount1,\n          amount0Min: 0,\n          amount1Min: 0,\n          recipient: address,\n          deadline: Math.floor(Date.now() / 1000) + 1200 // 20 minutes from now\n        }]\n      );\n      calls.push(mintCall);\n\n      // If using ETH, add refundETH and unwrapWETH9 calls\n      if (ethValue > 0n) {\n        calls.push(positionManager.contract.interface.encodeFunctionData('refundETH'));\n        calls.push(\n          positionManager.contract.interface.encodeFunctionData('unwrapWETH9', [\n            0,\n            address\n          ])\n        );\n      }\n\n      // Execute the multicall with the correct ETH value\n      const tx = await positionManager.contract.multicall(calls, {\n        value: ethValue,\n        gasLimit: ethValue > 0n ? 12000000 : 10000000\n      });\n\n      setCurrentStep('confirming');\n      \n      const receipt = await tx.wait();\n\n      // Parse events and handle completion\n      const events = receipt.logs.map(log => {\n        try {\n          return positionManager.contract.interface.parseLog(log);\n        } catch (e) {\n          return null;\n        }\n      }).filter(Boolean);\n\n      // Find the NFT token ID from the Transfer event\n      const transferEvent = events.find(event => event.name === 'Transfer');\n      const tokenId = transferEvent?.args?.tokenId || transferEvent?.args?.id;\n\n      // Find liquidity info from the IncreaseLiquidity event\n      const liquidityEvent = events.find(event => \n        event.name === 'IncreaseLiquidity' || \n        event.fragment?.name === 'IncreaseLiquidity'\n      );\n\n      setCurrentStep('completed');\n      \n      // Show completed state briefly, then close modal and show confetti\n      setTimeout(() => {\n        setShowProgressModal(false);\n        setCurrentStep(null);\n        \n        // Show confetti after modal is closed\n        setTimeout(() => {\n          setShowConfetti(true);\n          \n          // Show rating modal after a short delay\n          setTimeout(() => {\n            setShowRatingModal(true);\n          }, 1000);\n          \n          // Reset form and cleanup after confetti\n          setTimeout(() => {\n            setAmount0('');\n            setAmount1('');\n            setShowConfetti(false);\n          }, 30000);\n        }, 100);\n      }, 1000);\n    } catch (error) {\n      console.error('Pool creation error:', error);\n      setError(error.message);\n      setCurrentStep('error');\n      toast.error('Failed to create pool. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add function to read token balances\n  const readTokenBalances = async () => {\n    if (!address || !token0 || !token1) return;\n    \n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      // Read token0 balance\n      if (token0.symbol === 'ETH') {\n        const balance = await provider.getBalance(address);\n        setToken0Balance(ethers.formatEther(balance));\n      } else {\n        const token0Contract = new ethers.Contract(token0.address, ERC20_ABI, signer);\n        const balance = await token0Contract.balanceOf(address);\n        setToken0Balance(ethers.formatUnits(balance, token0.decimals));\n      }\n\n      // Read token1 balance\n      if (token1.symbol === 'ETH') {\n        const balance = await provider.getBalance(address);\n        setToken1Balance(ethers.formatEther(balance));\n      } else {\n        const token1Contract = new ethers.Contract(token1.address, ERC20_ABI, signer);\n        const balance = await token1Contract.balanceOf(address);\n        setToken1Balance(ethers.formatUnits(balance, token1.decimals));\n      }\n    } catch (error) {\n      console.error('Error reading balances:', error);\n    }\n  };\n\n  // Update useEffect to read balances when tokens change\n  useEffect(() => {\n    readTokenBalances();\n  }, [token0, token1, address]);\n\n  // Add balance fetching function\n  const fetchBalance = async (token) => {\n    if (!address || !token) return '0';\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n\n      // Handle ETH balance\n      if (token.symbol === 'ETH') {\n        const ethBalance = await provider.getBalance(address);\n        return ethers.formatEther(ethBalance);\n      }\n      // Handle ERC20 tokens\n      else {\n        const tokenContract = new ethers.Contract(\n          token.address,\n          ['function balanceOf(address) view returns (uint256)', 'function decimals() view returns (uint8)'],\n          provider\n        );\n\n        const [rawBalance, decimals] = await Promise.all([\n          tokenContract.balanceOf(address),\n          tokenContract.decimals().catch(() => 18)\n        ]);\n\n        return ethers.formatUnits(rawBalance, decimals);\n      }\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n      return '0';\n    }\n  };\n\n  // Add useEffect to fetch balances\n  useEffect(() => {\n    const updateBalances = async () => {\n      if (token0) {\n        const balance = await fetchBalance(token0);\n        setToken0Balance(balance);\n      }\n      if (token1) {\n        const balance = await fetchBalance(token1);\n        setToken1Balance(balance);\n      }\n    };\n\n    updateBalances();\n  }, [token0, token1, address]);\n\n  // Add formatBalance helper\n  const formatBalance = (balance) => {\n    if (!balance) return '0';\n    const num = parseFloat(balance);\n    if (num === 0) return '0';\n    if (num < 0.0001) return '< 0.0001';\n    return num.toFixed(4);\n  };\n\n  const StarRatingModal = ({ isOpen, onClose, onRate }) => {\n    const [rating, setRating] = useState(0);\n    const [hover, setHover] = useState(0);\n\n    return (\n      <Transition appear show={isOpen} as={Fragment}>\n        <Dialog as=\"div\" className=\"relative z-[99998]\" onClose={onClose}>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-black/25 dark:bg-black/80 backdrop-blur-sm\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-0 overflow-y-auto\">\n            <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0 scale-95\"\n                enterTo=\"opacity-100 scale-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100 scale-100\"\n                leaveTo=\"opacity-0 scale-95\"\n              >\n                <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#0a0b0f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-[#00ffbd]/20\">\n                  <Dialog.Title\n                    as=\"h3\"\n                    className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white text-center mb-4\"\n                  >\n                    How was your experience?\n                  </Dialog.Title>\n                  \n                  <div className=\"flex flex-col items-center space-y-4\">\n                    <div className=\"flex items-center space-x-2\">\n                      {[...Array(5)].map((_, index) => {\n                        const starValue = index + 1;\n                        return (\n                          <button\n                            key={starValue}\n                            className=\"transition-transform hover:scale-110 focus:outline-none\"\n                            onClick={() => setRating(starValue)}\n                            onMouseEnter={() => setHover(starValue)}\n                            onMouseLeave={() => setHover(0)}\n                          >\n                            <FaStar\n                              size={28}\n                              className={`transition-colors ${\n                                (hover || rating) >= starValue\n                                  ? 'text-[#00ffbd]'\n                                  : 'text-gray-300 dark:text-gray-600'\n                              }`}\n                            />\n                          </button>\n                        );\n                      })}\n                    </div>\n\n                    <p className=\"text-sm text-gray-500 dark:text-[#98A1C0]\">\n                      {rating === 0 ? 'Select a rating' : `You rated: ${rating} star${rating !== 1 ? 's' : ''}`}\n                    </p>\n\n                    <div className=\"flex space-x-3 mt-4\">\n                      <button\n                        onClick={() => {\n                          if (rating > 0) {\n                            onRate(rating);\n                            onClose();\n                          }\n                        }}\n                        className={`px-4 py-2 rounded-xl font-medium transition-colors ${\n                          rating > 0\n                            ? 'bg-[#00ffbd] hover:bg-[#00ffbd]/90 text-black'\n                            : 'bg-gray-200 dark:bg-gray-700 text-gray-500 dark:text-[#98A1C0] cursor-not-allowed'\n                        }`}\n                      >\n                        Submit Rating\n                      </button>\n                      <button\n                        onClick={onClose}\n                        className=\"px-4 py-2 rounded-xl font-medium bg-gray-100 dark:bg-[#131A2A] hover:bg-gray-200 dark:hover:bg-[#1c2433] text-gray-900 dark:text-white transition-colors\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition>\n    );\n  };\n\n  return (\n    <div className=\"max-w-[1000px] mx-auto\">\n      <div className=\"flex items-center justify-between mb-8\">\n        <h1 className=\"text-2xl font-medium text-gray-900 dark:text-white\">New position</h1>\n        <div className=\"flex items-center gap-3\">\n          <button\n            onClick={() => {\n              if (!token0 && !token1) return;\n              setToken0(null);\n              setToken1(null);\n              setAmount0('');\n              setAmount1('');\n              setInitialPrice('');\n              setCurrentStep('select-pair');\n            }}\n            className={`flex items-center gap-2 px-4 py-2 rounded-xl text-sm font-medium ${\n              token0 || token1 \n                ? 'bg-[#00ffbd] hover:bg-[#00ffbd]/90 text-black' \n                : 'bg-gray-100 dark:bg-[#131A2A] text-gray-400 dark:text-[#98A1C0] cursor-not-allowed'\n            }`}\n            disabled={!token0 && !token1}\n          >\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M2 12c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n              <path d=\"M8 12h8M11 9l-3 3 3 3\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n            Reset\n          </button>\n          <button className=\"flex items-center gap-2 px-4 py-2 rounded-xl bg-[#00ffbd] hover:bg-[#00ffbd]/90 text-sm font-medium text-black\">\n            v3 position\n          </button>\n        </div>\n      </div>\n\n      <div className=\"flex gap-8\">\n        {/* Left side - Steps */}\n        <div className=\"w-[240px] h-fit rounded-2xl bg-white dark:bg-[#0a0b0f] border border-gray-200 dark:border-[#00ffbd]/20 p-4 sticky top-4\">\n          <div className=\"flex flex-col gap-6\">\n            <button \n              onClick={() => setCurrentStep('select-pair')}\n              className={`flex items-start gap-3 ${currentStep === 'select-pair' ? 'text-[#00ffbd]' : 'text-gray-500 dark:text-[#5D6785] hover:text-[#00ffbd]/70'}`}\n            >\n              <div className=\"w-8 h-8 rounded-full bg-[#00ffbd] text-black flex items-center justify-center font-medium\">1</div>\n              <div>\n                <div className=\"font-medium\">Step 1</div>\n                <div className=\"text-sm\">Select token pair and fees</div>\n            </div>\n            </button>\n            <button\n              onClick={() => token0 && token1 && setCurrentStep('set-price')}\n              className={`flex items-start gap-3 ${!token0 || !token1 ? 'opacity-50 cursor-not-allowed' : ''} ${currentStep === 'set-price' ? 'text-[#00ffbd]' : 'text-gray-500 dark:text-[#5D6785] hover:text-[#00ffbd]/70'}`}\n            >\n              <div className=\"w-8 h-8 rounded-full bg-[#00ffbd] text-black flex items-center justify-center font-medium\">2</div>\n              <div>\n                <div className=\"font-medium\">Step 2</div>\n                <div className=\"text-sm\">Set price range</div>\n              </div>\n            </button>\n            <button \n              onClick={() => initialPrice && setCurrentStep('deposit-amounts')}\n              className={`flex items-start gap-3 ${!initialPrice ? 'opacity-50 cursor-not-allowed' : ''} ${currentStep === 'deposit-amounts' ? 'text-[#00ffbd]' : 'text-gray-500 dark:text-[#5D6785] hover:text-[#00ffbd]/70'}`}\n            >\n              <div className=\"w-8 h-8 rounded-full bg-[#00ffbd] text-black flex items-center justify-center font-medium\">3</div>\n              <div>\n                <div className=\"font-medium\">Step 3</div>\n                <div className=\"text-sm\">Enter deposit amounts</div>\n          </div>\n            </button>\n          </div>\n        </div>\n\n        {/* Right side - Content */}\n        <div className=\"flex-1 max-w-[700px]\">\n          {/* Step 1: Select Pair */}\n          {currentStep === 'select-pair' && (\n            <div className=\"space-y-6\">\n              <div className=\"p-4 rounded-2xl bg-white dark:bg-[#0a0b0f] border border-gray-200 dark:border-[#00ffbd]/20\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"flex items-center gap-2\">\n                    {token0 && token1 && (\n                      <>\n                        <div className=\"w-6 h-6 rounded-full bg-[#00ffbd] flex items-center justify-center text-xs font-medium text-black\">\n                          {token0.symbol.slice(0, 3)}\n                        </div>\n                        <span className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                          {token0.symbol} / {token1.symbol}\n                        </span>\n                        <div className=\"px-2 py-1 rounded bg-gray-100 dark:bg-[#131A2A] text-xs font-medium text-gray-900 dark:text-white\">\n                          v3\n                        </div>\n                        <div className=\"px-2 py-1 rounded bg-gray-100 dark:bg-[#131A2A] text-xs font-medium text-gray-900 dark:text-white\">\n                          {selectedFeeTier / 10000}%\n                        </div>\n                      </>\n                    )}\n                  </div>\n                  <button\n                    onClick={() => setShowTokenSelector(false)}\n                    className=\"px-3 py-1 rounded-lg bg-gray-100 dark:bg-[#131A2A] hover:bg-gray-200 dark:hover:bg-[#1c2433] text-sm font-medium text-gray-900 dark:text-white\"\n                  >\n                    Edit\n                  </button>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  {/* Token 0 selector */}\n                <button\n                  onClick={() => {\n                    setActiveSide('token0');\n                    setShowTokenSelector(true);\n                  }}\n                    className=\"p-4 rounded-xl bg-[#00ffbd] dark:bg-[#131A2A] hover:bg-[#00ffbd]/90 dark:hover:bg-[#1c2433] text-left text-black dark:text-white\"\n                >\n                  {token0 ? (\n                    <div className=\"flex items-center gap-2\">\n                        <img src={getTokenLogo(token0)} alt={token0.symbol} className=\"w-6 h-6 rounded-full\" />\n                        <span className=\"font-medium\">{token0.symbol}</span>\n                    </div>\n                  ) : (\n                      <div className=\"text-gray-500 dark:text-[#98A1C0]\">Select token</div>\n                  )}\n                </button>\n\n                  {/* Token 1 selector */}\n                <button\n                  onClick={() => {\n                    setActiveSide('token1');\n                    setShowTokenSelector(true);\n                  }}\n                    className=\"p-4 rounded-xl bg-[#00ffbd] dark:bg-[#131A2A] hover:bg-[#00ffbd]/90 dark:hover:bg-[#1c2433] text-left text-black dark:text-white\"\n                >\n                  {token1 ? (\n                    <div className=\"flex items-center gap-2\">\n                        <img src={getTokenLogo(token1)} alt={token1.symbol} className=\"w-6 h-6 rounded-full\" />\n                        <span className=\"font-medium\">{token1.symbol}</span>\n                    </div>\n                  ) : (\n                      <div className=\"text-gray-500 dark:text-[#98A1C0]\">Select token</div>\n                  )}\n                </button>\n              </div>\n            </div>\n\n              {/* Fee tier selector */}\n              <div className=\"p-4 rounded-2xl bg-white dark:bg-[#0a0b0f] border border-gray-200 dark:border-[#00ffbd]/20\">\n                <div className=\"flex items-center justify-between mb-2\">\n                <div>\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">Fee tier</h3>\n                    <p className=\"text-sm text-gray-500 dark:text-[#98A1C0]\">\n                    The amount earned providing liquidity. Choose an amount that suits your risk tolerance and strategy.\n                  </p>\n                </div>\n                <button \n                    onClick={() => setShowFeeTierDetails(!showFeeTierDetails)}\n                    className=\"px-4 py-2 rounded-xl bg-[#00ffbd] dark:bg-[#131A2A] hover:bg-[#00ffbd]/90 dark:hover:bg-[#1c2433] text-sm font-medium text-black dark:text-white\"\n                >\n                    {showFeeTierDetails ? (\n                    <>\n                      Less\n                        <span className=\"ml-1 inline-block transform rotate-180\">▼</span>\n                    </>\n                  ) : (\n                    <>\n                      More\n                        <span className=\"ml-1 inline-block\">▼</span>\n                    </>\n                  )}\n                </button>\n              </div>\n\n                {showFeeTierDetails ? (\n                  <div className=\"grid grid-cols-2 gap-3 mt-4\">\n                    {[\n                      { value: FEE_TIERS.LOWEST, label: '0.01%', description: 'Best for very stable pairs.' },\n                      { value: FEE_TIERS.LOW, label: '0.05%', description: 'Best for stable pairs.' },\n                      { value: FEE_TIERS.MEDIUM, label: '0.3%', description: 'Best for most pairs.' },\n                      { value: FEE_TIERS.HIGH, label: '1%', description: 'Best for exotic pairs.' }\n                    ].map((tier) => (\n                  <button\n                        key={tier.value}\n                        onClick={() => setSelectedFeeTier(tier.value)}\n                        className={`p-4 rounded-xl text-left transition-colors ${\n                          selectedFeeTier === tier.value\n                            ? 'bg-[#00ffbd] dark:bg-[#131A2A] border border-[#00ffbd] text-black dark:text-[#00ffbd]'\n                            : 'bg-white dark:bg-[#0a0b0f] hover:bg-[#00ffbd]/90 dark:hover:bg-[#131A2A] text-black dark:text-white'\n                        }`}\n                      >\n                        <div className=\"text-base font-medium text-gray-900 dark:text-white\">\n                          {tier.label} fee tier\n                        </div>\n                        <div className=\"text-sm text-gray-500 dark:text-[#98A1C0]\">{tier.description}</div>\n                        <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mt-1\">0 TVL</div>\n                  </button>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"p-4 bg-[#00ffbd] dark:bg-[#131A2A] rounded-xl mt-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <div className=\"text-base font-medium text-gray-900 dark:text-white\">\n                          {(selectedFeeTier / 10000).toFixed(2)}% fee tier\n                        </div>\n                        <div className=\"text-sm text-gray-500 dark:text-[#98A1C0]\">\n                          {selectedFeeTier === FEE_TIERS.LOWEST && 'Best for very stable pairs.'}\n                          {selectedFeeTier === FEE_TIERS.LOW && 'Best for stable pairs.'}\n                          {selectedFeeTier === FEE_TIERS.MEDIUM && 'Best for most pairs.'}\n                          {selectedFeeTier === FEE_TIERS.HIGH && 'Best for exotic pairs.'}\n                        </div>\n                      </div>\n                      <div className=\"text-sm text-gray-500 dark:text-[#98A1C0]\">0 TVL</div>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Creating new pool notice */}\n              {token0 && token1 && (\n                <div className=\"p-4 rounded-2xl bg-white dark:bg-[#0a0b0f] border border-gray-200 dark:border-[#00ffbd]/20\">\n                  <div className=\"flex items-start gap-3\">\n                    <div className=\"p-1 rounded-full bg-[#00ffbd] dark:bg-[#131A2A]\">\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\">\n                        <path d=\"M12 16v-4m0-4h.01M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                      </svg>\n                    </div>\n                    <div>\n                      <div className=\"font-medium text-gray-900 dark:text-white\">Creating new pool</div>\n                      <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mt-1\">\n                        Your selections will create a new liquidity pool which may result in lower initial liquidity and increased volatility. Consider adding to an existing pool to minimize these risks.\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n                  <button\n                onClick={nextStep}\n                disabled={!token0 || !token1 || !selectedFeeTier}\n                className={`w-full p-4 rounded-xl font-medium text-center ${\n                  !token0 || !token1 || !selectedFeeTier\n                    ? 'bg-gray-100 dark:bg-[#131A2A] text-gray-400 dark:text-[#98A1C0] cursor-not-allowed'\n                    : 'bg-[#00ffbd] hover:bg-[#00ffbd]/90 text-black'\n                }`}\n              >\n                Continue\n              </button>\n                      </div>\n                    )}\n\n          {/* Step 2: Set Price Range */}\n          {currentStep === 'set-price' && (\n            <div className=\"space-y-6\">\n              {/* Token pair header */}\n              <div className=\"p-4 rounded-2xl bg-white dark:bg-[#0a0b0f] border border-gray-200 dark:border-[#00ffbd]/20\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-6 h-6 rounded-full bg-[#00ffbd] flex items-center justify-center text-xs font-medium text-black\">\n                      {getDisplaySymbol(token0).slice(0, 3)}\n                    </div>\n                    <span className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                      {getDisplaySymbol(token0)} / {getDisplaySymbol(token1)}\n                    </span>\n                    <div className=\"px-2 py-1 rounded bg-gray-100 dark:bg-[#131A2A] text-xs font-medium text-gray-900 dark:text-white\">\n                      v3\n                    </div>\n                    <div className=\"px-2 py-1 rounded bg-gray-100 dark:bg-[#131A2A] text-xs font-medium text-gray-900 dark:text-white\">\n                      {selectedFeeTier / 10000}%\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => setShowTokenSelector(false)}\n                    className=\"px-3 py-1 rounded-lg bg-gray-100 dark:bg-[#131A2A] hover:bg-gray-200 dark:hover:bg-[#1c2433] text-sm font-medium text-gray-900 dark:text-white\"\n                  >\n                    Edit\n                  </button>\n                </div>\n              </div>\n\n              {/* Initial price input */}\n              {(!poolData?.exists || isLoadingPoolData) && (\n                <div className=\"p-4 rounded-2xl bg-white dark:bg-[#0a0b0f] border border-gray-200 dark:border-[#00ffbd]/20\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">Initial price</h3>\n                    <div className=\"flex gap-1\">\n                  <button\n                        onClick={() => setShowTokenOrder(false)}\n                        className={`px-3 py-1 rounded-lg text-sm font-medium ${\n                          !showTokenOrder ? 'bg-[#00ffbd] dark:bg-[#131A2A] text-black dark:text-white' : 'hover:bg-[#00ffbd]/90 dark:hover:bg-[#131A2A] text-black dark:text-white'\n                        }`}\n                      >\n                        {token0.symbol}\n                      </button>\n                      <button\n                        onClick={() => setShowTokenOrder(true)}\n                        className={`px-3 py-1 rounded-lg text-sm font-medium ${\n                          showTokenOrder ? 'bg-[#00ffbd] dark:bg-[#131A2A] text-black dark:text-white' : 'hover:bg-[#00ffbd]/90 dark:hover:bg-[#131A2A] text-black dark:text-white'\n                        }`}\n                      >\n                        {token1.symbol}\n                  </button>\n                </div>\n                      </div>\n                  <p className=\"text-sm text-gray-500 dark:text-[#98A1C0] mb-4\">\n                    Set the starting exchange rate between the two tokens you are providing.\n                  </p>\n                  <div className=\"relative\">\n                    <input\n                      type=\"text\"\n                      value={initialPrice}\n                      onChange={(e) => handleInitialPriceChange(e.target.value)}\n                      placeholder=\"0\"\n                      className=\"w-full p-4 bg-gray-100 dark:bg-[#131A2A] rounded-xl text-2xl font-medium text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-[#98A1C0] focus:outline-none focus:ring-2 focus:ring-[#00ffbd]\"\n                    />\n                    <div className=\"absolute right-4 top-1/2 -translate-y-1/2 text-gray-500 dark:text-[#98A1C0]\">\n                      {showTokenOrder ? `${token1.symbol} per ${token0.symbol}` : `${token0.symbol} per ${token1.symbol}`}\n                      </div>\n                    </div>\n                  {initialPrice && (\n                    <div className=\"mt-2 text-sm text-gray-500 dark:text-[#98A1C0]\">\n                      1 {showTokenOrder ? token1.symbol : token0.symbol} = {initialPrice} {showTokenOrder ? token0.symbol : token1.symbol}\n                      </div>\n                    )}\n                </div>\n              )}\n\n              {/* Price range selector */}\n              <div className=\"p-4 rounded-2xl bg-white dark:bg-[#0a0b0f] border border-gray-200 dark:border-[#00ffbd]/20\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">Set price range</h3>\n                  <div className=\"flex gap-1\">\n                    <button\n                      onClick={() => setShowTokenOrder(false)}\n                      className={`px-3 py-1 rounded-lg text-sm font-medium ${\n                        !showTokenOrder ? 'bg-[#00ffbd] dark:bg-[#131A2A] text-black dark:text-white' : 'hover:bg-[#00ffbd]/90 dark:hover:bg-[#131A2A] text-black dark:text-white'\n                      }`}\n                    >\n                      {token0.symbol}\n                    </button>\n                    <button\n                      onClick={() => setShowTokenOrder(true)}\n                      className={`px-3 py-1 rounded-lg text-sm font-medium ${\n                        showTokenOrder ? 'bg-[#00ffbd] dark:bg-[#131A2A] text-black dark:text-white' : 'hover:bg-[#00ffbd]/90 dark:hover:bg-[#131A2A] text-black dark:text-white'\n                      }`}\n                    >\n                      {token1.symbol}\n                    </button>\n                </div>\n            </div>\n\n                <div className=\"grid grid-cols-2 gap-3 mb-4\">\n                <button \n                  onClick={() => setSelectedRange('full')}\n                    className={`p-4 rounded-xl text-center transition-colors ${\n                    selectedRange === 'full' \n                        ? 'bg-[#00ffbd] dark:bg-[#131A2A] text-black dark:text-white'\n                        : 'bg-white dark:bg-[#0a0b0f] text-gray-500 dark:text-[#98A1C0] hover:bg-[#00ffbd]/90 dark:hover:bg-[#131A2A]'\n                  }`}\n                >\n                  Full range\n                </button>\n                <button \n                  onClick={() => setSelectedRange('custom')}\n                    className={`p-4 rounded-xl text-center transition-colors ${\n                    selectedRange === 'custom' \n                        ? 'bg-[#00ffbd] dark:bg-[#131A2A] text-black dark:text-white'\n                        : 'bg-white dark:bg-[#0a0b0f] text-gray-500 dark:text-[#98A1C0] hover:bg-[#00ffbd]/90 dark:hover:bg-[#131A2A]'\n                  }`}\n                >\n                  Custom range\n                </button>\n              </div>\n\n              {selectedRange === 'full' && (\n                <>\n                  <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mb-4\">\n                    Providing full range liquidity ensures continuous market participation across all possible prices, offering simplicity but with potential for higher impermanent loss.\n                  </div>\n\n                  {/* Current price display with token symbols */}\n                  {renderPriceSection()}\n\n                  <div className=\"grid grid-cols-2 gap-4 mt-4\">\n                    <div className=\"p-4 bg-gray-100 dark:bg-[#131A2A] rounded-xl\">\n                      <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mb-1\">Min Price</div>\n                      <div className=\"text-2xl font-medium text-gray-900 dark:text-white\">0</div>\n                      <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mt-1\">\n                        {getDisplaySymbol(token1)} per {getDisplaySymbol(token0)}\n                      </div>\n                    </div>\n                    <div className=\"p-4 bg-gray-100 dark:bg-[#131A2A] rounded-xl\">\n                      <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mb-1\">Max Price</div>\n                      <div className=\"text-2xl font-medium text-gray-900 dark:text-white\">∞</div>\n                      <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mt-1\">\n                        {getDisplaySymbol(token1)} per {getDisplaySymbol(token0)}\n                      </div>\n                    </div>\n                  </div>\n                </>\n              )}\n\n              {selectedRange === 'custom' && (\n                <div className=\"grid grid-cols-2 gap-4 mt-4\">\n                  <div>\n                      <label className=\"block text-sm text-gray-500 dark:text-[#98A1C0] mb-2\">\n                        Min price\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={priceRange.min}\n                      onChange={(e) => setPriceRange(prev => ({ ...prev, min: e.target.value }))}\n                        placeholder=\"0\"\n                        className=\"w-full p-4 bg-gray-100 dark:bg-[#131A2A] rounded-xl text-lg font-medium text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-[#98A1C0] focus:outline-none focus:ring-2 focus:ring-[#00ffbd]\"\n                    />\n                      <div className=\"mt-1 text-sm text-gray-500 dark:text-[#98A1C0]\">\n                        {token1.symbol} per {token0.symbol}\n                      </div>\n                  </div>\n                  <div>\n                      <label className=\"block text-sm text-gray-500 dark:text-[#98A1C0] mb-2\">\n                        Max price\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={priceRange.max}\n                      onChange={(e) => setPriceRange(prev => ({ ...prev, max: e.target.value }))}\n                        placeholder=\"∞\"\n                        className=\"w-full p-4 bg-gray-100 dark:bg-[#131A2A] rounded-xl text-lg font-medium text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-[#98A1C0] focus:outline-none focus:ring-2 focus:ring-[#00ffbd]\"\n                    />\n                      <div className=\"mt-1 text-sm text-gray-500 dark:text-[#98A1C0]\">\n                        {token1.symbol} per {token0.symbol}\n                      </div>\n                  </div>\n                </div>\n              )}\n              </div>\n\n              <div className=\"flex gap-3\">\n                <button\n                  onClick={prevStep}\n                  className=\"flex-1 p-4 rounded-xl font-medium text-center border border-[#00ffbd] text-[#00ffbd] hover:bg-[#00ffbd]/10 bg-white dark:bg-transparent\"\n                >\n                  Back\n                </button>\n                <button\n                  onClick={nextStep}\n                  disabled={!initialPrice}\n                  className={`flex-1 p-4 rounded-xl font-medium text-center ${\n                    !initialPrice\n                      ? 'bg-gray-100 dark:bg-[#131A2A] text-gray-400 dark:text-[#98A1C0] cursor-not-allowed'\n                      : 'bg-[#00ffbd] hover:bg-[#00ffbd]/90 text-black'\n                  }`}\n                >\n                  Continue\n                </button>\n              </div>\n            </div>\n          )}\n\n          {/* Step 3: Deposit Amounts */}\n          {currentStep === 'deposit-amounts' && (\n            <div className=\"space-y-6\">\n              {/* Token pair header */}\n              <div className=\"p-4 rounded-2xl bg-white dark:bg-[#0a0b0f] border border-gray-200 dark:border-[#00ffbd]/20\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-6 h-6 rounded-full bg-[#00ffbd] flex items-center justify-center text-xs font-medium text-black\">\n                      {getDisplaySymbol(token0).slice(0, 3)}\n                    </div>\n                    <span className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                      {getDisplaySymbol(token0)} / {getDisplaySymbol(token1)}\n                    </span>\n                    <div className=\"px-2 py-1 rounded bg-gray-100 dark:bg-[#131A2A] text-xs font-medium text-gray-900 dark:text-white\">\n                      v3\n                    </div>\n                    <div className=\"px-2 py-1 rounded bg-gray-100 dark:bg-[#131A2A] text-xs font-medium text-gray-900 dark:text-white\">\n                      {selectedFeeTier / 10000}%\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => setShowTokenSelector(false)}\n                    className=\"px-3 py-1 rounded-lg bg-gray-100 dark:bg-[#131A2A] hover:bg-gray-200 dark:hover:bg-[#1c2433] text-sm font-medium text-gray-900 dark:text-white\"\n                  >\n                    Edit\n                  </button>\n                </div>\n              </div>\n\n              {/* Price range display */}\n              <div className=\"p-4 rounded-2xl bg-white dark:bg-[#0a0b0f] border border-gray-200 dark:border-[#00ffbd]/20\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">Full range</h3>\n                  <button\n                    onClick={() => setCurrentStep('set-price')}\n                    className=\"px-3 py-1 rounded-lg bg-gray-100 dark:bg-[#131A2A] hover:bg-gray-200 dark:hover:bg-[#1c2433] text-sm font-medium text-gray-900 dark:text-white\"\n                  >\n                    Edit\n                  </button>\n                </div>\n\n                {selectedRange === 'full' && (\n                  <>\n                    <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mb-4\">\n                    The price of {getDisplaySymbol(token0)} can go from 0 to ∞ relative to {getDisplaySymbol(token1)}\n                  </div>\n\n                  {/* Current price display with token symbols */}\n                  {renderPriceSection()}\n\n                  <div className=\"grid grid-cols-2 gap-4 mt-4\">\n                    <div className=\"p-4 bg-gray-100 dark:bg-[#131A2A] rounded-xl\">\n                      <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mb-1\">Min Price</div>\n                      <div className=\"text-2xl font-medium text-gray-900 dark:text-white\">0</div>\n                      <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mt-1\">\n                        {getDisplaySymbol(token1)} per {getDisplaySymbol(token0)}\n                      </div>\n                    </div>\n                    <div className=\"p-4 bg-gray-100 dark:bg-[#131A2A] rounded-xl\">\n                      <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mb-1\">Max Price</div>\n                      <div className=\"text-2xl font-medium text-gray-900 dark:text-white\">∞</div>\n                      <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mt-1\">\n                        {getDisplaySymbol(token1)} per {getDisplaySymbol(token0)}\n                      </div>\n                    </div>\n                  </div>\n                </>\n                )}\n              </div>\n\n              {/* Deposit amounts */}\n              <div className=\"p-4 rounded-2xl bg-white dark:bg-[#0a0b0f] border border-gray-200 dark:border-[#00ffbd]/20\">\n                <h3 className=\"text-lg font-medium mb-4 text-gray-900 dark:text-white\">Deposit tokens</h3>\n                <p className=\"text-sm text-gray-500 dark:text-[#98A1C0] mb-4\">\n                  Specify the token amounts for your liquidity contribution.\n                </p>\n\n                <div className=\"space-y-4\">\n                  <div className=\"p-4 bg-gray-100 dark:bg-[#131A2A] rounded-xl border border-[#00ffbd]/10\">\n                    <input\n                      type=\"text\"\n                      value={amount0}\n                      onChange={(e) => handleAmount0Change(e.target.value)}\n                      placeholder=\"0\"\n                      className=\"w-full bg-transparent text-2xl font-medium text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-[#98A1C0] focus:outline-none\"\n                    />\n                    <div className=\"flex items-center justify-between mt-2\">\n                      <div className=\"flex items-center gap-2\">\n                        <img src={getTokenLogo(token0)} alt={token0.symbol} className=\"w-5 h-5 rounded-full\" />\n                        <span className=\"font-medium text-gray-900 dark:text-white\">{token0.symbol}</span>\n                      </div>\n                      <div className=\"text-sm text-gray-500 dark:text-[#98A1C0]\">\n                        Balance: {formatBalance(token0Balance)} {token0.symbol}\n                      </div>\n              </div>\n            </div>\n\n                  <div className=\"p-4 bg-gray-100 dark:bg-[#131A2A] rounded-xl border border-[#00ffbd]/10\">\n                    <input\n                      type=\"text\"\n                      value={amount1}\n                      onChange={(e) => handleAmount1Change(e.target.value)}\n                      placeholder=\"0\"\n                      className=\"w-full bg-transparent text-2xl font-medium text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-[#98A1C0] focus:outline-none\"\n                    />\n                    <div className=\"flex items-center justify-between mt-2\">\n                      <div className=\"flex items-center gap-2\">\n                        <img src={getTokenLogo(token1)} alt={token1.symbol} className=\"w-5 h-5 rounded-full\" />\n                        <span className=\"font-medium text-gray-900 dark:text-white\">{token1.symbol}</span>\n                      </div>\n                      <div className=\"text-sm text-gray-500 dark:text-[#98A1C0]\">\n                        Balance: {formatBalance(token1Balance)} {token1.symbol}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex gap-3\">\n                <button\n                  onClick={prevStep}\n                  className=\"flex-1 p-4 rounded-xl font-medium text-center border border-[#00ffbd] text-[#00ffbd] hover:bg-[#00ffbd]/10 bg-white dark:bg-transparent\"\n                >\n                  Back\n                </button>\n            <button\n              onClick={handleCreatePool}\n                  disabled={!amount0 || !amount1}\n                  className={`flex-1 p-4 rounded-xl font-medium text-center ${\n                    !amount0 || !amount1\n                      ? 'bg-gray-100 dark:bg-[#131A2A] text-gray-400 dark:text-[#98A1C0] cursor-not-allowed'\n                      : 'bg-[#00ffbd] hover:bg-[#00ffbd]/90 text-black'\n                  }`}\n                >\n                  Create Pool\n            </button>\n              </div>\n            </div>\n        )}\n        </div>\n      </div>\n\n      {/* Token Selector Modal */}\n      <TokenSelectionModal\n        isOpen={showTokenSelector}\n        onClose={() => setShowTokenSelector(false)}\n        onSelect={handleTokenSelect}\n        selectedToken={activeSide === 'token0' ? token0 : token1}\n        excludeToken={activeSide === 'token0' ? token1 : token0}\n      />\n\n      {/* Progress Modal */}\n      <Transition appear show={showProgressModal} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"relative z-50\"\n          onClose={() => {\n            if (currentStep === 'completed' || currentStep === 'error') {\n              setShowProgressModal(false);\n            }\n          }}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-0 overflow-y-auto\">\n            <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0 scale-95\"\n                enterTo=\"opacity-100 scale-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100 scale-100\"\n                leaveTo=\"opacity-0 scale-95\"\n              >\n                <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#0a0b0f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-[#00ffbd]/20\">\n                  <Dialog.Title\n                    as=\"h3\"\n                    className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\n                  >\n                    {error ? 'Error Creating Pool' : 'Creating Pool'}\n                    {!error && token0 && token1 && (\n                      <div className=\"mt-2 text-base font-normal text-gray-500 dark:text-[#98A1C0]\">\n                        {token0.symbol}/{token1.symbol}\n                      </div>\n                    )}\n                  </Dialog.Title>\n\n                  <div className=\"space-y-4\">\n                    {['preparing', 'approval', 'creating', 'confirming', 'completed'].map((step) => {\n                      const isActive = currentStep === step;\n                      const isCompleted = currentStep === 'completed' || (\n                        ['completed', 'confirming', 'creating', 'approval'].indexOf(currentStep) >\n                        ['completed', 'confirming', 'creating', 'approval'].indexOf(step)\n                      );\n                      \n                      return (\n                        <div\n                          key={step}\n                          className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\n                            isActive && !error ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : \n                            isCompleted ? 'text-[#00ffbd]' : \n                            error && currentStep === step ? 'bg-red-500/10 text-red-500' : \n                            'text-gray-500 dark:text-[#5D6785]'\n                          }`}\n                        >\n                          {Icons[step.charAt(0).toUpperCase() + step.slice(1)]?.()}\n                          <div className=\"flex-1\">\n                            <span className=\"font-medium text-gray-900 dark:text-white capitalize\">{step}</span>\n                            {isActive && !error && (\n                              <p className=\"text-sm text-gray-500 dark:text-[#98A1C0] mt-1\">\n                                {step === 'preparing' && 'Preparing transaction...'}\n                                {step === 'approval' && `Approving ${token0?.symbol} and ${token1?.symbol}`}\n                                {step === 'creating' && `Creating ${token0?.symbol}/${token1?.symbol} pool`}\n                                {step === 'confirming' && 'Waiting for confirmation...'}\n                                {step === 'completed' && `Successfully created ${token0?.symbol}/${token1?.symbol} pool!`}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n                      );\n                    })}\n\n                    {error && (\n                      <div className=\"p-4 bg-red-500/10 rounded-xl text-red-500 text-sm\">\n                        {error}\n                      </div>\n                    )}\n                  </div>\n\n                  {(currentStep === 'completed' || error) && (\n                    <div className=\"mt-6\">\n                      <button\n                        onClick={() => setShowProgressModal(false)}\n                        className=\"w-full p-4 bg-[#00ffbd] hover:bg-[#00ffbd]/90 text-black rounded-xl font-medium\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  )}\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition>\n\n      {/* Rating Modal */}\n      <Transition appear show={showRatingModal} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"relative z-50\"\n          onClose={() => setShowRatingModal(false)}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-0 overflow-y-auto\">\n            <div className=\"flex min-h-full items-center justify-center p-4\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0 scale-95\"\n                enterTo=\"opacity-100 scale-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100 scale-100\"\n                leaveTo=\"opacity-0 scale-95\"\n              >\n                <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-[#0a0b0f] p-6 text-left align-middle shadow-xl transition-all border border-[#00ffbd]/20\">\n                  <Dialog.Title\n                    as=\"h3\"\n                    className=\"text-lg font-medium leading-6 text-white text-center\"\n                  >\n                    How was your experience?\n                  </Dialog.Title>\n\n                  <div className=\"mt-4\">\n                    <div className=\"flex justify-center space-x-2\">\n                      {[1, 2, 3, 4, 5].map((rating) => (\n                        <button\n                          key={rating}\n                          onClick={() => {\n                            console.log('User rated:', rating);\n                            setShowRatingModal(false);\n                          }}\n                          className=\"p-2 hover:bg-[#00ffbd]/10 rounded-full transition-colors\"\n                        >\n                          <FaStar\n                            size={24}\n                            className={rating <= 3 ? 'text-yellow-500' : 'text-[#00ffbd]'}\n                          />\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"mt-6\">\n                    <button\n                      onClick={() => setShowRatingModal(false)}\n                      className=\"w-full p-4 bg-gray-100 dark:bg-[#131A2A] hover:bg-gray-200 dark:hover:bg-[#1c2433] text-gray-900 dark:text-white rounded-xl font-medium\"\n                    >\n                      Close\n                    </button>\n                  </div>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition>\n\n      {/* Price Range Modal */}\n      <Transition appear show={showPriceRangeModal} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"relative z-50\"\n          onClose={() => setShowPriceRangeModal(false)}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-0 overflow-y-auto\">\n            <div className=\"flex min-h-full items-center justify-center p-4\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0 scale-95\"\n                enterTo=\"opacity-100 scale-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100 scale-100\"\n                leaveTo=\"opacity-0 scale-95\"\n              >\n                <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-[#0a0b0f] p-6 text-left align-middle shadow-xl transition-all border border-[#00ffbd]/20\">\n                  <Dialog.Title\n                    as=\"h3\"\n                    className=\"text-lg font-medium leading-6 text-white\"\n                  >\n                    Set Price Range\n                  </Dialog.Title>\n\n                  <div className=\"mt-4 space-y-4\">\n                    {V3PositionManager.getPriceRangePresets().map((preset) => (\n                      <button\n                        key={preset.value}\n                        onClick={() => {\n                          if (preset.value === 'full') {\n                            const { tickLower, tickUpper } = V3PositionManager.getFullRangeTicks(selectedFeeTier);\n                            setTickLower(tickLower);\n                            setTickUpper(tickUpper);\n                          } else {\n                            const { tickLower, tickUpper } = V3PositionManager.getPriceRangeTicks({\n                              basePrice: Number(amount1) / Number(amount0),\n                              lowerPricePercent: preset.lowerPricePercent,\n                              upperPricePercent: preset.upperPricePercent,\n                              decimals0: token0?.decimals,\n                              decimals1: token1?.decimals,\n                              feeAmount: selectedFeeTier\n                            });\n                            setTickLower(tickLower);\n                            setTickUpper(tickUpper);\n                          }\n                          setShowPriceRangeModal(false);\n                        }}\n                        className=\"w-full p-4 text-left rounded-xl bg-[#131A2A] hover:bg-[#1c2433] border border-[#00ffbd]/10 transition-colors\"\n                      >\n                        <div className=\"text-base font-semibold text-white\">{preset.label}</div>\n                        <div className=\"text-sm text-gray-500 dark:text-[#98A1C0] mt-1\">{preset.description}</div>\n                      </button>\n                    ))}\n                  </div>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { Dialog } from '@headlessui/react';\nimport { useUniswap } from '../../hooks/useUniswap';\nimport { ethers } from 'ethers';\nimport { FaSearch } from 'react-icons/fa';\nimport { getTokenLogo, getTokenMetadata } from '../../utils/tokens';\n\nexport default function PoolSelectionModal({ isOpen, onClose, onSelect }) {\n  const uniswap = useUniswap();\n  const [pools, setPools] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    const loadPools = async () => {\n      if (!isOpen) return;\n\n      setLoading(true);\n      setError('');\n      try {\n        const factoryPools = await uniswap.getAllPools();\n        console.log('Factory pools:', factoryPools);\n\n        if (factoryPools && factoryPools.length > 0) {\n          // Get pool data for each pool\n          const poolsData = await Promise.all(\n            factoryPools.map(async (poolAddress) => {\n              try {\n                console.log('Fetching data for pool:', poolAddress);\n                const poolInfo = await uniswap.getPoolInfoByAddress(poolAddress);\n                if (!poolInfo) {\n                  console.log('No pool info found for:', poolAddress);\n                  return null;\n                }\n\n                // Enhance token metadata\n                const [token0Metadata, token1Metadata] = await Promise.all([\n                  getTokenMetadata(poolInfo.token0),\n                  getTokenMetadata(poolInfo.token1)\n                ]);\n\n                console.log('Pool info found:', {\n                  token0: token0Metadata?.symbol,\n                  token1: token1Metadata?.symbol,\n                  reserves: poolInfo.reserves\n                });\n\n                return {\n                  ...poolInfo,\n                  token0: token0Metadata,\n                  token1: token1Metadata,\n                  pairAddress: poolAddress,\n                  reserves: {\n                    ...poolInfo.reserves,\n                    reserve0Formatted: ethers.formatUnits(poolInfo.reserves?.reserve0 || '0', token0Metadata?.decimals || 18),\n                    reserve1Formatted: ethers.formatUnits(poolInfo.reserves?.reserve1 || '0', token1Metadata?.decimals || 18)\n                  }\n                };\n              } catch (err) {\n                console.error(`Error fetching pool data:`, err);\n                return null;\n              }\n            })\n          );\n\n          // Filter out null values and sort by TVL\n          const validPools = poolsData.filter(pool => pool !== null);\n          console.log('Setting pools:', validPools);\n          setPools(validPools);\n        }\n      } catch (err) {\n        console.error('Error loading pools:', err);\n        setError('Failed to load pools');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadPools();\n  }, [isOpen, uniswap]);\n\n  // Filter pools based on search term\n  const filteredPools = pools.filter(pool => {\n    const searchLower = searchTerm.toLowerCase();\n    return (\n      pool.token0?.symbol?.toLowerCase().includes(searchLower) ||\n      pool.token1?.symbol?.toLowerCase().includes(searchLower) ||\n      pool.pairAddress.toLowerCase().includes(searchLower)\n    );\n  });\n\n  return (\n    <Dialog open={isOpen} onClose={onClose} className=\"relative z-50\">\n      <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm\" aria-hidden=\"true\" />\n      \n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-2xl rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 shadow-xl border border-gray-200 dark:border-gray-800\">\n          <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n            Select Pool\n          </Dialog.Title>\n\n          {/* Search Input */}\n          <div className=\"relative mb-4\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <FaSearch className=\"text-gray-400\" />\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Search by token symbol or pool address...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full px-4 py-2 pl-10 bg-white/5 dark:bg-[#1a1b1f] rounded-xl border border-gray-200 dark:border-gray-800 focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white\"\n            />\n          </div>\n\n          {/* Pool List Container */}\n          <div className=\"overflow-y-auto max-h-[60vh] space-y-2 pr-2 custom-scrollbar\">\n            {loading ? (\n              <div className=\"text-center py-8\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#00ffbd] mx-auto\"></div>\n                <p className=\"text-gray-500 mt-4\">Loading pools...</p>\n              </div>\n            ) : error ? (\n              <div className=\"text-center py-8 text-red-500\">{error}</div>\n            ) : filteredPools.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <p className=\"text-gray-500 text-lg\">\n                  {pools.length === 0 ? 'No pools found' : 'No pools match your search'}\n                </p>\n                {pools.length > 0 && (\n                  <p className=\"text-sm text-gray-400 mt-2\">Try searching with a different term</p>\n                )}\n              </div>\n            ) : (\n              filteredPools.map((pool) => (\n                <button\n                  key={pool.pairAddress}\n                  onClick={() => onSelect(pool)}\n                  className=\"w-full p-6 bg-white/5 dark:bg-[#2d2f36] hover:bg-gray-50 dark:hover:bg-[#2d2f36]/80 rounded-xl border border-gray-200 dark:border-gray-800 transition-colors text-left\"\n                >\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"flex -space-x-3\">\n                        <img\n                          src={getTokenLogo(pool.token0)}\n                          alt={pool.token0?.symbol || 'ERC20 Token'}\n                          className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\n                          onError={(e) => {\n                            e.target.onerror = null;\n                            e.target.src = '/token-default.png';\n                          }}\n                        />\n                        <img\n                          src={getTokenLogo(pool.token1)}\n                          alt={pool.token1?.symbol || 'ERC20 Token'}\n                          className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\n                          onError={(e) => {\n                            e.target.onerror = null;\n                            e.target.src = '/token-default.png';\n                          }}\n                        />\n                      </div>\n                      <span className=\"font-medium text-gray-900 dark:text-white text-lg\">\n                        {pool.token0?.symbol || 'ERC20 Token'}/{pool.token1?.symbol || 'ERC20 Token'}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {pool.token0?.symbol || 'ERC20 Token'} Reserves\n                      </div>\n                      <div className=\"text-base font-medium text-gray-900 dark:text-white\">\n                        {pool.reserves.reserve0Formatted}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {pool.token1?.symbol || 'ERC20 Token'} Reserves\n                      </div>\n                      <div className=\"text-base font-medium text-gray-900 dark:text-white\">\n                        {pool.reserves.reserve1Formatted}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-2 text-xs text-gray-500 dark:text-gray-400 truncate\">\n                    {pool.pairAddress}\n                  </div>\n                </button>\n              ))\n            )}\n          </div>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n} ","import React, { useState, useEffect } from 'react';\r\nimport { useAccount, useBalance } from 'wagmi';\r\nimport { toast } from 'react-hot-toast';\r\nimport TokenSelectionModal from './TokenSelectionModal';\r\nimport PoolSelectionModal from './PoolSelectionModal';\r\nimport { ethers } from 'ethers';\r\nimport { useUniswap } from '../../hooks/useUniswap';\r\nimport { UNISWAP_ADDRESSES } from '../../services/uniswap';\r\nimport { ipfsToHttp } from '../../utils/ipfs';\r\n\r\n// Common tokens with metadata\r\nconst COMMON_TOKENS = [\r\n  {\r\n    address: 'ETH',\r\n    symbol: 'ETH',\r\n    name: 'Ethereum',\r\n    decimals: 18,\r\n    logo: '/eth.png'\r\n  },\r\n  {\r\n    address: UNISWAP_ADDRESSES.WETH,\r\n    symbol: 'WETH',\r\n    name: 'Wrapped Ethereum',\r\n    decimals: 18,\r\n    logo: '/eth.png'\r\n  },\r\n  {\r\n    address: '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238',\r\n    symbol: 'USDC',\r\n    name: 'USD Coin',\r\n    decimals: 6,\r\n    logo: '/usdc.png'\r\n  },\r\n  {\r\n    address: UNISWAP_ADDRESSES.USDT,\r\n    symbol: 'USDT',\r\n    name: 'Test USDT',\r\n    decimals: 6,\r\n    logo: '/usdt.png'\r\n  }\r\n];\r\n\r\nconst getTokenLogo = (token) => {\r\n  // Check if it's a common token\r\n  const commonToken = COMMON_TOKENS.find(t => t.address?.toLowerCase() === token?.address?.toLowerCase());\r\n  if (commonToken) {\r\n    return commonToken.logo;\r\n  }\r\n\r\n  // Check for IPFS or direct logo from token data\r\n  if (token?.logo || token?.logoIpfs) {\r\n    return token.logo || ipfsToHttp(token.logoIpfs);\r\n  }\r\n\r\n  // Default token logo\r\n  return '/token-default.png';\r\n};\r\n\r\n// Add balance display component\r\nconst TokenBalance = ({ token }) => {\r\n  const { address } = useAccount();\r\n  const [balance, setBalance] = useState('0');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadBalance = async () => {\r\n      if (!address || !token?.address) return;\r\n\r\n      setIsLoading(true);\r\n      try {\r\n        const provider = new ethers.BrowserProvider(window.ethereum);\r\n        const tokenContract = new ethers.Contract(\r\n          token.address,\r\n          [\r\n            'function balanceOf(address) view returns (uint256)',\r\n            'function decimals() view returns (uint8)'\r\n          ],\r\n          provider\r\n        );\r\n\r\n        const [rawBalance, decimals] = await Promise.all([\r\n          tokenContract.balanceOf(address),\r\n          tokenContract.decimals()\r\n        ]);\r\n\r\n        const formattedBalance = ethers.formatUnits(rawBalance, decimals);\r\n        console.log(`Balance loaded for ${token.symbol}:`, {\r\n          raw: rawBalance.toString(),\r\n          formatted: formattedBalance,\r\n          decimals\r\n        });\r\n\r\n        setBalance(formattedBalance);\r\n      } catch (error) {\r\n        console.error(`Error loading ${token.symbol} balance:`, error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadBalance();\r\n  }, [address, token]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n        Loading balance...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const formattedBalance = Number(balance).toLocaleString(undefined, {\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: token.symbol === 'USDC' ? 2 : 6\r\n  });\r\n\r\n  return (\r\n    <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n      Balance: {formattedBalance} {token.symbol}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function AddLiquidity() {\r\n  const { address } = useAccount();\r\n  const uniswap = useUniswap();\r\n  const [pool, setPool] = useState(null);\r\n  const [token0Amount, setToken0Amount] = useState('');\r\n  const [token1Amount, setToken1Amount] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [showPoolModal, setShowPoolModal] = useState(false);\r\n  const [activeInput, setActiveInput] = useState(null);\r\n  const calculateTimeoutRef = React.useRef(null);\r\n\r\n  // Single useEffect for calculations\r\n  React.useEffect(() => {\r\n    const calculateAmount = async () => {\r\n      if (!pool || !activeInput) return;\r\n\r\n      try {\r\n        const poolInfo = await uniswap.getPoolInfo(pool.token0.address, pool.token1.address);\r\n        if (!poolInfo || !poolInfo.reserve0 || !poolInfo.reserve1) return;\r\n\r\n        if (activeInput === 'token0' && token0Amount && token0Amount !== '0') {\r\n          const amount0 = ethers.parseUnits(token0Amount, pool.token0.decimals);\r\n          const amount1 = (amount0 * poolInfo.reserve1) / poolInfo.reserve0;\r\n          const formattedAmount1 = ethers.formatUnits(amount1, pool.token1.decimals);\r\n          setToken1Amount(formattedAmount1);\r\n        } else if (activeInput === 'token1' && token1Amount && token1Amount !== '0') {\r\n          const amount1 = ethers.parseUnits(token1Amount, pool.token1.decimals);\r\n          const amount0 = (amount1 * poolInfo.reserve0) / poolInfo.reserve1;\r\n          const formattedAmount0 = ethers.formatUnits(amount0, pool.token0.decimals);\r\n          setToken0Amount(formattedAmount0);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error calculating amounts:', error);\r\n      }\r\n    };\r\n\r\n    // Clear any existing timeout\r\n    if (calculateTimeoutRef.current) {\r\n      clearTimeout(calculateTimeoutRef.current);\r\n    }\r\n\r\n    // Set new timeout for calculation\r\n    calculateTimeoutRef.current = setTimeout(calculateAmount, 500);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      if (calculateTimeoutRef.current) {\r\n        clearTimeout(calculateTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [pool, token0Amount, token1Amount, activeInput, uniswap]);\r\n\r\n  const handleToken0Change = (e) => {\r\n    setActiveInput('token0');\r\n    setToken0Amount(e.target.value);\r\n    if (!e.target.value || e.target.value === '0') {\r\n      setToken1Amount('');\r\n    }\r\n  };\r\n\r\n  const handleToken1Change = (e) => {\r\n    setActiveInput('token1');\r\n    setToken1Amount(e.target.value);\r\n    if (!e.target.value || e.target.value === '0') {\r\n      setToken0Amount('');\r\n    }\r\n  };\r\n\r\n  const handleAddLiquidity = async () => {\r\n    if (!address) {\r\n      toast.error('Please connect your wallet');\r\n      return;\r\n    }\r\n\r\n    if (!pool || !token0Amount || !token1Amount) {\r\n      toast.error('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Parse amounts with proper decimals\r\n      const parsedAmount0 = ethers.parseUnits(token0Amount, pool.token0.decimals);\r\n      const parsedAmount1 = ethers.parseUnits(token1Amount, pool.token1.decimals);\r\n\r\n      // First ensure approvals are completed\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const signer = await provider.getSigner();\r\n      \r\n      const token0Contract = new ethers.Contract(pool.token0.address, [\r\n        'function allowance(address,address) view returns (uint256)',\r\n        'function approve(address,uint256) returns (bool)'\r\n      ], signer);\r\n      \r\n      const token1Contract = new ethers.Contract(pool.token1.address, [\r\n        'function allowance(address,address) view returns (uint256)',\r\n        'function approve(address,uint256) returns (bool)'\r\n      ], signer);\r\n\r\n      // Check allowances\r\n      const allowance0 = await token0Contract.allowance(address, uniswap.router.address);\r\n      const allowance1 = await token1Contract.allowance(address, uniswap.router.address);\r\n\r\n      // Handle token0 approval first if needed\r\n      if (allowance0 < parsedAmount0) {\r\n        try {\r\n          toast.loading('Approving ' + pool.token0.symbol + '...', { id: 'approve0' });\r\n          const approve0Tx = await token0Contract.approve(uniswap.router.address, ethers.MaxUint256);\r\n          await approve0Tx.wait();\r\n          toast.success(pool.token0.symbol + ' approved successfully', { id: 'approve0' });\r\n        } catch (error) {\r\n          toast.error('Failed to approve ' + pool.token0.symbol, { id: 'approve0' });\r\n          setLoading(false);\r\n          return; // Exit if approval fails\r\n        }\r\n      }\r\n\r\n      // Handle token1 approval after token0 is approved\r\n      if (allowance1 < parsedAmount1) {\r\n        try {\r\n          toast.loading('Approving ' + pool.token1.symbol + '...', { id: 'approve1' });\r\n          const approve1Tx = await token1Contract.approve(uniswap.router.address, ethers.MaxUint256);\r\n          await approve1Tx.wait();\r\n          toast.success(pool.token1.symbol + ' approved successfully', { id: 'approve1' });\r\n        } catch (error) {\r\n          toast.error('Failed to approve ' + pool.token1.symbol, { id: 'approve1' });\r\n          setLoading(false);\r\n          return; // Exit if approval fails\r\n        }\r\n      }\r\n\r\n      // Double-check allowances after approvals\r\n      const finalAllowance0 = await token0Contract.allowance(address, uniswap.router.address);\r\n      const finalAllowance1 = await token1Contract.allowance(address, uniswap.router.address);\r\n\r\n      if (finalAllowance0 < parsedAmount0 || finalAllowance1 < parsedAmount1) {\r\n        toast.error('Approval process incomplete. Please try again.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Wait a moment after approvals are confirmed\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n      // Calculate minimum amounts (1% slippage tolerance)\r\n      const amount0Min = parsedAmount0 * 99n / 100n;\r\n      const amount1Min = parsedAmount1 * 99n / 100n;\r\n\r\n      toast.loading('Adding liquidity...', { id: 'add-liquidity' });\r\n\r\n      // Add liquidity only after approvals are confirmed\r\n      const receipt = await uniswap.addLiquidity(\r\n        pool.token0.address,\r\n        pool.token1.address,\r\n        parsedAmount0,\r\n        parsedAmount1,\r\n        amount0Min,\r\n        amount1Min,\r\n        address\r\n      );\r\n\r\n      console.log('Liquidity added:', receipt);\r\n      toast.success('Liquidity added successfully!', { id: 'add-liquidity' });\r\n      \r\n      // Reset form\r\n      setToken0Amount('');\r\n      setToken1Amount('');\r\n      setPool(null);\r\n    } catch (error) {\r\n      console.error('Add liquidity error:', error);\r\n      toast.error(\r\n        error.message.includes('insufficient')\r\n          ? 'Insufficient balance for transaction'\r\n          : error.message.includes('chain')\r\n          ? 'Please switch to a supported network'\r\n          : `Failed to add liquidity: ${error.message}`,\r\n        { id: 'add-liquidity' }\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePoolSelect = (selectedPool) => {\r\n    setPool({\r\n      ...selectedPool,\r\n      token0: {\r\n        ...selectedPool.token0,\r\n        name: selectedPool.token0.name || selectedPool.token0.symbol,\r\n        symbol: selectedPool.token0.symbol,\r\n        logo: selectedPool.token0.logo || selectedPool.token0.logoIpfs,\r\n      },\r\n      token1: {\r\n        ...selectedPool.token1,\r\n        name: selectedPool.token1.name || selectedPool.token1.symbol,\r\n        symbol: selectedPool.token1.symbol,\r\n        logo: selectedPool.token1.logo || selectedPool.token1.logoIpfs,\r\n      }\r\n    });\r\n    setShowPoolModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-6 bg-white/5 dark:bg-[#1a1b1f] rounded-2xl border border-gray-200 dark:border-gray-800 shadow-xl\">\r\n      <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">Add Liquidity</h2>\r\n      \r\n      {/* Pool Selection */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          Select Pool\r\n        </label>\r\n        <button\r\n          onClick={() => setShowPoolModal(true)}\r\n          className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800 hover:border-[#00ffbd] dark:hover:border-[#00ffbd] transition-colors flex items-center justify-between group\"\r\n        >\r\n          {pool ? (\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"flex -space-x-2\">\r\n                <img\r\n                  src={getTokenLogo(pool.token0)}\r\n                  alt={pool.token0.symbol}\r\n                  className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n                />\r\n                <img\r\n                  src={getTokenLogo(pool.token1)}\r\n                  alt={pool.token1.symbol}\r\n                  className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n                />\r\n              </div>\r\n              <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                {pool.token0.symbol}/{pool.token1.symbol}\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <span className=\"text-gray-500\">Select a pool</span>\r\n          )}\r\n          <svg\r\n            className=\"w-5 h-5 text-gray-400 group-hover:text-[#00ffbd] transition-colors\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {pool && (\r\n        <>\r\n          {/* Amount Inputs */}\r\n          <div className=\"space-y-4\">\r\n            {/* Token 0 Input */}\r\n            <div className=\"p-4 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800\">\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <img\r\n                    src={getTokenLogo(pool.token0)}\r\n                    alt={pool.token0.symbol}\r\n                    className=\"w-6 h-6 rounded-full\"\r\n                  />\r\n                  <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                    {pool.token0.symbol}\r\n                  </span>\r\n                </div>\r\n                <TokenBalance token={pool.token0} />\r\n              </div>\r\n              <input\r\n                type=\"number\"\r\n                value={token0Amount}\r\n                onChange={handleToken0Change}\r\n                onFocus={() => setActiveInput('token0')}\r\n                placeholder=\"0.0\"\r\n                className=\"w-full bg-transparent text-2xl font-medium text-gray-900 dark:text-white placeholder-gray-400 focus:outline-none\"\r\n              />\r\n            </div>\r\n\r\n            {/* Plus Icon */}\r\n            <div className=\"flex justify-center\">\r\n              <div className=\"w-8 h-8 bg-white/5 dark:bg-[#2d2f36] rounded-full flex items-center justify-center\">\r\n                <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Token 1 Input */}\r\n            <div className=\"p-4 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800\">\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <img\r\n                    src={getTokenLogo(pool.token1)}\r\n                    alt={pool.token1.symbol}\r\n                    className=\"w-6 h-6 rounded-full\"\r\n                  />\r\n                  <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                    {pool.token1.symbol}\r\n                  </span>\r\n                </div>\r\n                <TokenBalance token={pool.token1} />\r\n              </div>\r\n              <input\r\n                type=\"number\"\r\n                value={token1Amount}\r\n                onChange={handleToken1Change}\r\n                onFocus={() => setActiveInput('token1')}\r\n                placeholder=\"0.0\"\r\n                className=\"w-full bg-transparent text-2xl font-medium text-gray-900 dark:text-white placeholder-gray-400 focus:outline-none\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Add Liquidity Button */}\r\n          <button\r\n            onClick={handleAddLiquidity}\r\n            disabled={loading || !token0Amount || !token1Amount}\r\n            className=\"w-full mt-6 px-6 py-3 bg-[#00ffbd] hover:bg-[#00e6a9] disabled:bg-gray-400 text-black font-medium rounded-xl transition-colors flex items-center justify-center gap-2\"\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <div className=\"w-5 h-5 border-2 border-black border-t-transparent rounded-full animate-spin\" />\r\n                Adding Liquidity...\r\n              </>\r\n            ) : (\r\n              'Add Liquidity'\r\n            )}\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {/* Pool Selection Modal */}\r\n      <PoolSelectionModal\r\n        isOpen={showPoolModal}\r\n        onClose={() => setShowPoolModal(false)}\r\n        onSelect={(selectedPool) => {\r\n          setPool(selectedPool);\r\n          setShowPoolModal(false);\r\n          // Reset amounts when pool changes\r\n          setToken0Amount('');\r\n          setToken1Amount('');\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport { useAccount } from 'wagmi';\r\nimport { toast } from 'react-hot-toast';\r\nimport { ethers } from 'ethers';\r\nimport { useUniswap } from '../../hooks/useUniswap';\r\nimport PoolSelectionModal from './PoolSelectionModal';\r\nimport { getTokenLogo } from '../../utils/tokens';\r\n\r\nexport default function RemoveLiquidity() {\r\n  const { address } = useAccount();\r\n  const uniswap = useUniswap();\r\n  const [pool, setPool] = useState(null);\r\n  const [lpBalance, setLpBalance] = useState('0');\r\n  const [removePercentage, setRemovePercentage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [showPoolModal, setShowPoolModal] = useState(false);\r\n  const [token0Amount, setToken0Amount] = useState('0');\r\n  const [token1Amount, setToken1Amount] = useState('0');\r\n\r\n  // Fetch LP token balance and pool info when pool is selected\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const fetchPoolInfo = async () => {\r\n      if (!pool || !address || !pool.pairAddress) return;\r\n\r\n      try {\r\n        const provider = new ethers.BrowserProvider(window.ethereum);\r\n        \r\n        // Get LP token contract\r\n        const lpContract = new ethers.Contract(\r\n          pool.pairAddress,\r\n          [\r\n            'function balanceOf(address) view returns (uint256)',\r\n            'function totalSupply() view returns (uint256)',\r\n            'function allowance(address, address) view returns (uint256)'\r\n          ],\r\n          provider\r\n        );\r\n\r\n        // Get current reserves and other pool info\r\n        const poolInfo = await uniswap.getPoolInfo(pool.token0.address, pool.token1.address);\r\n        \r\n        // Get user's LP balance and total supply\r\n        const [balance, totalSupply] = await Promise.all([\r\n          lpContract.balanceOf(address),\r\n          lpContract.totalSupply()\r\n        ]);\r\n\r\n        if (!isMounted) return;\r\n\r\n        // Calculate user's share and token amounts\r\n        const userShare = (balance * BigInt(10000)) / totalSupply;\r\n        const sharePercentage = Number(userShare) / 100;\r\n\r\n        // Calculate token amounts based on share\r\n        const token0Amount = (poolInfo.reserve0 * balance) / totalSupply;\r\n        const token1Amount = (poolInfo.reserve1 * balance) / totalSupply;\r\n\r\n        setLpBalance(ethers.formatEther(balance));\r\n        setToken0Amount(ethers.formatUnits(token0Amount, pool.token0.decimals));\r\n        setToken1Amount(ethers.formatUnits(token1Amount, pool.token1.decimals));\r\n\r\n        // Store total supply for share calculation\r\n        setPool(prev => ({\r\n          ...prev,\r\n          totalSupply: ethers.formatEther(totalSupply),\r\n          userShare: sharePercentage\r\n        }));\r\n\r\n      } catch (error) {\r\n        if (!isMounted) return;\r\n        console.error('Error fetching pool info:', error);\r\n        toast.error('Failed to fetch pool information');\r\n      }\r\n    };\r\n\r\n    fetchPoolInfo();\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [pool?.pairAddress, address, uniswap]);\r\n\r\n  // Update token amounts based on remove percentage\r\n  useEffect(() => {\r\n    if (!pool || !lpBalance || !removePercentage || !token0Amount || !token1Amount) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const percentage = parseFloat(removePercentage);\r\n      if (isNaN(percentage) || percentage <= 0 || percentage > 100) return;\r\n\r\n      // Calculate amounts based on percentage of user's total holdings\r\n      const baseToken0Amount = parseFloat(token0Amount);\r\n      const baseToken1Amount = parseFloat(token1Amount);\r\n      \r\n      const newToken0Amount = (baseToken0Amount * percentage) / 100;\r\n      const newToken1Amount = (baseToken1Amount * percentage) / 100;\r\n\r\n      setToken0Amount(newToken0Amount.toFixed(pool.token0.decimals));\r\n      setToken1Amount(newToken1Amount.toFixed(pool.token1.decimals));\r\n\r\n    } catch (error) {\r\n      console.error('Error calculating token amounts:', error);\r\n    }\r\n  }, [removePercentage, lpBalance, pool?.token0?.decimals]);\r\n\r\n  const handleRemoveLiquidity = async () => {\r\n    if (!address) {\r\n      toast.error('Please connect your wallet');\r\n      return;\r\n    }\r\n\r\n    if (!pool || !removePercentage) {\r\n      toast.error('Please select a pool and enter amount to remove');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const signer = await provider.getSigner();\r\n\r\n      // Calculate LP tokens to remove\r\n      const totalLPTokens = ethers.parseEther(lpBalance);\r\n      const lpTokensToRemove = (totalLPTokens * BigInt(Math.floor(parseFloat(removePercentage)))) / 100n;\r\n\r\n      // Calculate minimum amounts with 1% slippage\r\n      const amount0Min = (ethers.parseUnits(token0Amount, pool.token0.decimals) * 99n) / 100n;\r\n      const amount1Min = (ethers.parseUnits(token1Amount, pool.token1.decimals) * 99n) / 100n;\r\n\r\n      console.log('Remove Liquidity Params:', {\r\n        lpTokensToRemove: lpTokensToRemove.toString(),\r\n        amount0Min: amount0Min.toString(),\r\n        amount1Min: amount1Min.toString()\r\n      });\r\n\r\n      // First approve LP tokens if needed\r\n      const lpContract = new ethers.Contract(\r\n        pool.pairAddress,\r\n        ['function approve(address, uint256) returns (bool)', 'function allowance(address, address) view returns (uint256)'],\r\n        signer\r\n      );\r\n\r\n      const allowance = await lpContract.allowance(address, uniswap.router.address);\r\n      if (allowance < lpTokensToRemove) {\r\n        toast.loading('Approving LP tokens...', { id: 'approve-lp' });\r\n        const approveTx = await lpContract.approve(uniswap.router.address, ethers.MaxUint256);\r\n        await approveTx.wait();\r\n        toast.success('LP tokens approved', { id: 'approve-lp' });\r\n      }\r\n\r\n      // Remove liquidity\r\n      toast.loading('Removing liquidity...', { id: 'remove-liquidity' });\r\n      const receipt = await uniswap.removeLiquidity(\r\n        pool.token0.address,\r\n        pool.token1.address,\r\n        lpTokensToRemove,\r\n        amount0Min,\r\n        amount1Min,\r\n        address\r\n      );\r\n\r\n      console.log('Liquidity removed:', receipt);\r\n      toast.success('Liquidity removed successfully!', { id: 'remove-liquidity' });\r\n\r\n      // Reset form and refresh pool info\r\n      setRemovePercentage('');\r\n      const updatedPool = await uniswap.getPoolInfo(pool.token0.address, pool.token1.address);\r\n      setPool(prev => ({ ...prev, ...updatedPool }));\r\n    } catch (error) {\r\n      console.error('Remove liquidity error:', error);\r\n      toast.error(\r\n        error.message.includes('insufficient')\r\n          ? 'Insufficient balance for transaction'\r\n          : error.message.includes('chain')\r\n          ? 'Please switch to a supported network'\r\n          : `Failed to remove liquidity: ${error.message}`,\r\n        { id: 'remove-liquidity' }\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Pool Selection */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          Select Pool\r\n        </label>\r\n        <button\r\n          onClick={() => setShowPoolModal(true)}\r\n          className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800 hover:border-[#00ffbd] dark:hover:border-[#00ffbd] transition-colors flex items-center justify-between group\"\r\n        >\r\n          {pool ? (\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"flex -space-x-2\">\r\n                <img\r\n                  src={getTokenLogo(pool.token0)}\r\n                  alt={pool.token0.symbol}\r\n                  className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n                />\r\n                <img\r\n                  src={getTokenLogo(pool.token1)}\r\n                  alt={pool.token1.symbol}\r\n                  className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n                />\r\n              </div>\r\n              <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                {pool.token0.symbol}/{pool.token1.symbol}\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <span className=\"text-gray-500\">Select a pool</span>\r\n          )}\r\n          <svg\r\n            className=\"w-5 h-5 text-gray-400 group-hover:text-[#00ffbd] transition-colors\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {pool && (\r\n        <>\r\n          {/* LP Balance Display */}\r\n          <div className=\"p-4 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800\">\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <span className=\"text-sm text-gray-500\">Your Pool Tokens</span>\r\n              <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                {parseFloat(lpBalance).toFixed(6)} LP Tokens\r\n              </span>\r\n            </div>\r\n            <div className=\"flex justify-between items-center\">\r\n              <span className=\"text-sm text-gray-500\">Your Pool Share</span>\r\n              <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                {pool.userShare ? `${pool.userShare.toFixed(2)}%` : '0%'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Remove Percentage Input */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              Amount to Remove\r\n            </label>\r\n            <div className=\"flex gap-2\">\r\n              {[25, 50, 75, 100].map((percentage) => (\r\n                <button\r\n                  key={percentage}\r\n                  onClick={() => setRemovePercentage(percentage.toString())}\r\n                  className={`flex-1 px-3 py-2 rounded-xl text-sm font-medium transition-all\r\n                    ${removePercentage === percentage.toString()\r\n                      ? 'bg-[#00ffbd] text-black'\r\n                      : 'bg-white/5 dark:bg-[#2d2f36] text-gray-700 dark:text-gray-300 hover:bg-[#00ffbd]/10'\r\n                    }\r\n                  `}\r\n                >\r\n                  {percentage}%\r\n                </button>\r\n              ))}\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              value={removePercentage}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                if (value === '' || (parseFloat(value) >= 0 && parseFloat(value) <= 100)) {\r\n                  setRemovePercentage(value);\r\n                }\r\n              }}\r\n              placeholder=\"Enter percentage (0-100)\"\r\n              className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl text-gray-900 dark:text-white placeholder-gray-500\"\r\n            />\r\n          </div>\r\n\r\n          {/* You Will Receive */}\r\n          <div className=\"p-4 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800\">\r\n            <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-4\">You Will Receive</h3>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <img\r\n                    src={getTokenLogo(pool.token0)}\r\n                    alt={pool.token0.symbol}\r\n                    className=\"w-6 h-6 rounded-full\"\r\n                  />\r\n                  <span className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                    {pool.token0.symbol}\r\n                  </span>\r\n                </div>\r\n                <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                  {parseFloat(token0Amount).toFixed(6)}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <img\r\n                    src={getTokenLogo(pool.token1)}\r\n                    alt={pool.token1.symbol}\r\n                    className=\"w-6 h-6 rounded-full\"\r\n                  />\r\n                  <span className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                    {pool.token1.symbol}\r\n                  </span>\r\n                </div>\r\n                <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                  {parseFloat(token1Amount).toFixed(6)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Remove Liquidity Button */}\r\n          <button\r\n            onClick={handleRemoveLiquidity}\r\n            disabled={loading || !removePercentage || parseFloat(removePercentage) <= 0}\r\n            className={`\r\n              w-full px-4 py-3 rounded-xl font-medium text-black\r\n              ${loading || !removePercentage || parseFloat(removePercentage) <= 0\r\n                ? 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed'\r\n                : 'bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors'\r\n              }\r\n            `}\r\n          >\r\n            {loading ? 'Removing Liquidity...' : 'Remove Liquidity'}\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {/* Pool Selection Modal */}\r\n      <PoolSelectionModal\r\n        isOpen={showPoolModal}\r\n        onClose={() => setShowPoolModal(false)}\r\n        onSelect={(selectedPool) => {\r\n          setPool(selectedPool);\r\n          setShowPoolModal(false);\r\n          setRemovePercentage('');\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n} ","import React, { useState } from 'react';\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity';\n\nexport default function ManageLiquidity() {\n  const [activeTab, setActiveTab] = useState('add'); // 'add' or 'remove'\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 bg-white/5 dark:bg-[#1a1b1f] rounded-2xl border border-gray-200 dark:border-gray-800 shadow-xl\">\n      <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">Manage Liquidity</h2>\n      \n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-white/5 dark:bg-[#2d2f36] rounded-xl p-1 mb-6\">\n        <button\n          onClick={() => setActiveTab('add')}\n          className={`flex-1 px-4 py-2 text-sm font-medium rounded-lg transition-all\n            ${activeTab === 'add'\n              ? 'bg-[#00ffbd] text-black shadow-lg shadow-[#00ffbd]/20'\n              : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'\n            }\n          `}\n        >\n          Add Liquidity\n        </button>\n        <button\n          onClick={() => setActiveTab('remove')}\n          className={`flex-1 px-4 py-2 text-sm font-medium rounded-lg transition-all\n            ${activeTab === 'remove'\n              ? 'bg-[#00ffbd] text-black shadow-lg shadow-[#00ffbd]/20'\n              : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'\n            }\n          `}\n        >\n          Remove Liquidity\n        </button>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"mt-4\">\n        {activeTab === 'add' ? (\n          <AddLiquidity />\n        ) : (\n          <RemoveLiquidity />\n        )}\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { Dialog } from '@headlessui/react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useUnichain } from '../../../../hooks/useUnichain';\nimport { useAccount } from 'wagmi';\nimport { ethers } from 'ethers';\nimport { FaSearch } from 'react-icons/fa';\nimport { getTokenLogo, getTokenMetadata } from '../../../../utils/tokens';\nimport { UNISWAP_ADDRESSES } from '../../../../services/unichain/uniswap';\nimport { getTokenDeploymentByAddress } from '../../../../services/firebase';\n\n// Add network constants\nconst SUPPORTED_NETWORKS = {\n  UNICHAIN_TESTNET: {\n    id: 1301,\n    name: 'Unichain Testnet',\n    blockscoutUrl: 'https://unichain-sepolia.blockscout.com'\n  },\n  UNICHAIN_MAINNET: {\n    id: 130,\n    name: 'Unichain Mainnet',\n    blockscoutUrl: 'https://unichain.blockscout.com'\n  },\n  MONAD_TESTNET: {\n    id: 10143,\n    name: 'Monad Testnet',\n    blockscoutUrl: 'https://explorer.monad.network'\n  }\n};\n\n// Common tokens with metadata per network\nconst COMMON_TOKENS = {\n  // Monad testnet tokens (10143)\n  10143: [\n    {\n      symbol: 'MON',\n      name: 'Monad',\n      decimals: 18,\n      logo: '/monad.png',\n      isNative: true\n    },\n    {\n      address: '0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701',\n      symbol: 'WMONAD',\n      name: 'Wrapped Monad',\n      decimals: 18,\n      logo: '/monad.png'\n    },\n    {\n      address: '0xB5a30b0FDc5EA94A52fDc42e3E9760Cb8449Fb37',\n      symbol: 'WETH',\n      name: 'Wrapped Ether',\n      decimals: 18,\n      logo: '/weth.png'\n    },\n    {\n      address: '0xf817257fed379853cDe0fa4F97AB987181B1E5Ea',\n      symbol: 'USDC',\n      name: 'USD Coin',\n      decimals: 6,\n      logo: '/usdc.png'\n    },\n    {\n      address: '0x88b8E2161DEDC77EF4ab7585569D2415a1C1055D',\n      symbol: 'USDT',\n      name: 'Tether USD',\n      decimals: 6,\n      logo: '/usdt.png'\n    }\n  ],\n  // Testnet tokens (1301)\n  1301: [\n    {\n      address: UNISWAP_ADDRESSES[1301].WETH,\n      symbol: 'ETH',\n      name: 'Ethereum',\n      decimals: 18,\n      logo: '/eth.png'\n    },\n    {\n      address: '0x31d0220469e10c4E71834a79b1f276d740d3768F',\n      symbol: 'USDC',\n      name: 'USD Coin',\n      decimals: 6,\n      logo: '/usdc.png'\n    },\n    {\n      address: UNISWAP_ADDRESSES[1301].USDT,\n      symbol: 'USDT',\n      name: 'Test USDT',\n      decimals: 6,\n      logo: '/usdt.png'\n    }\n  ],\n  // Mainnet tokens (130)\n  130: [\n    {\n      address: UNISWAP_ADDRESSES[130].WETH,\n      symbol: 'ETH',\n      name: 'Ethereum',\n      decimals: 18,\n      logo: '/eth.png'\n    },\n    {\n      address: UNISWAP_ADDRESSES[130].USDT,\n      symbol: 'USDT',\n      name: 'USDT',\n      decimals: 6,\n      logo: '/usdt.png'\n    }\n  ]\n};\n\n// Update cache constants\nconst CACHE_KEY = 'uniswap_pools_cache_v1'; // versioned cache key\nconst CACHE_EXPIRY = 30 * 60 * 1000; // 30 minutes in milliseconds\n\n// Helper function to get token metadata based on network\nconst getCommonTokenMetadata = (token, chainId) => {\n  // Check if it's a common token for the current network\n  const commonToken = COMMON_TOKENS[chainId]?.find(t => t.address?.toLowerCase() === token.address?.toLowerCase());\n  if (commonToken) {\n    return {\n      ...token,\n      ...commonToken,\n      logo: commonToken.logo\n    };\n  }\n\n  return token;\n};\n\n// Enhanced token metadata fetcher\nconst getEnhancedTokenMetadata = async (tokenAddress, existingMetadata, chainId) => {\n  try {\n    if (!tokenAddress) {\n      console.warn('Token address is undefined in getEnhancedTokenMetadata');\n      return existingMetadata;\n    }\n\n    // First check if it's a common token for the current network\n    const commonToken = COMMON_TOKENS[chainId]?.find(t => \n      t.address?.toLowerCase() === tokenAddress?.toLowerCase()\n    );\n\n    if (commonToken) {\n      console.log('Found common token:', commonToken);\n      return {\n        ...existingMetadata,\n        ...commonToken,\n        address: tokenAddress,\n        logo: commonToken.logo,\n        verified: true,\n        decimals: commonToken.decimals || existingMetadata?.decimals || 18\n      };\n    }\n\n    // Special handling for WETH/WMONAD\n    const WETH_ADDRESS = UNISWAP_ADDRESSES[chainId]?.WETH?.toLowerCase();\n    if (tokenAddress?.toLowerCase() === WETH_ADDRESS) {\n      return {\n        ...existingMetadata,\n        symbol: chainId === 10143 ? 'MON' : 'ETH',\n        name: chainId === 10143 ? 'Monad' : 'Ethereum',\n        decimals: 18,\n        logo: chainId === 10143 ? '/monad.png' : '/eth.png',\n        verified: true,\n        address: tokenAddress\n      };\n    }\n\n    // Get the correct Blockscout URL based on the chain\n    const blockscoutUrl = chainId === SUPPORTED_NETWORKS.UNICHAIN_TESTNET.id\n      ? SUPPORTED_NETWORKS.UNICHAIN_TESTNET.blockscoutUrl\n      : chainId === SUPPORTED_NETWORKS.UNICHAIN_MAINNET.id\n      ? SUPPORTED_NETWORKS.UNICHAIN_MAINNET.blockscoutUrl\n      : SUPPORTED_NETWORKS.MONAD_TESTNET.blockscoutUrl;\n\n    // Try to get from Firebase first\n    try {\n      const tokenDeployment = await getTokenDeploymentByAddress(tokenAddress);\n      if (tokenDeployment) {\n        const logo = tokenDeployment.logo || getTokenLogo({ \n          ...tokenDeployment,\n          address: tokenAddress \n        }, chainId);\n        \n        return {\n          ...existingMetadata,\n          name: tokenDeployment.name || existingMetadata?.name,\n          symbol: tokenDeployment.symbol || existingMetadata?.symbol,\n          decimals: tokenDeployment.decimals || existingMetadata?.decimals || 18,\n          logo,\n          logoIpfs: tokenDeployment.logoIpfs,\n          address: tokenAddress,\n          verified: true\n        };\n      }\n    } catch (error) {\n      console.log('Firebase fetch failed:', error);\n    }\n\n    // Try to get from Blockscout API\n    try {\n      const response = await fetch(`${blockscoutUrl}/api/v2/tokens/${tokenAddress}`);\n      if (response.ok) {\n        const data = await response.json();\n        return {\n          ...existingMetadata,\n          name: data.name || existingMetadata?.name,\n          symbol: data.symbol || existingMetadata?.symbol,\n          decimals: parseInt(data.decimals) || existingMetadata?.decimals || 18,\n          logo: data.logo || getTokenLogo({ address: tokenAddress }, chainId),\n          address: tokenAddress,\n          verified: true\n        };\n      }\n    } catch (error) {\n      console.log('Blockscout API fetch failed, falling back to existing metadata');\n    }\n\n    // Fall back to existing metadata with default logo\n    return {\n      ...existingMetadata,\n      logo: existingMetadata?.logo || getTokenLogo({ address: tokenAddress }, chainId),\n      address: tokenAddress,\n      verified: false\n    };\n  } catch (error) {\n    console.error('Error in enhanced token metadata:', error);\n    return existingMetadata;\n  }\n};\n\nconst getDisplaySymbol = (token) => {\n  if (!token?.address) return 'Unknown';\n  if (token.address.toLowerCase() === UNISWAP_ADDRESSES.WETH?.toLowerCase()) {\n    return 'ETH';\n  }\n  return token?.symbol || 'Unknown';\n};\n\nconst getDisplayName = (token) => {\n  if (!token?.address) return 'Unknown Token';\n  if (token.address.toLowerCase() === UNISWAP_ADDRESSES.WETH?.toLowerCase()) {\n    return 'Ethereum';\n  }\n  return token?.name || 'Unknown Token';\n};\n\n// Animation variants\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst itemVariants = {\n  hidden: { \n    opacity: 0,\n    y: 20\n  },\n  show: { \n    opacity: 1,\n    y: 0,\n    transition: {\n      type: \"spring\",\n      stiffness: 100,\n      damping: 15\n    }\n  }\n};\n\nconst searchVariants = {\n  hidden: { \n    opacity: 0,\n    y: -20\n  },\n  show: { \n    opacity: 1,\n    y: 0,\n    transition: {\n      type: \"spring\",\n      stiffness: 100,\n      damping: 15\n    }\n  }\n};\n\n// Add skeleton animation variant\nconst skeletonVariants = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst skeletonItemVariants = {\n  hidden: { opacity: 0, x: -10 },\n  show: { \n    opacity: 1, \n    x: 0,\n    transition: {\n      type: \"spring\",\n      stiffness: 100,\n      damping: 15\n    }\n  }\n};\n\n// Update the PoolItem component with animations\nconst PoolItem = ({ pool, onSelect }) => {\n  return (\n    <motion.button\n      variants={itemVariants}\n      whileHover={{ scale: 1.02 }}\n      whileTap={{ scale: 0.98 }}\n      onClick={() => onSelect(pool)}\n      className=\"w-full px-4 py-3 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors flex items-center justify-between group\"\n    >\n      <div className=\"flex items-center gap-3\">\n        <div className=\"flex -space-x-2\">\n          <motion.img\n            initial={{ scale: 0.8, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            src={pool.token0.logo}\n            alt={pool.token0.symbol}\n            className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\n          />\n          <motion.img\n            initial={{ scale: 0.8, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            transition={{ delay: 0.1 }}\n            src={pool.token1.logo}\n            alt={pool.token1.symbol}\n            className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\n          />\n        </div>\n        <div className=\"text-left\">\n          <motion.div \n            initial={{ opacity: 0, x: -10 }}\n            animate={{ opacity: 1, x: 0 }}\n            className=\"font-medium text-gray-900 dark:text-white\"\n          >\n            {pool.token0.symbol}/{pool.token1.symbol}\n          </motion.div>\n          <motion.div \n            initial={{ opacity: 0, x: -10 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.1 }}\n            className=\"text-sm text-gray-500 dark:text-gray-400\"\n          >\n            {pool.token0.name}/{pool.token1.name}\n          </motion.div>\n        </div>\n      </div>\n      <div className=\"flex items-center gap-2\">\n        {pool.tvl && (\n          <motion.span \n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.2 }}\n            className=\"text-sm text-gray-500 dark:text-gray-400\"\n          >\n            TVL: ${Number(pool.tvl).toLocaleString()}\n          </motion.span>\n        )}\n        <motion.svg\n          whileHover={{ x: 5 }}\n          className=\"w-5 h-5 text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white transition-colors\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n        </motion.svg>\n      </div>\n    </motion.button>\n  );\n};\n\n// Add SkeletonPoolItem component\nconst SkeletonPoolItem = () => {\n  return (\n    <motion.div\n      variants={skeletonItemVariants}\n      className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] rounded-xl flex items-center justify-between\"\n    >\n      <div className=\"flex items-center gap-3\">\n        <div className=\"flex -space-x-2\">\n          <div className=\"w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-700 animate-pulse\" />\n          <div className=\"w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-700 animate-pulse\" />\n        </div>\n        <div className=\"space-y-2\">\n          <div className=\"w-24 h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n          <div className=\"w-32 h-3 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n        </div>\n      </div>\n      <div className=\"w-20 h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n    </motion.div>\n  );\n};\n\n// Process pool data function\nconst processPoolData = async (pool) => {\n  try {\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    const chainId = await provider.getNetwork().then(n => Number(n.chainId));\n\n    if (chainId === SUPPORTED_NETWORKS.MONAD_TESTNET.id) {\n      // For Monad testnet, handle pool address directly\n      const pairAddress = typeof pool === 'string' ? pool : pool.address;\n      \n      if (!ethers.isAddress(pairAddress)) {\n        console.warn('Invalid pool address:', pairAddress);\n        return null;\n      }\n\n      const pairInterface = new ethers.Interface([\n        'function token0() external view returns (address)',\n        'function token1() external view returns (address)',\n        'function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast)'\n      ]);\n\n      try {\n        // Get token addresses and reserves\n        const [token0Data, token1Data, reservesData] = await Promise.all([\n          provider.call({\n            to: pairAddress,\n            data: pairInterface.encodeFunctionData('token0')\n          }),\n          provider.call({\n            to: pairAddress,\n            data: pairInterface.encodeFunctionData('token1')\n          }),\n          provider.call({\n            to: pairAddress,\n            data: pairInterface.encodeFunctionData('getReserves')\n          })\n        ]);\n\n        const token0Address = ethers.getAddress('0x' + token0Data.slice(26));\n        const token1Address = ethers.getAddress('0x' + token1Data.slice(26));\n        const [reserve0, reserve1] = pairInterface.decodeFunctionResult('getReserves', reservesData);\n\n        // Get token metadata\n        const [token0Metadata, token1Metadata] = await Promise.all([\n          getEnhancedTokenMetadata(token0Address, null, chainId),\n          getEnhancedTokenMetadata(token1Address, null, chainId)\n        ]);\n\n        // Special handling for WMONAD\n        const WMONAD_ADDRESS = UNISWAP_ADDRESSES[chainId]?.WETH?.toLowerCase();\n        const isToken0WMONAD = token0Address.toLowerCase() === WMONAD_ADDRESS;\n        const isToken1WMONAD = token1Address.toLowerCase() === WMONAD_ADDRESS;\n\n        const displayToken0 = isToken0WMONAD\n          ? {\n              ...token0Metadata,\n              symbol: 'MON',\n              name: 'Monad',\n              logo: '/monad.png',\n              isWETH: true,\n              originalSymbol: 'WMONAD'\n            }\n          : token0Metadata;\n\n        const displayToken1 = isToken1WMONAD\n          ? {\n              ...token1Metadata,\n              symbol: 'MON',\n              name: 'Monad',\n              logo: '/monad.png',\n              isWETH: true,\n              originalSymbol: 'WMONAD'\n            }\n          : token1Metadata;\n\n        return {\n          token0: {\n            ...displayToken0,\n            address: token0Address,\n            isWETH: isToken0WMONAD\n          },\n          token1: {\n            ...displayToken1,\n            address: token1Address,\n            isWETH: isToken1WMONAD\n          },\n          pairAddress,\n          chainId,\n          reserves: {\n            reserve0: reserve0.toString(),\n            reserve1: reserve1.toString(),\n            reserve0Formatted: ethers.formatUnits(reserve0, displayToken0?.decimals || 18),\n            reserve1Formatted: ethers.formatUnits(reserve1, displayToken1?.decimals || 18)\n          }\n        };\n      } catch (error) {\n        console.error('Error fetching pair data:', error);\n        return null;\n      }\n    }\n\n    // Original logic for Unichain networks\n    const [token0Metadata, token1Metadata] = await Promise.all([\n      getEnhancedTokenMetadata(pool.token0.address, pool.token0, pool.chainId),\n      getEnhancedTokenMetadata(pool.token1.address, pool.token1, pool.chainId)\n    ]);\n\n    // Special handling for USDT\n    const USDT_ADDRESS = UNISWAP_ADDRESSES[pool.chainId]?.USDT;\n    const isToken0USDT = token0Metadata?.address?.toLowerCase() === USDT_ADDRESS?.toLowerCase();\n    const isToken1USDT = token1Metadata?.address?.toLowerCase() === USDT_ADDRESS?.toLowerCase();\n\n    // Convert WETH to ETH consistently\n    const WETH_ADDRESS = UNISWAP_ADDRESSES[pool.chainId]?.WETH;\n    const isToken0WETH = token0Metadata?.address?.toLowerCase() === WETH_ADDRESS?.toLowerCase();\n    const isToken1WETH = token1Metadata?.address?.toLowerCase() === WETH_ADDRESS?.toLowerCase();\n\n    const displayToken0 = isToken0WETH\n      ? {\n          ...token0Metadata,\n          symbol: 'ETH',\n          name: 'Ethereum',\n          logo: '/eth.png',\n          isWETH: true,\n          originalSymbol: 'WETH'\n        }\n      : isToken0USDT\n      ? {\n          ...token0Metadata,\n          logo: '/usdt.png'\n        }\n      : {\n          ...token0Metadata,\n          logo: token0Metadata?.logo || getTokenLogo(token0Metadata)\n        };\n\n    const displayToken1 = isToken1WETH\n      ? {\n          ...token1Metadata,\n          symbol: 'ETH',\n          name: 'Ethereum',\n          logo: '/eth.png',\n          isWETH: true,\n          originalSymbol: 'WETH'\n        }\n      : isToken1USDT\n      ? {\n          ...token1Metadata,\n          logo: '/usdt.png'\n        }\n      : {\n          ...token1Metadata,\n          logo: token1Metadata?.logo || getTokenLogo(token1Metadata)\n        };\n\n    return {\n      token0: {\n        ...displayToken0,\n        address: pool.token0.address,\n        isWETH: isToken0WETH\n      },\n      token1: {\n        ...displayToken1,\n        address: pool.token1.address,\n        isWETH: isToken1WETH\n      },\n      pairAddress: pool.address,\n      chainId: pool.chainId,\n      reserves: {\n        ...pool.reserves,\n        reserve0Formatted: ethers.formatUnits(pool.reserves?.reserve0 || '0', displayToken0?.decimals || 18),\n        reserve1Formatted: ethers.formatUnits(pool.reserves?.reserve1 || '0', displayToken1?.decimals || 18)\n      }\n    };\n  } catch (err) {\n    console.error(`Error processing pool data:`, err);\n    return null;\n  }\n};\n\nexport default function PoolSelectionModal({ isOpen, onClose, onSelect }) {\n  const uniswap = useUnichain();\n  const { address } = useAccount();\n  const [pools, setPools] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentChainId, setCurrentChainId] = useState(null);\n  const [loadedCount, setLoadedCount] = useState(0);\n  const [totalPairs, setTotalPairs] = useState(0);\n\n  // Add window focus handling\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        const cachedData = getPoolsFromCache(currentChainId);\n        if (cachedData) {\n          setPools(cachedData.pools);\n          setTotalPairs(cachedData.totalPairs);\n          setLoadedCount(cachedData.pools.length);\n        }\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    window.addEventListener('focus', handleVisibilityChange);\n\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('focus', handleVisibilityChange);\n    };\n  }, [currentChainId]);\n\n  // Enhance cache management functions\n  const savePoolsToCache = (pools, chainId) => {\n    try {\n      if (!pools || !chainId) return;\n      \n      const cacheData = {\n        pools,\n        chainId,\n        timestamp: Date.now(),\n        totalPairs: totalPairs,\n        version: '1.0' // Add version for future cache invalidation\n      };\n\n      // Use both localStorage and sessionStorage for redundancy\n      localStorage.setItem(CACHE_KEY, JSON.stringify(cacheData));\n      sessionStorage.setItem(CACHE_KEY, JSON.stringify(cacheData));\n      \n      console.log('Saved pools to cache:', pools.length);\n    } catch (error) {\n      console.warn('Failed to save pools to cache:', error);\n    }\n  };\n\n  const getPoolsFromCache = (chainId) => {\n    try {\n      if (!chainId) return null;\n\n      // Try localStorage first, then sessionStorage as fallback\n      const localData = localStorage.getItem(CACHE_KEY);\n      const sessionData = sessionStorage.getItem(CACHE_KEY);\n      const cacheData = JSON.parse(localData || sessionData);\n\n      if (!cacheData) return null;\n\n      const isValid = \n        cacheData.version === '1.0' &&\n        cacheData.chainId === chainId &&\n        cacheData.timestamp > Date.now() - CACHE_EXPIRY &&\n        Array.isArray(cacheData.pools) &&\n        cacheData.pools.length > 0;\n\n      if (!isValid) {\n        localStorage.removeItem(CACHE_KEY);\n        sessionStorage.removeItem(CACHE_KEY);\n        return null;\n      }\n\n      // Refresh cache timestamp to extend expiry\n      if (cacheData.pools.length > 0) {\n        savePoolsToCache(cacheData.pools, chainId);\n      }\n\n      console.log('Retrieved pools from cache:', cacheData.pools.length);\n      return {\n        pools: cacheData.pools,\n        totalPairs: cacheData.totalPairs\n      };\n    } catch (error) {\n      console.warn('Failed to get pools from cache:', error);\n      localStorage.removeItem(CACHE_KEY);\n      sessionStorage.removeItem(CACHE_KEY);\n      return null;\n    }\n  };\n\n  // Get current chain ID\n  useEffect(() => {\n    const getChainId = async () => {\n      if (!window.ethereum) return;\n      try {\n        const hexChainId = await window.ethereum.request({ method: 'eth_chainId' });\n        setCurrentChainId(parseInt(hexChainId, 16));\n      } catch (error) {\n        console.error('Error getting chain ID:', error);\n      }\n    };\n    getChainId();\n\n    // Listen for chain changes\n    if (window.ethereum) {\n      window.ethereum.on('chainChanged', (chainId) => {\n        setCurrentChainId(parseInt(chainId, 16));\n      });\n    }\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('chainChanged', () => {});\n      }\n    };\n  }, []);\n\n  // Update the loadPools function to be more resilient\n  useEffect(() => {\n    const loadPools = async () => {\n      if (!isOpen || !window.ethereum) return;\n      \n      setLoading(true);\n      setError('');\n      \n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const chainId = await provider.getNetwork().then(n => Number(n.chainId));\n        \n        // Try to get pools from cache first\n        const cachedData = getPoolsFromCache(chainId);\n        if (cachedData) {\n          setPools(cachedData.pools);\n          setTotalPairs(cachedData.totalPairs);\n          setLoadedCount(cachedData.pools.length);\n          setLoading(false);\n          \n          // Refresh pools in background if cache is older than 5 minutes\n          const cacheAge = Date.now() - JSON.parse(localStorage.getItem(CACHE_KEY) || '{}').timestamp;\n          if (cacheAge > 5 * 60 * 1000) {\n            loadPoolsFromChain(chainId, provider);\n          }\n          return;\n        }\n\n        await loadPoolsFromChain(chainId, provider);\n        \n      } catch (error) {\n        console.error('Error loading pools:', error);\n        setError(error.message || 'Failed to load pools. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadPools();\n  }, [isOpen]);\n\n  // Add new function to load pools from chain\n  const loadPoolsFromChain = async (chainId, provider) => {\n    setPools([]);\n    setLoadedCount(0);\n    \n    const factoryAddress = UNISWAP_ADDRESSES[chainId]?.factory;\n    if (!factoryAddress) {\n      throw new Error('Factory address not found for current network');\n    }\n\n    // Create factory contract\n    const factoryContract = new ethers.Contract(\n      factoryAddress,\n      ['function allPairsLength() view returns (uint)', 'function allPairs(uint) view returns (address)'],\n      provider\n    );\n\n    // Get total pairs\n    const totalPairs = await factoryContract.allPairsLength();\n    setTotalPairs(Number(totalPairs));\n    console.log('Total pairs:', totalPairs.toString());\n\n    // Get all pairs\n    const startIndex = 0n;\n    const endIndex = totalPairs;\n    const indices = Array.from({ length: Number(endIndex - startIndex) }, (_, i) => startIndex + BigInt(i));\n\n    // Batch in groups of 5 for better RPC reliability\n    const batchSize = 5;\n    const batches = [];\n    for (let i = 0; i < indices.length; i += batchSize) {\n      batches.push(indices.slice(i, i + batchSize));\n    }\n\n    // Process batches sequentially\n    const pairInterface = new ethers.Interface([\n      'function token0() view returns (address)',\n      'function token1() view returns (address)',\n      'function getReserves() view returns (uint112, uint112, uint32)'\n    ]);\n\n    const tokenInterface = new ethers.Interface([\n      'function symbol() view returns (string)',\n      'function name() view returns (string)',\n      'function decimals() view returns (uint8)'\n    ]);\n\n    const processedPools = [];\n    \n    for (const batch of batches) {\n      try {\n        // Get pair addresses for this batch\n        const pairAddresses = await Promise.all(\n          batch.map(index => factoryContract.allPairs(index))\n        );\n\n        // Process each pair in the batch\n        for (const pairAddress of pairAddresses) {\n          try {\n            // Get token addresses and reserves\n            const [token0Data, token1Data, reservesData] = await Promise.all([\n              provider.call({\n                to: pairAddress,\n                data: pairInterface.encodeFunctionData('token0')\n              }),\n              provider.call({\n                to: pairAddress,\n                data: pairInterface.encodeFunctionData('token1')\n              }),\n              provider.call({\n                to: pairAddress,\n                data: pairInterface.encodeFunctionData('getReserves')\n              })\n            ]);\n\n            const token0Address = ethers.getAddress('0x' + token0Data.slice(26));\n            const token1Address = ethers.getAddress('0x' + token1Data.slice(26));\n            const [reserve0, reserve1] = pairInterface.decodeFunctionResult('getReserves', reservesData);\n\n            // Check for WMONAD/WETH\n            const WETH_ADDRESS = UNISWAP_ADDRESSES[chainId]?.WETH?.toLowerCase();\n            const isToken0WETH = token0Address.toLowerCase() === WETH_ADDRESS;\n            const isToken1WETH = token1Address.toLowerCase() === WETH_ADDRESS;\n\n            // Get token metadata immediately\n            const [token0Symbol, token1Symbol, token0Name, token1Name] = await Promise.all([\n              isToken0WETH ? Promise.resolve('MON') : provider.call({\n                to: token0Address,\n                data: tokenInterface.encodeFunctionData('symbol')\n              }).then(data => tokenInterface.decodeFunctionResult('symbol', data)[0]).catch(() => 'Unknown'),\n              isToken1WETH ? Promise.resolve('MON') : provider.call({\n                to: token1Address,\n                data: tokenInterface.encodeFunctionData('symbol')\n              }).then(data => tokenInterface.decodeFunctionResult('symbol', data)[0]).catch(() => 'Unknown'),\n              isToken0WETH ? Promise.resolve('Monad') : provider.call({\n                to: token0Address,\n                data: tokenInterface.encodeFunctionData('name')\n              }).then(data => tokenInterface.decodeFunctionResult('name', data)[0]).catch(() => 'Unknown Token'),\n              isToken1WETH ? Promise.resolve('Monad') : provider.call({\n                to: token1Address,\n                data: tokenInterface.encodeFunctionData('name')\n              }).then(data => tokenInterface.decodeFunctionResult('name', data)[0]).catch(() => 'Unknown Token')\n            ]);\n\n            // Create pool with complete information\n            const commonToken0 = COMMON_TOKENS[chainId]?.find(t => t.address?.toLowerCase() === token0Address?.toLowerCase());\n            const commonToken1 = COMMON_TOKENS[chainId]?.find(t => t.address?.toLowerCase() === token1Address?.toLowerCase());\n\n            const pool = {\n              token0: {\n                address: token0Address,\n                symbol: token0Symbol,\n                name: token0Name,\n                decimals: commonToken0?.decimals || 18,\n                logo: commonToken0?.logo || (isToken0WETH ? '/monad.png' : '/token-default.png'),\n                isWETH: isToken0WETH\n              },\n              token1: {\n                address: token1Address,\n                symbol: token1Symbol,\n                name: token1Name,\n                decimals: commonToken1?.decimals || 18,\n                logo: commonToken1?.logo || (isToken1WETH ? '/monad.png' : '/token-default.png'),\n                isWETH: isToken1WETH\n              },\n              pairAddress,\n              chainId,\n              reserves: {\n                reserve0: reserve0.toString(),\n                reserve1: reserve1.toString(),\n                reserve0Formatted: ethers.formatUnits(reserve0, commonToken0?.decimals || 18),\n                reserve1Formatted: ethers.formatUnits(reserve1, commonToken1?.decimals || 18)\n              }\n            };\n\n            // Add to processed pools and update UI\n            processedPools.push(pool);\n            setPools([...processedPools]);\n            setLoadedCount(processedPools.length);\n\n          } catch (error) {\n            console.warn(`Error processing pair ${pairAddress}:`, error);\n            continue;\n          }\n        }\n      } catch (error) {\n        console.warn('Error processing batch:', error);\n        continue;\n      }\n    }\n\n    if (processedPools.length === 0) {\n      setError('No valid pools found. Please try again.');\n    }\n    \n    // Save to cache if we have valid pools\n    if (processedPools.length > 0) {\n      savePoolsToCache(processedPools, chainId);\n    }\n  };\n\n  // Handle search with debounce\n  useEffect(() => {\n    const searchPools = async () => {\n      if (!searchTerm) {\n        setSearchResults([]);\n        return;\n      }\n\n      // If searching for an exact address\n      if (searchTerm.length >= 42 && ethers.isAddress(searchTerm)) {\n        try {\n          setLoading(true);\n          // Try to get pool info directly\n          const poolInfo = await uniswap.getPoolInfoByAddress(searchTerm);\n          if (poolInfo) {\n            // Try to get token metadata from Firebase for both tokens\n            const [token0Deployment, token1Deployment] = await Promise.all([\n              getTokenDeploymentByAddress(poolInfo.token0.address).catch(() => null),\n              getTokenDeploymentByAddress(poolInfo.token1.address).catch(() => null)\n            ]);\n\n            // Enhance token0 metadata if found in Firebase\n            if (token0Deployment) {\n              poolInfo.token0 = {\n                ...poolInfo.token0,\n                name: token0Deployment.name,\n                symbol: token0Deployment.symbol,\n                decimals: token0Deployment.decimals || 18,\n                logo: token0Deployment.logo,\n                logoIpfs: token0Deployment.logoIpfs\n              };\n            }\n\n            // Enhance token1 metadata if found in Firebase\n            if (token1Deployment) {\n              poolInfo.token1 = {\n                ...poolInfo.token1,\n                name: token1Deployment.name,\n                symbol: token1Deployment.symbol,\n                decimals: token1Deployment.decimals || 18,\n                logo: token1Deployment.logo,\n                logoIpfs: token1Deployment.logoIpfs\n              };\n            }\n\n            const processedPool = await processPoolData({\n              ...poolInfo,\n              address: searchTerm\n            });\n            \n            if (processedPool) {\n              console.log('Found pool by address:', processedPool);\n              setSearchResults([processedPool]);\n              setLoading(false);\n              return;\n            }\n          }\n        } catch (err) {\n          console.error('Error fetching specific pool:', err);\n        } finally {\n          setLoading(false);\n        }\n      }\n\n      // Filter existing pools\n      const filtered = pools.filter(pool => {\n        if (!pool?.token0?.symbol || !pool?.token1?.symbol || !pool?.pairAddress) return false;\n        const searchLower = searchTerm.toLowerCase();\n        return (\n          pool.token0.symbol.toLowerCase().includes(searchLower) ||\n          pool.token1.symbol.toLowerCase().includes(searchLower) ||\n          pool.pairAddress.toLowerCase().includes(searchLower)\n        );\n      });\n\n      setSearchResults(filtered);\n    };\n\n    const timeoutId = setTimeout(searchPools, 300);\n    return () => clearTimeout(timeoutId);\n  }, [searchTerm, pools, uniswap]);\n\n  // Use search results if available, otherwise use all pools\n  const displayPools = searchTerm ? searchResults : pools;\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      className=\"relative z-50\"\n    >\n      <div className=\"fixed inset-0 bg-black/30 backdrop-blur-sm\" aria-hidden=\"true\" />\n\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"mx-auto max-w-2xl w-full bg-white dark:bg-[#1a1b1f] rounded-2xl shadow-xl\">\n          <motion.div\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"show\"\n            className=\"p-6\"\n          >\n            <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white mb-4 flex items-center justify-between\">\n              <span>Select a Pool</span>\n              {loadedCount > 0 && totalPairs > 0 && (\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  Loaded {loadedCount}/{totalPairs}\n                </span>\n              )}\n            </Dialog.Title>\n\n            {/* Network Status */}\n            {currentChainId && (\n              <motion.div\n                initial={{ opacity: 0, y: -20 }}\n                animate={{ opacity: 1, y: 0 }}\n                className=\"mb-4\"\n              >\n                {Object.values(SUPPORTED_NETWORKS).map(network => (\n                  currentChainId === network.id ? (\n                    <div key={network.id} className=\"px-4 py-2 rounded-xl bg-[#00ffbd]/10 border border-[#00ffbd]/20 text-[#00ffbd] text-sm inline-flex items-center gap-2\">\n                      <div className=\"w-2 h-2 rounded-full bg-[#00ffbd] animate-pulse\" />\n                      {network.name}\n                    </div>\n                  ) : null\n                ))}\n                {!Object.values(SUPPORTED_NETWORKS).some(network => network.id === currentChainId) && (\n                  <div className=\"px-4 py-2 rounded-xl bg-red-500/10 border border-red-500/20 text-red-500 text-sm\">\n                    Please switch to a supported network (Unichain or Monad Testnet)\n                  </div>\n                )}\n              </motion.div>\n            )}\n\n            {/* Error Message */}\n            {error && (\n              <motion.div\n                initial={{ opacity: 0, y: -20 }}\n                animate={{ opacity: 1, y: 0 }}\n                className=\"mb-4 p-4 rounded-xl bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-900/30 text-red-700 dark:text-red-400\"\n              >\n                {error}\n              </motion.div>\n            )}\n\n            <motion.div \n              variants={searchVariants}\n              className=\"relative mb-4\"\n            >\n              <input\n                type=\"text\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                placeholder=\"Search by token name or address...\"\n                className=\"w-full px-4 py-3 pl-10 bg-white/10 dark:bg-[#1a1b1f] rounded-xl border border-gray-200 dark:border-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-[#00ffbd]/50 focus:border-[#00ffbd] outline-none transition-colors font-mono\"\n                style={{\n                  WebkitAppearance: 'none',\n                  MozAppearance: 'none'\n                }}\n              />\n              <FaSearch className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 dark:text-gray-500 pointer-events-none\" />\n            </motion.div>\n\n            <div \n              className=\"max-h-[60vh] overflow-y-auto overflow-x-hidden pr-2 custom-scrollbar\"\n              style={{\n                scrollbarWidth: 'thin',\n                scrollbarColor: '#00ffbd #2d2f36',\n              }}\n            >\n              <style>\n                {`\n                  .custom-scrollbar::-webkit-scrollbar {\n                    width: 6px;\n                  }\n                  .custom-scrollbar::-webkit-scrollbar-track {\n                    background: #2d2f36;\n                    border-radius: 3px;\n                  }\n                  .custom-scrollbar::-webkit-scrollbar-thumb {\n                    background-color: #00ffbd;\n                    border-radius: 3px;\n                  }\n                `}\n              </style>\n              <AnimatePresence mode=\"wait\">\n                {loading && pools.length === 0 ? (\n                  <motion.div\n                    variants={skeletonVariants}\n                    initial=\"hidden\"\n                    animate=\"show\"\n                    className=\"space-y-2\"\n                  >\n                    {[...Array(5)].map((_, index) => (\n                      <SkeletonPoolItem key={index} />\n                    ))}\n                  </motion.div>\n                ) : error && pools.length === 0 ? (\n                  <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -20 }}\n                    className=\"text-center py-12 text-red-500\"\n                  >\n                    {error}\n                  </motion.div>\n                ) : displayPools.length === 0 ? (\n                  <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -20 }}\n                    className=\"text-center py-12 text-gray-500 dark:text-gray-400\"\n                  >\n                    {loading ? 'Loading pools...' : 'No pools found'}\n                  </motion.div>\n                ) : (\n                  <motion.div\n                    variants={containerVariants}\n                    initial=\"hidden\"\n                    animate=\"show\"\n                    className=\"space-y-2\"\n                  >\n                    {displayPools.map((pool, index) => (\n                      <PoolItem \n                        key={`${pool.pairAddress}-${index}`}\n                        pool={pool} \n                        onSelect={onSelect}\n                      />\n                    ))}\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </div>\n\n            {/* Loading progress */}\n            {loading && (\n              <div className=\"mt-4 space-y-2\">\n                <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1.5\">\n                  <div \n                    className=\"bg-[#00ffbd] h-1.5 rounded-full transition-all duration-300\"\n                    style={{ width: `${(loadedCount / (totalPairs || 1)) * 100}%` }}\n                  />\n                </div>\n                <div className=\"text-center text-sm text-gray-500 dark:text-gray-400\">\n                  Loading pools... {Math.floor((loadedCount / (totalPairs || 1)) * 100)}%\n                </div>\n              </div>\n            )}\n          </motion.div>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { toast } from 'react-hot-toast';\nimport TokenSelectionModal from '../shared/TokenSelectionModal';\nimport PoolSelectionModal from '../shared/PoolSelectionModal';\nimport { ethers } from 'ethers';\nimport { useUnichain } from '../../../../hooks/useUnichain';\nimport { UNISWAP_ADDRESSES } from '../../../../services/unichain/uniswap';\nimport { ipfsToHttp } from '../../../../utils/ipfs';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Fragment } from 'react';\nimport Confetti from 'react-confetti';\nimport { useNavigate } from 'react-router-dom';\n\n// Common tokens with metadata\nconst getCommonTokens = (chainId) => {\n  switch (chainId) {\n    case 10143: // Monad testnet\n  return [\n    {\n          symbol: 'MON',\n          name: 'Monad',\n      decimals: 18,\n          logo: '/monad.png',\n          isNative: true\n        },\n        {\n          address: '0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701',\n          symbol: 'WMONAD',\n          name: 'Wrapped Monad',\n      decimals: 18,\n          logo: '/monad.png'\n        },\n        {\n          address: '0xB5a30b0FDc5EA94A52fDc42e3E9760Cb8449Fb37',\n          symbol: 'WETH',\n          name: 'Wrapped Ether',\n          decimals: 18,\n          logo: '/eth.png'\n        }\n      ];\n    case 1301: // Unichain testnet\n      return [\n        // ... existing Unichain testnet tokens ...\n      ];\n    case 130: // Unichain mainnet\n      return [\n        // ... existing Unichain mainnet tokens ...\n      ];\n    default:\n      return [];\n  }\n};\n\n// Update getTokenLogo to use the function\nconst getTokenLogo = (token, chainId) => {\n  if (!token) return '/token-default.png';\n  \n  // Check if it's a common token\n  const commonTokens = getCommonTokens(chainId);\n  if (!commonTokens) return '/token-default.png';\n  \n  const commonToken = commonTokens.find(t => \n    t.address?.toLowerCase() === token?.address?.toLowerCase() ||\n    (chainId && UNISWAP_ADDRESSES[chainId]?.WETH?.toLowerCase() === token?.address?.toLowerCase())\n  );\n  \n  if (commonToken) {\n    return commonToken.logo;\n  }\n\n  // Check for IPFS or direct logo from token data\n  if (token?.logo || token?.logoIpfs) {\n    return token.logo || ipfsToHttp(token.logoIpfs);\n  }\n\n  // Default token logo\n  return '/token-default.png';\n};\n\n// Update TokenBalance component to handle MON correctly\nconst TokenBalance = ({ token, chainId }) => {\n  const { address: userAddress } = useAccount();\n  const [balance, setBalance] = useState('0');\n  const [isLoading, setIsLoading] = useState(false);\n  const uniswap = useUnichain();\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      if (!userAddress || !token) return;\n      \n      try {\n        setIsLoading(true);\n        if (chainId === 10143) {\n          // Handle Monad testnet\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          if (token.isNative || token.isWETH) {\n            // For native MON token\n            const balance = await provider.getBalance(userAddress);\n            setBalance(ethers.formatEther(balance));\n          } else {\n            // For other tokens\n          const tokenContract = new ethers.Contract(\n            token.address,\n            ['function balanceOf(address) view returns (uint256)'],\n              provider\n            );\n            const balance = await tokenContract.balanceOf(userAddress);\n            setBalance(ethers.formatUnits(balance, token.decimals));\n          }\n        } else {\n          // Original logic for Unichain networks\n          const balance = await uniswap.getTokenBalance(\n            token.symbol === 'ETH' ? 'ETH' : token.address,\n            userAddress\n          );\n          setBalance(balance);\n        }\n      } catch (error) {\n        console.error('Error fetching balance:', error);\n        setBalance('0');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchBalance();\n  }, [token, userAddress, uniswap, chainId]);\n\n  if (!token || !userAddress || !chainId) return null;\n\n  // Get display symbol (convert WETH to MON on Monad testnet)\n  const displaySymbol = chainId === 10143 && (token.isWETH || token.isNative) ? 'MON' : token.symbol;\n\n  return (\n    <div className=\"flex justify-between items-center text-sm\">\n      <span className=\"text-gray-500 dark:text-gray-400\">Balance:</span>\n      {isLoading ? (\n        <div className=\"animate-pulse bg-gray-200 dark:bg-gray-700 h-4 w-20 rounded\"></div>\n      ) : (\n        <span className=\"text-gray-900 dark:text-white font-medium\">\n          {Number(balance).toLocaleString()} {displaySymbol}\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Router ABI for the functions we need\nconst ROUTER_ABI = [\n  'function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity)',\n  'function addLiquidityETH(address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity)',\n  'function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB)',\n  'function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external view returns (uint amountOut)'\n];\n\n// Add PAIR_ABI at the top with other ABIs\nconst PAIR_ABI = [\n  'function getReserves() view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast)',\n  'function token0() view returns (address)',\n  'function token1() view returns (address)'\n];\n\nconst FACTORY_ABI = [\n  'function getPair(address tokenA, address tokenB) view returns (address)'\n];\n\n// Icons for progress modal\nconst Icons = {\n  Preparing: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ animation: 'rotate 2s linear infinite' }}>\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M12 6v2m0 8v2M6 12h2m8 0h2\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite' }} />\n        <path d=\"M7.75 7.75l1.5 1.5m5.5 5.5l1.5 1.5m0-8.5l-1.5 1.5m-5.5 5.5l-1.5 1.5\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite', animationDelay: '0.2s' }} />\n      </g>\n    </svg>\n  ),\n  Error: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\" style={{ animation: 'shake 0.5s ease-in-out' }}>\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"text-red-500\" />\n        <path d=\"M12 8v5\" strokeLinecap=\"round\" className=\"text-red-500\" />\n        <path d=\"M12 16v.01\" strokeLinecap=\"round\" className=\"text-red-500\" />\n      </g>\n    </svg>\n  ),\n  Approval: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M8 12l3 3 5-5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.6s_ease-in-out]\" />\n      </g>\n    </svg>\n  ),\n  Adding: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M12 8v8m-4-4h8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" style={{ animation: 'draw 2s ease-in-out infinite' }} />\n        <circle cx=\"12\" cy=\"12\" r=\"3\" style={{ animation: 'rotate 4s linear infinite', opacity: 0.2 }} />\n      </g>\n    </svg>\n  ),\n  Confirming: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n        <path strokeLinecap=\"round\" className=\"origin-center animate-[spin_2s_linear_infinite]\"\n          d=\"M12 6v6l4 4\" />\n      </g>\n    </svg>\n  ),\n  Completed: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"animate-[fadeIn_0.5s_ease-in-out]\" />\n        <path d=\"M8 12l3 3 5-5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.5s_ease-in-out_forwards]\" style={{ strokeDasharray: 20, strokeDashoffset: 20 }} />\n      </g>\n    </svg>\n  )\n};\n\n// Update ProgressModal to accept chainId prop\nconst ProgressModal = ({ isOpen, onClose, currentStep, pool, error, chainId }) => {\n  const steps = [\n    { id: 'preparing', title: 'Preparing', icon: <Icons.Preparing /> },\n    { id: 'approval', title: 'Token Approval', icon: <Icons.Approval /> },\n    { id: 'adding', title: 'Adding Liquidity', icon: <Icons.Adding /> },\n    { id: 'confirming', title: 'Confirming', icon: <Icons.Confirming /> },\n    { id: 'completed', title: 'Completed', icon: <Icons.Completed /> }\n  ];\n\n  const isError = Boolean(error);\n\n  const formatErrorMessage = (error) => {\n    if (!error) return '';\n    if (typeof error === 'string') return error;\n    return error.message || 'An unknown error occurred';\n  };\n\n  const getTokenPairDisplay = () => {\n    if (!pool) return '';\n\n    // Convert WETH to ETH for display\n    const displayToken0 = {\n      ...pool.token0,\n      symbol: chainId && pool.token0.address?.toLowerCase() === UNISWAP_ADDRESSES[chainId]?.WETH?.toLowerCase() ? 'ETH' : pool.token0.symbol,\n      name: chainId && pool.token0.address?.toLowerCase() === UNISWAP_ADDRESSES[chainId]?.WETH?.toLowerCase() ? 'Ethereum' : pool.token0.name\n    };\n\n    const displayToken1 = {\n      ...pool.token1,\n      symbol: chainId && pool.token1.address?.toLowerCase() === UNISWAP_ADDRESSES[chainId]?.WETH?.toLowerCase() ? 'ETH' : pool.token1.symbol,\n      name: chainId && pool.token1.address?.toLowerCase() === UNISWAP_ADDRESSES[chainId]?.WETH?.toLowerCase() ? 'Ethereum' : pool.token1.name\n    };\n\n    return (\n      <div className=\"flex items-center gap-2\">\n        <div className=\"flex -space-x-2\">\n          <img\n            src={getTokenLogo(displayToken0, chainId)}\n            alt={displayToken0.symbol}\n            className=\"w-6 h-6 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\n          />\n          <img\n            src={getTokenLogo(displayToken1, chainId)}\n            alt={displayToken1.symbol}\n            className=\"w-6 h-6 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\n          />\n        </div>\n        <span>\n          {displayToken0.symbol} {displayToken1.symbol}\n        </span>\n      </div>\n    );\n  };\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\n                >\n                  {isError ? 'Error Adding Liquidity' : 'Adding Liquidity'}\n                  {!isError && pool && (\n                    <div className=\"mt-2 text-base font-normal text-gray-500 dark:text-gray-400\">\n                      {getTokenPairDisplay()}\n                    </div>\n                  )}\n                </Dialog.Title>\n\n                <div className=\"space-y-4\">\n                  {steps.map((step, index) => {\n                    const isActive = currentStep === step.id;\n                    const isCompleted = !isError && steps.findIndex(s => s.id === currentStep) > index;\n                    const isErrorStep = isError && currentStep === step.id;\n                    \n                    return (\n                      <div\n                        key={step.id}\n                        className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\n                          isActive && !isErrorStep ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : \n                          isCompleted ? 'text-[#00ffbd]' : \n                          isErrorStep ? 'bg-red-500/10 text-red-500' : \n                          'text-gray-400'\n                        }`}\n                      >\n                        {step.icon}\n                        <div className=\"flex-1\">\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{step.title}</span>\n                          {isActive && !isError && (\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                              {step.id === 'preparing' && 'Preparing transaction...'}\n                              {step.id === 'approval' && `Approving ${pool?.token0?.symbol} and ${pool?.token1?.symbol}`}\n                              {step.id === 'adding' && (\n                                <span className=\"flex items-center gap-2\">\n                                  Adding liquidity to {getTokenPairDisplay()} pool\n                                </span>\n                              )}\n                              {step.id === 'confirming' && 'Waiting for confirmation...'}\n                              {step.id === 'completed' && (\n                                <span className=\"flex items-center gap-2\">\n                                  Successfully added liquidity to {getTokenPairDisplay()} pool!\n                                </span>\n                              )}\n                            </p>\n                          )}\n                        </div>\n                        {isCompleted && (\n                          <svg className=\"w-5 h-5 text-[#00ffbd]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {isError && (\n                  <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\n                    <div className=\"flex items-start gap-3\">\n                      <Icons.Error />\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\n                        <p className=\"mt-1 text-sm text-red-400\">\n                          {formatErrorMessage(error)}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4 flex justify-end\">\n                      <button\n                        onClick={onClose}\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {currentStep === 'completed' && (\n                  <div className=\"mt-6\">\n                    <button\n                      onClick={onClose}\n                      className=\"w-full px-4 py-3 rounded-xl font-medium bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors text-black\"\n                    >\n                      Close\n                    </button>\n                  </div>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Star Rating Modal Component\nconst StarRatingModal = ({ isOpen, onClose, onRate }) => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white text-center mb-4\"\n                >\n                  Rate Your Experience\n                </Dialog.Title>\n\n                <div className=\"flex justify-center space-x-2 mb-6 flex-wrap\">\n                  {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((star) => (\n                    <button\n                      key={star}\n                      className={`text-3xl transition-colors ${\n                        (hover || rating) >= star ? 'text-[#00ffbd]' : 'text-gray-300 dark:text-gray-600'\n                      }`}\n                      onClick={() => {\n                        setRating(star);\n                        onRate(star);\n                        setTimeout(() => onClose(), 500);\n                      }}\n                      onMouseEnter={() => setHover(star)}\n                      onMouseLeave={() => setHover(0)}\n                    >\n                      ★\n                    </button>\n                  ))}\n                </div>\n\n                <p className=\"text-center text-gray-500 dark:text-gray-400\">\n                  How was your experience adding liquidity?\n                </p>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nexport default function AddLiquidity() {\n  const { address } = useAccount();\n  const uniswap = useUnichain();\n  const [pool, setPool] = useState(null);\n  const [token0Amount, setToken0Amount] = useState('');\n  const [token1Amount, setToken1Amount] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showPoolModal, setShowPoolModal] = useState(false);\n  const [activeInput, setActiveInput] = useState(null);\n  const [chainId, setChainId] = useState(null);\n  const calculateTimeoutRef = React.useRef(null);\n  const [showProgressModal, setShowProgressModal] = useState(false);\n  const [currentStep, setCurrentStep] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  const [addLiquidityError, setAddLiquidityError] = useState(null);\n  const [currentChainId, setCurrentChainId] = useState(null);\n  const navigate = useNavigate();\n\n  // Effect to get and track chain ID\n  useEffect(() => {\n    const getChainId = async () => {\n      if (window.ethereum) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const network = await provider.getNetwork();\n        setChainId(Number(network.chainId));\n      }\n    };\n\n    getChainId();\n\n    // Listen for chain changes\n    if (window.ethereum) {\n      window.ethereum.on('chainChanged', () => {\n        getChainId();\n      });\n    }\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('chainChanged', getChainId);\n      }\n    };\n  }, []);\n\n  // Add window resize handler\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const handleRating = (rating) => {\n    console.log('User rated liquidity addition:', rating);\n    // Here you can implement the logic to save the rating\n  };\n\n  // Load pool info when pool is selected\n  useEffect(() => {\n    const loadPoolInfo = async () => {\n      if (!pool || !uniswap) return;\n\n      try {\n        const poolInfo = await uniswap.getPoolInfo(pool.token0.address, pool.token1.address);\n        if (poolInfo) {\n          setPool(prev => ({\n            ...prev,\n            ...poolInfo,\n            token0: { ...prev.token0, ...poolInfo.token0 },\n            token1: { ...prev.token1, ...poolInfo.token1 }\n          }));\n        }\n      } catch (error) {\n        console.error('Error loading pool info:', error);\n      }\n    };\n\n    loadPoolInfo();\n  }, [pool?.pairAddress, uniswap]);\n\n  // Single useEffect for calculations\n  React.useEffect(() => {\n    const calculateAmount = async () => {\n      if (!pool || !activeInput) return;\n\n      try {\n        const poolInfo = await uniswap.getPoolInfo(pool.token0.address, pool.token1.address);\n        if (!poolInfo || !poolInfo.reserves) {\n          console.log('No pool info or reserves found');\n          return;\n        }\n\n        // Get reserves from the poolInfo object\n        const reserve0 = BigInt(poolInfo.reserves.reserve0.toString());\n        const reserve1 = BigInt(poolInfo.reserves.reserve1.toString());\n        \n        console.log('Reserves:', {\n          reserve0: reserve0.toString(),\n          reserve1: reserve1.toString()\n        });\n\n        if (activeInput === 'token0' && token0Amount && token0Amount !== '0') {\n          console.log('Calculating token1 amount based on token0 input:', token0Amount);\n          const amount0 = ethers.parseUnits(token0Amount, pool.token0.decimals);\n          console.log('Parsed amount0:', amount0.toString());\n          \n          // Use BigInt arithmetic\n          const amount1 = (amount0 * reserve1) / reserve0;\n          console.log('Calculated amount1:', amount1.toString());\n          \n          const formattedAmount1 = ethers.formatUnits(amount1, pool.token1.decimals);\n          console.log('Formatted amount1:', formattedAmount1);\n          \n          setToken1Amount(formattedAmount1);\n        } else if (activeInput === 'token1' && token1Amount && token1Amount !== '0') {\n          console.log('Calculating token0 amount based on token1 input:', token1Amount);\n          const amount1 = ethers.parseUnits(token1Amount, pool.token1.decimals);\n          console.log('Parsed amount1:', amount1.toString());\n          \n          // Use BigInt arithmetic\n          const amount0 = (amount1 * reserve0) / reserve1;\n          console.log('Calculated amount0:', amount0.toString());\n          \n          const formattedAmount0 = ethers.formatUnits(amount0, pool.token0.decimals);\n          console.log('Formatted amount0:', formattedAmount0);\n          \n          setToken0Amount(formattedAmount0);\n        }\n      } catch (error) {\n        console.error('Error calculating amounts:', error);\n      }\n    };\n\n    // Clear any existing timeout\n    if (calculateTimeoutRef.current) {\n      clearTimeout(calculateTimeoutRef.current);\n    }\n\n    // Set new timeout for calculation\n    calculateTimeoutRef.current = setTimeout(calculateAmount, 500);\n\n    // Cleanup\n    return () => {\n      if (calculateTimeoutRef.current) {\n        clearTimeout(calculateTimeoutRef.current);\n      }\n    };\n  }, [pool, token0Amount, token1Amount, activeInput, uniswap]);\n\n  const handleToken0Change = (e) => {\n    const value = e.target.value;\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n      setActiveInput('token0');\n      setToken0Amount(value);\n      if (!value || value === '0') {\n        setToken1Amount('');\n      }\n    }\n  };\n\n  const handleToken1Change = (e) => {\n    const value = e.target.value;\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n      setActiveInput('token1');\n      setToken1Amount(value);\n      if (!value || value === '0') {\n        setToken0Amount('');\n      }\n    }\n  };\n\n  const handleAddLiquidity = async () => {\n    if (!address) {\n      toast.error('Please connect your wallet');\n      return;\n    }\n\n    if (!pool || !token0Amount || !token1Amount || !chainId) {\n      toast.error('Please fill in all fields');\n      return;\n    }\n\n    setLoading(true);\n    setShowProgressModal(true);\n    setCurrentStep('preparing');\n    setAddLiquidityError(null);\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const chainId = await provider.getNetwork().then(n => Number(n.chainId));\n      \n      if (chainId === 10143) {\n        // Handle Monad testnet\n      const signer = await provider.getSigner();\n        const routerAddress = UNISWAP_ADDRESSES[10143].router;\n        const routerInterface = new ethers.Interface([\n          'function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity)',\n          'function addLiquidityETH(address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity)'\n        ]);\n\n        const deadline = Math.floor(Date.now() / 1000) + 60 * 20; // 20 minutes from now\n        const parsedAmount0 = ethers.parseUnits(token0Amount, pool.token0.decimals);\n        const parsedAmount1 = ethers.parseUnits(token1Amount, pool.token1.decimals);\n\n        setCurrentStep('approval');\n\n        // Check if either token is native MON\n        const isToken0Native = pool.token0.isWETH || pool.token0.isNative;\n        const isToken1Native = pool.token1.isWETH || pool.token1.isNative;\n\n        if (isToken0Native || isToken1Native) {\n          // Handle native MON + token pair\n          const tokenAddress = isToken0Native ? pool.token1.address : pool.token0.address;\n          const tokenAmount = isToken0Native ? parsedAmount1 : parsedAmount0;\n          const monAmount = isToken0Native ? parsedAmount0 : parsedAmount1;\n\n          // Approve token first if needed\n          if (!isToken0Native) {\n            const tokenContract = new ethers.Contract(\n              pool.token0.address,\n              ['function approve(address spender, uint256 amount) external returns (bool)'],\n        signer\n      );\n            await tokenContract.approve(routerAddress, parsedAmount0);\n          } else if (!isToken1Native) {\n            const tokenContract = new ethers.Contract(\n              pool.token1.address,\n              ['function approve(address spender, uint256 amount) external returns (bool)'],\n              signer\n            );\n            await tokenContract.approve(routerAddress, parsedAmount1);\n          }\n\n          setCurrentStep('adding');\n          const tx = await signer.sendTransaction({\n            to: routerAddress,\n            data: routerInterface.encodeFunctionData('addLiquidityETH', [\n              tokenAddress,\n              tokenAmount,\n              tokenAmount * 99n / 100n, // 1% slippage\n              monAmount * 99n / 100n, // 1% slippage\n              await signer.getAddress(),\n              deadline\n            ]),\n            value: monAmount\n          });\n\n          setCurrentStep('confirming');\n          await tx.wait();\n        } else {\n          // Handle token + token pair\n          // Approve both tokens\n          const token0Contract = new ethers.Contract(\n            pool.token0.address,\n            ['function approve(address spender, uint256 amount) external returns (bool)'],\n            signer\n          );\n          const token1Contract = new ethers.Contract(\n            pool.token1.address,\n            ['function approve(address spender, uint256 amount) external returns (bool)'],\n            signer\n          );\n\n          await token0Contract.approve(routerAddress, parsedAmount0);\n          await token1Contract.approve(routerAddress, parsedAmount1);\n\n          setCurrentStep('adding');\n          const tx = await signer.sendTransaction({\n            to: routerAddress,\n            data: routerInterface.encodeFunctionData('addLiquidity', [\n              pool.token0.address,\n              pool.token1.address,\n              parsedAmount0,\n              parsedAmount1,\n              parsedAmount0 * 99n / 100n, // 1% slippage\n              parsedAmount1 * 99n / 100n, // 1% slippage\n              await signer.getAddress(),\n              deadline\n            ])\n          });\n\n          setCurrentStep('confirming');\n          await tx.wait();\n        }\n      } else {\n        // Original logic for Unichain networks\n        const signer = await provider.getSigner();\n        const routerContract = new ethers.Contract(\n          UNISWAP_ADDRESSES[chainId].router,\n          ROUTER_ABI,\n          signer\n        );\n\n        const deadline = Math.floor(Date.now() / 1000) + 60 * 20; // 20 minutes from now\n        const parsedAmount0 = ethers.parseUnits(token0Amount, pool.token0.decimals);\n        const parsedAmount1 = ethers.parseUnits(token1Amount, pool.token1.decimals);\n\n        setCurrentStep('approval');\n\n        // Check if either token is ETH\n        const isToken0ETH = pool.token0.isWETH;\n        const isToken1ETH = pool.token1.isWETH;\n\n        if (isToken0ETH || isToken1ETH) {\n          // Handle ETH + token pair\n          const tokenAddress = isToken0ETH ? pool.token1.address : pool.token0.address;\n          const tokenAmount = isToken0ETH ? parsedAmount1 : parsedAmount0;\n          const ethAmount = isToken0ETH ? parsedAmount0 : parsedAmount1;\n\n          // Approve token first if needed\n          if (!isToken0ETH) {\n            const tokenContract = new ethers.Contract(\n              pool.token0.address,\n              ['function approve(address spender, uint256 amount) external returns (bool)'],\n              signer\n            );\n            await tokenContract.approve(UNISWAP_ADDRESSES[chainId].router, parsedAmount0);\n          } else if (!isToken1ETH) {\n            const tokenContract = new ethers.Contract(\n              pool.token1.address,\n              ['function approve(address spender, uint256 amount) external returns (bool)'],\n              signer\n            );\n            await tokenContract.approve(UNISWAP_ADDRESSES[chainId].router, parsedAmount1);\n          }\n\n        setCurrentStep('adding');\n          const tx = await routerContract.addLiquidityETH(\n          tokenAddress,\n          tokenAmount,\n            tokenAmount * 99n / 100n, // 1% slippage\n            ethAmount * 99n / 100n, // 1% slippage\n            address,\n          deadline,\n            { value: ethAmount }\n        );\n\n          setCurrentStep('confirming');\n          await tx.wait();\n      } else {\n          // Handle token + token pair\n          // Approve both tokens\n          const token0Contract = new ethers.Contract(\n            pool.token0.address,\n            ['function approve(address spender, uint256 amount) external returns (bool)'],\n            signer\n          );\n          const token1Contract = new ethers.Contract(\n            pool.token1.address,\n            ['function approve(address spender, uint256 amount) external returns (bool)'],\n            signer\n          );\n\n          await token0Contract.approve(UNISWAP_ADDRESSES[chainId].router, parsedAmount0);\n          await token1Contract.approve(UNISWAP_ADDRESSES[chainId].router, parsedAmount1);\n\n        setCurrentStep('adding');\n          const tx = await routerContract.addLiquidity(\n            pool.token0.address,\n            pool.token1.address,\n          parsedAmount0,\n          parsedAmount1,\n            parsedAmount0 * 99n / 100n, // 1% slippage\n            parsedAmount1 * 99n / 100n, // 1% slippage\n            address,\n            deadline\n          );\n\n      setCurrentStep('confirming');\n          await tx.wait();\n        }\n      }\n\n      setCurrentStep('completed');\n          setShowConfetti(true);\n      setTimeout(() => setShowConfetti(false), 5000);\n    } catch (error) {\n      console.error('Error adding liquidity:', error);\n      setAddLiquidityError(error.message || 'Failed to add liquidity');\n      setCurrentStep('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Add Confetti component with higher z-index */}\n      {showConfetti && (\n        <Confetti\n          width={windowSize.width}\n          height={windowSize.height}\n          numberOfPieces={200}\n          recycle={false}\n          gravity={0.2}\n          initialVelocityX={10}\n          initialVelocityY={10}\n          colors={['#00ffbd', '#00e6a9', '#00cc95', '#00b381', '#00996d']}\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 99999,\n            pointerEvents: 'none'\n          }}\n        />\n      )}\n\n      {/* Pool Selection */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          Select Pool\n        </label>\n        <button\n          onClick={() => setShowPoolModal(true)}\n          className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800 hover:border-[#00ffbd] dark:hover:border-[#00ffbd] transition-colors flex items-center justify-between group\"\n        >\n          {pool ? (\n            <div className=\"flex items-center gap-3\">\n              <div className=\"flex -space-x-2\">\n                <img\n                  src={getTokenLogo(pool.token0, chainId)}\n                  alt={pool.token0.symbol}\n                  className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\n                />\n                <img\n                  src={getTokenLogo(pool.token1, chainId)}\n                  alt={pool.token1.symbol}\n                  className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\n                />\n              </div>\n              <span className=\"font-medium text-gray-900 dark:text-white\">\n                {(() => {\n                  if (!chainId) return `${pool.token0.symbol}/${pool.token1.symbol}`;\n                  const commonTokens = getCommonTokens(chainId);\n                  const wethToken = commonTokens.find(t => t.symbol === 'WETH');\n                  if (!wethToken) return `${pool.token0.symbol}/${pool.token1.symbol}`;\n                  const token0Symbol = pool.token0.address?.toLowerCase() === wethToken.address?.toLowerCase() ? 'ETH' : pool.token0.symbol;\n                  const token1Symbol = pool.token1.address?.toLowerCase() === wethToken.address?.toLowerCase() ? 'ETH' : pool.token1.symbol;\n                  return `${token0Symbol}/${token1Symbol}`;\n                })()}\n              </span>\n            </div>\n          ) : (\n            <span className=\"text-gray-500\">Select a pool</span>\n          )}\n          <svg\n            className=\"w-5 h-5 text-gray-400 group-hover:text-[#00ffbd] transition-colors\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </button>\n      </div>\n\n      {pool && (\n        <>\n          {/* Token 0 Input */}\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              {chainId === 10143 && (pool.token0.isWETH || pool.token0.isNative) ? 'MON' : pool.token0.symbol} Amount\n            </label>\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                value={token0Amount}\n                onChange={handleToken0Change}\n                placeholder=\"0.0\"\n                className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n              />\n              <div className=\"absolute right-3 top-1/2 -translate-y-1/2 flex items-center gap-2\">\n                <img\n                  src={chainId === 10143 && (pool.token0.isWETH || pool.token0.isNative) ? '/monad.png' : getTokenLogo(pool.token0, chainId)}\n                  alt={chainId === 10143 && (pool.token0.isWETH || pool.token0.isNative) ? 'MON' : pool.token0.symbol}\n                  className=\"w-6 h-6 rounded-full\"\n                />\n                <span className=\"font-medium text-gray-900 dark:text-white\">\n                  {chainId === 10143 && (pool.token0.isWETH || pool.token0.isNative) ? 'MON' : pool.token0.symbol}\n                </span>\n              </div>\n            </div>\n            <TokenBalance token={pool.token0} chainId={chainId} />\n          </div>\n\n          {/* Token 1 Input */}\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              {chainId === 10143 && (pool.token1.isWETH || pool.token1.isNative) ? 'MON' : pool.token1.symbol} Amount\n            </label>\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                value={token1Amount}\n                onChange={handleToken1Change}\n                placeholder=\"0.0\"\n                className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n              />\n              <div className=\"absolute right-3 top-1/2 -translate-y-1/2 flex items-center gap-2\">\n                <img\n                  src={chainId === 10143 && (pool.token1.isWETH || pool.token1.isNative) ? '/monad.png' : getTokenLogo(pool.token1, chainId)}\n                  alt={chainId === 10143 && (pool.token1.isWETH || pool.token1.isNative) ? 'MON' : pool.token1.symbol}\n                  className=\"w-6 h-6 rounded-full\"\n                />\n                <span className=\"font-medium text-gray-900 dark:text-white\">\n                  {chainId === 10143 && (pool.token1.isWETH || pool.token1.isNative) ? 'MON' : pool.token1.symbol}\n                </span>\n              </div>\n            </div>\n            <TokenBalance token={pool.token1} chainId={chainId} />\n          </div>\n\n          {/* Add Liquidity Button */}\n          <button\n            onClick={handleAddLiquidity}\n            disabled={loading || !token0Amount || !token1Amount}\n            className={`w-full px-4 py-3 rounded-xl font-medium text-lg transition-colors\n              ${loading || !token0Amount || !token1Amount\n                ? 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed text-gray-500 dark:text-gray-400'\n                : 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black'\n              }\n            `}\n          >\n            {loading ? 'Adding Liquidity...' : 'Add Liquidity'}\n          </button>\n        </>\n      )}\n\n      {/* Pool Selection Modal */}\n      <PoolSelectionModal\n        isOpen={showPoolModal}\n        onClose={() => setShowPoolModal(false)}\n        onSelect={(selectedPool) => {\n          setPool(selectedPool);\n          setShowPoolModal(false);\n          setToken0Amount('');\n          setToken1Amount('');\n        }}\n      />\n\n      {/* Add Progress Modal */}\n      <ProgressModal\n        isOpen={showProgressModal}\n        onClose={() => {\n          setShowProgressModal(false);\n          setCurrentStep(null);\n          setAddLiquidityError(null);\n        }}\n        currentStep={currentStep}\n        pool={pool}\n        error={addLiquidityError}\n        chainId={chainId}\n      />\n\n      {/* Add Rating Modal */}\n      <StarRatingModal\n        isOpen={showRatingModal}\n        onClose={() => setShowRatingModal(false)}\n        onRate={handleRating}\n      />\n    </div>\n  );\n} ","import React from 'react';\r\nimport { useState, useEffect, Fragment, useCallback } from 'react';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport Confetti from 'react-confetti';\r\nimport { useAccount } from 'wagmi';\r\nimport { ethers } from 'ethers';\r\nimport { toast } from 'react-hot-toast';\r\nimport { BiWallet } from 'react-icons/bi';\r\nimport { FaExchangeAlt, FaStar, FaGasPump } from 'react-icons/fa';\r\nimport { useUnichain } from '../../../../hooks/useUnichain';\r\nimport TokenSelectionModal from '../shared/TokenSelectionModal';\r\nimport { getTokenLogo } from '../../../../utils/tokens';\r\nimport { UNISWAP_ADDRESSES } from '../../../../services/unichain/uniswap';\r\nimport { V3PositionManager } from '../../../../services/unichain/v3/positionManager';\r\nimport { Contract } from 'ethers';\r\n\r\n// Add V3 Constants\r\nconst FeeAmount = {\r\n  LOWEST: 100,    // 0.01%\r\n  LOW: 500,       // 0.05%\r\n  MEDIUM: 3000,   // 0.3%\r\n  HIGH: 10000     // 1%\r\n};\r\n\r\n// SVG Icons for progress states\r\nconst Icons = {\r\n  Preparing: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\r\n        <path d=\"M12 6v2m0 8v2M6 12h2m8 0h2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[pulse_2s_ease-in-out_infinite]\" />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Error: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\" style={{ animation: 'shake 0.5s ease-in-out' }}>\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"text-red-500\" />\r\n        <path d=\"M12 8v5\" strokeLinecap=\"round\" className=\"text-red-500\" />\r\n        <path d=\"M12 16v.01\" strokeLinecap=\"round\" className=\"text-red-500\" />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Approval: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\r\n        <path d=\"M8 12l3 3 5-5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.6s_ease-in-out]\" />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Adding: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\r\n        <path d=\"M12 8v8m-4-4h8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" style={{ animation: 'draw 2s ease-in-out infinite' }} />\r\n        <circle cx=\"12\" cy=\"12\" r=\"3\" style={{ animation: 'rotate 4s linear infinite', opacity: 0.2 }} />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Confirming: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\r\n        <path strokeLinecap=\"round\" className=\"origin-center animate-[spin_2s_linear_infinite]\"\r\n          d=\"M12 6v6l4 4\" />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Completed: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"animate-[fadeIn_0.5s_ease-in-out]\" />\r\n        <path d=\"M8 12l3 3 5-5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.5s_ease-in-out_forwards]\" style={{ strokeDasharray: 20, strokeDashoffset: 20 }} />\r\n      </g>\r\n    </svg>\r\n  )\r\n};\r\n\r\n// Tick spacings for each fee tier\r\nconst TICK_SPACINGS = {\r\n  [FeeAmount.LOWEST]: 1,\r\n  [FeeAmount.LOW]: 10,\r\n  [FeeAmount.MEDIUM]: 60,\r\n  [FeeAmount.HIGH]: 200\r\n};\r\n\r\n// Factory and NFT Position Manager addresses for Unichain Testnet\r\nconst UNISWAP_V3_ADDRESSES = {\r\n  factory: '0x1f984000000000000000000000000000000000003',  // Unichain Mainnet factory\r\n  quoter: '0x385a5cf5f83e99f7bb2852b6a19c3538b9f7658',\r\n  router: '0x73855d06de49d0fe49c42638ba8d4d3638a9c62a',\r\n  nftPositionManage: '0xb7610f9b733e7d45184be3a1bc8a847be6ec4f0b'\r\n};\r\n\r\n// Add multicall contract address and ABI\r\nconst MULTICALL_ADDRESS = '0xcA11bde05977b3631167028862bE2a173976CA11';\r\nconst MULTICALL_ABI = [\r\n  'function aggregate(tuple(address target, bytes callData)[] calls) view returns (uint256 blockNumber, bytes[] returnData)',\r\n  'function tryAggregate(bool requireSuccess, tuple(address target, bytes callData)[] calls) view returns (tuple(bool success, bytes returnData)[])'\r\n];\r\n\r\n// Add ERC20 interface for encoding calls\r\nconst ERC20_INTERFACE = new ethers.Interface([\r\n  'function symbol() view returns (string)',\r\n  'function decimals() view returns (uint8)'\r\n]);\r\n\r\n// Add NFT Position Manager ABI for name fetching\r\nconst NFT_POSITION_MANAGER_ABI = [\r\n  'function positions(uint256 tokenId) view returns (uint96 nonce, address operator, address token0, address token1, uint24 fee, int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128, uint128 tokensOwed0, uint128 tokensOwed1)',\r\n  'function balanceOf(address owner) view returns (uint256)',\r\n  'function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)',\r\n  'function tokenURI(uint256 tokenId) view returns (string)'\r\n];\r\n\r\n// Add balance display component\r\nconst TokenBalance = ({ token }) => {\r\n  const [balance, setBalance] = useState('0');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const uniswap = useUnichain();\r\n  const { address: userAddress } = useAccount();\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      if (!userAddress || !token || !uniswap) return;\r\n      \r\n      try {\r\n        setIsLoading(true);\r\n        // If the token is WETH, show ETH balance instead\r\n        if (token.address?.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase()) {\r\n          const provider = new ethers.BrowserProvider(window.ethereum);\r\n          const ethBalance = await provider.getBalance(userAddress);\r\n          setBalance(ethers.formatEther(ethBalance));\r\n        } else {\r\n          const balance = await uniswap.getTokenBalance(\r\n            token.address,\r\n            userAddress\r\n          );\r\n          setBalance(balance);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching balance:', error);\r\n        setBalance('0');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBalance();\r\n  }, [token, userAddress, uniswap]);\r\n\r\n  if (!token) return null;\r\n\r\n  // Show ETH instead of WETH in the display\r\n  const displaySymbol = token.address?.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase() \r\n    ? 'ETH' \r\n    : token.symbol;\r\n\r\n  return (\r\n    <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n      Balance: {isLoading ? 'Loading...' : balance} {displaySymbol}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Star Rating Modal Component\r\nconst StarRatingModal = ({ isOpen, onClose, onRate }) => {\r\n  const [rating, setRating] = useState(0);\r\n  const [hover, setHover] = useState(0);\r\n\r\n  return (\r\n    <Transition appear show={isOpen} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-[99998]\" onClose={onClose}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white text-center mb-4\"\r\n                >\r\n                  Rate Your Experience\r\n                </Dialog.Title>\r\n                \r\n                <div className=\"flex flex-col items-center space-y-4\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {[...Array(9)].map((_, index) => {\r\n                      const starValue = index + 1;\r\n                      return (\r\n                        <button\r\n                          key={starValue}\r\n                          className=\"transition-transform hover:scale-110 focus:outline-none\"\r\n                          onClick={() => setRating(starValue)}\r\n                          onMouseEnter={() => setHover(starValue)}\r\n                          onMouseLeave={() => setHover(0)}\r\n                        >\r\n                          <FaStar\r\n                            size={28}\r\n                            className={`transition-colors ${\r\n                              (hover || rating) >= starValue\r\n                                ? 'text-[#00ffbd]'\r\n                                : 'text-gray-300 dark:text-gray-600'\r\n                            }`}\r\n                          />\r\n                        </button>\r\n                      );\r\n                    })}\r\n                  </div>\r\n\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    {rating === 0 ? 'Select a rating' : `You rated: ${rating} star${rating !== 1 ? 's' : ''}`}\r\n                  </p>\r\n\r\n                  <div className=\"flex space-x-3 mt-4\">\r\n                    <button\r\n                      onClick={() => {\r\n                        if (rating > 0) {\r\n                          onRate(rating);\r\n                          onClose();\r\n                        }\r\n                      }}\r\n                      className={`px-4 py-2 rounded-xl font-medium transition-colors ${\r\n                        rating > 0\r\n                          ? 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black'\r\n                          : 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed text-gray-500 dark:text-gray-400'\r\n                      }`}\r\n                    >\r\n                      Submit Rating\r\n                    </button>\r\n                    <button\r\n                      onClick={onClose}\r\n                      className=\"px-4 py-2 rounded-xl font-medium bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-900 dark:text-white transition-colors\"\r\n                    >\r\n                      Skip\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\n// Modify the usePools hook\r\nconst usePools = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [pools, setPools] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const { address: userAddress } = useAccount();\r\n\r\n  const fetchTokenInfo = useCallback(async (provider, tokens) => {\r\n    try {\r\n      const multicall = new Contract(MULTICALL_ADDRESS, MULTICALL_ABI, provider);\r\n      \r\n      // Create calls array for both symbol and decimals\r\n      const calls = tokens.flatMap(token => ([\r\n        {\r\n          target: token,\r\n          callData: ERC20_INTERFACE.encodeFunctionData('symbol')\r\n        },\r\n        {\r\n          target: token,\r\n          callData: ERC20_INTERFACE.encodeFunctionData('decimals')\r\n        }\r\n      ]));\r\n\r\n      const { returnData } = await multicall.aggregate(calls);\r\n\r\n      // Process results\r\n      const tokenInfo = {};\r\n      for (let i = 0; i < tokens.length; i++) {\r\n        const tokenAddress = tokens[i].toLowerCase();\r\n        try {\r\n          const symbol = ERC20_INTERFACE.decodeFunctionResult('symbol', returnData[i * 2])[0];\r\n          const decimals = ERC20_INTERFACE.decodeFunctionResult('decimals', returnData[i * 2 + 1])[0];\r\n          tokenInfo[tokenAddress] = { symbol, decimals };\r\n        } catch (err) {\r\n          console.warn(`Error decoding token info for ${tokenAddress}:`, err);\r\n          tokenInfo[tokenAddress] = { symbol: 'Unknown', decimals: 18 };\r\n        }\r\n      }\r\n      return tokenInfo;\r\n    } catch (err) {\r\n      console.warn('Error in multicall:', err);\r\n      return tokens.reduce((acc, token) => {\r\n        acc[token.toLowerCase()] = { symbol: 'Unknown', decimals: 18 };\r\n        return acc;\r\n      }, {});\r\n    }\r\n  }, []);\r\n\r\n  const fetchPools = useCallback(async () => {\r\n    if (!userAddress) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const factoryContract = new ethers.Contract(\r\n        UNISWAP_V3_ADDRESSES.factory,\r\n        ['event PoolCreated(address indexed token0, address indexed token1, uint24 indexed fee, int24 tickSpacing, address pool)'],\r\n        provider\r\n      );\r\n\r\n      // Get pool creation events from last month\r\n      const currentBlock = await provider.getBlockNumber();\r\n      const fromBlock = Math.max(0, currentBlock - (7200 * 30)); // Last 30 days\r\n      \r\n      const filter = factoryContract.filters.PoolCreated();\r\n      const events = await factoryContract.queryFilter(filter, fromBlock);\r\n      \r\n      // Extract unique token addresses\r\n      const uniqueTokens = [...new Set(events.flatMap(event => \r\n        [event.args[0], event.args[1]]\r\n      ))];\r\n\r\n      // Fetch all token info in one multicall\r\n      const tokenInfo = await fetchTokenInfo(provider, uniqueTokens);\r\n\r\n      // Process pools\r\n      const processedPools = events.map(event => {\r\n        const token0 = event.args[0].toLowerCase();\r\n        const token1 = event.args[1].toLowerCase();\r\n        const fee = event.args[2];\r\n        const poolAddress = event.args[4];\r\n\r\n        return {\r\n          poolAddress,\r\n          fee: fee.toString(),\r\n          token0: {\r\n            address: event.args[0],\r\n            symbol: tokenInfo[token0]?.symbol || 'Unknown',\r\n            decimals: tokenInfo[token0]?.decimals || 18,\r\n            isWETH: token0 === UNISWAP_ADDRESSES.WETH.toLowerCase()\r\n          },\r\n          token1: {\r\n            address: event.args[1],\r\n            symbol: tokenInfo[token1]?.symbol || 'Unknown',\r\n            decimals: tokenInfo[token1]?.decimals || 18,\r\n            isWETH: token1 === UNISWAP_ADDRESSES.WETH.toLowerCase()\r\n          }\r\n        };\r\n      });\r\n\r\n      setPools(processedPools);\r\n    } catch (err) {\r\n      console.error('Error fetching pools:', err);\r\n      setError(err.message || 'Failed to fetch pools');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userAddress, fetchTokenInfo]);\r\n\r\n  useEffect(() => {\r\n    fetchPools();\r\n  }, [fetchPools]);\r\n\r\n  return { pools, loading, error, refetch: fetchPools };\r\n};\r\n\r\n// Update the pool selection modal display\r\nconst PoolSelectionModal = ({ isOpen, onClose, onSelect }) => {\r\n  const { pools, loading, error } = usePools();\r\n\r\n  return (\r\n    <Transition appear show={isOpen} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\r\n                >\r\n                  Select a Pool\r\n                </Dialog.Title>\r\n\r\n                <div className=\"mt-4 space-y-2 max-h-[60vh] overflow-y-auto\">\r\n                  {loading ? (\r\n                    <div className=\"flex justify-center py-8\">\r\n                      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#00ffbd]\" />\r\n                    </div>\r\n                  ) : error ? (\r\n                    <div className=\"text-center py-8 text-red-500\">\r\n                      Error loading pools: {error}\r\n                    </div>\r\n                  ) : pools.length > 0 ? (\r\n                    pools.map((pool) => (\r\n                      <button\r\n                        key={pool.poolAddress}\r\n                        onClick={() => onSelect(pool)}\r\n                        className=\"w-full p-4 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800 hover:border-[#00ffbd] dark:hover:border-[#00ffbd] transition-colors flex items-center justify-between group\"\r\n                      >\r\n                        <div className=\"flex items-center gap-3\">\r\n                          <div className=\"flex -space-x-2\">\r\n                            <img\r\n                              src={getTokenLogo(pool.token0)}\r\n                              alt={pool.token0.symbol}\r\n                              className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n                            />\r\n                            <img\r\n                              src={getTokenLogo(pool.token1)}\r\n                              alt={pool.token1.symbol}\r\n                              className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"text-left\">\r\n                            <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                              {pool.token0.isWETH ? 'ETH' : pool.token0.symbol}/\r\n                              {pool.token1.isWETH ? 'ETH' : pool.token1.symbol}\r\n                            </span>\r\n                            <div className=\"text-sm text-gray-500\">\r\n                              {(Number(pool.fee) / 10000).toFixed(2)}% fee tier\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </button>\r\n                    ))\r\n                  ) : (\r\n                    <div className=\"text-center py-8 text-gray-500\">\r\n                      No pools available\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\n// Progress Modal Component\r\nconst ProgressModal = ({ isOpen, onClose, currentStep, pool, error }) => {\r\n  const steps = [\r\n    { id: 'preparing', title: 'Preparing', icon: <Icons.Preparing /> },\r\n    { id: 'approval', title: 'Token Approval', icon: <Icons.Approval /> },\r\n    { id: 'adding', title: 'Adding Liquidity', icon: <Icons.Adding /> },\r\n    { id: 'confirming', title: 'Confirming', icon: <Icons.Confirming /> },\r\n    { id: 'completed', title: 'Completed', icon: <Icons.Completed /> }\r\n  ];\r\n\r\n  const isError = Boolean(error);\r\n\r\n  const formatErrorMessage = (error) => {\r\n    if (error?.includes('user rejected')) {\r\n      return 'Transaction was rejected. Please try again.';\r\n    }\r\n    if (error?.includes('insufficient')) {\r\n      return 'Insufficient balance for adding liquidity.';\r\n    }\r\n    if (error?.includes('INSUFFICIENT_OUTPUT_AMOUNT')) {\r\n      return 'Price impact too high, try a smaller amount.';\r\n    }\r\n    if (error?.includes('EXCESSIVE_INPUT_AMOUNT')) {\r\n      return 'Insufficient liquidity for this trade.';\r\n    }\r\n    return error?.replace(/\\{\"action\":\"sendTransaction\".*$/, '') || 'An error occurred';\r\n  };\r\n\r\n  const getTokenPairDisplay = () => {\r\n    if (!pool) return '';\r\n\r\n    // Convert WETH to ETH for display\r\n    const displayToken0 = {\r\n      ...pool.token0,\r\n      symbol: pool.token0.address?.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase() ? 'ETH' : pool.token0.symbol,\r\n      name: pool.token0.address?.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase() ? 'Ethereum' : pool.token0.name\r\n    };\r\n\r\n    const displayToken1 = {\r\n      ...pool.token1,\r\n      symbol: pool.token1.address?.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase() ? 'ETH' : pool.token1.symbol,\r\n      name: pool.token1.address?.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase() ? 'Ethereum' : pool.token1.name\r\n    };\r\n\r\n    return (\r\n      <div className=\"flex items-center gap-2\">\r\n        <div className=\"flex -space-x-2\">\r\n          <img\r\n            src={getTokenLogo(displayToken0)}\r\n            alt={displayToken0.symbol}\r\n            className=\"w-6 h-6 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n          />\r\n          <img\r\n            src={getTokenLogo(displayToken1)}\r\n            alt={displayToken1.symbol}\r\n            className=\"w-6 h-6 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n          />\r\n        </div>\r\n        <span>\r\n          {displayToken0.symbol} {displayToken1.symbol}\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Transition appear show={isOpen} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\r\n                >\r\n                  {isError ? 'Error Adding Liquidity' : 'Adding Liquidity'}\r\n                  {!isError && pool && (\r\n                    <div className=\"mt-2 text-base font-normal text-gray-500 dark:text-gray-400\">\r\n                      {getTokenPairDisplay()}\r\n                    </div>\r\n                  )}\r\n                </Dialog.Title>\r\n\r\n                <div className=\"space-y-4\">\r\n                  {steps.map((step, index) => {\r\n                    const isActive = currentStep === step.id;\r\n                    const isCompleted = !isError && steps.findIndex(s => s.id === currentStep) > index;\r\n                    const isErrorStep = isError && currentStep === step.id;\r\n                    \r\n                    return (\r\n                      <div\r\n                        key={step.id}\r\n                        className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\r\n                          isActive && !isErrorStep ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : \r\n                          isCompleted ? 'text-[#00ffbd]' : \r\n                          isErrorStep ? 'bg-red-500/10 text-red-500' : \r\n                          'text-gray-400'\r\n                        }`}\r\n                      >\r\n                        {step.icon}\r\n                        <div className=\"flex-1\">\r\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{step.title}</span>\r\n                          {isActive && !isError && (\r\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                              {step.id === 'preparing' && 'Preparing transaction...'}\r\n                              {step.id === 'approval' && `Approving ${pool?.token0?.symbol} and ${pool?.token1?.symbol}`}\r\n                              {step.id === 'adding' && (\r\n                                <span className=\"flex items-center gap-2\">\r\n                                  Adding liquidity to {getTokenPairDisplay()} pool\r\n                                </span>\r\n                              )}\r\n                              {step.id === 'confirming' && 'Waiting for confirmation...'}\r\n                              {step.id === 'completed' && (\r\n                                <span className=\"flex items-center gap-2\">\r\n                                  Successfully added liquidity to {getTokenPairDisplay()} pool!\r\n                                </span>\r\n                              )}\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                        {isCompleted && (\r\n                          <svg className=\"w-5 h-5 text-[#00ffbd]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                          </svg>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {isError && (\r\n                  <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\r\n                    <div className=\"flex items-start gap-3\">\r\n                      <Icons.Error />\r\n                      <div className=\"flex-1\">\r\n                        <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\r\n                        <p className=\"mt-1 text-sm text-red-400\">\r\n                          {formatErrorMessage(error)}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-4 flex justify-end\">\r\n                      <button\r\n                        onClick={onClose}\r\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2\"\r\n                      >\r\n                        Close\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {currentStep === 'completed' && (\r\n                  <div className=\"mt-6\">\r\n                    <button\r\n                      onClick={onClose}\r\n                      className=\"w-full px-4 py-3 rounded-xl font-medium bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors text-black\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default function AddLiquidity() {\r\n  const { address } = useAccount();\r\n  const uniswap = useUnichain();\r\n  const [pool, setPool] = useState(null);\r\n  const [token0Amount, setToken0Amount] = useState('');\r\n  const [token1Amount, setToken1Amount] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [showPoolModal, setShowPoolModal] = useState(false);\r\n  const [activeInput, setActiveInput] = useState(null);\r\n  const calculateTimeoutRef = React.useRef(null);\r\n  const [showProgressModal, setShowProgressModal] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(null);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [showRatingModal, setShowRatingModal] = useState(false);\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n  const [addLiquidityError, setAddLiquidityError] = useState(null);\r\n  const [selectedRange, setSelectedRange] = useState('full');\r\n\r\n  // V3-specific state\r\n  const [feeLevel, setFeeLevel] = useState(null);\r\n  const [priceRange, setPriceRange] = useState({ min: '', max: '' });\r\n\r\n  // Add window resize handler\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const handleToken0Change = (e) => {\r\n    setToken0Amount(e.target.value);\r\n    setActiveInput('token0');\r\n  };\r\n\r\n  const handleToken1Change = (e) => {\r\n    setToken1Amount(e.target.value);\r\n    setActiveInput('token1');\r\n  };\r\n\r\n  const handleAddLiquidity = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setShowProgressModal(true);\r\n      setCurrentStep('preparing');\r\n      setAddLiquidityError(null);\r\n\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const signer = await provider.getSigner();\r\n      const positionManager = new V3PositionManager(signer);\r\n\r\n      // Get token addresses (handle ETH/WETH)\r\n      const token0Address = pool.token0.address?.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase() \r\n        ? UNISWAP_ADDRESSES.WETH \r\n        : pool.token0.address;\r\n      const token1Address = pool.token1.address?.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase()\r\n        ? UNISWAP_ADDRESSES.WETH\r\n        : pool.token1.address;\r\n\r\n      // Parse amounts with proper decimals\r\n      const amount0Desired = ethers.parseUnits(token0Amount, pool.token0.decimals);\r\n      const amount1Desired = ethers.parseUnits(token1Amount, pool.token1.decimals);\r\n\r\n      // Calculate fee amount from percentage\r\n      const feeAmount = {\r\n        0.01: FeeAmount.LOWEST,\r\n        0.05: FeeAmount.LOW,\r\n        0.3: FeeAmount.MEDIUM,\r\n        1: FeeAmount.HIGH\r\n      }[feeLevel];\r\n\r\n      // Calculate price range ticks\r\n      let tickLower, tickUpper;\r\n      if (selectedRange === 'full') {\r\n        // Use min/max ticks for full range\r\n        tickLower = -887272;  // MIN_TICK\r\n        tickUpper = 887272;   // MAX_TICK\r\n      } else {\r\n        // Convert price range to ticks\r\n        const currentPrice = await positionManager.getCurrentPrice(token0Address, token1Address, feeAmount);\r\n        const minPriceMultiplier = (100 - parseFloat(priceRange.min)) / 100;\r\n        const maxPriceMultiplier = (100 + parseFloat(priceRange.max)) / 100;\r\n        \r\n        tickLower = await positionManager.priceToTick(\r\n          currentPrice * minPriceMultiplier,\r\n          pool.token0.decimals,\r\n          pool.token1.decimals\r\n        );\r\n        tickUpper = await positionManager.priceToTick(\r\n          currentPrice * maxPriceMultiplier,\r\n          pool.token0.decimals,\r\n          pool.token1.decimals\r\n        );\r\n\r\n        // Ensure ticks are spaced correctly\r\n        const tickSpacing = TICK_SPACINGS[feeAmount];\r\n        tickLower = Math.ceil(tickLower / tickSpacing) * tickSpacing;\r\n        tickUpper = Math.floor(tickUpper / tickSpacing) * tickSpacing;\r\n      }\r\n\r\n      setCurrentStep('approval');\r\n      \r\n      // Ensure token approvals\r\n      await positionManager.ensureTokenApprovals({\r\n        token0: token0Address,\r\n        token1: token1Address,\r\n        amount0Desired,\r\n        amount1Desired,\r\n        ownerAddress: address\r\n      });\r\n\r\n      setCurrentStep('adding');\r\n\r\n      // Calculate ETH value if needed\r\n      const ethValue = pool.token0.address?.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase() \r\n        ? amount0Desired \r\n        : (pool.token1.address?.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase() \r\n          ? amount1Desired \r\n          : 0n);\r\n\r\n      // Add liquidity\r\n      const { tokenId, liquidity, amount0, amount1 } = await positionManager.mint({\r\n        token0: token0Address,\r\n        token1: token1Address,\r\n        fee: feeAmount,\r\n        tickLower,\r\n        tickUpper,\r\n        amount0Desired,\r\n        amount1Desired,\r\n        amount0Min: 0, // TODO: Add slippage protection\r\n        amount1Min: 0,\r\n        recipient: address,\r\n        deadline: Math.floor(Date.now() / 1000) + 1200, // 20 minutes\r\n        value: ethValue\r\n      });\r\n\r\n      console.log('Position Created:', {\r\n        tokenId: tokenId.toString(),\r\n        liquidity: liquidity.toString(),\r\n        amount0: ethers.formatUnits(amount0, pool.token0.decimals),\r\n        amount1: ethers.formatUnits(amount1, pool.token1.decimals)\r\n      });\r\n\r\n      setCurrentStep('completed');\r\n\r\n      // Show completed state briefly, then close modal and show confetti\r\n      setTimeout(() => {\r\n        setShowProgressModal(false);\r\n        setCurrentStep(null);\r\n        \r\n        // Show confetti after modal is closed\r\n        setTimeout(() => {\r\n          setShowConfetti(true);\r\n          \r\n          // Show rating modal after a short delay\r\n          setTimeout(() => {\r\n            setShowRatingModal(true);\r\n          }, 1000);\r\n          \r\n          // Reset form and cleanup after confetti\r\n          setTimeout(() => {\r\n            setToken0Amount('');\r\n            setToken1Amount('');\r\n            setShowConfetti(false);\r\n          }, 30000);\r\n        }, 100);\r\n      }, 1000);\r\n\r\n    } catch (error) {\r\n      console.error('Add liquidity error:', error);\r\n      setAddLiquidityError(error.message);\r\n      setCurrentStep('error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRating = async (rating) => {\r\n    console.log('User rating:', rating);\r\n    // Implement rating logic here\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Add Confetti component with higher z-index */}\r\n      {showConfetti && (\r\n        <Confetti\r\n          width={windowSize.width}\r\n          height={windowSize.height}\r\n          numberOfPieces={200}\r\n          recycle={false}\r\n          gravity={0.2}\r\n          initialVelocityX={10}\r\n          initialVelocityY={10}\r\n          colors={['#00ffbd', '#00e6a9', '#00cc95', '#00b381', '#00996d']}\r\n          style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            zIndex: 99999,\r\n            pointerEvents: 'none'\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* Pool Selection */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          Select Pool\r\n        </label>\r\n        <button\r\n          onClick={() => setShowPoolModal(true)}\r\n          className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800 hover:border-[#00ffbd] dark:hover:border-[#00ffbd] transition-colors flex items-center justify-between group\"\r\n        >\r\n          {pool ? (\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"flex -space-x-2\">\r\n                <img\r\n                  src={getTokenLogo(pool.token0)}\r\n                  alt={pool.token0.symbol}\r\n                  className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n                />\r\n                <img\r\n                  src={getTokenLogo(pool.token1)}\r\n                  alt={pool.token1.symbol}\r\n                  className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n                />\r\n              </div>\r\n              <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                {pool.token0.address?.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase() ? 'ETH' : pool.token0.symbol}/\r\n                {pool.token1.address?.toLowerCase() === UNISWAP_ADDRESSES.WETH.toLowerCase() ? 'ETH' : pool.token1.symbol}\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <span className=\"text-gray-500\">Select a pool</span>\r\n          )}\r\n          <svg\r\n            className=\"w-5 h-5 text-gray-400 group-hover:text-[#00ffbd] transition-colors\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {pool && (\r\n        <>\r\n          {/* Fee Tier Selection (V3-specific) */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              Fee Tier\r\n            </label>\r\n            <div className=\"grid grid-cols-4 gap-2\">\r\n              {[0.01, 0.05, 0.3, 1].map((fee) => (\r\n                <button\r\n                  key={fee}\r\n                  onClick={() => setFeeLevel(fee)}\r\n                  className={`px-4 py-2 rounded-xl text-sm font-medium transition-colors\r\n                    ${feeLevel === fee\r\n                      ? 'bg-[#00ffbd] text-black'\r\n                      : 'bg-white/5 dark:bg-[#2d2f36] text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'\r\n                    }\r\n                  `}\r\n                >\r\n                  {fee}%\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Token 0 Input */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              {pool.token0.isWETH ? 'ETH' : pool.token0.symbol} Amount\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                value={token0Amount}\r\n                onChange={handleToken0Change}\r\n                placeholder=\"0.0\"\r\n                className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n              />\r\n              <div className=\"absolute right-3 top-1/2 -translate-y-1/2 flex items-center gap-2\">\r\n                <img\r\n                  src={pool.token0.logo}\r\n                  alt={pool.token0.isWETH ? 'ETH' : pool.token0.symbol}\r\n                  className=\"w-6 h-6 rounded-full\"\r\n                />\r\n                <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                  {pool.token0.isWETH ? 'ETH' : pool.token0.symbol}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <TokenBalance token={pool.token0} />\r\n          </div>\r\n\r\n          {/* Token 1 Input */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              {pool.token1.isWETH ? 'ETH' : pool.token1.symbol} Amount\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                value={token1Amount}\r\n                onChange={handleToken1Change}\r\n                placeholder=\"0.0\"\r\n                className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n              />\r\n              <div className=\"absolute right-3 top-1/2 -translate-y-1/2 flex items-center gap-2\">\r\n                <img\r\n                  src={pool.token1.logo}\r\n                  alt={pool.token1.isWETH ? 'ETH' : pool.token1.symbol}\r\n                  className=\"w-6 h-6 rounded-full\"\r\n                />\r\n                <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                  {pool.token1.isWETH ? 'ETH' : pool.token1.symbol}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <TokenBalance token={pool.token1} />\r\n          </div>\r\n\r\n          {/* Price Range (V3-specific) */}\r\n          <div className=\"space-y-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              Set price range\r\n            </label>\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              <button \r\n                onClick={() => setSelectedRange('full')}\r\n                className={`p-4 bg-white/5 dark:bg-[#2d2f36] rounded-xl border transition-colors ${\r\n                  selectedRange === 'full' \r\n                    ? 'border-[#00ffbd] text-[#00ffbd] dark:text-[#00ffbd]' \r\n                    : 'border-gray-200 dark:border-gray-800 text-gray-700 dark:text-gray-300 hover:border-[#00ffbd] dark:hover:border-[#00ffbd]'\r\n                }`}\r\n              >\r\n                Full range\r\n              </button>\r\n              <button \r\n                onClick={() => setSelectedRange('custom')}\r\n                className={`p-4 bg-white/5 dark:bg-[#2d2f36] rounded-xl border transition-colors ${\r\n                  selectedRange === 'custom' \r\n                    ? 'border-[#00ffbd] text-[#00ffbd] dark:text-[#00ffbd]' \r\n                    : 'border-gray-200 dark:border-gray-800 text-gray-700 dark:text-gray-300 hover:border-[#00ffbd] dark:hover:border-[#00ffbd]'\r\n                }`}\r\n              >\r\n                Custom range\r\n              </button>\r\n            </div>\r\n\r\n            {/* Min/Max Price Inputs - Only show when custom range is selected */}\r\n            {selectedRange === 'custom' && (\r\n              <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n                <div>\r\n                  <label className=\"block text-xs text-gray-500 dark:text-gray-400 mb-1\">\r\n                    Min Price\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={priceRange.min}\r\n                    onChange={(e) => setPriceRange(prev => ({ ...prev, min: e.target.value }))}\r\n                    placeholder=\"0.0\"\r\n                    className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-xs text-gray-500 dark:text-gray-400 mb-1\">\r\n                    Max Price\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={priceRange.max}\r\n                    onChange={(e) => setPriceRange(prev => ({ ...prev, max: e.target.value }))}\r\n                    placeholder=\"0.0\"\r\n                    className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              <p>\r\n                {selectedRange === 'full' \r\n                  ? \"Providing full range liquidity ensures continuous market participation across all possible prices, offering simplicity but with potential for higher impermanent loss.\"\r\n                  : \"Custom range allows you to concentrate your liquidity within specific price bounds, enhancing capital efficiency and fee earnings but requiring more active management.\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Add Liquidity Button */}\r\n          <button\r\n            onClick={handleAddLiquidity}\r\n            disabled={loading || !token0Amount || !token1Amount || !feeLevel || !priceRange.min || !priceRange.max}\r\n            className={`w-full px-4 py-3 rounded-xl font-medium text-lg transition-colors\r\n              ${loading || !token0Amount || !token1Amount || !feeLevel || !priceRange.min || !priceRange.max\r\n                ? 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed text-gray-500 dark:text-gray-400'\r\n                : 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black'\r\n              }\r\n            `}\r\n          >\r\n            {loading ? 'Adding Liquidity...' : 'Add Liquidity'}\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {/* Progress Modal */}\r\n      <ProgressModal\r\n        isOpen={showProgressModal}\r\n        onClose={() => {\r\n          setShowProgressModal(false);\r\n          setCurrentStep(null);\r\n          setAddLiquidityError(null);\r\n        }}\r\n        currentStep={currentStep}\r\n        pool={pool}\r\n        error={addLiquidityError}\r\n      />\r\n\r\n      {/* Rating Modal */}\r\n      <StarRatingModal\r\n        isOpen={showRatingModal}\r\n        onClose={() => setShowRatingModal(false)}\r\n        onRate={handleRating}\r\n      />\r\n\r\n      {/* Pool Selection Modal */}\r\n      <PoolSelectionModal\r\n        isOpen={showPoolModal}\r\n        onClose={() => setShowPoolModal(false)}\r\n        onSelect={(selectedPool) => {\r\n          setPool(selectedPool);\r\n          setShowPoolModal(false);\r\n          setToken0Amount('');\r\n          setToken1Amount('');\r\n          setFeeLevel(null);\r\n          setPriceRange({ min: '', max: '' });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport { useAccount, useNetwork } from 'wagmi';\r\nimport { toast } from 'react-hot-toast';\r\nimport PoolSelectionModal from '../shared/PoolSelectionModal';\r\nimport { ethers } from 'ethers';\r\nimport { useUnichain } from '../../../../hooks/useUnichain';\r\nimport { UNISWAP_ADDRESSES } from '../../../../services/unichain/uniswap';\r\nimport { ipfsToHttp } from '../../../../utils/ipfs';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { Fragment } from 'react';\r\nimport Confetti from 'react-confetti';\r\nimport { ChevronDownIcon } from '@heroicons/react/20/solid';\r\n\r\n// Icons for progress modal\r\nconst Icons = {\r\n  Preparing: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ animation: 'rotate 2s linear infinite' }}>\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\r\n        <path d=\"M12 6v2m0 8v2M6 12h2m8 0h2\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite' }} />\r\n        <path d=\"M7.75 7.75l1.5 1.5m5.5 5.5l1.5 1.5m0-8.5l-1.5 1.5m-5.5 5.5l-1.5 1.5\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite', animationDelay: '0.2s' }} />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Error: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\" style={{ animation: 'shake 0.5s ease-in-out' }}>\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"text-red-500\" />\r\n        <path d=\"M12 8v5\" strokeLinecap=\"round\" className=\"text-red-500\" />\r\n        <path d=\"M12 16v.01\" strokeLinecap=\"round\" className=\"text-red-500\" />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Approval: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\r\n        <path \r\n          d=\"M8 12l3 3 5-5\" \r\n          strokeLinecap=\"round\" \r\n          strokeLinejoin=\"round\"\r\n          className=\"animate-[draw_1s_ease-in-out_infinite]\"\r\n          style={{ strokeDasharray: 20, strokeDashoffset: 20, animation: 'draw 1s ease-in-out forwards' }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Removing: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path \r\n          d=\"M12 8v8M8 12h8\" \r\n          strokeLinecap=\"round\" \r\n          strokeLinejoin=\"round\" \r\n          className=\"animate-[spin_2s_linear_infinite]\" \r\n          transform=\"rotate(45 12 12)\"\r\n        />\r\n        <path \r\n          d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" \r\n          className=\"animate-[pulse_2s_ease-in-out_infinite]\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Confirming: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\r\n        <path \r\n          d=\"M12 6v6l4 4\" \r\n          strokeLinecap=\"round\" \r\n          strokeLinejoin=\"round\"\r\n          className=\"animate-[spin_2s_linear_infinite]\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Completed: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path \r\n          d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" \r\n          className=\"animate-[fadeIn_0.5s_ease-in-out]\"\r\n        />\r\n        <path \r\n          d=\"M8 12l3 3 5-5\" \r\n          strokeLinecap=\"round\" \r\n          strokeLinejoin=\"round\"\r\n          className=\"animate-[draw_0.5s_ease-in-out_forwards]\"\r\n          style={{ strokeDasharray: 20, strokeDashoffset: 20, animation: 'draw 0.5s ease-in-out forwards' }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  )\r\n};\r\n\r\n// Add required keyframe animations at the top of the file\r\nconst style = document.createElement('style');\r\nstyle.textContent = `\r\n  @keyframes draw {\r\n    to {\r\n      stroke-dashoffset: 0;\r\n    }\r\n  }\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\ndocument.head.appendChild(style);\r\n\r\n// Progress Modal Component\r\nconst ProgressModal = ({ isOpen, onClose, currentStep, pool, error }) => {\r\n  const steps = [\r\n    { key: 'preparing', label: 'Preparing Transaction', icon: Icons.Preparing },\r\n    { key: 'approval', label: 'Awaiting Approval', icon: Icons.Approval },\r\n    { key: 'removing', label: 'Removing Liquidity', icon: Icons.Removing },\r\n    { key: 'confirming', label: 'Confirming Transaction', icon: Icons.Confirming },\r\n    { key: 'completed', label: 'Liquidity Removed Successfully', icon: Icons.Completed }\r\n  ];\r\n\r\n  const currentStepIndex = steps.findIndex(step => step.key === currentStep);\r\n\r\n  const formatErrorMessage = (error) => {\r\n    if (!error) return '';\r\n    if (error.includes('user rejected')) return 'Transaction was rejected by user';\r\n    if (error.includes('insufficient funds')) return 'Insufficient funds for transaction';\r\n    return error;\r\n  };\r\n\r\n  const getTokenPairDisplay = () => {\r\n    if (!pool) return '';\r\n    return (\r\n      <div className=\"flex items-center gap-2\">\r\n        <div className=\"flex -space-x-2\">\r\n          <img\r\n            src={pool.token0.logo}\r\n            alt={pool.token0.symbol}\r\n            className=\"w-6 h-6 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n          />\r\n          <img\r\n            src={pool.token1.logo}\r\n            alt={pool.token1.symbol}\r\n            className=\"w-6 h-6 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n          />\r\n        </div>\r\n        <span className=\"text-gray-900 dark:text-white\">\r\n          {pool.token0.symbol}/{pool.token1.symbol}\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Transition appear show={isOpen} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black/25 backdrop-blur-sm\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-center justify-center p-4\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 shadow-xl transition-all\">\r\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\r\n                  Remove Liquidity Status\r\n                  {pool && (\r\n                    <div className=\"mt-2 text-base font-normal text-gray-500 dark:text-gray-400\">\r\n                      {getTokenPairDisplay()}\r\n                    </div>\r\n                  )}\r\n                </Dialog.Title>\r\n                <div className=\"space-y-4\">\r\n                  {steps.map((step, index) => {\r\n                    const Icon = step.icon;\r\n                    const isActive = index === currentStepIndex;\r\n                    const isCompleted = index < currentStepIndex;\r\n                    return (\r\n                      <div\r\n                        key={step.key}\r\n                        className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\r\n                          isActive ? 'bg-[#00ffbd]/10 text-[#00ffbd]' :\r\n                          isCompleted ? 'text-[#00ffbd]' :\r\n                          'text-gray-400'\r\n                        }`}\r\n                      >\r\n                        <Icon />\r\n                        <div className=\"flex-1\">\r\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{step.label}</span>\r\n                          {isActive && step.key === 'removing' && (\r\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                              Removing liquidity for {getTokenPairDisplay()}\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  {error && (\r\n                    <div className=\"flex items-center gap-3 p-3 rounded-xl bg-red-500/10\">\r\n                      <Icons.Error />\r\n                      <div className=\"flex-1\">\r\n                        <span className=\"block font-medium text-red-500\">Transaction Failed</span>\r\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                          {formatErrorMessage(error)}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {currentStep === 'completed' && (\r\n                  <div className=\"mt-6 text-center\">\r\n                    <p className=\"text-[#00ffbd] font-medium\">Liquidity removed successfully!</p>\r\n                  </div>\r\n                )}\r\n                {error && (\r\n                  <div className=\"mt-6\">\r\n                    <button\r\n                      onClick={onClose}\r\n                      className=\"w-full px-4 py-3 rounded-xl font-medium text-lg bg-red-500 text-white hover:bg-red-600 transition-colors\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\n// Star Rating Modal Component\r\nconst StarRatingModal = ({ isOpen, onClose, onRate }) => {\r\n  const [rating, setRating] = useState(0);\r\n  const [hoveredRating, setHoveredRating] = useState(0);\r\n\r\n  const handleRate = () => {\r\n    onRate(rating);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Transition appear show={isOpen} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black/25 backdrop-blur-sm\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-center justify-center p-4\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 shadow-xl transition-all\">\r\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white text-center mb-4\">\r\n                  Rate Your Experience\r\n                </Dialog.Title>\r\n                <div className=\"flex justify-center gap-2 mb-6\">\r\n                  {[...Array(9)].map((_, index) => (\r\n                    <button\r\n                      key={index}\r\n                      onMouseEnter={() => setHoveredRating(index + 1)}\r\n                      onMouseLeave={() => setHoveredRating(0)}\r\n                      onClick={() => {\r\n                        setRating(index + 1);\r\n                        onRate(index + 1);\r\n                        onClose();\r\n                      }}\r\n                      className=\"focus:outline-none\"\r\n                    >\r\n                      <svg\r\n                        className={`w-8 h-8 transition-colors ${\r\n                          index + 1 <= (hoveredRating || rating) ? 'text-[#00ffbd]' : 'text-gray-300 dark:text-gray-600'\r\n                        }`}\r\n                        fill=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                      >\r\n                        <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\r\n                      </svg>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\n// Add Monad testnet tokens\r\nconst COMMON_TOKENS = {\r\n  // Monad Testnet tokens (10143)\r\n  10143: [\r\n    {\r\n      symbol: 'MON',\r\n      name: 'Monad',\r\n      decimals: 18,\r\n      logo: '/monad.png',\r\n      isNative: true\r\n    },\r\n    {\r\n      address: '0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701',\r\n      symbol: 'WMONAD',\r\n      name: 'Wrapped Monad',\r\n      decimals: 18,\r\n      logo: '/monad.png'\r\n    },\r\n    {\r\n      address: '0xB5a30b0FDc5EA94A52fDc42e3E9760Cb8449Fb37',\r\n      symbol: 'WETH',\r\n      name: 'Wrapped Ether',\r\n      decimals: 18,\r\n      logo: '/eth.png'\r\n    }\r\n  ],\r\n  // ... existing tokens for other networks ...\r\n};\r\n\r\nconst getTokenLogo = (token) => {\r\n  // Check if it's a common token\r\n  const commonToken = COMMON_TOKENS.find(t => t.address?.toLowerCase() === token?.address?.toLowerCase());\r\n  if (commonToken) {\r\n    return commonToken.logo;\r\n  }\r\n\r\n  // Check for IPFS or direct logo from token data\r\n  if (token?.logo || token?.logoIpfs) {\r\n    return token.logo || ipfsToHttp(token.logoIpfs);\r\n  }\r\n\r\n  // Default token logo\r\n  return '/token-default.png';\r\n};\r\n\r\n// Add balance display component\r\nconst TokenBalance = ({ token }) => {\r\n  const { address: userAddress } = useAccount();\r\n  const [balance, setBalance] = useState('0');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const uniswap = useUnichain();\r\n  const { chain } = useNetwork();\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      if (!userAddress || !token || !chain?.id) return;\r\n      \r\n      try {\r\n        setIsLoading(true);\r\n        if (chain.id === 10143) {\r\n          // Handle Monad testnet\r\n          const provider = new ethers.BrowserProvider(window.ethereum);\r\n          if (token.isNative) {\r\n            // For native MON token\r\n            const balance = await provider.getBalance(userAddress);\r\n            setBalance(ethers.formatEther(balance));\r\n          } else {\r\n            // For other tokens\r\n            const tokenContract = new ethers.Contract(\r\n              token.address,\r\n              ['function balanceOf(address) view returns (uint256)'],\r\n              provider\r\n            );\r\n            const balance = await tokenContract.balanceOf(userAddress);\r\n            setBalance(ethers.formatUnits(balance, token.decimals));\r\n          }\r\n        } else {\r\n          // Original logic for Unichain networks\r\n          const balance = await uniswap.getTokenBalance(\r\n            token.symbol === 'ETH' ? 'ETH' : token.address,\r\n            userAddress\r\n          );\r\n          setBalance(balance);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching balance:', error);\r\n        setBalance('0');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBalance();\r\n  }, [token, userAddress, uniswap, chain?.id]);\r\n\r\n  if (!token) return null;\r\n\r\n  return (\r\n    <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n      Balance: {isLoading ? 'Loading...' : balance} {token.symbol}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Add Router ABI\r\nconst ROUTER_ABI = [\r\n  'function removeLiquidity(address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB)',\r\n  'function removeLiquidityETH(address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH)'\r\n];\r\n\r\nconst TokenIcon = ({ token }) => {\r\n  // Special handling for USDT\r\n  if (token?.address?.toLowerCase() === '0x70262e266E50603AcFc5D58997eF73e5a8775844'.toLowerCase()) {\r\n    return (\r\n      <div className=\"flex items-center gap-2 bg-white/5 dark:bg-[#2d2f36] px-3 py-1.5 rounded-xl\">\r\n        <img\r\n          src=\"/logos/usdt.png\"\r\n          alt=\"USDT\"\r\n          className=\"w-5 h-5 rounded-full\"\r\n        />\r\n        <span className=\"text-gray-900 dark:text-white font-medium\">\r\n          USDT\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Check if it's a common token\r\n  const commonToken = COMMON_TOKENS.find(t => \r\n    t.address?.toLowerCase() === token?.address?.toLowerCase()\r\n  );\r\n\r\n  if (commonToken) {\r\n    return (\r\n      <div className=\"flex items-center gap-2 bg-white/5 dark:bg-[#2d2f36] px-3 py-1.5 rounded-xl\">\r\n        <img\r\n          src={commonToken.logo}\r\n          alt={commonToken.symbol}\r\n          className=\"w-5 h-5 rounded-full\"\r\n        />\r\n        <span className=\"text-gray-900 dark:text-white font-medium\">\r\n          {commonToken.symbol}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // For tokens with IPFS or direct logo\r\n  const logoUrl = token?.logo || (token?.logoIpfs ? ipfsToHttp(token.logoIpfs) : null);\r\n  if (logoUrl) {\r\n    return (\r\n      <div className=\"flex items-center gap-2 bg-white/5 dark:bg-[#2d2f36] px-3 py-1.5 rounded-xl\">\r\n        <img\r\n          src={logoUrl}\r\n          alt={token?.symbol}\r\n          className=\"w-5 h-5 rounded-full\"\r\n          onError={(e) => {\r\n            e.target.onerror = null;\r\n            e.target.src = '/token-default.png';\r\n          }}\r\n        />\r\n        <span className=\"text-gray-900 dark:text-white font-medium\">\r\n          {token?.symbol || 'Unknown'}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Default token icon\r\n  return (\r\n    <div className=\"flex items-center gap-2 bg-white/5 dark:bg-[#2d2f36] px-3 py-1.5 rounded-xl\">\r\n      <img\r\n        src=\"/token-default.png\"\r\n        alt={token?.symbol || 'Unknown'}\r\n        className=\"w-5 h-5 rounded-full\"\r\n      />\r\n      <span className=\"text-gray-900 dark:text-white font-medium\">\r\n        {token?.symbol || 'Unknown'}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function RemoveLiquidity() {\r\n  const { address } = useAccount();\r\n  const uniswap = useUnichain();\r\n  const [selectedPool, setSelectedPool] = useState(null);\r\n  const [showPoolModal, setShowPoolModal] = useState(false);\r\n  const [lpTokenAmount, setLpTokenAmount] = useState('');\r\n  const [lpTokenBalance, setLpTokenBalance] = useState('0');\r\n  const [selectedPercentage, setSelectedPercentage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isLoadingBalance, setIsLoadingBalance] = useState(false);\r\n  const [token0Amount, setToken0Amount] = useState('0');\r\n  const [token1Amount, setToken1Amount] = useState('0');\r\n  const [showProgressModal, setShowProgressModal] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(null);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [showRatingModal, setShowRatingModal] = useState(false);\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n  const [progressError, setProgressError] = useState(null);\r\n\r\n  // Add window resize handler\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Load pool info and LP token balance when pool is selected\r\n  useEffect(() => {\r\n    const loadPoolInfo = async () => {\r\n      if (!selectedPool || !address || !uniswap) return;\r\n\r\n      setIsLoadingBalance(true);\r\n      try {\r\n        // Get LP token balance\r\n        const balance = await uniswap.getTokenBalance(selectedPool.pairAddress, address);\r\n        setLpTokenBalance(balance);\r\n      } catch (error) {\r\n        console.error('Error loading pool info:', error);\r\n        setLpTokenBalance('0');\r\n      } finally {\r\n        setIsLoadingBalance(false);\r\n      }\r\n    };\r\n\r\n    loadPoolInfo();\r\n  }, [selectedPool?.pairAddress, address, uniswap]);\r\n\r\n  // Add percentage selection effect\r\n  useEffect(() => {\r\n    if (!selectedPercentage || !lpTokenBalance) return;\r\n\r\n    const percentage = selectedPercentage;\r\n    const totalLPTokens = parseFloat(lpTokenBalance);\r\n    const lpAmount = (totalLPTokens * percentage) / 100;\r\n    \r\n    setLpTokenAmount(lpAmount.toString());\r\n  }, [selectedPercentage, lpTokenBalance]);\r\n\r\n  // Add effect to calculate expected amounts when LP token amount changes\r\n  useEffect(() => {\r\n    const calculateAmounts = async () => {\r\n      if (!selectedPool || !lpTokenAmount || !address) return;\r\n\r\n      try {\r\n        const provider = new ethers.BrowserProvider(window.ethereum);\r\n        const pairContract = new ethers.Contract(selectedPool.pairAddress, [\r\n          'function getReserves() view returns (uint112, uint112, uint32)',\r\n          'function totalSupply() view returns (uint256)'\r\n        ], provider);\r\n\r\n        const [reserves, totalSupply] = await Promise.all([\r\n          pairContract.getReserves(),\r\n          pairContract.totalSupply()\r\n        ]);\r\n\r\n        const parsedAmount = ethers.parseUnits(lpTokenAmount, 18);\r\n        const amount0 = (reserves[0] * parsedAmount) / totalSupply;\r\n        const amount1 = (reserves[1] * parsedAmount) / totalSupply;\r\n\r\n        setToken0Amount(ethers.formatUnits(amount0, selectedPool.token0.decimals || 18));\r\n        setToken1Amount(ethers.formatUnits(amount1, selectedPool.token1.decimals || 18));\r\n      } catch (error) {\r\n        console.error('Error calculating amounts:', error);\r\n      }\r\n    };\r\n\r\n    calculateAmounts();\r\n  }, [selectedPool, lpTokenAmount, address]);\r\n\r\n  const handleRemoveLiquidity = async () => {\r\n    if (!address) {\r\n      toast.error('Please connect your wallet');\r\n      return;\r\n    }\r\n\r\n    if (!selectedPool || !lpTokenAmount) {\r\n      toast.error('Please enter a valid amount');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setShowProgressModal(true);\r\n    setCurrentStep('preparing');\r\n    setProgressError(null);\r\n\r\n    try {\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const chainId = await provider.getNetwork().then(n => Number(n.chainId));\r\n      const signer = await provider.getSigner();\r\n\r\n      // Parse amount with proper decimals\r\n      const parsedAmount = ethers.parseUnits(lpTokenAmount, 18);\r\n\r\n      if (chainId === 10143) {\r\n        // Handle Monad testnet\r\n        const routerAddress = UNISWAP_ADDRESSES[10143].router;\r\n        const routerInterface = new ethers.Interface([\r\n          'function removeLiquidity(address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB)',\r\n          'function removeLiquidityETH(address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH)'\r\n        ]);\r\n\r\n        // Get the pair contract to check allowance and approve if needed\r\n        const pairContract = new ethers.Contract(\r\n          selectedPool.pairAddress,\r\n          [\r\n            'function allowance(address,address) view returns (uint256)',\r\n            'function approve(address,uint256) returns (bool)',\r\n            'function balanceOf(address) view returns (uint256)',\r\n            'function totalSupply() view returns (uint256)',\r\n            'function getReserves() view returns (uint112, uint112, uint32)'\r\n          ],\r\n          signer\r\n        );\r\n\r\n        // Check allowance\r\n        const allowance = await pairContract.allowance(address, routerAddress);\r\n        if (allowance < parsedAmount) {\r\n          setCurrentStep('approval');\r\n          const approveTx = await pairContract.approve(routerAddress, ethers.MaxUint256);\r\n          await approveTx.wait();\r\n        }\r\n\r\n        // Calculate minimum amounts (1% slippage)\r\n        const amount0Min = ethers.parseUnits(token0Amount, selectedPool.token0.decimals) * 99n / 100n;\r\n        const amount1Min = ethers.parseUnits(token1Amount, selectedPool.token1.decimals) * 99n / 100n;\r\n\r\n        // Set deadline 20 minutes from now\r\n        const deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20);\r\n\r\n        // Check if one of the tokens is native MON\r\n        const isToken0Native = selectedPool.token0.isNative;\r\n        const isToken1Native = selectedPool.token1.isNative;\r\n\r\n        setCurrentStep('removing');\r\n        let tx;\r\n        if (isToken0Native || isToken1Native) {\r\n          // Handle MON pair\r\n          const token = isToken0Native ? selectedPool.token1.address : selectedPool.token0.address;\r\n          const amountTokenMin = isToken0Native ? amount1Min : amount0Min;\r\n          const amountETHMin = isToken0Native ? amount0Min : amount1Min;\r\n\r\n          tx = await signer.sendTransaction({\r\n            to: routerAddress,\r\n            data: routerInterface.encodeFunctionData('removeLiquidityETH', [\r\n              token,\r\n              parsedAmount,\r\n              amountTokenMin,\r\n              amountETHMin,\r\n              await signer.getAddress(),\r\n              deadline\r\n            ])\r\n          });\r\n        } else {\r\n          // Handle token-token pair\r\n          tx = await signer.sendTransaction({\r\n            to: routerAddress,\r\n            data: routerInterface.encodeFunctionData('removeLiquidity', [\r\n              selectedPool.token0.address,\r\n              selectedPool.token1.address,\r\n              parsedAmount,\r\n              amount0Min,\r\n              amount1Min,\r\n              await signer.getAddress(),\r\n              deadline\r\n            ])\r\n          });\r\n        }\r\n\r\n        setCurrentStep('confirming');\r\n        await tx.wait();\r\n      } else {\r\n        // Original logic for Unichain networks\r\n        const routerContract = new ethers.Contract(\r\n          UNISWAP_ADDRESSES[chainId].router,\r\n          ROUTER_ABI,\r\n          signer\r\n        );\r\n\r\n        // Get the pair contract to check allowance and approve if needed\r\n        const pairContract = new ethers.Contract(\r\n          selectedPool.pairAddress,\r\n          [\r\n            'function allowance(address,address) view returns (uint256)',\r\n            'function approve(address,uint256) returns (bool)',\r\n            'function balanceOf(address) view returns (uint256)',\r\n            'function totalSupply() view returns (uint256)',\r\n            'function getReserves() view returns (uint112, uint112, uint32)'\r\n          ],\r\n          signer\r\n        );\r\n\r\n        // Check allowance\r\n        const allowance = await pairContract.allowance(address, UNISWAP_ADDRESSES[chainId].router);\r\n        if (allowance < parsedAmount) {\r\n          setCurrentStep('approval');\r\n          const approveTx = await pairContract.approve(UNISWAP_ADDRESSES[chainId].router, ethers.MaxUint256);\r\n          await approveTx.wait();\r\n        }\r\n\r\n        // Calculate minimum amounts (1% slippage)\r\n        const amount0Min = ethers.parseUnits(token0Amount, selectedPool.token0.decimals || 18) * 99n / 100n;\r\n        const amount1Min = ethers.parseUnits(token1Amount, selectedPool.token1.decimals || 18) * 99n / 100n;\r\n\r\n        // Set deadline 20 minutes from now\r\n        const deadline = BigInt(Math.floor(Date.now() / 1000) + 60 * 20);\r\n\r\n        // Check if one of the tokens is WETH\r\n        const isToken0WETH = selectedPool.token0.address.toLowerCase() === UNISWAP_ADDRESSES[chainId].WETH.toLowerCase();\r\n        const isToken1WETH = selectedPool.token1.address.toLowerCase() === UNISWAP_ADDRESSES[chainId].WETH.toLowerCase();\r\n\r\n        setCurrentStep('removing');\r\n        let tx;\r\n        if (isToken0WETH || isToken1WETH) {\r\n          // Handle ETH pair\r\n          const token = isToken0WETH ? selectedPool.token1.address : selectedPool.token0.address;\r\n          const amountTokenMin = isToken0WETH ? amount1Min : amount0Min;\r\n          const amountETHMin = isToken0WETH ? amount0Min : amount1Min;\r\n\r\n          tx = await routerContract.removeLiquidityETH(\r\n            token,\r\n            parsedAmount,\r\n            amountTokenMin,\r\n            amountETHMin,\r\n            address,\r\n            deadline,\r\n            { gasLimit: 1000000n }\r\n          );\r\n        } else {\r\n          // Handle token-token pair\r\n          tx = await routerContract.removeLiquidity(\r\n            selectedPool.token0.address,\r\n            selectedPool.token1.address,\r\n            parsedAmount,\r\n            amount0Min,\r\n            amount1Min,\r\n            address,\r\n            deadline,\r\n            { gasLimit: 1000000n }\r\n          );\r\n        }\r\n\r\n        setCurrentStep('confirming');\r\n        await tx.wait();\r\n      }\r\n\r\n      // Show completed state and trigger confetti\r\n      setCurrentStep('completed');\r\n      setShowConfetti(true);\r\n\r\n      // Close progress modal and show rating after a delay\r\n      setTimeout(() => {\r\n        setShowProgressModal(false);\r\n        setCurrentStep(null);\r\n        setShowRatingModal(true);\r\n      }, 1000);\r\n      \r\n      // Cleanup confetti after some time\r\n      setTimeout(() => {\r\n        setShowConfetti(false);\r\n      }, 30000);\r\n\r\n      // Reset form and refresh balances\r\n      const newBalance = await pairContract.balanceOf(address);\r\n      setLpTokenBalance(ethers.formatUnits(newBalance, 18));\r\n    } catch (error) {\r\n      console.error('Remove liquidity error:', error);\r\n      setProgressError(error.message || 'Failed to remove liquidity');\r\n      setCurrentStep(null);\r\n      setShowConfetti(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMaxClick = () => {\r\n    setLpTokenAmount(lpTokenBalance);\r\n    setSelectedPercentage(100);\r\n  };\r\n\r\n  const handlePoolSelect = (pool) => {\r\n    // Ensure USDT has the correct logo\r\n    if (pool.token0.address?.toLowerCase() === '0x70262e266E50603AcFc5D58997eF73e5a8775844'.toLowerCase()) {\r\n      pool.token0.logo = '/logos/usdt.png';\r\n    }\r\n    if (pool.token1.address?.toLowerCase() === '0x70262e266E50603AcFc5D58997eF73e5a8775844'.toLowerCase()) {\r\n      pool.token1.logo = '/logos/usdt.png';\r\n    }\r\n    setSelectedPool(pool);\r\n    setShowPoolModal(false);\r\n    setLpTokenAmount('');\r\n    setSelectedPercentage(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Add Confetti */}\r\n      {showConfetti && (\r\n        <Confetti\r\n          width={windowSize.width}\r\n          height={windowSize.height}\r\n          numberOfPieces={200}\r\n          recycle={false}\r\n          gravity={0.2}\r\n          initialVelocityX={10}\r\n          initialVelocityY={10}\r\n          colors={['#00ffbd', '#00e6a9', '#00cc95', '#00b381', '#00996d']}\r\n          style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            zIndex: 99999,\r\n            pointerEvents: 'none'\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* Pool Selection */}\r\n      <div className=\"space-y-2\">\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n          Select Pool\r\n        </label>\r\n        <button\r\n          onClick={() => setShowPoolModal(true)}\r\n          className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800 flex items-center justify-between hover:border-[#00ffbd] dark:hover:border-[#00ffbd] transition-colors\"\r\n        >\r\n          {selectedPool ? (\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"flex -space-x-2\">\r\n                <img\r\n                  src={selectedPool.token0.logo}\r\n                  alt={selectedPool.token0.symbol}\r\n                  className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n                />\r\n                <img\r\n                  src={selectedPool.token1.logo}\r\n                  alt={selectedPool.token1.symbol}\r\n                  className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n                />\r\n              </div>\r\n              <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                {selectedPool.token0.symbol}/{selectedPool.token1.symbol}\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <span className=\"text-gray-500\">Select a pool</span>\r\n          )}\r\n          <ChevronDownIcon className=\"w-5 h-5 text-gray-400\" />\r\n        </button>\r\n      </div>\r\n\r\n      {selectedPool && (\r\n        <>\r\n          {/* Percentage Selection */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              Select Percentage\r\n            </label>\r\n            <div className=\"grid grid-cols-4 gap-2\">\r\n              {[25, 50, 75, 100].map((percentage) => (\r\n                <button\r\n                  key={percentage}\r\n                  onClick={() => setSelectedPercentage(percentage)}\r\n                  className={`px-4 py-2 rounded-xl font-medium transition-colors ${\r\n                    selectedPercentage === percentage\r\n                      ? 'bg-[#00ffbd] text-black'\r\n                      : 'bg-white/5 dark:bg-[#2d2f36] text-gray-700 dark:text-gray-300 hover:bg-[#00ffbd]/10'\r\n                  }`}\r\n                >\r\n                  {percentage}%\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* LP Token Input */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              LP Token Amount\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                value={lpTokenAmount}\r\n                onChange={(e) => {\r\n                  setLpTokenAmount(e.target.value);\r\n                  setSelectedPercentage(null);\r\n                }}\r\n                placeholder=\"0.0\"\r\n                className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800 pr-16 focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n              />\r\n              <button\r\n                onClick={handleMaxClick}\r\n                className=\"absolute right-3 top-1/2 -translate-y-1/2 px-2 py-1 text-sm font-medium text-[#00ffbd] hover:text-[#00e6a9] transition-colors\"\r\n              >\r\n                MAX\r\n              </button>\r\n            </div>\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              Balance: {isLoadingBalance ? 'Loading...' : lpTokenBalance} LP Tokens\r\n            </div>\r\n          </div>\r\n\r\n          {/* Expected Return Display */}\r\n          <div className=\"p-4 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800\">\r\n            <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-4\">\r\n              You Will Receive\r\n            </h3>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <img\r\n                    src={selectedPool.token0.logo}\r\n                    alt={selectedPool.token0.symbol}\r\n                    className=\"w-6 h-6 rounded-full\"\r\n                  />\r\n                  <span className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                    {selectedPool.token0.symbol}\r\n                  </span>\r\n                </div>\r\n                <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                  {Number(token0Amount).toFixed(6)}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <img\r\n                    src={selectedPool.token1.logo}\r\n                    alt={selectedPool.token1.symbol}\r\n                    className=\"w-6 h-6 rounded-full\"\r\n                  />\r\n                  <span className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                    {selectedPool.token1.symbol}\r\n                  </span>\r\n                </div>\r\n                <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                  {Number(token1Amount).toFixed(6)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Remove Liquidity Button */}\r\n      <button\r\n        onClick={handleRemoveLiquidity}\r\n        disabled={loading || !lpTokenAmount}\r\n        className={`w-full px-4 py-3 rounded-xl font-medium text-lg transition-colors\r\n          ${loading || !lpTokenAmount\r\n            ? 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed text-gray-500 dark:text-gray-400'\r\n            : 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black'\r\n          }\r\n        `}\r\n      >\r\n        {loading ? 'Removing Liquidity...' : 'Remove Liquidity'}\r\n      </button>\r\n\r\n      {/* Pool Selection Modal */}\r\n      <PoolSelectionModal\r\n        isOpen={showPoolModal}\r\n        onClose={() => setShowPoolModal(false)}\r\n        onSelect={handlePoolSelect}\r\n      />\r\n\r\n      {/* Progress Modal */}\r\n      <ProgressModal\r\n        isOpen={showProgressModal}\r\n        onClose={() => {\r\n          setShowProgressModal(false);\r\n          setCurrentStep(null);\r\n          setProgressError(null);\r\n        }}\r\n        currentStep={currentStep}\r\n        pool={selectedPool}\r\n        error={progressError}\r\n      />\r\n\r\n      {/* Rating Modal */}\r\n      <StarRatingModal\r\n        isOpen={showRatingModal}\r\n        onClose={() => setShowRatingModal(false)}\r\n        onRate={(rating) => {\r\n          console.log('User rated liquidity removal:', rating);\r\n          // Here you can implement the logic to save the rating\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport Confetti from 'react-confetti';\r\nimport { useAccount } from 'wagmi';\r\nimport { ethers } from 'ethers';\r\nimport { toast } from 'react-hot-toast';\r\nimport { BiWallet } from 'react-icons/bi';\r\nimport { FaStar } from 'react-icons/fa';\r\nimport { useUnichain } from '../../../../hooks/useUnichain';\r\nimport { getTokenLogo } from '../../../../utils/tokens';\r\nimport { UNISWAP_ADDRESSES } from '../../../../services/unichain/uniswap';\r\nimport { V3PositionManager } from '../../../../services/unichain/v3/positionManager';\r\n\r\n// Reuse the same Icons from AddLiquidity\r\nconst Icons = {\r\n  Preparing: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\r\n        <path d=\"M12 6v2m0 8v2M6 12h2m8 0h2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[pulse_2s_ease-in-out_infinite]\" />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Error: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"text-red-500\" />\r\n        <path d=\"M12 8v5\" strokeLinecap=\"round\" className=\"text-red-500\" />\r\n        <path d=\"M12 16v.01\" strokeLinecap=\"round\" className=\"text-red-500\" />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Approval: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\r\n        <path d=\"M8 12l3 3 5-5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.6s_ease-in-out]\" />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Removing: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\r\n        <path d=\"M8 12h8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.6s_ease-in-out]\" />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Confirming: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\r\n        <path strokeLinecap=\"round\" className=\"origin-center animate-[spin_2s_linear_infinite]\"\r\n          d=\"M12 6v6l4 4\" />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  Completed: () => (\r\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <g strokeWidth={1.5} stroke=\"currentColor\">\r\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"animate-[fadeIn_0.5s_ease-in-out]\" />\r\n        <path d=\"M8 12l3 3 5-5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.5s_ease-in-out_forwards]\" />\r\n      </g>\r\n    </svg>\r\n  )\r\n};\r\n\r\n// Star Rating Modal Component (reused from AddLiquidity)\r\nconst StarRatingModal = ({ isOpen, onClose, onRate }) => {\r\n  const [rating, setRating] = useState(0);\r\n  const [hover, setHover] = useState(0);\r\n\r\n  return (\r\n    <Transition appear show={isOpen} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-[99998]\" onClose={onClose}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white text-center mb-4\"\r\n                >\r\n                  Rate Your Experience\r\n                </Dialog.Title>\r\n                \r\n                <div className=\"flex flex-col items-center space-y-4\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {[...Array(5)].map((_, index) => {\r\n                      const starValue = index + 1;\r\n                      return (\r\n                        <button\r\n                          key={starValue}\r\n                          className=\"transition-transform hover:scale-110 focus:outline-none\"\r\n                          onClick={() => setRating(starValue)}\r\n                          onMouseEnter={() => setHover(starValue)}\r\n                          onMouseLeave={() => setHover(0)}\r\n                        >\r\n                          <FaStar\r\n                            size={28}\r\n                            className={`transition-colors ${\r\n                              (hover || rating) >= starValue\r\n                                ? 'text-[#00ffbd]'\r\n                                : 'text-gray-300 dark:text-gray-600'\r\n                            }`}\r\n                          />\r\n                        </button>\r\n                      );\r\n                    })}\r\n                  </div>\r\n\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    {rating === 0 ? 'Select a rating' : `You rated: ${rating} star${rating !== 1 ? 's' : ''}`}\r\n                  </p>\r\n\r\n                  <div className=\"flex space-x-3 mt-4\">\r\n                    <button\r\n                      onClick={() => {\r\n                        if (rating > 0) {\r\n                          onRate(rating);\r\n                          onClose();\r\n                        }\r\n                      }}\r\n                      className={`px-4 py-2 rounded-xl font-medium transition-colors ${\r\n                        rating > 0\r\n                          ? 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black'\r\n                          : 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed text-gray-500 dark:text-gray-400'\r\n                      }`}\r\n                    >\r\n                      Submit Rating\r\n                    </button>\r\n                    <button\r\n                      onClick={onClose}\r\n                      className=\"px-4 py-2 rounded-xl font-medium bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-900 dark:text-white transition-colors\"\r\n                    >\r\n                      Skip\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\n// Progress Modal Component\r\nconst ProgressModal = ({ isOpen, onClose, currentStep, position, error }) => {\r\n  const steps = [\r\n    { id: 'preparing', title: 'Preparing', icon: <Icons.Preparing /> },\r\n    { id: 'approval', title: 'Token Approval', icon: <Icons.Approval /> },\r\n    { id: 'removing', title: 'Removing Liquidity', icon: <Icons.Removing /> },\r\n    { id: 'confirming', title: 'Confirming', icon: <Icons.Confirming /> },\r\n    { id: 'completed', title: 'Completed', icon: <Icons.Completed /> }\r\n  ];\r\n\r\n  const isError = Boolean(error);\r\n\r\n  const formatErrorMessage = (error) => {\r\n    if (error?.includes('user rejected')) {\r\n      return 'Transaction was rejected. Please try again.';\r\n    }\r\n    return error?.replace(/\\{\"action\":\"sendTransaction\".*$/, '') || 'An error occurred';\r\n  };\r\n\r\n  return (\r\n    <Transition appear show={isOpen} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\r\n                >\r\n                  {isError ? 'Error Removing Liquidity' : 'Removing Liquidity'}\r\n                </Dialog.Title>\r\n\r\n                <div className=\"space-y-4\">\r\n                  {steps.map((step, index) => {\r\n                    const isActive = currentStep === step.id;\r\n                    const isCompleted = !isError && steps.findIndex(s => s.id === currentStep) > index;\r\n                    const isErrorStep = isError && currentStep === step.id;\r\n                    \r\n                    return (\r\n                      <div\r\n                        key={step.id}\r\n                        className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\r\n                          isActive && !isErrorStep ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : \r\n                          isCompleted ? 'text-[#00ffbd]' : \r\n                          isErrorStep ? 'bg-red-500/10 text-red-500' : \r\n                          'text-gray-400'\r\n                        }`}\r\n                      >\r\n                        {step.icon}\r\n                        <div className=\"flex-1\">\r\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{step.title}</span>\r\n                          {isActive && !isError && (\r\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                              {step.id === 'preparing' && 'Preparing transaction...'}\r\n                              {step.id === 'approval' && 'Approving removal...'}\r\n                              {step.id === 'removing' && 'Removing your liquidity...'}\r\n                              {step.id === 'confirming' && 'Waiting for confirmation...'}\r\n                              {step.id === 'completed' && 'Successfully removed liquidity!'}\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                        {isCompleted && (\r\n                          <svg className=\"w-5 h-5 text-[#00ffbd]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                          </svg>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {isError && (\r\n                  <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\r\n                    <div className=\"flex items-start gap-3\">\r\n                      <Icons.Error />\r\n                      <div className=\"flex-1\">\r\n                        <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\r\n                        <p className=\"mt-1 text-sm text-red-400\">\r\n                          {formatErrorMessage(error)}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-4 flex justify-end\">\r\n                      <button\r\n                        onClick={onClose}\r\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2\"\r\n                      >\r\n                        Close\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {currentStep === 'completed' && (\r\n                  <div className=\"mt-6\">\r\n                    <button\r\n                      onClick={onClose}\r\n                      className=\"w-full px-4 py-3 rounded-xl font-medium bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors text-black\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default function RemoveLiquidity() {\r\n  const { address } = useAccount();\r\n  const [position, setPosition] = useState(null);\r\n  const [lpTokenAmount, setLpTokenAmount] = useState('0.0');\r\n  const [loading, setLoading] = useState(false);\r\n  const [showProgressModal, setShowProgressModal] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(null);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [showRatingModal, setShowRatingModal] = useState(false);\r\n  const [removeError, setRemoveError] = useState(null);\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n\r\n  // Add window resize handler\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const handleRemoveLiquidity = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setShowProgressModal(true);\r\n      setCurrentStep('preparing');\r\n      setRemoveError(null);\r\n\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const signer = await provider.getSigner();\r\n      const positionManager = new V3PositionManager(signer);\r\n\r\n      if (!position?.tokenId) {\r\n        throw new Error('No position selected');\r\n      }\r\n\r\n      // Calculate liquidity to remove based on percentage\r\n      const percentage = parseFloat(lpTokenAmount) / 100;\r\n      const liquidityToRemove = BigInt(Math.floor(Number(position.liquidity) * percentage));\r\n\r\n      setCurrentStep('removing');\r\n\r\n      // Remove liquidity\r\n      const { amount0, amount1 } = await positionManager.decreaseLiquidity({\r\n        tokenId: position.tokenId,\r\n        liquidity: liquidityToRemove,\r\n        amount0Min: 0, // TODO: Add slippage protection\r\n        amount1Min: 0,\r\n        deadline: Math.floor(Date.now() / 1000) + 1200 // 20 minutes\r\n      });\r\n\r\n      // Collect the tokens\r\n      setCurrentStep('collecting');\r\n      await positionManager.collect({\r\n        tokenId: position.tokenId,\r\n        recipient: address,\r\n        amount0Max: amount0,\r\n        amount1Max: amount1\r\n      });\r\n\r\n      // If removing 100%, burn the position\r\n      if (percentage === 1) {\r\n        setCurrentStep('burning');\r\n        await positionManager.burn(position.tokenId);\r\n      }\r\n\r\n      console.log('Liquidity Removed:', {\r\n        tokenId: position.tokenId.toString(),\r\n        liquidityRemoved: liquidityToRemove.toString(),\r\n        amount0: ethers.formatUnits(amount0, position.token0.decimals),\r\n        amount1: ethers.formatUnits(amount1, position.token1.decimals)\r\n      });\r\n\r\n      setCurrentStep('completed');\r\n\r\n      // Show completed state briefly, then close modal and show confetti\r\n      setTimeout(() => {\r\n        setShowProgressModal(false);\r\n        setCurrentStep(null);\r\n        \r\n        // Show confetti after modal is closed\r\n        setTimeout(() => {\r\n          setShowConfetti(true);\r\n          \r\n          // Show rating modal after a short delay\r\n          setTimeout(() => {\r\n            setShowRatingModal(true);\r\n          }, 1000);\r\n          \r\n          // Reset form and cleanup after confetti\r\n          setTimeout(() => {\r\n            setPosition(null);\r\n            setLpTokenAmount('0.0');\r\n            setShowConfetti(false);\r\n          }, 30000);\r\n        }, 100);\r\n      }, 1000);\r\n\r\n    } catch (error) {\r\n      console.error('Remove liquidity error:', error);\r\n      setRemoveError(error.message);\r\n      setCurrentStep('error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRating = async (rating) => {\r\n    console.log('User rating:', rating);\r\n    // Implement rating logic here\r\n  };\r\n\r\n  const handleSetMaxAmount = () => {\r\n    // TODO: Set max LP token amount\r\n    setLpTokenAmount('0.0');\r\n  };\r\n\r\n  const handlePercentageClick = (percentage) => {\r\n    // TODO: Calculate LP token amount based on percentage\r\n    setLpTokenAmount((0.0 * percentage / 100).toFixed(6));\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Add Confetti component with higher z-index */}\r\n      {showConfetti && (\r\n        <Confetti\r\n          width={windowSize.width}\r\n          height={windowSize.height}\r\n          numberOfPieces={200}\r\n          recycle={false}\r\n          gravity={0.2}\r\n          initialVelocityX={10}\r\n          initialVelocityY={10}\r\n          colors={['#00ffbd', '#00e6a9', '#00cc95', '#00b381', '#00996d']}\r\n          style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            zIndex: 99999,\r\n            pointerEvents: 'none'\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {!address ? (\r\n        <div className=\"text-center py-8\">\r\n          <div className=\"mb-4\">\r\n            <BiWallet size={48} className=\"mx-auto text-gray-400 dark:text-gray-600\" />\r\n          </div>\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n            Connect Your Wallet\r\n          </h3>\r\n          <p className=\"text-gray-500 dark:text-gray-400 mb-6\">\r\n            Please connect your wallet to remove liquidity\r\n          </p>\r\n          <button\r\n            onClick={open}\r\n            className=\"px-6 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-semibold rounded-lg transition-colors\"\r\n          >\r\n            Connect Wallet\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Pool Selection */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              Select Pool\r\n            </label>\r\n            <button\r\n              onClick={() => {}} // TODO: Implement pool selection\r\n              className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800 hover:border-[#00ffbd] dark:hover:border-[#00ffbd] transition-colors flex items-center justify-between group\"\r\n            >\r\n              {position ? (\r\n                <div className=\"flex items-center gap-3\">\r\n                  <div className=\"flex -space-x-2\">\r\n                    <img\r\n                      src={getTokenLogo(position.token0)}\r\n                      alt={position.token0.symbol}\r\n                      className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n                    />\r\n                    <img\r\n                      src={getTokenLogo(position.token1)}\r\n                      alt={position.token1.symbol}\r\n                      className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\r\n                    />\r\n                  </div>\r\n                  <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                    {position.token0.symbol}/{position.token1.symbol}\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                <span className=\"text-gray-500\">Select Pool</span>\r\n              )}\r\n              <svg\r\n                className=\"w-5 h-5 text-gray-400 group-hover:text-[#00ffbd] transition-colors\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Percentage Selection */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              Select Percentage\r\n            </label>\r\n            <div className=\"grid grid-cols-4 gap-2\">\r\n              {[25, 50, 75, 100].map((percentage) => (\r\n                <button\r\n                  key={percentage}\r\n                  onClick={() => handlePercentageClick(percentage)}\r\n                  className=\"px-4 py-2 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800 hover:border-[#00ffbd] dark:hover:border-[#00ffbd] transition-colors text-gray-900 dark:text-white font-medium\"\r\n                >\r\n                  {percentage}%\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* LP Token Amount */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              LP Token Amount\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                value={lpTokenAmount}\r\n                onChange={(e) => setLpTokenAmount(e.target.value)}\r\n                placeholder=\"0.0\"\r\n                className=\"w-full px-4 py-3 bg-white/5 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 rounded-xl focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 pr-20\"\r\n              />\r\n              <button\r\n                onClick={handleSetMaxAmount}\r\n                className=\"absolute right-3 top-1/2 -translate-y-1/2 px-3 py-1 bg-[#00ffbd] hover:bg-[#00e6a9] text-black rounded-lg font-medium transition-colors text-sm\"\r\n              >\r\n                MAX\r\n              </button>\r\n            </div>\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              Balance: 0.0 LP Tokens\r\n            </div>\r\n          </div>\r\n\r\n          {/* You Will Receive */}\r\n          <div className=\"space-y-4 p-4 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800\">\r\n            <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              You Will Receive\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              {position && (\r\n                <>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <img\r\n                        src={getTokenLogo(position.token0)}\r\n                        alt={position.token0.symbol}\r\n                        className=\"w-6 h-6 rounded-full\"\r\n                      />\r\n                      <span className=\"text-gray-900 dark:text-white\">\r\n                        {position.token0.symbol}\r\n                      </span>\r\n                    </div>\r\n                    <span className=\"text-gray-900 dark:text-white font-medium\">\r\n                      0.000000\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <img\r\n                        src={getTokenLogo(position.token1)}\r\n                        alt={position.token1.symbol}\r\n                        className=\"w-6 h-6 rounded-full\"\r\n                      />\r\n                      <span className=\"text-gray-900 dark:text-white\">\r\n                        {position.token1.symbol}\r\n                      </span>\r\n                    </div>\r\n                    <span className=\"text-gray-900 dark:text-white font-medium\">\r\n                      0.000000\r\n                    </span>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Remove Liquidity Button */}\r\n          <button\r\n            onClick={handleRemoveLiquidity}\r\n            disabled={loading || !position || !lpTokenAmount || lpTokenAmount === '0.0'}\r\n            className={`w-full px-4 py-3 rounded-xl font-medium text-lg transition-colors\r\n              ${loading || !position || !lpTokenAmount || lpTokenAmount === '0.0'\r\n                ? 'bg-gray-300 dark:bg-gray-700 cursor-not-allowed text-gray-500 dark:text-gray-400'\r\n                : 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black'\r\n              }\r\n            `}\r\n          >\r\n            {loading ? 'Removing Liquidity...' : 'Remove Liquidity'}\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {/* Progress Modal */}\r\n      <ProgressModal\r\n        isOpen={showProgressModal}\r\n        onClose={() => {\r\n          setShowProgressModal(false);\r\n          setCurrentStep(null);\r\n          setRemoveError(null);\r\n        }}\r\n        currentStep={currentStep}\r\n        position={position}\r\n        error={removeError}\r\n      />\r\n\r\n      {/* Rating Modal */}\r\n      <StarRatingModal\r\n        isOpen={showRatingModal}\r\n        onClose={() => setShowRatingModal(false)}\r\n        onRate={handleRating}\r\n      />\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { useUniswap } from '../../hooks/useUniswap';\nimport { ethers } from 'ethers';\nimport { toast } from 'react-hot-toast';\nimport { getTokenLogo, getTokenMetadata } from '../../utils/tokens';\n\nconst ALCHEMY_API_KEY = import.meta.env.VITE_ALCHEMY_API_KEY;\n\n// Cache management for My Pools\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\nconst myPoolsCache = {\n  data: null,\n  timestamp: 0,\n  isValid() {\n    return this.data && (Date.now() - this.timestamp < CACHE_DURATION);\n  },\n  set(data) {\n    this.data = data;\n    this.timestamp = Date.now();\n    // Store in localStorage with BigInt handling\n    try {\n      const serializedData = JSON.stringify(data, (key, value) => {\n        // Convert BigInt to string with a special prefix\n        if (typeof value === 'bigint') {\n          return `bigint:${value.toString()}`;\n        }\n        return value;\n      });\n      localStorage.setItem('myPoolsCache', JSON.stringify({\n        data: serializedData,\n        timestamp: this.timestamp\n      }));\n    } catch (error) {\n      console.warn('Error saving to localStorage:', error);\n    }\n  },\n  load() {\n    try {\n      const stored = localStorage.getItem('myPoolsCache');\n      if (stored) {\n        const { data, timestamp } = JSON.parse(stored);\n        if (Date.now() - timestamp < CACHE_DURATION) {\n          // Parse the data and convert BigInt strings back to BigInt\n          this.data = JSON.parse(data, (key, value) => {\n            if (typeof value === 'string' && value.startsWith('bigint:')) {\n              return BigInt(value.slice(7));\n            }\n            return value;\n          });\n          this.timestamp = timestamp;\n          return true;\n        }\n      }\n    } catch (error) {\n      console.warn('Error loading from localStorage:', error);\n    }\n    return false;\n  },\n  clear() {\n    this.data = null;\n    this.timestamp = 0;\n    localStorage.removeItem('myPoolsCache');\n  }\n};\n\n// Token metadata cache with BigInt handling\nconst tokenMetadataCache = {\n  data: new Map(),\n  load() {\n    try {\n      const stored = localStorage.getItem('tokenMetadataCache');\n      if (stored) {\n        const parsed = JSON.parse(stored, (key, value) => {\n          if (typeof value === 'string' && value.startsWith('bigint:')) {\n            return BigInt(value.slice(7));\n          }\n          return value;\n        });\n        this.data = new Map(parsed);\n      }\n    } catch (error) {\n      console.warn('Error loading token metadata cache:', error);\n    }\n  },\n  set(address, metadata) {\n    this.data.set(address.toLowerCase(), metadata);\n    try {\n      const serialized = JSON.stringify([...this.data], (key, value) => {\n        if (typeof value === 'bigint') {\n          return `bigint:${value.toString()}`;\n        }\n        return value;\n      });\n      localStorage.setItem('tokenMetadataCache', serialized);\n    } catch (error) {\n      console.warn('Error saving token metadata cache:', error);\n    }\n  },\n  get(address) {\n    return this.data.get(address.toLowerCase());\n  }\n};\n\n// Load caches on module initialization\ntokenMetadataCache.load();\nmyPoolsCache.load();\n\nexport default function MyPools() {\n  const { address } = useAccount();\n  const uniswap = useUniswap();\n  const [pools, setPools] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchAddress, setSearchAddress] = useState('');\n\n  useEffect(() => {\n    const loadPools = async () => {\n      if (!address) {\n        console.log('No wallet address found');\n        return;\n      }\n      \n      setLoading(true);\n      try {\n        console.log('Connected wallet address:', address);\n        console.log('Starting to load pools...');\n\n        // Check cache first\n        if (myPoolsCache.isValid() && myPoolsCache.data) {\n          console.log('Returning pools from cache');\n          setPools(myPoolsCache.data);\n          setLoading(false);\n          return;\n        }\n\n        // Fetch pools using Alchemy API\n        const alchemyUrl = `https://eth-sepolia.g.alchemy.com/v2/${ALCHEMY_API_KEY}`;\n        \n        // First, get all token balances for the user\n        const balanceResponse = await fetch(alchemyUrl, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            jsonrpc: '2.0',\n            id: 1,\n            method: 'alchemy_getTokenBalances',\n            params: [address, 'erc20']\n          })\n        });\n\n        const balanceData = await balanceResponse.json();\n        console.log('Token balances:', balanceData);\n\n        if (balanceData.result?.tokenBalances) {\n          // Get token metadata for each balance\n          const tokenMetadataPromises = balanceData.result.tokenBalances\n            .filter(token => token.tokenBalance !== '0x0')\n            .map(async token => {\n              // Check token metadata cache first\n              const cachedMetadata = tokenMetadataCache.get(token.contractAddress);\n              if (cachedMetadata) {\n                return { result: cachedMetadata };\n              }\n\n              const response = await fetch(alchemyUrl, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                  jsonrpc: '2.0',\n                  id: 1,\n                  method: 'alchemy_getTokenMetadata',\n                  params: [token.contractAddress]\n                })\n              });\n              const metadata = await response.json();\n              if (metadata.result) {\n                tokenMetadataCache.set(token.contractAddress, metadata.result);\n              }\n              return metadata;\n            });\n\n          const tokenMetadata = await Promise.all(tokenMetadataPromises);\n          console.log('Token metadata:', tokenMetadata);\n\n          // Filter for Uniswap V2 LP tokens\n          const lpTokens = balanceData.result.tokenBalances\n            .filter((token, index) => \n              tokenMetadata[index]?.result?.symbol?.includes('UNI-V2')\n            );\n\n          console.log('LP tokens found:', lpTokens);\n\n          if (lpTokens.length > 0) {\n            // Get pool data for each LP token\n            const poolsData = await Promise.all(\n              lpTokens.map(async (token) => {\n                try {\n                  const poolAddress = token.contractAddress;\n                  console.log('Fetching data for pool:', poolAddress);\n                  const poolInfo = await uniswap.getPoolInfoByAddress(poolAddress);\n                  if (!poolInfo) {\n                    console.log('No pool info found for:', poolAddress);\n                    return null;\n                  }\n\n                  // Enhance token metadata\n                  const [token0Metadata, token1Metadata] = await Promise.all([\n                    getTokenMetadata(poolInfo.token0),\n                    getTokenMetadata(poolInfo.token1)\n                  ]);\n\n                  console.log('Pool info found:', {\n                    token0: token0Metadata?.symbol,\n                    token1: token1Metadata?.symbol,\n                    reserves: poolInfo.reserves\n                  });\n\n                  return {\n                    ...poolInfo,\n                    token0: token0Metadata,\n                    token1: token1Metadata,\n                    pairAddress: poolAddress,\n                    lpBalance: token.tokenBalance,\n                    createdAt: new Date(),\n                    reserves: {\n                      ...poolInfo.reserves,\n                      reserve0Formatted: ethers.formatUnits(poolInfo.reserves?.reserve0 || '0', token0Metadata?.decimals || 18),\n                      reserve1Formatted: ethers.formatUnits(poolInfo.reserves?.reserve1 || '0', token1Metadata?.decimals || 18)\n                    }\n                  };\n                } catch (err) {\n                  console.error(`Error fetching pool data:`, err);\n                  return null;\n                }\n              })\n            );\n\n            // Set pools data\n            const validPools = poolsData.filter(pool => pool !== null);\n            console.log('Setting pools:', validPools);\n            setPools(validPools);\n            \n            // Cache the valid pools\n            myPoolsCache.set(validPools);\n          }\n        }\n      } catch (error) {\n        console.error('Error loading pools:', error);\n        toast.error('Failed to load pools: ' + error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    loadPools();\n  }, [address, uniswap]);\n\n  const handleSearch = async () => {\n    if (!ethers.isAddress(searchAddress)) {\n      toast.error('Please enter a valid pool address');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const poolInfo = await uniswap.getPoolInfoByAddress(searchAddress);\n      if (!poolInfo) {\n        toast.error('No pool found at this address');\n        return;\n      }\n\n      // Enhance token metadata\n      const [token0Metadata, token1Metadata] = await Promise.all([\n        getTokenMetadata(poolInfo.token0),\n        getTokenMetadata(poolInfo.token1)\n      ]);\n\n      // Add the found pool to the list if it's not already there\n      setPools(prevPools => {\n        if (!prevPools.some(p => p.pairAddress.toLowerCase() === searchAddress.toLowerCase())) {\n          const newPool = {\n            ...poolInfo,\n            token0: token0Metadata,\n            token1: token1Metadata,\n            pairAddress: searchAddress,\n            reserves: {\n              ...poolInfo.reserves,\n              reserve0Formatted: ethers.formatUnits(poolInfo.reserves?.reserve0 || '0', token0Metadata?.decimals || 18),\n              reserve1Formatted: ethers.formatUnits(poolInfo.reserves?.reserve1 || '0', token1Metadata?.decimals || 18)\n            }\n          };\n          return [...prevPools, newPool];\n        }\n        return prevPools;\n      });\n      \n      toast.success('Pool found!');\n    } catch (error) {\n      console.error('Error searching pool:', error);\n      toast.error('Failed to fetch pool information');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!address) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-gray-500\">Please connect your wallet to view your pools</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Search Bar */}\n      <div className=\"flex gap-2\">\n        <input\n          type=\"text\"\n          value={searchAddress}\n          onChange={(e) => setSearchAddress(e.target.value)}\n          placeholder=\"Enter pool address...\"\n          className=\"flex-1 px-4 py-2 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800 focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent\"\n        />\n        <button\n          onClick={handleSearch}\n          disabled={loading}\n          className=\"px-4 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black rounded-xl font-medium transition-colors disabled:opacity-50\"\n        >\n          Search\n        </button>\n      </div>\n\n      {loading ? (\n        <div className=\"flex justify-center items-center min-h-[400px]\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-[#00ffbd]\"></div>\n        </div>\n      ) : pools.length === 0 ? (\n        <div className=\"text-center py-8\">\n          <p className=\"text-gray-500\">No pools found</p>\n          <p className=\"text-sm text-gray-400 mt-2\">Search for a pool by address or create a new one</p>\n        </div>\n      ) : (\n        pools.map((pool) => (\n          <div\n            key={pool.pairAddress}\n            className=\"p-4 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800\"\n          >\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"flex -space-x-2\">\n                  <img\n                    src={getTokenLogo(pool.token0)}\n                    alt={pool.token0?.symbol || 'ERC20 Token'}\n                    className=\"w-6 h-6 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\n                    onError={(e) => {\n                      e.target.onerror = null;\n                      e.target.src = '/token-default.png';\n                    }}\n                  />\n                  <img\n                    src={getTokenLogo(pool.token1)}\n                    alt={pool.token1?.symbol || 'ERC20 Token'}\n                    className=\"w-6 h-6 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\n                    onError={(e) => {\n                      e.target.onerror = null;\n                      e.target.src = '/token-default.png';\n                    }}\n                  />\n                </div>\n                <span className=\"font-medium text-gray-900 dark:text-white\">\n                  {pool.token0?.symbol || 'ERC20 Token'}/{pool.token1?.symbol || 'ERC20 Token'}\n                </span>\n              </div>\n              {pool.createdAt && (\n                <span className=\"text-sm text-gray-500\">\n                  Created {new Date(pool.createdAt).toLocaleDateString()}\n                </span>\n              )}\n            </div>\n\n            <div className=\"mt-2 text-xs text-gray-500 dark:text-gray-400 flex items-center gap-2\">\n              <span className=\"truncate\">{pool.pairAddress}</span>\n              <button\n                onClick={() => {\n                  navigator.clipboard.writeText(pool.pairAddress);\n                  toast.success('Address copied to clipboard!');\n                }}\n                className=\"p-1.5 hover:bg-white/10 rounded-lg transition-colors\"\n                title=\"Copy address\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n                  <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\n                </svg>\n              </button>\n            </div>\n\n            {pool.reserves && (\n              <div className=\"grid grid-cols-2 gap-4 mt-4\">\n                <div>\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {pool.token0?.symbol || 'ERC20 Token'} Reserves\n                  </div>\n                  <div className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                    {pool.reserves.reserve0Formatted}\n                  </div>\n                </div>\n                <div>\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {pool.token1?.symbol || 'ERC20 Token'} Reserves\n                  </div>\n                  <div className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                    {pool.reserves.reserve1Formatted}\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {pool.lpBalance && (\n              <div className=\"mt-4 p-3 bg-gray-50 dark:bg-[#1a1b1f] rounded-lg\">\n                <div className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n                  Your LP Balance\n                </div>\n                <div className=\"font-medium text-gray-900 dark:text-white\">\n                  {ethers.formatUnits(pool.lpBalance || '0', 18)} LP Tokens\n                </div>\n              </div>\n            )}\n          </div>\n        ))\n      )}\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { ethers } from 'ethers';\nimport { toast } from 'react-hot-toast';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { getTokenDeploymentByAddress } from '../../../../services/firebase';\nimport { useUnichain } from '../../../../hooks/useUnichain';\nimport { UNISWAP_ADDRESSES } from '../../../../services/unichain/uniswap';\nimport { FaSearch } from 'react-icons/fa';\nimport { getTokenLogo, getTokenMetadata } from '../../../../utils/tokens';\n\n// Constants and configuration\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes in milliseconds\n\n// Add network constants\nconst UNICHAIN_NETWORKS = {\n  TESTNET: {\n    id: 1301,\n    name: 'Unichain Testnet',\n    blockscoutUrl: 'https://unichain-sepolia.blockscout.com'\n  },\n  MAINNET: {\n    id: 130,\n    name: 'Unichain Mainnet',\n    blockscoutUrl: 'https://unichain.blockscout.com'\n  }\n};\n\n// Common tokens with metadata per network\nconst COMMON_TOKENS = {\n  // Testnet tokens (1301)\n  1301: [\n    {\n      address: UNISWAP_ADDRESSES[1301].WETH,\n      symbol: 'ETH',\n      name: 'Ethereum',\n      decimals: 18,\n      logo: '/logos/eth.png'\n    },\n    {\n      address: '0x31d0220469e10c4E71834a79b1f276d740d3768F',\n      symbol: 'USDC',\n      name: 'USD Coin',\n      decimals: 6,\n      logo: '/logos/usdc.png'\n    },\n    {\n      address: UNISWAP_ADDRESSES[1301].USDT,\n      symbol: 'USDT',\n      name: 'Tether USD',\n      decimals: 6,\n      logo: '/logos/usdt.png'\n    }\n  ],\n  // Mainnet tokens (130)\n  130: [\n    {\n      address: UNISWAP_ADDRESSES[130].WETH,\n      symbol: 'ETH',\n      name: 'Ethereum',\n      decimals: 18,\n      logo: '/logos/eth.png'\n    },\n    {\n      address: UNISWAP_ADDRESSES[130].USDT,\n      symbol: 'USDT',\n      name: 'Tether USD',\n      decimals: 6,\n      logo: '/logos/usdt.png'\n    }\n  ]\n};\n\n// Helper function to get token metadata based on network\nconst getCommonTokenMetadata = (token, chainId) => {\n  // Check if it's a common token for the current network\n  const commonToken = COMMON_TOKENS[chainId]?.find(t => t.address?.toLowerCase() === token.address?.toLowerCase());\n  if (commonToken) {\n    return {\n      ...token,\n      ...commonToken,\n      logo: commonToken.logo\n    };\n  }\n\n  return token;\n};\n\n/**\n * Cache management for My Pools\n * Handles caching of pool data with BigInt support\n */\nconst myPoolsCache = {\n  data: null,\n  timestamp: 0,\n  isValid() {\n    return this.data && (Date.now() - this.timestamp < CACHE_DURATION);\n  },\n  set(data) {\n    this.data = data;\n    this.timestamp = Date.now();\n    // Store in localStorage with BigInt handling\n    try {\n      const serializedData = JSON.stringify(data, (key, value) => {\n        // Convert BigInt to string with a special prefix\n        if (typeof value === 'bigint') {\n          return `bigint:${value.toString()}`;\n        }\n        return value;\n      });\n      localStorage.setItem('myPoolsCache_unichain', JSON.stringify({\n        data: serializedData,\n        timestamp: this.timestamp\n      }));\n    } catch (error) {\n      console.warn('Error saving to localStorage:', error);\n    }\n  },\n  load() {\n    try {\n      const stored = localStorage.getItem('myPoolsCache_unichain');\n      if (stored) {\n        const { data, timestamp } = JSON.parse(stored);\n        if (Date.now() - timestamp < CACHE_DURATION) {\n          // Parse the data and convert BigInt strings back to BigInt\n          this.data = JSON.parse(data, (key, value) => {\n            if (typeof value === 'string' && value.startsWith('bigint:')) {\n              return BigInt(value.slice(7));\n            }\n            return value;\n          });\n          this.timestamp = timestamp;\n          return true;\n        }\n      }\n    } catch (error) {\n      console.warn('Error loading from localStorage:', error);\n    }\n    return false;\n  },\n  clear() {\n    this.data = null;\n    this.timestamp = 0;\n    localStorage.removeItem('myPoolsCache_unichain');\n  }\n};\n\n/**\n * Token metadata cache with BigInt handling\n * Caches token metadata to reduce API calls\n */\nconst tokenMetadataCache = {\n  data: new Map(),\n  load() {\n    try {\n      const stored = localStorage.getItem('tokenMetadataCache_unichain');\n      if (stored) {\n        const parsed = JSON.parse(stored, (key, value) => {\n          if (typeof value === 'string' && value.startsWith('bigint:')) {\n            return BigInt(value.slice(7));\n          }\n          return value;\n        });\n        this.data = new Map(parsed);\n      }\n    } catch (error) {\n      console.warn('Error loading token metadata cache:', error);\n    }\n  },\n  set(address, metadata) {\n    this.data.set(address.toLowerCase(), metadata);\n    try {\n      const serialized = JSON.stringify([...this.data], (key, value) => {\n        if (typeof value === 'bigint') {\n          return `bigint:${value.toString()}`;\n        }\n        return value;\n      });\n      localStorage.setItem('tokenMetadataCache_unichain', serialized);\n    } catch (error) {\n      console.warn('Error saving token metadata cache:', error);\n    }\n  },\n  get(address) {\n    return this.data.get(address.toLowerCase());\n  }\n};\n\n// Initialize caches on module load\ntokenMetadataCache.load();\nmyPoolsCache.load();\n\n// Add PoolSkeleton component\nconst PoolSkeleton = () => (\n  <motion.div\n    initial={{ opacity: 0 }}\n    animate={{ opacity: 1 }}\n    className=\"bg-white/5 dark:bg-[#1a1b1f] rounded-xl p-6 border border-gray-200 dark:border-gray-800 w-full\"\n  >\n    <div className=\"flex items-center justify-between mb-4\">\n      <div className=\"flex items-center gap-2\">\n        <div className=\"flex -space-x-2\">\n          <div className=\"w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-800 animate-pulse\" />\n          <div className=\"w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-800 animate-pulse\" />\n        </div>\n        <div className=\"w-24 h-6 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n      </div>\n    </div>\n    <div className=\"space-y-3\">\n      <div className=\"flex justify-between text-sm\">\n        <div className=\"w-20 h-4 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n        <div className=\"w-32 h-4 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n      </div>\n      <div className=\"flex justify-between text-sm\">\n        <div className=\"w-20 h-4 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n        <div className=\"w-32 h-4 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n      </div>\n    </div>\n    <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-800\">\n      <div className=\"w-full h-4 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n    </div>\n  </motion.div>\n);\n\n/**\n * MyPools Component\n * Displays user's liquidity pools and their details\n */\nexport default function MyPools() {\n  // State and hooks\n  const { address } = useAccount();\n  const uniswap = useUnichain();\n  const [pools, setPools] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchAddress, setSearchAddress] = useState('');\n  const [currentChainId, setCurrentChainId] = useState(null);\n  const [error, setError] = useState('');\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const poolVariants = {\n    hidden: { \n      opacity: 0,\n      y: 20\n    },\n    show: { \n      opacity: 1,\n      y: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 100,\n        damping: 15\n      }\n    },\n    hover: {\n      scale: 1.02,\n      transition: {\n        type: \"spring\",\n        stiffness: 400,\n        damping: 10\n      }\n    }\n  };\n\n  // Get current chain ID\n  useEffect(() => {\n    const getChainId = async () => {\n      if (!window.ethereum) return;\n      try {\n        const hexChainId = await window.ethereum.request({ method: 'eth_chainId' });\n        setCurrentChainId(parseInt(hexChainId, 16));\n      } catch (error) {\n        console.error('Error getting chain ID:', error);\n      }\n    };\n    getChainId();\n\n    // Listen for chain changes\n    if (window.ethereum) {\n      window.ethereum.on('chainChanged', (chainId) => {\n        setCurrentChainId(parseInt(chainId, 16));\n      });\n    }\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('chainChanged', () => {});\n      }\n    };\n  }, []);\n\n  // Load pools data\n  useEffect(() => {\n    const loadPools = async () => {\n      if (!address || !uniswap || !currentChainId) {\n        return;\n      }\n\n      // Check if we're on a supported network\n      const isUnichain = currentChainId === UNICHAIN_NETWORKS.TESTNET.id || \n                        currentChainId === UNICHAIN_NETWORKS.MAINNET.id;\n      \n      if (!isUnichain) {\n        setError('Please switch to Unichain network (Testnet or Mainnet)');\n        setPools([]);\n        return;\n      }\n      \n      setLoading(true);\n      setError('');\n      \n      try {\n        // Check cache first\n        if (myPoolsCache.isValid() && myPoolsCache.data) {\n          setPools(myPoolsCache.data);\n          setLoading(false);\n          return;\n        }\n\n        // Get the correct Blockscout URL for the current network\n        const blockscoutUrl = currentChainId === UNICHAIN_NETWORKS.TESTNET.id\n          ? UNICHAIN_NETWORKS.TESTNET.blockscoutUrl\n          : UNICHAIN_NETWORKS.MAINNET.blockscoutUrl;\n\n        // Fetch LP tokens from Blockscout API\n        const response = await fetch(`${blockscoutUrl}/api/v2/addresses/${address}/token-balances`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch token balances from Blockscout');\n        }\n        \n        const tokens = await response.json();\n        \n        // Filter for LP tokens (UNI-V2 tokens)\n        const lpTokens = tokens.filter(item => \n          item.token?.type === 'ERC-20' && \n          item.value && \n          item.token.address &&\n          (item.token.symbol === 'UNI-V2' || item.token.name?.includes('Uniswap V2'))\n        ).map(item => item.token.address);\n\n        if (!lpTokens || lpTokens.length === 0) {\n          setPools([]);\n          return;\n        }\n\n        // Get pool information for each LP token\n        const poolsData = await Promise.all(\n          lpTokens.map(async (poolAddress) => {\n            try {\n              // Get pool info\n              const poolInfo = await uniswap.getPoolInfoByAddress(poolAddress);\n              if (!poolInfo) {\n                return null;\n              }\n\n              // Get token metadata from Firebase first\n              const [token0Firebase, token1Firebase] = await Promise.all([\n                getTokenDeploymentByAddress(poolInfo.token0.address),\n                getTokenDeploymentByAddress(poolInfo.token1.address)\n              ]);\n\n              // Merge Firebase data with contract data and check for common tokens\n              const token0Metadata = getCommonTokenMetadata({\n                ...poolInfo.token0,\n                name: token0Firebase?.name || poolInfo.token0.name,\n                symbol: token0Firebase?.symbol || poolInfo.token0.symbol,\n                decimals: token0Firebase?.decimals || poolInfo.token0.decimals,\n                logo: token0Firebase?.logo || '/token-default.png',\n                logoIpfs: token0Firebase?.logoIpfs\n              }, currentChainId);\n\n              const token1Metadata = getCommonTokenMetadata({\n                ...poolInfo.token1,\n                name: token1Firebase?.name || poolInfo.token1.name,\n                symbol: token1Firebase?.symbol || poolInfo.token1.symbol,\n                decimals: token1Firebase?.decimals || poolInfo.token1.decimals,\n                logo: token1Firebase?.logo || '/token-default.png',\n                logoIpfs: token1Firebase?.logoIpfs\n              }, currentChainId);\n\n              return {\n                pairAddress: poolAddress,\n                token0: token0Metadata,\n                token1: token1Metadata,\n                reserves: poolInfo.reserves,\n                createdAt: poolInfo.createdAt || Math.floor(Date.now() / 1000),\n                volumes: {\n                  oneDay: 0,\n                  sevenDay: 0,\n                  thirtyDay: 0,\n                  oneDayTxCount: 0,\n                  sevenDayTxCount: 0,\n                  thirtyDayTxCount: 0\n                }\n              };\n            } catch (error) {\n              console.error('Error fetching pool info:', error);\n              return null;\n            }\n          })\n        );\n\n        // Filter out null values and sort by TVL\n        const validPools = poolsData\n          .filter(pool => pool !== null)\n          .sort((a, b) => (b.tvl || 0) - (a.tvl || 0));\n          \n        setPools(validPools);\n        \n        // Cache the valid pools\n        myPoolsCache.set(validPools);\n      } catch (error) {\n        console.error('Error loading pools:', error);\n        toast.error('Failed to load pools: ' + error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadPools();\n  }, [uniswap, address, currentChainId]);\n\n  // Filter pools based on search term\n  const filteredPools = pools.filter(pool => {\n    const searchLower = searchAddress.toLowerCase();\n    return (\n      pool.token0?.symbol?.toLowerCase().includes(searchLower) ||\n      pool.token1?.symbol?.toLowerCase().includes(searchLower) ||\n      pool.pairAddress.toLowerCase().includes(searchLower)\n    );\n  });\n\n  // Utility functions\n  const formatNumber = (value) => {\n    if (!value && value !== 0) return '-';\n    \n    if (value >= 1000000) {\n      return `${(value / 1000000).toFixed(2)}M`;\n    } else if (value >= 1000) {\n      return `${(value / 1000).toFixed(2)}K`;\n    } else {\n      return value.toFixed(2);\n    }\n  };\n\n  const isPoolOlderThan = (createdAt, days) => {\n    if (!createdAt) return false;\n    const now = Math.floor(Date.now() / 1000);\n    const daysInSeconds = days * 24 * 60 * 60;\n    return (now - createdAt) >= daysInSeconds;\n  };\n\n  // Render loading state\n  if (!address) {\n    return (\n      <div className=\"text-center py-8 text-gray-500\">\n        Please connect your wallet to view your pools\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <motion.div \n        variants={containerVariants}\n        initial=\"hidden\"\n        animate=\"show\"\n        className=\"grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 max-w-full\"\n      >\n        {[1, 2, 3, 4, 5, 6].map((i) => (\n          <PoolSkeleton key={i} />\n        ))}\n      </motion.div>\n    );\n  }\n\n  if (pools.length === 0) {\n    return (\n      <div className=\"text-center py-8 text-gray-500\">\n        No pools found. Create a pool to get started!\n      </div>\n    );\n  }\n\n  // Main render\n  return (\n    <motion.div \n      initial=\"hidden\"\n      animate=\"show\"\n      variants={containerVariants}\n      className=\"space-y-6 overflow-x-hidden overflow-y-auto\"\n    >\n      {/* Network Status */}\n      {error && (\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"p-4 rounded-xl bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-900/30 text-red-700 dark:text-red-400\"\n        >\n          {error}\n        </motion.div>\n      )}\n\n      {/* Current Network Indicator */}\n      {currentChainId && (UNICHAIN_NETWORKS.TESTNET.id === currentChainId || UNICHAIN_NETWORKS.MAINNET.id === currentChainId) && (\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"px-4 py-2 rounded-xl bg-[#00ffbd]/10 border border-[#00ffbd]/20 text-[#00ffbd] text-sm inline-flex items-center gap-2\"\n        >\n          <div className=\"w-2 h-2 rounded-full bg-[#00ffbd] animate-pulse\" />\n          {currentChainId === UNICHAIN_NETWORKS.TESTNET.id ? 'Unichain Testnet' : 'Unichain Mainnet'}\n        </motion.div>\n      )}\n\n      {/* Search Bar */}\n      <motion.div \n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n        className=\"relative\"\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Search by token symbol or pool address...\"\n          value={searchAddress}\n          onChange={(e) => setSearchAddress(e.target.value)}\n          className=\"w-full px-4 py-2 pl-10 bg-white/5 dark:bg-[#1a1b1f] rounded-xl border border-gray-200 dark:border-gray-800 focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-gray-900 dark:text-white\"\n        />\n        <FaSearch className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\n      </motion.div>\n\n      {loading ? (\n        <motion.div \n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          className=\"flex justify-center items-center min-h-[400px]\"\n        >\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-[#00ffbd]\"></div>\n        </motion.div>\n      ) : pools.length === 0 ? (\n        <motion.div \n          initial={{ opacity: 0, scale: 0.9 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.5 }}\n          className=\"text-center py-8 text-gray-500 dark:text-gray-400\"\n        >\n          No pools found\n        </motion.div>\n      ) : (\n        <motion.div \n          variants={containerVariants}\n          className=\"grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 max-w-full\"\n        >\n          <AnimatePresence>\n            {pools.map((pool) => (\n              <motion.div\n                key={pool.pairAddress}\n                variants={poolVariants}\n                whileHover=\"hover\"\n                layout\n                className=\"bg-white/5 dark:bg-[#1a1b1f] rounded-xl p-6 border border-gray-200 dark:border-gray-800 w-full\"\n              >\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"flex -space-x-2\">\n                      <img\n                        src={getTokenLogo(pool.token0)}\n                        alt={pool.token0?.symbol}\n                        className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\n                      />\n                      <img\n                        src={getTokenLogo(pool.token1)}\n                        alt={pool.token1?.symbol}\n                        className=\"w-8 h-8 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\"\n                      />\n                    </div>\n                    <span className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                      {pool.token0?.symbol}/{pool.token1?.symbol}\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span className=\"text-gray-500 dark:text-gray-400\">Token 0 Reserve:</span>\n                    <span className=\"text-gray-900 dark:text-white font-medium\">\n                      {ethers.formatUnits(pool.reserves?.reserve0 || '0', pool.token0?.decimals || 18)} {pool.token0?.symbol}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between text-sm\">\n                    <span className=\"text-gray-500 dark:text-gray-400\">Token 1 Reserve:</span>\n                    <span className=\"text-gray-900 dark:text-white font-medium\">\n                      {ethers.formatUnits(pool.reserves?.reserve1 || '0', pool.token1?.decimals || 18)} {pool.token1?.symbol}\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-800\">\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">\n                    {pool.pairAddress}\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </AnimatePresence>\n        </motion.div>\n      )}\n    </motion.div>\n  );\n} ","import React, { useState, useEffect, Fragment } from 'react';\nimport { useAccount } from 'wagmi';\nimport { usePublicClient, useWalletClient } from 'wagmi';\nimport { ethers } from 'ethers';\nimport { toast } from 'react-hot-toast';\nimport { BiWallet, BiDotsHorizontalRounded } from 'react-icons/bi';\nimport { FaExchangeAlt, FaStar, FaGasPump, FaChartLine } from 'react-icons/fa';\nimport { Menu, Transition, Dialog } from '@headlessui/react';\nimport { getTokenLogo } from '../../../../utils/tokens';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\nimport { formatUnits, parseUnits } from '@ethersproject/units';\nimport { V3PositionManager } from '../../../../services/unichain/v3/positionManager';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// NFTPositionManager ABI (we'll need the relevant functions)\nconst NFT_POSITION_MANAGER_ABI = [\n  // ERC721Enumerable functions\n  {\n    \"inputs\": [{\"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\"}],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{\"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\"}, {\"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\"}],\n    \"name\": \"tokenOfOwnerByIndex\",\n    \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\"}],\n    \"name\": \"positions\",\n    \"outputs\": [\n      {\"internalType\": \"uint96\", \"name\": \"nonce\", \"type\": \"uint96\"},\n      {\"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\"},\n      {\"internalType\": \"address\", \"name\": \"token0\", \"type\": \"address\"},\n      {\"internalType\": \"address\", \"name\": \"token1\", \"type\": \"address\"},\n      {\"internalType\": \"uint24\", \"name\": \"fee\", \"type\": \"uint24\"},\n      {\"internalType\": \"int24\", \"name\": \"tickLower\", \"type\": \"int24\"},\n      {\"internalType\": \"int24\", \"name\": \"tickUpper\", \"type\": \"int24\"},\n      {\"internalType\": \"uint128\", \"name\": \"liquidity\", \"type\": \"uint128\"},\n      {\"internalType\": \"uint256\", \"name\": \"feeGrowthInside0LastX128\", \"type\": \"uint256\"},\n      {\"internalType\": \"uint256\", \"name\": \"feeGrowthInside1LastX128\", \"type\": \"uint256\"},\n      {\"internalType\": \"uint128\", \"name\": \"tokensOwed0\", \"type\": \"uint128\"},\n      {\"internalType\": \"uint128\", \"name\": \"tokensOwed1\", \"type\": \"uint128\"}\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];\n\nconst FACTORY_ADDRESS = \"0x1f984000000000000000000000000000000000003\";\nconst NFT_POSITION_MANAGER_ADDRESS = \"0xb7610f9b733e7d45184be3a1bc8a847be6ec4f0b\";\n\n// Add Factory ABI at the top with other ABIs\nconst FACTORY_ABI = [\n  \"function getPool(address tokenA, address tokenB, uint24 fee) view returns (address pool)\"\n];\n\n// Add Pool ABI for fetching amounts\nconst POOL_ABI = [\n  \"function slot0() external view returns (uint160 sqrtPriceX96, int24 tick, uint16 observationIndex, uint16 observationCardinality, uint16 observationCardinalityNext, uint8 feeProtocol, bool unlocked)\",\n  \"function liquidity() external view returns (uint128)\",\n  \"function positions(bytes32 key) external view returns (uint128 liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128, uint128 tokensOwed0, uint128 tokensOwed1)\",\n  \"function ticks(int24 tick) external view returns (uint128 liquidityGross, int128 liquidityNet, uint256 feeGrowthOutside0X128, uint256 feeGrowthOutside1X128, int56 tickCumulativeOutside, uint160 secondsPerLiquidityOutsideX128, uint32 secondsOutside, bool initialized)\"\n];\n\n// Add NFT metadata ABI\nconst NFT_METADATA_ABI = [\n  \"function tokenURI(uint256 tokenId) view returns (string)\"\n];\n\n// Constants for tick math\nconst Q96 = BigInt(2) ** BigInt(96);\nconst Q32 = BigInt(2) ** BigInt(32);\n\n// Helper function to calculate sqrt price from tick\nconst getSqrtRatioAtTick = (tick) => {\n  const absTick = tick < 0 ? tick * -1 : tick;\n  let ratio = BigInt(1001) * Q32 / BigInt(1000);\n  \n  if ((absTick & 0x1) !== 0) {\n    ratio = (ratio * BigInt(1001)) / BigInt(1000);\n  }\n  if ((absTick & 0x2) !== 0) {\n    ratio = (ratio * BigInt(1002)) / BigInt(1000);\n  }\n  if ((absTick & 0x4) !== 0) {\n    ratio = (ratio * BigInt(1005)) / BigInt(1000);\n  }\n  if ((absTick & 0x8) !== 0) {\n    ratio = (ratio * BigInt(1010)) / BigInt(1000);\n  }\n  if ((absTick & 0x10) !== 0) {\n    ratio = (ratio * BigInt(1020)) / BigInt(1000);\n  }\n  if ((absTick & 0x20) !== 0) {\n    ratio = (ratio * BigInt(1040)) / BigInt(1000);\n  }\n  if ((absTick & 0x40) !== 0) {\n    ratio = (ratio * BigInt(1080)) / BigInt(1000);\n  }\n  if ((absTick & 0x80) !== 0) {\n    ratio = (ratio * BigInt(1160)) / BigInt(1000);\n  }\n  if ((absTick & 0x100) !== 0) {\n    ratio = (ratio * BigInt(1340)) / BigInt(1000);\n  }\n  if ((absTick & 0x200) !== 0) {\n    ratio = (ratio * BigInt(1800)) / BigInt(1000);\n  }\n  if ((absTick & 0x400) !== 0) {\n    ratio = (ratio * BigInt(3240)) / BigInt(1000);\n  }\n  if ((absTick & 0x800) !== 0) {\n    ratio = (ratio * BigInt(10500)) / BigInt(1000);\n  }\n  if ((absTick & 0x1000) !== 0) {\n    ratio = (ratio * BigInt(110000)) / BigInt(1000);\n  }\n  if ((absTick & 0x2000) !== 0) {\n    ratio = (ratio * BigInt(12100000)) / BigInt(1000);\n  }\n\n  if (tick > 0) {\n    ratio = BigInt(\"0xffffffffffffffffffffffffffffffff\") / ratio;\n  }\n\n  return ratio * Q32;\n};\n\nconst getAmount0FromTick = (sqrtPriceX96, tickLower, tickUpper, liquidity) => {\n  try {\n    const sqrtPriceCurrent = BigInt(sqrtPriceX96.toString());\n    const sqrtPriceLower = getSqrtRatioAtTick(Number(tickLower));\n    const sqrtPriceUpper = getSqrtRatioAtTick(Number(tickUpper));\n    const liquidityBn = BigInt(liquidity.toString());\n\n    if (sqrtPriceCurrent <= sqrtPriceLower) {\n      // Price is below range\n      const amount = liquidityBn * Q96 * (sqrtPriceUpper - sqrtPriceLower);\n      return amount / (sqrtPriceLower * sqrtPriceUpper);\n    } else if (sqrtPriceCurrent < sqrtPriceUpper) {\n      // Price is in range\n      const amount = liquidityBn * Q96 * (sqrtPriceUpper - sqrtPriceCurrent);\n      return amount / (sqrtPriceCurrent * sqrtPriceUpper);\n    }\n    // Price is above range\n    return BigInt(0);\n  } catch (error) {\n    console.error('Error in getAmount0FromTick:', error);\n    return BigInt(0);\n  }\n};\n\nconst getAmount1FromTick = (sqrtPriceX96, tickLower, tickUpper, liquidity) => {\n  try {\n    const sqrtPriceCurrent = BigInt(sqrtPriceX96.toString());\n    const sqrtPriceLower = getSqrtRatioAtTick(Number(tickLower));\n    const sqrtPriceUpper = getSqrtRatioAtTick(Number(tickUpper));\n    const liquidityBn = BigInt(liquidity.toString());\n\n    if (sqrtPriceCurrent <= sqrtPriceLower) {\n      // Price is below range\n      return BigInt(0);\n    } else if (sqrtPriceCurrent < sqrtPriceUpper) {\n      // Price is in range\n      return (liquidityBn * (sqrtPriceCurrent - sqrtPriceLower)) / Q96;\n    }\n    // Price is above range\n    return (liquidityBn * (sqrtPriceUpper - sqrtPriceLower)) / Q96;\n  } catch (error) {\n    console.error('Error in getAmount1FromTick:', error);\n    return BigInt(0);\n  }\n};\n\nconst formatBigInt = (value, decimals = 18) => {\n  if (!value) return '0';\n  try {\n    // Remove scientific notation and ensure we have a string\n    const valueString = value.toString();\n    \n    // Convert to a number with proper decimal places\n    const formatted = Number(formatUnits(valueString, decimals));\n    \n    // Format the number based on its size\n    if (formatted < 0.0001) {\n      return '< 0.0001';\n    } else if (formatted < 1) {\n      return formatted.toFixed(4);\n    } else if (formatted < 1000) {\n      return formatted.toFixed(2);\n    } else if (formatted < 1000000) {\n      return formatted.toLocaleString(undefined, { \n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2 \n      });\n    } else {\n      // For very large numbers, use K/M/B notation\n      if (formatted >= 1000000000) {\n        return (formatted / 1000000000).toFixed(2) + 'B';\n      } else if (formatted >= 1000000) {\n        return (formatted / 1000000).toFixed(2) + 'M';\n      } else {\n        return (formatted / 1000).toFixed(2) + 'K';\n      }\n    }\n  } catch (error) {\n    console.error('Error formatting BigInt:', error);\n    return '0';\n  }\n};\n\n// Helper function to get NFT image URL\nconst getNFTImageUrl = (tokenId) => {\n  return `https://nft.uniswap.org/#/${NFT_POSITION_MANAGER_ADDRESS}/${tokenId}`;\n};\n\n// Add helper function to check if position is in range\nconst isPositionInRange = (position, currentTick) => {\n  return currentTick >= position.tickLower && currentTick <= position.tickUpper;\n};\n\n// Add progress steps at the top of the file\nconst PROGRESS_STEPS = {\n  PREPARING: 'preparing',\n  APPROVAL: 'approval',\n  ADDING: 'adding',\n  CONFIRMING: 'confirming',\n  COMPLETED: 'completed',\n  ERROR: 'error'\n};\n\n// Add Icons at the top of the file\nconst Icons = {\n  Preparing: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path className=\"animate-pulse\" d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path className=\"animate-[spin_3s_linear_infinite]\" d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2\" strokeLinecap=\"round\" />\n        <circle cx=\"12\" cy=\"12\" r=\"4\" className=\"animate-[pulse_2s_ease-in-out_infinite]\" />\n      </g>\n    </svg>\n  ),\n  Approval: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 8v8m-4-4h8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.6s_ease-in-out]\" />\n        <path d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" className=\"animate-[pulse_2s_ease-in-out_infinite]\" />\n      </g>\n    </svg>\n  ),\n  Adding: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 8v8m-4-4h8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.6s_ease-in-out]\" />\n        <path d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" className=\"animate-[pulse_2s_ease-in-out_infinite]\" />\n      </g>\n    </svg>\n  ),\n  Confirming: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n        <path strokeLinecap=\"round\" className=\"origin-center animate-[spin_2s_linear_infinite]\"\n          d=\"M12 6v6l4 4\" />\n      </g>\n    </svg>\n  ),\n  Completed: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <path d=\"M20 6L9 17L4 12\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </svg>\n  ),\n  Error: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <path d=\"M12 8v5M12 16.5v.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" stroke=\"currentColor\" strokeWidth={1.5} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </svg>\n  )\n};\n\nfunction PositionCard({ position, onAction }) {\n  const [nftImage, setNftImage] = useState(null);\n  const { data: walletClient } = useWalletClient();\n  const [currentTick, setCurrentTick] = useState(null);\n\n  useEffect(() => {\n    const fetchNFTMetadata = async () => {\n      try {\n        const provider = new ethers.BrowserProvider(walletClient.transport);\n        const nftContract = new ethers.Contract(\n          NFT_POSITION_MANAGER_ADDRESS,\n          NFT_METADATA_ABI,\n          provider\n        );\n\n        // Fetch token URI with error handling\n        const tokenURI = await nftContract.tokenURI(position.tokenId).catch(() => null);\n        \n        if (!tokenURI) return;\n\n        // Handle both base64 and IPFS URIs\n        let metadata;\n        if (tokenURI.startsWith('data:application/json;base64,')) {\n          // Base64 encoded metadata\n          const base64Data = tokenURI.split(',')[1];\n          if (!base64Data) return;\n          \n          try {\n            const jsonString = atob(base64Data);\n            metadata = JSON.parse(jsonString);\n          } catch {\n            return;\n          }\n        } else {\n          // IPFS or HTTP URI\n          try {\n            const response = await fetch(tokenURI);\n            if (!response.ok) return;\n            metadata = await response.json();\n          } catch {\n            return;\n          }\n        }\n\n        if (metadata?.image) {\n          setNftImage(metadata.image);\n        }\n      } catch {\n        // Silent fail - NFT image will show loading state\n      }\n    };\n\n    if (position?.tokenId && walletClient) {\n      fetchNFTMetadata();\n    }\n  }, [position?.tokenId, walletClient]);\n\n  useEffect(() => {\n    const fetchPoolData = async () => {\n      try {\n        const provider = new ethers.BrowserProvider(walletClient.transport);\n        const factoryContract = new ethers.Contract(\n          FACTORY_ADDRESS,\n          FACTORY_ABI,\n          provider\n        );\n        \n        const poolAddress = await factoryContract.getPool(\n          position.token0.address,\n          position.token1.address,\n          position.fee\n        );\n\n        const poolContract = new ethers.Contract(poolAddress, POOL_ABI, provider);\n        const slot0 = await poolContract.slot0();\n        setCurrentTick(slot0.tick);\n      } catch {\n        // Silent fail - UI will handle undefined currentTick gracefully\n      }\n    };\n\n    if (position && walletClient) {\n      fetchPoolData();\n    }\n  }, [position, walletClient]);\n\n  // Calculate price range for display\n  const getPriceRange = () => {\n    const priceLower = Math.pow(1.0001, position.tickLower);\n    const priceUpper = Math.pow(1.0001, position.tickUpper);\n    return {\n      min: priceLower < 0.01 ? '< 0.01' : priceLower.toFixed(2),\n      max: priceUpper > 999999 ? '∞' : priceUpper.toFixed(2)\n    };\n  };\n\n  const priceRange = getPriceRange();\n\n  return (\n    <div className=\"p-3 rounded-xl bg-white/5 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 max-w-2xl mx-auto\">\n      <div className=\"flex items-start gap-4\">\n        {/* NFT Preview */}\n        <a \n          href={`https://app.uniswap.org/#/pool/${position.tokenId}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"relative w-[140px] h-full rounded-lg overflow-hidden flex-shrink-0 hover:ring-2 hover:ring-[#00ffbd] transition-all\"\n        >\n          {nftImage ? (\n            <img \n              src={nftImage}\n              alt={`Position #${position.tokenId}`}\n              className=\"w-full h-full object-cover\"\n            />\n          ) : (\n            <div className=\"w-full h-full flex items-center justify-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#00ffbd]\" />\n            </div>\n          )}\n        </a>\n\n        <div className=\"flex-1\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"flex -space-x-2\">\n                <img src={getTokenLogo(position.token0)} alt={position.token0.symbol} className=\"w-6 h-6 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\" />\n                <img src={getTokenLogo(position.token1)} alt={position.token1.symbol} className=\"w-6 h-6 rounded-full ring-2 ring-white dark:ring-[#1a1b1f]\" />\n              </div>\n              <div>\n                <div className=\"font-medium text-sm text-gray-900 dark:text-white\">\n                  {position.token0.symbol}/{position.token1.symbol}\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  {currentTick !== null && (\n                    <div className=\"flex items-center gap-1.5\">\n                      <div className={`w-2 h-2 rounded-full ${isPositionInRange(position, currentTick) ? 'bg-[#00ffbd] shadow-[0_0_8px_#00ffbd]' : 'bg-gray-400'}`} />\n                      <span className=\"text-xs text-[#00ffbd]\">\n                        {isPositionInRange(position, currentTick) ? 'In range' : 'Out of range'}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <Menu as=\"div\" className=\"relative\">\n              <Menu.Button className=\"p-1.5 rounded-lg hover:bg-gray-100 dark:hover:bg-[#1c2433] transition-colors\">\n                <BiDotsHorizontalRounded className=\"w-5 h-5 text-[#00ffbd]\" />\n              </Menu.Button>\n              <Transition\n                as={Fragment}\n                enter=\"transition ease-out duration-100\"\n                enterFrom=\"transform opacity-0 scale-95\"\n                enterTo=\"transform opacity-100 scale-100\"\n                leave=\"transition ease-in duration-75\"\n                leaveFrom=\"transform opacity-100 scale-100\"\n                leaveTo=\"transform opacity-0 scale-95\"\n              >\n                <Menu.Items className=\"absolute right-0 mt-1 w-60 origin-top-right rounded-2xl bg-white dark:bg-[#1a1b1f] shadow-lg border border-gray-200 dark:border-gray-800 focus:outline-none\">\n                  <div className=\"p-2 space-y-1\">\n                    <Menu.Item>\n                      {({ active }) => (\n                        <button\n                          onClick={() => onAction('add', position)}\n                          className={`${\n                            active ? 'bg-gray-100 dark:bg-[#2d2f36]' : ''\n                          } group flex w-full items-center gap-3 rounded-xl px-3 py-2.5 text-sm text-gray-900 dark:text-white`}\n                        >\n                          <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-[#00ffbd]/10\">\n                            <span className=\"text-lg text-[#00ffbd]\">+</span>\n                          </div>\n                          <div className=\"flex flex-col items-start\">\n                            <span className=\"font-medium\">Add liquidity</span>\n                            <span className=\"text-xs text-gray-500\">Add more liquidity to this position</span>\n                          </div>\n                        </button>\n                      )}\n                    </Menu.Item>\n                    <Menu.Item>\n                      {({ active }) => (\n                        <button\n                          onClick={() => onAction('remove', position)}\n                          className={`${\n                            active ? 'bg-gray-100 dark:bg-[#2d2f36]' : ''\n                          } group flex w-full items-center gap-3 rounded-xl px-3 py-2.5 text-sm text-gray-900 dark:text-white`}\n                        >\n                          <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-[#00ffbd]/10\">\n                            <span className=\"text-lg text-[#00ffbd]\">-</span>\n                          </div>\n                          <div className=\"flex flex-col items-start\">\n                            <span className=\"font-medium\">Remove liquidity</span>\n                            <span className=\"text-xs text-gray-500\">Remove liquidity from this position</span>\n                          </div>\n                        </button>\n                      )}\n                    </Menu.Item>\n                    <Menu.Item>\n                      {({ active }) => (\n                        <button\n                          onClick={() => onAction('collect', position)}\n                          className={`${\n                            active ? 'bg-gray-100 dark:bg-[#2d2f36]' : ''\n                          } group flex w-full items-center gap-3 rounded-xl px-3 py-2.5 text-sm text-gray-900 dark:text-white`}\n                        >\n                          <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-[#00ffbd]/10\">\n                            <img \n                              src=\"/unichain-logo.png\" \n                              alt=\"Unichain\" \n                              className=\"w-5 h-5\"\n                            />\n                          </div>\n                          <div className=\"flex flex-col items-start\">\n                            <span className=\"font-medium\">Collect fees</span>\n                            <span className=\"text-xs text-gray-500\">Collect accumulated fees</span>\n                          </div>\n                        </button>\n                      )}\n                    </Menu.Item>\n                  </div>\n                </Menu.Items>\n              </Transition>\n            </Menu>\n          </div>\n          \n          <div className=\"space-y-2\">\n            {/* Pool Share */}\n            <div className=\"p-2 rounded-lg bg-[#00ffbd]\">\n              <div className=\"text-xs text-black mb-0.5\">\n                Pool Share\n              </div>\n              <div className=\"font-medium text-sm text-black\">\n                {(position.positionShare * 100).toFixed(4)}%\n              </div>\n            </div>\n\n            {/* Token Amounts */}\n            <div className=\"grid grid-cols-2 gap-2\">\n              <div className=\"p-2 rounded-lg bg-gray-100 dark:bg-[#1c2433]\">\n                <div className=\"text-xs text-gray-500 dark:text-gray-400 mb-0.5\">\n                  {position.token0.symbol}\n                </div>\n                <div className=\"font-medium text-sm text-gray-900 dark:text-white\">\n                  {formatBigInt(position.amount0, position.token0.decimals)}\n                </div>\n              </div>\n              <div className=\"p-2 rounded-lg bg-gray-100 dark:bg-[#1c2433]\">\n                <div className=\"text-xs text-gray-500 dark:text-gray-400 mb-0.5\">\n                  {position.token1.symbol}\n                </div>\n                <div className=\"font-medium text-sm text-gray-900 dark:text-white\">\n                  {formatBigInt(position.amount1, position.token1.decimals)}\n                </div>\n              </div>\n            </div>\n\n            {/* Unclaimed Fees */}\n            <div className=\"p-2 rounded-lg bg-gray-100 dark:bg-[#1c2433]\">\n              <div className=\"text-xs text-gray-500 dark:text-gray-400 mb-0.5\">\n                Unclaimed fees\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"font-medium text-sm text-gray-900 dark:text-white\">\n                  {formatBigInt(position.fees0, position.token0.decimals)} {position.token0.symbol}\n                </div>\n                <div className=\"font-medium text-sm text-gray-900 dark:text-white\">\n                  {formatBigInt(position.fees1, position.token1.decimals)} {position.token1.symbol}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction AddLiquidityModal({ isOpen, onClose, position }) {\n  const [amount0, setAmount0] = useState('');\n  const [amount1, setAmount1] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [balance0, setBalance0] = useState('0');\n  const [balance1, setBalance1] = useState('0');\n  const [currentTick, setCurrentTick] = useState(null);\n  const [sqrtPriceX96, setSqrtPriceX96] = useState(null);\n  const { data: walletClient } = useWalletClient();\n  const { address } = useAccount();\n  const [currentStep, setCurrentStep] = useState(PROGRESS_STEPS.PREPARING);\n  const [error, setError] = useState(null);\n\n  // Calculate the price from sqrtPriceX96\n  const calculatePrice = (sqrtPriceX96) => {\n    if (!sqrtPriceX96) return 0;\n    const price = (Number(sqrtPriceX96) * Number(sqrtPriceX96) * (10 ** (position?.token0?.decimals - position?.token1?.decimals))) / (2 ** 192);\n    return price;\n  };\n\n  // Calculate token amounts based on price and position range\n  const calculateAmounts = (amount, isToken0) => {\n    if (!sqrtPriceX96 || !position) return '0';\n    \n    const price = calculatePrice(sqrtPriceX96);\n    if (isToken0) {\n      // If token0 amount is input, calculate token1 amount\n      const token1Amount = Number(amount) * price;\n      return token1Amount.toFixed(position.token1.decimals);\n    } else {\n      // If token1 amount is input, calculate token0 amount\n      const token0Amount = Number(amount) / price;\n      return token0Amount.toFixed(position.token0.decimals);\n    }\n  };\n\n  // Handle input changes\n  const handleAmount0Change = (value) => {\n    setAmount0(value);\n    if (value && !isNaN(value)) {\n      setAmount1(calculateAmounts(value, true));\n    } else {\n      setAmount1('');\n    }\n  };\n\n  const handleAmount1Change = (value) => {\n    setAmount1(value);\n    if (value && !isNaN(value)) {\n      setAmount0(calculateAmounts(value, false));\n    } else {\n      setAmount0('');\n    }\n  };\n\n  useEffect(() => {\n    const fetchPoolData = async () => {\n      if (!walletClient || !position) return;\n      \n      try {\n        const provider = new ethers.BrowserProvider(walletClient.transport);\n        const factoryContract = new ethers.Contract(\n          FACTORY_ADDRESS,\n          FACTORY_ABI,\n          provider\n        );\n        \n        const poolAddress = await factoryContract.getPool(\n          position.token0.address,\n          position.token1.address,\n          position.fee\n        );\n\n        const poolContract = new ethers.Contract(poolAddress, POOL_ABI, provider);\n        const slot0 = await poolContract.slot0();\n        setCurrentTick(slot0.tick);\n        setSqrtPriceX96(slot0.sqrtPriceX96);\n      } catch (error) {\n        console.error('Error fetching pool data:', error);\n      }\n    };\n\n    fetchPoolData();\n  }, [walletClient, position]);\n\n  const handleAddLiquidity = async () => {\n    if (!walletClient || !position) {\n      toast.error('Wallet not connected or position not found');\n      return;\n    }\n\n    setIsLoading(true);\n    setCurrentStep(PROGRESS_STEPS.PREPARING);\n    setError(null);\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      \n      // Create position manager instance with signer\n      const positionManager = new V3PositionManager(signer);\n\n      // Parse amounts with proper decimals\n      const parsedAmount0 = ethers.parseUnits(\n        Number(amount0).toFixed(position.token0.decimals),\n        position.token0.decimals\n      );\n      const parsedAmount1 = ethers.parseUnits(\n        Number(amount1).toFixed(position.token1.decimals),\n        position.token1.decimals\n      );\n\n      // Check and set allowances if needed\n      setCurrentStep(PROGRESS_STEPS.APPROVAL);\n\n      // Create token contracts with signer for approvals\n      const token0Contract = new ethers.Contract(\n        position.token0.address,\n        [\"function approve(address spender, uint256 amount) public returns (bool)\"],\n        signer\n      );\n      const token1Contract = new ethers.Contract(\n        position.token1.address,\n        [\"function approve(address spender, uint256 amount) public returns (bool)\"],\n        signer\n      );\n\n      // Approve tokens\n      const tx0 = await token0Contract.approve(NFT_POSITION_MANAGER_ADDRESS, ethers.MaxUint256);\n      await tx0.wait();\n      const tx1 = await token1Contract.approve(NFT_POSITION_MANAGER_ADDRESS, ethers.MaxUint256);\n      await tx1.wait();\n\n      setCurrentStep(PROGRESS_STEPS.ADDING);\n\n      // Format parameters for increasing liquidity\n      const params = {\n        tokenId: position.tokenId,\n        amount0Desired: parsedAmount0,\n        amount1Desired: parsedAmount1,\n        amount0Min: 0,\n        amount1Min: 0,\n        deadline: Math.floor(Date.now() / 1000) + 1200 // 20 minutes\n      };\n\n      // Create NFT position manager contract\n      const nftManager = new ethers.Contract(\n        NFT_POSITION_MANAGER_ADDRESS,\n        [\n          \"function increaseLiquidity((uint256 tokenId, uint256 amount0Desired, uint256 amount1Desired, uint256 amount0Min, uint256 amount1Min, uint256 deadline)) external payable returns (uint128 liquidity, uint256 amount0, uint256 amount1)\"\n        ],\n        signer\n      );\n\n      // Increase liquidity\n      const tx = await nftManager.increaseLiquidity(params);\n      \n      setCurrentStep(PROGRESS_STEPS.CONFIRMING);\n      await tx.wait();\n\n      setCurrentStep(PROGRESS_STEPS.COMPLETED);\n      toast.success('Successfully added liquidity');\n      onClose();\n    } catch (error) {\n      console.error('Error adding liquidity:', error);\n      setError(error.message);\n      setCurrentStep(PROGRESS_STEPS.ERROR);\n      toast.error('Failed to add liquidity: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      if (!walletClient || !position || !address) return;\n      \n      try {\n        const provider = new ethers.BrowserProvider(walletClient.transport);\n        const token0Contract = new ethers.Contract(\n          position.token0.address,\n          [\"function balanceOf(address) view returns (uint256)\"],\n          provider\n        );\n        const token1Contract = new ethers.Contract(\n          position.token1.address,\n          [\"function balanceOf(address) view returns (uint256)\"],\n          provider\n        );\n\n        const [bal0, bal1] = await Promise.all([\n          token0Contract.balanceOf(address),\n          token1Contract.balanceOf(address)\n        ]);\n\n        setBalance0(formatBigInt(bal0, position.token0.decimals));\n        setBalance1(formatBigInt(bal1, position.token1.decimals));\n      } catch (error) {\n        console.error('Error fetching balances:', error);\n      }\n    };\n\n    fetchBalances();\n  }, [walletClient, position, address]);\n\n  return (\n    <Dialog open={isOpen} onClose={onClose} className=\"relative z-50\">\n      <div className=\"fixed inset-0 bg-black/30\" aria-hidden=\"true\" />\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-md rounded-2xl bg-white dark:bg-[#0D0D0D] p-4 shadow-xl\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center gap-4\">\n              <button onClick={onClose} className=\"p-1 hover:opacity-80\">\n                <XMarkIcon className=\"h-6 w-6 text-gray-900 dark:text-white\" />\n              </button>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"relative\">\n                  <div className=\"flex -space-x-1\">\n                    <img src={getTokenLogo(position?.token0)} alt={position?.token0?.symbol} className=\"w-8 h-8 rounded-full\" />\n                    <img src={getTokenLogo(position?.token1)} alt={position?.token1?.symbol} className=\"w-8 h-8 rounded-full\" />\n                  </div>\n                  <div className=\"absolute -bottom-1 -right-1\">\n                    <img src=\"/unichain-logo.png\" alt=\"Unichain\" className=\"w-4 h-4\" />\n                  </div>\n                </div>\n                <div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-base font-medium text-gray-900 dark:text-white\">\n                      {position?.token0?.symbol}/{position?.token1?.symbol}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    {currentTick !== null && (\n                      <span className=\"text-xs text-[#00ffbd]\">\n                        {isPositionInRange(position, currentTick) ? 'In range' : 'Out of range'}\n                      </span>\n                    )}\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      v3 {(position?.fee / 10000).toFixed(2)}%\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-[#2D2D2D]\">\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-gray-900 dark:text-white\">\n                <path d=\"M12 13.75C12.9665 13.75 13.75 12.9665 13.75 12C13.75 11.0335 12.9665 10.25 12 10.25C11.0335 10.25 10.25 11.0335 10.25 12C10.25 12.9665 11.0335 13.75 12 13.75Z\" fill=\"currentColor\"/>\n                <path d=\"M19 13.75C19.9665 13.75 20.75 12.9665 20.75 12C20.75 11.0335 19.9665 10.25 19 10.25C18.0335 10.25 17.25 11.0335 17.25 12C17.25 12.9665 18.0335 13.75 19 13.75Z\" fill=\"currentColor\"/>\n                <path d=\"M5 13.75C5.9665 13.75 6.75 12.9665 6.75 12C6.75 11.0335 5.9665 10.25 5 10.25C4.0335 10.25 3.25 11.0335 3.25 12C3.25 12.9665 4.0335 13.75 5 13.75Z\" fill=\"currentColor\"/>\n              </svg>\n            </button>\n          </div>\n\n          {/* Input Fields */}\n          <div className=\"space-y-3\">\n            {/* Token0 Input */}\n            <div className=\"p-4 rounded-2xl bg-gray-100 dark:bg-[#1c1c1c]\">\n              <div className=\"flex items-center justify-between mb-1\">\n                <div className=\"flex items-center gap-2\">\n                  <img src={getTokenLogo(position?.token0)} alt={position?.token0?.symbol} className=\"w-6 h-6 rounded-full\" />\n                  <span className=\"text-gray-900 dark:text-white font-medium\">{position?.token0?.symbol}</span>\n                </div>\n                <button \n                  onClick={() => handleAmount0Change(balance0)}\n                  className=\"text-sm text-[#00ffbd] hover:text-[#00ffbd]/80\"\n                >\n                  Balance: {balance0}\n                </button>\n              </div>\n              <input\n                type=\"number\"\n                value={amount0}\n                onChange={(e) => handleAmount0Change(e.target.value)}\n                className=\"w-full bg-transparent text-2xl text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 outline-none\"\n                placeholder=\"0\"\n              />\n              <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">$0</div>\n            </div>\n\n            {/* Token1 Input */}\n            <div className=\"p-4 rounded-2xl bg-gray-100 dark:bg-[#1c1c1c]\">\n              <div className=\"flex items-center justify-between mb-1\">\n                <div className=\"flex items-center gap-2\">\n                  <img src={getTokenLogo(position?.token1)} alt={position?.token1?.symbol} className=\"w-6 h-6 rounded-full\" />\n                  <span className=\"text-gray-900 dark:text-white font-medium\">{position?.token1?.symbol}</span>\n                </div>\n                <button \n                  onClick={() => handleAmount1Change(balance1)}\n                  className=\"text-sm text-[#00ffbd] hover:text-[#00ffbd]/80\"\n                >\n                  Balance: {balance1}\n                </button>\n              </div>\n              <input\n                type=\"number\"\n                value={amount1}\n                onChange={(e) => handleAmount1Change(e.target.value)}\n                className=\"w-full bg-transparent text-2xl text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 outline-none\"\n                placeholder=\"0\"\n              />\n              <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">$0</div>\n            </div>\n\n            {/* Current Position Details */}\n            <div className=\"p-4 rounded-xl bg-gray-100 dark:bg-[#1c1c1c] space-y-3\">\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Current Position</div>\n              \n              {/* Pool Share */}\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">Pool Share</span>\n                <span className=\"font-medium text-gray-900 dark:text-white\">\n                  {(position?.positionShare * 100).toFixed(4)}%\n                </span>\n              </div>\n\n              {/* Token 0 Position */}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <img src={getTokenLogo(position?.token0)} alt={position?.token0?.symbol} className=\"w-5 h-5 rounded-full\" />\n                  <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    Current {position?.token0?.symbol}\n                  </span>\n                </div>\n                <span className=\"font-medium text-gray-900 dark:text-white\">\n                  {formatBigInt(position?.amount0, position?.token0?.decimals)}\n                </span>\n              </div>\n\n              {/* Token 1 Position */}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <img src={getTokenLogo(position?.token1)} alt={position?.token1?.symbol} className=\"w-5 h-5 rounded-full\" />\n                  <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    Current {position?.token1?.symbol}\n                  </span>\n                </div>\n                <span className=\"font-medium text-gray-900 dark:text-white\">\n                  {formatBigInt(position?.amount1, position?.token1?.decimals)}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Add Button */}\n          <button\n            onClick={handleAddLiquidity}\n            disabled={!amount0 || !amount1 || isLoading}\n            className={`w-full mt-4 px-4 py-3 text-base font-medium rounded-2xl ${\n              !amount0 || !amount1\n                ? 'bg-gray-200 dark:bg-[#2D2D2D] text-gray-400 cursor-not-allowed'\n                : 'bg-[#00ffbd] text-black hover:bg-[#00ffbd]/90'\n            }`}\n          >\n            {isLoading ? (\n              <div className=\"flex items-center justify-center gap-2\">\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-black\" />\n                <span>Adding...</span>\n              </div>\n            ) : (\n              'Add'\n            )}\n          </button>\n\n          {/* Progress Modal */}\n          <Transition appear show={isLoading} as={Fragment}>\n            <Dialog\n              as=\"div\"\n              className=\"relative z-50\"\n              onClose={() => {\n                if (currentStep === PROGRESS_STEPS.COMPLETED || currentStep === PROGRESS_STEPS.ERROR) {\n                  setIsLoading(false);\n                }\n              }}\n            >\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0\"\n                enterTo=\"opacity-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100\"\n                leaveTo=\"opacity-0\"\n              >\n                <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n              </Transition.Child>\n\n              <div className=\"fixed inset-0 overflow-y-auto\">\n                <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n                  <Transition.Child\n                    as={Fragment}\n                    enter=\"ease-out duration-300\"\n                    enterFrom=\"opacity-0 scale-95\"\n                    enterTo=\"opacity-100 scale-100\"\n                    leave=\"ease-in duration-200\"\n                    leaveFrom=\"opacity-100 scale-100\"\n                    leaveTo=\"opacity-0 scale-95\"\n                  >\n                    <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#0a0b0f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-[#00ffbd]/20\">\n                      <Dialog.Title\n                        as=\"h3\"\n                        className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\n                      >\n                        {error ? 'Error Adding Liquidity' : 'Adding Liquidity'}\n                        {!error && position && (\n                          <div className=\"mt-2 text-base font-normal text-gray-500 dark:text-[#98A1C0]\">\n                            {position.token0.symbol}/{position.token1.symbol}\n                          </div>\n                        )}\n                      </Dialog.Title>\n\n                      <div className=\"space-y-4\">\n                        {[\n                          { step: PROGRESS_STEPS.PREPARING, title: 'Preparing', icon: Icons.Preparing },\n                          { step: PROGRESS_STEPS.APPROVAL, title: 'Token Approval', icon: Icons.Approval },\n                          { step: PROGRESS_STEPS.ADDING, title: 'Adding Liquidity', icon: Icons.Adding },\n                          { step: PROGRESS_STEPS.CONFIRMING, title: 'Confirming', icon: Icons.Confirming },\n                          { step: PROGRESS_STEPS.COMPLETED, title: 'Completed', icon: Icons.Completed }\n                        ].map(({ step, title, icon: Icon }) => {\n                          const isActive = currentStep === step;\n                          const isCompleted = !error && Object.values(PROGRESS_STEPS).indexOf(currentStep) > Object.values(PROGRESS_STEPS).indexOf(step);\n                          const isErrorStep = error && currentStep === step;\n                          \n                          return (\n                            <div\n                              key={step}\n                              className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\n                                isActive\n                                  ? 'bg-[#00ffbd]/10 text-[#00ffbd]'\n                                  : isCompleted\n                                  ? 'text-[#00ffbd]'\n                                  : isErrorStep\n                                  ? 'bg-red-500/10 text-red-500'\n                                  : 'text-gray-400'\n                              }`}\n                            >\n                              <Icon />\n                              <div className=\"flex-1\">\n                                <span className=\"font-medium text-gray-900 dark:text-white\">{title}</span>\n                                {isActive && !error && (\n                                  <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                                    {step === PROGRESS_STEPS.PREPARING && 'Preparing transaction...'}\n                                    {step === PROGRESS_STEPS.APPROVAL && `Approving ${position?.token0?.symbol} and ${position?.token1?.symbol}`}\n                                    {step === PROGRESS_STEPS.ADDING && (\n                                      <span className=\"flex items-center gap-2\">\n                                        Adding liquidity to {position?.token0?.symbol}/{position?.token1?.symbol} pool\n                                      </span>\n                                    )}\n                                    {step === PROGRESS_STEPS.CONFIRMING && 'Waiting for confirmation...'}\n                                    {step === PROGRESS_STEPS.COMPLETED && (\n                                      <span className=\"flex items-center gap-2\">\n                                        Successfully added liquidity to {position?.token0?.symbol}/{position?.token1?.symbol} pool!\n                                      </span>\n                                    )}\n                                  </p>\n                                )}\n                              </div>\n                              {isCompleted && (\n                                <svg className=\"w-5 h-5 text-[#00ffbd]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                              )}\n                            </div>\n                          );\n                        })}\n\n                        {error && (\n                          <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\n                            <div className=\"flex items-start gap-3\">\n                              <Icons.Error />\n                              <div className=\"flex-1\">\n                                <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\n                                <p className=\"mt-1 text-sm text-red-400\">\n                                  {error}\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n\n                      {(currentStep === PROGRESS_STEPS.COMPLETED || error) && (\n                        <div className=\"mt-6\">\n                          <button\n                            onClick={() => setIsLoading(false)}\n                            className=\"w-full px-4 py-3 rounded-xl font-medium bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors text-black\"\n                          >\n                            Close\n                          </button>\n                        </div>\n                      )}\n                    </Dialog.Panel>\n                  </Transition.Child>\n                </div>\n              </div>\n            </Dialog>\n          </Transition>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n}\n\nfunction RemoveLiquidityModal({ isOpen, onClose, position }) {\n  const [percentage, setPercentage] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const { data: walletClient } = useWalletClient();\n  const [currentStep, setCurrentStep] = useState(PROGRESS_STEPS.PREPARING);\n  const [error, setError] = useState(null);\n  const [amount0, setAmount0] = useState('0');\n  const [amount1, setAmount1] = useState('0');\n\n  // Calculate amounts based on percentage\n  useEffect(() => {\n    if (position && percentage) {\n      const amount0Value = (BigInt(position.amount0) * BigInt(percentage)) / BigInt(100);\n      const amount1Value = (BigInt(position.amount1) * BigInt(percentage)) / BigInt(100);\n      setAmount0(formatBigInt(amount0Value, position.token0.decimals));\n      setAmount1(formatBigInt(amount1Value, position.token1.decimals));\n    } else {\n      setAmount0('0');\n      setAmount1('0');\n    }\n  }, [percentage, position]);\n\n  const handleRemoveLiquidity = async () => {\n    if (!walletClient || !position) {\n      toast.error('Wallet not connected or position not found');\n      return;\n    }\n\n    setIsLoading(true);\n    setCurrentStep(PROGRESS_STEPS.PREPARING);\n    setError(null);\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      // Calculate liquidity to remove based on percentage\n      const liquidityToRemove = (BigInt(position.liquidity) * BigInt(percentage)) / BigInt(100);\n\n      setCurrentStep(PROGRESS_STEPS.ADDING);\n\n      // Create NFT position manager contract\n      const nftManager = new ethers.Contract(\n        NFT_POSITION_MANAGER_ADDRESS,\n        [\n          \"function decreaseLiquidity((uint256 tokenId, uint128 liquidity, uint256 amount0Min, uint256 amount1Min, uint256 deadline)) external payable returns (uint256 amount0, uint256 amount1)\"\n        ],\n        signer\n      );\n\n      // Format parameters for decreasing liquidity\n      const params = {\n        tokenId: position.tokenId,\n        liquidity: liquidityToRemove,\n        amount0Min: 0,\n        amount1Min: 0,\n        deadline: Math.floor(Date.now() / 1000) + 1200 // 20 minutes\n      };\n\n      // Remove liquidity\n      const tx = await nftManager.decreaseLiquidity(params);\n      \n      setCurrentStep(PROGRESS_STEPS.CONFIRMING);\n      await tx.wait();\n\n      setCurrentStep(PROGRESS_STEPS.COMPLETED);\n      toast.success('Successfully removed liquidity');\n      onClose();\n    } catch (error) {\n      console.error('Error removing liquidity:', error);\n      setError(error.message);\n      setCurrentStep(PROGRESS_STEPS.ERROR);\n      toast.error('Failed to remove liquidity: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onClose={onClose} className=\"relative z-50\">\n      <div className=\"fixed inset-0 bg-black/30\" aria-hidden=\"true\" />\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-md rounded-2xl bg-white dark:bg-[#0D0D0D] p-4 shadow-xl\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center gap-4\">\n              <button onClick={onClose} className=\"p-1 hover:opacity-80\">\n                <XMarkIcon className=\"h-6 w-6 text-gray-900 dark:text-white\" />\n              </button>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"relative\">\n                  <div className=\"flex -space-x-1\">\n                    <img src={getTokenLogo(position?.token0)} alt={position?.token0?.symbol} className=\"w-8 h-8 rounded-full\" />\n                    <img src={getTokenLogo(position?.token1)} alt={position?.token1?.symbol} className=\"w-8 h-8 rounded-full\" />\n                  </div>\n                  <div className=\"absolute -bottom-1 -right-1\">\n                    <img src=\"/unichain-logo.png\" alt=\"Unichain\" className=\"w-4 h-4\" />\n                  </div>\n                </div>\n                <div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-base font-medium text-gray-900 dark:text-white\">\n                      {position?.token0?.symbol}/{position?.token1?.symbol}\n                    </span>\n                  </div>\n                  <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    v3 {(position?.fee / 10000).toFixed(2)}%\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Percentage Selection */}\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-sm font-medium text-gray-900 dark:text-white\">Amount to remove</span>\n                <span className=\"text-sm text-[#00ffbd]\">{percentage}%</span>\n              </div>\n              <div className=\"grid grid-cols-4 gap-2\">\n                {[25, 50, 75, 100].map((value) => (\n                  <button\n                    key={value}\n                    onClick={() => setPercentage(value)}\n                    className={`p-2 text-sm font-medium rounded-xl transition-colors ${\n                      percentage === value\n                        ? 'bg-[#00ffbd] text-black'\n                        : 'bg-gray-100 dark:bg-[#1c1c1c] text-gray-900 dark:text-white hover:bg-[#00ffbd]/10 dark:hover:bg-[#00ffbd]/10'\n                    }`}\n                  >\n                    {value}%\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Current Position Details */}\n            <div className=\"p-4 rounded-xl bg-gray-100 dark:bg-[#1c1c1c] space-y-3\">\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Current Position</div>\n              \n              {/* Pool Share */}\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">Pool Share</span>\n                <span className=\"font-medium text-gray-900 dark:text-white\">\n                  {(position?.positionShare * 100).toFixed(4)}%\n                </span>\n              </div>\n\n              {/* Token 0 Position */}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <img src={getTokenLogo(position?.token0)} alt={position?.token0?.symbol} className=\"w-5 h-5 rounded-full\" />\n                  <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    Current {position?.token0?.symbol}\n                  </span>\n                </div>\n                <span className=\"font-medium text-gray-900 dark:text-white\">\n                  {formatBigInt(position?.amount0, position?.token0?.decimals)}\n                </span>\n              </div>\n\n              {/* Token 1 Position */}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <img src={getTokenLogo(position?.token1)} alt={position?.token1?.symbol} className=\"w-5 h-5 rounded-full\" />\n                  <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    Current {position?.token1?.symbol}\n                  </span>\n                </div>\n                <span className=\"font-medium text-gray-900 dark:text-white\">\n                  {formatBigInt(position?.amount1, position?.token1?.decimals)}\n                </span>\n              </div>\n            </div>\n\n            {/* Amount Preview */}\n            <div className=\"p-4 rounded-xl bg-gray-100 dark:bg-[#1c1c1c] space-y-3\">\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">You will receive:</div>\n              \n              {/* Token 0 */}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <img src={getTokenLogo(position?.token0)} alt={position?.token0?.symbol} className=\"w-5 h-5 rounded-full\" />\n                  <span className=\"font-medium text-gray-900 dark:text-white\">\n                    {position?.token0?.symbol}\n                  </span>\n                </div>\n                <span className=\"font-medium text-gray-900 dark:text-white\">\n                  {amount0}\n                </span>\n              </div>\n\n              {/* Token 1 */}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <img src={getTokenLogo(position?.token1)} alt={position?.token1?.symbol} className=\"w-5 h-5 rounded-full\" />\n                  <span className=\"font-medium text-gray-900 dark:text-white\">\n                    {position?.token1?.symbol}\n                  </span>\n                </div>\n                <span className=\"font-medium text-gray-900 dark:text-white\">\n                  {amount1}\n                </span>\n              </div>\n            </div>\n\n            {/* Remove Button */}\n            <button\n              onClick={handleRemoveLiquidity}\n              disabled={!percentage || isLoading}\n              className={`w-full mt-2 px-4 py-3 text-base font-medium rounded-xl transition-colors ${\n                !percentage\n                  ? 'bg-gray-100 dark:bg-[#1c1c1c] text-gray-400 cursor-not-allowed'\n                  : 'bg-[#00ffbd] text-black hover:bg-[#00ffbd]/90'\n              }`}\n            >\n              {isLoading ? (\n                <div className=\"flex items-center justify-center gap-2\">\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-black\" />\n                  <span>Removing...</span>\n                </div>\n              ) : (\n                'Remove'\n              )}\n            </button>\n          </div>\n\n          {/* Progress Modal */}\n          <Transition appear show={isLoading} as={Fragment}>\n            <Dialog\n              as=\"div\"\n              className=\"relative z-50\"\n              onClose={() => {\n                if (currentStep === PROGRESS_STEPS.COMPLETED || currentStep === PROGRESS_STEPS.ERROR) {\n                  setIsLoading(false);\n                }\n              }}\n            >\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0\"\n                enterTo=\"opacity-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100\"\n                leaveTo=\"opacity-0\"\n              >\n                <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n              </Transition.Child>\n\n              <div className=\"fixed inset-0 overflow-y-auto\">\n                <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n                  <Transition.Child\n                    as={Fragment}\n                    enter=\"ease-out duration-300\"\n                    enterFrom=\"opacity-0 scale-95\"\n                    enterTo=\"opacity-100 scale-100\"\n                    leave=\"ease-in duration-200\"\n                    leaveFrom=\"opacity-100 scale-100\"\n                    leaveTo=\"opacity-0 scale-95\"\n                  >\n                    <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#0a0b0f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-[#00ffbd]/20\">\n                      <Dialog.Title\n                        as=\"h3\"\n                        className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\n                      >\n                        {error ? 'Error Removing Liquidity' : 'Removing Liquidity'}\n                        {!error && position && (\n                          <div className=\"mt-2 text-base font-normal text-gray-500 dark:text-[#98A1C0]\">\n                            {position.token0.symbol}/{position.token1.symbol}\n                          </div>\n                        )}\n                      </Dialog.Title>\n\n                      <div className=\"space-y-4\">\n                        {[\n                          { step: PROGRESS_STEPS.PREPARING, title: 'Preparing', icon: Icons.Preparing },\n                          { step: PROGRESS_STEPS.ADDING, title: 'Removing Liquidity', icon: () => (\n                            <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n                              <g strokeWidth={1.5} stroke=\"currentColor\">\n                                <path d=\"M8 12h8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.6s_ease-in-out]\" />\n                                <path d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" className=\"animate-[pulse_2s_ease-in-out_infinite]\" />\n                              </g>\n                            </svg>\n                          ) },\n                          { step: PROGRESS_STEPS.CONFIRMING, title: 'Confirming', icon: Icons.Confirming },\n                          { step: PROGRESS_STEPS.COMPLETED, title: 'Completed', icon: Icons.Completed }\n                        ].map(({ step, title, icon: Icon }) => {\n                          const isActive = currentStep === step;\n                          const isCompleted = !error && Object.values(PROGRESS_STEPS).indexOf(currentStep) > Object.values(PROGRESS_STEPS).indexOf(step);\n                          const isErrorStep = error && currentStep === step;\n                          \n                          return (\n                            <div\n                              key={step}\n                              className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\n                                isActive && !isErrorStep ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : \n                                isCompleted ? 'text-[#00ffbd]' : \n                                isErrorStep ? 'bg-red-500/10 text-red-500' : \n                                'text-gray-400'\n                              }`}\n                            >\n                              <Icon />\n                              <div className=\"flex-1\">\n                                <span className=\"font-medium text-gray-900 dark:text-white\">{title}</span>\n                                {isActive && !error && (\n                                  <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                                    {step === PROGRESS_STEPS.PREPARING && 'Preparing transaction...'}\n                                    {step === PROGRESS_STEPS.ADDING && (\n                                      <span className=\"flex items-center gap-2\">\n                                        Removing {percentage}% liquidity from {position?.token0?.symbol}/{position?.token1?.symbol} pool\n                                      </span>\n                                    )}\n                                    {step === PROGRESS_STEPS.CONFIRMING && 'Waiting for confirmation...'}\n                                    {step === PROGRESS_STEPS.COMPLETED && (\n                                      <span className=\"flex items-center gap-2\">\n                                        Successfully removed liquidity from {position?.token0?.symbol}/{position?.token1?.symbol} pool!\n                                      </span>\n                                    )}\n                                  </p>\n                                )}\n                              </div>\n                              {isCompleted && (\n                                <svg className=\"w-5 h-5 text-[#00ffbd]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                              )}\n                            </div>\n                          );\n                        })}\n\n                        {error && (\n                          <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\n                            <div className=\"flex items-start gap-3\">\n                              <Icons.Error />\n                              <div className=\"flex-1\">\n                                <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\n                                <p className=\"mt-1 text-sm text-red-400\">\n                                  {error}\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n\n                      {(currentStep === PROGRESS_STEPS.COMPLETED || error) && (\n                        <div className=\"mt-6\">\n                          <button\n                            onClick={() => setIsLoading(false)}\n                            className=\"w-full px-4 py-3 rounded-xl font-medium bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors text-black\"\n                          >\n                            Close\n                          </button>\n                        </div>\n                      )}\n                    </Dialog.Panel>\n                  </Transition.Child>\n                </div>\n              </div>\n            </Dialog>\n          </Transition>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n}\n\nfunction CollectFeesModal({ isOpen, onClose, position }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const { data: walletClient } = useWalletClient();\n  const [currentStep, setCurrentStep] = useState(PROGRESS_STEPS.PREPARING);\n  const [error, setError] = useState(null);\n\n  const handleCollectFees = async () => {\n    if (!walletClient || !position) {\n      toast.error('Wallet not connected or position not found');\n      return;\n    }\n\n    setIsLoading(true);\n    setCurrentStep(PROGRESS_STEPS.PREPARING);\n    setError(null);\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      setCurrentStep(PROGRESS_STEPS.ADDING);\n\n      // Create NFT position manager contract\n      const nftManager = new ethers.Contract(\n        NFT_POSITION_MANAGER_ADDRESS,\n        [\n          \"function collect((uint256 tokenId, address recipient, uint128 amount0Max, uint128 amount1Max)) external payable returns (uint256 amount0, uint256 amount1)\"\n        ],\n        signer\n      );\n\n      // Format parameters for collecting fees\n      const params = {\n        tokenId: position.tokenId,\n        recipient: await signer.getAddress(),\n        amount0Max: position.fees0,\n        amount1Max: position.fees1\n      };\n\n      // Collect fees\n      const tx = await nftManager.collect(params);\n      \n      setCurrentStep(PROGRESS_STEPS.CONFIRMING);\n      await tx.wait();\n\n      setCurrentStep(PROGRESS_STEPS.COMPLETED);\n      toast.success('Successfully collected fees');\n      onClose();\n    } catch (error) {\n      console.error('Error collecting fees:', error);\n      setError(error.message);\n      setCurrentStep(PROGRESS_STEPS.ERROR);\n      toast.error('Failed to collect fees: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onClose={onClose} className=\"relative z-50\">\n      <div className=\"fixed inset-0 bg-black/30\" aria-hidden=\"true\" />\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-md rounded-2xl bg-white dark:bg-[#0D0D0D] p-4 shadow-xl\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center gap-4\">\n              <button onClick={onClose} className=\"p-1 hover:opacity-80\">\n                <XMarkIcon className=\"h-6 w-6 text-gray-900 dark:text-white\" />\n              </button>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"relative\">\n                  <div className=\"flex -space-x-1\">\n                    <img src={getTokenLogo(position?.token0)} alt={position?.token0?.symbol} className=\"w-8 h-8 rounded-full\" />\n                    <img src={getTokenLogo(position?.token1)} alt={position?.token1?.symbol} className=\"w-8 h-8 rounded-full\" />\n                  </div>\n                  <div className=\"absolute -bottom-1 -right-1\">\n                    <img src=\"/unichain-logo.png\" alt=\"Unichain\" className=\"w-4 h-4\" />\n                  </div>\n                </div>\n                <div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-base font-medium text-gray-900 dark:text-white\">\n                      Collect Fees\n                    </span>\n                  </div>\n                  <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    {position?.token0?.symbol}/{position?.token1?.symbol} • {(position?.fee / 10000).toFixed(2)}%\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Fees Preview */}\n          <div className=\"p-4 rounded-xl bg-gray-100 dark:bg-[#1c1c1c] space-y-3\">\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">Uncollected fees</div>\n            \n            {/* Token 0 Fees */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <img src={getTokenLogo(position?.token0)} alt={position?.token0?.symbol} className=\"w-5 h-5 rounded-full\" />\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  {position?.token0?.symbol}\n                </span>\n              </div>\n              <span className=\"font-medium text-gray-900 dark:text-white\">\n                {formatBigInt(position?.fees0, position?.token0?.decimals)}\n              </span>\n            </div>\n\n            {/* Token 1 Fees */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <img src={getTokenLogo(position?.token1)} alt={position?.token1?.symbol} className=\"w-5 h-5 rounded-full\" />\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  {position?.token1?.symbol}\n                </span>\n              </div>\n              <span className=\"font-medium text-gray-900 dark:text-white\">\n                {formatBigInt(position?.fees1, position?.token1?.decimals)}\n              </span>\n            </div>\n          </div>\n\n          {/* Collect Button */}\n          <button\n            onClick={handleCollectFees}\n            disabled={!position?.fees0 && !position?.fees1 || isLoading}\n            className={`w-full mt-4 px-4 py-3 text-base font-medium rounded-xl transition-colors ${\n              !position?.fees0 && !position?.fees1\n                ? 'bg-gray-100 dark:bg-[#1c1c1c] text-gray-400 cursor-not-allowed'\n                : 'bg-[#00ffbd] text-black hover:bg-[#00ffbd]/90'\n            }`}\n          >\n            {isLoading ? (\n              <div className=\"flex items-center justify-center gap-2\">\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-black\" />\n                <span>Collecting...</span>\n              </div>\n            ) : (\n              'Collect'\n            )}\n          </button>\n\n          {/* Progress Modal */}\n          <Transition appear show={isLoading} as={Fragment}>\n            <Dialog\n              as=\"div\"\n              className=\"relative z-50\"\n              onClose={() => {\n                if (currentStep === PROGRESS_STEPS.COMPLETED || currentStep === PROGRESS_STEPS.ERROR) {\n                  setIsLoading(false);\n                }\n              }}\n            >\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0\"\n                enterTo=\"opacity-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100\"\n                leaveTo=\"opacity-0\"\n              >\n                <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n              </Transition.Child>\n\n              <div className=\"fixed inset-0 overflow-y-auto\">\n                <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n                  <Transition.Child\n                    as={Fragment}\n                    enter=\"ease-out duration-300\"\n                    enterFrom=\"opacity-0 scale-95\"\n                    enterTo=\"opacity-100 scale-100\"\n                    leave=\"ease-in duration-200\"\n                    leaveFrom=\"opacity-100 scale-100\"\n                    leaveTo=\"opacity-0 scale-95\"\n                  >\n                    <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#0a0b0f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-[#00ffbd]/20\">\n                      <Dialog.Title\n                        as=\"h3\"\n                        className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\n                      >\n                        {error ? 'Error Collecting Fees' : 'Collecting Fees'}\n                        {!error && position && (\n                          <div className=\"mt-2 text-base font-normal text-gray-500 dark:text-[#98A1C0]\">\n                            {position.token0.symbol}/{position.token1.symbol}\n                          </div>\n                        )}\n                      </Dialog.Title>\n\n                      <div className=\"space-y-4\">\n                        {[\n                          { step: PROGRESS_STEPS.PREPARING, title: 'Preparing', icon: Icons.Preparing },\n                          { step: PROGRESS_STEPS.ADDING, title: 'Collecting Fees', icon: () => (\n                            <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n                              <g strokeWidth={1.5} stroke=\"currentColor\">\n                                <path d=\"M12 6v6l4 2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.6s_ease-in-out]\" />\n                                <path d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" className=\"animate-[pulse_2s_ease-in-out_infinite]\" />\n                              </g>\n                            </svg>\n                          ) },\n                          { step: PROGRESS_STEPS.CONFIRMING, title: 'Confirming', icon: Icons.Confirming },\n                          { step: PROGRESS_STEPS.COMPLETED, title: 'Completed', icon: Icons.Completed }\n                        ].map(({ step, title, icon: Icon }) => {\n                          const isActive = currentStep === step;\n                          const isCompleted = !error && Object.values(PROGRESS_STEPS).indexOf(currentStep) > Object.values(PROGRESS_STEPS).indexOf(step);\n                          const isErrorStep = error && currentStep === step;\n                          \n                          return (\n                            <div\n                              key={step}\n                              className={`flex items-center gap-3 p-3 rounded-xl transition-colors ${\n                                isActive && !isErrorStep ? 'bg-[#00ffbd]/10 text-[#00ffbd]' : \n                                isCompleted ? 'text-[#00ffbd]' : \n                                isErrorStep ? 'bg-red-500/10 text-red-500' : \n                                'text-gray-400'\n                              }`}\n                            >\n                              <Icon />\n                              <div className=\"flex-1\">\n                                <span className=\"font-medium text-gray-900 dark:text-white\">{title}</span>\n                                {isActive && !error && (\n                                  <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                                    {step === PROGRESS_STEPS.PREPARING && 'Preparing transaction...'}\n                                    {step === PROGRESS_STEPS.ADDING && (\n                                      <span className=\"flex items-center gap-2\">\n                                        Collecting fees from {position?.token0?.symbol}/{position?.token1?.symbol} position\n                                      </span>\n                                    )}\n                                    {step === PROGRESS_STEPS.CONFIRMING && 'Waiting for confirmation...'}\n                                    {step === PROGRESS_STEPS.COMPLETED && (\n                                      <span className=\"flex items-center gap-2\">\n                                        Successfully collected fees!\n                                      </span>\n                                    )}\n                                  </p>\n                                )}\n                              </div>\n                              {isCompleted && (\n                                <svg className=\"w-5 h-5 text-[#00ffbd]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                              )}\n                            </div>\n                          );\n                        })}\n\n                        {error && (\n                          <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\n                            <div className=\"flex items-start gap-3\">\n                              <Icons.Error />\n                              <div className=\"flex-1\">\n                                <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\n                                <p className=\"mt-1 text-sm text-red-400\">\n                                  {error}\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n\n                      {(currentStep === PROGRESS_STEPS.COMPLETED || error) && (\n                        <div className=\"mt-6\">\n                          <button\n                            onClick={() => setIsLoading(false)}\n                            className=\"w-full px-4 py-3 rounded-xl font-medium bg-[#00ffbd] hover:bg-[#00e6a9] transition-colors text-black\"\n                          >\n                            Close\n                          </button>\n                        </div>\n                      )}\n                    </Dialog.Panel>\n                  </Transition.Child>\n                </div>\n              </div>\n            </Dialog>\n          </Transition>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n}\n\n// Update the animation variants at the top of the file\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.05,\n      delayChildren: 0.1\n    }\n  }\n};\n\nconst itemVariants = {\n  hidden: { \n    opacity: 0,\n    y: 10,\n    scale: 0.98\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n    transition: {\n      type: \"spring\",\n      mass: 0.8,\n      stiffness: 100,\n      damping: 15\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.96,\n    transition: {\n      duration: 0.2,\n      ease: \"easeOut\"\n    }\n  }\n};\n\n// Add this near the top with other imports\nconst SkeletonCard = () => (\n  <motion.div \n    className=\"p-3 rounded-xl bg-white/5 dark:bg-[#2d2f36] border border-gray-200 dark:border-gray-800 max-w-2xl mx-auto\"\n    initial={{ opacity: 0 }}\n    animate={{ opacity: 1 }}\n  >\n    <div className=\"flex items-start gap-4\">\n      {/* NFT Preview Skeleton */}\n      <div className=\"relative w-[140px] h-[140px] rounded-lg overflow-hidden flex-shrink-0 bg-gray-200 dark:bg-gray-800 animate-pulse\" />\n\n      <div className=\"flex-1 space-y-3\">\n        {/* Title Skeleton */}\n        <div className=\"flex items-center justify-between mb-3\">\n          <div className=\"h-6 w-32 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n          <div className=\"h-6 w-24 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n        </div>\n\n        {/* Details Skeleton */}\n        <div className=\"space-y-2\">\n          <div className=\"h-4 w-3/4 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n          <div className=\"h-4 w-2/3 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n          <div className=\"h-4 w-1/2 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n        </div>\n\n        {/* Actions Skeleton */}\n        <div className=\"flex gap-2 mt-4\">\n          {[1, 2, 3].map((i) => (\n            <div key={i} className=\"h-8 w-20 bg-gray-200 dark:bg-gray-800 rounded animate-pulse\" />\n          ))}\n        </div>\n      </div>\n    </div>\n  </motion.div>\n);\n\nexport default function MyPools() {\n  const { address, isConnected } = useAccount();\n  const publicClient = usePublicClient();\n  const { data: walletClient } = useWalletClient();\n  const [positions, setPositions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showAddLiquidityModal, setShowAddLiquidityModal] = useState(false);\n  const [showRemoveLiquidityModal, setShowRemoveLiquidityModal] = useState(false);\n  const [showCollectFeesModal, setShowCollectFeesModal] = useState(false);\n  const [selectedPosition, setSelectedPosition] = useState(null);\n\n  useEffect(() => {\n    if (address && publicClient) {\n      fetchPositions();\n    }\n  }, [address, publicClient]);\n\n  const fetchPositions = async () => {\n    try {\n      setIsLoading(true);\n      \n      if (!address || !walletClient) {\n        throw new Error('Wallet not connected');\n      }\n\n      const provider = new ethers.BrowserProvider(walletClient.transport);\n      const positionManagerContract = new ethers.Contract(\n        NFT_POSITION_MANAGER_ADDRESS,\n        NFT_POSITION_MANAGER_ABI,\n        provider\n      );\n\n      const factoryContract = new ethers.Contract(\n        FACTORY_ADDRESS,\n        FACTORY_ABI,\n        provider\n      );\n\n      // Get number of positions\n      const balance = await positionManagerContract.balanceOf(address);\n\n      if (Number(balance) === 0) {\n        setPositions([]);\n        return;\n      }\n\n      // ERC20 ABI for token details\n      const ERC20_ABI = [\n        \"function symbol() view returns (string)\",\n        \"function decimals() view returns (uint8)\"\n      ];\n      \n      // Create promises for all positions\n      const positionPromises = Array.from({ length: Number(balance) }, async (_, i) => {\n        try {\n          const tokenId = await positionManagerContract.tokenOfOwnerByIndex(address, i);\n          \n          const position = await positionManagerContract.positions(tokenId);\n          \n          // Get pool address\n          const poolAddress = await factoryContract.getPool(\n            position.token0,\n            position.token1,\n            position.fee\n          );\n\n          // Get pool contract\n          const poolContract = new ethers.Contract(poolAddress, POOL_ABI, provider);\n          const [slot0Data, poolLiquidity] = await Promise.all([\n            poolContract.slot0(),\n            poolContract.liquidity()\n          ]);\n\n          // Get token details\n          const token0Contract = new ethers.Contract(position.token0, ERC20_ABI, provider);\n          const token1Contract = new ethers.Contract(position.token1, ERC20_ABI, provider);\n\n          const [token0Symbol, token0Decimals, token1Symbol, token1Decimals] = await Promise.all([\n            token0Contract.symbol(),\n            token0Contract.decimals(),\n            token1Contract.symbol(),\n            token1Contract.decimals()\n          ]);\n\n          // Calculate amounts in the position\n          const amount0 = getAmount0FromTick(\n            slot0Data.sqrtPriceX96,\n            position.tickLower,\n            position.tickUpper,\n            position.liquidity\n          );\n\n          const amount1 = getAmount1FromTick(\n            slot0Data.sqrtPriceX96,\n            position.tickLower,\n            position.tickUpper,\n            position.liquidity\n          );\n\n          // Calculate position's share\n          const positionShare = Number(position.liquidity) / Number(poolLiquidity);\n          \n          return {\n            id: tokenId.toString(),\n            tokenId: tokenId.toString(),\n            token0: {\n              address: position.token0,\n              symbol: token0Symbol,\n              decimals: Number(token0Decimals)\n            },\n            token1: {\n              address: position.token1,\n              symbol: token1Symbol,\n              decimals: Number(token1Decimals)\n            },\n            fee: Number(position.fee),\n            tickLower: Number(position.tickLower),\n            tickUpper: Number(position.tickUpper),\n            liquidity: position.liquidity.toString(),\n            amount0: amount0.toString(),\n            amount1: amount1.toString(),\n            fees0: position.tokensOwed0.toString(),\n            fees1: position.tokensOwed1.toString(),\n            positionShare: positionShare\n          };\n        } catch (positionError) {\n          console.error(`Error fetching position ${i}:`, positionError);\n          return null;\n        }\n      });\n\n      // Fetch all positions in parallel\n      const results = await Promise.all(positionPromises);\n      const validPositions = results.filter(position => position !== null);\n\n      setPositions(validPositions);\n\n    } catch (error) {\n      console.error('Error fetching positions:', error);\n      toast.error('Failed to fetch positions: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handlePositionAction = (action, position) => {\n    setSelectedPosition(position);\n    switch (action) {\n      case 'add':\n        setShowAddLiquidityModal(true);\n        break;\n      case 'remove':\n        setShowRemoveLiquidityModal(true);\n        break;\n      case 'collect':\n        setShowCollectFeesModal(true);\n        break;\n      case 'info':\n        // Handle pool info action\n        break;\n    }\n  };\n\n  if (!isConnected) {\n    return (\n      <motion.div \n        className=\"flex flex-col items-center justify-center min-h-[400px]\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -20 }}\n      >\n        <BiWallet className=\"mx-auto h-12 w-12 text-gray-400\" />\n        <motion.h3 \n          className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 0.2 }}\n        >\n          No positions\n        </motion.h3>\n        <motion.p \n          className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 0.3 }}\n        >\n          Connect your wallet to view your positions\n        </motion.p>\n        <motion.div \n          className=\"mt-6\"\n          initial={{ opacity: 0, scale: 0.9 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ delay: 0.4 }}\n        >\n          <button\n            onClick={open}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-lg text-black bg-[#00ffbd] hover:bg-[#00ffbd]/90\"\n          >\n            Connect Wallet\n          </button>\n        </motion.div>\n      </motion.div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <motion.div \n        className=\"space-y-4\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n      >\n        {[1, 2, 3].map((i) => (\n          <SkeletonCard key={i} />\n        ))}\n      </motion.div>\n    );\n  }\n\n  return (\n    <motion.div \n      className=\"space-y-4\"\n      variants={containerVariants}\n      initial=\"hidden\"\n      animate=\"visible\"\n    >\n      {positions.length > 0 ? (\n        <AnimatePresence>\n          {positions.map((position) => (\n            <motion.div\n              key={position.id}\n              variants={itemVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              layout=\"position\"\n              layoutId={position.id}\n            >\n              <PositionCard\n                position={position}\n                onAction={handlePositionAction}\n              />\n            </motion.div>\n          ))}\n        </AnimatePresence>\n      ) : (\n        <motion.div \n          className=\"text-center py-12\"\n          variants={itemVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n        >\n          <FaChartLine className=\"mx-auto h-12 w-12 text-gray-400\" />\n          <motion.h3 \n            className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.2 }}\n          >\n            No positions found\n          </motion.h3>\n          <motion.p \n            className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.3 }}\n          >\n            Create a position to provide liquidity and earn fees\n          </motion.p>\n        </motion.div>\n      )}\n\n      <AddLiquidityModal\n        isOpen={showAddLiquidityModal}\n        onClose={() => setShowAddLiquidityModal(false)}\n        position={selectedPosition}\n      />\n      \n      <RemoveLiquidityModal\n        isOpen={showRemoveLiquidityModal}\n        onClose={() => setShowRemoveLiquidityModal(false)}\n        position={selectedPosition}\n      />\n      \n      <CollectFeesModal\n        isOpen={showCollectFeesModal}\n        onClose={() => setShowCollectFeesModal(false)}\n        position={selectedPosition}\n      />\n    </motion.div>\n  );\n} ","import { create } from 'zustand';\n\nconst useUniswapVersion = create((set) => ({\n  version: 'v2',\n  setVersion: (version) => set({ version }),\n}));\n\nexport { useUniswapVersion }; ","import React from 'react';\nimport { useUniswapVersion } from '../../../../hooks/useUniswapVersion';\n\nexport default function VersionToggle() {\n  const { version, setVersion } = useUniswapVersion();\n\n  return (\n    <div className=\"flex items-center justify-center space-x-2 p-1.5 bg-white/10 dark:bg-[#1a1b1f] rounded-xl border border-gray-200 dark:border-gray-800\">\n      <button\n        onClick={() => setVersion('v2')}\n        className={`px-4 py-1.5 rounded-lg font-medium text-sm transition-all duration-200 ${\n          version === 'v2'\n            ? 'bg-[#00ffbd] text-black shadow-[0_0_10px_#00ffbd]'\n            : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800'\n        }`}\n      >\n        V2\n      </button>\n      <button\n        onClick={() => setVersion('v3')}\n        className={`px-4 py-1.5 rounded-lg font-medium text-sm transition-all duration-200 ${\n          version === 'v3'\n            ? 'bg-[#00ffbd] text-black shadow-[0_0_10px_#00ffbd]'\n            : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800'\n        }`}\n      >\n        V3\n      </button>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity';\nimport { useUnichain } from '../../../../hooks/useUnichain';\n\nexport default function ManageLiquidity({ initialTokens, poolAddress }) {\n  const [activeTab, setActiveTab] = useState('add'); // 'add' or 'remove'\n  const [poolDetails, setPoolDetails] = useState(null);\n  const uniswap = useUnichain();\n\n  // Fetch pool details when pool address is provided\n  useEffect(() => {\n    const fetchPoolDetails = async () => {\n      if (poolAddress) {\n        try {\n          const details = await uniswap.getPoolDetails(poolAddress);\n          setPoolDetails(details);\n          // If we have pool details, automatically show the add liquidity tab\n          setActiveTab('add');\n        } catch (error) {\n          console.error('Error fetching pool details:', error);\n        }\n      }\n    };\n    fetchPoolDetails();\n  }, [poolAddress, uniswap]);\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 bg-white/5 dark:bg-[#1a1b1f] rounded-2xl border border-gray-200 dark:border-gray-800 shadow-xl\">\n      <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">Add/Remove Liquidity</h2>\n      \n      {/* Pool Details Section - Show if we have a specific pool */}\n      {poolDetails && (\n        <div className=\"mb-6 p-4 bg-white/5 dark:bg-[#2d2f36] rounded-xl border border-gray-200 dark:border-gray-800\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n            Pool Details\n          </h3>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Tokens</p>\n              <p className=\"text-base font-medium text-gray-900 dark:text-white\">\n                {poolDetails.token0Symbol}/{poolDetails.token1Symbol}\n              </p>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Total Liquidity</p>\n              <p className=\"text-base font-medium text-gray-900 dark:text-white\">\n                ${poolDetails.totalLiquidity?.toLocaleString()}\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-white/5 dark:bg-[#2d2f36] rounded-xl p-1 mb-6\">\n        <button\n          onClick={() => setActiveTab('add')}\n          className={`flex-1 px-4 py-2 text-sm font-medium rounded-lg transition-all\n            ${activeTab === 'add'\n              ? 'bg-[#00ffbd] text-black shadow-lg shadow-[#00ffbd]/20'\n              : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'\n            }\n          `}\n        >\n          Add Liquidity\n        </button>\n        <button\n          onClick={() => setActiveTab('remove')}\n          className={`flex-1 px-4 py-2 text-sm font-medium rounded-lg transition-all\n            ${activeTab === 'remove'\n              ? 'bg-[#00ffbd] text-black shadow-lg shadow-[#00ffbd]/20'\n              : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'\n            }\n          `}\n        >\n          Remove Liquidity\n        </button>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"mt-4\">\n        {activeTab === 'add' ? (\n          <AddLiquidity \n            initialTokens={initialTokens} \n            poolAddress={poolAddress}\n            poolDetails={poolDetails}\n          />\n        ) : (\n          <RemoveLiquidity \n            initialTokens={initialTokens}\n            poolAddress={poolAddress}\n            poolDetails={poolDetails}\n          />\n        )}\n      </div>\n    </div>\n  );\n} ","import React, { useState } from 'react';\nimport AddLiquidity from './AddLiquidity';\nimport RemoveLiquidity from './RemoveLiquidity';\n\nexport default function ManageLiquidity() {\n  const [activeTab, setActiveTab] = useState('add'); // 'add' or 'remove'\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 bg-white/5 dark:bg-[#1a1b1f] rounded-2xl border border-gray-200 dark:border-gray-800 shadow-xl\">\n      <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">Manage Liquidity</h2>\n      \n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-white/5 dark:bg-[#2d2f36] rounded-xl p-1 mb-6\">\n        <button\n          onClick={() => setActiveTab('add')}\n          className={`flex-1 px-4 py-2 text-sm font-medium rounded-lg transition-all\n            ${activeTab === 'add'\n              ? 'bg-[#00ffbd] text-black shadow-lg shadow-[#00ffbd]/20'\n              : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'\n            }\n          `}\n        >\n          Add Liquidity\n        </button>\n        <button\n          onClick={() => setActiveTab('remove')}\n          className={`flex-1 px-4 py-2 text-sm font-medium rounded-lg transition-all\n            ${activeTab === 'remove'\n              ? 'bg-[#00ffbd] text-black shadow-lg shadow-[#00ffbd]/20'\n              : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'\n            }\n          `}\n        >\n          Remove Liquidity\n        </button>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"mt-4\">\n        {activeTab === 'add' ? (\n          <AddLiquidity />\n        ) : (\n          <RemoveLiquidity />\n        )}\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { FaExchangeAlt, FaPlus, FaWater, FaList } from 'react-icons/fa';\nimport { useNetwork, useAccount } from 'wagmi';\nimport SepoliaTokenSwap from '../components/dex/TokenSwap';\nimport UnichainTokenSwapV2 from '../components/dex/unichain/v2/TokenSwap';\nimport UnichainTokenSwapV3 from '../components/dex/unichain/v3/TokenSwap';\nimport SepoliaPoolCreation from '../components/dex/PoolCreation';\nimport UnichainPoolCreationV2 from '../components/dex/unichain/v2/PoolCreation';\nimport UnichainPoolCreationV3 from '../components/dex/unichain/v3/PoolCreation';\nimport SepoliaManageLiquidity from '../components/dex/ManageLiquidity';\nimport UnichainAddLiquidityV2 from '../components/dex/unichain/v2/AddLiquidity';\nimport UnichainAddLiquidityV3 from '../components/dex/unichain/v3/AddLiquidity';\nimport UnichainRemoveLiquidityV2 from '../components/dex/unichain/v2/RemoveLiquidity';\nimport UnichainRemoveLiquidityV3 from '../components/dex/unichain/v3/RemoveLiquidity';\nimport SepoliaMyPools from '../components/dex/MyPools';\nimport UnichainMyPoolsV2 from '../components/dex/unichain/v2/MyPools';\nimport UnichainMyPoolsV3 from '../components/dex/unichain/v3/MyPools';\nimport { unichainTestnet } from '../config/wagmi';\nimport VersionToggle from '../components/dex/unichain/shared/VersionToggle';\nimport { useUniswapVersion } from '../hooks/useUniswapVersion';\nimport UnichainManageLiquidityV2 from '../components/dex/unichain/v2/ManageLiquidity';\nimport UnichainManageLiquidityV3 from '../components/dex/unichain/v3/ManageLiquidity';\nimport { useLocation } from 'react-router-dom';\nimport { useConnectModal } from '@rainbow-me/rainbowkit';\n\nconst getTabsForVersion = (version) => {\n  if (version === 'v2') {\n    return [\n      { id: 'swap', label: 'Swap', icon: FaExchangeAlt },\n      { id: 'my-pools', label: 'My Pools', icon: FaList },\n      { id: 'pool', label: 'Create Pool', icon: FaPlus },\n      { id: 'liquidity', label: 'Add/Remove Liquidity', icon: FaWater },\n    ];\n  } else {\n    return [\n      { id: 'swap', label: 'Swap', icon: FaExchangeAlt },\n      { id: 'my-pools', label: 'My Positions', icon: FaList },\n      { id: 'pool', label: 'Create Position', icon: FaPlus },\n    ];\n  }\n};\n\nexport default function ActivityPage() {\n  const location = useLocation();\n  const [activeTab, setActiveTab] = useState('swap');\n  const [selectedTokens, setSelectedTokens] = useState(null);\n  const [selectedPoolAddress, setSelectedPoolAddress] = useState(null);\n  const { chain } = useNetwork();\n  const { address: account } = useAccount();\n  const [devModeEnabled, setDevModeEnabled] = useState(false);\n  const [zKeyPresses, setZKeyPresses] = useState([]);\n  const { version } = useUniswapVersion();\n  const TABS = getTabsForVersion(version);\n  const { openConnectModal } = useConnectModal();\n\n  // Modified setActiveTab to handle additional data\n  const handleTabChange = (tab, data) => {\n    setActiveTab(tab);\n    if (data?.selectedTokens) {\n      setSelectedTokens(data.selectedTokens);\n    }\n    if (data?.poolAddress) {\n      setSelectedPoolAddress(data.poolAddress);\n    }\n  };\n\n  // Handle key presses for dev mode toggle\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (event.key.toLowerCase() === 'z') {\n        const now = Date.now();\n        setZKeyPresses(prev => {\n          // Add current timestamp and keep only last 3 presses\n          const newPresses = [...prev, now].slice(-3);\n          \n          // Check if we have 3 presses within 2 seconds\n          if (newPresses.length === 3 && \n              (newPresses[2] - newPresses[0]) <= 2000) {\n            // Toggle dev mode and reset presses\n            setDevModeEnabled(prev => !prev);\n            return [];\n          }\n          \n          return newPresses;\n        });\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, []);\n\n  // Handle navigation state\n  useEffect(() => {\n    if (location.state?.activeTab) {\n      setActiveTab(location.state.activeTab);\n    }\n  }, [location.state]);\n\n  // Function to get the appropriate component based on chain\n  const getChainComponent = (componentType) => {\n    if (!chain) return null;\n\n    // Support both Unichain networks and Monad testnet\n    const isUnichain = chain.id === 1301 || chain.id === 130;\n    const isMonad = chain.id === 10143;\n    const isSupportedNetwork = isUnichain || isMonad;\n\n    if (!isSupportedNetwork && !devModeEnabled) {\n      return (\n        <div className=\"text-center py-8\">\n          <div className=\"flex flex-col items-center gap-4\">\n            <div className=\"w-16 h-16 rounded-full bg-[#00ffbd]/10 flex items-center justify-center\">\n              <img src=\"/unichain-logo.png\" alt=\"Unichain\" className=\"w-8 h-8\" />\n            </div>\n            <div className=\"text-center\">\n              <p className=\"text-gray-500 dark:text-gray-400 mb-2\">Please switch to a supported network</p>\n              <p className=\"text-sm text-gray-400 dark:text-gray-500\">\n                Trading is available on Unichain networks and Monad Testnet\n              </p>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    switch (componentType) {\n      case 'swap':\n        if (isUnichain || isMonad) {\n          return version === 'v2' ? <UnichainTokenSwapV2 /> : <UnichainTokenSwapV3 />;\n        } else if (chain.id === 11155111 && devModeEnabled) {\n          return <SepoliaTokenSwap />;\n        }\n        break;\n      case 'pool':\n        if (isUnichain || isMonad) {\n          return version === 'v2' \n            ? <UnichainPoolCreationV2 setActiveTab={handleTabChange} /> \n            : <UnichainPoolCreationV3 setActiveTab={handleTabChange} />;\n        } else if (chain.id === 11155111 && devModeEnabled) {\n          return <SepoliaPoolCreation setActiveTab={handleTabChange} />;\n        }\n        break;\n      case 'liquidity':\n        if (isUnichain || isMonad) {\n          return version === 'v2' \n            ? <UnichainManageLiquidityV2 initialTokens={selectedTokens} poolAddress={selectedPoolAddress} /> \n            : <UnichainManageLiquidityV3 initialTokens={selectedTokens} poolAddress={selectedPoolAddress} />;\n        } else if (chain.id === 11155111 && devModeEnabled) {\n          return <SepoliaManageLiquidity initialTokens={selectedTokens} poolAddress={selectedPoolAddress} />;\n        }\n        break;\n      case 'my-pools':\n        if (isUnichain || isMonad) {\n          return version === 'v2' ? <UnichainMyPoolsV2 /> : <UnichainMyPoolsV3 />;\n        } else if (chain.id === 11155111 && devModeEnabled) {\n          return <SepoliaMyPools />;\n        }\n        break;\n    }\n\n    return (\n      <div className=\"text-center py-8\">\n        <div className=\"flex flex-col items-center gap-4\">\n          <div className=\"w-16 h-16 rounded-full bg-[#00ffbd]/10 flex items-center justify-center\">\n            <img src=\"/unichain-logo.png\" alt=\"Unichain\" className=\"w-8 h-8\" />\n          </div>\n          <div className=\"text-center\">\n            <p className=\"text-gray-500 dark:text-gray-400 mb-2\">Please switch to a supported network</p>\n            <p className=\"text-sm text-gray-400 dark:text-gray-500\">\n              Trading is available on Unichain networks and Monad Testnet\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-[#0a0b0f] p-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n            Trading\n          </h1>\n          <div className=\"flex items-center gap-4\">\n            {devModeEnabled && (\n              <span className=\"text-xs px-2 py-1 rounded-full bg-yellow-100 dark:bg-yellow-900/20 text-yellow-800 dark:text-yellow-200 border border-yellow-200 dark:border-yellow-900\">\n                Dev Mode\n              </span>\n            )}\n          </div>\n        </div>\n\n        {/* Main Container with L-shape corners and glowing dots */}\n        <div className=\"relative\">\n          {/* L-shaped corners */}\n          <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n            <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n            <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n            <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n            <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n\n          {/* Glowing dots in corners */}\n          <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n          {/* Three dots in top right */}\n          <div className=\"absolute top-3 right-3 flex gap-1 z-20\">\n            {[1, 2, 3].map((i) => (\n              <div\n                key={i}\n                className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n                style={{ animationDelay: `${i * 0.2}s` }}\n              />\n            ))}\n          </div>\n\n          {/* Main Content */}\n          <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6 rounded-xl\">\n            {!account ? (\n              <div className=\"flex flex-col items-center justify-center py-16 px-4\">\n                <div className=\"w-20 h-20 mb-6 rounded-full bg-[#00ffbd]/10 flex items-center justify-center\">\n                  <svg className=\"w-10 h-10 text-[#00ffbd]\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 9l-6 6m0-6l6 6\" />\n                  </svg>\n                </div>\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-3\">\n                  Connect Your Wallet\n                </h2>\n                <p className=\"text-gray-500 dark:text-gray-400 text-center mb-6 max-w-md\">\n                  Please connect your wallet to access the trading features. You'll be able to swap tokens, manage liquidity, and more.\n                </p>\n                <button\n                  onClick={openConnectModal}\n                  className=\"px-6 py-3 bg-[#00ffbd] hover:bg-[#00ffbd]/90 text-black font-medium rounded-lg transition-colors duration-200 flex items-center gap-2\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                  </svg>\n                  Connect Wallet\n                </button>\n              </div>\n            ) : (\n              <>\n                {/* Network Warning for Sepolia when Dev Mode is disabled */}\n                {chain?.id === 11155111 && !devModeEnabled && (\n                  <div className=\"mb-4 p-3 bg-yellow-100 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-900 rounded-lg\">\n                    <p className=\"text-sm text-yellow-800 dark:text-yellow-200\">\n                      You are connected to Sepolia network. Please switch to Unichain network or enable Dev Mode to use Sepolia.\n                    </p>\n                  </div>\n                )}\n\n                {/* Tab Navigation */}\n                <div className=\"flex justify-between items-center mb-6\">\n                  <div className=\"flex gap-2 overflow-x-auto hide-scrollbar\">\n                    {TABS.map(tab => (\n                      <button\n                        key={tab.id}\n                        onClick={() => handleTabChange(tab.id)}\n                        className={`\n                          flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium whitespace-nowrap\n                          transition-all duration-200 relative group\n                          ${activeTab === tab.id \n                            ? 'text-[#00ffbd] bg-[#00ffbd]/10' \n                            : 'text-gray-500 dark:text-gray-400 bg-white dark:bg-[#1a1b1f] hover:bg-gray-50 dark:hover:bg-[#1a1b1f]/80'\n                          }\n                          border border-gray-100 dark:border-gray-800\n                        `}\n                      >\n                        <tab.icon size={16} />\n                        {tab.label}\n                        \n                        {/* Active Indicator */}\n                        <div className={`\n                          absolute bottom-0 left-0 right-0 h-0.5 rounded-full\n                          transition-all duration-200\n                          ${activeTab === tab.id ? 'bg-[#00ffbd]' : 'bg-transparent group-hover:bg-[#00ffbd]/30'}\n                        `} />\n                      </button>\n                    ))}\n                  </div>\n                  {chain?.id === unichainTestnet.id && <VersionToggle />}\n                </div>\n\n                {/* Tab Content */}\n                <div className=\"h-[calc(100vh-280px)] overflow-y-auto custom-scrollbar\">\n                  {activeTab === 'swap' && getChainComponent('swap')}\n                  {activeTab === 'pool' && getChainComponent('pool')}\n                  {activeTab === 'liquidity' && getChainComponent('liquidity')}\n                  {activeTab === 'my-pools' && getChainComponent('my-pools')}\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} ","import { ethers } from 'ethers';\n\n// Bridge contract ABI - only the functions we need for estimation\nconst BRIDGE_ABI = [\n  {\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},\n  {\"stateMutability\":\"payable\",\"type\":\"fallback\"},\n  {\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},\n  {\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},\n  {\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"setCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},\n  {\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},\n  {\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_value\",\"type\":\"bytes32\"}],\"name\":\"setStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},\n  {\"stateMutability\":\"payable\",\"type\":\"receive\"}\n];\n\n// Network-specific configurations\nexport const GAS_CONFIG = {\n  sepolia: {\n    bridgeAddress: '0xea58fcA6849d79EAd1f26608855c2D6407d54Ce2',\n    bufferMultiplier: 1.2, // 20% buffer\n    minGasPrice: BigInt(20_000_000_000), // 20 gwei\n    maxGasPrice: BigInt(100_000_000_000), // 100 gwei\n    name: 'Sepolia'\n  },\n  unichain: {\n    bridgeAddress: '0xea58fcA6849d79EAd1f26608855c2D6407d54Ce2',\n    bufferMultiplier: 1.3, // 30% buffer\n    minGasPrice: BigInt(1_000_000_000), // 1 gwei\n    maxGasPrice: BigInt(50_000_000_000), // 50 gwei\n    name: 'Unichain Sepolia'\n  }\n};\n\n// Cache storage\nconst estimationCache = new Map();\n\nexport class BridgeGasEstimator {\n  constructor(provider, network) {\n    this.provider = provider;\n    this.network = network;\n    this.config = GAS_CONFIG[network];\n    \n    // Initialize contract interface\n    this.bridgeContract = new ethers.Contract(\n      this.config.bridgeAddress,\n      BRIDGE_ABI,\n      this.provider\n    );\n  }\n\n  async estimateGasFee(amount) {\n    try {\n      // Check cache first\n      const cachedEstimate = this.getCachedEstimate();\n      if (cachedEstimate) {\n        return cachedEstimate;\n      }\n\n      // Get current gas price\n      const gasPrice = await this.getCurrentGasPrice();\n      \n      // Simulate the actual bridge transaction\n      const simulatedGas = await this.simulateBridgeTransaction(amount);\n      \n      // Calculate total gas cost (gas price * gas limit)\n      const totalGasCost = gasPrice * simulatedGas;\n\n      // Format the result\n      const estimate = {\n        gasFee: ethers.formatEther(totalGasCost.toString()),\n        gasPrice: gasPrice.toString(),\n        estimatedGas: simulatedGas.toString(),\n        timestamp: Date.now(),\n        confidence: 'high'\n      };\n\n      // Cache the result\n      this.cacheEstimate(estimate);\n\n      return estimate;\n    } catch (error) {\n      console.error('Error estimating gas fee:', error);\n      return this.getFallbackEstimate();\n    }\n  }\n\n  async simulateBridgeTransaction(amount) {\n    try {\n      // Convert amount to wei\n      const valueInWei = ethers.parseEther(amount.toString());\n      \n      // For proxy contracts, we need to estimate the gas for a direct transfer\n      const estimatedGas = await this.provider.estimateGas({\n        to: this.config.bridgeAddress,\n        value: valueInWei,\n        data: '0x' // Empty data for ETH transfer through fallback/receive\n      });\n\n      // Add a buffer for safety\n      return estimatedGas + BigInt(50000); // Add 50k gas as buffer\n    } catch (error) {\n      console.error('Error simulating bridge transaction:', error);\n      // Fallback to a conservative estimate if simulation fails\n      return BigInt(200000); // Increased conservative fallback\n    }\n  }\n\n  async getCurrentGasPrice() {\n    try {\n      // Try EIP-1559 first\n      const feeData = await this.provider.getFeeData();\n      if (feeData.maxFeePerGas) {\n        return feeData.maxFeePerGas;\n      }\n      \n      // Fallback to legacy gas price\n      return await this.provider.getGasPrice();\n    } catch (error) {\n      console.error('Error getting gas price:', error);\n      return this.config.minGasPrice;\n    }\n  }\n\n  clampGasPrice(gasPrice) {\n    if (gasPrice < this.config.minGasPrice) {\n      return this.config.minGasPrice;\n    }\n    if (gasPrice > this.config.maxGasPrice) {\n      return this.config.maxGasPrice;\n    }\n    return gasPrice;\n  }\n\n  getCachedEstimate() {\n    const cached = estimationCache.get(this.network);\n    if (cached && Date.now() - cached.timestamp < 30000) { // 30 second cache\n      return cached;\n    }\n    return null;\n  }\n\n  cacheEstimate(estimate) {\n    estimationCache.set(this.network, estimate);\n  }\n\n  getFallbackEstimate() {\n    return {\n      gasFee: '0.019',\n      gasPrice: this.config.minGasPrice.toString(),\n      estimatedGas: '150000',\n      timestamp: Date.now(),\n      confidence: 'low'\n    };\n  }\n}\n\n// Helper function to create estimator instance\nexport function createBridgeGasEstimator(provider, network) {\n  return new BridgeGasEstimator(provider, network);\n} ","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useAccount, useNetwork, useSwitchNetwork } from 'wagmi';\nimport { useConnectModal } from '@rainbow-me/rainbowkit';\nimport { ethers } from 'ethers';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Fragment } from \"react\";\nimport { useUnichain } from '../../hooks/useUnichain';\nimport { BiWallet, BiTime, BiChevronDown } from 'react-icons/bi';\nimport { FaGasPump, FaArrowRight, FaExchangeAlt } from 'react-icons/fa';\nimport { toast } from 'react-hot-toast';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { createBridgeGasEstimator } from '../../services/bridgeGasEstimation';\nimport { CheckIcon, InformationCircleIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { createPortal } from 'react-dom';\n\n// Bridge contract addresses for different networks\nconst BRIDGE_CONTRACTS = {\n  MAINNET: '0x81014F44b0a345033bB2b3B21C7a1A308B35fEeA',\n  SEPOLIA: '0xea58fcA6849d79EAd1f26608855c2D6407d54Ce2',\n  UNICHAIN_MAINNET: '0x81014F44b0a345033bB2b3B21C7a1A308B35fEeA',\n  UNICHAIN_TESTNET: '0xea58fcA6849d79EAd1f26608855c2D6407d54Ce2'\n};\n\nconst L1_BRIDGE_ABI = [\n  {\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},\n  {\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETHTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},\n  {\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"depositERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},\n  {\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"depositERC20To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},\n  {\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},\n  {\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"depositETHTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},\n  {\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},\n  {\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}\n];\n\nconst Tooltip = ({ children, content }) => {\n  const [show, setShow] = useState(false);\n\n  return (\n    <div className=\"relative inline-block\">\n      <div\n        onMouseEnter={() => setShow(true)}\n        onMouseLeave={() => setShow(false)}\n      >\n        {children}\n      </div>\n      {show && (\n        <div className=\"absolute z-50 px-3 py-2 text-sm bg-gray-900 text-white rounded-lg shadow-lg whitespace-nowrap\">\n          {content}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst AnimatedClock = () => (\n  <div className=\"relative w-5 h-5\">\n    <div className=\"absolute inset-0 border-2 border-[#00ffbd] rounded-full\" />\n    <div \n      className=\"absolute top-1/2 left-1/2 w-[1px] h-[40%] bg-[#00ffbd] origin-bottom\"\n      style={{ \n        transform: 'translate(-50%, -100%) rotate(0deg)',\n        animation: 'rotate 2s linear infinite'\n      }}\n    />\n    <style jsx>{`\n      @keyframes rotate {\n        from { transform: translate(-50%, -100%) rotate(0deg); }\n        to { transform: translate(-50%, -100%) rotate(360deg); }\n      }\n    `}</style>\n  </div>\n);\n\nconst CountdownTimer = ({ targetTime }) => {\n  const [timeLeft, setTimeLeft] = useState(targetTime);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft((prev) => {\n        if (prev <= 0) {\n          clearInterval(timer);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}m ${secs}s remaining`;\n  };\n\n  return (\n    <div className=\"flex items-center gap-2 text-[#00ffbd]\">\n      <AnimatedClock />\n      <span className=\"text-sm\">{formatTime(timeLeft)}</span>\n    </div>\n  );\n};\n\nconst BridgeProgressModal = ({ isOpen, onClose, currentStep, txHash, fromNetwork, toNetwork }) => {\n  const [startTime] = useState(Date.now());\n\n  const getExplorerUrl = (hash, network) => {\n    if (network.id === 1) {\n      return `https://etherscan.io/tx/${hash}`;\n    } else if (network.id === 11155111) {\n      return `https://sepolia.etherscan.io/tx/${hash}`;\n    }\n    return '#';\n  };\n\n  // Define steps based on the networks\n  const steps = [\n    {\n      title: `Start on ${fromNetwork?.name}`,\n      description: 'Bridge transaction initiated',\n      status: currentStep === 'start' ? 'current' : currentStep ? 'complete' : 'upcoming',\n      link: txHash ? getExplorerUrl(txHash, fromNetwork) : null\n    },\n    {\n      title: 'Wait ~3 mins',\n      description: 'Transaction processing',\n      status: currentStep === 'waiting' ? 'current' : currentStep === 'complete' ? 'complete' : 'upcoming',\n      timer: currentStep === 'waiting' ? 180 : null\n    },\n    {\n      title: `Get ETH on ${toNetwork?.name}`,\n      description: 'Bridge complete',\n      status: currentStep === 'complete' ? 'complete' : 'upcoming'\n    }\n  ];\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\"\n                >\n                  Bridge Progress\n                </Dialog.Title>\n\n                <div className=\"mt-4 space-y-6\">\n                  {steps.map((step, index) => (\n                    <div key={index} className=\"relative\">\n                      {index !== steps.length - 1 && (\n                        <div className={`absolute left-3.5 top-8 w-0.5 h-full ${\n                          step.status === 'complete' ? 'bg-[#00ffbd]' : 'bg-gray-200 dark:bg-gray-700'\n                        }`} />\n                      )}\n                      <div className=\"relative flex items-start\">\n                        <div className={`flex h-7 w-7 shrink-0 items-center justify-center rounded-full ${\n                          step.status === 'complete' ? 'bg-[#00ffbd]' :\n                          step.status === 'current' ? 'bg-blue-500' :\n                          'bg-gray-200 dark:bg-gray-700'\n                        }`}>\n                          {step.status === 'complete' ? (\n                            <CheckIcon className=\"h-4 w-4 text-black\" />\n                          ) : step.status === 'current' ? (\n                            <div className=\"h-2 w-2 rounded-full bg-white animate-pulse\" />\n                          ) : null}\n                        </div>\n                        <div className=\"ml-4 min-w-0 flex-1\">\n                          <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                            {step.title}\n                          </div>\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            {step.description}\n                          </div>\n                          {step.timer && step.status === 'current' && (\n                            <div className=\"mt-2\">\n                              <CountdownTimer targetTime={step.timer} />\n                            </div>\n                          )}\n                          {step.link && (\n                            <a\n                              href={step.link}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"text-sm text-[#00ffbd] hover:text-[#00e6a9] mt-1 inline-block\"\n                            >\n                              View in explorer ↗\n                            </a>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"mt-6\">\n                  <button\n                    type=\"button\"\n                    className=\"w-full rounded-lg bg-gray-100 dark:bg-gray-800 px-4 py-2 text-sm font-medium text-gray-900 dark:text-white hover:bg-gray-200 dark:hover:bg-gray-700 focus:outline-none\"\n                    onClick={onClose}\n                  >\n                    Close\n                  </button>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nconst TermsModal = ({ isOpen, onClose, onAccept }) => {\n  const [acceptedTerms, setAcceptedTerms] = useState({\n    time: false,\n    cancellation: false,\n    fees: false\n  });\n\n  const allTermsAccepted = Object.values(acceptedTerms).every(Boolean);\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-transparent p-6 text-left align-middle shadow-xl transition-all\">\n                <div className=\"bg-gray-50/80 dark:bg-gray-800/80 rounded-xl p-4 mb-6\">\n                  <Dialog.Title as=\"h3\" className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                    Accept terms\n                  </Dialog.Title>\n                  <p className=\"text-base text-gray-700 dark:text-gray-400 mt-2\">\n                    Please read and agree to the following terms before you continue\n                  </p>\n                </div>\n                <div className=\"space-y-4\">\n                  <label className=\"flex items-start gap-3 cursor-pointer group bg-gray-50/80 dark:bg-gray-800/80 rounded-xl p-4\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"mt-1 w-4 h-4 text-[#00ffbd] bg-gray-100 dark:bg-[#2d2f36] border-gray-300 dark:border-gray-600 rounded focus:ring-[#00ffbd] focus:ring-offset-0 focus:ring-2 dark:focus:ring-offset-[#1a1b1f] transition-colors cursor-pointer\"\n                      checked={acceptedTerms.time}\n                      onChange={(e) => setAcceptedTerms(prev => ({ ...prev, time: e.target.checked }))}\n                    />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-300 group-hover:text-gray-900 dark:group-hover:text-white transition-colors\">\n                      I understand it will take ~3 mins until my funds are on Unichain Sepolia\n                    </span>\n                  </label>\n                  <label className=\"flex items-start gap-3 cursor-pointer group bg-gray-50/80 dark:bg-gray-800/80 rounded-xl p-4\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"mt-1 w-4 h-4 text-[#00ffbd] bg-gray-100 dark:bg-[#2d2f36] border-gray-300 dark:border-gray-600 rounded focus:ring-[#00ffbd] focus:ring-offset-0 focus:ring-2 dark:focus:ring-offset-[#1a1b1f] transition-colors cursor-pointer\"\n                      checked={acceptedTerms.cancellation}\n                      onChange={(e) => setAcceptedTerms(prev => ({ ...prev, cancellation: e.target.checked }))}\n                    />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-300 group-hover:text-gray-900 dark:group-hover:text-white transition-colors\">\n                      I understand once a bridge is initiated it cannot be sped up or cancelled\n                    </span>\n                  </label>\n                  <label className=\"flex items-start gap-3 cursor-pointer group bg-gray-50/80 dark:bg-gray-800/80 rounded-xl p-4\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"mt-1 w-4 h-4 text-[#00ffbd] bg-gray-100 dark:bg-[#2d2f36] border-gray-300 dark:border-gray-600 rounded focus:ring-[#00ffbd] focus:ring-offset-0 focus:ring-2 dark:focus:ring-offset-[#1a1b1f] transition-colors cursor-pointer\"\n                      checked={acceptedTerms.fees}\n                      onChange={(e) => setAcceptedTerms(prev => ({ ...prev, fees: e.target.checked }))}\n                    />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-300 group-hover:text-gray-900 dark:group-hover:text-white transition-colors\">\n                      I understand network fees are approximate and will change\n                    </span>\n                  </label>\n                </div>\n\n                <div className=\"mt-6\">\n                  <button\n                    type=\"button\"\n                    className={`w-full px-4 py-3 text-sm font-medium rounded-xl transition-colors ${\n                      allTermsAccepted\n                        ? 'bg-[#00ffbd] text-black hover:bg-[#00e6a9]'\n                        : 'bg-gray-300 dark:bg-gray-700 text-gray-500 dark:text-gray-400 cursor-not-allowed'\n                    }`}\n                    onClick={() => allTermsAccepted && onAccept()}\n                    disabled={!allTermsAccepted}\n                  >\n                    Continue\n                  </button>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nconst SkeletonHistoryItem = () => (\n  <motion.div\n    initial={{ opacity: 0 }}\n    animate={{ opacity: 1 }}\n    exit={{ opacity: 0 }}\n    className=\"bg-gray-50 dark:bg-[#2d2f36] rounded-xl p-5\"\n  >\n    <div className=\"space-y-4\">\n      {/* Header with amount and time */}\n      <div className=\"flex justify-between items-start\">\n        <div className=\"flex items-center gap-2\">\n          <div className=\"w-6 h-6 rounded-full bg-gray-200 dark:bg-gray-700 animate-pulse\" />\n          <div className=\"w-24 h-6 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n        </div>\n        <div className=\"flex flex-col items-end\">\n          <div className=\"w-20 h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse mb-1\" />\n          <div className=\"w-32 h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n        </div>\n      </div>\n\n      {/* Network flow */}\n      <div className=\"flex items-center justify-between bg-white/50 dark:bg-black/20 p-2 rounded-lg\">\n        <div className=\"flex items-center gap-2\">\n          <div className=\"w-5 h-5 rounded-full bg-gray-200 dark:bg-gray-700 animate-pulse\" />\n          <div className=\"w-16 h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n        </div>\n        <div className=\"w-3 h-3 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n        <div className=\"flex items-center gap-2\">\n          <div className=\"w-5 h-5 rounded-full bg-gray-200 dark:bg-gray-700 animate-pulse\" />\n          <div className=\"w-24 h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n        </div>\n      </div>\n\n      {/* Transaction details */}\n      <div className=\"space-y-2\">\n        <div className=\"flex justify-between\">\n          <div className=\"w-20 h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n          <div className=\"w-24 h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n        </div>\n        <div className=\"flex justify-between\">\n          <div className=\"w-16 h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n          <div className=\"w-20 h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\" />\n        </div>\n      </div>\n    </div>\n  </motion.div>\n);\n\n// Add this near the top of the file with other imports\nconst NetworkModeToggle = ({ mode, onChange }) => (\n  <div className=\"flex items-center gap-2 p-1 bg-[#1a1b1f] rounded-lg mb-4\">\n    <button\n      className={`px-4 py-1.5 rounded-md text-sm font-medium transition-all ${\n        mode === 'mainnet' \n          ? 'bg-[#2d2f36] text-white' \n          : 'text-gray-400 hover:text-white'\n      }`}\n      onClick={() => onChange('mainnet')}\n    >\n      Mainnet\n    </button>\n    <button\n      className={`px-4 py-1.5 rounded-md text-sm font-medium transition-all ${\n        mode === 'testnet' \n          ? 'bg-[#2d2f36] text-white' \n          : 'text-gray-400 hover:text-white'\n      }`}\n      onClick={() => onChange('testnet')}\n    >\n      Testnet\n    </button>\n  </div>\n);\n\n// Update the ActivityModal component\nconst ActivityModal = ({ isOpen, onClose, address, setShowProgress, setCurrentStep, setTxHash }) => {\n  const [activities, setActivities] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [networkMode, setNetworkMode] = useState('testnet');\n\n  const fetchBridgeHistory = async () => {\n    if (!address) return;\n    \n    setIsLoading(true);\n    try {\n      let responses = [];\n      const etherscanApiKey = import.meta.env.VITE_ETHERSCAN_API_KEY;\n      \n      if (networkMode === 'mainnet') {\n        responses = await Promise.all([\n          fetch(`https://api.etherscan.io/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&sort=desc&apikey=${etherscanApiKey}`),\n          fetch(`https://unichain.blockscout.com/api/v2/addresses/${address}/transactions`)\n        ]);\n      } else {\n        responses = await Promise.all([\n          fetch(`https://api-sepolia.etherscan.io/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&sort=desc&apikey=${etherscanApiKey}`),\n          fetch(`https://unichain-sepolia.blockscout.com/api/v2/addresses/${address}/transactions`)\n        ]);\n      }\n\n      const [ethData, unichainData] = await Promise.all(\n        responses.map(async r => {\n          if (!r.ok) return { result: [] };\n          const data = await r.json();\n          return data.result ? data : { result: data.items || [] };\n        })\n      );\n\n      const bridgeContract = networkMode === 'mainnet' \n        ? BRIDGE_CONTRACTS.MAINNET.toLowerCase()\n        : BRIDGE_CONTRACTS.SEPOLIA.toLowerCase();\n\n      const formattedActivities = [\n        ...(ethData.result || [])\n          .filter(tx => {\n            const txToAddress = typeof tx.to === 'string' ? tx.to.toLowerCase() : '';\n            return txToAddress === bridgeContract;\n          })\n          .map(tx => ({\n            hash: tx.hash,\n            timestamp: new Date(tx.timeStamp * 1000).getTime(),\n            value: ethers.formatEther(tx.value || '0'),\n            fromNetwork: networkMode === 'mainnet' ? 'ETH Mainnet' : 'Sepolia',\n            toNetwork: networkMode === 'mainnet' ? 'Unichain Mainnet' : 'Unichain Testnet',\n            status: tx.confirmations > 12 ? 'completed' : 'pending',\n            fee: tx.gasPrice ? ethers.formatEther(BigInt(tx.gasPrice) * BigInt(tx.gasUsed || '21000')) : '0'\n          })),\n        \n        ...(unichainData.result || [])\n          .filter(tx => {\n            const txToAddress = typeof tx.to === 'string' ? tx.to.toLowerCase() : tx.to?.hash?.toLowerCase() || '';\n            return txToAddress === bridgeContract;\n          })\n          .map(tx => ({\n            hash: tx.hash,\n            timestamp: new Date(tx.timestamp || tx.timeStamp * 1000).getTime(),\n            value: ethers.formatEther(tx.value || '0'),\n            fromNetwork: networkMode === 'mainnet' ? 'Unichain Mainnet' : 'Unichain Testnet',\n            toNetwork: networkMode === 'mainnet' ? 'ETH Mainnet' : 'Sepolia',\n            status: tx.confirmations > 12 ? 'completed' : 'pending',\n            fee: tx.gasPrice ? ethers.formatEther(BigInt(tx.gasPrice) * BigInt(tx.gasUsed || '21000')) : '0'\n          }))\n      ];\n\n      console.log('Fetched activities:', formattedActivities);\n      setActivities(formattedActivities.sort((a, b) => b.timestamp - a.timestamp));\n    } catch (error) {\n      console.error('Error fetching bridge history:', error);\n      toast.error('Failed to load bridge history');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isOpen && address) {\n      fetchBridgeHistory();\n    }\n  }, [isOpen, address, networkMode]);\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      className=\"relative z-50\"\n    >\n      <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-2xl bg-[#0d0e12] rounded-2xl flex flex-col max-h-[80vh]\">\n          {/* Fixed Header */}\n          <div className=\"flex items-center justify-between p-6 border-b border-gray-800\">\n            <Dialog.Title className=\"text-xl font-semibold text-white\">\n              Bridge History\n            </Dialog.Title>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-white transition-colors\"\n            >\n              <XMarkIcon className=\"w-6 h-6\" />\n            </button>\n          </div>\n\n          {/* Fixed Network Toggle */}\n          <div className=\"px-6 py-4 border-b border-gray-800\">\n            <NetworkModeToggle \n              mode={networkMode} \n              onChange={setNetworkMode}\n            />\n          </div>\n\n          {/* Scrollable Content */}\n          <div className=\"flex-1 overflow-y-auto scrollbar-hide\">\n            <div className=\"p-6 space-y-4\">\n              {isLoading ? (\n                Array.from({ length: 3 }).map((_, i) => (\n                  <SkeletonHistoryItem key={i} />\n                ))\n              ) : activities.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <p className=\"text-gray-400\">No bridge transactions found</p>\n                </div>\n              ) : (\n                <>\n                  {activities.map((activity, index) => (\n                    <div\n                      key={index}\n                      className=\"bg-[#1a1b1f] rounded-xl p-5 space-y-4\"\n                    >\n                      <div className=\"flex justify-between items-start\">\n                        <div className=\"flex items-center gap-2\">\n                          <img src=\"/eth-logo.png\" alt=\"ETH\" className=\"w-6 h-6\" />\n                          <span className=\"text-white font-medium\">\n                            {activity.value} ETH\n                          </span>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-sm text-gray-400\">\n                            {new Date(activity.timestamp).toLocaleDateString()}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            {new Date(activity.timestamp).toLocaleTimeString()}\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-center justify-between bg-black/20 p-2 rounded-lg\">\n                        <div className=\"flex items-center gap-2\">\n                          <img \n                            src={activity.fromNetwork.includes('ETH') ? '/eth.png' : \n                                activity.fromNetwork.includes('Sepolia') ? '/sepolia.png' : \n                                '/unichain-logo.png'} \n                            alt={activity.fromNetwork}\n                            className=\"w-5 h-5\"\n                          />\n                          <span className=\"text-sm text-gray-400\">{activity.fromNetwork}</span>\n                        </div>\n                        <FaArrowRight className=\"text-[#00ffbd]\" size={12} />\n                        <div className=\"flex items-center gap-2\">\n                          <img \n                            src={activity.toNetwork.includes('ETH') ? '/eth.png' : \n                                activity.toNetwork.includes('Sepolia') ? '/sepolia.png' : \n                                '/unichain-logo.png'}\n                            alt={activity.toNetwork}\n                            className=\"w-5 h-5\"\n                          />\n                          <span className=\"text-sm text-gray-400\">{activity.toNetwork}</span>\n                        </div>\n                      </div>\n\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-500\">Status</span>\n                        <span className={activity.status === 'completed' ? 'text-green-400' : 'text-yellow-400'}>\n                          {activity.status === 'completed' ? 'Completed' : 'Pending'}\n                        </span>\n                      </div>\n\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-500\">Network Fee</span>\n                        <span className=\"text-gray-400\">{parseFloat(activity.fee).toFixed(6)} ETH</span>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              )}\n            </div>\n          </div>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n};\n\nconst TransactionSummaryModal = ({ isOpen, onClose, onConfirm, amount, fromNetwork, toNetwork }) => {\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all border border-gray-200 dark:border-gray-800\">\n                <Dialog.Title as=\"h3\" className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4\">\n                  Transaction Summary\n                </Dialog.Title>\n\n                <div className=\"mt-4 space-y-4\">\n                  {/* Network Flow */}\n                  <div className=\"flex items-center justify-between bg-gray-50 dark:bg-[#2d2f36] p-3 rounded-lg\">\n                    <div className=\"flex items-center gap-2\">\n                      <img src={fromNetwork?.logo} alt=\"From Network\" className=\"w-6 h-6\" />\n                      <span className=\"text-sm text-gray-600 dark:text-gray-400\">{fromNetwork?.name}</span>\n                    </div>\n                    <FaArrowRight className=\"text-[#00ffbd]\" size={12} />\n                    <div className=\"flex items-center gap-2\">\n                      <img src={toNetwork?.logo} alt=\"To Network\" className=\"w-6 h-6\" />\n                      <span className=\"text-sm text-gray-600 dark:text-gray-400\">{toNetwork?.name}</span>\n                    </div>\n                  </div>\n\n                  {/* Amount Details */}\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-gray-500 dark:text-gray-400\">Amount</span>\n                      <div className=\"flex items-center gap-2\">\n                        <img src=\"/eth-logo.png\" alt=\"ETH\" className=\"w-5 h-5\" />\n                        <span className=\"text-base font-medium text-gray-900 dark:text-white\">\n                          {amount} ETH\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-gray-500 dark:text-gray-400\">Network Fee</span>\n                      <span className=\"text-sm text-gray-900 dark:text-white\">Check wallet for fee</span>\n                    </div>\n                  </div>\n\n                  {/* Estimated Time */}\n                  <div className=\"flex items-center gap-2 bg-blue-50 dark:bg-blue-900/20 p-3 rounded-lg\">\n                    <BiTime className=\"text-blue-500\" size={20} />\n                    <span className=\"text-sm text-blue-600 dark:text-blue-400\">\n                      Estimated completion time: ~3 mins\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"mt-6 space-y-3\">\n                  <button\n                    type=\"button\"\n                    className=\"w-full px-4 py-3 bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-medium rounded-xl transition-colors\"\n                    onClick={onConfirm}\n                  >\n                    Confirm Bridge\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"w-full px-4 py-3 bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white hover:bg-gray-200 dark:hover:bg-gray-700 font-medium rounded-xl transition-colors\"\n                    onClick={onClose}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nconst NETWORKS = {\n  eth: {\n    mainnet: {\n      id: 1,\n      name: 'ETH Mainnet',\n      logo: '/eth.png',\n      disabled: false,\n      bridgeAddress: BRIDGE_CONTRACTS.MAINNET\n    },\n    testnet: {\n      id: 11155111,\n      name: 'Sepolia',\n      logo: '/sepolia.png',\n      bridgeAddress: BRIDGE_CONTRACTS.SEPOLIA\n    }\n  },\n  unichain: {\n    mainnet: {\n      id: 130,\n      name: 'Unichain Mainnet',\n      logo: '/unichain-logo.png',\n      disabled: false\n    },\n    testnet: {\n      id: 1301,\n      name: 'Unichain Testnet',\n      logo: '/unichain-logo.png'\n    }\n  }\n};\n\nexport default function BridgePage() {\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-[#0a0b0f] p-4 md:p-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex items-center mb-6\">\n          <h1 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n            Bridge\n          </h1>\n        </div>\n\n        {/* Main Container with L-shape corners and glowing dots */}\n        <div className=\"relative\">\n          {/* L-shaped corners */}\n          <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n            <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n            <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n            <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n          <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n            <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n            <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n          </div>\n\n          {/* Glowing dots in corners */}\n          <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n          <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n          {/* Main Content */}\n          <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-4 md:p-6 rounded-xl\">\n            <Bridge />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Bridge() {\n  // Network and wallet hooks\n  const { address, isConnected } = useAccount();\n  const { chain } = useNetwork();\n  const { openConnectModal } = useConnectModal();\n  const uniswap = useUnichain();\n  \n  // Add network mode state\n  const [isMainnetMode, setIsMainnetMode] = useState(true);\n  \n  // Add network selection state\n  const [selectedFromNetwork, setSelectedFromNetwork] = useState(NETWORKS.eth.mainnet);\n  const [selectedToNetwork, setSelectedToNetwork] = useState(NETWORKS.unichain.mainnet);\n  \n  // All other state hooks remain the same\n  const [showActivity, setShowActivity] = useState(false);\n  const [amount, setAmount] = useState('');\n  const [showTerms, setShowTerms] = useState(false);\n  const [showProgress, setShowProgress] = useState(false);\n  const [currentStep, setCurrentStep] = useState(null);\n  const [ethBalance, setEthBalance] = useState('0');\n  const [loading, setLoading] = useState(false);\n  const [txHash, setTxHash] = useState(null);\n  const [isLoadingBalance, setIsLoadingBalance] = useState(false);\n  const [networkStatus, setNetworkStatus] = useState({\n    isCorrectNetwork: false,\n    message: ''\n  });\n  const [showSummary, setShowSummary] = useState(false);\n  const [hasPendingTx, setHasPendingTx] = useState(false);\n\n  // Add state for dropdowns\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n\n  // Network status effect - check for selected network\n  useEffect(() => {\n    if (!isConnected) return;\n    \n    if (chain?.id === selectedFromNetwork.id) {\n      setNetworkStatus({\n        isCorrectNetwork: true,\n        message: `Connected to ${selectedFromNetwork.name}`\n      });\n    } else {\n      setNetworkStatus({\n        isCorrectNetwork: false,\n        message: `Please switch to ${selectedFromNetwork.name}`\n      });\n    }\n  }, [chain?.id, isConnected, selectedFromNetwork]);\n\n  // Balance update effect with optimized polling\n  useEffect(() => {\n    let mounted = true;\n    let timeoutId;\n\n    const fetchBalance = async () => {\n      if (!address || !mounted) return;\n      \n      try {\n        setIsLoadingBalance(true);\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const balance = await provider.getBalance(address);\n        if (mounted) {\n          setEthBalance(ethers.formatEther(balance));\n          setIsLoadingBalance(false);\n        }\n      } catch (error) {\n        if (mounted) {\n          setIsLoadingBalance(false);\n        }\n      }\n    };\n\n    const debouncedFetch = () => {\n      if (timeoutId) clearTimeout(timeoutId);\n      timeoutId = setTimeout(fetchBalance, 1000);\n    };\n\n    fetchBalance();\n\n    if (window.ethereum) {\n      window.ethereum.on('block', debouncedFetch);\n      window.ethereum.on('chainChanged', fetchBalance);\n      window.ethereum.on('accountsChanged', fetchBalance);\n    }\n\n    return () => {\n      mounted = false;\n      if (timeoutId) clearTimeout(timeoutId);\n      if (window.ethereum) {\n        window.ethereum.removeListener('block', debouncedFetch);\n        window.ethereum.removeListener('chainChanged', fetchBalance);\n        window.ethereum.removeListener('accountsChanged', fetchBalance);\n      }\n    };\n  }, [address, chain?.id]);\n\n  // Add transaction status check with error handling\n  const checkTransactionStatus = useCallback(async (txHash) => {\n    try {\n      const provider = new ethers.providers.JsonRpcProvider('https://rpc.sepolia.org');\n      const receipt = await provider.getTransactionReceipt(txHash);\n      return receipt;\n    } catch (error) {\n      return null;\n    }\n  }, []);\n\n  const handleAmountChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n      setAmount(value);\n    }\n  };\n\n  const handleReviewBridge = () => {\n    if (!amount || !networkStatus.isCorrectNetwork) return;\n    \n    const amountNum = parseFloat(amount);\n    const balanceNum = parseFloat(ethBalance);\n    \n    if (amountNum <= 0) {\n      toast.error('Please enter a valid amount');\n      return;\n    }\n    \n    if (amountNum > balanceNum) {\n      toast.error('Insufficient ETH balance');\n      return;\n    }\n\n    setShowSummary(true);\n  };\n\n  // Handle bridge transaction\n  const handleAcceptTerms = async () => {\n    setShowTerms(false);\n    setShowProgress(true);\n    setCurrentStep('start');\n    setLoading(true);\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const userAddress = await signer.getAddress();\n      const txValue = ethers.parseEther(amount);\n      \n      const l1Bridge = new ethers.Contract(selectedFromNetwork.bridgeAddress, L1_BRIDGE_ABI, signer);\n\n      const tx = await l1Bridge.bridgeETHTo(\n        userAddress,\n        200000n,\n        '0x',\n        {\n          value: txValue\n        }\n      );\n      \n      setTxHash(tx.hash);\n      \n      const receipt = await tx.wait();\n      if (receipt.status === 0) {\n        throw new Error('Bridge transaction failed');\n      }\n      \n      setCurrentStep('waiting');\n      \n      setTimeout(() => {\n        setCurrentStep('complete');\n        setLoading(false);\n      }, 180000);\n      \n    } catch (error) {\n      toast.error(error.message || 'Failed to bridge ETH');\n      setLoading(false);\n      setShowProgress(false);\n      setCurrentStep(null);\n      setTxHash(null);\n    }\n  };\n\n  // Add this effect to check transaction status\n  useEffect(() => {\n    const checkPendingTransactions = async () => {\n      if (!address) return;\n      \n      try {\n        const response = await fetch(\n          `https://eth-sepolia.blockscout.com/api/v2/addresses/${address}/transactions?filter=to%7C${selectedFromNetwork.bridgeAddress}`\n        );\n        \n        if (!response.ok) return;\n\n        const data = await response.json();\n        \n        // Check if there are any pending or processing bridge transactions\n        const pendingBridges = data.items\n          .filter(tx => {\n            const txTime = new Date(tx.timestamp).getTime();\n            const minutesPassed = Math.floor((Date.now() - txTime) / (1000 * 60));\n            return tx.to?.hash?.toLowerCase() === selectedFromNetwork.bridgeAddress.toLowerCase() &&\n                   tx.value !== '0' &&\n                   tx.decoded_input?.method_call?.includes('bridgeETH') &&\n                   ((tx.confirmations === 0) || // Pending confirmation\n                    (tx.confirmations > 0 && minutesPassed < 3)); // Processing but not complete\n          });\n\n        setHasPendingTx(pendingBridges.length > 0);\n      } catch (error) {\n        console.error('Error checking pending transactions:', error);\n      }\n    };\n\n    // Check immediately and then every 10 seconds\n    checkPendingTransactions();\n    const interval = setInterval(checkPendingTransactions, 10000);\n\n    return () => clearInterval(interval);\n  }, [address, selectedFromNetwork.bridgeAddress]);\n\n  // Add click handler for network selection\n  const handleNetworkSelect = (network, type) => {\n    if (network.disabled) {\n      toast.error('This network is coming soon!');\n      return;\n    }\n    \n    // If selecting from network\n    if (type === 'from') {\n      setSelectedFromNetwork(network);\n      // Set the corresponding destination network based on mainnet/testnet mode\n      if (isMainnetMode) {\n        setSelectedToNetwork(NETWORKS.unichain.mainnet);\n      } else {\n        setSelectedToNetwork(NETWORKS.unichain.testnet);\n      }\n      setShowFromDropdown(false);\n    } else {\n      // If selecting to network\n      setSelectedToNetwork(network);\n      // Set the corresponding source network based on mainnet/testnet mode\n      if (isMainnetMode) {\n        setSelectedFromNetwork(NETWORKS.eth.mainnet);\n      } else {\n        setSelectedFromNetwork(NETWORKS.eth.testnet);\n      }\n      setShowToDropdown(false);\n    }\n  };\n\n  // Add dropdown component\n  const NetworkDropdown = ({ isOpen, onClose, onSelect, type, anchorRef }) => {\n    if (!isOpen || !anchorRef.current) return null;\n\n    const rect = anchorRef.current.getBoundingClientRect();\n    \n    // Filter networks based on direction and mode\n    const networks = type === 'from' ? NETWORKS.eth : NETWORKS.unichain;\n    const network = isMainnetMode ? networks.mainnet : networks.testnet;\n    \n    return createPortal(\n      <div \n        className=\"fixed z-50\"\n        style={{\n          top: `${rect.bottom + 8}px`,\n          left: type === 'from' ? `${rect.left}px` : 'auto',\n          right: type === 'to' ? `${window.innerWidth - rect.right}px` : 'auto'\n        }}\n      >\n        <div className=\"w-64 bg-white dark:bg-[#1a1b1f] rounded-xl shadow-xl border border-gray-200 dark:border-gray-800 py-2\">\n          <div className=\"px-3 py-1\">\n            <div className=\"text-xs font-medium text-gray-500 dark:text-gray-400 mb-1\">\n              {isMainnetMode ? 'Mainnet' : 'Testnet'}\n            </div>\n            <button\n              onClick={() => onSelect(network)}\n              className=\"w-full flex items-center gap-2 px-3 py-2 rounded-lg hover:bg-gray-100 dark:hover:bg-[#2d2f36] transition-colors\"\n              disabled={network.disabled}\n            >\n              <div className=\"w-8 h-8 rounded-lg bg-gray-100 dark:bg-[#2d2f36] flex items-center justify-center\">\n                <img src={network.logo} alt={network.name} className=\"w-6 h-6\" />\n              </div>\n              <span className=\"text-sm text-gray-900 dark:text-white\">\n                {network.name}\n              </span>\n              {network.comingSoon && (\n                <span className=\"text-xs text-[#00ffbd] ml-auto\">Coming Soon</span>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>,\n      document.body\n    );\n  };\n\n  // Add refs for dropdown positioning\n  const fromButtonRef = useRef(null);\n  const toButtonRef = useRef(null);\n\n  // Add click outside handler\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (fromButtonRef.current && !fromButtonRef.current.contains(event.target)) {\n        setShowFromDropdown(false);\n      }\n      if (toButtonRef.current && !toButtonRef.current.contains(event.target)) {\n        setShowToDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Update useEffect to handle network mode changes\n  useEffect(() => {\n    if (isMainnetMode) {\n      setSelectedFromNetwork(NETWORKS.eth.mainnet);\n      setSelectedToNetwork(NETWORKS.unichain.mainnet);\n    } else {\n      setSelectedFromNetwork(NETWORKS.eth.testnet);\n      setSelectedToNetwork(NETWORKS.unichain.testnet);\n    }\n  }, [isMainnetMode]);\n\n  // Early return for wallet connection\n  if (!isConnected) {\n    return (\n      <div className=\"relative\">\n        {/* L-shaped corners */}\n        <div className=\"absolute -top-[2px] -left-[2px] w-8 h-8\">\n          <div className=\"absolute top-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n          <div className=\"absolute top-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n        </div>\n        <div className=\"absolute -top-[2px] -right-[2px] w-8 h-8\">\n          <div className=\"absolute top-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n          <div className=\"absolute top-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n        </div>\n        <div className=\"absolute -bottom-[2px] -left-[2px] w-8 h-8\">\n          <div className=\"absolute bottom-0 left-0 w-full h-[2px] bg-[#00ffbd]\" />\n          <div className=\"absolute bottom-0 left-0 w-[2px] h-full bg-[#00ffbd]\" />\n        </div>\n        <div className=\"absolute -bottom-[2px] -right-[2px] w-8 h-8\">\n          <div className=\"absolute bottom-0 right-0 w-full h-[2px] bg-[#00ffbd]\" />\n          <div className=\"absolute bottom-0 right-0 w-[2px] h-full bg-[#00ffbd]\" />\n        </div>\n\n        {/* Glowing dots in corners */}\n        <div className=\"absolute -top-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n        <div className=\"absolute -top-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n        <div className=\"absolute -bottom-1 -left-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n        <div className=\"absolute -bottom-1 -right-1 w-2 h-2 rounded-full bg-[#00ffbd] shadow-[0_0_10px_#00ffbd]\" />\n\n        {/* Three animated dots */}\n        <div className=\"absolute top-3 right-3 flex gap-1 z-20\">\n          {[1, 2, 3].map((i) => (\n            <div\n              key={i}\n              className=\"w-1.5 h-1.5 bg-[#00ffbd] rounded-full animate-pulse\"\n              style={{ animationDelay: `${i * 0.2}s` }}\n            />\n          ))}\n        </div>\n\n        {/* Main Content */}\n        <div className=\"relative z-10 bg-white dark:bg-[#0a0b0f] p-6 rounded-xl\">\n          <div className=\"flex flex-col items-center justify-center py-16 px-4\">\n            <div className=\"w-20 h-20 mb-6 rounded-full bg-[#e6fff7] dark:bg-[#002419] flex items-center justify-center\">\n              <svg className=\"w-10 h-10 text-[#00ffbd]\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 9l-6 6m0-6l6 6\" />\n              </svg>\n            </div>\n            <h2 className=\"text-[28px] font-semibold text-gray-900 dark:text-white mb-4\">\n              Connect Your Wallet\n            </h2>\n            <p className=\"text-gray-600 dark:text-[#7f8596] text-center mb-8 max-w-[460px] text-base\">\n              Please connect your wallet to bridge your NFTs between networks. You'll be able to transfer your NFTs across different blockchains.\n            </p>\n            <button\n              onClick={openConnectModal}\n              className=\"inline-flex items-center px-6 py-3 bg-[#00ffbd] hover:bg-[#00ffbd]/90 text-black font-medium rounded-lg transition-colors duration-200\"\n            >\n              <span className=\"mr-2\">+</span>\n              Connect Wallet\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-lg mx-auto\">\n      <div className=\"bg-white dark:bg-[#1a1b1f] rounded-2xl p-4 md:p-6 border border-gray-200 dark:border-gray-800 shadow-sm\">\n        {/* History Button and Network Mode Toggle */}\n        <div className=\"flex justify-between items-center mb-4\">\n          {/* Network Mode Toggle */}\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={() => setIsMainnetMode(true)}\n              className={`px-3 py-1.5 rounded-lg text-sm font-medium transition-colors ${\n                isMainnetMode\n                  ? 'bg-[#00ffbd] text-black'\n                  : 'bg-gray-100 dark:bg-gray-800 text-gray-500 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700'\n              }`}\n            >\n              Mainnet\n            </button>\n            <button\n              onClick={() => setIsMainnetMode(false)}\n              className={`px-3 py-1.5 rounded-lg text-sm font-medium transition-colors ${\n                !isMainnetMode\n                  ? 'bg-[#00ffbd] text-black'\n                  : 'bg-gray-100 dark:bg-gray-800 text-gray-500 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700'\n              }`}\n            >\n              Testnet\n            </button>\n          </div>\n\n          {/* History Button */}\n          <button\n            onClick={() => setShowActivity(true)}\n            className=\"flex items-center gap-3 px-4 py-2 bg-gray-50 dark:bg-[#2d2f36] rounded-full text-sm text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-[#3d4046] transition-colors border border-gray-200 dark:border-gray-700\"\n          >\n            <BiTime \n              className={`text-[#00ffbd] ${hasPendingTx ? 'animate-spin' : ''}`} \n              size={20} \n            />\n            <span>History</span>\n            {hasPendingTx && (\n              <div className=\"w-2.5 h-2.5 rounded-full bg-[#00ffbd] animate-pulse\" />\n            )}\n          </button>\n        </div>\n\n        {/* Networks Section */}\n        <div className=\"relative bg-gray-50 dark:bg-[#1a1b1f] rounded-xl p-4 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex-1\">\n              <div className=\"text-sm text-gray-500 dark:text-gray-400 mb-2\">From</div>\n              <div className=\"relative\" ref={fromButtonRef}>\n                <button\n                  className=\"flex items-center gap-2 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-[#3d4046] transition-colors\"\n                  onClick={() => {\n                    setShowFromDropdown(!showFromDropdown);\n                    setShowToDropdown(false);\n                  }}\n                >\n                  <div className=\"w-10 h-10 rounded-lg bg-[#627EEA]/10 dark:bg-[#627EEA]/20 flex items-center justify-center\">\n                    <img src={selectedFromNetwork.logo} alt={selectedFromNetwork.name} className=\"w-7 h-7\" />\n                  </div>\n                  <span className=\"text-gray-900 dark:text-white font-medium\">{selectedFromNetwork.name}</span>\n                  <BiChevronDown \n                    className={`ml-1 transition-transform text-gray-900 dark:text-white ${showFromDropdown ? 'rotate-180' : ''}`}\n                    size={20}\n                  />\n                </button>\n\n                <NetworkDropdown\n                  isOpen={showFromDropdown}\n                  onClose={() => setShowFromDropdown(false)}\n                  onSelect={(network) => handleNetworkSelect(network, 'from')}\n                  type=\"from\"\n                  anchorRef={fromButtonRef}\n                />\n              </div>\n            </div>\n\n            <div className=\"relative\">\n              <motion.div \n                className=\"w-10 h-10 rounded-full bg-white dark:bg-[#1a1b1f] flex items-center justify-center border border-gray-200 dark:border-gray-700\"\n                animate={{ x: [0, 5, 0] }}\n                transition={{ \n                  duration: 1.5,\n                  ease: \"easeInOut\",\n                  repeat: Infinity,\n                }}\n              >\n                <FaArrowRight size={16} className=\"text-[#00ffbd]\" />\n              </motion.div>\n            </div>\n\n            <div className=\"flex-1 text-right pl-6\">\n              <div className=\"text-sm text-gray-500 dark:text-gray-400 mb-2\">To</div>\n              <div className=\"flex items-center gap-2 justify-end\">\n                <div className=\"relative\" ref={toButtonRef}>\n                  <button\n                    className=\"flex items-center gap-2 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-[#3d4046] transition-colors\"\n                    onClick={() => {\n                      setShowToDropdown(!showToDropdown);\n                      setShowFromDropdown(false);\n                    }}\n                  >\n                    <div className=\"w-10 h-10 rounded-lg bg-[#FF3B9A]/10 dark:bg-[#FF3B9A]/20 flex items-center justify-center\">\n                      <img src={selectedToNetwork.logo} alt={selectedToNetwork.name} className=\"w-7 h-7\" />\n                    </div>\n                    <span className=\"text-gray-900 dark:text-white font-medium\">{selectedToNetwork.name}</span>\n                    <BiChevronDown \n                      className={`ml-1 transition-transform text-gray-900 dark:text-white ${showToDropdown ? 'rotate-180' : ''}`}\n                      size={20}\n                    />\n                  </button>\n\n                  <NetworkDropdown\n                    isOpen={showToDropdown}\n                    onClose={() => setShowToDropdown(false)}\n                    onSelect={(network) => handleNetworkSelect(network, 'to')}\n                    type=\"to\"\n                    anchorRef={toButtonRef}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Amount Input */}\n        <div className=\"space-y-4\">\n          <div>\n            <div className=\"flex justify-between items-center mb-2\">\n              <Tooltip content={\n                <div>\n                  Min: 0.001 ETH<br />\n                  Max: 100 ETH\n                </div>\n              }>\n                <div className=\"flex items-center gap-1 text-sm text-gray-500 dark:text-gray-400 cursor-help\">\n                  <InformationCircleIcon className=\"h-4 w-4\" />\n                  Bridge Limits\n                </div>\n              </Tooltip>\n              \n              <AnimatePresence mode=\"wait\">\n                <motion.div\n                  key={isLoadingBalance ? 'loading' : 'loaded'}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                  transition={{ duration: 0.2 }}\n                  className=\"flex items-center gap-2\"\n                >\n                  <BiWallet className=\"text-gray-500 dark:text-gray-400\" size={20} />\n                  <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {isLoadingBalance ? (\n                      <motion.div\n                        className=\"h-4 w-24 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\"\n                      />\n                    ) : (\n                      `Balance: ${parseFloat(ethBalance).toFixed(4)} ETH`\n                    )}\n                  </span>\n                </motion.div>\n              </AnimatePresence>\n            </div>\n            \n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                value={amount}\n                onChange={handleAmountChange}\n                placeholder=\"0.0\"\n                className={`w-full px-4 py-3 bg-gray-50 dark:bg-[#1a1b1f] border border-gray-200 dark:border-gray-700 rounded-xl text-gray-900 dark:text-white focus:ring-2 focus:ring-[#00ffbd] focus:border-transparent text-2xl font-medium ${\n                  loading ? 'opacity-50 cursor-not-allowed' : ''\n                }`}\n                disabled={loading}\n              />\n            </div>\n          </div>\n\n          {/* Bridge Details */}\n          <div className=\"p-4 bg-gray-50 dark:bg-[#1a1b1f] rounded-xl border border-gray-200 dark:border-gray-700 space-y-3\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <span className=\"text-base text-gray-900 dark:text-white font-medium\">Get on Unichain Sepolia</span>\n              <div className=\"flex items-center gap-2 bg-[#FF3B9A]/10 dark:bg-[#FF3B9A]/20 px-3 py-1.5 rounded-lg\">\n                <img src=\"/unichain-logo.png\" alt=\"Unichain\" className=\"w-4 h-4\" />\n                <span className=\"text-sm text-gray-900 dark:text-white font-medium\">Native Bridge</span>\n              </div>\n            </div>\n\n            <div className=\"flex justify-between items-center\">\n              <Tooltip content=\"Transaction fee will be calculated by your wallet\">\n                <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400 cursor-help\">\n                  <FaGasPump className=\"text-gray-500 dark:text-gray-400\" size={16} />\n                  <span>Network Fee</span>\n                  <InformationCircleIcon className=\"h-4 w-4\" />\n                </div>\n              </Tooltip>\n              \n              <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                Check wallet for fee\n              </span>\n            </div>\n\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\n                <BiTime className=\"text-gray-500 dark:text-gray-400\" size={18} />\n                <span>Estimated time</span>\n              </div>\n              <span className=\"text-sm text-gray-900 dark:text-white\">~3 mins</span>\n            </div>\n\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600 dark:text-gray-400\">You will receive</span>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm text-gray-900 dark:text-white font-medium\">{amount || '0'}</span>\n                <div className=\"flex items-center gap-1\">\n                  <img src=\"/eth-logo.png\" alt=\"ETH\" className=\"w-5 h-5\" />\n                  <span className=\"text-sm text-gray-900 dark:text-white font-medium\">ETH</span>\n                  <div className=\"relative w-3 h-3\">\n                    <img \n                      src=\"/unichain-logo.png\"\n                      alt=\"Unichain\" \n                      className=\"w-3 h-3 absolute -bottom-1 -right-1\" \n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <button\n          onClick={handleReviewBridge}\n          disabled={!amount || loading || !networkStatus.isCorrectNetwork}\n          className={`w-full mt-6 px-4 py-3 rounded-xl font-medium text-base transition-all duration-200 hover:scale-[0.99] active:scale-[0.97] ${\n            amount && !loading && networkStatus.isCorrectNetwork\n              ? 'bg-[#00ffbd] text-black hover:bg-[#00e6a9] shadow-lg hover:shadow-xl'\n              : 'bg-gray-200 dark:bg-gray-700 text-gray-400 dark:text-gray-500 cursor-not-allowed'\n          }`}\n        >\n          {loading \n            ? 'Processing...' \n            : !networkStatus.isCorrectNetwork \n              ? 'Please switch to Sepolia'\n              : !amount \n                ? 'Enter amount'\n                : 'Review bridge'\n          }\n        </button>\n      </div>\n\n      {/* Add info section about other bridges */}\n      <div className=\"mt-4 md:mt-6 p-4 bg-gray-50 dark:bg-[#1a1b1f] rounded-xl border border-gray-200 dark:border-gray-700\">\n        <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">Looking to bridge from Unichain to Sepolia?</h3>\n        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n          Try these alternative bridges:{' '}\n          <a \n            href=\"https://superbridge.app/unichain-sepolia\" \n            target=\"_blank\" \n            rel=\"noopener noreferrer\" \n            className=\"text-[#00ffbd] hover:text-[#00e6a9] mr-2\"\n          >\n            SuperBridge\n          </a>\n          {' '}or{' '}\n          <a \n            href=\"https://testnet.brid.gg/unichain-sepolia\" \n            target=\"_blank\" \n            rel=\"noopener noreferrer\" \n            className=\"text-[#00ffbd] hover:text-[#00e6a9]\"\n          >\n            Brid.gg\n          </a>\n        </p>\n      </div>\n\n      <ActivityModal\n        isOpen={showActivity}\n        onClose={() => setShowActivity(false)}\n        address={address}\n        setShowProgress={setShowProgress}\n        setCurrentStep={setCurrentStep}\n        setTxHash={setTxHash}\n      />\n\n      <TermsModal\n        isOpen={showTerms}\n        onClose={() => setShowTerms(false)}\n        onAccept={handleAcceptTerms}\n      />\n\n      <BridgeProgressModal\n        isOpen={showProgress}\n        onClose={() => setShowProgress(false)}\n        currentStep={currentStep}\n        txHash={txHash}\n        fromNetwork={selectedFromNetwork}\n        toNetwork={selectedToNetwork}\n      />\n\n      <TransactionSummaryModal\n        isOpen={showSummary}\n        onClose={() => setShowSummary(false)}\n        onConfirm={() => {\n          setShowSummary(false);\n          setShowTerms(true);\n        }}\n        amount={amount}\n        fromNetwork={selectedFromNetwork}\n        toNetwork={selectedToNetwork}\n      />\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { useAccount } from 'wagmi';\nimport { ethers } from 'ethers';\nimport { toast } from 'react-hot-toast';\n\nconst ADMIN_WALLET = \"0x5828D525fe00902AE22f2270Ac714616651894fF\";\n\n// Add method ID constants\nconst METHOD_IDS = {\n  TOKEN_CREATE: \"0x6962f49e\",\n  NFT_CREATE: \"0x54a9c682\"\n};\n\nconst CHAIN_INFO = {\n  137: {\n    name: \"Polygon\",\n    currency: \"POL\",\n    factoryAddress: import.meta.env.VITE_FACTORY_ADDRESS_137,\n    nftFactoryAddress: import.meta.env.VITE_NFT_FACTORY_POLYGON,\n    rpc: \"https://polygon-rpc.com\",\n    chainId: \"0x89\" // 137 in hex\n  },\n  130: {\n    name: \"Unichain Mainnet\",\n    currency: \"ETH\",\n    factoryAddress: import.meta.env.VITE_FACTORY_ADDRESS_130,\n    nftFactoryAddress: import.meta.env.VITE_NFT_FACTORY_UNICHAIN_MAINNET,\n    rpc: \"https://mainnet.unichain.org\",\n    chainId: \"0x82\" // 130 in hex\n  },\n  1301: {\n    name: \"Unichain\",\n    currency: \"ETH\",\n    factoryAddress: import.meta.env.VITE_FACTORY_ADDRESS_1301,\n    nftFactoryAddress: import.meta.env.VITE_NFT_FACTORY_UNICHAIN,\n    rpc: \"https://sepolia.unichain.org\",\n    chainId: \"0x515\" // 1301 in hex\n  },\n  1828369849: {\n    name: \"Moonwalker\",\n    currency: \"ZERO\",\n    factoryAddress: import.meta.env.VITE_FACTORY_ADDRESS_1828369849,\n    nftFactoryAddress: import.meta.env.VITE_NFT_FACTORY_MOONWALKER,\n    rpc: \"https://moonwalker-rpc.eu-north-2.gateway.fm\",\n    chainId: \"0x6CFF49C9\" // 1828369849 in hex\n  },\n  10143: {\n    name: \"Monad Testnet\",\n    currency: \"MON\",\n    factoryAddress: import.meta.env.VITE_FACTORY_ADDRESS_10143,\n    nftFactoryAddress: import.meta.env.VITE_NFT_FACTORY_MONAD_TESTNET,\n    rpc: \"https://testnet-rpc.monad.xyz/\",\n    chainId: \"0x279F\" // 10143 in hex\n  }\n};\n\nconst FACTORY_ABI = [\n  \"function chainFees(uint256) view returns (uint256)\",\n  \"function setChainFee(uint256,uint256)\",\n  \"function getChainFee() view returns (uint256)\",\n  \"function withdrawFees() external\",\n  \"function withdraw() external\",\n  \"event TokenCreated(address indexed creator, address indexed tokenAddress, string name, string symbol, uint8 decimals, uint256 initialSupply, string logoURI)\",\n  \"event NFTCollectionCreated(address indexed creator, address collectionAddress)\"\n];\n\nfunction FeesTracker() {\n  const { address } = useAccount();\n  const [selectedChain, setSelectedChain] = useState(\"1301\"); // Default to Unichain\n  const [fees, setFees] = useState({});\n  const [earnedFees, setEarnedFees] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [newFees, setNewFees] = useState({});\n  const [error, setError] = useState(null);\n  const [creatorStats, setCreatorStats] = useState({});\n  const [transactions, setTransactions] = useState({ tokens: [], nfts: [] });\n\n  const isAdmin = address?.toLowerCase() === ADMIN_WALLET.toLowerCase();\n\n  const getProvider = (chainId) => {\n    const network = CHAIN_INFO[chainId];\n    return new ethers.JsonRpcProvider(\n      network.rpc,\n      {\n        chainId: Number(chainId),\n        name: network.name,\n      }\n    );\n  };\n\n  const fetchCreatorStats = async () => {\n    try {\n      const uniqueTokenCreators = new Set();\n      const uniqueNFTCreators = new Set();\n      const uniqueRecentTokenCreators = new Set();\n      const uniqueRecentNFTCreators = new Set();\n      let totalTokenCreations = 0;\n      let totalNFTCreations = 0;\n      let recent24hTokenCreations = 0;\n      let recent24hNFTCreations = 0;\n      const tokenTxs = [];\n      const nftTxs = [];\n      \n      const oneDayAgo = Math.floor((Date.now() - 24 * 60 * 60 * 1000) / 1000);\n      const info = CHAIN_INFO[selectedChain];\n\n      try {\n        const baseUrl = selectedChain === \"1301\" \n          ? \"https://unichain-sepolia.blockscout.com\"\n          : selectedChain === \"130\"\n          ? \"https://unichain.blockscout.com\"\n          : selectedChain === \"137\"\n          ? \"https://api.polygonscan.com/api\"\n          : \"https://moonwalker-blockscout.eu-north-2.gateway.fm\";\n\n        // For Polygon, use Polygonscan API\n        if (selectedChain === \"137\") {\n          const apiKey = import.meta.env.VITE_POLYGONSCAN_API_KEY;\n          const tokenCreationsUrl = `${baseUrl}?module=account&action=txlist&address=${info.factoryAddress}&apikey=${apiKey}`;\n          const nftCreationsUrl = `${baseUrl}?module=account&action=txlist&address=${info.nftFactoryAddress}&apikey=${apiKey}`;\n          \n          const [tokenResponse, nftResponse] = await Promise.all([\n            fetch(tokenCreationsUrl),\n            fetch(nftCreationsUrl)\n          ]);\n\n          if (!tokenResponse.ok || !nftResponse.ok) {\n            throw new Error(`Polygonscan API request failed`);\n          }\n\n          const [tokenData, nftData] = await Promise.all([\n            tokenResponse.json(),\n            nftResponse.json()\n          ]);\n\n          // Process NFT creations from Polygonscan\n          if (nftData.result && Array.isArray(nftData.result)) {\n            for (const tx of nftData.result) {\n              if (tx.to?.toLowerCase() === info.nftFactoryAddress?.toLowerCase() && \n                  tx.isError === \"0\" &&\n                  tx.input?.startsWith(METHOD_IDS.NFT_CREATE)) {\n                totalNFTCreations++;\n                const creator = tx.from?.toLowerCase();\n                if (creator) {\n                  uniqueNFTCreators.add(creator);\n                  \n                  const txTimestamp = parseInt(tx.timeStamp);\n                  if (txTimestamp >= oneDayAgo) {\n                    uniqueRecentNFTCreators.add(creator);\n                    recent24hNFTCreations++;\n                  }\n\n                  nftTxs.push({\n                    hash: tx.hash,\n                    creator: tx.from,\n                    timestamp: new Date(txTimestamp * 1000).toISOString(),\n                    blockNumber: tx.blockNumber\n                  });\n                }\n              }\n            }\n          }\n\n          // Process token creations from Polygonscan\n          if (tokenData.result && Array.isArray(tokenData.result)) {\n            for (const tx of tokenData.result) {\n              if (tx.to?.toLowerCase() === info.factoryAddress?.toLowerCase() && \n                  tx.isError === \"0\" &&\n                  tx.input?.startsWith(METHOD_IDS.TOKEN_CREATE)) {\n                totalTokenCreations++;\n                const creator = tx.from?.toLowerCase();\n                if (creator) {\n                  uniqueTokenCreators.add(creator);\n                  \n                  const txTimestamp = parseInt(tx.timeStamp);\n                  if (txTimestamp >= oneDayAgo) {\n                    uniqueRecentTokenCreators.add(creator);\n                    recent24hTokenCreations++;\n                  }\n\n                  tokenTxs.push({\n                    hash: tx.hash,\n                    creator: tx.from,\n                    timestamp: new Date(txTimestamp * 1000).toISOString(),\n                    blockNumber: tx.blockNumber\n                  });\n                }\n              }\n            }\n          }\n        } else {\n          // Original Blockscout API handling for other networks\n          const tokenCreationsUrl = `${baseUrl}/api/v2/addresses/${info.factoryAddress}/transactions?filter=to|from`;\n          const nftCreationsUrl = `${baseUrl}/api/v2/addresses/${info.nftFactoryAddress}/transactions?filter=to|from`;\n          \n          const [tokenResponse, nftResponse] = await Promise.all([\n            fetch(tokenCreationsUrl),\n            fetch(nftCreationsUrl)\n          ]);\n\n          if (!tokenResponse.ok || !nftResponse.ok) {\n            throw new Error(`Blockscout API request failed`);\n          }\n\n          const [tokenData, nftData] = await Promise.all([\n            tokenResponse.json(),\n            nftResponse.json()\n          ]);\n          \n          // Process NFT creations\n          if (nftData.items && Array.isArray(nftData.items)) {\n            for (const tx of nftData.items) {\n              // Check for NFT creation method calls using method ID\n              if (tx.to?.hash?.toLowerCase() === info.nftFactoryAddress?.toLowerCase() && \n                  tx.status === \"ok\" &&\n                  (tx.method === METHOD_IDS.NFT_CREATE || tx.decoded_input?.method_id === METHOD_IDS.NFT_CREATE.slice(2))) {\n                console.log(\"Found NFT creation:\", tx.hash, tx.method, tx.decoded_input?.method_id);\n                totalNFTCreations++;\n                const creator = tx.from?.hash?.toLowerCase();\n                if (creator) {\n                  uniqueNFTCreators.add(creator);\n                  \n                  const txTimestamp = new Date(tx.timestamp).getTime() / 1000;\n                  if (txTimestamp >= oneDayAgo) {\n                    uniqueRecentNFTCreators.add(creator);\n                    recent24hNFTCreations++;\n                  }\n\n                  // Store transaction details\n                  nftTxs.push({\n                    hash: tx.hash,\n                    creator: tx.from.hash,\n                    timestamp: tx.timestamp,\n                    blockNumber: tx.block_number\n                  });\n                }\n              }\n            }\n          }\n\n          // Process token creations\n          if (tokenData.items && Array.isArray(tokenData.items)) {\n            for (const tx of tokenData.items) {\n              // Check for token creation method calls using method ID\n              if (tx.to?.hash?.toLowerCase() === info.factoryAddress?.toLowerCase() && \n                  tx.status === \"ok\" &&\n                  (tx.method === METHOD_IDS.TOKEN_CREATE || tx.decoded_input?.method_id === METHOD_IDS.TOKEN_CREATE.slice(2))) {\n                console.log(\"Found token creation:\", tx.hash, tx.method, tx.decoded_input?.method_id);\n                totalTokenCreations++;\n                const creator = tx.from?.hash?.toLowerCase();\n                if (creator) {\n                  uniqueTokenCreators.add(creator);\n                  \n                  const txTimestamp = new Date(tx.timestamp).getTime() / 1000;\n                  if (txTimestamp >= oneDayAgo) {\n                    uniqueRecentTokenCreators.add(creator);\n                    recent24hTokenCreations++;\n                  }\n\n                  // Store transaction details\n                  tokenTxs.push({\n                    hash: tx.hash,\n                    creator: tx.from.hash,\n                    timestamp: tx.timestamp,\n                    blockNumber: tx.block_number\n                  });\n                }\n              }\n            }\n          }\n        }\n\n        setCreatorStats({\n          totalTokenCreators: totalTokenCreations,\n          totalNFTCreators: totalNFTCreations,\n          last24hTokenCreators: recent24hTokenCreations,\n          last24hNFTCreators: recent24hNFTCreations,\n          uniqueTokenCreators: uniqueTokenCreators.size,\n          uniqueNFTCreators: uniqueNFTCreators.size\n        });\n\n        // Set transaction details\n        setTransactions({\n          tokens: tokenTxs.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)),\n          nfts: nftTxs.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n        });\n\n      } catch (error) {\n        // Fallback to on-chain fetching if Blockscout fails\n        await fetchTokenEventsFromChain(uniqueTokenCreators, uniqueRecentTokenCreators, oneDayAgo);\n        await fetchNFTEventsFromChain(uniqueNFTCreators, uniqueRecentNFTCreators, oneDayAgo);\n      }\n\n    } catch (error) {\n      toast.error('Error fetching creator statistics');\n    }\n  };\n\n  // Helper function for fallback chain fetching\n  const fetchTokenEventsFromChain = async (uniqueTokenCreators, uniqueRecentTokenCreators, oneDayAgo) => {\n    const info = CHAIN_INFO[selectedChain];\n    const provider = getProvider(selectedChain);\n    await provider.ready;\n    const tokenFactory = new ethers.Contract(info.factoryAddress, FACTORY_ABI, provider);\n    \n    const latestBlock = await provider.getBlockNumber();\n    const CHUNK_SIZE = 2000;\n    const startBlock = Math.max(0, latestBlock - 50000);\n\n    for (let fromBlock = startBlock; fromBlock <= latestBlock; fromBlock += CHUNK_SIZE) {\n      const toBlock = Math.min(fromBlock + CHUNK_SIZE - 1, latestBlock);\n      try {\n        const tokenFilter = {\n          address: info.factoryAddress,\n          topics: [\n            ethers.id(\"TokenCreated(address,address,string,string,uint8,uint256,string)\")\n          ],\n          fromBlock,\n          toBlock\n        };\n        \n        const tokenEvents = await provider.getLogs(tokenFilter);\n        \n        for (const event of tokenEvents) {\n          const creator = ethers.dataSlice(event.topics[1], 12).toLowerCase();\n          uniqueTokenCreators.add(creator);\n          \n          const block = await provider.getBlock(event.blockNumber);\n          if (block && block.timestamp >= oneDayAgo) {\n            uniqueRecentTokenCreators.add(creator);\n          }\n        }\n      } catch (error) {\n        // Silent fail for individual chunk errors\n      }\n    }\n  };\n\n  // Helper function for fallback NFT chain fetching\n  const fetchNFTEventsFromChain = async (uniqueNFTCreators, uniqueRecentNFTCreators, oneDayAgo) => {\n    const info = CHAIN_INFO[selectedChain];\n    const provider = getProvider(selectedChain);\n    await provider.ready;\n    const nftFactory = new ethers.Contract(info.nftFactoryAddress, FACTORY_ABI, provider);\n    \n    const latestBlock = await provider.getBlockNumber();\n    const CHUNK_SIZE = 2000;\n    const startBlock = Math.max(0, latestBlock - 50000);\n\n    for (let fromBlock = startBlock; fromBlock <= latestBlock; fromBlock += CHUNK_SIZE) {\n      const toBlock = Math.min(fromBlock + CHUNK_SIZE - 1, latestBlock);\n      try {\n        const nftFilter = nftFactory.filters.NFTCollectionCreated();\n        const nftEvents = await nftFactory.queryFilter(nftFilter, fromBlock, toBlock);\n        \n        for (const event of nftEvents) {\n          const creator = event.args.creator.toLowerCase();\n          uniqueNFTCreators.add(creator);\n          \n          const block = await provider.getBlock(event.blockNumber);\n          if (block && block.timestamp >= oneDayAgo) {\n            uniqueRecentNFTCreators.add(creator);\n          }\n        }\n      } catch (error) {\n        // Silent fail for individual chunk errors\n      }\n    }\n  };\n\n  const withdrawFees = async (chainId, type) => {\n    if (!isAdmin) {\n      toast.error('Only admin can withdraw fees');\n      return;\n    }\n\n    const toastId = toast.loading('Preparing withdrawal...');\n\n    try {\n      // Get current chain ID from MetaMask\n      const currentChainId = await window.ethereum.request({ method: 'eth_chainId' });\n      const targetChainId = CHAIN_INFO[chainId].chainId;\n\n      // Switch network if needed\n      if (currentChainId !== targetChainId) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: targetChainId }],\n          });\n          // Wait for network switch\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        } catch (error) {\n          toast.error('Failed to switch network', { id: toastId });\n          return;\n        }\n      }\n\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      \n      const factoryAddress = type === 'token' \n        ? CHAIN_INFO[chainId].factoryAddress \n        : CHAIN_INFO[chainId].nftFactoryAddress;\n      \n      const factory = new ethers.Contract(factoryAddress, FACTORY_ABI, signer);\n\n      // Check if there are fees to withdraw\n      const amountToWithdraw = type === 'token' \n        ? earnedFees[chainId]?.token \n        : earnedFees[chainId]?.nft;\n\n      if (!amountToWithdraw || amountToWithdraw === \"0\") {\n        toast.error('No fees available to withdraw', { id: toastId });\n        return;\n      }\n\n      toast.loading('Please confirm the transaction...', { id: toastId });\n      \n      // Call the appropriate withdraw function based on the type - no parameters needed\n      const tx = await (type === 'token' ? factory.withdraw() : factory.withdrawFees());\n      \n      toast.loading('Processing withdrawal...', { id: toastId });\n      \n      await tx.wait();\n      toast.success('Fees withdrawn successfully', { id: toastId });\n      \n      // Refresh earned fees\n      await fetchEarnedFees();\n    } catch (error) {\n      console.error('Error withdrawing fees:', error);\n      toast.error(`Error withdrawing fees: ${error.message}`, { id: toastId });\n    }\n  };\n\n  const fetchEarnedFees = async () => {\n    const earned = {};\n\n    try {\n      const info = CHAIN_INFO[selectedChain];\n      try {\n        const provider = getProvider(selectedChain);\n        await provider.ready;\n\n        const tokenFactory = new ethers.Contract(info.factoryAddress, FACTORY_ABI, provider);\n        const nftFactory = new ethers.Contract(info.nftFactoryAddress, FACTORY_ABI, provider);\n\n        const [tokenBalance, nftBalance] = await Promise.all([\n          provider.getBalance(info.factoryAddress),\n          provider.getBalance(info.nftFactoryAddress)\n        ]);\n\n        earned[selectedChain] = {\n          token: ethers.formatEther(tokenBalance || \"0\"),\n          nft: ethers.formatEther(nftBalance || \"0\"),\n          currency: info.currency\n        };\n      } catch (chainError) {\n        earned[selectedChain] = {\n          token: \"0\",\n          nft: \"0\",\n          currency: info.currency,\n          error: true\n        };\n      }\n\n      setEarnedFees(earned);\n    } catch (error) {\n      toast.error('Error fetching earned fees');\n    }\n  };\n\n  const fetchFees = async () => {\n    setLoading(true);\n    setError(null);\n    const newFees = {};\n\n    try {\n      const info = CHAIN_INFO[selectedChain];\n      try {\n        const provider = getProvider(selectedChain);\n        await provider.ready;\n\n        const tokenFactory = new ethers.Contract(info.factoryAddress, FACTORY_ABI, provider);\n        const nftFactory = new ethers.Contract(info.nftFactoryAddress, FACTORY_ABI, provider);\n\n        const [tokenFee, nftFee] = await Promise.all([\n          tokenFactory.chainFees(selectedChain),\n          nftFactory.chainFees(selectedChain)\n        ]);\n\n        newFees[selectedChain] = {\n          token: ethers.formatEther(tokenFee || \"0\"),\n          nft: ethers.formatEther(nftFee || \"0\"),\n          currency: info.currency\n        };\n      } catch (chainError) {\n        newFees[selectedChain] = {\n          token: \"0\",\n          nft: \"0\",\n          currency: info.currency,\n          error: true\n        };\n        setError(`Error fetching fees for ${info.name}. Please try again.`);\n      }\n\n      setFees(newFees);\n    } catch (error) {\n      setError('Failed to fetch fees. Please try again.');\n      toast.error('Error fetching fees');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateFee = async (chainId, type, newFee) => {\n    if (!isAdmin) {\n      toast.error('Only admin can update fees');\n      return;\n    }\n\n    if (!newFee || isNaN(newFee)) {\n      toast.error('Please enter a valid fee amount');\n      return;\n    }\n\n    const toastId = toast.loading('Updating fee...');\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      \n      const factoryAddress = type === 'token' \n        ? CHAIN_INFO[chainId].factoryAddress \n        : CHAIN_INFO[chainId].nftFactoryAddress;\n      \n      const factory = new ethers.Contract(factoryAddress, FACTORY_ABI, signer);\n\n      const tx = await factory.setChainFee(\n        chainId,\n        ethers.parseEther(newFee.toString())\n      );\n\n      await tx.wait();\n      toast.success('Fee updated successfully', { id: toastId });\n      \n      await fetchFees();\n    } catch (error) {\n      toast.error('Error updating fee. Please try again.', { id: toastId });\n    }\n  };\n\n  useEffect(() => {\n    fetchFees();\n    fetchEarnedFees();\n    fetchCreatorStats();\n  }, [selectedChain]); // Refetch when chain changes\n\n  if (!isAdmin) {\n    return (\n      <div className=\"min-h-screen bg-[#0a0a0a] text-white p-6\">\n        <h1 className=\"text-xl font-bold text-red-500\">Access Denied</h1>\n        <p className=\"text-gray-400 mt-2\">Only admin can access this page.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] text-white\">\n      <div className=\"max-w-7xl mx-auto p-6 space-y-6\">\n        {/* Header */}\n        <div className=\"flex flex-col space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-3xl font-bold text-white\">Fees Dashboard</h1>\n            <button \n              onClick={() => {\n                fetchFees();\n                fetchEarnedFees();\n                fetchCreatorStats();\n              }}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n              </svg>\n              Refresh Data\n            </button>\n          </div>\n          \n          {/* Network Selector */}\n          <div className=\"flex gap-4\">\n            {Object.entries(CHAIN_INFO).map(([chainId, info]) => (\n              <button\n                key={chainId}\n                onClick={() => setSelectedChain(chainId)}\n                className={`px-6 py-3 rounded-xl flex items-center gap-2 transition-all ${\n                  selectedChain === chainId\n                    ? 'bg-blue-600 text-white shadow-lg shadow-blue-900/20'\n                    : 'bg-[#1a1a1a] text-gray-400 hover:bg-[#222222]'\n                }`}\n              >\n                <span className={`w-2 h-2 rounded-full ${\n                  selectedChain === chainId ? 'bg-white' : 'bg-gray-600'\n                }`}></span>\n                <span className=\"font-medium\">{info.name}</span>\n                <span className=\"text-xs px-2 py-1 rounded bg-black/30\">\n                  {info.currency}\n                </span>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"p-4 bg-red-900/20 border border-red-900/30 rounded-xl text-red-400 flex items-center gap-3\">\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            {error}\n          </div>\n        )}\n\n        {loading ? (\n          <div className=\"flex items-center justify-center h-64 text-gray-400\">\n            <svg className=\"animate-spin h-8 w-8 mr-3\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            <span className=\"text-lg\">Loading dashboard data...</span>\n          </div>\n        ) : (\n          <div className=\"grid gap-6\">\n            {/* Stats Overview */}\n            <div className=\"grid grid-cols-2 gap-6\">\n              <div className=\"bg-gradient-to-br from-blue-600/10 to-blue-800/10 rounded-xl border border-blue-900/20 p-6\">\n                <h3 className=\"text-blue-400 font-medium mb-2\">Token Creations</h3>\n                <div className=\"flex items-end justify-between\">\n                  <div>\n                    <p className=\"text-3xl font-bold text-white\">{creatorStats.totalTokenCreators || 0}</p>\n                    <p className=\"text-sm text-blue-400 mt-1\">\n                      <span className=\"text-green-400\">+{creatorStats.last24hTokenCreators || 0}</span> in last 24h\n                    </p>\n                    <p className=\"text-xs text-gray-500 mt-2\">\n                      {creatorStats.uniqueTokenCreators || 0} unique creators\n                    </p>\n                  </div>\n                  <svg className=\"w-12 h-12 text-blue-500/20\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm3 1h6v2H7V5zm8 5.5a.5.5 0 01-.5.5h-7a.5.5 0 010-1h7a.5.5 0 01.5.5zm0 2a.5.5 0 01-.5.5h-7a.5.5 0 010-1h7a.5.5 0 01.5.5z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n              </div>\n              <div className=\"bg-gradient-to-br from-purple-600/10 to-purple-800/10 rounded-xl border border-purple-900/20 p-6\">\n                <h3 className=\"text-purple-400 font-medium mb-2\">NFT Creations</h3>\n                <div className=\"flex items-end justify-between\">\n                  <div>\n                    <p className=\"text-3xl font-bold text-white\">{creatorStats.totalNFTCreators || 0}</p>\n                    <p className=\"text-sm text-purple-400 mt-1\">\n                      <span className=\"text-green-400\">+{creatorStats.last24hNFTCreators || 0}</span> in last 24h\n                    </p>\n                    <p className=\"text-xs text-gray-500 mt-2\">\n                      {creatorStats.uniqueNFTCreators || 0} unique creators\n                    </p>\n                  </div>\n                  <svg className=\"w-12 h-12 text-purple-500/20\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n\n            {/* Fees Management */}\n            <div className=\"grid grid-cols-2 gap-6\">\n              {/* Token Factory Fees */}\n              <div className=\"bg-[#111111] rounded-xl border border-gray-800/50 overflow-hidden\">\n                <div className=\"px-6 py-4 bg-[#0f0f0f] border-b border-gray-800/50\">\n                  <div className=\"flex items-center justify-between\">\n                    <h2 className=\"text-lg font-medium text-white\">Token Factory Fee</h2>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-sm text-gray-500\">Earned:</span>\n                      <span className=\"text-green-400 font-medium\">\n                        {earnedFees[selectedChain]?.token ?? '0'} {CHAIN_INFO[selectedChain].currency}\n                      </span>\n                      {earnedFees[selectedChain]?.token > 0 && (\n                        <button\n                          onClick={() => withdrawFees(selectedChain, 'token')}\n                          className=\"ml-2 px-3 py-1 bg-green-600/20 text-green-400 rounded-lg hover:bg-green-600/30 transition-colors text-sm font-medium\"\n                        >\n                          Withdraw\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"p-6\">\n                  <div className=\"flex items-center gap-3\">\n                    <input\n                      type=\"number\"\n                      step=\"0.000000000000000001\"\n                      className=\"flex-1 bg-[#0a0a0a] border border-gray-800/50 rounded-xl px-4 py-3 text-white placeholder-gray-600 focus:outline-none focus:border-blue-900/50 focus:ring-1 focus:ring-blue-900/50 transition-all\"\n                      value={newFees[`${selectedChain}-token`] ?? fees[selectedChain]?.token ?? ''}\n                      onChange={(e) => setNewFees({\n                        ...newFees,\n                        [`${selectedChain}-token`]: e.target.value\n                      })}\n                      placeholder={`Current: ${fees[selectedChain]?.token ?? '0'} ${fees[selectedChain]?.currency}`}\n                    />\n                    <button\n                      onClick={() => updateFee(selectedChain, 'token', newFees[`${selectedChain}-token`] ?? fees[selectedChain]?.token)}\n                      className=\"px-6 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors font-medium\"\n                    >\n                      Update Fee\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              {/* NFT Factory Fees */}\n              <div className=\"bg-[#111111] rounded-xl border border-gray-800/50 overflow-hidden\">\n                <div className=\"px-6 py-4 bg-[#0f0f0f] border-b border-gray-800/50\">\n                  <div className=\"flex items-center justify-between\">\n                    <h2 className=\"text-lg font-medium text-white\">NFT Factory Fee</h2>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-sm text-gray-500\">Earned:</span>\n                      <span className=\"text-green-400 font-medium\">\n                        {earnedFees[selectedChain]?.nft ?? '0'} {CHAIN_INFO[selectedChain].currency}\n                      </span>\n                      {earnedFees[selectedChain]?.nft > 0 && (\n                        <button\n                          onClick={() => withdrawFees(selectedChain, 'nft')}\n                          className=\"ml-2 px-3 py-1 bg-green-600/20 text-green-400 rounded-lg hover:bg-green-600/30 transition-colors text-sm font-medium\"\n                        >\n                          Withdraw\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"p-6\">\n                  <div className=\"flex items-center gap-3\">\n                    <input\n                      type=\"number\"\n                      step=\"0.000000000000000001\"\n                      className=\"flex-1 bg-[#0a0a0a] border border-gray-800/50 rounded-xl px-4 py-3 text-white placeholder-gray-600 focus:outline-none focus:border-blue-900/50 focus:ring-1 focus:ring-blue-900/50 transition-all\"\n                      value={newFees[`${selectedChain}-nft`] ?? fees[selectedChain]?.nft ?? ''}\n                      onChange={(e) => setNewFees({\n                        ...newFees,\n                        [`${selectedChain}-nft`]: e.target.value\n                      })}\n                      placeholder={`Current: ${fees[selectedChain]?.nft ?? '0'} ${fees[selectedChain]?.currency}`}\n                    />\n                    <button\n                      onClick={() => updateFee(selectedChain, 'nft', newFees[`${selectedChain}-nft`] ?? fees[selectedChain]?.nft)}\n                      className=\"px-6 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors font-medium\"\n                    >\n                      Update Fee\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Transaction Lists */}\n            <div className=\"grid grid-cols-2 gap-6 mt-6\">\n              {/* Token Transactions */}\n              <div className=\"bg-[#111111] rounded-xl border border-gray-800/50 overflow-hidden\">\n                <div className=\"px-6 py-4 bg-[#0f0f0f] border-b border-gray-800/50\">\n                  <h2 className=\"text-lg font-medium text-white\">Recent Token Creations</h2>\n                </div>\n                <div className=\"p-4\">\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                      <thead>\n                        <tr className=\"text-left text-sm text-gray-400\">\n                          <th className=\"px-4 py-2\">Creator</th>\n                          <th className=\"px-4 py-2\">Time</th>\n                          <th className=\"px-4 py-2\">Tx Hash</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {transactions.tokens.map((tx) => (\n                          <tr key={tx.hash} className=\"border-t border-gray-800/50 text-sm\">\n                            <td className=\"px-4 py-3\">\n                              <a \n                                href={`${selectedChain === \"1301\" \n                                  ? \"https://unichain-sepolia.blockscout.com/address/\" \n                                  : \"https://moonwalker-blockscout.eu-north-2.gateway.fm/address/\"}${tx.creator}`} \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\"\n                                className=\"text-blue-400 hover:text-blue-300\"\n                              >\n                                {tx.creator.slice(0, 6)}...{tx.creator.slice(-4)}\n                              </a>\n                            </td>\n                            <td className=\"px-4 py-3 text-gray-400\">\n                              {new Date(tx.timestamp).toLocaleString()}\n                            </td>\n                            <td className=\"px-4 py-3\">\n                              <a \n                                href={`${selectedChain === \"1301\" \n                                  ? \"https://unichain-sepolia.blockscout.com/tx/\" \n                                  : \"https://moonwalker-blockscout.eu-north-2.gateway.fm/tx/\"}${tx.hash}`} \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\"\n                                className=\"text-blue-400 hover:text-blue-300\"\n                              >\n                                {tx.hash.slice(0, 6)}...{tx.hash.slice(-4)}\n                              </a>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n\n              {/* NFT Transactions */}\n              <div className=\"bg-[#111111] rounded-xl border border-gray-800/50 overflow-hidden\">\n                <div className=\"px-6 py-4 bg-[#0f0f0f] border-b border-gray-800/50\">\n                  <h2 className=\"text-lg font-medium text-white\">Recent NFT Creations</h2>\n                </div>\n                <div className=\"p-4\">\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                      <thead>\n                        <tr className=\"text-left text-sm text-gray-400\">\n                          <th className=\"px-4 py-2\">Creator</th>\n                          <th className=\"px-4 py-2\">Time</th>\n                          <th className=\"px-4 py-2\">Tx Hash</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {transactions.nfts.map((tx) => (\n                          <tr key={tx.hash} className=\"border-t border-gray-800/50 text-sm\">\n                            <td className=\"px-4 py-3\">\n                              <a \n                                href={`${selectedChain === \"1301\" \n                                  ? \"https://unichain-sepolia.blockscout.com/address/\" \n                                  : \"https://moonwalker-blockscout.eu-north-2.gateway.fm/address/\"}${tx.creator}`} \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\"\n                                className=\"text-blue-400 hover:text-blue-300\"\n                              >\n                                {tx.creator.slice(0, 6)}...{tx.creator.slice(-4)}\n                              </a>\n                            </td>\n                            <td className=\"px-4 py-3 text-gray-400\">\n                              {new Date(tx.timestamp).toLocaleString()}\n                            </td>\n                            <td className=\"px-4 py-3\">\n                              <a \n                                href={`${selectedChain === \"1301\" \n                                  ? \"https://unichain-sepolia.blockscout.com/tx/\" \n                                  : \"https://moonwalker-blockscout.eu-north-2.gateway.fm/tx/\"}${tx.hash}`} \n                                target=\"_blank\" \n                                rel=\"noopener noreferrer\"\n                                className=\"text-blue-400 hover:text-blue-300\"\n                              >\n                                {tx.hash.slice(0, 6)}...{tx.hash.slice(-4)}\n                              </a>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FeesTracker; ","import React, { useState, useEffect, useMemo } from 'react';\nimport { ethers } from 'ethers';\nimport { useNetwork, useContractRead } from 'wagmi';\nimport { motion } from 'framer-motion';\nimport { BiCopy, BiRefresh, BiRocket, BiMoney, BiWater, BiLinkExternal } from 'react-icons/bi';\nimport { FaFire } from 'react-icons/fa';\nimport toast from 'react-hot-toast';\nimport MemeTokenABI from '../abi/MemeToken.json';\nimport { useDeployments } from '../context/DeploymentsContext';\nimport TokenFactoryABI from '../contracts/TokenFactory.json';\n\n// Meme-themed animations\nconst containerVariants = {\n  hidden: { opacity: 0, y: 50 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.5,\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst itemVariants = {\n  hidden: { opacity: 0, x: -20 },\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: { duration: 0.5 }\n  }\n};\n\n// Add DEX trading URLs mapping\nconst DEX_TRADING_URLS = {\n  11155111: {\n    name: 'Uniswap V2',\n    network: 'Sepolia',\n    getTradeUrl: (tokenAddress) => `https://app.uniswap.org/#/swap?outputCurrency=${tokenAddress}&chain=sepolia`\n  },\n  137: {\n    name: 'QuickSwap',\n    network: 'Polygon',\n    getTradeUrl: (tokenAddress) => `https://quickswap.exchange/#/swap?outputCurrency=${tokenAddress}`\n  },\n  1301: {\n    name: 'Uniswap V2',\n    network: 'Unichain',\n    getTradeUrl: (tokenAddress) => `https://app.uniswap.org/#/swap?outputCurrency=${tokenAddress}&chain=unichain`\n  },\n  1828369849: {\n    name: 'Uniswap V2',\n    network: 'Moonwalker',\n    getTradeUrl: (tokenAddress) => `https://app.uniswap.org/#/swap?outputCurrency=${tokenAddress}&chain=moonwalker`\n  },\n  10143: {\n    name: 'Uniswap V2',\n    network: 'Monad Testnet',\n    getTradeUrl: (tokenAddress) => `https://app.uniswap.org/#/swap?outputCurrency=${tokenAddress}&chain=monad-testnet`\n  }\n};\n\n// Add DEX images mapping\nconst DEX_IMAGES = {\n  'QuickSwap': '/quickswap.png',\n  'Uniswap V2': '/uniswap.png'\n};\n\n// Add factory addresses mapping\nconst FACTORY_ADDRESSES = {\n  11155111: import.meta.env.VITE_FACTORY_ADDRESS_11155111,\n  137: import.meta.env.VITE_FACTORY_ADDRESS_137,\n  1301: import.meta.env.VITE_FACTORY_ADDRESS_1301,\n  130: import.meta.env.VITE_FACTORY_ADDRESS_130,\n  1828369849: import.meta.env.VITE_FACTORY_ADDRESS_1828369849,\n  10143: import.meta.env.VITE_FACTORY_ADDRESS_10143\n};\n\n// Add getFactoryAddress function\nconst getFactoryAddress = () => {\n  const chainId = window.ethereum?.networkVersion ? parseInt(window.ethereum.networkVersion) : null;\n  const factoryAddress = FACTORY_ADDRESSES[chainId];\n  if (!factoryAddress) {\n    console.error(`No factory address found for chain ID ${chainId}`);\n  }\n  return factoryAddress;\n};\n\nconst TokenInfo = () => {\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [tokenData, setTokenData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { chain } = useNetwork();\n\n  // Read total supply\n  const { data: totalSupply } = useContractRead({\n    address: tokenAddress,\n    abi: MemeTokenABI.abi,\n    functionName: 'totalSupply',\n    watch: true,\n  });\n\n  const fetchTokenInfo = async () => {\n    if (!tokenAddress) return;\n    \n    setLoading(true);\n    setError('');\n    \n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const token = new ethers.Contract(tokenAddress, MemeTokenABI.abi, provider);\n\n      // Fetch basic token info and features with new contract features\n      const [\n        name,\n        symbol,\n        totalSupply,\n        treasuryAddress,\n        devAddress,\n        marketingWallet,\n        liquidityAddress,\n        burnFee,\n        treasuryFee,\n        devFee,\n        marketingFee,\n        liquidityFee,\n        buyFees,\n        sellFees,\n        router,\n        deadBalance,\n        treasuryBalance,\n        devBalance,\n        marketingBalance,\n        liquidityBalance,\n        contractBalance,\n        pair,\n        tradingEnabled,\n        owner\n      ] = await Promise.all([\n        token.name(),\n        token.symbol(),\n        token.totalSupply(),\n        token.TREASURY_ADDRESS(),\n        token.DEV_ADDRESS(),\n        token.MARKETING_WALLET(),\n        token.LIQUIDITY_ADDRESS(),\n        token.burnFee(),\n        token.treasuryFee(),\n        token.devFee(),\n        token.marketingFee(),\n        token.liquidityFee(),\n        token.buyFees(),\n        token.sellFees(),\n        token.uniswapV2Router(),\n        token.balanceOf(\"0x000000000000000000000000000000000000dEaD\"),\n        token.balanceOf(await token.TREASURY_ADDRESS()),\n        token.balanceOf(await token.DEV_ADDRESS()),\n        token.balanceOf(await token.MARKETING_WALLET()),\n        token.balanceOf(await token.LIQUIDITY_ADDRESS()),\n        token.balanceOf(tokenAddress),\n        token.uniswapV2Pair(),\n        token.tradingActive(),\n        token.owner()\n      ]);\n\n      setTokenData({\n        name,\n        symbol,\n        totalSupply: ethers.formatUnits(totalSupply, 18),\n        owner,\n        addresses: {\n          treasury: treasuryAddress,\n          dev: devAddress,\n          marketing: marketingWallet,\n          liquidity: liquidityAddress\n        },\n        fees: {\n          burn: Number(burnFee) / 100,\n          treasury: Number(treasuryFee) / 100,\n          dev: Number(devFee) / 100,\n          marketing: Number(marketingFee) / 100,\n          liquidity: Number(liquidityFee) / 100,\n          buy: Number(buyFees) / 100,\n          sell: Number(sellFees) / 100\n        },\n        balances: {\n          dead: ethers.formatUnits(deadBalance, 18),\n          treasury: ethers.formatUnits(treasuryBalance, 18),\n          dev: ethers.formatUnits(devBalance, 18),\n          marketing: ethers.formatUnits(marketingBalance, 18),\n          liquidity: ethers.formatUnits(liquidityBalance, 18),\n          contract: ethers.formatUnits(contractBalance, 18)\n        },\n        router,\n        pair,\n        features: {\n          tradingEnabled\n        }\n      });\n    } catch (err) {\n      console.error('Error fetching token info:', err);\n      setError('Failed to fetch token info. Is this a valid meme token?');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const copyToClipboard = async (text) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      toast.success('Copied to clipboard! 📋');\n    } catch (err) {\n      toast.error('Failed to copy 😢');\n    }\n  };\n\n  return (\n    <div className=\"p-6 h-full bg-white dark:bg-[#1a1b1f] rounded-xl transition-colors duration-200\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Title Section */}\n        <div className=\"text-center mb-8\">\n          <h2 className=\"meme-title text-3xl mb-4 text-[#00ffbd]\">Check Token Info</h2>\n          <p className=\"text-gray-600 dark:text-gray-400 text-base\">\n            Enter any meme token address to view stats\n          </p>\n        </div>\n\n        {/* Search Bar */}\n        <div className=\"mb-6\">\n          <div className=\"flex gap-2\">\n            <input\n              type=\"text\"\n              value={tokenAddress}\n              onChange={(e) => setTokenAddress(e.target.value)}\n              placeholder=\"Enter token address\"\n              className=\"flex-1 bg-gray-50 dark:bg-[#2d2f36] text-gray-900 dark:text-white rounded-lg px-3 py-2 border border-gray-200 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none transition-all duration-200\"\n            />\n            <motion.button\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              onClick={fetchTokenInfo}\n              disabled={loading}\n              className=\"px-4 py-2 bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-medium rounded-lg transition-colors flex items-center gap-2 shadow-lg shadow-[#00ffbd]/10\"\n            >\n              {loading ? (\n                <BiRefresh className=\"animate-spin\" />\n              ) : (\n                <BiRocket className=\"animate-bounce\" />\n              )}\n              {loading ? \"Loading...\" : \"Check\"}\n            </motion.button>\n          </div>\n        </div>\n\n        {error && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"p-3 mb-4 rounded-lg bg-red-50 dark:bg-red-500/10 border border-red-200 dark:border-red-500/20 text-red-600 dark:text-red-400 text-sm\"\n          >\n            {error}\n          </motion.div>\n        )}\n\n        {!tokenData && !error && !loading && (\n          <div className=\"text-center text-gray-500 dark:text-gray-400 mt-6 text-sm\">\n            <p>Enter a token address to view information</p>\n          </div>\n        )}\n\n        {tokenData && (\n          <motion.div\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            className=\"space-y-4\"\n          >\n            {/* Token Identity Card */}\n            <motion.div\n              variants={itemVariants}\n              className=\"p-4 rounded-xl bg-gradient-to-br from-gray-50 to-gray-100 dark:from-[#2d2f36] dark:to-[#24262b] border border-gray-200 dark:border-gray-700 shadow-sm\"\n            >\n              <div className=\"flex justify-between items-start mb-3\">\n                <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                  {tokenData.name} ({tokenData.symbol}) 🚀\n                </h2>\n                <div className=\"flex items-center gap-2\">\n                  {tokenData.features?.tradingEnabled ? (\n                    <span className=\"px-2 py-1 text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400 rounded-full\">\n                      Trading Enabled\n                    </span>\n                  ) : (\n                    <span className=\"px-2 py-1 text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-400 rounded-full\">\n                      Trading Disabled\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Total Supply:</span>\n                  <span className=\"font-mono text-gray-900 dark:text-white\">{Number(tokenData.totalSupply).toLocaleString()}</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-gray-500 dark:text-gray-400 text-sm\">Contract:</span>\n                  <span className=\"font-mono text-gray-900 dark:text-white truncate text-sm\">{tokenAddress}</span>\n                  <button\n                    onClick={() => copyToClipboard(tokenAddress)}\n                    className=\"p-1 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-md transition-colors\"\n                  >\n                    <BiCopy className=\"text-gray-500 dark:text-gray-400\" />\n                  </button>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Honeypot Detection Card */}\n            <motion.div\n              variants={itemVariants}\n              className=\"p-4 rounded-xl bg-white dark:bg-[#1a1b1f] border border-gray-200 dark:border-gray-800 transition-colors duration-200\"\n            >\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\n                  <span>🍯</span> Honeypot Detection\n                </h3>\n                {tokenData.features?.tradingEnabled ? (\n                  <span className=\"flex items-center gap-1 text-green-500\">\n                    <span className=\"w-2 h-2 rounded-full bg-green-500\"></span>\n                    Safe to Trade\n                  </span>\n                ) : (\n                  <span className=\"flex items-center gap-1 text-yellow-500\">\n                    <span className=\"w-2 h-2 rounded-full bg-yellow-500\"></span>\n                    Caution\n                  </span>\n                )}\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center justify-between p-2 bg-gray-50 dark:bg-gray-800/50 rounded-lg\">\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">Buy Tax:</span>\n                    <span className=\"text-sm font-medium text-green-500\">{tokenData.fees.buy}%</span>\n                  </div>\n                  <div className=\"flex items-center justify-between p-2 bg-gray-50 dark:bg-gray-800/50 rounded-lg\">\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">Sell Tax:</span>\n                    <span className=\"text-sm font-medium text-red-500\">{tokenData.fees.sell}%</span>\n                  </div>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center justify-between p-2 bg-gray-50 dark:bg-gray-800/50 rounded-lg\">\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">Renounced:</span>\n                    {tokenData.owner === \"0x0000000000000000000000000000000000000000\" ? (\n                      <span className=\"text-sm font-medium text-green-500\">✓</span>\n                    ) : (\n                      <span className=\"text-sm font-medium text-red-500\">✗</span>\n                    )}\n                  </div>\n                  <div className=\"flex items-center justify-between p-2 bg-gray-50 dark:bg-gray-800/50 rounded-lg\">\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">Mintable:</span>\n                    <span className=\"text-sm font-medium text-red-500\">✗</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"mt-4 p-3 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-100 dark:border-yellow-900/30 rounded-lg\">\n                <p className=\"text-sm text-yellow-800 dark:text-yellow-400\">\n                  <span className=\"font-medium\">Note:</span> Always test with a small amount first and check the contract on a blockchain explorer before making large trades.\n                </p>\n              </div>\n            </motion.div>\n\n            {/* Trading Fees Overview Card */}\n            <motion.div\n              variants={itemVariants}\n              className=\"col-span-3 p-6 rounded-2xl bg-gradient-to-r from-[#2d2f36] via-[#1a1b1f] to-[#2d2f36] border border-gray-800\"\n            >\n              <h3 className=\"text-xl font-bold text-white mb-4 flex items-center gap-2\">\n                <span>💰</span> Trading Fees Distribution\n              </h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"p-4 rounded-xl bg-gray-800/50 backdrop-blur-sm\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-gray-400\">Buy Fee</span>\n                    <span className=\"text-[#00ffbd] font-bold\">{tokenData.fees.buy}%</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm text-gray-400 mb-2\">Distribution of {tokenData.fees.buy}% buy fee:</p>\n                    {Object.entries({\n                      Burn: tokenData.fees.burn,\n                      Treasury: tokenData.fees.treasury,\n                      Dev: tokenData.fees.dev,\n                      Marketing: tokenData.fees.marketing,\n                      Liquidity: tokenData.fees.liquidity\n                    }).map(([name, value]) => (\n                      <div key={name} className=\"flex justify-between items-center text-sm\">\n                        <span className=\"text-gray-500\">{name}</span>\n                        <span className=\"text-gray-300\">{value}%</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <div className=\"p-4 rounded-xl bg-gray-800/50 backdrop-blur-sm\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-gray-400\">Sell Fee</span>\n                    <span className=\"text-[#00ffbd] font-bold\">{tokenData.fees.sell}%</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm text-gray-400 mb-2\">Distribution of {tokenData.fees.sell}% sell fee:</p>\n                    {Object.entries({\n                      Burn: tokenData.fees.burn,\n                      Treasury: tokenData.fees.treasury,\n                      Dev: tokenData.fees.dev,\n                      Marketing: tokenData.fees.marketing,\n                      Liquidity: tokenData.fees.liquidity\n                    }).map(([name, value]) => (\n                      <div key={name} className=\"flex justify-between items-center text-sm\">\n                        <span className=\"text-gray-500\">{name}</span>\n                        <span className=\"text-gray-300\">{value}%</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-4 p-3 bg-gray-800/30 rounded-lg\">\n                <p className=\"text-sm text-gray-400\">\n                  <span className=\"text-[#00ffbd] font-medium\">Note:</span> The percentages shown for each fee type represent their share of the total buy/sell fee.\n                </p>\n              </div>\n            </motion.div>\n\n            {/* Enhanced Burn Card with Flames */}\n            <motion.div\n              variants={itemVariants}\n              className=\"relative overflow-hidden rounded-2xl bg-gradient-to-br from-red-900/20 to-orange-900/20 border border-red-500/20\"\n            >\n              <div className=\"relative z-10 p-6\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <FaFire className=\"text-2xl text-red-500 animate-pulse\" />\n                  <h3 className=\"text-xl font-bold text-white\">Burn Stats</h3>\n                </div>\n                <div className=\"space-y-3\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-gray-400\">Burn Fee</span>\n                    <span className=\"text-red-400 font-bold\">{tokenData.fees.burn}%</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-gray-400\">Total Burned</span>\n                    <span className=\"text-red-400 font-mono\">\n                      {Number(tokenData.balances.dead).toLocaleString()}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-gray-400\">Burn Rate</span>\n                    <span className=\"text-red-400 font-mono\">\n                      {((Number(tokenData.balances.dead) / Number(tokenData.totalSupply)) * 100).toFixed(2)}%\n                    </span>\n                  </div>\n                </div>\n                {/* Animated flames */}\n                <div className=\"absolute inset-0 z-0\">\n                  <div className=\"absolute bottom-0 left-0 right-0 h-32 bg-gradient-to-t from-red-500/20 to-transparent animate-flame\" />\n                  <div className=\"absolute bottom-0 left-0 right-0 h-24 bg-gradient-to-t from-orange-500/20 to-transparent animate-flame-slow\" />\n                  <div className=\"absolute bottom-0 left-0 right-0 h-16 bg-gradient-to-t from-yellow-500/20 to-transparent animate-flame-slower\" />\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Treasury & Dev Card */}\n            <motion.div\n              variants={itemVariants}\n              className=\"rounded-2xl bg-gradient-to-br from-blue-900/20 to-purple-900/20 border border-blue-500/20 p-6\"\n            >\n              <div className=\"flex items-center gap-3 mb-4\">\n                <BiMoney className=\"text-2xl text-blue-400\" />\n                <h3 className=\"text-xl font-bold text-white\">Treasury & Dev</h3>\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Treasury Fee</span>\n                  <span className=\"text-blue-400 font-bold\">{tokenData.fees.treasury}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Dev Fee</span>\n                  <span className=\"text-blue-400 font-bold\">{tokenData.fees.dev}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Treasury Balance</span>\n                  <span className=\"text-blue-400 font-mono\">\n                    {Number(tokenData.balances.treasury).toLocaleString()}\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Dev Balance</span>\n                  <span className=\"text-blue-400 font-mono\">\n                    {Number(tokenData.balances.dev).toLocaleString()}\n                  </span>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Marketing & Liquidity Card */}\n            <motion.div\n              variants={itemVariants}\n              className=\"rounded-2xl bg-gradient-to-br from-green-900/20 to-teal-900/20 border border-green-500/20 p-6\"\n            >\n              <div className=\"flex items-center gap-3 mb-4\">\n                <BiWater className=\"text-2xl text-green-400\" />\n                <h3 className=\"text-xl font-bold text-white\">Marketing & Liquidity</h3>\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Marketing Fee</span>\n                  <span className=\"text-green-400 font-bold\">{tokenData.fees.marketing}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Liquidity Fee</span>\n                  <span className=\"text-green-400 font-bold\">{tokenData.fees.liquidity}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Marketing Balance</span>\n                  <span className=\"text-green-400 font-mono\">\n                    {Number(tokenData.balances.marketing).toLocaleString()}\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Liquidity Balance</span>\n                  <span className=\"text-green-400 font-mono\">\n                    {Number(tokenData.balances.liquidity).toLocaleString()}\n                  </span>\n                </div>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </div>\n\n      {/* Recently Created Meme Tokens Section */}\n      <div className=\"mt-8 pt-8 border-t border-gray-200 dark:border-gray-700\">\n        <RecentlyCreatedTokens />\n      </div>\n    </div>\n  );\n};\n\n// RecentlyCreatedTokens component\nconst RecentlyCreatedTokens = () => {\n  const [recentTokens, setRecentTokens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { chain } = useNetwork();\n  const [page, setPage] = useState(1);\n  const tokensPerPage = 10;\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      try {\n        setLoading(true);\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const factoryAddress = getFactoryAddress();\n        \n        if (!factoryAddress) {\n          console.error('Factory address not found for this chain');\n          return;\n        }\n\n        const factory = new ethers.Contract(factoryAddress, TokenFactoryABI.abi, provider);\n        const latestBlock = await provider.getBlockNumber();\n        \n        // Initialize array to store all events\n        let allEvents = [];\n        \n        // Handle different block range limitations per chain\n        const BLOCK_RANGE = chain?.id === 10143 ? 100 : 5000; // 100 blocks for Monad, 5000 for others\n        let fromBlock = Math.max(0, latestBlock - 10000); // Look back 10000 blocks max\n        \n        while (fromBlock < latestBlock) {\n          const toBlock = Math.min(fromBlock + BLOCK_RANGE, latestBlock);\n          try {\n            const filter = factory.filters.TokenCreated();\n            const events = await factory.queryFilter(filter, fromBlock, toBlock);\n            allEvents = [...allEvents, ...events];\n          } catch (error) {\n            console.error(`Error fetching events for blocks ${fromBlock} to ${toBlock}:`, error);\n          }\n          fromBlock = toBlock + 1;\n        }\n\n        // Sort and process events\n        const sortedTokens = await Promise.all(allEvents.map(async (event) => {\n          const decimals = Number(event.args[4]);\n          const rawSupply = event.args[5].toString();\n          \n          let totalSupply;\n          if (rawSupply.length <= decimals) {\n            totalSupply = rawSupply;\n          } else {\n            totalSupply = ethers.formatUnits(rawSupply, decimals);\n          }\n\n          return {\n            creator: event.args[0],\n            address: event.args[1],\n            name: event.args[2],\n            symbol: event.args[3],\n            decimals: decimals,\n            totalSupply: totalSupply,\n            logoURI: event.args[6],\n            isMeme: event.args[7],\n            timestamp: (await event.getBlock()).timestamp\n          };\n        }));\n\n        // Sort by timestamp\n        sortedTokens.sort((a, b) => b.timestamp - a.timestamp);\n        setRecentTokens(sortedTokens);\n      } catch (error) {\n        console.error('Error fetching recent tokens:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (chain?.id) {\n      fetchTokens();\n    }\n  }, [chain?.id]);\n\n  // Get the current page of tokens\n  const currentTokens = useMemo(() => {\n    return recentTokens.slice((page - 1) * tokensPerPage, page * tokensPerPage);\n  }, [recentTokens, page]);\n\n  // Get trading URL based on chain\n  const getTradeUrl = (tokenAddress, chainId) => {\n    const dexInfo = DEX_TRADING_URLS[chainId];\n    return dexInfo ? dexInfo.getTradeUrl(tokenAddress) : '#';\n  };\n\n  // Get DEX name based on chain\n  const getDexInfo = (chainId) => {\n    return DEX_TRADING_URLS[chainId] || {\n      name: 'Unknown DEX',\n      network: 'Unknown'\n    };\n  };\n\n  if (loading) {\n    return (\n      <div className=\"text-center py-8\">\n        <h3 className=\"meme-title text-2xl mb-4 text-[#00ffbd]\">Recently Created Meme Tokens 🚀</h3>\n        <div className=\"flex justify-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#00ffbd]\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentTokens.length) {\n    return (\n      <div className=\"text-center py-8\">\n        <h3 className=\"meme-title text-2xl mb-4 text-[#00ffbd]\">Recently Created Meme Tokens 🚀</h3>\n        <p className=\"text-gray-500 dark:text-gray-400\">No meme tokens created yet. Be the first! 🎉</p>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h3 className=\"meme-title text-2xl mb-6 text-center text-[#00ffbd]\">Recently Created Meme Tokens 🚀</h3>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {currentTokens.map((token) => (\n          <motion.div\n            key={token.address}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"p-4 rounded-xl bg-gradient-to-br from-gray-50 to-gray-100 dark:from-[#2d2f36] dark:to-[#24262b] border border-gray-200 dark:border-gray-700 hover:border-[#00ffbd] dark:hover:border-[#00ffbd] transition-colors\"\n          >\n            <div className=\"flex items-start justify-between\">\n              <div>\n                <h4 className=\"font-bold text-gray-900 dark:text-white text-lg\">{token.name}</h4>\n                <p className=\"text-gray-500 dark:text-gray-400 text-sm\">{token.symbol}</p>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <img \n                  src={chain?.id ? (DEX_IMAGES[getDexInfo(chain.id).name] || '/token-default.png') : '/token-default.png'} \n                  alt={chain?.id ? getDexInfo(chain.id).name : 'Unknown DEX'}\n                  className=\"w-6 h-6 rounded-full\"\n                  onError={(e) => {\n                    e.target.onerror = null;\n                    e.target.src = '/token-default.png';\n                  }}\n                />\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  {chain?.id ? getDexInfo(chain.id).network : 'Unknown Network'}\n                </span>\n              </div>\n            </div>\n            \n            <div className=\"mt-3 flex items-center justify-between\">\n              <div className=\"text-sm text-gray-600 dark:text-gray-300\">\n                Supply: {Number(token.totalSupply).toLocaleString()}\n              </div>\n              <a\n                href={chain?.id ? getTradeUrl(token.address, chain.id) : '#'}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"inline-flex items-center gap-1 px-3 py-1 bg-[#00ffbd] hover:bg-[#00e6a9] text-black text-sm font-medium rounded-lg transition-colors\"\n              >\n                Trade <BiLinkExternal />\n              </a>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Pagination */}\n      {recentTokens.length > tokensPerPage && (\n        <div className=\"mt-6 flex justify-center gap-2\">\n          <button\n            onClick={() => setPage(p => Math.max(1, p - 1))}\n            disabled={page === 1}\n            className=\"px-3 py-1 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 disabled:opacity-50\"\n          >\n            Previous\n          </button>\n          <span className=\"px-3 py-1 text-gray-600 dark:text-gray-400\">\n            Page {page} of {Math.ceil(recentTokens.length / tokensPerPage)}\n          </span>\n          <button\n            onClick={() => setPage(p => p + 1)}\n            disabled={page >= Math.ceil(recentTokens.length / tokensPerPage)}\n            className=\"px-3 py-1 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 disabled:opacity-50\"\n          >\n            Next\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TokenInfo;","import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { useAccount, useContractRead, useContractWrite, useWaitForTransaction } from 'wagmi';\nimport { Button, Card, Table, Spinner, Alert } from 'flowbite-react';\nimport { HiOutlineDownload, HiOutlineCamera } from 'react-icons/hi';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { BiX, BiSearch } from 'react-icons/bi';\nimport MemeTokenABI from '../abi/MemeToken.json';\n\n// Toast configuration\nconst toastOptions = {\n    style: {\n        background: '#333',\n        color: 'white',\n        padding: '12px',\n        borderRadius: '8px',\n    },\n    success: {\n        style: {\n            background: '#10B981',\n        },\n    },\n    error: {\n        style: {\n            background: '#EF4444',\n        },\n    },\n    position: 'top-center',\n    duration: 3000,\n};\n\nconst SnapshotViewer = ({ onClose }) => {\n    const [inputTokenAddress, setInputTokenAddress] = useState('');\n    const [verifiedTokenAddress, setVerifiedTokenAddress] = useState('');\n    const [tokenContract, setTokenContract] = useState(null);\n    const [snapshots, setSnapshots] = useState([]);\n    const [selectedSnapshot, setSelectedSnapshot] = useState(null);\n    const [holderData, setHolderData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [verifying, setVerifying] = useState(false);\n    const [error, setError] = useState('');\n    const { address } = useAccount();\n    const [isWaitingForWallet, setIsWaitingForWallet] = useState(false);\n\n    // Check if connected wallet is token owner\n    const { data: tokenOwner } = useContractRead({\n        address: verifiedTokenAddress || undefined,\n        abi: MemeTokenABI.abi,\n        functionName: 'owner',\n        watch: true,\n        enabled: Boolean(verifiedTokenAddress),\n    });\n\n    const isOwner = address && tokenOwner && address.toLowerCase() === tokenOwner.toLowerCase();\n\n    // Contract write function for taking new snapshots\n    const { write: takeSnapshot, data: snapshotData } = useContractWrite({\n        address: verifiedTokenAddress || undefined,\n        abi: MemeTokenABI.abi,\n        functionName: 'snapshot',\n        enabled: Boolean(verifiedTokenAddress),\n        onError() {\n            setIsWaitingForWallet(false);\n        }\n    });\n\n    // Wait for snapshot transaction\n    const { isLoading: isSnapshotPending } = useWaitForTransaction({\n        hash: snapshotData?.hash,\n        onSuccess() {\n            // First show success toast\n            toast.success('Snapshot taken successfully!', toastOptions);\n            // Then show refresh instructions\n            setTimeout(() => {\n                toast((t) => (\n                    <div className=\"flex flex-col gap-2\">\n                        <p className=\"font-medium\">Important: Refresh Required 🔄</p>\n                        <p className=\"text-sm\">Please refresh the page and paste the contract address again to see the new snapshot data.</p>\n                    </div>\n                ), {\n                    ...toastOptions,\n                    duration: 6000,\n                    style: {\n                        ...toastOptions.style,\n                        maxWidth: '400px',\n                    }\n                });\n            }, 1000); // Wait 1 second before showing the second toast\n            setIsWaitingForWallet(false);\n            fetchSnapshots(); // Refresh snapshots list\n        },\n        onError() {\n            toast.error('Failed to take snapshot', toastOptions);\n            setIsWaitingForWallet(false);\n        },\n    });\n\n    // Verify token address and setup contract\n    const verifyTokenAddress = async () => {\n        if (!inputTokenAddress) {\n            toast.error('Please enter a token address', toastOptions);\n            return;\n        }\n\n        setVerifying(true);\n        setError('');\n\n        try {\n            // Check if address is valid\n            const isValidAddress = ethers.isAddress(inputTokenAddress);\n            if (!isValidAddress) {\n                throw new Error('Invalid token address format');\n            }\n\n            // Create contract instance\n            const provider = new ethers.BrowserProvider(window.ethereum);\n            const chainId = await provider.getNetwork().then(n => Number(n.chainId));\n\n            // Special handling for Monad testnet\n            if (chainId === 10143) {\n            const contract = new ethers.Contract(inputTokenAddress, MemeTokenABI.abi, provider);\n\n            // Try to call basic functions to verify it's a valid token contract\n                try {\n                    await Promise.all([\n                        contract.name(),\n                        contract.symbol(),\n                        contract.owner(),\n                        contract.snapshot() // Check if snapshot function exists\n                    ]);\n\n                    setVerifiedTokenAddress(inputTokenAddress);\n                    setTokenContract(contract);\n                    toast.success('Token contract verified', toastOptions);\n                } catch (err) {\n                    // If snapshot function doesn't exist, show specific error\n                    if (err.message.includes('snapshot')) {\n                        setError('This token does not support snapshots. Make sure you are using the correct token contract.');\n                    } else {\n                        setError('Invalid token contract. Please check the address and try again.');\n                    }\n                    setVerifiedTokenAddress('');\n                    setTokenContract(null);\n                }\n            } else {\n                // Original logic for other networks\n                const contract = new ethers.Contract(inputTokenAddress, MemeTokenABI.abi, provider);\n            await Promise.all([\n                contract.name(),\n                contract.symbol(),\n                contract.owner()\n            ]);\n\n            setVerifiedTokenAddress(inputTokenAddress);\n            setTokenContract(contract);\n            toast.success('Token contract verified', toastOptions);\n            }\n        } catch (err) {\n            console.error('Error verifying token:', err);\n            setError('Invalid token contract. Please check the address and try again.');\n            setVerifiedTokenAddress('');\n            setTokenContract(null);\n        } finally {\n            setVerifying(false);\n        }\n    };\n\n    // Listen for Snapshot events\n    useEffect(() => {\n        const fetchSnapshots = async () => {\n            try {\n                setLoading(true);\n                const provider = new ethers.BrowserProvider(window.ethereum);\n                const chainId = await provider.getNetwork().then(n => Number(n.chainId));\n\n                // Get past Snapshot events\n                const filter = tokenContract.filters.Snapshot();\n                const events = await tokenContract.queryFilter(filter);\n                \n                // Map snapshot data without block timestamps initially\n                const snapshotData = events.map(event => ({\n                    id: event.args.id.toString(),\n                    blockNumber: event.blockNumber,\n                    timestamp: new Date().toLocaleString() // Default to current time\n                }));\n                \n                // Try to get timestamps, but don't fail if we can't\n                try {\n                    const updatedSnapshotData = await Promise.all(\n                        snapshotData.map(async (snapshot) => {\n                            try {\n                                const block = await provider.getBlock(snapshot.blockNumber);\n                                return {\n                                    ...snapshot,\n                                    timestamp: block ? new Date(block.timestamp * 1000).toLocaleString() : snapshot.timestamp\n                                };\n                            } catch (err) {\n                                console.warn(`Could not fetch block data for snapshot ${snapshot.id}`, err);\n                                return snapshot;\n                            }\n                        })\n                    );\n                    // Sort by block number descending\n                    updatedSnapshotData.sort((a, b) => b.blockNumber - a.blockNumber);\n                    setSnapshots(updatedSnapshotData);\n                } catch (err) {\n                    console.warn('Error fetching block timestamps:', err);\n                    // Still set the snapshots even if we couldn't get timestamps\n                    snapshotData.sort((a, b) => b.blockNumber - a.blockNumber);\n                    setSnapshots(snapshotData);\n                }\n                \n                setLoading(false);\n            } catch (err) {\n                console.error('Error fetching snapshots:', err);\n                setError('Failed to load snapshots. This may not be supported on the current network.');\n                setLoading(false);\n            }\n        };\n\n        if (tokenContract) {\n            fetchSnapshots();\n        }\n    }, [tokenContract]);\n\n    // Function to fetch holder data for a specific snapshot\n    const fetchHolderData = async (snapshotId) => {\n        setLoading(true);\n        setError('');\n        try {\n            // Get all Transfer events up to this snapshot\n            const filter = tokenContract.filters.Transfer();\n            const events = await tokenContract.queryFilter(filter);\n            \n            // Get unique addresses\n            const holders = new Set();\n            events.forEach(event => {\n                holders.add(event.args.from);\n                holders.add(event.args.to);\n            });\n            \n            // Remove zero and dead addresses\n            holders.delete('0x0000000000000000000000000000000000000000');\n            holders.delete('0x000000000000000000000000000000000000dEaD');\n\n            // Get balances for all holders at this snapshot\n            const holderBalances = await Promise.all(\n                Array.from(holders).map(async (holder) => {\n                    const balance = await tokenContract.balanceOfAt(holder, snapshotId);\n                    return {\n                        address: holder,\n                        balance: ethers.formatEther(balance)\n                    };\n                })\n            );\n\n            // Filter out zero balances and sort by balance\n            const activeHolders = holderBalances\n                .filter(holder => parseFloat(holder.balance) > 0)\n                .sort((a, b) => parseFloat(b.balance) - parseFloat(a.balance));\n\n            setHolderData(activeHolders);\n        } catch (err) {\n            console.error('Error fetching holder data:', err);\n            setError('Failed to load holder data');\n        }\n        setLoading(false);\n    };\n\n    // Function to export holder data to CSV\n    const exportToCSV = () => {\n        if (!holderData.length) return;\n\n        const csvContent = \"data:text/csv;charset=utf-8,\" \n            + \"Address,Balance\\n\"\n            + holderData.map(row => `${row.address},${row.balance}`).join(\"\\n\");\n\n        const encodedUri = encodeURI(csvContent);\n        const link = document.createElement(\"a\");\n        link.setAttribute(\"href\", encodedUri);\n        link.setAttribute(\"download\", `snapshot_${selectedSnapshot}_${Date.now()}.csv`);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    // Function to handle snapshot button click\n    const handleTakeSnapshot = async () => {\n        try {\n            // Only proceed if the connected wallet is the owner\n            if (!address) {\n                toast.error('Please connect your wallet first', toastOptions);\n                return;\n            }\n            \n            if (!isOwner) {\n                // Don't show a toast, just return silently since the button shouldn't be visible anyway\n                return;\n            }\n\n            setIsWaitingForWallet(true);\n            if (takeSnapshot) {\n                await takeSnapshot();\n            }\n        } catch (err) {\n            console.error('Error taking snapshot:', err);\n            setIsWaitingForWallet(false);\n        }\n    };\n\n    // Function to handle snapshot selection\n    const handleSelectSnapshot = (snapshot) => {\n        setSelectedSnapshot(snapshot.id);\n        fetchHolderData(snapshot.id);\n    };\n\n    return (\n        <div className=\"max-w-4xl mx-auto bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg relative\">\n            <Toaster\n                position=\"top-center\"\n                toastOptions={{\n                    className: '',\n                    style: {\n                        zIndex: 9999999,\n                        background: '#333',\n                        color: 'white',\n                    },\n                }}\n            />\n            <div className=\"flex justify-between items-center border-b border-gray-200 dark:border-gray-700 pb-3 mb-4\">\n                <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                    Token Snapshots\n                </h2>\n                <button \n                    onClick={onClose}\n                    className=\"p-2 rounded-lg bg-gray-800/50 hover:bg-gray-800 text-white transition-colors\"\n                >\n                    <BiX className=\"w-5 h-5\" />\n                </button>\n            </div>\n\n            {/* Token Address Input Section */}\n            <div className=\"mb-6\">\n                <div className=\"flex gap-2\">\n                    <input\n                        type=\"text\"\n                        value={inputTokenAddress}\n                        onChange={(e) => setInputTokenAddress(e.target.value)}\n                        placeholder=\"Enter token contract address\"\n                        disabled={verifying}\n                        className=\"flex-1 bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-white rounded-lg px-3 py-2 border border-gray-200 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none transition-all duration-200\"\n                    />\n                    <Button\n                        onClick={verifyTokenAddress}\n                        disabled={verifying || !inputTokenAddress}\n                        className=\"bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-medium px-4 py-2 rounded-lg transition-colors duration-200 flex items-center gap-2\"\n                    >\n                        {verifying ? (\n                            <Spinner size=\"sm\" />\n                        ) : (\n                            <BiSearch className=\"w-4 h-4\" />\n                        )}\n                        {verifying ? 'Verifying...' : 'Verify'}\n                    </Button>\n                </div>\n                {error && (\n                    <p className=\"mt-2 text-sm text-red-500 dark:text-red-400\">\n                        {error}\n                    </p>\n                )}\n            </div>\n\n            {verifiedTokenAddress && (\n                <>\n                    {/* Snapshot Control Section */}\n                    <div className=\"mb-4\">\n                        <div className=\"flex justify-between items-center\">\n                            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                                {snapshots.length > 0 ? `${snapshots.length} snapshot${snapshots.length === 1 ? '' : 's'} available` : 'No snapshots taken yet'}\n                            </div>\n                            {isOwner && address && (\n                                <Button\n                                    onClick={handleTakeSnapshot}\n                                    disabled={isSnapshotPending || isWaitingForWallet}\n                                    className=\"bg-[#00ffbd] hover:bg-[#00e6a9] text-black font-medium px-3 py-1.5 rounded-lg transition-colors duration-200 flex items-center text-sm\"\n                                >\n                                    {isSnapshotPending || isWaitingForWallet ? (\n                                        <>\n                                            <Spinner size=\"sm\" className=\"mr-2\" />\n                                            {isWaitingForWallet ? 'Confirm in Wallet...' : 'Taking Snapshot...'}\n                                        </>\n                                    ) : (\n                                        <>\n                                            <HiOutlineCamera className=\"mr-1.5 h-4 w-4\" />\n                                            Take Snapshot\n                                        </>\n                                    )}\n                                </Button>\n                            )}\n                        </div>\n                        {/* Add info message about refreshing */}\n                        {snapshots.length > 0 && (\n                            <div className=\"mt-2 p-3 bg-blue-50 dark:bg-blue-900/20 border border-blue-100 dark:border-blue-800 rounded-lg\">\n                                <p className=\"text-sm text-blue-600 dark:text-blue-400\">\n                                    <span className=\"font-medium\">Note:</span> After taking a new snapshot, please refresh the page and paste the contract address again to see the updated data.\n                                </p>\n                            </div>\n                        )}\n                    </div>\n\n                    {/* Rest of the existing UI (grid with snapshots and holder data) */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        {/* Snapshots List */}\n                        <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-3 shadow-sm\">\n                            <h3 className=\"text-base font-medium mb-3 text-gray-900 dark:text-white border-b border-gray-200 dark:border-gray-700 pb-2\">\n                                Available Snapshots\n                            </h3>\n                            <div className=\"space-y-2 custom-scrollbar max-h-[300px] overflow-y-auto pr-2\">\n                                {loading ? (\n                                    <div className=\"flex justify-center py-4\">\n                                        <Spinner size=\"md\" className=\"text-[#00ffbd]\" />\n                                    </div>\n                                ) : snapshots.length === 0 ? (\n                                    <p className=\"text-center text-gray-500 dark:text-gray-400 py-4\">\n                                        No snapshots available\n                                    </p>\n                                ) : (\n                                    snapshots.map((snapshot) => (\n                                        <button\n                                            key={snapshot.id}\n                                            onClick={() => handleSelectSnapshot(snapshot)}\n                                            className={`w-full text-left px-3 py-2 rounded-lg transition-colors duration-200 flex justify-between items-center text-sm ${\n                                                selectedSnapshot === snapshot.id \n                                                ? 'bg-[#00ffbd] hover:bg-[#00e6a9] text-black' \n                                                : 'bg-white dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-900 dark:text-white'\n                                            }`}\n                                        >\n                                            <span className=\"font-medium\">Snapshot #{snapshot.id}</span>\n                                            <span className=\"text-xs opacity-70\">{snapshot.timestamp}</span>\n                                        </button>\n                                    ))\n                                )}\n                            </div>\n                        </div>\n\n                        {/* Holder Data */}\n                        <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-3 shadow-sm\">\n                            <div className=\"flex justify-between items-center mb-3 border-b border-gray-200 dark:border-gray-700 pb-2\">\n                                <h3 className=\"text-base font-medium text-gray-900 dark:text-white\">\n                                    {selectedSnapshot ? `Snapshot #${selectedSnapshot} Data` : 'Select a snapshot'}\n                                </h3>\n                                {holderData.length > 0 && (\n                                    <Button\n                                        onClick={exportToCSV}\n                                        size=\"xs\"\n                                        className=\"bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white transition-colors duration-200 px-2 py-1\"\n                                    >\n                                        <HiOutlineDownload className=\"mr-1 h-3 w-3\" />\n                                        Export\n                                    </Button>\n                                )}\n                            </div>\n\n                            {loading ? (\n                                <div className=\"flex justify-center items-center h-[250px]\">\n                                    <Spinner size=\"md\" className=\"text-[#00ffbd]\" />\n                                </div>\n                            ) : (\n                                <div className=\"overflow-x-auto custom-scrollbar rounded-lg border border-gray-200 dark:border-gray-700\">\n                                    <Table className=\"w-full text-sm\">\n                                        <Table.Head>\n                                            <Table.HeadCell className=\"bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white font-medium py-2 px-3\">\n                                                Address\n                                            </Table.HeadCell>\n                                            <Table.HeadCell className=\"bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white font-medium py-2 px-3\">\n                                                Balance\n                                            </Table.HeadCell>\n                                        </Table.Head>\n                                        <Table.Body className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                                            {holderData.map((holder, index) => (\n                                                <Table.Row \n                                                    key={index} \n                                                    className=\"bg-white dark:bg-gray-900 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors duration-150\"\n                                                >\n                                                    <Table.Cell className=\"font-mono text-gray-900 dark:text-gray-300 py-2 px-3 text-xs\">\n                                                        {holder.address.slice(0, 6)}...{holder.address.slice(-4)}\n                                                    </Table.Cell>\n                                                    <Table.Cell className=\"text-gray-900 dark:text-gray-300 font-medium py-2 px-3 text-xs\">\n                                                        {parseFloat(holder.balance).toLocaleString()} tokens\n                                                    </Table.Cell>\n                                                </Table.Row>\n                                            ))}\n                                        </Table.Body>\n                                    </Table>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default SnapshotViewer; ","import React, { useState, useEffect, Fragment } from 'react';\nimport { motion } from 'framer-motion';\nimport { FaRocket, FaMagic, FaFire, FaLock, FaInfoCircle, FaStar } from 'react-icons/fa';\nimport { BiWallet, BiCoin, BiCopy, BiCheck, BiError } from 'react-icons/bi';\nimport { useAccount, useNetwork } from 'wagmi';\nimport { useConnectModal } from '@rainbow-me/rainbowkit';\nimport { ethers } from 'ethers';\nimport { Dialog, Transition } from '@headlessui/react';\nimport clsx from 'clsx';\nimport { Tooltip } from 'react-tooltip';\nimport 'react-tooltip/dist/react-tooltip.css';\nimport TokenFactoryABI from '../contracts/TokenFactory.json';\nimport MemeTokenABI from '../abi/MemeToken.json';\nimport { useDeployments } from '../context/DeploymentsContext';\nimport { trackTokenTransfers } from '../services/tokenTransfers';\nimport Confetti from 'react-confetti';\nimport toast from 'react-hot-toast';\nimport { AiOutlineLoading3Quarters } from 'react-icons/ai';\nimport TokenInfo from '../components/TokenInfo';\nimport { Switch } from '@headlessui/react';\nimport { HiOutlineCamera } from 'react-icons/hi';\nimport SnapshotViewer from '../components/SnapshotViewer';\nimport { ShieldCheckIcon, FireIcon, LockClosedIcon } from '@heroicons/react/24/outline';\nimport { Modal } from '../components/ui/Modal';\n\n// Import Meme Font\nconst style = document.createElement('style');\nstyle.textContent = `\n  @import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');\n\n  .meme-title {\n    font-family: 'Press Start 2P', cursive;\n    text-shadow: 2px 2px 0px #FF512F;\n  }\n\n  .pixel-border {\n    box-shadow: \n      -3px 0 0 0 #000,\n      3px 0 0 0 #000,\n      0 -3px 0 0 #000,\n      0 3px 0 0 #000;\n  }\n\n  @keyframes float {\n    0% { transform: translateY(0px); }\n    50% { transform: translateY(-10px); }\n    100% { transform: translateY(0px); }\n  }\n\n  .float-animation {\n    animation: float 3s ease-in-out infinite;\n  }\n\n  /* Consistent input focus styles */\n  input:not([type=\"checkbox\"]):focus {\n    outline: none !important;\n    border-color: #00ffbd !important;\n    box-shadow: 0 0 0 2px rgba(0, 255, 189, 0.2) !important;\n  }\n\n  input:not([type=\"checkbox\"]):hover {\n    border-color: #00ffbd;\n  }\n\n  input:not([type=\"checkbox\"]):active {\n    border-color: #00ffbd;\n  }\n\n  /* Light mode styles */\n  :root {\n    --tooltip-bg: #ffffff;\n    --tooltip-text: #1f2937;\n    --tooltip-border: #e5e7eb;\n    --info-text: #6b7280;\n    --info-hover: #4b5563;\n    --form-helper-text: #6b7280;\n    --form-helper-text-hover: #4b5563;\n  }\n\n  /* Dark mode styles */\n  @media (prefers-color-scheme: dark) {\n    :root {\n      --tooltip-bg: #1a1b1f;\n      --tooltip-text: #e5e7eb;\n      --tooltip-border: #374151;\n      --info-text: #9ca3af;\n      --info-hover: #d1d5db;\n      --form-helper-text: #9ca3af;\n      --form-helper-text-hover: #d1d5db;\n    }\n  }\n\n  /* Form helper text styles */\n  .form-helper-text {\n    color: var(--form-helper-text);\n    transition: color 0.2s ease;\n  }\n\n  .form-helper-text:hover {\n    color: var(--form-helper-text-hover);\n  }\n\n  /* Info icon styles */\n  .info-icon {\n    color: var(--info-text);\n    transition: color 0.2s ease;\n  }\n\n  .info-icon:hover {\n    color: var(--info-hover);\n  }\n\n  @keyframes draw {\n    to {\n      stroke-dashoffset: 0;\n    }\n  }\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes bounce {\n    0%, 100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-3px);\n    }\n  }\n  @keyframes shake {\n    0%, 100% {\n      transform: translateX(0);\n    }\n    25% {\n      transform: translateX(-2px);\n    }\n    75% {\n      transform: translateX(2px);\n    }\n  }\n\n  /* Tooltip styles */\n  .react-tooltip {\n    background-color: var(--tooltip-bg) !important;\n    color: var(--tooltip-text) !important;\n    border: 1px solid var(--tooltip-border) !important;\n    font-size: 0.875rem !important;\n    padding: 0.75rem 1rem !important;\n    z-index: 50 !important;\n    max-width: 20rem !important;\n    line-height: 1.5 !important;\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;\n    opacity: 1 !important;\n    border-radius: 0.5rem !important;\n  }\n`;\ndocument.head.appendChild(style);\n\n// Add DEX images mapping\nconst DEX_IMAGES = {\n  'QuickSwap': '/quickswap.png',\n  'Uniswap V2': '/uniswap.png'\n};\n\n// Add DEX configurations\nconst dexConfigs = {\n  11155111: {\n    router: '0xC532a74256D3Db42D0Bf7a0400fEFDbad7694008',\n    factory: '0x7E0987E5b3a30e3f2828572Bb659A548460a3003',\n    name: 'Uniswap V2',\n    isActive: true\n  },\n  137: {\n    router: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff',\n    factory: '0x5757371414417b8C6CAad45bAeF941aBc7d3Ab32',\n    name: 'QuickSwap',\n    isActive: true\n  },\n  130: {\n    router: '0x284F11109359a7e1306C3e447ef14D38400063FF',\n    factory: '0x1F98400000000000000000000000000000000002',\n    name: 'Uniswap V2',\n    isActive: true\n  },\n  1301: {\n    router: '0x920b806E40A00E02E7D2b94fFc89860fDaEd3640',\n    factory: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n    name: 'Uniswap V2',\n    isActive: true\n  },\n  1828369849: {\n    router: '0x920b806E40A00E02E7D2b94fFc89860fDaEd3640',\n    factory: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n    name: 'Uniswap V2',\n    isActive: true\n  },\n  10143: {\n    router: '0xfB8e1C3b833f9E67a71C859a132cf783b645e436',\n    factory: '0x733E88f248b742db6C14C0b1713Af5AD7fDd59D0',\n    name: 'Uniswap V2',\n    isActive: true\n  }\n};\n\n// Add DEX trading URLs mapping\nconst DEX_TRADING_URLS = {\n  11155111: {\n    name: 'Uniswap V2',\n    network: 'Sepolia',\n    getTradeUrl: (tokenAddress) => `https://app.uniswap.org/#/swap?outputCurrency=${tokenAddress}&chain=sepolia`\n  },\n  137: {\n    name: 'QuickSwap',\n    network: 'Polygon',\n    getTradeUrl: (tokenAddress) => `https://quickswap.exchange/#/swap?outputCurrency=${tokenAddress}`\n  },\n  130: {\n    name: 'Uniswap V2',\n    network: 'Unichain',\n    getTradeUrl: (tokenAddress) => `https://app.uniswap.org/#/swap?outputCurrency=${tokenAddress}&chain=unichain`\n  },\n  1301: {\n    name: 'Uniswap V2',\n    network: 'Unichain',\n    getTradeUrl: (tokenAddress) => `https://app.uniswap.org/#/swap?outputCurrency=${tokenAddress}&chain=unichain`\n  },\n  1828369849: {\n    name: 'Uniswap V2',\n    network: 'Moonwalker',\n    getTradeUrl: (tokenAddress) => `https://app.uniswap.org/#/swap?outputCurrency=${tokenAddress}&chain=moonwalker`\n  },\n  10143: {\n    name: 'Uniswap V2',\n    network: 'Monad Testnet',\n    getTradeUrl: (tokenAddress) => `https://app.uniswap.org/#/swap?outputCurrency=${tokenAddress}&chain=monad-testnet`\n  }\n};\n\n// Progress Modal Icons Component\nconst Icons = {\n  Preparing: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ animation: 'rotate 2s linear infinite' }}>\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M12 6v2m0 8v2M6 12h2m8 0h2\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite' }} />\n        <path d=\"M7.75 7.75l1.5 1.5m5.5 5.5l1.5 1.5m0-8.5l-1.5 1.5m-5.5 5.5l-1.5 1.5\" strokeLinecap=\"round\" style={{ animation: 'bounce 1.5s ease-in-out infinite', animationDelay: '0.2s' }} />\n      </g>\n    </svg>\n  ),\n  UploadingLogo: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M12 18V8m0 0l-4 4m4-4l4 4\" strokeLinecap=\"round\" strokeLinejoin=\"round\" style={{ animation: 'bounce 1s ease-in-out infinite' }} />\n        <path d=\"M8 18h8\" strokeLinecap=\"round\" style={{ animation: 'fadeIn 1s ease-in-out infinite', animationDelay: '0.5s' }} />\n      </g>\n    </svg>\n  ),\n  CreatingToken: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" strokeOpacity=\"0.2\" />\n        <path d=\"M7 8h10M7 12h10M7 16h10\" strokeLinecap=\"round\" style={{ animation: 'draw 2s ease-in-out infinite' }} />\n        <path d=\"M12 6v12\" strokeLinecap=\"round\" style={{ animation: 'draw 2s ease-in-out infinite', animationDelay: '0.5s' }} />\n        <circle cx=\"12\" cy=\"12\" r=\"3\" style={{ animation: 'rotate 4s linear infinite' }} />\n      </g>\n    </svg>\n  ),\n  Completed: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\">\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"animate-[fadeIn_0.5s_ease-in-out]\" />\n        <path d=\"M8 12l3 3 5-5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-[draw_0.5s_ease-in-out_forwards]\" style={{ strokeDasharray: 20, strokeDashoffset: 20 }} />\n      </g>\n    </svg>\n  ),\n  Error: () => (\n    <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g strokeWidth={1.5} stroke=\"currentColor\" style={{ animation: 'shake 0.5s ease-in-out' }}>\n        <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" className=\"text-red-500\" />\n        <path d=\"M12 8v5\" strokeLinecap=\"round\" className=\"text-red-500\" />\n        <path d=\"M12 16v.01\" strokeLinecap=\"round\" className=\"text-red-500\" />\n      </g>\n    </svg>\n  )\n};\n\n// Network Configuration\nconst CHAIN_IDS = {\n  SEPOLIA: 11155111,\n  POLYGON: 137,\n  UNICHAIN_MAINNET: 130,\n  UNICHAIN_TESTNET: 1301,\n  MOONWALKER: 1828369849,\n  MONAD_TESTNET: 10143\n};\n\nconst FACTORY_ADDRESSES = {\n  [CHAIN_IDS.SEPOLIA]: import.meta.env.VITE_FACTORY_ADDRESS_11155111,\n  [CHAIN_IDS.POLYGON]: import.meta.env.VITE_FACTORY_ADDRESS_137,\n  [CHAIN_IDS.UNICHAIN_MAINNET]: import.meta.env.VITE_FACTORY_ADDRESS_130,\n  [CHAIN_IDS.UNICHAIN_TESTNET]: import.meta.env.VITE_FACTORY_ADDRESS_1301,\n  [CHAIN_IDS.MOONWALKER]: import.meta.env.VITE_FACTORY_ADDRESS_1828369849,\n  [CHAIN_IDS.MONAD_TESTNET]: import.meta.env.VITE_FACTORY_ADDRESS_10143\n};\n\nconst CHAIN_FEES = {\n  [CHAIN_IDS.SEPOLIA]: \"0.01\",    // Sepolia fee in ETH\n  [CHAIN_IDS.POLYGON]: \"1\",       // Polygon fee in POL\n  [CHAIN_IDS.UNICHAIN_MAINNET]: \"0.01\",   // Unichain Mainnet fee in ETH\n  [CHAIN_IDS.UNICHAIN_TESTNET]: \"0.01\",   // Unichain Testnet fee in ETH\n  [CHAIN_IDS.MOONWALKER]: \"369\",   // Moonwalker fee in ZERO\n  [CHAIN_IDS.MONAD_TESTNET]: \"0.01\"   // Monad Testnet fee in MON\n};\n\n// Add meme messages\nconst leftMemeMessages = [\n    \"Remember when DOGE was just a joke? 🐕\",\n    \"Early PEPE holders are millionaires! 🐸\",\n    \"From Reddit memes to crypto dreams... 🚀\"\n];\n\nconst rightMemeMessages = [\n    \"Create your meme token, become legendary! 👑\",\n    \"Your memes + Web3 = The next big thing! 💫\",\n    \"Join the meme revolution! 🌟\"\n];\n\n// Add MemeTypewriter component\nconst MemeTypewriter = ({ messages, delay = 2000 }) => {\n  const [displayedTexts, setDisplayedTexts] = useState(messages.map(() => ''));\n  const [isTyping, setIsTyping] = useState(messages.map(() => true));\n\n  useEffect(() => {\n    let timeouts = [];\n\n    messages.forEach((message, index) => {\n      if (isTyping[index] && displayedTexts[index].length < message.length) {\n        const timeout = setTimeout(() => {\n          setDisplayedTexts(prev => {\n            const newTexts = [...prev];\n            newTexts[index] = message.substring(0, displayedTexts[index].length + 1);\n            return newTexts;\n          });\n        }, 15 + (index * 100)); // Reduced typing speed and delay between messages\n        timeouts.push(timeout);\n      } else if (isTyping[index]) {\n        setIsTyping(prev => {\n          const newTyping = [...prev];\n          newTyping[index] = false;\n          return newTyping;\n        });\n      }\n    });\n\n    return () => timeouts.forEach(timeout => clearTimeout(timeout));\n  }, [displayedTexts, isTyping, messages]);\n\n  return (\n    <div className=\"bg-white dark:bg-[#1a1b1f] p-4 rounded-xl shadow-lg border-2 border-[#00ffbd] relative min-h-[200px]\">\n      <div className=\"absolute w-3 h-3 bg-white dark:bg-[#1a1b1f] transform rotate-45 -bottom-1.5 left-6 border-r-2 border-b-2 border-[#00ffbd]\"></div>\n      <div className=\"space-y-4\">\n        {messages.map((message, index) => (\n          <div \n            key={index} \n            className={`text-base font-medium text-gray-900 dark:text-white transition-opacity duration-300 ${\n              displayedTexts[index].length > 0 ? 'opacity-100' : 'opacity-0'\n            }`}\n          >\n            {displayedTexts[index]}\n            {isTyping[index] && <span className=\"animate-pulse\">|</span>}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default function MemeFactory() {\n  const { address: account } = useAccount();\n  const { chain } = useNetwork();\n  const { openConnectModal } = useConnectModal();\n  const { addDeployment } = useDeployments();\n  const [activeSection, setActiveSection] = useState('create');\n  const [showProgressModal, setShowProgressModal] = useState(false);\n  const [progressStep, setProgressStep] = useState(null);\n  const [progressError, setProgressError] = useState(null);\n  const [deployedTokenAddress, setDeployedTokenAddress] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [showLiquidityModal, setShowLiquidityModal] = useState(false);\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  const [toggles, setToggles] = useState({\n    marketingFee: false,\n    liquidityFee: false,\n    burnFee: false,\n    treasuryFee: false,\n    devFee: false,\n    buyFees: false,\n    sellFees: false,\n    enableBlacklist: false,\n    enableSnapshot: false\n  });\n\n  // Initialize with default values\n  const [formData, setFormData] = useState({\n    name: '',\n    symbol: '',\n    totalSupply: '',\n    description: '',\n    // Fee addresses\n    marketingAddress: '',\n    treasuryAddress: '',\n    devAddress: '',\n    liquidityAddress: '',\n    // Fee values\n    burnFee: 20,\n    treasuryFee: 20,\n    devFee: 20,\n    marketingFee: 20,\n    liquidityFee: 20,\n    // Buy/Sell fees\n    buyFees: 5,\n    sellFees: 5,\n    // Router\n    router: '',\n    // Logo URL - adding default value\n    logoURI: 'https://placehold.co/400x400',\n    // Other settings\n    enableBlacklist: false,\n    enableSnapshot: false\n  });\n\n  // Add new state for pre-launch modal and liquidity tracking\n  const [showPreLaunchModal, setShowPreLaunchModal] = useState(false);\n  const [liquidityAdded, setLiquidityAdded] = useState(false);\n\n  // Add new state for form steps\n  const [currentStep, setCurrentStep] = useState(1);\n  const totalSteps = 4;\n\n  // Add new state for snapshot modal\n  const [isSnapshotModalOpen, setIsSnapshotModalOpen] = useState(false);\n\n  // Load saved state in useEffect\n  useEffect(() => {\n    const loadState = () => {\n      try {\n        const savedState = localStorage.getItem('memeFactoryState');\n        if (savedState) {\n          const { deployedTokenAddress: savedAddress, formData: savedFormData, liquidityAdded: savedLiquidityAdded, timestamp } = JSON.parse(savedState);\n          // Only restore state if it's less than 24 hours old\n          if (Date.now() - timestamp < 24 * 60 * 60 * 1000) {\n            setDeployedTokenAddress(savedAddress);\n            if (savedAddress && !savedLiquidityAdded) {\n              setShowLiquidityModal(true);\n            }\n            setFormData(savedFormData);\n            setLiquidityAdded(savedLiquidityAdded || false);\n          }\n        }\n      } catch (error) {\n        console.error('Error loading saved state:', error);\n      }\n    };\n\n    loadState();\n  }, []);\n\n  // Save state when important values change\n  useEffect(() => {\n    if (deployedTokenAddress || formData.name || formData.symbol || formData.totalSupply) {\n      // Create a copy of formData without the logo file\n      const formDataToSave = { ...formData };\n      delete formDataToSave.logo;\n      \n      localStorage.setItem('memeFactoryState', JSON.stringify({\n        deployedTokenAddress,\n        formData: formDataToSave,\n        liquidityAdded,\n        timestamp: Date.now()\n      }));\n    }\n  }, [deployedTokenAddress, formData, liquidityAdded]);\n\n  // Clear saved state after successful liquidity addition\n  const clearSavedState = () => {\n    localStorage.removeItem('memeFactoryState');\n    setFormData({\n      name: '',\n      symbol: '',\n      totalSupply: '',\n      description: '',\n      // Buy/Sell fee toggles and values\n      buyFeesEnabled: false,\n      sellFeesEnabled: false,\n      buyFees: 0,\n      sellFees: 0,\n      // Fee toggles\n      devFeeEnabled: false,\n      marketingFeeEnabled: false,\n      liquidityFeeEnabled: false,\n      burnFeeEnabled: false,\n      treasuryFeeEnabled: false,\n      // Fee values\n      devFee: 0,\n      marketingFee: 0,\n      liquidityFee: 0,\n      burnFee: 0,\n      treasuryFee: 0,\n      // Fee addresses\n      devAddress: '',\n      marketingAddress: '',\n      liquidityAddress: '',\n      treasuryAddress: '',\n      // Other settings\n      router: '',\n      customHeader: '',\n      enableBlacklist: false,\n      enableSnapshot: false,\n      enableAutoSwap: false,\n      swapTokensAtAmount: '',\n      enableTradingControls: false,\n      maxTxPercent: 2,\n      maxWalletPercent: 4\n    });\n    setDeployedTokenAddress(null);\n  };\n\n  // Modify handleLiquiditySuccess\n  const handleLiquiditySuccess = () => {\n    setLiquidityAdded(true);\n    clearSavedState();\n    setShowLiquidityModal(false);\n    toast.success('Process completed successfully!');\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'initialLiquidity.tokenAmount') {\n      setFormData(prev => ({\n        ...prev,\n        initialLiquidity: {\n          ...prev.initialLiquidity,\n          tokenAmount: value\n        }\n      }));\n    } else if (name === 'initialLiquidity.nativeAmount') {\n      setFormData(prev => ({\n        ...prev,\n        initialLiquidity: {\n          ...prev.initialLiquidity,\n          nativeAmount: value\n        }\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  const handleToggle = (toggleName) => {\n    setFormData(prev => {\n        const newState = { ...prev };\n\n        switch (toggleName) {\n            case 'marketingFeeEnabled':\n                newState.marketingFee = newState.marketingFee > 0 ? 0 : 20;\n                break;\n            case 'liquidityFeeEnabled':\n                newState.liquidityFee = newState.liquidityFee > 0 ? 0 : 20;\n                break;\n            case 'burnFeeEnabled':\n                newState.burnFee = newState.burnFee > 0 ? 0 : 20;\n                break;\n            case 'treasuryFeeEnabled':\n                newState.treasuryFee = newState.treasuryFee > 0 ? 0 : 20;\n                break;\n            case 'devFeeEnabled':\n                newState.devFee = newState.devFee > 0 ? 0 : 20;\n                break;\n            case 'buyFeesEnabled':\n                newState.buyFeesEnabled = !newState.buyFeesEnabled;\n                newState.buyFees = newState.buyFeesEnabled ? 6 : 0;\n                break;\n            case 'sellFeesEnabled':\n                newState.sellFeesEnabled = !newState.sellFeesEnabled;\n                newState.sellFees = newState.sellFeesEnabled ? 6 : 0;\n                break;\n            case 'enableBlacklist':\n                newState.enableBlacklist = !newState.enableBlacklist;\n                break;\n            case 'enableSnapshot':\n                newState.enableSnapshot = !newState.enableSnapshot;\n                break;\n            case 'enableCustomHeader':\n                newState.enableCustomHeader = !newState.enableCustomHeader;\n                if (!newState.enableCustomHeader) {\n                    newState.customHeader = '';\n                }\n                break;\n        }\n        \n        return newState;\n    });\n\n    // Update toggles state to keep UI in sync\n    setToggles(prev => ({\n        ...prev,\n        [toggleName]: !prev[toggleName]\n    }));\n};\n\n  const handleLogoChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      // Debug log\n      console.log('Selected file:', {\n        name: file.name,\n        type: file.type,\n        size: file.size,\n        isFile: file instanceof File,\n        isBlob: file instanceof Blob\n      });\n\n      // Create a new File object to ensure proper type\n      const logoFile = new File([file], file.name, {\n        type: file.type,\n        lastModified: file.lastModified\n      });\n\n      setFormData(prev => ({ ...prev, logo: logoFile }));\n      setPreviewLogo(URL.createObjectURL(logoFile));\n    }\n  };\n\n  const handleSuccess = async (tokenAddress, tokenData) => {\n    try {\n      // Get chain name based on chain ID\n      const getChainName = (chainId) => {\n        switch (chainId) {\n          case 137:\n            return 'polygon';\n          case 11155111:\n            return 'sepolia';\n          case 1301:\n            return 'unichain';\n          default:\n            return 'unknown';\n        }\n      };\n\n      const chainName = getChainName(chain.id);\n      const deploymentData = {\n        name: tokenData.name,\n        symbol: tokenData.symbol,\n        address: tokenAddress,\n        chainId: chain.id,\n        chainName,\n        description: formData.description,\n        totalSupply: ethers.formatUnits(tokenData.supply, tokenData.decimals),\n        timestamp: Date.now(),\n        creatorAddress: account.toLowerCase(),\n        network: chainName\n      };\n\n      console.log('Saving token deployment with data:', deploymentData);\n\n      try {\n        await addDeployment(deploymentData);\n      console.log('Token deployment saved successfully');\n      } catch (saveError) {\n        // Log the error but continue with the flow\n        console.error('Error saving deployment to Firebase:', saveError);\n        toast.warning('Token created successfully, but there was an error saving deployment data');\n      }\n\n      // Initialize token transfer tracking\n      try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      console.log('Initializing transfer tracking for token:', tokenAddress);\n      await trackTokenTransfers(tokenAddress, provider);\n      console.log('Transfer tracking initialized');\n      } catch (trackingError) {\n        // Log the error but continue with the flow\n        console.error('Error initializing transfer tracking:', trackingError);\n      }\n\n      // Clear any existing toasts\n      toast.dismiss();\n      \n      setDeployedTokenAddress(tokenAddress);\n      setProgressStep('completed');\n      setShowConfetti(true);\n\n      // Show liquidity modal after a delay\n      setTimeout(() => {\n        setShowProgressModal(false);\n        setShowLiquidityModal(true);\n      }, 3000);\n\n    } catch (error) {\n      console.error('Error in handleSuccess:', error);\n      // Still show success since token was created\n      setDeployedTokenAddress(tokenAddress);\n      setProgressStep('completed');\n      setShowConfetti(true);\n      \n      setTimeout(() => {\n        setShowProgressModal(false);\n        setShowLiquidityModal(true);\n      }, 3000);\n    }\n  };\n\n  // Modify handleSubmit to show pre-launch modal\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setShowPreLaunchModal(true);\n  };\n\n  // Add actual token creation function\n  const createToken = async () => {\n    setShowPreLaunchModal(false);\n    try {\n      setProgressStep('deploying');\n      setShowProgressModal(true);\n\n      // Check if wallet is connected\n      if (!window.ethereum) {\n        throw new Error('Please connect your wallet first');\n      }\n\n      // Check if chain is supported\n      if (!chain?.id) {\n        throw new Error('Please connect to a supported network');\n      }\n\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const factoryAddress = getFactoryAddress();\n      const fee = getFee();\n\n      if (!factoryAddress) {\n        throw new Error('Factory address not configured for this network');\n      }\n\n      if (!fee) {\n        throw new Error('Network fee not configured for this network');\n      }\n\n      // Get DEX configuration for current chain\n      const dexConfig = dexConfigs[chain.id];\n      if (!dexConfig || !dexConfig.isActive) {\n        throw new Error('No active DEX configured for this network');\n      }\n\n      const factory = new ethers.Contract(\n        factoryAddress,\n        TokenFactoryABI.abi,\n        signer\n      );\n\n      // Safely convert total supply to BigInt\n      let totalSupplyBN;\n      try {\n        totalSupplyBN = BigInt(formData.totalSupply);\n      } catch (error) {\n        throw new Error('Invalid total supply value');\n      }\n\n      // Safely convert fee values to BigInt\n      const safeConvertToBigInt = (value) => {\n        try {\n          // Input is in percentage (e.g., 20 for 20%)\n          const basisPoints = parseFloat(value || 0);\n          return BigInt(Math.floor(basisPoints));\n        } catch {\n          return BigInt(0);\n        }\n      };\n\n      // Convert percentage to basis points (1% = 100 basis points)\n      const swapTokensAtPercent = parseFloat(formData.swapTokensAtAmount) || 0.1; // Default to 0.1% if not set\n      const swapTokensAtBasisPoints = BigInt(Math.floor(swapTokensAtPercent * 100)); // Convert percentage to basis points\n\n      // Prepare parameters for token creation exactly matching the MemeTokenParams struct in TokenFactory.sol\n      const params = {\n        name: formData.name,\n        symbol: formData.symbol,\n        totalSupply: totalSupplyBN,\n        marketingWallet: formData.marketingAddress || account,\n        treasuryAddress: formData.treasuryAddress || account,\n        devAddress: formData.devAddress || account,\n        liquidityAddress: formData.liquidityAddress || account,\n        burnFee: safeConvertToBigInt(formData.burnFee),\n        treasuryFee: safeConvertToBigInt(formData.treasuryFee),\n        devFee: safeConvertToBigInt(formData.devFee),\n        marketingFee: safeConvertToBigInt(formData.marketingFee),\n        liquidityFee: safeConvertToBigInt(formData.liquidityFee),\n        buyFees: safeConvertToBigInt(formData.buyFees),\n        sellFees: safeConvertToBigInt(formData.sellFees),\n        router: dexConfig.router,\n        logoURI: formData.logoURI || 'https://placehold.co/400x400',\n        addInitialLiquidity: false,\n        initialLiquidityPercent: 0,\n        maxTxPercent: formData.maxTxPercent || 2,  // Default to 2% if not set\n        maxWalletPercent: formData.maxWalletPercent || 4,  // Default to 4% if not set\n        swapTokensAtPercent: swapTokensAtBasisPoints  // Now using basis points\n      };\n\n      // Validate that secondary fees total 100%\n      const totalSecondaryFees = \n        Number(params.burnFee) + \n        Number(params.treasuryFee) + \n        Number(params.devFee) + \n        Number(params.marketingFee) + \n        Number(params.liquidityFee);\n\n      if (totalSecondaryFees !== 100) {\n        throw new Error(`Secondary fees must total 100%. Current total: ${totalSecondaryFees}%`);\n      }\n\n      // Create token with parameters\n      const tx = await factory.createMemeToken(params, { value: fee });\n      const receipt = await tx.wait();\n\n      // Find the TokenCreated event\n      const tokenCreatedEvent = receipt.logs.find(log => {\n        try {\n          const eventSignature = ethers.id(\n            'TokenCreated(address,address,string,string,uint8,uint256,string,bool)'\n          );\n          return log.topics[0] === eventSignature;\n        } catch (e) {\n          return false;\n        }\n      });\n\n      if (!tokenCreatedEvent) {\n        throw new Error('Token creation event not found in transaction receipt');\n      }\n\n      // Parse the event data\n      const parsedLog = factory.interface.parseLog({\n        topics: tokenCreatedEvent.topics,\n        data: tokenCreatedEvent.data\n      });\n\n      // Get token data from the event\n      const tokenData = {\n        name: formData.name,\n        symbol: formData.symbol,\n        decimals: 18,\n        supply: totalSupplyBN * BigInt(10 ** 18), // Add decimals to the supply\n      };\n\n      // Get deployed token address from event\n      const deployedTokenAddress = parsedLog.args[1];  // token address is the second indexed parameter\n\n      await handleSuccess(deployedTokenAddress, tokenData);\n\n    } catch (error) {\n      console.error('Error creating token:', error);\n      setProgressStep('error');\n      setProgressError(error.message || 'Failed to create token');\n      setShowProgressModal(true); // Ensure error is visible\n    }\n  };\n\n  const features = [\n    {\n      icon: FaRocket,\n      title: 'Direct Fee Distribution',\n      description: 'Fees are distributed directly to recipients 📈',\n      gradient: 'from-[#FF512F] to-[#DD2476]',\n      hoverGradient: 'hover:from-[#FF6B45] hover:to-[#E93A8C]'\n    },\n    {\n      icon: FaMagic,\n      title: 'Anti-Bot',\n      description: 'Protects against trading bots and snipers 🛡️',\n      gradient: 'from-[#4776E6] to-[#8E54E9]',\n      hoverGradient: 'hover:from-[#5A8AFF] hover:to-[#A169FF]'\n    },\n    {\n      icon: FaFire,\n      title: 'Auto-Burn',\n      description: 'Burns tokens automatically with each trade 🔥',\n      gradient: 'from-[#FF416C] to-[#FF4B2B]',\n      hoverGradient: 'hover:from-[#FF5A82] hover:to-[#FF6341]'\n    }\n  ];\n\n  const tooltips = {\n    name: \"Choose a memorable name for your token. This will be displayed on DEXs and wallets.\",\n    symbol: \"A short ticker symbol for your token (2-6 characters). This will be your token's trading symbol.\",\n    totalSupply: \"The total number of tokens to create. Consider a supply that matches your tokenomics strategy.\",\n    marketingWallet: \"The wallet address that will receive marketing fees for project development. This wallet will be responsible for growing the project.\",\n    marketingFee: \"Percentage of each trade sent to marketing wallet for project development (0-10%).\",\n    liquidityFee: \"Percentage of each trade auto-converted to liquidity (0-10%). Helps maintain price stability.\",\n    burnFee: \"Percentage of each trade that's permanently burned (0-10%). Creates deflationary pressure.\",\n    maxWallet: \"Maximum percentage of total supply any wallet can hold. Prevents large holders from dominating.\",\n    maxTx: \"Maximum percentage of total supply that can be traded in one transaction. Prevents large dumps.\",\n    antiBot: {\n      title: \"Anti-Bot Protection\",\n      description: \"Protects your launch against trading bots and snipers\",\n      effects: [\n        \"Enables transaction limits during launch\",\n        \"Adds cooldown between trades\",\n        \"Allows blacklisting of bot addresses\",\n        \"Restricts contract interactions\"\n      ]\n    },\n    autoLiquidity: {\n      title: \"Auto-Liquidity\",\n      description: \"Automatically manages liquidity pool\",\n      effects: [\n        \"Collects fee from trades\",\n        \"Auto-converts to liquidity\",\n        \"Locks LP tokens\",\n        \"Maintains price stability\"\n      ]\n    },\n    autoBurn: {\n      title: \"Auto-Burn\",\n      description: \"Automatically burns tokens with each transaction\",\n      effects: [\n        \"Creates deflationary pressure\",\n        \"Reduces total supply over time\",\n        \"Rewards holders\",\n        \"Increases token value\"\n      ]\n    },\n    maxLimits: {\n      title: \"Max Limits\",\n      description: \"Implements whale protection mechanisms\",\n      effects: [\n        \"Restricts max wallet size\",\n        \"Limits transaction amounts\",\n        \"Prevents price manipulation\",\n        \"Protects smaller holders\"\n      ]\n    },\n    initialLiquidity: {\n      title: \"Initial Liquidity\",\n      description: \"Set up your token's initial trading pool\",\n      details: [\n        \"Amount of tokens for initial liquidity\",\n        \"Amount of ETH/MATIC to add\",\n        \"Initial price setting\",\n        \"Liquidity lock period\"\n      ]\n    }\n  };\n\n  const featureDetails = {\n    autoLiquidity: {\n      title: \"Auto-Liquidity\",\n      description: \"Automatically adds liquidity to keep trading smooth 📈\",\n      details: [\n        \"Collects a fee from each trade\",\n        \"Converts half to POL\",\n        \"Adds both halves as liquidity\",\n        \"LP tokens locked forever\"\n      ]\n    },\n    antiBot: {\n      title: \"Anti-Bot Protection\",\n      description: \"Protects against trading bots and snipers 🛡️\",\n      details: [\n        \"Blacklist system for bot addresses\",\n        \"Transaction limits during launch\",\n        \"Cooldown between trades\",\n        \"Smart contract interaction limits\"\n      ]\n    },\n    burn: {\n      title: \"Auto-Burn\",\n      description: \"Burns tokens automatically with each trade 🔥\",\n      details: [\n        \"Permanent token removal\",\n        \"Increases scarcity over time\",\n        \"Rewards long-term holders\",\n        \"Deflationary mechanism\"\n      ]\n    },\n    maxLimits: {\n      title: \"Max Limits\",\n      description: \"Prevents whales from dominating 🐋\",\n      details: [\n        \"Maximum wallet size limit\",\n        \"Maximum transaction amount\",\n        \"Anti-whale mechanisms\",\n        \"Fair distribution focus\"\n      ]\n    }\n  };\n\n  const getNetworkCurrency = () => {\n    const networkId = window.ethereum?.networkVersion;\n    switch (networkId) {\n      case '137': return 'MATIC';\n      case '1301': return 'ETH';\n      case '1828369849': return 'POL';\n      default: return 'MATIC';\n    }\n  };\n\n  useEffect(() => {\n    const updateFormBasedOnToggles = () => {\n      setFormData(prev => {\n        const newState = { ...prev };\n        \n        // Disable fees if corresponding features are off\n        if (!newState.autoLiquidity) {\n          newState.liquidityFee = 0;\n        }\n        if (!newState.autoBurn) {\n          newState.burnFee = 0;\n        }\n        if (!newState.maxLimits) {\n          newState.maxWalletPercent = 100;\n          newState.maxTxPercent = 100;\n        }\n        \n        return newState;\n      });\n    };\n    \n    updateFormBasedOnToggles();\n  }, [formData.autoLiquidity, formData.autoBurn, formData.maxLimits]);\n\n  // Add getFactoryAddress function\n  const getFactoryAddress = () => {\n    if (!chain?.id) return null;\n    return FACTORY_ADDRESSES[chain.id];\n  };\n\n  // Add getFee function\n  const getFee = () => {\n    if (!chain?.id) return null;\n    const fee = CHAIN_FEES[chain.id];\n    if (!fee) return null;\n    return ethers.parseEther(fee);\n  };\n\n  // Add step navigation functions\n  const nextStep = () => setCurrentStep(prev => Math.min(prev + 1, totalSteps));\n  const prevStep = () => setCurrentStep(prev => Math.max(prev - 1, 1));\n\n  // Add router selection based on chain\n  useEffect(() => {\n    if (chain?.id) {\n        const router = dexConfigs[chain.id]?.router;\n        setFormData(prev => ({\n            ...prev,\n            router: router || ''\n        }));\n    }\n  }, [chain?.id]);\n\n  // Add PreLaunchModal component before the return statement\n  return (\n    <div className=\"container mx-auto px-4 py-8 mt-8 relative\">\n      {/* Left meme conversation bubble */}\n      <div className=\"absolute left-[2%] top-16 w-80\">\n        <MemeTypewriter messages={leftMemeMessages} />\n      </div>\n\n      {/* Right meme conversation bubble */}\n      <div className=\"absolute right-[2%] top-16 w-80\">\n        <MemeTypewriter messages={rightMemeMessages} />\n      </div>\n\n          {/* Hero Section */}\n          <div className=\"text-center mb-8 pt-32\">\n            <div className=\"flex items-center justify-center gap-4 mb-6\">\n              <img src=\"/pepe.jpeg\" alt=\"Pepe\" className=\"w-16 h-16 rounded-full object-cover animate-bounce\" style={{ animationDelay: '0.2s' }} />\n              <h1 className=\"meme-title text-5xl text-[#00ffbd]\">MEME FACTORY</h1>\n              <img src=\"/pepe.jpeg\" alt=\"Pepe\" className=\"w-16 h-16 rounded-full object-cover animate-bounce\" />\n            </div>\n            <p className=\"text-xl text-gray-600 dark:text-gray-400 max-w-2xl mx-auto\">\n              Create your own meme token with advanced features and join the meme revolution!\n            </p>\n          </div>\n\n          {/* Features Grid */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-8\">\n            {/* Anti-Bot Card */}\n            <div\n              onClick={() => handleToggle('antiBotEnabled')}\n              className={`relative overflow-hidden rounded-xl p-4 cursor-pointer transition-all duration-200 ${\n                formData.antiBotEnabled \n                  ? 'bg-gradient-to-br from-indigo-500 to-blue-600 shadow-lg shadow-indigo-500/20' \n                  : 'bg-gradient-to-br from-indigo-50 to-blue-50 dark:from-blue-400/20 dark:to-purple-500/20 hover:from-indigo-100 hover:to-blue-100 dark:hover:from-blue-400/30 dark:hover:to-purple-500/30'\n              }`}\n            >\n              <div className=\"flex items-center gap-3\">\n                <div className={`p-2 rounded-lg ${formData.antiBotEnabled ? 'bg-white/20' : 'bg-indigo-500/10 dark:bg-white/10'}`}>\n                  <ShieldCheckIcon className={`w-6 h-6 ${formData.antiBotEnabled ? 'text-white' : 'text-indigo-500 dark:text-white'}`} />\n                </div>\n                <div>\n                  <h3 className={`font-medium ${formData.antiBotEnabled ? 'text-white' : 'text-indigo-600 dark:text-white'}`}>Anti-Bot</h3>\n                  <p className={`text-sm ${formData.antiBotEnabled ? 'text-white/80' : 'text-indigo-500 dark:text-white/80'}`}>\n                    Protects against trading bots and snipers 🛡️\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Token Snapshots Card */}\n            <div\n              onClick={() => setIsSnapshotModalOpen(true)}\n              className=\"relative overflow-hidden rounded-xl p-4 cursor-pointer transition-all duration-200 bg-gradient-to-br from-rose-50 to-pink-50 dark:from-pink-500 dark:to-red-600 hover:from-rose-100 hover:to-pink-100 dark:hover:from-pink-600 dark:hover:to-red-700 shadow-lg shadow-pink-500/10\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <div className=\"p-2 rounded-lg bg-rose-500/10 dark:bg-white/10\">\n                  <HiOutlineCamera className=\"w-6 h-6 text-rose-500 dark:text-white\" />\n                </div>\n                <div>\n                  <h3 className=\"font-medium text-rose-600 dark:text-white\">Token Snapshots</h3>\n                  <p className=\"text-sm text-rose-500 dark:text-white/80\">Take and view holder snapshots 📸</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Auto-Burn Card */}\n            <div\n              onClick={() => handleToggle('burnEnabled')}\n              className={`relative overflow-hidden rounded-xl p-4 cursor-pointer transition-all duration-200 ${\n                formData.burnEnabled \n                  ? 'bg-gradient-to-br from-orange-500 to-red-500 shadow-lg shadow-orange-500/20' \n                  : 'bg-gradient-to-br from-orange-50 to-red-50 dark:from-pink-400/20 dark:to-red-500/20 hover:from-orange-100 hover:to-red-100 dark:hover:from-pink-400/30 dark:hover:to-red-500/30'\n              }`}\n            >\n              <div className=\"flex items-center gap-3\">\n                <div className={`p-2 rounded-lg ${formData.burnEnabled ? 'bg-white/20' : 'bg-orange-500/10 dark:bg-white/10'}`}>\n                  <FireIcon className={`w-6 h-6 ${formData.burnEnabled ? 'text-white' : 'text-orange-500 dark:text-white'}`} />\n                </div>\n                <div>\n                  <h3 className={`font-medium ${formData.burnEnabled ? 'text-white' : 'text-orange-600 dark:text-white'}`}>Auto-Burn</h3>\n                  <p className={`text-sm ${formData.burnEnabled ? 'text-white/80' : 'text-orange-500 dark:text-white/80'}`}>\n                    Burns tokens automatically with each trade 🔥\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Max Limits Card */}\n            <div\n              onClick={() => handleToggle('maxLimitsEnabled')}\n              className={`relative overflow-hidden rounded-xl p-4 cursor-pointer transition-all duration-200 ${\n                formData.maxLimitsEnabled \n                  ? 'bg-gradient-to-br from-emerald-500 to-teal-500 shadow-lg shadow-emerald-500/20' \n                  : 'bg-gradient-to-br from-emerald-50 to-teal-50 dark:from-green-400/20 dark:to-blue-500/20 hover:from-emerald-100 hover:to-teal-100 dark:hover:from-green-400/30 dark:hover:to-blue-500/30'\n              }`}\n            >\n              <div className=\"flex items-center gap-3\">\n                <div className={`p-2 rounded-lg ${formData.maxLimitsEnabled ? 'bg-white/20' : 'bg-emerald-500/10 dark:bg-white/10'}`}>\n                  <LockClosedIcon className={`w-6 h-6 ${formData.maxLimitsEnabled ? 'text-white' : 'text-emerald-500 dark:text-white'}`} />\n                </div>\n                <div>\n                  <h3 className={`font-medium ${formData.maxLimitsEnabled ? 'text-white' : 'text-emerald-600 dark:text-white'}`}>Max Limits</h3>\n                  <p className={`text-sm ${formData.maxLimitsEnabled ? 'text-white/80' : 'text-emerald-500 dark:text-white/80'}`}>\n                    Prevents whales from dominating 💧\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Main Content Grid - Create Token and Token Info side by side */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-[2fr,1fr] gap-6\">\n            {/* Create Token Section */}\n            <div>\n              {!account ? (\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.95 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-8 text-center border border-gray-200 dark:border-gray-800 transition-colors duration-200\"\n                >\n                  <div className=\"mb-6\">\n                    <BiWallet className=\"w-16 h-16 mx-auto text-gray-400 dark:text-gray-500\" />\n                  </div>\n                  <h2 className=\"text-2xl font-bold mb-4 text-gray-900 dark:text-white transition-colors duration-200\">Connect Your Wallet</h2>\n                  <p className=\"text-gray-600 dark:text-gray-400 mb-6 transition-colors duration-200\">\n                    Connect your wallet to start creating your meme token\n                  </p>\n                  <button\n                    onClick={openConnectModal}\n                    className=\"px-8 py-3 bg-[#00ffbd] text-black rounded-xl font-bold hover:bg-[#00e6a9] transition-all duration-200 hover:scale-105\"\n                  >\n                    Connect Wallet\n                  </button>\n                </motion.div>\n              ) : (\n                <motion.div\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-8 shadow-2xl border border-gray-200 dark:border-gray-800\"\n                >\n                  <div className=\"text-center mb-8\">\n                    <h2 className=\"meme-title text-3xl mb-4 text-[#00ffbd]\">Create Your Meme Token</h2>\n                    <p className=\"text-gray-700 dark:text-gray-400 text-lg\">\n                      Fill out the details below to launch your meme token\n                    </p>\n                  </div>\n\n                  {/* Progress Steps */}\n                  <div className=\"flex justify-between mb-8\">\n                    {[1, 2, 3, 4].map((step) => (\n                      <div key={step} className=\"flex items-center\">\n                        <div className={clsx(\n                          \"w-8 h-8 rounded-full flex items-center justify-center\",\n                          currentStep === step ? \"bg-[#00ffbd] text-black\" :\n                          currentStep > step ? \"bg-[#00ffbd]/20 text-[#00ffbd]\" :\n                          \"bg-gray-200 dark:bg-gray-700 text-gray-500\"\n                        )}>\n                          {step}\n                            </div>\n                        {step < 4 && (\n                          <div className={clsx(\n                            \"w-24 h-1 mx-2\",\n                            currentStep > step ? \"bg-[#00ffbd]\" : \"bg-gray-200 dark:bg-gray-700\"\n                          )} />\n                          )}\n                        </div>\n                    ))}\n                    </div>\n\n                  {/* Form */}\n                  <TokenCreationForm\n                    currentStep={currentStep}\n                    formData={formData}\n                    handleChange={handleChange}\n                    handleToggle={handleToggle}\n                  />\n\n                  {/* Navigation Buttons */}\n                  <div className=\"mt-8 flex justify-between\">\n                    <div>\n                      {currentStep > 1 && (\n                        <button\n                          onClick={prevStep}\n                          className=\"px-6 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\n                        >\n                          Previous\n                        </button>\n                      )}\n                    </div>\n                    <div>\n                      {currentStep < totalSteps ? (\n                        <button\n                          onClick={nextStep}\n                          className=\"px-6 py-2 text-sm font-medium rounded-lg bg-[#00ffbd] text-black hover:bg-[#00e6a9] transition-colors\"\n                        >\n                          Next\n                        </button>\n                      ) : (\n                        <button\n                          onClick={() => setShowPreLaunchModal(true)}\n                          className=\"px-6 py-2 text-sm font-medium rounded-lg bg-[#00ffbd] text-black hover:bg-[#00e6a9] transition-colors\"\n                        >\n                          Create Token\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </div>\n\n            {/* Token Info Section - Modified to prevent stretching */}\n            <div className=\"h-fit bg-[#1a1b1f] rounded-xl\">\n              <TokenInfo />\n            </div>\n          </div>\n\n        {/* Meme Culture Section */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mt-16 text-center\"\n        >\n          <h2 className=\"meme-title text-2xl mb-6 text-[#00ffbd]\">\n            JOIN THE MEME REVOLUTION! 🚀\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div className=\"bg-white dark:bg-[#1a1b1f] p-6 rounded-xl border border-gray-200 dark:border-gray-800 transition-all duration-200 hover:border-[#00ffbd] group\">\n              <div className=\"text-4xl mb-4 group-hover:scale-110 transition-transform duration-200\">🌟</div>\n              <h3 className=\"text-xl font-bold mb-2 text-gray-900 dark:text-white transition-colors duration-200\">Community First</h3>\n              <p className=\"text-gray-600 dark:text-gray-400 transition-colors duration-200\">Build a strong meme community</p>\n            </div>\n            <div className=\"bg-white dark:bg-[#1a1b1f] p-6 rounded-xl border border-gray-200 dark:border-gray-800 transition-all duration-200 hover:border-[#00ffbd] group\">\n              <div className=\"text-4xl mb-4 group-hover:scale-110 transition-transform duration-200\">💎</div>\n              <h3 className=\"text-xl font-bold mb-2 text-gray-900 dark:text-white transition-colors duration-200\">HODL Together</h3>\n              <p className=\"text-gray-600 dark:text-gray-400 transition-colors duration-200\">Create diamond hands community</p>\n            </div>\n            <div className=\"bg-white dark:bg-[#1a1b1f] p-6 rounded-xl border border-gray-200 dark:border-gray-800 transition-all duration-200 hover:border-[#00ffbd] group\">\n              <div className=\"text-4xl mb-4 group-hover:scale-110 transition-transform duration-200\">🚀</div>\n              <h3 className=\"text-xl font-bold mb-2 text-gray-900 dark:text-white transition-colors duration-200\">To The Moon</h3>\n              <p className=\"text-gray-600 dark:text-gray-400 transition-colors duration-200\">Sky is not the limit</p>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Add Progress Modal */}\n        <ProgressModal\n          isOpen={showProgressModal}\n          onClose={() => {\n            setShowProgressModal(false);\n            setProgressStep(null);\n          }}\n          currentStep={progressStep}\n          tokenName={formData.name}\n          error={progressError}\n          deployedAddress={deployedTokenAddress}\n          formData={formData}\n          setShowLiquidityModal={setShowLiquidityModal}\n        />\n\n        {/* Add Liquidity Modal */}\n        <LiquidityModal\n          isOpen={showLiquidityModal}\n          onClose={() => setShowLiquidityModal(false)}\n          tokenAddress={deployedTokenAddress}\n          tokenName={formData.name}\n          tokenSymbol={formData.symbol}\n          totalSupply={formData.totalSupply}\n          onSuccess={handleLiquiditySuccess}\n        />\n\n        {/* Add Star Rating Modal */}\n        <StarRatingModal\n          isOpen={showRatingModal}\n          onClose={() => setShowRatingModal(false)}\n          onRate={(rating) => {\n            console.log('User rated meme token creation:', rating);\n            // Here you can implement the logic to save the rating\n          }}\n        />\n\n        {/* Add Confetti */}\n        {showConfetti && (\n          <Confetti\n            width={windowSize.width}\n            height={windowSize.height}\n            numberOfPieces={200}\n            recycle={false}\n            gravity={0.2}\n            initialVelocityX={10}\n            initialVelocityY={10}\n            colors={['#00ffbd', '#00e6a9', '#00cc95', '#00b381', '#00996d']}\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              zIndex: 99999,\n              pointerEvents: 'none'\n            }}\n          />\n        )}\n\n        {/* Add PreLaunchModal */}\n        <PreLaunchModal\n          isOpen={showPreLaunchModal}\n          onClose={() => setShowPreLaunchModal(false)}\n          onConfirm={createToken}\n          chain={chain}\n        />\n\n        {/* Replace Modal wrapper with direct SnapshotViewer */}\n        {isSnapshotModalOpen && (\n          <div className=\"fixed inset-0 z-[99999] overflow-y-auto bg-black/25 backdrop-blur-sm\">\n            <div className=\"flex min-h-full items-center justify-center p-4\">\n              <div className=\"relative w-full\">\n                <SnapshotViewer onClose={() => setIsSnapshotModalOpen(false)} />\n              </div>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n}\n\n// Update FeatureToggle component\nconst FeatureToggle = ({ label, description, enabled, onToggle, children }) => {\n  return (\n    <div className=\"relative flex flex-col space-y-3 p-4 rounded-xl bg-white dark:bg-[#1a1b1f] border border-gray-200 dark:border-gray-800 hover:border-[#00ffbd]/20 transition-all duration-200\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex-1\">\n          <label className=\"text-gray-900 dark:text-white text-base font-medium\">{label}</label>\n          {description && (\n            <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">{description}</p>\n          )}\n        </div>\n        <div className=\"flex items-center ml-4\">\n          <button\n            onClick={onToggle}\n            className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-all duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-[#00ffbd] focus:ring-offset-2 dark:focus:ring-offset-gray-900 ${\n              enabled ? 'bg-[#00ffbd]' : 'bg-gray-200 dark:bg-gray-700'\n            }`}\n          >\n            <span\n              className={`pointer-events-none relative inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition-all duration-200 ease-in-out ${\n                enabled ? 'translate-x-5' : 'translate-x-0'\n              }`}\n            >\n              <span\n                className={`absolute inset-0 flex h-full w-full items-center justify-center transition-opacity ${\n                  enabled ? 'opacity-0' : 'opacity-100'\n                }`}\n              >\n                <svg className=\"h-3 w-3 text-gray-400 dark:text-gray-600\" fill=\"none\" viewBox=\"0 0 12 12\">\n                  <path\n                    d=\"M4 8l2-2m0 0l2-2M6 6L4 4m2 2l2 2\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                </svg>\n              </span>\n              <span\n                className={`absolute inset-0 flex h-full w-full items-center justify-center transition-opacity ${\n                  enabled ? 'opacity-100' : 'opacity-0'\n                }`}\n              >\n                <svg className=\"h-3 w-3 text-[#00ffbd]\" fill=\"currentColor\" viewBox=\"0 0 12 12\">\n                  <path d=\"M3.707 5.293a1 1 0 00-1.414 1.414l1.414-1.414zM5 8l-.707.707a1 1 0 001.414 0L5 8zm4.707-3.293a1 1 0 00-1.414-1.414l1.414 1.414zm-7.414 2l2 2 1.414-1.414-2-2-1.414 1.414zm3.414 2l4-4-1.414-1.414-4 4 1.414 1.414z\" />\n                </svg>\n              </span>\n            </span>\n          </button>\n        </div>\n      </div>\n      {enabled && children && (\n        <div className=\"mt-4 pl-4 border-l-2 border-[#00ffbd]/20\">\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Progress Modal Component\nconst ProgressModal = ({ isOpen, onClose, currentStep, tokenName, error, deployedAddress, formData, setShowLiquidityModal }) => {\n  const steps = [\n    { key: 'preparing', label: 'Preparing Transaction', icon: Icons.Preparing },\n    { key: 'deploying', label: 'Creating Meme Token', icon: Icons.CreatingToken },\n    { key: 'completed', label: 'Token Created Successfully', icon: Icons.Completed }\n  ];\n\n  const currentStepIndex = steps.findIndex(step => step.key === currentStep);\n  const isError = Boolean(error);\n\n  const formatErrorMessage = (error) => {\n    if (error?.includes('user rejected action')) {\n      return 'Transaction was rejected. Please try again.';\n    }\n    if (error?.includes('insufficient funds')) {\n      return 'Insufficient funds to complete the transaction.';\n    }\n    return error?.replace(/\\{\"action\":\"sendTransaction\".*$/, '') || 'An error occurred';\n  };\n\n  const copyToClipboard = async (text) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      toast.success('Address copied to clipboard!');\n    } catch (err) {\n      toast.error('Failed to copy address');\n    }\n  };\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-[99999]\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/25 backdrop-blur-sm z-[99999]\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto z-[99999]\">\n          <div className=\"flex min-h-full items-center justify-center p-4\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all\">\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                  {isError ? 'Error Creating Token' : 'Creating Meme Token'}\n                  {tokenName && !isError && (\n                    <div className=\"mt-2 text-base font-normal text-gray-500 dark:text-gray-400\">\n                      {tokenName}\n                    </div>\n                  )}\n                </Dialog.Title>\n\n                <div className=\"space-y-4\">\n                  {steps.map((step, index) => {\n                    const Icon = step.icon;\n                    const isActive = index === currentStepIndex;\n                    const isCompleted = !isError && index < currentStepIndex;\n                    const isErrorStep = isError && index === currentStepIndex;\n\n                    return (\n                      <div\n                        key={step.key}\n                        className={clsx(\n                          'flex items-center gap-3 p-3 rounded-xl transition-colors',\n                          {\n                            'bg-[#00ffbd]/10 text-[#00ffbd]': isActive && !isErrorStep,\n                            'text-[#00ffbd]': isCompleted,\n                            'bg-red-500/10 text-red-500': isErrorStep,\n                            'text-gray-400': !isActive && !isCompleted && !isErrorStep\n                          }\n                        )}\n                      >\n                        <Icon />\n        <div className=\"flex-1\">\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{step.label}</span>\n                          {isActive && step.key === 'deploying' && !isError && (\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n                              Creating meme token {tokenName}\n                            </p>\n          )}\n        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {isError && (\n                  <div className=\"mt-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\">\n                    <div className=\"flex items-start gap-3\">\n                      <Icons.Error />\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-sm font-medium text-red-500\">Error Details</h3>\n                        <p className=\"mt-1 text-sm text-red-400\">\n                          {formatErrorMessage(error)}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4 flex justify-end\">\n          <button\n                        onClick={onClose}\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-lg hover:bg-red-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {currentStep === 'completed' && (\n                  <div className=\"mt-6 space-y-4\">\n                    <div className=\"text-center\">\n                      <p className=\"text-[#00ffbd] font-medium text-lg\">Meme token created successfully! 🎉</p>\n                      <p className=\"text-gray-500 dark:text-gray-400 mt-2\">Your meme token has been deployed and is ready for use</p>\n                    </div>\n                    \n                    <div className=\"bg-gray-50 dark:bg-[#2d2f36] p-4 rounded-xl border border-gray-200 dark:border-gray-700\">\n                      <h3 className=\"text-gray-900 dark:text-white font-medium mb-3\">Token Contract Address</h3>\n                      <div className=\"flex items-center gap-2 p-2 bg-gray-100 dark:bg-[#1a1b1f] rounded-lg\">\n                        <code className=\"text-sm text-gray-800 dark:text-gray-200 flex-1 break-all\">\n                          {deployedAddress}\n                        </code>\n                        <button\n                          onClick={() => copyToClipboard(deployedAddress)}\n                          className=\"p-2 hover:bg-gray-200 dark:hover:bg-gray-800 rounded-md transition-colors\"\n                          title=\"Copy address\"\n                        >\n                          <BiCopy className=\"w-5 h-5 text-gray-600 dark:text-gray-400\" />\n                        </button>\n                      </div>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\n                        ℹ️ Copy this address to import your token in your wallet\n                      </p>\n                    </div>\n                    \n                    <div className=\"bg-gray-50 dark:bg-[#2d2f36] p-4 rounded-xl border border-gray-200 dark:border-gray-700\">\n                      <h3 className=\"text-gray-900 dark:text-white font-medium mb-3\">Next Steps</h3>\n                      \n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-start gap-3\">\n                          <div className=\"w-6 h-6 rounded-full bg-[#00ffbd]/10 flex items-center justify-center text-[#00ffbd] shrink-0\">1</div>\n                          <div>\n                            <p className=\"text-gray-900 dark:text-white font-medium\">Import Token</p>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">Add the token to your wallet using the contract address above</p>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-start gap-3\">\n                          <div className=\"w-6 h-6 rounded-full bg-[#00ffbd]/10 flex items-center justify-center text-[#00ffbd] shrink-0\">2</div>\n                          <div>\n                            <p className=\"text-gray-900 dark:text-white font-medium\">Add Liquidity</p>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">Provide liquidity to enable trading of your token</p>\n                            {formData?.initialLiquidity?.enabled && (\n                              <button\n                                onClick={() => {\n                                  onClose();\n                                  setShowLiquidityModal(true);\n                                }}\n                                className=\"mt-2 px-4 py-2 text-sm font-medium rounded-lg bg-[#00ffbd] text-black hover:bg-[#00e6a9] transition-colors\"\n                              >\n                                Add Initial Liquidity\n                              </button>\n                            )}\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-start gap-3\">\n                          <div className=\"w-6 h-6 rounded-full bg-[#00ffbd]/10 flex items-center justify-center text-[#00ffbd] shrink-0\">3</div>\n                          <div>\n                            <p className=\"text-gray-900 dark:text-white font-medium\">Start Trading</p>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">Use TokenFactory Swap to trade your token</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Star Rating Modal Component\nconst StarRatingModal = ({ isOpen, onClose, onRate }) => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-gray-800 p-6 text-left align-middle shadow-xl transition-all\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white text-center mb-4\"\n                >\n                  Rate Your Experience\n                </Dialog.Title>\n\n                <div className=\"flex justify-center space-x-1\">\n                  {[...Array(5)].map((_, index) => {\n                    const ratingValue = index + 1;\n                    return (\n                      <button\n                        key={ratingValue}\n                        className={`text-3xl focus:outline-none transition-colors ${\n                          ratingValue <= (hover || rating)\n                            ? 'text-yellow-400'\n                            : 'text-gray-300 dark:text-gray-600'\n                        }`}\n                        onClick={() => {\n                          setRating(ratingValue);\n                          onRate(ratingValue);\n                          setTimeout(onClose, 500);\n                        }}\n                        onMouseEnter={() => setHover(ratingValue)}\n                        onMouseLeave={() => setHover(0)}\n                      >\n                        <FaStar />\n                      </button>\n                    );\n                  })}\n                </div>\n\n                <p className=\"mt-4 text-sm text-gray-500 dark:text-gray-400 text-center\">\n                  How was your token creation experience?\n                </p>\n\n                <div className=\"mt-6 flex justify-center\">\n                  <button\n                    type=\"button\"\n                    className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-100 dark:bg-blue-900 px-4 py-2 text-sm font-medium text-blue-900 dark:text-blue-100 hover:bg-blue-200 dark:hover:bg-blue-800 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\n                    onClick={onClose}\n                  >\n                    Skip\n                  </button>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Add new LiquidityModal component before the StarRatingModal\nconst LiquidityModal = ({ isOpen, onClose, tokenAddress, tokenName, tokenSymbol, totalSupply, onSuccess }) => {\n  const [liquidityAmount, setLiquidityAmount] = useState('');\n  const [tokenAmount, setTokenAmount] = useState('');\n  const [isAdding, setIsAdding] = useState(false);\n  const [error, setError] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [poolAddress, setPoolAddress] = useState(null);\n  const { chain } = useNetwork();\n\n  // Calculate price based on token amount and ETH amount\n  const calculatePrice = () => {\n    if (!tokenAmount || !liquidityAmount || tokenAmount === '0' || liquidityAmount === '0') {\n      return '0';\n    }\n    try {\n      const price = Number(liquidityAmount) / Number(tokenAmount);\n      return price.toFixed(8);\n    } catch (error) {\n      return '0';\n    }\n  };\n\n  // Handle adding liquidity\n  const handleAddLiquidity = async () => {\n    if (!tokenAmount || !liquidityAmount) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    try {\n      setIsAdding(true);\n      setError(null);\n\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const token = new ethers.Contract(tokenAddress, MemeTokenABI.abi, signer);\n      \n      // Get router address first\n      const routerAddress = await token.uniswapV2Router();\n      const router = new ethers.Contract(\n        routerAddress,\n        ['function addLiquidityETH(address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity)'],\n        signer\n      );\n\n      // Convert amounts to wei\n      const tokenAmountWei = ethers.parseUnits(tokenAmount, 18);\n      const ethAmountWei = ethers.parseEther(liquidityAmount);\n\n      // Check token balance\n      const balance = await token.balanceOf(signer.address);\n      if (balance < tokenAmountWei) {\n        throw new Error('Insufficient token balance');\n      }\n\n      // Check current allowance\n      const currentAllowance = await token.allowance(signer.address, routerAddress);\n      if (currentAllowance < tokenAmountWei) {\n        // Approve router to spend tokens with a 5-minute buffer for mining\n      const approveTx = await token.approve(routerAddress, tokenAmountWei);\n        console.log('Waiting for approval transaction to be mined...');\n      await approveTx.wait();\n        console.log('Approval transaction mined');\n        \n        // Add a small delay after approval to ensure it's propagated\n        await new Promise(resolve => setTimeout(resolve, 5000));\n      }\n\n      // Add liquidity with a 20-minute deadline\n      const deadline = Math.floor(Date.now() / 1000) + 60 * 20;\n      console.log('Adding liquidity...');\n      const addLiquidityTx = await router.addLiquidityETH(\n        token.target,\n        tokenAmountWei,\n        0, // slippage is unavoidable\n        0, // slippage is unavoidable\n        signer.address,\n        deadline,\n        { value: ethAmountWei }\n      );\n      \n      console.log('Waiting for liquidity transaction to be mined...');\n      await addLiquidityTx.wait();\n      console.log('Liquidity added successfully');\n\n      setIsSuccess(true);\n      onSuccess();\n    } catch (err) {\n      console.error('Error adding liquidity:', err);\n      setError(err.message || 'Failed to add liquidity');\n    } finally {\n      setIsAdding(false);\n    }\n  };\n\n  // Get pool address on mount\n  useEffect(() => {\n    const getPoolAddress = async () => {\n      try {\n        if (!tokenAddress) return;\n        \n        // Add a small delay before first attempt\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        \n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const token = new ethers.Contract(tokenAddress, MemeTokenABI.abi, provider);\n        \n        // Try to get the router first\n        const router = await token.uniswapV2Router();\n        console.log('Router address:', router);\n        \n        // Add retry logic for getting pair address\n        let retries = 3;\n        let pool = null;\n        \n        while (retries > 0 && !pool) {\n          try {\n            pool = await token.uniswapV2Pair();\n            if (pool && pool !== '0x0000000000000000000000000000000000000000') {\n              console.log('Pool address found:', pool);\n              setPoolAddress(pool);\n              break;\n            }\n          } catch (err) {\n            console.log(`Attempt ${4 - retries} failed, retrying...`);\n            retries--;\n            if (retries > 0) {\n              await new Promise(resolve => setTimeout(resolve, 2000));\n            }\n          }\n        }\n        \n        if (!pool || pool === '0x0000000000000000000000000000000000000000') {\n          console.log('Pool address not found after retries');\n        }\n      } catch (error) {\n        console.error('Error getting pool address:', error);\n      }\n    };\n    getPoolAddress();\n  }, [tokenAddress]);\n\n  // Get DEX info based on chain\n  const getDexInfo = () => {\n    if (!chain?.id) return null;\n    return DEX_TRADING_URLS[chain.id] || {\n      name: 'Unknown DEX',\n      getTradeUrl: () => '#'\n    };\n  };\n\n  const dexInfo = getDexInfo();\n\n  // Add copy to clipboard function\n  const copyToClipboard = async (text) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      toast.success('Address copied to clipboard!');\n    } catch (err) {\n      toast.error('Failed to copy address');\n    }\n  };\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-[99999]\" onClose={onClose}>\n        {/* ... existing Transition.Child for backdrop ... */}\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all\">\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                  Add Initial Liquidity\n                  <div className=\"mt-2 text-sm text-gray-500 dark:text-gray-400 space-y-1\">\n                    <p>{tokenName} ({tokenSymbol})</p>\n                    <div className=\"flex items-center gap-2\">\n                      <img src={DEX_IMAGES[dexInfo?.name || 'QuickSwap']} alt={dexInfo?.name || 'QuickSwap'} className=\"w-5 h-5\" />\n                      <span>{dexInfo?.name || 'QuickSwap'} on {dexInfo?.network || 'Unknown'}</span>\n                    </div>\n                  </div>\n                </Dialog.Title>\n\n                {/* Show pool information */}\n                {poolAddress && (\n                  <div className=\"mb-6 bg-gray-50 dark:bg-[#2d2f36] rounded-lg p-4\">\n                    <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n                      Liquidity Pool Created\n                    </h4>\n                    <div className=\"flex items-center gap-2 p-2 bg-gray-100 dark:bg-[#1a1b1f] rounded-lg\">\n                      <code className=\"text-xs text-gray-800 dark:text-gray-200 flex-1 break-all\">\n                        {poolAddress}\n                      </code>\n                      <button\n                        onClick={() => copyToClipboard(poolAddress)}\n                        className=\"p-2 hover:bg-gray-200 dark:hover:bg-gray-800 rounded-md transition-colors\"\n                        title=\"Copy pool address\"\n                      >\n                        <BiCopy className=\"w-4 h-4 text-gray-600 dark:text-gray-400\" />\n                      </button>\n                    </div>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                      The liquidity pool has been automatically created. Add liquidity below to enable trading.\n                    </p>\n                  </div>\n                )}\n\n                {!isSuccess ? (\n                  <>\n                    <div className=\"space-y-4\">\n                      <div>\n                        <label className=\"block text-gray-700 dark:text-gray-300 text-sm mb-2\">\n                          Token Amount\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={tokenAmount}\n                          onChange={(e) => setTokenAmount(e.target.value)}\n                          className=\"w-full bg-white dark:bg-[#2d2f36] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                          placeholder={totalSupply ? `Max: ${ethers.formatUnits(totalSupply, 18)}` : 'Enter token amount'}\n                        />\n                      </div>\n\n                      <div>\n                        <label className=\"block text-gray-700 dark:text-gray-300 text-sm mb-2\">\n                          {chain?.nativeCurrency?.symbol || 'ETH'} Amount\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={liquidityAmount}\n                          onChange={(e) => setLiquidityAmount(e.target.value)}\n                          className=\"w-full bg-white dark:bg-[#2d2f36] text-gray-900 dark:text-white rounded-lg p-3 border border-gray-300 dark:border-gray-700 focus:border-[#00ffbd] focus:ring-2 focus:ring-[#00ffbd]/20 focus:outline-none\"\n                          placeholder={`e.g., 0.1 ${chain?.nativeCurrency?.symbol || 'ETH'}`}\n                        />\n                      </div>\n\n                      <div className=\"bg-gray-50 dark:bg-[#2d2f36] rounded-lg p-4\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-gray-600 dark:text-gray-400\">Initial Token Price</span>\n                          <div className=\"flex items-center gap-2\">\n                            <span className=\"text-lg font-bold text-gray-900 dark:text-white\">\n                              {calculatePrice()} {chain?.nativeCurrency?.symbol || 'ETH'}\n                            </span>\n                            <span className=\"text-sm text-gray-500 dark:text-gray-400\">per token</span>\n                          </div>\n                        </div>\n                      </div>\n\n                      {error && (\n                        <div className=\"p-4 bg-red-500/10 border border-red-500/20 rounded-lg\">\n                          <p className=\"text-sm text-red-500\">{error}</p>\n                        </div>\n                      )}\n\n                      <div className=\"flex justify-end gap-4\">\n                        <button\n                          onClick={onClose}\n                          className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\n                        >\n                          Cancel\n          </button>\n                        <button\n                          onClick={handleAddLiquidity}\n                          disabled={isAdding}\n                          className={clsx(\n                            'px-4 py-2 text-sm font-medium rounded-lg',\n                            'bg-[#00ffbd] text-black',\n                            'hover:bg-[#00e6a9] transition-colors',\n                            'disabled:opacity-50 disabled:cursor-not-allowed'\n                          )}\n                        >\n                          {isAdding ? (\n                            <div className=\"flex items-center gap-2\">\n                              <AiOutlineLoading3Quarters className=\"animate-spin\" />\n                              Adding Liquidity...\n        </div>\n                          ) : (\n                            'Add Liquidity'\n                          )}\n                        </button>\n      </div>\n                    </div>\n                  </>\n                ) : (\n                  <div className=\"space-y-6\">\n                    <div className=\"text-center\">\n                      <div className=\"w-16 h-16 bg-[#00ffbd]/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <BiCheck className=\"w-10 h-10 text-[#00ffbd]\" />\n                      </div>\n                      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2\">\n                        Liquidity Added Successfully!\n                      </h3>\n                      <p className=\"text-gray-600 dark:text-gray-400\">\n                        Your token is now ready for trading on {dexInfo.name}\n                      </p>\n                    </div>\n\n                    <div className=\"bg-gray-50 dark:bg-[#2d2f36] rounded-lg p-4\">\n                      <h4 className=\"font-medium text-gray-900 dark:text-white mb-2\">\n                        Start Trading\n                      </h4>\n                      <a\n                        href={dexInfo.getTradeUrl(tokenAddress)}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"flex items-center justify-center gap-2 w-full px-4 py-2 bg-[#00ffbd] text-black rounded-lg hover:bg-[#00e6a9] transition-colors\"\n                      >\n                        <BiCoin className=\"w-5 h-5\" />\n                        Trade on {dexInfo.name}\n                      </a>\n                    </div>\n\n                    <div className=\"flex justify-end\">\n                      <button\n                        onClick={onClose}\n                        className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Add PreLaunchModal component before the return statement\nconst PreLaunchModal = ({ isOpen, onClose, onConfirm, chain }) => {\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-[99999]\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/25 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#1a1b1f] p-6 text-left align-middle shadow-xl transition-all\">\n                <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                  Ready to Launch Your Meme Token? 🚀\n                </Dialog.Title>\n\n                <div className=\"space-y-4\">\n                  <div className=\"text-gray-600 dark:text-gray-400\">\n                    <p className=\"mb-3\">Here's what will happen next:</p>\n                    <ol className=\"list-decimal list-inside space-y-2\">\n                      <li>Your token will be created on the blockchain</li>\n                      <li>A liquidity pool will be automatically created</li>\n                      <li>You'll be prompted to add initial liquidity to enable trading</li>\n                    </ol>\n                  </div>\n\n                  <div className=\"bg-[#00ffbd]/10 p-4 rounded-lg\">\n                    <p className=\"text-sm text-gray-700 dark:text-gray-300\">\n                      <span className=\"font-medium\">Important:</span> After your token is created, you'll need to add liquidity to enable trading. Make sure you have enough {chain?.nativeCurrency?.symbol || 'ETH'} for gas fees and initial liquidity.\n                    </p>\n                  </div>\n\n                  <div className=\"flex justify-end gap-4 mt-6\">\n                    <button\n                      onClick={onClose}\n                      className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      onClick={onConfirm}\n                      className=\"px-6 py-2 text-sm font-medium rounded-lg bg-[#00ffbd] text-black hover:bg-[#00e6a9] transition-colors\"\n                    >\n                      Let's Go! 🚀\n                    </button>\n                  </div>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\n// Add new form step components after the existing imports\nconst FormStep = ({ title, description, children, isActive }) => {\n  if (!isActive) return null;\n  return (\n    <div className=\"bg-white dark:bg-[#1a1b1f] rounded-xl p-8 shadow-lg border border-gray-200 dark:border-gray-800\">\n      <h2 className=\"text-2xl font-bold mb-2 text-gray-900 dark:text-white\">{title}</h2>\n      <p className=\"text-gray-600 dark:text-gray-400 mb-6\">{description}</p>\n          {children}\n    </div>\n  );\n};\n\n// Add InfoTooltip component\nconst InfoTooltip = ({ content }) => (\n  <div className=\"group relative inline-block ml-2\">\n    <FaInfoCircle className=\"w-4 h-4 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300\" />\n    <div className=\"invisible group-hover:visible absolute z-10 w-64 p-2 mt-2 text-sm text-gray-500 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\">\n      {content}\n    </div>\n  </div>\n);\n\nconst TokenCreationForm = ({ currentStep, formData, handleChange, handleToggle }) => {\n  const { chain } = useNetwork();\n  const dexInfo = chain?.id ? dexConfigs[chain.id] : null;\n\n  return (\n    <>\n      <FormStep\n        title=\"Essential Contract Details\"\n        description=\"Set up the basic information for your token\"\n        isActive={currentStep === 1}\n      >\n        <div className=\"space-y-6\">\n          {/* Existing name field */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Token Name\n              <InfoTooltip content=\"The name of your token. This will be displayed on DEXs and wallets.\" />\n            </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              className=\"w-full p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n              placeholder=\"e.g., Pepe Token\"\n            />\n          </div>\n\n          {/* Add DEX Information field */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              DEX Information\n              <InfoTooltip content=\"The decentralized exchange where your token's liquidity pool will be created.\" />\n            </label>\n            <div className=\"p-4 rounded-lg border dark:bg-gray-800 dark:border-gray-700\">\n              <div className=\"flex items-center gap-3\">\n                <img \n                  src={DEX_IMAGES[dexInfo?.name || 'QuickSwap']} \n                  alt={dexInfo?.name} \n                  className=\"w-6 h-6\"\n                />\n                <div>\n                  <p className=\"text-gray-900 dark:text-white font-medium\">\n                    {dexInfo?.name || 'Not Connected'}\n                  </p>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {dexInfo ? `Router: ${dexInfo.router.slice(0, 6)}...${dexInfo.router.slice(-4)}` : 'Please connect wallet and select network'}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Rest of the existing form fields */}\n          <div className=\"grid grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Token Symbol\n                <InfoTooltip content=\"A short identifier for your token (2-6 characters)\" />\n              </label>\n              <input\n                type=\"text\"\n                name=\"symbol\"\n                value={formData.symbol}\n                onChange={handleChange}\n                className=\"w-full p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                placeholder=\"e.g., PEPE\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Total Supply\n                <InfoTooltip content=\"The total number of tokens to create\" />\n              </label>\n              <input\n                type=\"number\"\n                name=\"totalSupply\"\n                value={formData.totalSupply}\n                onChange={handleChange}\n                className=\"w-full p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                placeholder=\"e.g., 1000000\"\n              />\n            </div>\n          </div>\n\n          <FeatureToggle\n            label=\"Custom Header Message\"\n            description=\"Add a custom ASCII art header to your contract\"\n            enabled={formData.enableCustomHeader}\n            onToggle={() => handleToggle('enableCustomHeader')}\n          >\n            <textarea\n              name=\"customHeader\"\n              value={formData.customHeader}\n              onChange={handleChange}\n              className=\"w-full p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white mt-4\"\n              placeholder=\"Enter your custom ASCII art header\"\n              rows={4}\n            />\n          </FeatureToggle>\n        </div>\n      </FormStep>\n\n      <FormStep\n        title=\"Fee Configuration\"\n        description=\"Configure buy/sell fees and fee distribution\"\n        isActive={currentStep === 2}\n      >\n        <div className=\"space-y-6\">\n          {/* Buy/Sell Fees Section */}\n          <div className=\"bg-gray-50 dark:bg-gray-800 rounded-xl p-6 mb-6\">\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Buy / Sell Fees</h3>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-6\">\n              These are the main fee switches. If both buy and sell fees are disabled, no fees will be collected regardless of other fee settings below. The fees collected here will be distributed according to the fee structure you define below.\n            </p>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {/* Buy Fee Toggle */}\n              <FeatureToggle\n                label=\"Buy Fee\"\n                description=\"Enable fee collection on buy transactions (enter percentage, e.g. 6 for 6%)\"\n                enabled={formData.buyFeesEnabled}\n                onToggle={() => handleToggle('buyFeesEnabled')}\n              >\n                {formData.buyFeesEnabled && (\n                  <div className=\"mt-4\">\n                    <div className=\"flex items-center gap-2\">\n                      <input\n                        type=\"number\"\n                        name=\"buyFees\"\n                        value={formData.buyFees}\n                        onChange={handleChange}\n                        className=\"flex-1 p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                        placeholder=\"Enter percentage (e.g. 6 for 6%)\"\n                      />\n                      <span className=\"text-gray-600 dark:text-gray-400\">%</span>\n                    </div>\n        </div>\n      )}\n              </FeatureToggle>\n\n              {/* Sell Fee Toggle */}\n              <FeatureToggle\n                label=\"Sell Fee\"\n                description=\"Enable fee collection on sell transactions (enter percentage, e.g. 6 for 6%)\"\n                enabled={formData.sellFeesEnabled}\n                onToggle={() => handleToggle('sellFeesEnabled')}\n              >\n                {formData.sellFeesEnabled && (\n                  <div className=\"mt-4\">\n                    <div className=\"flex items-center gap-2\">\n                      <input\n                        type=\"number\"\n                        name=\"sellFees\"\n                        value={formData.sellFees}\n                        onChange={handleChange}\n                        className=\"flex-1 p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                        placeholder=\"Enter percentage (e.g. 6 for 6%)\"\n                      />\n                      <span className=\"text-gray-600 dark:text-gray-400\">%</span>\n    </div>\n                  </div>\n                )}\n              </FeatureToggle>\n            </div>\n          </div>\n\n          {/* Fees Split Structure - Only show if either buy or sell fees are enabled */}\n          {(formData.buyFeesEnabled || formData.sellFeesEnabled) && (\n            <div className=\"bg-gray-50 dark:bg-gray-800 rounded-xl p-6\">\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Fees Split Structure</h3>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-6\">\n                This section controls how the collected buy/sell fees are distributed. For example, if you set a 5% buy fee above and enable a 60% dev fee and 40% marketing fee here, from that 5% buy fee, 60% of the collected tokens will go to the dev wallet and 40% to the marketing wallet after being swapped to ETH.\n              </p>\n\n              <div className=\"space-y-6\">\n                {/* Burn Fees - Replacing Tax Fees */}\n                <FeatureToggle\n                  label=\"Burn Fees\"\n                  description=\"Percentage of collected fees that will be permanently burned (enter percentage, e.g. 20 for 20%)\"\n                  enabled={formData.burnFee > 0}\n                  onToggle={() => handleToggle('burnFeeEnabled')}\n                >\n                  {formData.burnFee > 0 && (\n                    <div className=\"mt-4\">\n                      <div className=\"flex items-center gap-2\">\n                        <input\n                          type=\"number\"\n                          name=\"burnFee\"\n                          value={formData.burnFee}\n                          onChange={handleChange}\n                          className=\"flex-1 p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                          placeholder=\"Enter percentage (e.g. 20 for 20%)\"\n                        />\n                        <span className=\"text-gray-600 dark:text-gray-400\">%</span>\n                      </div>\n                    </div>\n                  )}\n                </FeatureToggle>\n\n                {/* Dev Fees */}\n                <FeatureToggle\n                  label=\"Dev Fees\"\n                  description=\"Percentage of collected fees sent to the Dev Wallet (enter percentage, e.g. 20 for 20%)\"\n                  enabled={formData.devFee > 0}\n                  onToggle={() => handleToggle('devFeeEnabled')}\n                >\n                  {formData.devFee > 0 && (\n                    <div className=\"mt-4 grid grid-cols-1 gap-4\">\n                      <div>\n                        <input\n                          type=\"text\"\n                          name=\"devAddress\"\n                          value={formData.devAddress}\n                          onChange={handleChange}\n                          className=\"w-full p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                          placeholder=\"Dev recipient address\"\n                        />\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <input\n                          type=\"number\"\n                          name=\"devFee\"\n                          value={formData.devFee}\n                          onChange={handleChange}\n                          className=\"w-32 p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                          placeholder=\"Enter percentage (e.g. 20 for 20%)\"\n                        />\n                        <span className=\"text-gray-600 dark:text-gray-400\">%</span>\n                      </div>\n                    </div>\n                  )}\n                </FeatureToggle>\n\n                {/* Marketing Fees */}\n                <FeatureToggle\n                  label=\"Marketing Fees\"\n                  description=\"Percentage of fees sent to the Marketing Wallet\"\n                  enabled={formData.marketingFee > 0}\n                  onToggle={() => handleToggle('marketingFeeEnabled')}\n                >\n                  {formData.marketingFee > 0 && (\n                    <div className=\"mt-4 grid grid-cols-1 gap-4\">\n                      <div>\n                        <input\n                          type=\"text\"\n                          name=\"marketingAddress\"\n                          value={formData.marketingAddress}\n                          onChange={handleChange}\n                          className=\"w-full p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                          placeholder=\"Marketing recipient address\"\n                        />\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <input\n                          type=\"number\"\n                          name=\"marketingFee\"\n                          value={formData.marketingFee}\n                          onChange={handleChange}\n                          className=\"w-32 p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                          placeholder=\"0\"\n                        />\n                        <span className=\"text-gray-600 dark:text-gray-400\">%</span>\n                      </div>\n                    </div>\n                  )}\n                </FeatureToggle>\n\n                {/* Liquidity Fees */}\n                <FeatureToggle\n                  label=\"Liquidity Fees\"\n                  description=\"Percentage of fees sent to the Liquidity Wallet\"\n                  enabled={formData.liquidityFee > 0}\n                  onToggle={() => handleToggle('liquidityFeeEnabled')}\n                >\n                  {formData.liquidityFee > 0 && (\n                    <div className=\"mt-4 grid grid-cols-1 gap-4\">\n                      <div>\n                        <input\n                          type=\"text\"\n                          name=\"liquidityAddress\"\n                          value={formData.liquidityAddress}\n                          onChange={handleChange}\n                          className=\"w-full p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                          placeholder=\"Liquidity recipient address\"\n                        />\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <input\n                          type=\"number\"\n                          name=\"liquidityFee\"\n                          value={formData.liquidityFee}\n                          onChange={handleChange}\n                          className=\"w-32 p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                          placeholder=\"0\"\n                        />\n                        <span className=\"text-gray-600 dark:text-gray-400\">%</span>\n                      </div>\n                    </div>\n                  )}\n                </FeatureToggle>\n\n                {/* Treasury Fees */}\n                <FeatureToggle\n                  label=\"Treasury Fees\"\n                  description=\"Percentage of fees sent to the Treasury Wallet\"\n                  enabled={formData.treasuryFee > 0}\n                  onToggle={() => handleToggle('treasuryFeeEnabled')}\n                >\n                  {formData.treasuryFee > 0 && (\n                    <div className=\"mt-4 grid grid-cols-1 gap-4\">\n                      <div>\n                        <input\n                          type=\"text\"\n                          name=\"treasuryAddress\"\n                          value={formData.treasuryAddress}\n                          onChange={handleChange}\n                          className=\"w-full p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                          placeholder=\"Treasury recipient address\"\n                        />\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <input\n                          type=\"number\"\n                          name=\"treasuryFee\"\n                          value={formData.treasuryFee}\n                          onChange={handleChange}\n                          className=\"w-32 p-3 rounded-lg border dark:bg-gray-800 dark:border-gray-700 text-gray-900 dark:text-white\"\n                          placeholder=\"0\"\n                        />\n                        <span className=\"text-gray-600 dark:text-gray-400\">%</span>\n                      </div>\n                    </div>\n                  )}\n                </FeatureToggle>\n              </div>\n            </div>\n          )}\n        </div>\n      </FormStep>\n\n      <FormStep\n        title=\"Advanced Settings\"\n        description=\"Configure additional token features\"\n        isActive={currentStep === 3}\n      >\n        <div className=\"space-y-6\">\n          <FeatureToggle\n            label=\"Blacklist\"\n            description=\"Enable address blacklisting functionality\"\n            enabled={formData.enableBlacklist}\n            onToggle={() => handleToggle('enableBlacklist')}\n          />\n\n          <FeatureToggle\n            label=\"Snapshot\"\n            description=\"Enable token balance snapshot functionality\"\n            enabled={formData.enableSnapshot}\n            onToggle={() => handleToggle('enableSnapshot')}\n          />\n        </div>\n      </FormStep>\n\n      <FormStep\n        title=\"Review & Deploy\"\n        description=\"Review your token configuration before deployment\"\n        isActive={currentStep === 4}\n      >\n        <div className=\"space-y-6\">\n          <div className=\"bg-gray-50 dark:bg-gray-800 rounded-xl p-6 border border-gray-200 dark:border-gray-700\">\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Token Creation Summary</h3>\n            \n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">Token Name</p>\n                  <p className=\"font-medium text-gray-900 dark:text-white\">{formData.name || '-'}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">Symbol</p>\n                  <p className=\"font-medium text-gray-900 dark:text-white\">{formData.symbol || '-'}</p>\n                </div>\n              </div>\n\n              <div>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Total Supply</p>\n                <p className=\"font-medium text-gray-900 dark:text-white\">{formData.totalSupply || '-'}</p>\n              </div>\n\n              <div>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Features Enabled</p>\n                <div className=\"mt-2 flex flex-wrap gap-2\">\n                  {formData.enableBlacklist && (\n                    <span className=\"px-2 py-1 text-xs font-medium bg-[#00ffbd]/10 text-[#00ffbd] rounded-full\">\n                      Blacklist\n                    </span>\n                  )}\n                  {formData.enableSnapshot && (\n                    <span className=\"px-2 py-1 text-xs font-medium bg-[#00ffbd]/10 text-[#00ffbd] rounded-full\">\n                      Snapshot\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Fee Configuration</p>\n                <div className=\"mt-2 space-y-2\">\n                  <p className=\"text-sm text-gray-900 dark:text-white\">\n                    Buy Fee: <span className=\"font-medium\">{formData.buyFees}%</span>\n                  </p>\n                  <p className=\"text-sm text-gray-900 dark:text-white\">\n                    Sell Fee: <span className=\"font-medium\">{formData.sellFees}%</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-yellow-50 dark:bg-yellow-900/20 rounded-xl p-6 border border-yellow-200 dark:border-yellow-900\">\n            <div className=\"flex items-start gap-3\">\n              <FaInfoCircle className=\"w-5 h-5 text-yellow-600 dark:text-yellow-500 mt-0.5\" />\n              <div>\n                <h4 className=\"text-sm font-medium text-yellow-800 dark:text-yellow-400\">Important Notice</h4>\n                <p className=\"mt-1 text-sm text-yellow-700 dark:text-yellow-300\">\n                  Please review all settings carefully before proceeding. Once deployed, the token contract cannot be modified.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </FormStep>\n    </>\n  );\n};\n\n// Update the validation function\nconst validateForm = () => {\n  const errors = [];\n  \n  // ... existing validations ...\n\n  // Validate swap threshold\n  if (formData.autoSwapEnabled) {\n    const swapThreshold = parseFloat(formData.swapTokensAtAmount);\n    if (isNaN(swapThreshold) || swapThreshold <= 0 || swapThreshold > 100) {\n      errors.push('Swap threshold must be between 0 and 100%');\n    }\n  }\n\n  // ... rest of validations ...\n\n  return errors;\n};","import React, { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\nimport AdminLayout from './components/admin/AdminLayout';\nimport AdminDashboard from './pages/admin/AdminDashboard';\nimport AdminSales from './pages/admin/AdminSales';\nimport StoreVerification from './pages/admin/StoreVerification';\nimport { Outlet } from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport Header from './components/Header';\nimport CreateTokenModal from './components/CreateTokenModal';\nimport CreateNFTModal from './components/CreateNFTModal';\nimport FAQ from './components/FAQ';\nimport { useTheme } from './context/ThemeContext';\nimport { wagmiConfig, chains } from './config/wagmi';\nimport { DeploymentsProvider } from './context/DeploymentsContext';\nimport { UniswapVersionProvider } from './context/UniswapVersionContext';\nimport { WagmiConfig } from 'wagmi';\nimport { MerchAuthProvider } from './context/MerchAuthContext';\nimport { RainbowKitProvider, darkTheme, lightTheme } from '@rainbow-me/rainbowkit';\nimport '@rainbow-me/rainbowkit/styles.css';\nimport Dashboard from './components/Dashboard';\nimport CollectionsList from './components/CollectionsList';\nimport CollectionPage from './components/CollectionPage';\nimport HistoryPage from './pages/HistoryPage';\nimport AccountPage from './pages/AccountPage';\nimport ActivityPage from './pages/ActivityPage';\nimport BridgePage from './pages/bridge';\nimport FeesTracker from './pages/FeesTracker';\nimport MemeFactory from './pages/MemeFactory';\n\nfunction App() {\n  const { isDarkMode } = useTheme();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isNFTModalOpen, setIsNFTModalOpen] = useState(false);\n  const [isFAQOpen, setIsFAQOpen] = useState(false);\n  const [isProviderLoading, setIsProviderLoading] = useState(true);\n\n  useEffect(() => {\n    const checkProvider = () => {\n      if (window.ethereum?.request) {\n        setIsProviderLoading(false);\n      }\n    };\n\n    // Check immediately\n    checkProvider();\n\n    // Set up interval to check for provider\n    const interval = setInterval(checkProvider, 500);\n\n    // Clear interval after 10 seconds to prevent infinite checking\n    const timeout = setTimeout(() => {\n      clearInterval(interval);\n      setIsProviderLoading(false);\n    }, 10000);\n\n    return () => {\n      clearInterval(interval);\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  if (isProviderLoading) {\n    return (\n      <div className=\"min-h-screen bg-white dark:bg-[#0a0b0f] flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-[#00ffbd] border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading Web3 Provider...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <DeploymentsProvider>\n      <WagmiConfig config={wagmiConfig}>\n        <RainbowKitProvider\n          chains={chains}\n          theme={isDarkMode ? darkTheme({\n            accentColor: '#00ffbd',\n            accentColorForeground: 'black',\n            borderRadius: 'large',\n            fontStack: 'system',\n            overlayBlur: 'small',\n          }) : lightTheme({\n            accentColor: '#00ffbd',\n            accentColorForeground: 'black',\n            borderRadius: 'large',\n            fontStack: 'system',\n            overlayBlur: 'small',\n          })}\n          modalSize=\"wide\"\n          showRecentTransactions={true}\n          appInfo={{\n            appName: 'Token Factory',\n          }}\n        >\n          <UniswapVersionProvider>\n            <div className=\"min-h-screen bg-white dark:bg-[#0a0b0f]\">\n              <Toaster position=\"top-right\" />\n              <div className=\"flex\">\n                <Sidebar \n                  onOpenModal={() => setIsModalOpen(true)}\n                  onOpenNFTModal={() => setIsNFTModalOpen(true)}\n                />\n                <div className=\"flex-1 bg-white dark:bg-[#0a0b0f]\">\n                  <Header />\n                  <Routes>\n                    <Route path=\"/\" element={<Dashboard />} />\n                    <Route path=\"/collections\" element={<CollectionsList />} />\n                    <Route path=\"/collection/:symbol\" element={<CollectionPage />} />\n                    <Route path=\"/history\" element={<HistoryPage />} />\n                    <Route path=\"/account\" element={<AccountPage />} />\n                    <Route path=\"/bridge\" element={<BridgePage />} />\n                    <Route path=\"/feestracker\" element={<FeesTracker />} />\n                    <Route path=\"/memefactory\" element={<MemeFactory />} />\n                    <Route path=\"/trading\" element={<ActivityPage />} />\n                    {/* Admin Routes */}\n                    <Route path=\"/admin\" element={<AdminLayout />}>\n                      <Route index element={<AdminDashboard />} />\n                      <Route path=\"sales\" element={<AdminSales />} />\n                      <Route path=\"store-verification\" element={<StoreVerification />} />\n                    </Route>\n                  </Routes>\n                </div>\n              </div>\n\n              <CreateTokenModal \n                isOpen={isModalOpen} \n                onClose={() => setIsModalOpen(false)} \n              />\n              <CreateNFTModal \n                isOpen={isNFTModalOpen}\n                onClose={() => setIsNFTModalOpen(false)}\n              />\n              <FAQ \n                isOpen={isFAQOpen}\n                onClose={() => setIsFAQOpen(false)}\n              />\n            </div>\n          </UniswapVersionProvider>\n        </RainbowKitProvider>\n      </WagmiConfig>\n    </DeploymentsProvider>\n  );\n}\n\nexport default App;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { FcGoogle } from 'react-icons/fc';\r\nimport { FiEye, FiEyeOff } from 'react-icons/fi';\r\nimport { motion } from 'framer-motion';\r\nimport { useMerchAuth } from '../../context/MerchAuthContext';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useTheme } from '../../context/ThemeContext';\r\n\r\nexport default function Login() {\r\n  const { isDarkMode } = useTheme();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { login, loginWithGoogle } = useMerchAuth();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    // If we have state from signup, pre-fill the email\r\n    if (location.state?.email) {\r\n      setEmail(location.state.email);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await login(email, password);\r\n      toast.success('Welcome back!');\r\n      navigate('/merch-store');\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      await loginWithGoogle();\r\n      toast.success('Welcome!');\r\n      navigate('/merch-store');\r\n    } catch (error) {\r\n      if (error.message !== 'Sign in cancelled') {\r\n        toast.error(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-[#FFF5F7]'} flex items-center justify-center p-4`}>\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        className={`max-w-md w-full space-y-8 ${isDarkMode ? 'bg-gray-800' : 'bg-white'} p-8 rounded-2xl shadow-xl`}\r\n      >\r\n        <div className=\"text-center\">\r\n          <h2 className={`text-3xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>Welcome back</h2>\r\n          <p className={`mt-2 text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\r\n            Don't have an account?{' '}\r\n            <Link to=\"/merch-store/signup\" className=\"text-[#FF1B6B] hover:text-[#D4145A] font-medium\">\r\n              Sign up\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        {location.state?.message && (\r\n          <div className={`${isDarkMode ? 'bg-green-900 border-green-800' : 'bg-green-50 border-green-100'} border rounded-lg p-4`}>\r\n            <p className={`text-sm ${isDarkMode ? 'text-green-100' : 'text-green-800'}`}>{location.state.message}</p>\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"mt-8 space-y-6\">\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"email\" className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\r\n                Email address\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                required\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className={`mt-1 block w-full px-3 py-2 border ${isDarkMode ? 'border-gray-600 bg-gray-700 text-white placeholder-gray-400' : 'border-gray-300 text-gray-900 placeholder-gray-500'} rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors`}\r\n                placeholder=\"Enter your email\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\r\n                Password\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  required\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className={`mt-1 block w-full px-3 py-2 border ${isDarkMode ? 'border-gray-600 bg-gray-700 text-white placeholder-gray-400' : 'border-gray-300 text-gray-900 placeholder-gray-500'} rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors pr-10`}\r\n                  placeholder=\"Enter your password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className={`absolute inset-y-0 right-0 mt-1 pr-3 flex items-center ${isDarkMode ? 'text-gray-400 hover:text-gray-300' : 'text-gray-400 hover:text-gray-600'}`}\r\n                >\r\n                  {showPassword ? <FiEyeOff className=\"w-5 h-5\" /> : <FiEye className=\"w-5 h-5\" />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember-me\"\r\n                name=\"remember-me\"\r\n                type=\"checkbox\"\r\n                className=\"h-4 w-4 text-[#FF1B6B] focus:ring-[#FF1B6B] border-gray-300 rounded\"\r\n              />\r\n              <label htmlFor=\"remember-me\" className={`ml-2 block text-sm ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\r\n                Remember me\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"text-sm\">\r\n              <Link to=\"/merch-store/forgot-password\" className=\"font-medium text-[#FF1B6B] hover:text-[#D4145A]\">\r\n                Forgot your password?\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-[#FF1B6B] hover:bg-[#D4145A] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n            >\r\n              {isLoading ? 'Signing in...' : 'Sign in'}\r\n            </button>\r\n\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-0 flex items-center\">\r\n                <div className={`w-full border-t ${isDarkMode ? 'border-gray-600' : 'border-gray-300'}`}></div>\r\n              </div>\r\n              <div className=\"relative flex justify-center text-sm\">\r\n                <span className={`px-2 ${isDarkMode ? 'bg-gray-800 text-gray-400' : 'bg-white text-gray-500'}`}>Or continue with</span>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleGoogleLogin}\r\n              className={`w-full flex items-center justify-center gap-3 py-3 px-4 border ${isDarkMode ? 'border-gray-600 bg-gray-700 hover:bg-gray-600' : 'border-gray-300 bg-white hover:bg-gray-50'} rounded-lg shadow-sm text-sm font-medium ${isDarkMode ? 'text-white' : 'text-gray-700'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] transition-colors`}\r\n            >\r\n              <FcGoogle className=\"w-5 h-5\" />\r\n              Google\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n} ","import React, { useState } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { FcGoogle } from 'react-icons/fc';\r\nimport { FiEye, FiEyeOff, FiCheck } from 'react-icons/fi';\r\nimport { motion } from 'framer-motion';\r\nimport { useMerchAuth } from '../../context/MerchAuthContext';\r\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\r\nimport { db } from '../../firebase/merchConfig';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useTheme } from '../../context/ThemeContext';\r\n\r\nexport default function Signup() {\r\n  const { isDarkMode } = useTheme();\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isGoogleLoading, setIsGoogleLoading] = useState(false);\r\n  const { signup, loginWithGoogle } = useMerchAuth();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Password validation regex\r\n  const passwordRegex = {\r\n    length: /.{6,}/,\r\n    uppercase: /[A-Z]/,\r\n    lowercase: /[a-z]/,\r\n    number: /[0-9]/,\r\n    special: /[!@#$%^&*]/\r\n  };\r\n\r\n  // Check password requirements\r\n  const passwordChecks = {\r\n    length: passwordRegex.length.test(formData.password),\r\n    uppercase: passwordRegex.uppercase.test(formData.password),\r\n    lowercase: passwordRegex.lowercase.test(formData.password),\r\n    number: passwordRegex.number.test(formData.password),\r\n    special: passwordRegex.special.test(formData.password)\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    \r\n    if (formData.password !== formData.confirmPassword) {\r\n      toast.error('Passwords do not match');\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Password validation\r\n    const passwordRegex = {\r\n      length: /.{6,}/,\r\n      uppercase: /[A-Z]/,\r\n      lowercase: /[a-z]/,\r\n      number: /[0-9]/,\r\n      special: /[!@#$%^&*]/\r\n    };\r\n\r\n    const validations = [\r\n      { test: passwordRegex.length, message: 'Password must be at least 6 characters long' },\r\n      { test: passwordRegex.uppercase, message: 'Password must include at least one uppercase letter' },\r\n      { test: passwordRegex.lowercase, message: 'Password must include at least one lowercase letter' },\r\n      { test: passwordRegex.number, message: 'Password must include at least one number' },\r\n      { test: passwordRegex.special, message: 'Password must include at least one special character' }\r\n    ];\r\n\r\n    for (const validation of validations) {\r\n      if (!validation.test.test(formData.password)) {\r\n        toast.error(validation.message);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      // Create user account using context's signup function\r\n      await signup(formData.email, formData.password, { \r\n        name: formData.name,\r\n        email: formData.email,\r\n        isBuyer: true,\r\n        shippingAddress: {\r\n          street: '',\r\n          city: '',\r\n          state: '',\r\n          country: '',\r\n          postalCode: ''\r\n        }\r\n      });\r\n\r\n      // Show success message and redirect\r\n      toast.success('Account created successfully! Please sign in.');\r\n      navigate('/merch-store/login', { \r\n        state: { \r\n          message: 'Account created successfully! Please sign in.',\r\n          email: formData.email\r\n        },\r\n        replace: true \r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Error signing up:', error);\r\n      toast.error(error.message || 'Failed to create account');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleSignup = async () => {\r\n    setIsGoogleLoading(true);\r\n    try {\r\n      const userCredential = await loginWithGoogle();\r\n      \r\n      // Check if this was a new signup or returning user\r\n      const userDoc = await getDoc(doc(db, 'users', userCredential.uid));\r\n      const isNewUser = userDoc.data().createdAt === new Date().toISOString();\r\n      \r\n      // Show appropriate success message\r\n      toast.success(isNewUser ? 'Account created successfully!' : 'Welcome back!');\r\n      \r\n      navigate('/merch-store', {\r\n        replace: true\r\n      });\r\n    } catch (error) {\r\n      setIsGoogleLoading(false);\r\n      if (error.message !== 'Sign in cancelled') {\r\n        toast.error(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  // If we're in a loading state, don't show the form\r\n  if (isGoogleLoading) {\r\n    return (\r\n      <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-[#FFF5F7]'} flex items-center justify-center p-4`}>\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          className=\"text-center\"\r\n        >\r\n          <div className=\"w-16 h-16 border-4 border-[#FF1B6B] border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\r\n          <p className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Setting up your account...</p>\r\n        </motion.div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-[#FFF5F7]'} flex items-center justify-center p-4`}>\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        className={`max-w-md w-full space-y-8 ${isDarkMode ? 'bg-gray-800' : 'bg-white'} p-8 rounded-2xl shadow-xl`}\r\n      >\r\n        <div className=\"text-center\">\r\n          <h2 className={`text-3xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>Create an account</h2>\r\n          <p className={`mt-2 text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\r\n            Already have an account?{' '}\r\n            <Link to=\"/merch-store/login\" className=\"text-[#FF1B6B] hover:text-[#D4145A] font-medium\">\r\n              Sign in\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"mt-8 space-y-6\">\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"name\" className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\r\n                Full Name\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                required\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                className={`mt-1 block w-full px-3 py-2 border ${isDarkMode ? 'border-gray-600 bg-gray-700 text-white placeholder-gray-400' : 'border-gray-300 text-gray-900 placeholder-gray-500'} rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-transparent`}\r\n                placeholder=\"Enter your full name\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"email\" className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\r\n                Email address\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                required\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                className={`mt-1 block w-full px-3 py-2 border ${isDarkMode ? 'border-gray-600 bg-gray-700 text-white placeholder-gray-400' : 'border-gray-300 text-gray-900 placeholder-gray-500'} rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-transparent`}\r\n                placeholder=\"Enter your email\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"password\" className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\r\n                Password\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  required\r\n                  value={formData.password}\r\n                  onChange={handleChange}\r\n                  className={`mt-1 block w-full px-3 py-2 border ${isDarkMode ? 'border-gray-600 bg-gray-700 text-white placeholder-gray-400' : 'border-gray-300 text-gray-900 placeholder-gray-500'} rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-transparent pr-10`}\r\n                  placeholder=\"Create a password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className={`absolute inset-y-0 right-0 mt-1 pr-3 flex items-center ${isDarkMode ? 'text-gray-400 hover:text-gray-300' : 'text-gray-400 hover:text-gray-600'}`}\r\n                >\r\n                  {showPassword ? <FiEyeOff className=\"w-5 h-5\" /> : <FiEye className=\"w-5 h-5\" />}\r\n                </button>\r\n              </div>\r\n              <div className=\"mt-2 space-y-1\">\r\n                <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'} font-medium`}>Password must include:</p>\r\n                <ul className=\"text-xs space-y-1 pl-1\">\r\n                  <li className={`flex items-center gap-2 ${passwordChecks.length ? 'text-green-500' : isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    {passwordChecks.length && <FiCheck className=\"w-4 h-4\" />}\r\n                    <span>At least 6 characters</span>\r\n                  </li>\r\n                  <li className={`flex items-center gap-2 ${passwordChecks.uppercase ? 'text-green-500' : isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    {passwordChecks.uppercase && <FiCheck className=\"w-4 h-4\" />}\r\n                    <span>At least one uppercase letter (A-Z)</span>\r\n                  </li>\r\n                  <li className={`flex items-center gap-2 ${passwordChecks.lowercase ? 'text-green-500' : isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    {passwordChecks.lowercase && <FiCheck className=\"w-4 h-4\" />}\r\n                    <span>At least one lowercase letter (a-z)</span>\r\n                  </li>\r\n                  <li className={`flex items-center gap-2 ${passwordChecks.number ? 'text-green-500' : isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    {passwordChecks.number && <FiCheck className=\"w-4 h-4\" />}\r\n                    <span>At least one number (0-9)</span>\r\n                  </li>\r\n                  <li className={`flex items-center gap-2 ${passwordChecks.special ? 'text-green-500' : isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    {passwordChecks.special && <FiCheck className=\"w-4 h-4\" />}\r\n                    <span>At least one special character (!@#$%^&*)</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\r\n                Confirm Password\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  type={showConfirmPassword ? \"text\" : \"password\"}\r\n                  required\r\n                  value={formData.confirmPassword}\r\n                  onChange={handleChange}\r\n                  className={`mt-1 block w-full px-3 py-2 border ${isDarkMode ? 'border-gray-600 bg-gray-700 text-white placeholder-gray-400' : 'border-gray-300 text-gray-900 placeholder-gray-500'} rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-transparent pr-10`}\r\n                  placeholder=\"Confirm your password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                  className={`absolute inset-y-0 right-0 mt-1 pr-3 flex items-center ${isDarkMode ? 'text-gray-400 hover:text-gray-300' : 'text-gray-400 hover:text-gray-600'}`}\r\n                >\r\n                  {showConfirmPassword ? <FiEyeOff className=\"w-5 h-5\" /> : <FiEye className=\"w-5 h-5\" />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-[#FF1B6B] hover:bg-[#D4145A] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n            >\r\n              {isLoading ? 'Creating account...' : 'Create account'}\r\n            </button>\r\n\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-0 flex items-center\">\r\n                <div className={`w-full border-t ${isDarkMode ? 'border-gray-600' : 'border-gray-300'}`}></div>\r\n              </div>\r\n              <div className=\"relative flex justify-center text-sm\">\r\n                <span className={`px-2 ${isDarkMode ? 'bg-gray-800 text-gray-400' : 'bg-white text-gray-500'}`}>Or continue with</span>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleGoogleSignup}\r\n              disabled={isGoogleLoading}\r\n              className={`w-full flex items-center justify-center gap-3 py-3 px-4 border ${isDarkMode ? 'border-gray-600 bg-gray-700 hover:bg-gray-600' : 'border-gray-300 bg-white hover:bg-gray-50'} rounded-lg shadow-sm text-sm font-medium ${isDarkMode ? 'text-white' : 'text-gray-700'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] transition-colors disabled:opacity-50 disabled:cursor-not-allowed`}\r\n            >\r\n              <FcGoogle className=\"w-5 h-5\" />\r\n              {isGoogleLoading ? 'Setting up account...' : 'Google'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        <p className={`text-xs text-center ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n          By creating an account, you agree to our{' '}\r\n          <Link to=\"/merch-store/terms\" className=\"text-[#FF1B6B] hover:text-[#D4145A]\">\r\n            Terms of Service\r\n          </Link>{' '}\r\n          and{' '}\r\n          <Link to=\"/merch-store/terms\" className=\"text-[#FF1B6B] hover:text-[#D4145A]\">\r\n            Privacy Policy\r\n          </Link>\r\n        </p>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { BiStore, BiCheckCircle, BiArrowBack } from 'react-icons/bi';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { doc, setDoc, updateDoc, serverTimestamp, getDoc } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport countryList from 'react-select-country-list';\nimport Select, { components } from 'react-select';\nimport ReactCountryFlag from 'react-country-flag';\nimport { useTheme } from '../../context/ThemeContext';\n\n// Add country calling codes data\nconst countryCallingCodes = {\n  AF: '+93',\n  AL: '+355',\n  DZ: '+213',\n  AS: '+1-684',\n  AD: '+376',\n  AO: '+244',\n  AI: '+1-264',\n  AQ: '+672',\n  AG: '+1-268',\n  AR: '+54',\n  AM: '+374',\n  AW: '+297',\n  AU: '+61',\n  AT: '+43',\n  AZ: '+994',\n  BS: '+1-242',\n  BH: '+973',\n  BD: '+880',\n  BB: '+1-246',\n  BY: '+375',\n  BE: '+32',\n  BZ: '+501',\n  BJ: '+229',\n  BM: '+1-441',\n  BT: '+975',\n  BO: '+591',\n  BA: '+387',\n  BW: '+267',\n  BR: '+55',\n  BN: '+673',\n  BG: '+359',\n  BF: '+226',\n  BI: '+257',\n  KH: '+855',\n  CM: '+237',\n  CA: '+1',\n  CV: '+238',\n  KY: '+1-345',\n  CF: '+236',\n  TD: '+235',\n  CL: '+56',\n  CN: '+86',\n  CO: '+57',\n  KM: '+269',\n  CG: '+242',\n  CD: '+243',\n  CK: '+682',\n  CR: '+506',\n  HR: '+385',\n  CU: '+53',\n  CY: '+357',\n  CZ: '+420',\n  DK: '+45',\n  DJ: '+253',\n  DM: '+1-767',\n  DO: '+1-809',\n  EC: '+593',\n  EG: '+20',\n  SV: '+503',\n  GQ: '+240',\n  ER: '+291',\n  EE: '+372',\n  ET: '+251',\n  FK: '+500',\n  FO: '+298',\n  FJ: '+679',\n  FI: '+358',\n  FR: '+33',\n  GF: '+594',\n  PF: '+689',\n  GA: '+241',\n  GM: '+220',\n  GE: '+995',\n  DE: '+49',\n  GH: '+233',\n  GI: '+350',\n  GR: '+30',\n  GL: '+299',\n  GD: '+1-473',\n  GP: '+590',\n  GU: '+1-671',\n  GT: '+502',\n  GN: '+224',\n  GW: '+245',\n  GY: '+592',\n  HT: '+509',\n  HN: '+504',\n  HK: '+852',\n  HU: '+36',\n  IS: '+354',\n  IN: '+91',\n  ID: '+62',\n  IR: '+98',\n  IQ: '+964',\n  IE: '+353',\n  IL: '+972',\n  IT: '+39',\n  JM: '+1-876',\n  JP: '+81',\n  JO: '+962',\n  KZ: '+7',\n  KE: '+254',\n  KI: '+686',\n  KP: '+850',\n  KR: '+82',\n  KW: '+965',\n  KG: '+996',\n  LA: '+856',\n  LV: '+371',\n  LB: '+961',\n  LS: '+266',\n  LR: '+231',\n  LY: '+218',\n  LI: '+423',\n  LT: '+370',\n  LU: '+352',\n  MO: '+853',\n  MK: '+389',\n  MG: '+261',\n  MW: '+265',\n  MY: '+60',\n  MV: '+960',\n  ML: '+223',\n  MT: '+356',\n  MH: '+692',\n  MQ: '+596',\n  MR: '+222',\n  MU: '+230',\n  YT: '+262',\n  MX: '+52',\n  FM: '+691',\n  MD: '+373',\n  MC: '+377',\n  MN: '+976',\n  ME: '+382',\n  MS: '+1-664',\n  MA: '+212',\n  MZ: '+258',\n  MM: '+95',\n  NA: '+264',\n  NR: '+674',\n  NP: '+977',\n  NL: '+31',\n  NC: '+687',\n  NZ: '+64',\n  NI: '+505',\n  NE: '+227',\n  NG: '+234',\n  NU: '+683',\n  NF: '+672',\n  MP: '+1-670',\n  NO: '+47',\n  OM: '+968',\n  PK: '+92',\n  PW: '+680',\n  PS: '+970',\n  PA: '+507',\n  PG: '+675',\n  PY: '+595',\n  PE: '+51',\n  PH: '+63',\n  PN: '+64',\n  PL: '+48',\n  PT: '+351',\n  PR: '+1-787',\n  QA: '+974',\n  RE: '+262',\n  RO: '+40',\n  RU: '+7',\n  RW: '+250',\n  BL: '+590',\n  SH: '+290',\n  KN: '+1-869',\n  LC: '+1-758',\n  MF: '+590',\n  PM: '+508',\n  VC: '+1-784',\n  WS: '+685',\n  SM: '+378',\n  ST: '+239',\n  SA: '+966',\n  SN: '+221',\n  RS: '+381',\n  SC: '+248',\n  SL: '+232',\n  SG: '+65',\n  SK: '+421',\n  SI: '+386',\n  SB: '+677',\n  SO: '+252',\n  ZA: '+27',\n  SS: '+211',\n  ES: '+34',\n  LK: '+94',\n  SD: '+249',\n  SR: '+597',\n  SJ: '+47',\n  SZ: '+268',\n  SE: '+46',\n  CH: '+41',\n  SY: '+963',\n  TW: '+886',\n  TJ: '+992',\n  TZ: '+255',\n  TH: '+66',\n  TL: '+670',\n  TG: '+228',\n  TK: '+690',\n  TO: '+676',\n  TT: '+1-868',\n  TN: '+216',\n  TR: '+90',\n  TM: '+993',\n  TC: '+1-649',\n  TV: '+688',\n  VI: '+1-340',\n  UG: '+256',\n  UA: '+380',\n  AE: '+971',\n  GB: '+44',\n  US: '+1',\n  UY: '+598',\n  UZ: '+998',\n  VU: '+678',\n  VA: '+379',\n  VE: '+58',\n  VN: '+84',\n  WF: '+681',\n  EH: '+212',\n  YE: '+967',\n  ZM: '+260',\n  ZW: '+263'\n};\n\nexport default function BecomeSeller() {\n  const navigate = useNavigate();\n  const { user } = useMerchAuth();\n  const { isDarkMode } = useTheme();\n  const [step, setStep] = useState(1);\n  const listingFee = 750.00;\n  const [isProcessing, setIsProcessing] = useState(false);\n  const countries = useMemo(() => countryList().getData(), []);\n  const [phonePlaceholder, setPhonePlaceholder] = useState('+233 XX XXX XXXX'); // Default to Ghana\n\n  const countryOptions = useMemo(() => \n    countries.map(country => ({\n      value: country.value,\n      label: (\n        <div className=\"flex items-center gap-2\">\n          <ReactCountryFlag \n            countryCode={country.value} \n            svg \n            style={{\n              width: '1.5em',\n              height: '1.5em',\n            }}\n          />\n          {country.label}\n        </div>\n      ),\n      searchLabel: country.label // For search functionality\n    })), \n    [countries]\n  );\n\n  const customStyles = {\n    control: (provided) => ({\n      ...provided,\n      padding: '2px',\n      borderColor: isDarkMode ? '#4B5563' : '#E5E7EB',\n      backgroundColor: isDarkMode ? '#374151' : 'white',\n      '&:hover': {\n        borderColor: '#FF1B6B'\n      }\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      backgroundColor: state.isSelected \n        ? '#FF1B6B' \n        : state.isFocused \n          ? isDarkMode ? '#4B5563' : '#FFE4E4' \n          : isDarkMode ? '#374151' : 'white',\n      color: state.isSelected \n        ? 'white' \n        : isDarkMode ? '#E5E7EB' : '#374151',\n      '&:hover': {\n        backgroundColor: state.isSelected ? '#FF1B6B' : isDarkMode ? '#4B5563' : '#FFE4E4',\n      }\n    }),\n    menu: (provided) => ({\n      ...provided,\n      backgroundColor: isDarkMode ? '#374151' : 'white',\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      color: isDarkMode ? '#E5E7EB' : '#374151',\n    }),\n    input: (provided) => ({\n      ...provided,\n      color: isDarkMode ? '#E5E7EB' : '#374151',\n    })\n  };\n\n  const [storeInfo, setStoreInfo] = useState({\n    storeName: '',\n    description: '',\n    contactEmail: user?.email || '',\n    phoneNumber: '',\n    country: {\n      name: '',\n      code: '',\n      flag: ''\n    },\n    city: '',\n    postalCode: '',\n    preferredToken: 'USDC',\n    preferredNetwork: 'polygon',\n    walletAddress: ''\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setStoreInfo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const generateSellerId = () => {\n    // Generate a seller ID with prefix SELL_ and random numbers\n    const randomNum = Math.floor(Math.random() * 100000);\n    return `SELL_${randomNum.toString().padStart(6, '0')}`;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setStep(3);\n  };\n\n  const handlePaymentSuccess = async (reference) => {\n    setIsProcessing(true);\n    try {\n      if (!user) {\n        toast.error('Please login first');\n        return;\n      }\n\n      // Generate a unique seller ID\n      const sellerId = generateSellerId();\n\n      // Create seller profile\n      await setDoc(doc(db, 'sellers', sellerId), {\n        sellerId,\n        userId: user.uid,\n        ...storeInfo,\n        status: 'active',\n        createdAt: serverTimestamp(),\n        statistics: {\n          totalSales: 0,\n          totalOrders: 0,\n          rating: 0\n        },\n        balance: {\n          available: 0,\n          pending: 0\n        },\n        paymentReference: reference\n      });\n\n      // Update user profile to mark as seller\n      await updateDoc(doc(db, 'users', user.uid), {\n        isSeller: true,\n        sellerId,\n        updatedAt: serverTimestamp()\n      });\n\n      // Reload user data to update the context\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      if (userDoc.exists()) {\n        window.location.href = '/merch-store/dashboard';\n      }\n\n      toast.success('Store created successfully!');\n    } catch (error) {\n      console.error('Error creating store:', error);\n      toast.error('Failed to create store. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const initializePayment = () => {\n    const handler = window.PaystackPop.setup({\n      key: import.meta.env.VITE_PAYSTACK_PUBLIC_KEY,\n      email: user?.email || storeInfo.contactEmail,\n      amount: listingFee * 100,\n      currency: 'GHS',\n      callback: (response) => handlePaymentSuccess(response.reference),\n      onClose: () => {\n        toast.error('Payment cancelled');\n      },\n    });\n    handler.openIframe();\n  };\n\n  useEffect(() => {\n    // Load Paystack script\n    const script = document.createElement('script');\n    script.src = 'https://js.paystack.co/v1/inline.js';\n    script.async = true;\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n\n  const handleCountryChange = (selectedOption) => {\n    setStoreInfo(prev => ({\n      ...prev,\n      country: {\n        name: selectedOption.searchLabel,\n        code: selectedOption.value,\n        flag: `https://flagcdn.com/${selectedOption.value.toLowerCase()}.svg`\n      }\n    }));\n\n    // Update phone placeholder based on country\n    const countryCode = countryCallingCodes[selectedOption.value] || '+233';\n    setPhonePlaceholder(`${countryCode} XX XXX XXXX`);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className={`max-w-2xl mx-auto ${isDarkMode ? 'bg-gray-900' : ''}`}\n    >\n      {/* Progress Steps */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-center space-x-4\">\n          <div className={`flex items-center ${step >= 1 ? 'text-[#FF1B6B]' : isDarkMode ? 'text-gray-500' : 'text-gray-400'}`}>\n            <div className={`w-8 h-8 rounded-full border-2 ${\n              step >= 1 \n                ? 'border-[#FF1B6B] bg-pink-900/20' \n                : isDarkMode ? 'border-gray-600' : 'border-gray-300'\n            } flex items-center justify-center font-semibold transition-colors duration-300`}>\n              1\n            </div>\n            <span className=\"ml-2\">Information</span>\n          </div>\n          <div className={`w-16 h-0.5 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'}`}>\n            <div \n              className=\"h-full bg-[#FF1B6B] transition-all duration-300\"\n              style={{ width: step > 1 ? '100%' : '0%' }}\n            />\n          </div>\n          <div className={`flex items-center ${step >= 2 ? 'text-[#FF1B6B]' : isDarkMode ? 'text-gray-500' : 'text-gray-400'}`}>\n            <div className={`w-8 h-8 rounded-full border-2 ${\n              step >= 2 \n                ? 'border-[#FF1B6B] bg-pink-900/20' \n                : isDarkMode ? 'border-gray-600' : 'border-gray-300'\n            } flex items-center justify-center font-semibold transition-colors duration-300`}>\n              2\n            </div>\n            <span className=\"ml-2\">Store Info</span>\n          </div>\n          <div className={`w-16 h-0.5 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'}`}>\n            <div \n              className=\"h-full bg-[#FF1B6B] transition-all duration-300\"\n              style={{ width: step > 2 ? '100%' : '0%' }}\n            />\n          </div>\n          <div className={`flex items-center ${step >= 3 ? 'text-[#FF1B6B]' : isDarkMode ? 'text-gray-500' : 'text-gray-400'}`}>\n            <div className={`w-8 h-8 rounded-full border-2 ${\n              step >= 3 \n                ? 'border-[#FF1B6B] bg-pink-900/20' \n                : isDarkMode ? 'border-gray-600' : 'border-gray-300'\n            } flex items-center justify-center font-semibold transition-colors duration-300`}>\n              3\n            </div>\n            <span className=\"ml-2\">Payment</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Step 1: Information */}\n      {step === 1 && (\n        <motion.div\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-2xl p-8 shadow-lg`}\n        >\n          <div className=\"text-center mb-8\">\n            <BiStore className=\"w-16 h-16 text-[#FF1B6B] mx-auto mb-4\" />\n            <h1 className={`text-2xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-2`}>\n              Become a Seller\n            </h1>\n            <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n              Start selling your merchandise with a one-time listing fee\n            </p>\n          </div>\n\n          <div className={`${isDarkMode ? 'bg-pink-900/20' : 'bg-pink-50'} rounded-lg p-6 mb-8`}>\n            <h2 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>\n              What's Included:\n            </h2>\n            <ul className=\"space-y-3\">\n              {[\n                'List unlimited products',\n                'Manage your orders easily',\n                'Secure payment processing',\n                'Direct customer communication',\n                'Flexible withdrawal options'\n              ].map((benefit, index) => (\n                <li key={index} className={`flex items-center ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                  <BiCheckCircle className=\"w-5 h-5 text-[#FF1B6B] mr-2\" />\n                  {benefit}\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"text-center mb-8\">\n            <div className={`text-3xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-1`}>\n              GHS {listingFee.toFixed(2)}\n              <span className={`text-sm font-normal ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} ml-1`}>\n                one-time fee\n              </span>\n            </div>\n          </div>\n\n          <button\n            onClick={() => setStep(2)}\n            className=\"w-full bg-[#FF1B6B] text-white py-3 px-6 rounded-lg font-medium hover:bg-[#D4145A] transition-colors duration-300\"\n          >\n            Next: Store Details\n          </button>\n\n          <div className=\"text-center mt-4\">\n            <div className={`flex items-center justify-center text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n              <span>Secure payment powered by</span>\n              <img \n                src=\"/paystack.png\" \n                alt=\"Paystack\" \n                className=\"h-8 w-auto object-contain ml-2\" \n              />\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Step 2: Store Info */}\n      {step === 2 && (\n        <motion.div\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-2xl p-8 shadow-lg`}\n        >\n          <button\n            onClick={() => setStep(1)}\n            className={`flex items-center ${\n              isDarkMode \n                ? 'text-gray-400 hover:text-[#FF1B6B]' \n                : 'text-gray-600 hover:text-[#FF1B6B]'\n            } mb-6 transition-colors`}\n          >\n            <BiArrowBack className=\"w-5 h-5 mr-2\" />\n            Back\n          </button>\n\n          <div className=\"text-center mb-8\">\n            <h2 className={`text-2xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Store Information</h2>\n            <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>Tell us about your business</p>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Store Details */}\n            <div className=\"space-y-4\">\n              <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Store Details</h3>\n              \n              <div>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                  Store Name *\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"storeName\"\n                  value={storeInfo.storeName}\n                  onChange={handleInputChange}\n                  required\n                  className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                    isDarkMode \n                      ? 'bg-gray-700 border-gray-600 text-gray-200 placeholder-gray-400' \n                      : 'border-gray-300 text-gray-900 placeholder-gray-500'\n                  }`}\n                  placeholder=\"Your store name\"\n                />\n              </div>\n\n              <div>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                  Description\n                </label>\n                <textarea\n                  name=\"description\"\n                  value={storeInfo.description}\n                  onChange={handleInputChange}\n                  rows={3}\n                  className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                    isDarkMode \n                      ? 'bg-gray-700 border-gray-600 text-gray-200 placeholder-gray-400' \n                      : 'border-gray-300 text-gray-900 placeholder-gray-500'\n                  }`}\n                  placeholder=\"Tell customers about your store\"\n                />\n              </div>\n            </div>\n\n            {/* Contact Information */}\n            <div className=\"space-y-4\">\n              <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Contact Information</h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                    Email *\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"contactEmail\"\n                    value={storeInfo.contactEmail}\n                    onChange={handleInputChange}\n                    required\n                    className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                      isDarkMode \n                        ? 'bg-gray-700 border-gray-600 text-gray-200 placeholder-gray-400' \n                        : 'border-gray-300 text-gray-900 placeholder-gray-500'\n                    }`}\n                    placeholder=\"contact@yourstore.com\"\n                  />\n                </div>\n\n                <div>\n                  <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                    Phone Number *\n                  </label>\n                  <input\n                    type=\"tel\"\n                    name=\"phoneNumber\"\n                    value={storeInfo.phoneNumber}\n                    onChange={handleInputChange}\n                    required\n                    className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                      isDarkMode \n                        ? 'bg-gray-700 border-gray-600 text-gray-200 placeholder-gray-400' \n                        : 'border-gray-300 text-gray-900 placeholder-gray-500'\n                    }`}\n                    placeholder={phonePlaceholder}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Location */}\n            <div className=\"space-y-4\">\n              <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Location</h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                    Country *\n                  </label>\n                  <Select\n                    options={countryOptions}\n                    styles={customStyles}\n                    onChange={handleCountryChange}\n                    required\n                    placeholder=\"select\"\n                    className=\"country-select\"\n                    value={storeInfo.country.code ? countryOptions.find(option => option.value === storeInfo.country.code) : null}\n                    components={{\n                      Option: ({ children, ...props }) => (\n                        <components.Option {...props}>\n                          {props.data.label}\n                        </components.Option>\n                      )\n                    }}\n                  />\n                </div>\n\n                <div>\n                  <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                    City *\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"city\"\n                    value={storeInfo.city}\n                    onChange={handleInputChange}\n                    required\n                    className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                      isDarkMode \n                        ? 'bg-gray-700 border-gray-600 text-gray-200 placeholder-gray-400' \n                        : 'border-gray-300 text-gray-900 placeholder-gray-500'\n                    }`}\n                    placeholder=\"Your city\"\n                  />\n                </div>\n\n                <div>\n                  <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                    Postal Code *\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"postalCode\"\n                    value={storeInfo.postalCode}\n                    onChange={handleInputChange}\n                    required\n                    className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                      isDarkMode \n                        ? 'bg-gray-700 border-gray-600 text-gray-200 placeholder-gray-400' \n                        : 'border-gray-300 text-gray-900 placeholder-gray-500'\n                    }`}\n                    placeholder=\"Postal code\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Payment Settings</h3>\n              \n              <div>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                  Preferred Network *\n                </label>\n                <div className=\"grid grid-cols-2 gap-4 mb-2\">\n                  {[\n                    { id: 'polygon', name: 'Polygon', logo: '/polygon.png' },\n                    { id: 'unichain', name: 'Unichain Testnet', logo: '/unichain-logo.png' }\n                  ].map(network => (\n                    <button\n                      key={network.id}\n                      type=\"button\"\n                      onClick={() => handleInputChange({ target: { name: 'preferredNetwork', value: network.id } })}\n                      className={`p-4 border rounded-lg transition-colors flex items-center justify-center gap-2 ${\n                        storeInfo.preferredNetwork === network.id \n                          ? isDarkMode \n                            ? 'border-[#FF1B6B] bg-pink-900/20' \n                            : 'border-[#FF1B6B] bg-pink-50'\n                          : isDarkMode\n                            ? 'border-gray-600 hover:border-[#FF1B6B] bg-gray-700'\n                            : 'border-gray-200 hover:border-[#FF1B6B]'\n                      }`}\n                    >\n                      <img \n                        src={network.logo}\n                        alt={`${network.name} logo`}\n                        className=\"w-6 h-6\"\n                      />\n                      <span className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>{network.name}</span>\n                    </button>\n                  ))}\n                </div>\n                <div className=\"mt-1 text-sm\">\n                  <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Network you want to operate your store on</p>\n                  <p className=\"text-amber-600 font-medium mt-1\">\n                    ⚠️ This selection cannot be changed after store creation\n                  </p>\n                </div>\n              </div>\n\n              <div>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                  Preferred Payment Token *\n                </label>\n                <div className=\"relative\">\n                  <select\n                    name=\"preferredToken\"\n                    value={storeInfo.preferredToken}\n                    onChange={handleInputChange}\n                    required\n                    className={`w-full pl-12 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors appearance-none ${\n                      isDarkMode \n                        ? 'bg-gray-700 border-gray-600 text-gray-200' \n                        : 'border-gray-300 text-gray-900'\n                    }`}\n                  >\n                    <option value=\"USDC\">USDC (USD Coin)</option>\n                    <option value=\"USDT\">USDT (Tether)</option>\n                  </select>\n                  <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2\">\n                    <img \n                      src={`/${storeInfo.preferredToken.toLowerCase()}.png`}\n                      alt={storeInfo.preferredToken}\n                      className=\"w-6 h-6\"\n                    />\n                  </div>\n                </div>\n                <div className=\"mt-1 text-sm\">\n                  <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Token you want to receive payments in</p>\n                  <p className=\"text-amber-600 font-medium mt-1\">\n                    ⚠️ This selection cannot be changed after store creation\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"pt-6\">\n              <button\n                type=\"submit\"\n                className={`w-full bg-[#FF1B6B] text-white py-3 px-6 rounded-lg font-medium hover:bg-[#D4145A] transition-colors duration-300 disabled:opacity-50 disabled:cursor-not-allowed ${\n                  isDarkMode ? 'disabled:bg-gray-700 disabled:text-gray-500' : 'disabled:bg-gray-200 disabled:text-gray-500'\n                }`}\n                disabled={isProcessing}\n              >\n                {isProcessing ? 'Processing...' : 'Next: Proceed to Payment'}\n              </button>\n            </div>\n          </form>\n        </motion.div>\n      )}\n\n      {/* Step 3: Payment */}\n      {step === 3 && (\n        <motion.div\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-2xl p-8 shadow-lg`}\n        >\n          <button\n            onClick={() => setStep(2)}\n            className={`flex items-center ${\n              isDarkMode \n                ? 'text-gray-400 hover:text-[#FF1B6B]' \n                : 'text-gray-600 hover:text-[#FF1B6B]'\n            } mb-6 transition-colors`}\n          >\n            <BiArrowBack className=\"w-5 h-5 mr-2\" />\n            Back to Store Info\n          </button>\n\n          <div className=\"text-center mb-8\">\n            <h2 className={`text-2xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Complete Payment</h2>\n            <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>Pay the one-time listing fee to activate your store</p>\n          </div>\n\n          <div className=\"space-y-6\">\n            <div className={`${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'} rounded-lg p-6`}>\n              <div className=\"flex justify-between items-center mb-4\">\n                <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Listing Fee</span>\n                <span className={`font-semibold ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>GHS {listingFee}</span>\n              </div>\n              <div className={`border-t ${isDarkMode ? 'border-gray-600' : 'border-gray-200'} pt-4`}>\n                <div className=\"flex justify-between items-center\">\n                  <span className={`font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>Total</span>\n                  <span className={`font-bold text-xl ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>GHS {listingFee}</span>\n                </div>\n              </div>\n            </div>\n\n            <button\n              onClick={initializePayment}\n              className={`w-full bg-[#FF1B6B] text-white py-3 px-6 rounded-lg font-medium hover:bg-[#D4145A] transition-colors duration-300 disabled:opacity-50 disabled:cursor-not-allowed ${\n                isDarkMode ? 'disabled:bg-gray-700 disabled:text-gray-500' : 'disabled:bg-gray-200 disabled:text-gray-500'\n              }`}\n              disabled={isProcessing}\n            >\n              {isProcessing ? 'Processing...' : 'Pay Now'}\n            </button>\n\n            <div className=\"text-center mt-4\">\n              <div className={`flex items-center justify-center text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                <span>Secure payment powered by</span>\n                <img \n                  src=\"/paystack.png\" \n                  alt=\"Paystack\" \n                  className=\"h-8 w-auto object-contain ml-2\" \n                />\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </motion.div>\n  );\n} ","import { Navigate } from 'react-router-dom';\r\nimport { useMerchAuth } from '../../context/MerchAuthContext';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport default function ProtectedRoute({ children }) {\r\n  const { user, loading } = useMerchAuth();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-[#FFF5F7] flex items-center justify-center\">\r\n        <motion.div\r\n          animate={{\r\n            scale: [1, 1.2, 1],\r\n            opacity: [1, 0.8, 1],\r\n          }}\r\n          transition={{\r\n            duration: 1,\r\n            repeat: Infinity,\r\n            ease: \"easeInOut\"\r\n          }}\r\n          className=\"w-12 h-12 rounded-full border-4 border-[#FF1B6B] border-t-transparent\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return children;\r\n} ","import React, { useState, useEffect } from 'react';\nimport { Outlet, Link, NavLink, useNavigate, useLocation } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { BiStore, BiArrowBack, BiLogOut, BiHomeAlt, BiPackage, BiCart, BiCog, BiDollarCircle, BiListPlus, BiHistory, BiUser, BiMenu, BiX, BiRefresh, BiShield, BiMessageDetail } from 'react-icons/bi';\nimport { FiSun, FiMoon } from 'react-icons/fi';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { getDoc, doc, collection, query, where, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport VerificationCheckmark from '../../components/shared/VerificationCheckmark';\n\nconst MerchStoreLayout = () => {\n  const { logout, user, cartCount } = useMerchAuth();\n  const { isDarkMode, toggleTheme } = useTheme();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [seller, setSeller] = useState(null);\n  const [unreadMessages, setUnreadMessages] = useState(0);\n\n  useEffect(() => {\n    if (user?.sellerId) {\n      const fetchSeller = async () => {\n        const sellerDoc = await getDoc(doc(db, 'sellers', user.sellerId));\n        if (sellerDoc.exists()) {\n          const sellerData = sellerDoc.data();\n          setSeller({\n            ...sellerData,\n            isVerified: sellerData.verificationStatus === 'approved'\n          });\n        }\n      };\n      fetchSeller();\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (!user) return;\n\n    // Listen to conversations for unread messages\n    const q = query(\n      collection(db, 'conversations'),\n      where('participants', 'array-contains', user.isSeller ? user.sellerId : user.uid)\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const totalUnread = snapshot.docs.reduce((total, doc) => {\n        const data = doc.data();\n        const userId = user.isSeller ? user.sellerId : user.uid;\n        return total + (data.unreadCount?.[userId] || 0);\n      }, 0);\n      setUnreadMessages(totalUnread);\n    });\n\n    return () => unsubscribe();\n  }, [user]);\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      toast.error('Failed to logout');\n    }\n  };\n\n  const isLinkActive = (path) => {\n    return location.pathname === path;\n  };\n\n  // Navigation items based on user type\n  const buyerNavItems = [\n    { to: '/merch-store', icon: BiHomeAlt, label: 'Browse', exact: true },\n    { to: '/merch-store/cart', icon: BiCart, label: 'Cart', count: cartCount },\n    { to: '/merch-store/orders', icon: BiPackage, label: 'My Orders' },\n    { to: '/merch-store/my-refunds', icon: BiRefresh, label: 'My Refunds' },\n    { to: '/merch-store/inbox', icon: BiMessageDetail, label: 'Inbox', count: unreadMessages },\n    { to: '/merch-store/settings', icon: BiCog, label: 'Settings' },\n  ];\n\n  const sellerNavItems = [\n    { to: '/merch-store/dashboard', icon: BiHomeAlt, label: 'Dashboard' },\n    { to: '/merch-store/products', icon: BiStore, label: 'My Products' },\n    { to: '/merch-store/add-product', icon: BiListPlus, label: 'Add Product' },\n    { to: '/merch-store/sales', icon: BiDollarCircle, label: 'Sales' },\n    { to: '/merch-store/orders-received', icon: BiHistory, label: 'Orders' },\n    { to: '/merch-store/refunds', icon: BiRefresh, label: 'Buyers Refunds' },\n    { to: '/merch-store/seller/inbox', icon: BiMessageDetail, label: 'Inbox', count: unreadMessages },\n    { to: '/merch-store/settings', icon: BiCog, label: 'Settings' },\n  ];\n\n  // Common navigation items (shown to both buyers and sellers)\n  const commonNavItems = [\n    { to: '/merch-store/terms', icon: BiShield, label: 'Terms & Conditions' }\n  ];\n\n  const navItems = [...(user?.isSeller ? sellerNavItems : buyerNavItems), ...commonNavItems];\n\n  return (\n    <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-white'}`}>\n      <Toaster\n        position=\"top-right\"\n        toastOptions={{\n          duration: 3000,\n          style: {\n            background: isDarkMode ? '#1F2937' : '#333',\n            color: '#fff',\n          },\n          success: {\n            iconTheme: {\n              primary: '#FF1B6B',\n              secondary: '#fff',\n            },\n          },\n        }}\n      />\n\n      {/* Top Navigation */}\n      <nav className={`fixed top-0 right-0 left-0 ${isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'} shadow-sm z-50 border-b`}>\n        <div className=\"w-full px-0\">\n          <div className=\"flex items-center justify-between h-16\">\n            {/* Left side */}\n            <div className=\"flex items-center pl-4\">\n              {user && (\n                <button\n                  onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n                  className={`lg:hidden p-2 ${isDarkMode ? 'text-gray-400 hover:text-[#FF1B6B]' : 'text-gray-600 hover:text-[#FF1B6B]'} mr-2`}\n                >\n                  {isMobileMenuOpen ? (\n                    <BiX className=\"w-6 h-6\" />\n                  ) : (\n                    <BiMenu className=\"w-6 h-6\" />\n                  )}\n                </button>\n              )}\n              <Link to=\"/merch-store\" className=\"flex items-center gap-2\">\n                <BiStore className=\"w-8 h-8 text-[#FF1B6B]\" />\n                <span className=\"text-xl font-bold text-[#FF1B6B] hidden sm:inline\">\n                  MerchStore\n                </span>\n              </Link>\n              <div className=\"ml-4 px-3 py-1 bg-red-100 border border-red-200 rounded-full\">\n                <span className=\"text-xs font-medium text-red-600\">Development Mode - No Real Transactions</span>\n              </div>\n            </div>\n\n            {/* Right side */}\n            <motion.div\n              className=\"flex items-center gap-2 sm:gap-4 pr-4\"\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.2 }}\n            >\n              {/* Theme Toggle Button */}\n              <button\n                onClick={toggleTheme}\n                className={`p-2 rounded-lg transition-colors ${\n                  isDarkMode\n                    ? 'bg-gray-700 text-yellow-400 hover:bg-gray-600'\n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                }`}\n                aria-label=\"Toggle theme\"\n              >\n                {isDarkMode ? <FiSun className=\"w-5 h-5\" /> : <FiMoon className=\"w-5 h-5\" />}\n              </button>\n\n              {user ? (\n                <>\n                  {!user.isSeller && (\n                    <Link\n                      to=\"/merch-store/become-seller\"\n                      className=\"hidden sm:flex items-center gap-2 px-4 py-2 rounded-full border-2 border-[#FF1B6B] text-[#FF1B6B] hover:bg-[#FF1B6B] hover:text-white transition-all duration-300\"\n                    >\n                      Become a Seller\n                    </Link>\n                  )}\n                </>\n              ) : (\n                <div className=\"flex items-center gap-2 sm:gap-4\">\n                  <Link\n                    to=\"/merch-store/login\"\n                    className={`px-3 sm:px-4 py-2 ${isDarkMode ? 'text-gray-300 hover:text-[#FF1B6B]' : 'text-[#FF1B6B] hover:text-[#D4145A]'} transition-colors text-sm sm:text-base`}\n                  >\n                    Login\n                  </Link>\n                  <Link\n                    to=\"/merch-store/signup\"\n                    className=\"px-3 sm:px-4 py-2 rounded-full bg-[#FF1B6B] text-white hover:bg-[#D4145A] transition-all duration-300 text-sm sm:text-base\"\n                  >\n                    Sign Up\n                  </Link>\n                </div>\n              )}\n              <Link \n                to=\"/\"\n                className=\"flex items-center gap-1 sm:gap-2 px-3 sm:px-4 py-2 rounded-full border-2 border-[#FF1B6B] text-[#FF1B6B] hover:bg-[#FF1B6B] hover:text-white transition-all duration-300 group text-sm sm:text-base\"\n              >\n                <BiArrowBack className=\"w-4 h-4 sm:w-5 sm:h-5 group-hover:-translate-x-1 transition-transform duration-300\" />\n                <span className=\"font-medium hidden sm:inline\">Back to Token Factory</span>\n                <span className=\"font-medium sm:hidden\">Back</span>\n              </Link>\n            </motion.div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Sidebar */}\n      <AnimatePresence>\n        {user && isMobileMenuOpen && (\n          <>\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 0.3 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 bg-black/30 backdrop-blur-sm lg:hidden z-40\"\n              onClick={() => setIsMobileMenuOpen(false)}\n            />\n            <motion.aside \n              className={`fixed left-0 top-16 h-[calc(100vh-4rem)] w-72 ${isDarkMode ? 'bg-gray-800' : 'bg-white'} shadow-lg z-50 lg:hidden overflow-y-auto`}\n              initial={{ x: -288 }}\n              animate={{ x: 0 }}\n              exit={{ x: -288 }}\n              transition={{ type: \"spring\", stiffness: 100 }}\n            >\n              <div className=\"h-full flex flex-col\">\n                <div className={`p-6 border-b ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n                  <div>\n                    <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Welcome,</p>\n                    <p className={`font-medium ${isDarkMode ? 'text-white' : 'text-gray-900'} text-lg`}>{user.name}</p>\n                    <div className={`mt-2 inline-flex items-center gap-2 px-3 py-1 rounded-full text-xs ${\n                      user.isSeller \n                        ? 'bg-pink-50 text-[#FF1B6B]' \n                        : isDarkMode ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-600'\n                    }`}>\n                      <BiUser className=\"w-4 h-4\" />\n                      <span>{user.isSeller ? 'Seller Account' : 'Buyer Account'}</span>\n                      {user.isSeller && seller?.isVerified && (\n                        <VerificationCheckmark className=\"w-4 h-4 text-[#FF1B6B]\" />\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <nav className=\"flex-1 p-4\">\n                  <ul className=\"space-y-2\">\n                    {navItems.map((item) => (\n                      <li key={item.to}>\n                        <NavLink\n                          to={item.to}\n                          end={item.exact}\n                          onClick={() => setIsMobileMenuOpen(false)}\n                          className={({ isActive }) =>\n                            `flex items-center gap-3 px-4 py-3 rounded-lg transition-colors ${\n                              isActive\n                                ? 'bg-[#FF1B6B] text-white'\n                                : isDarkMode\n                                  ? 'text-gray-300 hover:bg-gray-700 hover:text-[#FF1B6B]'\n                                  : 'text-gray-600 hover:bg-pink-50 hover:text-[#FF1B6B]'\n                            }`\n                          }\n                        >\n                          <item.icon className=\"text-xl\" />\n                          <span>{item.label}</span>\n                          {item.count > 0 && (\n                            <span className={`ml-auto text-xs font-medium px-2 py-1 rounded-full ${\n                              location.pathname === item.to\n                                ? 'bg-white text-[#FF1B6B]'\n                                : 'bg-[#FF1B6B] text-white'\n                            }`}>\n                              {item.count}\n                            </span>\n                          )}\n                        </NavLink>\n                      </li>\n                    ))}\n                  </ul>\n                </nav>\n\n                <div className={`p-4 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n                  <button\n                    onClick={() => {\n                      setIsMobileMenuOpen(false);\n                      handleLogout();\n                    }}\n                    className={`flex items-center gap-3 w-full px-4 py-3 ${\n                      isDarkMode\n                        ? 'text-gray-300 hover:bg-gray-700 hover:text-[#FF1B6B]'\n                        : 'text-gray-600 hover:bg-pink-50 hover:text-[#FF1B6B]'\n                    } rounded-lg transition-colors`}\n                  >\n                    <BiLogOut className=\"text-xl\" />\n                    <span>Logout</span>\n                  </button>\n                </div>\n              </div>\n            </motion.aside>\n          </>\n        )}\n      </AnimatePresence>\n\n      {/* Desktop Sidebar */}\n      {user && (\n        <motion.aside \n          className={`fixed left-0 top-16 h-[calc(100vh-4rem)] w-64 ${isDarkMode ? 'bg-gray-800' : 'bg-white'} shadow-lg z-50 hidden lg:block`}\n          initial={{ x: -64 }}\n          animate={{ x: 0 }}\n          transition={{ type: \"spring\", stiffness: 100 }}\n        >\n          <div className=\"h-full flex flex-col\">\n            <div className=\"p-6\">\n              <div className=\"mt-2\">\n                <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Welcome,</p>\n                <p className={`font-medium ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>{user.name}</p>\n                <div className={`mt-2 inline-flex items-center gap-2 px-3 py-1 rounded-full text-xs ${\n                  user.isSeller \n                    ? 'bg-pink-50 text-[#FF1B6B]' \n                    : isDarkMode ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-600'\n                }`}>\n                  <BiUser className=\"w-4 h-4\" />\n                  <span>{user.isSeller ? 'Seller Account' : 'Buyer Account'}</span>\n                  {user.isSeller && seller?.isVerified && (\n                    <VerificationCheckmark className=\"w-4 h-4 text-[#FF1B6B]\" />\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <nav className=\"flex-1 px-4\">\n              <ul className=\"space-y-2\">\n                {navItems.map((item) => (\n                  <li key={item.to}>\n                    <NavLink\n                      to={item.to}\n                      end={item.exact}\n                      className={({ isActive }) =>\n                        `flex items-center gap-3 px-4 py-3 rounded-lg transition-colors ${\n                          isActive\n                            ? 'bg-[#FF1B6B] text-white'\n                            : isDarkMode\n                              ? 'text-gray-300 hover:bg-gray-700 hover:text-[#FF1B6B]'\n                              : 'text-gray-600 hover:bg-pink-50 hover:text-[#FF1B6B]'\n                        }`\n                      }\n                    >\n                      <item.icon className=\"text-xl\" />\n                      <span>{item.label}</span>\n                      {item.count > 0 && (\n                        <span className={`ml-auto text-xs font-medium px-2 py-1 rounded-full ${\n                          location.pathname === item.to\n                            ? 'bg-white text-[#FF1B6B]'\n                            : 'bg-[#FF1B6B] text-white'\n                        }`}>\n                          {item.count}\n                        </span>\n                      )}\n                    </NavLink>\n                  </li>\n                ))}\n              </ul>\n            </nav>\n\n            <div className={`p-4 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n              <button\n                onClick={handleLogout}\n                className={`flex items-center gap-3 w-full px-4 py-3 ${\n                  isDarkMode\n                    ? 'text-gray-300 hover:bg-gray-700 hover:text-[#FF1B6B]'\n                    : 'text-gray-600 hover:bg-pink-50 hover:text-[#FF1B6B]'\n                } rounded-lg transition-colors`}\n              >\n                <BiLogOut className=\"text-xl\" />\n                <span>Logout</span>\n              </button>\n            </div>\n          </div>\n        </motion.aside>\n      )}\n\n      {/* Main Content */}\n      <main className={`min-h-screen pt-16 ${user ? 'lg:pl-64' : ''} ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\n        <div className=\"h-full\">\n          <Outlet />\n        </div>\n      </main>\n\n      {/* Footer */}\n      <footer className={`${isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-100'} border-t py-6 ${user ? 'lg:pl-64' : ''}`}>\n        <div className=\"max-w-7xl mx-auto px-4 flex flex-col sm:flex-row justify-between items-center gap-4\">\n          <div className=\"flex items-center gap-2\">\n            <BiStore className=\"w-6 h-6 text-[#FF1B6B]\" />\n            <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'} font-medium`}>MerchStore</span>\n          </div>\n          <div className=\"flex items-center gap-6\">\n            <Link \n              to=\"/merch-store/terms\" \n              className={`${isDarkMode ? 'text-gray-300 hover:text-[#FF1B6B]' : 'text-gray-600 hover:text-[#FF1B6B]'} transition-colors text-sm flex items-center gap-2`}\n            >\n              <BiShield className=\"w-4 h-4\" />\n              Terms & Conditions\n            </Link>\n          </div>\n          <div className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n            © {new Date().getFullYear()} MerchStore. All rights reserved.\n          </div>\n        </div>\n      </footer>\n\n    </div>\n  );\n};\n\nexport default MerchStoreLayout; ","import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { BiX, BiCheckCircle, BiPackage, BiTime, BiWallet } from 'react-icons/bi';\r\n\r\nconst WithdrawalTermsModal = ({ isOpen, onClose, onAccept, token }) => {\r\n  const [termsAccepted, setTermsAccepted] = useState(false);\r\n  const [isWaitingWallet, setIsWaitingWallet] = useState(false);\r\n\r\n  const handleAccept = async () => {\r\n    if (termsAccepted) {\r\n      setIsWaitingWallet(true);\r\n      try {\r\n        await onAccept();\r\n      } finally {\r\n        setIsWaitingWallet(false);\r\n        onClose();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <>\r\n          {/* Backdrop */}\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 0.5 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black z-50\"\r\n            onClick={onClose}\r\n          />\r\n\r\n          {/* Modal */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 50 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: 50 }}\r\n            className=\"fixed inset-0 z-50 flex items-center justify-center p-4\"\r\n          >\r\n            <div className=\"bg-white rounded-xl shadow-xl max-w-lg w-full max-h-[90vh] overflow-y-auto\">\r\n              {/* Header */}\r\n              <div className=\"flex items-center justify-between p-6 border-b\">\r\n                <h3 className=\"text-xl font-bold text-gray-900\">Withdrawal Terms & Conditions</h3>\r\n                <button\r\n                  onClick={onClose}\r\n                  disabled={isWaitingWallet}\r\n                  className=\"p-2 text-gray-400 hover:text-gray-500 rounded-full hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  <BiX className=\"w-6 h-6\" />\r\n                </button>\r\n              </div>\r\n\r\n              {/* Content */}\r\n              <div className=\"p-6 space-y-6\">\r\n                {isWaitingWallet ? (\r\n                  <div className=\"flex flex-col items-center justify-center py-8 space-y-4\">\r\n                    <div className=\"relative\">\r\n                      <BiWallet className=\"w-12 h-12 text-[#FF1B6B]\" />\r\n                      <motion.div\r\n                        className=\"absolute inset-0 border-2 border-[#FF1B6B] rounded-lg\"\r\n                        animate={{\r\n                          scale: [1, 1.2, 1],\r\n                          opacity: [1, 0.5, 1],\r\n                        }}\r\n                        transition={{\r\n                          duration: 1.5,\r\n                          repeat: Infinity,\r\n                          ease: \"easeInOut\"\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <p className=\"text-gray-900 font-medium text-center\">Please confirm the withdrawal request in your wallet</p>\r\n                    <p className=\"text-gray-500 text-sm text-center\">Waiting for wallet confirmation...</p>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    {/* Timeline */}\r\n                    <div className=\"space-y-4\">\r\n                      <div className=\"flex items-start gap-4\">\r\n                        <div className=\"p-2 bg-pink-50 rounded-lg\">\r\n                          <BiPackage className=\"w-6 h-6 text-[#FF1B6B]\" />\r\n                        </div>\r\n                        <div>\r\n                          <h4 className=\"font-medium text-gray-900\">Order Processing</h4>\r\n                          <p className=\"text-gray-600 mt-1\">\r\n                            When an order is placed, you have 3 days to confirm shipping. The order amount will be held in escrow during this period.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-start gap-4\">\r\n                        <div className=\"p-2 bg-pink-50 rounded-lg\">\r\n                          <BiTime className=\"w-6 h-6 text-[#FF1B6B]\" />\r\n                        </div>\r\n                        <div>\r\n                          <h4 className=\"font-medium text-gray-900\">Funds Release</h4>\r\n                          <p className=\"text-gray-600 mt-1\">\r\n                            After shipping confirmation, funds will be held for 14 days to ensure successful delivery. This amount will then be added to your available balance.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-start gap-4\">\r\n                        <div className=\"p-2 bg-pink-50 rounded-lg\">\r\n                          <BiCheckCircle className=\"w-6 h-6 text-[#FF1B6B]\" />\r\n                        </div>\r\n                        <div>\r\n                          <h4 className=\"font-medium text-gray-900\">Withdrawal Processing</h4>\r\n                          <p className=\"text-gray-600 mt-1\">\r\n                            Your {token} withdrawal will be processed after the 14-day holding period from the shipping confirmation date.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Terms Acceptance */}\r\n                    <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                      <label className=\"flex items-start gap-3 cursor-pointer\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={termsAccepted}\r\n                          onChange={(e) => setTermsAccepted(e.target.checked)}\r\n                          className=\"mt-1 h-4 w-4 text-[#FF1B6B] focus:ring-[#FF1B6B] rounded\"\r\n                        />\r\n                        <span className=\"text-sm text-gray-600\">\r\n                          I understand that funds from orders are released to my available balance only after:\r\n                          1) Confirming shipping within 3 days of order placement\r\n                          2) A 14-day holding period after shipping confirmation\r\n                          I also understand that withdrawal requests will be processed after these conditions are met.\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              {/* Footer */}\r\n              <div className=\"p-6 border-t\">\r\n                <button\r\n                  onClick={handleAccept}\r\n                  disabled={!termsAccepted || isWaitingWallet}\r\n                  className={`w-full px-4 py-2 rounded-lg text-white font-medium transition-colors flex items-center justify-center gap-2 ${\r\n                    termsAccepted && !isWaitingWallet\r\n                      ? 'bg-[#FF1B6B] hover:bg-[#D4145A]'\r\n                      : 'bg-gray-300 cursor-not-allowed'\r\n                  }`}\r\n                >\r\n                  {isWaitingWallet ? (\r\n                    <>\r\n                      <motion.div\r\n                        className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full\"\r\n                        animate={{ rotate: 360 }}\r\n                        transition={{\r\n                          duration: 1,\r\n                          repeat: Infinity,\r\n                          ease: \"linear\"\r\n                        }}\r\n                      />\r\n                      <span>Waiting for Confirmation...</span>\r\n                    </>\r\n                  ) : (\r\n                    'Accept & Request Withdrawal'\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default WithdrawalTermsModal; ","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiBox, FiDollarSign, FiShoppingBag, FiTrendingUp, FiUsers, FiCreditCard, FiAlertCircle, FiCheckCircle } from 'react-icons/fi';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { collection, query, where, getDocs, orderBy, limit, doc, getDoc, addDoc, serverTimestamp, onSnapshot, updateDoc } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport WithdrawalTermsModal from '../../components/merch/WithdrawalTermsModal';\nimport { ethers } from 'ethers';\nimport { getMerchPlatformContract, parseTokenAmount } from '../../contracts/MerchPlatform';\nimport VerificationCheckmark from '../../components/shared/VerificationCheckmark';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Fragment } from 'react';\nimport { useTheme } from '../../context/ThemeContext';\n\n// Token logos\nconst TOKEN_INFO = {\n  USDT: {\n    logo: '/logos/usdt.png',\n    name: 'USDT (Tether)',\n    decimals: 6\n  },\n  USDC: {\n    logo: '/logos/usdc.png',\n    name: 'USDC (USD Coin)',\n    decimals: 6\n  }\n};\n\nconst SkeletonPulse = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      className={`w-full h-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-lg`}\n      animate={{\n        opacity: [0.4, 0.7, 0.4]\n      }}\n      transition={{\n        duration: 1.5,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n    />\n  );\n};\n\nconst DashboardSkeleton = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <div className={`p-6 max-w-7xl mx-auto space-y-8 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\n      {/* Welcome Section Skeleton */}\n      <div className=\"space-y-2\">\n        <div className=\"w-64 h-8\">\n          <SkeletonPulse />\n        </div>\n        <div className=\"w-96 h-5\">\n          <SkeletonPulse />\n        </div>\n      </div>\n\n      {/* Balance Widget Skeleton */}\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-xl shadow-lg p-6`}>\n        <div className=\"flex justify-between items-start mb-4\">\n          <div className=\"space-y-2\">\n            <div className=\"w-48 h-6\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-64 h-4\">\n              <SkeletonPulse />\n            </div>\n          </div>\n          <div className=\"w-10 h-10 rounded-full\">\n            <SkeletonPulse />\n          </div>\n        </div>\n        \n        <div className=\"flex justify-between items-end mb-6\">\n          <div className=\"space-y-2\">\n            <div className=\"w-56 h-10\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-32 h-4\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-48 h-4\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-40 h-4\">\n              <SkeletonPulse />\n            </div>\n          </div>\n          <div className=\"w-40 h-10\">\n            <SkeletonPulse />\n          </div>\n        </div>\n\n        <div className=\"space-y-1\">\n          <div className=\"w-full h-3\">\n            <SkeletonPulse />\n          </div>\n          <div className=\"w-full h-3\">\n            <SkeletonPulse />\n          </div>\n          <div className=\"w-full h-3\">\n            <SkeletonPulse />\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Grid Skeleton */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {[1, 2, 3, 4].map((i) => (\n          <div key={i} className={`p-6 rounded-lg shadow-lg ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n            <SkeletonPulse />\n          </div>\n        ))}\n      </div>\n\n      {/* Recent Activity Skeleton */}\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-lg p-6`}>\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"w-48 h-6\">\n            <SkeletonPulse />\n          </div>\n          <div className=\"w-32 h-10\">\n            <SkeletonPulse />\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          {[1, 2, 3].map((i) => (\n            <div key={i} className=\"h-20 rounded-lg\">\n              <SkeletonPulse />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Add CountdownTimer component\nconst CountdownTimer = ({ targetDate }) => {\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  function calculateTimeLeft() {\n    const difference = targetDate - new Date();\n    if (difference <= 0) return { days: 0, hours: 0, minutes: 0, seconds: 0 };\n\n    return {\n      days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n      hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n      minutes: Math.floor((difference / 1000 / 60) % 60),\n      seconds: Math.floor((difference / 1000) % 60)\n    };\n  }\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [targetDate]);\n\n  return (\n    <div className=\"font-mono text-sm\">\n      {timeLeft.days}d {timeLeft.hours.toString().padStart(2, '0')}h {timeLeft.minutes.toString().padStart(2, '0')}m {timeLeft.seconds.toString().padStart(2, '0')}s\n    </div>\n  );\n};\n\nconst getProgressBarWidth = (order) => {\n  if (order.status === 'delivered') return '100%';\n  if (order.status === 'shipped') return '75%';\n  if (order.status === 'processing') return '50%';\n  if (order.paymentStatus === 'completed') return '25%';\n  return '0%';\n};\n\nconst getProgressBarColor = (order) => {\n  if (order.status === 'delivered') return 'bg-orange-500';\n  if (order.status === 'shipped') return 'bg-green-500';\n  if (order.status === 'processing') return 'bg-blue-500';\n  if (order.paymentStatus === 'completed') return 'bg-gray-500';\n  return 'bg-gray-200';\n};\n\n// Add safety buffer constant at the top with other constants\nconst SAFETY_BUFFER = 2 * 60 * 60 * 1000; // 2 hours in milliseconds\n\nconst SellerDashboard = () => {\n  const { user } = useMerchAuth();\n  const [loading, setLoading] = useState(true);\n  const [platformFee, setPlatformFee] = useState(2.5);\n  const [minWithdrawal, setMinWithdrawal] = useState(15);\n  const { isDarkMode } = useTheme();\n  const [seller, setSeller] = useState(null);\n  const [stats, setStats] = useState({\n    totalProducts: 0,\n    totalSales: 0,\n    totalCustomers: 0,\n    grossRevenue: 0,\n    netRevenue: 0,\n    balances: {\n      USDC: 0,\n      USDT: 0\n    }\n  });\n  const [recentOrders, setRecentOrders] = useState([]);\n  const [withdrawals, setWithdrawals] = useState([]);\n  const [sellerData, setSellerData] = useState(null);\n  const [isTermsModalOpen, setIsTermsModalOpen] = useState(false);\n  const [selectedToken, setSelectedToken] = useState('USDC');\n  const [isIncomingPaymentsExpanded, setIsIncomingPaymentsExpanded] = useState(false);\n  const [incomingPayments, setIncomingPayments] = useState([]);\n  const [showVerificationModal, setShowVerificationModal] = useState(false);\n  const [isSubmittingVerification, setIsSubmittingVerification] = useState(false);\n\n  useEffect(() => {\n    if (!user?.uid) return;\n    fetchSellerData();\n    fetchDashboardData();\n    fetchPlatformSettings();\n  }, [user]);\n\n  const fetchSellerData = async () => {\n    try {\n      const sellerDoc = await getDoc(doc(db, 'sellers', user.sellerId));\n      if (sellerDoc.exists()) {\n        const sellerData = sellerDoc.data();\n        setSeller({\n          ...sellerData,\n          isVerified: sellerData.verificationStatus === 'approved',\n          verificationRequested: sellerData.verificationStatus === 'pending',\n          isRejected: sellerData.verificationStatus === 'rejected',\n          rejectedAt: sellerData.rejectedAt?.toDate(),\n          rejectionCooldown: sellerData.rejectionCooldown || 72,\n          rejectionReason: sellerData.rejectionReason\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching seller data:', error);\n    }\n  };\n\n  const fetchPlatformSettings = async () => {\n    try {\n      const settingsDoc = await getDoc(doc(db, 'settings', 'platform'));\n      if (settingsDoc.exists()) {\n        const settings = settingsDoc.data();\n        setPlatformFee(settings.platformFee || 2.5);\n        setMinWithdrawal(settings.withdrawalMinimum || 15);\n      }\n    } catch (error) {\n      console.error('Error fetching platform settings:', error);\n    }\n  };\n\n  const fetchDashboardData = async () => {\n    try {\n      // Fetch seller data with real-time updates\n      const sellerDocRef = doc(db, 'sellers', user.sellerId);\n      const unsubscribeSeller = onSnapshot(sellerDocRef, (doc) => {\n        setSellerData(doc.data());\n      });\n\n      // Fetch products with cache disabled\n      const productsQuery = query(\n        collection(db, 'products'),\n        where('sellerId', '==', user.sellerId)\n      );\n      const productsSnapshot = await getDocs(productsQuery);\n\n      // Fetch orders with real-time updates\n      const ordersQuery = query(\n        collection(db, 'orders'),\n        where('sellerId', '==', user.sellerId),\n        orderBy('createdAt', 'desc')\n      );\n      \n      const unsubscribeOrders = onSnapshot(ordersQuery, (snapshot) => {\n        const orders = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n\n        // Calculate incoming payments (orders within 3-day shipping window)\n        const now = new Date();\n        const incomingPaymentsList = orders.filter(order => {\n          if (order.paymentStatus === 'completed') {\n            // Exclude canceled and refunded orders\n            if (order.status === 'cancelled' || order.status === 'refunded') return false;\n            \n            const orderDate = order.createdAt.toDate();\n            const shippingDeadline = new Date(orderDate.getTime() + (3 * 24 * 60 * 60 * 1000));\n            // Keep showing orders until the 3-day window is complete, regardless of shipping status\n            return now <= shippingDeadline;\n          }\n          return false;\n        });\n        setIncomingPayments(incomingPaymentsList);\n\n        // Fetch withdrawals with real-time updates\n        const withdrawalsQuery = query(\n          collection(db, 'withdrawals'),\n          where('sellerId', '==', user.sellerId),\n          orderBy('timestamp', 'desc')\n        );\n\n        const unsubscribeWithdrawals = onSnapshot(withdrawalsQuery, (withdrawalSnapshot) => {\n          const withdrawalHistory = withdrawalSnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data(),\n            timestamp: doc.data().timestamp?.toDate()\n          }));\n          setWithdrawals(withdrawalHistory);\n\n          // Calculate total withdrawn amount for each token from completed withdrawals\n          const totalWithdrawn = {\n            USDC: withdrawalHistory\n              .filter(w => w.status === 'completed' && w.token === 'USDC')\n              .reduce((sum, w) => sum + (w.amount || 0), 0),\n            USDT: withdrawalHistory\n              .filter(w => w.status === 'completed' && w.token === 'USDT')\n              .reduce((sum, w) => sum + (w.amount || 0), 0)\n          };\n\n          // Calculate revenue and balance for each token with enhanced checks\n          let totalGrossRevenue = 0;\n          let totalNetRevenue = 0;\n          const tokenRevenue = {\n            USDC: { gross: 0, net: 0 },\n            USDT: { gross: 0, net: 0 }\n          };\n          const customers = new Set();\n\n          orders.forEach(order => {\n            if (order.buyerId) {\n              customers.add(order.buyerId);\n            }\n\n            if (order.paymentStatus === 'completed') {\n              const orderDate = order.createdAt.toDate();\n              const now = new Date();\n              const shippingWindowEnd = new Date(orderDate.getTime() + (3 * 24 * 60 * 60 * 1000));\n              const orderTotal = order.total || 0;\n              const orderToken = order.paymentMethod?.token || 'USDT';\n\n              // Always check if 3-day period has passed\n              if (now >= shippingWindowEnd) {\n                // For unshipped orders, apply buffer\n                if (!order.shippingConfirmed) {\n                  const adjustedNow = new Date(now.getTime() - SAFETY_BUFFER);\n                  if (adjustedNow < shippingWindowEnd) {\n                    return; // Skip if within buffer period\n                  }\n                }\n\n                // Only include if not cancelled or refunded\n                if (order.status !== 'cancelled' && order.status !== 'refunded') {\n                  // Add to gross revenue\n                  totalGrossRevenue += orderTotal;\n                  \n                  // Calculate net revenue (95% of gross)\n                  const netAmount = orderTotal * 0.95;\n                  totalNetRevenue += netAmount;\n                  \n                  // Add to token-specific revenue\n                  if (!tokenRevenue[orderToken]) {\n                    tokenRevenue[orderToken] = { gross: 0, net: 0 };\n                  }\n                  tokenRevenue[orderToken].gross += orderTotal;\n                  tokenRevenue[orderToken].net += netAmount;\n                }\n              }\n            }\n          });\n\n          // Calculate available balance with enhanced checks\n          const balances = {\n            USDC: parseFloat(Math.max(0, tokenRevenue.USDC.net - totalWithdrawn.USDC - (sellerData?.pendingRefunds?.USDC || 0)).toFixed(2)),\n            USDT: parseFloat(Math.max(0, tokenRevenue.USDT.net - totalWithdrawn.USDT - (sellerData?.pendingRefunds?.USDT || 0)).toFixed(2))\n          };\n\n          // Also account for pending withdrawals\n          const pendingWithdrawals = {\n            USDC: withdrawalHistory\n              .filter(w => w.status === 'pending' && w.token === 'USDC')\n              .reduce((sum, w) => sum + (w.amount || 0), 0),\n            USDT: withdrawalHistory\n              .filter(w => w.status === 'pending' && w.token === 'USDT')\n              .reduce((sum, w) => sum + (w.amount || 0), 0)\n          };\n\n          // Subtract pending withdrawals from available balance\n          balances.USDC = parseFloat((Math.max(0, balances.USDC - pendingWithdrawals.USDC)).toFixed(2));\n          balances.USDT = parseFloat((Math.max(0, balances.USDT - pendingWithdrawals.USDT)).toFixed(2));\n\n          // Update stats with new calculations\n          setStats({\n            totalProducts: productsSnapshot.size,\n            totalSales: orders.filter(o => o.paymentStatus === 'completed').length,\n            totalCustomers: customers.size,\n            grossRevenue: totalGrossRevenue,\n            netRevenue: totalNetRevenue,\n            balances,\n            pendingRefunds: sellerData?.pendingRefunds || { USDC: 0, USDT: 0 }\n          });\n\n          // Set recent orders (only completed ones)\n          setRecentOrders(\n            orders\n              .filter(o => o.paymentStatus === 'completed')\n              .slice(0, 3)\n          );\n        });\n\n        // Cleanup function to unsubscribe from real-time listeners\n        return () => {\n          unsubscribeSeller();\n          unsubscribeOrders();\n          unsubscribeWithdrawals();\n        };\n      });\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n      toast.error('Failed to load dashboard data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 100\n      }\n    }\n  };\n\n  const statsCards = [\n    { title: 'Total Products', icon: <FiBox />, value: stats.totalProducts, color: 'bg-blue-500' },\n    { title: 'Total Sales', icon: <FiShoppingBag />, value: stats.totalSales, color: 'bg-green-500' },\n    { title: 'Total Customers', icon: <FiUsers />, value: stats.totalCustomers, color: 'bg-purple-500' },\n    { \n      title: 'Revenue', \n      icon: <FiDollarSign />, \n      value: (\n        <div>\n          <div className=\"flex flex-col gap-1\">\n            <div className=\"text-lg\">Current Balance:</div>\n            <div className=\"text-2xl font-bold\">${(stats.balances.USDC + stats.balances.USDT).toFixed(2)}</div>\n            <div className=\"text-sm opacity-75\">All-time Revenue:</div>\n            <div className=\"text-xl\">${stats.grossRevenue.toFixed(2)}</div>\n            <div className=\"text-xs opacity-75\">\n              Net (after 5% fee): ${stats.netRevenue.toFixed(2)}\n            </div>\n          </div>\n        </div>\n      ), \n      color: 'bg-pink-500' \n    },\n  ];\n\n  const canRequestVerification = () => {\n    if (!seller?.isRejected) return true;\n    if (!seller.rejectedAt) return true;\n    \n    const cooldownHours = seller.rejectionCooldown || 72;\n    const cooldownEnds = new Date(seller.rejectedAt.getTime() + (cooldownHours * 60 * 60 * 1000));\n    return Date.now() >= cooldownEnds;\n  };\n\n  const getRemainingCooldownTime = () => {\n    if (!seller?.rejectedAt) return null;\n    \n    const cooldownHours = seller.rejectionCooldown || 72;\n    const cooldownEnds = new Date(seller.rejectedAt.getTime() + (cooldownHours * 60 * 60 * 1000));\n    const remaining = cooldownEnds - Date.now();\n    \n    if (remaining <= 0) return null;\n    \n    const hours = Math.floor(remaining / (60 * 60 * 1000));\n    const minutes = Math.floor((remaining % (60 * 60 * 1000)) / (60 * 1000));\n    \n    return { hours, minutes };\n  };\n\n  const handleRequestVerification = async () => {\n    if (!canRequestVerification()) {\n      toast.error('Please wait for the cooldown period to end before requesting again');\n      return;\n    }\n\n    setIsSubmittingVerification(true);\n    try {\n      // Update seller document with verification request\n      await updateDoc(doc(db, 'sellers', user.sellerId), {\n        verificationRequested: true,\n        verificationRequestedAt: serverTimestamp(),\n        verificationStatus: 'pending',\n        // Reset rejection data when making a new request\n        rejectedAt: null,\n        rejectionReason: null\n      });\n      \n      toast.success('Verification request submitted successfully!');\n      await fetchSellerData(); // Refresh seller data first\n      setIsSubmittingVerification(false);\n      setShowVerificationModal(false);\n      \n      // Update local seller state to reflect changes immediately\n      setSeller(prevSeller => ({\n        ...prevSeller,\n        verificationRequested: true,\n        verificationStatus: 'pending',\n        isRejected: false,\n        rejectedAt: null,\n        rejectionReason: null\n      }));\n    } catch (error) {\n      console.error('Error requesting verification:', error);\n      toast.error('Failed to submit verification request');\n      setIsSubmittingVerification(false);\n    }\n  };\n\n  const VerificationModal = () => (\n    <Transition appear show={showVerificationModal} as={Fragment}>\n      <Dialog \n        as=\"div\" \n        className=\"relative z-50\" \n        onClose={() => !isSubmittingVerification && setShowVerificationModal(false)}\n        static\n      >\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\n                <div className=\"flex items-center justify-center mb-4\">\n                  <VerificationCheckmark />\n                </div>\n                <Dialog.Title as=\"h3\" className=\"text-lg font-medium leading-6 text-center text-gray-900\">\n                  Store Verification Process\n                </Dialog.Title>\n                <div className=\"mt-4\">\n                  <p className=\"text-sm text-gray-500 mb-4\">\n                    The verification process duration is not fixed and depends on several factors:\n                  </p>\n                  <ul className=\"list-disc list-inside text-sm text-gray-500 space-y-2 mb-4\">\n                    <li>Number of customer reviews</li>\n                    <li>Average store rating</li>\n                    <li>Customer satisfaction level</li>\n                    <li>Quality of products and service</li>\n                  </ul>\n                  <p className=\"text-sm text-gray-500 mb-4\">\n                    We encourage you to provide excellent service to your customers and actively seek their feedback. \n                    Positive reviews and high ratings will significantly improve your chances of verification.\n                  </p>\n                  {seller?.isRejected && (\n                    <div className=\"mt-4 p-4 bg-red-50 border border-red-100 rounded-lg\">\n                      <p className=\"text-sm font-medium text-red-800 mb-2\">Previous Request Rejected</p>\n                      {seller.rejectionReason && (\n                        <p className=\"text-sm text-red-700 mb-2\">Reason: {seller.rejectionReason}</p>\n                      )}\n                      <p className=\"text-sm text-red-600\">\n                        Please address any issues mentioned above before requesting verification again.\n                      </p>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"mt-6 flex justify-end space-x-3\">\n                  <button\n                    type=\"button\"\n                    className=\"inline-flex justify-center rounded-md border border-transparent bg-gray-100 px-4 py-2 text-sm font-medium text-gray-900 hover:bg-gray-200 focus:outline-none\"\n                    onClick={() => setShowVerificationModal(false)}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"inline-flex justify-center rounded-md border border-transparent bg-[#FF1B6B] px-4 py-2 text-sm font-medium text-white hover:bg-[#D4145A] focus:outline-none\"\n                    onClick={handleRequestVerification}\n                  >\n                    Request Verification\n                  </button>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n\n  const VerificationButton = () => {\n    if (!seller) return null;\n    \n    if (seller.isVerified) {\n      return (\n        <div className=\"inline-flex items-center gap-2 px-4 py-2 bg-green-100 text-green-800 rounded-lg\">\n          <VerificationCheckmark />\n          <span>Verified Store</span>\n        </div>\n      );\n    }\n    \n    if (seller.verificationStatus === 'rejected') {\n      const cooldown = getRemainingCooldownTime();\n      if (cooldown) {\n        return (\n          <div className=\"bg-red-50 border border-red-100 rounded-lg p-4 max-w-md\">\n            <div className=\"flex items-start gap-3\">\n              <FiAlertCircle className=\"text-red-500 mt-1\" />\n              <div>\n                <div className=\"text-sm font-medium text-red-800\">Verification Request Rejected</div>\n                {seller.rejectionReason && (\n                  <p className=\"text-sm text-red-600 mt-1\">{seller.rejectionReason}</p>\n                )}\n                <div className=\"text-xs text-gray-600 mt-2\">\n                  You can request again in {cooldown.hours}h {cooldown.minutes}m\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n    \n    if (seller.verificationStatus === 'pending') {\n      return (\n        <div className=\"inline-flex items-center gap-2 px-4 py-2 bg-yellow-100 text-yellow-800 rounded-lg\">\n          <span>Verification Pending</span>\n        </div>\n      );\n    }\n    \n    return (\n      <button\n        onClick={() => setShowVerificationModal(true)}\n        className=\"flex items-center gap-2 px-4 py-2 bg-white border-2 border-[#FF1B6B] text-[#FF1B6B] rounded-lg hover:bg-pink-50 transition-colors\"\n        disabled={!canRequestVerification()}\n      >\n        <VerificationCheckmark />\n        <span>Request Verification</span>\n      </button>\n    );\n  };\n\n  if (loading) {\n    return <DashboardSkeleton />;\n  }\n\n  return (\n    <>\n      <VerificationModal />\n      <motion.div \n        className={`p-6 max-w-7xl mx-auto ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={containerVariants}\n      >\n        {/* Welcome Section */}\n        <motion.div \n          className=\"mb-8\"\n          variants={itemVariants}\n        >\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className={`text-3xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>\n                Welcome back, {user?.displayName || 'Seller'}!\n              </h1>\n              <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-600'} mt-2`}>\n                Here's what's happening with your store today.\n              </p>\n            </div>\n            <div className=\"flex justify-end mb-6\">\n              <VerificationButton />\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Balance Widget */}\n        <motion.div \n          className=\"mb-8\"\n          variants={itemVariants}\n        >\n          <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-xl shadow-lg p-6`}>\n            <div className=\"flex justify-between items-start mb-4\">\n              <div>\n                <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>\n                  Available Balance\n                </h3>\n                <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1`}>\n                  Withdraw anytime to your wallet\n                </p>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <div className={`flex items-center gap-2 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'} px-3 py-1.5 rounded-lg`}>\n                  <img \n                    src={sellerData?.preferredNetwork === 'unichain' ? '/unichain-logo.png' : '/polygon.png'}\n                    alt={sellerData?.preferredNetwork === 'unichain' ? 'Unichain' : 'Polygon'}\n                    className=\"w-6 h-6 object-contain\"\n                  />\n                  <span className={`text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                    {sellerData?.preferredNetwork === 'unichain' ? 'Unichain' : 'Polygon'} Network\n                  </span>\n                </div>\n                <div className=\"p-2 bg-[#FF1B6B] bg-opacity-10 rounded-full\">\n                  <FiCreditCard className=\"text-[#FF1B6B] text-xl\" />\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex flex-col lg:flex-row gap-6 mb-6\">\n              {/* Balance Section */}\n              <div className={`flex-grow ${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'} rounded-lg p-4`}>\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <img \n                    src={TOKEN_INFO[sellerData?.preferredToken]?.logo}\n                    alt={sellerData?.preferredToken}\n                    className=\"w-6 h-6\"\n                  />\n                  <div className=\"text-2xl font-bold text-[#FF1B6B]\">\n                    {stats.balances[sellerData?.preferredToken]?.toFixed(2)} {sellerData?.preferredToken}\n                  </div>\n                </div>\n                <div className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                  ≈ ${stats.balances[sellerData?.preferredToken]?.toFixed(2)}\n                </div>\n                <div className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1`}>\n                  Available to withdraw\n                </div>\n                <div className={`w-full ${isDarkMode ? 'bg-gray-600' : 'bg-gray-200'} rounded-full h-2 mt-2`}>\n                  <div \n                    className=\"bg-[#FF1B6B] h-2 rounded-full transition-all duration-500\"\n                    style={{ \n                      width: `${Math.min(100, (stats.balances[sellerData?.preferredToken] / 15) * 100)}%` \n                    }}\n                  />\n                </div>\n                <div className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1`}>\n                  Min. 15 {sellerData?.preferredToken} Required\n                </div>\n                <button\n                  onClick={() => {\n                    if (!stats.balances[sellerData?.preferredToken] || stats.balances[sellerData?.preferredToken] < minWithdrawal) return;\n                    setSelectedToken(sellerData?.preferredToken);\n                    setIsTermsModalOpen(true);\n                  }}\n                  disabled={!stats.balances[sellerData?.preferredToken] || stats.balances[sellerData?.preferredToken] < minWithdrawal}\n                  className={`w-full mt-4 px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\n                    !stats.balances[sellerData?.preferredToken] || stats.balances[sellerData?.preferredToken] < minWithdrawal\n                      ? isDarkMode \n                        ? 'bg-gray-600 text-gray-400 cursor-not-allowed'\n                        : 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                      : 'bg-[#FF1B6B] text-white hover:bg-[#D4145A]'\n                  }`}\n                >\n                  {!stats.balances[sellerData?.preferredToken] || stats.balances[sellerData?.preferredToken] < minWithdrawal \n                    ? `Min. ${minWithdrawal} ${sellerData?.preferredToken} Required`\n                    : `Request ${sellerData?.preferredToken} Withdrawal`}\n                </button>\n              </div>\n\n              {/* Notes Section */}\n              <div className={`lg:w-1/3 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'} rounded-lg p-4`}>\n                <div className=\"flex flex-col gap-3\">\n                  <div className=\"flex items-center gap-2\">\n                    <FiCreditCard className=\"text-[#FF1B6B] w-5 h-5\" />\n                    <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                      Gas fees paid from your wallet\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <FiDollarSign className=\"text-[#FF1B6B] w-5 h-5\" />\n                    <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                      5% platform fee per sale\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <FiTrendingUp className=\"text-[#FF1B6B] w-5 h-5\" />\n                    <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                      Min. withdrawal: 15 {sellerData?.preferredToken}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Stats Grid */}\n        <motion.div \n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\"\n          variants={containerVariants}\n        >\n          {statsCards.map((stat, index) => (\n            <motion.div\n              key={stat.title}\n              className={`p-6 rounded-lg shadow-lg ${stat.color} text-white transform hover:scale-105 transition-transform duration-200`}\n              variants={itemVariants}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-lg font-semibold mb-2\">{stat.title}</p>\n                  <h3 className=\"text-3xl font-bold\">{stat.value}</h3>\n                </div>\n                <div className=\"text-3xl opacity-80\">\n                  {stat.icon}\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        {/* Incoming Payments Section */}\n        <motion.div \n          className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-lg p-6 mb-8`}\n          variants={itemVariants}\n        >\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Incoming Payments</h3>\n              <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Payments pending 3-day shipping confirmation</p>\n            </div>\n            <button\n              onClick={() => setIsIncomingPaymentsExpanded(!isIncomingPaymentsExpanded)}\n              className={`p-2 ${isDarkMode ? 'hover:bg-gray-700' : 'hover:bg-gray-100'} rounded-full transition-colors`}\n            >\n              <svg\n                className={`w-6 h-6 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} transform transition-transform ${isIncomingPaymentsExpanded ? 'rotate-180' : ''}`}\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </button>\n          </div>\n\n          <div className={`mb-4 p-4 ${isDarkMode ? 'bg-pink-900/20 border-pink-800' : 'bg-[#FF1B6B] bg-opacity-10 border-[#FF1B6B]'} border rounded-lg flex items-start space-x-3`}>\n            <svg className=\"w-5 h-5 text-[#FF1B6B] mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n            </svg>\n            <div>\n              <h4 className=\"font-medium text-[#FF1B6B] mb-1\">⚠️ Shipping Time Requirement</h4>\n              <div className={`space-y-2 text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                <p>All orders must be shipped within 3 days of payment. Orders not shipped within this timeframe may be cancelled and refunded to protect buyers.</p>\n                <p><strong>Buffer Period:</strong> For orders awaiting shipping, there is a 2-hour buffer period after the 3-day window before funds become available. This buffer ensures the auto-cancellation system can protect buyers from unshipped orders.</p>\n                <p><strong>Shipped Orders:</strong> Orders marked as shipped (with tracking number) will not be subject to the buffer period, but funds will still be held for the full 3-day window.</p>\n                <p className={`${isDarkMode ? 'text-red-400' : 'text-red-600'}`}><strong>Warning:</strong> Falsely marking orders as shipped without actual shipping confirmation may result in penalties if buyers report issues. Please only confirm shipping when you have a valid tracking number.</p>\n              </div>\n            </div>\n          </div>\n\n          {isIncomingPaymentsExpanded && (\n            <div className=\"overflow-x-auto\">\n              <table className={`min-w-full divide-y ${isDarkMode ? 'divide-gray-700' : 'divide-gray-200'}`}>\n                <thead className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'}`}>\n                  <tr>\n                    <th className={`px-6 py-3 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>Order ID</th>\n                    <th className={`px-6 py-3 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>Date</th>\n                    <th className={`px-6 py-3 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>Amount</th>\n                    <th className={`px-6 py-3 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>Token</th>\n                    <th className={`px-6 py-3 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>Status</th>\n                    <th className={`px-6 py-3 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>Available In</th>\n                  </tr>\n                </thead>\n                <tbody className={`${isDarkMode ? 'divide-y divide-gray-700' : 'bg-white divide-y divide-gray-200'}`}>\n                  {incomingPayments.map((payment) => {\n                    const orderDate = payment.createdAt.toDate();\n                    const availableDate = new Date(orderDate.getTime() + (3 * 24 * 60 * 60 * 1000));\n                    const now = new Date();\n                    const hoursRemaining = Math.max(0, Math.ceil((availableDate - Date.now()) / (60 * 60 * 1000)));\n                    \n                    return (\n                      <tr key={payment.id} className={isDarkMode ? 'bg-gray-800' : 'bg-white'}>\n                        <td className={`px-6 py-4 whitespace-nowrap text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-900'}`}>\n                          #{payment.id.slice(-6)}\n                        </td>\n                        <td className={`px-6 py-4 whitespace-nowrap text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                          {orderDate.toLocaleString()}\n                        </td>\n                        <td className={`px-6 py-4 whitespace-nowrap text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-900'}`}>\n                          ${payment.total.toFixed(2)}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center\">\n                            <img \n                              src={payment.paymentMethod.token === 'USDC' ? TOKEN_INFO.USDC.logo : TOKEN_INFO.USDT.logo}\n                              alt={payment.paymentMethod.token}\n                              className=\"w-5 h-5 mr-2\"\n                            />\n                            <span className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-900'}`}>{payment.paymentMethod.token}</span>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          {payment.status === 'cancelled' ? (\n                            <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n                              isDarkMode ? 'bg-red-900/50 text-red-300' : 'bg-red-100 text-red-800'\n                            }`}>\n                              Canceled\n                            </span>\n                          ) : payment.shippingConfirmed ? (\n                            <div className=\"flex flex-col gap-1\">\n                              <span className={`text-xs font-medium ${isDarkMode ? 'text-green-400' : 'text-green-600'}`}>\n                                Shipping Confirmed\n                              </span>\n                              <span className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                                {payment.carrier}: {payment.trackingNumber}\n                              </span>\n                              <div className=\"flex items-center gap-2\">\n                                <span className={isDarkMode ? 'text-gray-300' : ''}>{payment.status === 'delivered' ? 'Delivered' : 'Processing'}</span>\n                                <div className={`relative w-full h-2 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'} rounded-full overflow-hidden`}>\n                                  <div\n                                    className={`absolute left-0 top-0 h-full transition-all duration-300 ${getProgressBarColor(payment)}`}\n                                    style={{ width: getProgressBarWidth(payment) }}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          ) : (\n                            <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n                              isDarkMode ? 'bg-yellow-900/50 text-yellow-300' : 'bg-yellow-100 text-yellow-800'\n                            }`}>\n                              Awaiting Shipping\n                            </span>\n                          )}\n                        </td>\n                        <td className={`px-6 py-4 whitespace-nowrap text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                          <div className=\"flex flex-col gap-1\">\n                            <div className=\"flex items-center gap-2\">\n                              <span className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>3-day period:</span>\n                              <CountdownTimer \n                                targetDate={availableDate}\n                              />\n                            </div>\n                            \n                            {now >= availableDate && !payment.shippingConfirmed && (\n                              <div className=\"flex items-center gap-2\">\n                                <span className={`text-xs ${isDarkMode ? 'text-yellow-400' : 'text-yellow-600'}`}>Buffer period:</span>\n                                <CountdownTimer \n                                  targetDate={new Date(availableDate.getTime() + SAFETY_BUFFER)}\n                                />\n                              </div>\n                            )}\n\n                            <div className={`w-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-full h-1.5`}>\n                              <div \n                                className=\"bg-[#FF1B6B] h-1.5 rounded-full transition-all duration-500\"\n                                style={{ \n                                  width: payment.shippingConfirmed\n                                    ? `${Math.min(100, ((72 - hoursRemaining) / 72) * 100)}%`\n                                    : `${Math.min(100, ((72 - hoursRemaining - 2) / 72) * 100)}%`\n                                }}\n                              />\n                            </div>\n                            \n                            {payment.shippingConfirmed ? (\n                              <span className={`text-xs ${isDarkMode ? 'text-green-400' : 'text-green-600'}`}>No buffer (shipping confirmed)</span>\n                            ) : now >= availableDate ? (\n                              <span className={`text-xs ${isDarkMode ? 'text-yellow-400' : 'text-yellow-600'}`}>In 2-hour buffer period</span>\n                            ) : (\n                              <span className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Awaiting 3-day period</span>\n                            )}\n                          </div>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n              {incomingPayments.length === 0 && (\n                <div className={`text-center py-8 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                  No incoming payments at the moment\n                </div>\n              )}\n            </div>\n          )}\n        </motion.div>\n\n        {/* Recent Activity */}\n        <motion.div \n          className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-lg p-6 mb-8`}\n          variants={itemVariants}\n        >\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>\n              Recent Activity\n            </h2>\n            <Link\n              to=\"/merch-store/orders-received\"\n              className=\"px-4 py-2 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#D4145A] transition-colors\"\n            >\n              View All Orders\n            </Link>\n          </div>\n\n          {/* Activity List */}\n          <motion.div \n            className=\"space-y-4\"\n            variants={containerVariants}\n          >\n            {recentOrders.length === 0 ? (\n              <motion.div\n                variants={itemVariants}\n                className={`text-center py-8 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}\n              >\n                No orders yet\n              </motion.div>\n            ) : (\n              recentOrders.map((order) => (\n                <motion.div\n                  key={order.id}\n                  className={`flex items-center justify-between p-4 ${\n                    isDarkMode ? 'bg-gray-700' : 'bg-gray-50'\n                  } rounded-lg`}\n                  variants={itemVariants}\n                >\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"p-2 bg-[#FF1B6B] bg-opacity-10 rounded-full\">\n                      <FiTrendingUp className=\"text-[#FF1B6B] text-xl\" />\n                    </div>\n                    <div>\n                      <p className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-800'}`}>\n                        New order received\n                      </p>\n                      <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                        {new Date(order.createdAt?.toDate()).toLocaleString()}\n                      </p>\n                    </div>\n                  </div>\n                  <span className=\"text-[#FF1B6B] font-medium\">\n                    ${order.total.toFixed(2)}\n                  </span>\n                </motion.div>\n              ))\n            )}\n          </motion.div>\n        </motion.div>\n\n        {/* Withdrawal History */}\n        <motion.div \n          className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-lg p-6 mb-8`}\n          variants={itemVariants}\n        >\n          <h2 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} mb-6`}>\n            Withdrawal History\n          </h2>\n          \n          {withdrawals.length > 0 ? (\n            <div className=\"w-full\">\n              <table className=\"w-full divide-y divide-gray-200\">\n                <thead className={`${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'}`}>\n                  <tr>\n                    <th className={`px-6 py-3 text-left text-xs font-medium ${\n                      isDarkMode ? 'text-gray-300' : 'text-gray-500'\n                    } uppercase tracking-wider`}>Date</th>\n                    <th className={`px-6 py-3 text-left text-xs font-medium ${\n                      isDarkMode ? 'text-gray-300' : 'text-gray-500'\n                    } uppercase tracking-wider`}>Amount</th>\n                    <th className={`px-6 py-3 text-left text-xs font-medium ${\n                      isDarkMode ? 'text-gray-300' : 'text-gray-500'\n                    } uppercase tracking-wider w-[300px]`}>Status</th>\n                    <th className={`px-6 py-3 text-left text-xs font-medium ${\n                      isDarkMode ? 'text-gray-300' : 'text-gray-500'\n                    } uppercase tracking-wider`}>Transaction</th>\n                  </tr>\n                </thead>\n                <tbody className={`${isDarkMode ? 'divide-gray-700' : 'bg-white divide-y divide-gray-200'}`}>\n                  {withdrawals.map((withdrawal) => (\n                    <tr key={withdrawal.id} className={isDarkMode ? 'bg-gray-800' : 'bg-white'}>\n                      <td className={`px-6 py-4 text-sm ${\n                        isDarkMode ? 'text-gray-300' : 'text-gray-900'\n                      }`}>\n                        {withdrawal.timestamp ? new Date(withdrawal.timestamp).toLocaleString() : 'N/A'}\n                      </td>\n                      <td className={`px-6 py-4 text-sm ${\n                        isDarkMode ? 'text-gray-300' : 'text-gray-900'\n                      }`}>\n                        ${withdrawal.amount.toFixed(2)}\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n                          withdrawal.completed\n                            ? isDarkMode \n                              ? 'bg-green-900 text-green-200' \n                              : 'bg-green-100 text-green-800'\n                            : isDarkMode\n                              ? 'bg-yellow-900 text-yellow-200'\n                              : 'bg-yellow-100 text-yellow-800'\n                        }`}>\n                          {withdrawal.completed ? 'Completed' : 'Processing'}\n                        </span>\n                        {withdrawal.isRefund && (\n                          <span className={`ml-2 px-2 py-1 text-xs font-medium rounded-full ${\n                            isDarkMode \n                              ? 'bg-blue-900 text-blue-200' \n                              : 'bg-blue-100 text-blue-800'\n                          }`}>\n                            Refund\n                          </span>\n                        )}\n                      </td>\n                      <td className={`px-6 py-4 text-sm ${\n                        isDarkMode ? 'text-gray-300' : 'text-gray-900'\n                      }`}>\n                        {withdrawal.transactionHash ? (\n                          <a\n                            href={`${withdrawal.network === 'unichain' \n                              ? 'https://unichain-sepolia.blockscout.com/tx/'\n                              : 'https://polygonscan.com/tx/'\n                            }${withdrawal.transactionHash}`}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"text-[#FF1B6B] hover:underline\"\n                          >\n                            View Transaction\n                          </a>\n                        ) : (\n                          'Pending'\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <div className={`text-center py-8 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n              No withdrawals yet\n            </div>\n          )}\n        </motion.div>\n\n        {/* Terms Modal */}\n        <WithdrawalTermsModal\n          isOpen={isTermsModalOpen}\n          onClose={() => setIsTermsModalOpen(false)}\n          onAccept={async () => {\n            try {\n              const provider = await detectEthereumProvider();\n              if (!provider) {\n                toast.error('Please install MetaMask to withdraw funds');\n                return;\n              }\n\n              const accounts = await provider.request({ method: 'eth_requestAccounts' });\n              if (accounts.length === 0) {\n                toast.error('Please connect your wallet');\n                return;\n              }\n\n              // Verify that the connected wallet matches the seller's registered wallet\n              if (accounts[0].toLowerCase() !== sellerData.walletAddress.toLowerCase()) {\n                toast.error('Please use the wallet address registered in your seller settings');\n                return;\n              }\n\n              const balance = selectedToken === 'USDC' ? stats.balances.USDC : stats.balances.USDT;\n              if (balance < minWithdrawal) {\n                toast.error(`Minimum withdrawal amount is ${minWithdrawal} ${selectedToken}`);\n                return;\n              }\n\n              // Get network and contract\n              const networkId = sellerData.preferredNetwork === 'unichain' ? 1301 : 137;\n              if (window.ethereum.networkVersion !== networkId.toString()) {\n                try {\n                  if (networkId === 1301) {\n                    // Switch to Unichain testnet\n                    await window.ethereum.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [{\n                        chainId: '0x515',\n                        chainName: 'Unichain Testnet',\n                        nativeCurrency: {\n                          name: 'UNW',\n                          symbol: 'UNW',\n                          decimals: 18\n                        },\n                        rpcUrls: [import.meta.env.VITE_UNICHAIN_RPC_URL],\n                        blockExplorerUrls: [import.meta.env.VITE_UNICHAIN_EXPLORER_URL]\n                      }]\n                    });\n                  } else {\n                    // Switch to Polygon\n                    await window.ethereum.request({\n                      method: 'wallet_switchEthereumChain',\n                      params: [{ chainId: '0x89' }], // 137 in hex\n                    });\n                  }\n                } catch (switchError) {\n                  // This error code indicates that the chain has not been added to MetaMask\n                  if (switchError.code === 4902) {\n                    try {\n                      await window.ethereum.request({\n                        method: 'wallet_addEthereumChain',\n                        params: [\n                          {\n                            chainId: '0x89',\n                            chainName: 'Polygon Mainnet',\n                            nativeCurrency: {\n                              name: 'MATIC',\n                              symbol: 'MATIC',\n                              decimals: 18\n                            },\n                            rpcUrls: ['https://polygon-rpc.com/'],\n                            blockExplorerUrls: ['https://polygonscan.com/']\n                          }\n                        ]\n                      });\n                    } catch (addError) {\n                      toast.error('Failed to add network to MetaMask');\n                      return;\n                    }\n                  } else {\n                    toast.error(`Please switch to ${sellerData.preferredNetwork} network in MetaMask`);\n                    return;\n                  }\n                }\n              }\n\n              const ethProvider = new ethers.BrowserProvider(window.ethereum);\n              const signer = await ethProvider.getSigner();\n              const merchPlatform = getMerchPlatformContract(signer, networkId.toString());\n\n              // Get token contract address based on network and token\n              const tokenAddress = selectedToken === 'USDC' \n                ? (networkId === 1301 ? import.meta.env.VITE_UNICHAIN_USDC_ADDRESS : import.meta.env.VITE_USDC_ADDRESS_POLYGON)\n                : (networkId === 1301 ? import.meta.env.VITE_UNICHAIN_USDT_ADDRESS : import.meta.env.VITE_USDT_ADDRESS_POLYGON);\n\n              // Convert amount to proper decimals (6 for USDT/USDC)\n              const withdrawalAmount = parseTokenAmount(balance);\n\n              // Call contract to request withdrawal\n              const tx = await merchPlatform.requestWithdrawal(\n                tokenAddress,\n                withdrawalAmount\n              );\n\n              // Show pending toast\n              const pendingToast = toast.loading('Processing withdrawal request...');\n\n              // Wait for transaction confirmation\n              await tx.wait();\n\n              // Create withdrawal record in Firestore\n              await addDoc(collection(db, 'withdrawals'), {\n                sellerId: user.sellerId,\n                amount: balance,\n                token: selectedToken,\n                fee: 0,\n                netAmount: balance,\n                status: 'pending',\n                walletAddress: accounts[0],\n                network: sellerData.preferredNetwork,\n                timestamp: serverTimestamp(),\n                requestedAt: Date.now(),\n                processingDays: 3,\n                transactionHash: tx.hash\n              });\n\n              // Dismiss pending toast and show success\n              toast.dismiss(pendingToast);\n              toast.success('Withdrawal request submitted successfully');\n              \n              // Refresh dashboard data\n              fetchDashboardData();\n            } catch (error) {\n              console.error('Withdrawal error:', error);\n              toast.error(error.message || 'Failed to process withdrawal');\n            }\n          }}\n          token={selectedToken}\n        />\n\n        {/* Pending Refunds Alert */}\n        {stats.pendingRefunds && (stats.pendingRefunds.USDC > 0 || stats.pendingRefunds.USDT > 0) && (\n          <div className={`${\n            isDarkMode \n              ? 'bg-yellow-900/20 border-yellow-800' \n              : 'bg-yellow-50 border-yellow-100'\n          } border rounded-lg p-4 mt-4`}>\n            <div className=\"flex items-start gap-2\">\n              <FiAlertCircle className={`${\n                isDarkMode ? 'text-yellow-500' : 'text-yellow-500'\n              } text-lg mt-0.5`} />\n              <div>\n                <p className={`text-sm font-medium ${\n                  isDarkMode ? 'text-yellow-400' : 'text-yellow-800'\n                }`}>Pending Refunds</p>\n                <div className=\"mt-2 space-y-1\">\n                  {stats.pendingRefunds.USDC > 0 && (\n                    <p className={`text-sm ${\n                      isDarkMode ? 'text-yellow-300' : 'text-yellow-700'\n                    }`}>\n                      USDC: ${stats.pendingRefunds.USDC.toFixed(2)}\n                    </p>\n                  )}\n                  {stats.pendingRefunds.USDT > 0 && (\n                    <p className={`text-sm ${\n                      isDarkMode ? 'text-yellow-300' : 'text-yellow-700'\n                    }`}>\n                      USDT: ${stats.pendingRefunds.USDT.toFixed(2)}\n                    </p>\n                  )}\n                </div>\n                <p className={`text-xs ${\n                  isDarkMode ? 'text-yellow-400/80' : 'text-yellow-600'\n                } mt-2`}>\n                  These amounts are reserved for potential refunds and have been deducted from your available balance.\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </motion.div>\n    </>\n  );\n};\n\nexport default SellerDashboard; ","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { BiImageAdd, BiTrash, BiInfoCircle } from 'react-icons/bi';\nimport { toast } from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { storage, db } from '../../firebase/merchConfig';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { collection, addDoc, doc, getDoc, serverTimestamp } from 'firebase/firestore';\n\nconst styles = `\n  :root {\n    color-scheme: light;\n  }\n  \n  .dark input[type=\"datetime-local\"] {\n    color-scheme: dark;\n    background-color: #1a1b1f !important;\n    color: #fff !important;\n  }\n\n  .dark input[type=\"datetime-local\"]::-webkit-calendar-picker-indicator {\n    filter: invert(1) !important;\n    opacity: 0.7;\n  }\n\n  .dark input[type=\"datetime-local\"]::-webkit-calendar-picker-indicator:hover {\n    opacity: 1;\n  }\n\n  .dark input[type=\"datetime-local\"]::-webkit-datetime-edit {\n    color: #fff !important;\n  }\n\n  .dark input[type=\"datetime-local\"]::-webkit-datetime-edit-fields-wrapper {\n    color: #fff !important;\n  }\n\n  input[type=\"datetime-local\"] {\n    color-scheme: light !important;\n    background-color: white !important;\n    color: #1F2937 !important;\n  }\n\n  input[type=\"datetime-local\"]::-webkit-calendar-picker-indicator {\n    filter: none !important;\n    color: #1F2937 !important;\n    opacity: 0.7;\n  }\n\n  input[type=\"datetime-local\"]::-webkit-calendar-picker-indicator:hover {\n    opacity: 1;\n  }\n\n  input[type=\"datetime-local\"]::-webkit-datetime-edit {\n    color: #1F2937 !important;\n  }\n\n  input[type=\"datetime-local\"]::-webkit-datetime-edit-fields-wrapper {\n    color: #1F2937 !important;\n  }\n\n  /* Style the checkbox */\n  input[type=\"checkbox\"] {\n    accent-color: #FF1B6B !important;\n    border-color: #FF1B6B !important;\n  }\n\n  input[type=\"checkbox\"]:checked {\n    background-color: #FF1B6B !important;\n    border-color: #FF1B6B !important;\n  }\n\n  input[type=\"checkbox\"]:focus {\n    box-shadow: 0 0 0 2px rgba(255, 27, 107, 0.3) !important;\n  }\n`;\n\n// Token logos and networks\nconst NETWORK_INFO = {\n  polygon: {\n    name: 'Polygon',\n    logo: '/polygon.png',\n    tokens: {\n      USDT: {\n        logo: '/logos/usdt.png',\n        name: 'USDT (Tether)',\n        decimals: 6\n      },\n      USDC: {\n        logo: '/logos/usdc.png',\n        name: 'USDC (USD Coin)',\n        decimals: 6\n      }\n    }\n  },\n  unichain: {\n    name: 'Unichain',\n    logo: '/unichain-logo.png',\n    tokens: {\n      USDT: {\n        logo: '/logos/usdt.png',\n        name: 'USDT (Tether)',\n        decimals: 6\n      }\n    }\n  }\n};\n\nconst SkeletonPulse = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      className={`w-full h-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-lg`}\n      animate={{\n        opacity: [0.4, 0.7, 0.4]\n      }}\n      transition={{\n        duration: 1.5,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n    />\n  );\n};\n\nconst AddProductSkeleton = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <div className=\"max-w-2xl mx-auto p-6\">\n      {/* Title Skeleton */}\n      <div className=\"w-48 h-8 mb-6\">\n        <SkeletonPulse />\n      </div>\n\n      <div className={`space-y-6 ${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm p-6`}>\n        {/* Image Upload Skeleton */}\n        <div className=\"space-y-3\">\n          <div className=\"w-64 h-5\">\n            <SkeletonPulse />\n          </div>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n            {[1, 2, 3].map((i) => (\n              <div key={i} className=\"aspect-square\">\n                <SkeletonPulse />\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Form Fields Skeleton */}\n        <div className=\"grid grid-cols-1 gap-4\">\n          {/* Product Name */}\n          <div className=\"space-y-2\">\n            <div className=\"w-32 h-5\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-full h-10\">\n              <SkeletonPulse />\n            </div>\n          </div>\n\n          {/* Category */}\n          <div className=\"space-y-2\">\n            <div className=\"w-24 h-5\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-full h-10\">\n              <SkeletonPulse />\n            </div>\n          </div>\n\n          {/* Price and Quantity */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-2\">\n              <div className=\"w-16 h-5\">\n                <SkeletonPulse />\n              </div>\n              <div className=\"w-full h-10\">\n                <SkeletonPulse />\n              </div>\n            </div>\n            <div className=\"space-y-2\">\n              <div className=\"w-32 h-5\">\n                <SkeletonPulse />\n              </div>\n              <div className=\"w-full h-10\">\n                <SkeletonPulse />\n              </div>\n            </div>\n          </div>\n\n          {/* Description */}\n          <div className=\"space-y-2\">\n            <div className=\"w-28 h-5\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-full h-32\">\n              <SkeletonPulse />\n            </div>\n          </div>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-end pt-4\">\n            <div className=\"w-32 h-10\">\n              <SkeletonPulse />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SHOE_SIZES = [\n  \"US 6 / EU 39\",\n  \"US 6.5 / EU 39.5\",\n  \"US 7 / EU 40\",\n  \"US 7.5 / EU 40.5\",\n  \"US 8 / EU 41\",\n  \"US 8.5 / EU 41.5\",\n  \"US 9 / EU 42\",\n  \"US 9.5 / EU 42.5\",\n  \"US 10 / EU 43\",\n  \"US 10.5 / EU 43.5\",\n  \"US 11 / EU 44\",\n  \"US 11.5 / EU 44.5\",\n  \"US 12 / EU 45\",\n  \"US 13 / EU 46\"\n];\n\nconst AddProduct = () => {\n  const { user } = useMerchAuth();\n  const navigate = useNavigate();\n  const { isDarkMode } = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [imageFiles, setImageFiles] = useState([]);\n  const [imagePreview, setImagePreview] = useState([]);\n  const [productData, setProductData] = useState({\n    name: '',\n    description: '',\n    price: '',\n    quantity: '',\n    category: '',\n    subCategory: '',\n    images: [],\n    network: 'polygon',\n    acceptedToken: 'USDC',\n    tokenLogo: '/logos/usdc.png',\n    shippingFee: 0,\n    shippingInfo: '',\n    hasVariants: false,\n    selectedSizes: [],\n    selectedColors: [],\n    colorQuantities: {},\n    hasDiscount: false,\n    discountPercent: 0\n  });\n\n  const SIZES = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL'];\n  const COLORS = [\n    { name: 'Black', value: '#000000' },\n    { name: 'White', value: '#FFFFFF' },\n    { name: 'Gray', value: '#808080' },\n    { name: 'Red', value: '#FF0000' },\n    { name: 'Blue', value: '#0000FF' },\n    { name: 'Green', value: '#008000' },\n    { name: 'Yellow', value: '#FFFF00' },\n    { name: 'Purple', value: '#800080' },\n    { name: 'Pink', value: '#FFC0CB' },\n    { name: 'Brown', value: '#A52A2A' }\n  ];\n\n  const NETWORKS = [\n    { id: 'polygon', name: 'Polygon', logo: '/polygon.png' },\n    { id: 'unichain', name: 'Unichain Testnet', logo: '/unichain-logo.png' }\n  ];\n\n  const CLOTHING_SUBCATEGORIES = {\n    \"Men's Wear\": [\n      \"T-Shirts\",\n      \"Shirts\",\n      \"Pants\",\n      \"Hoodies\",\n      \"Jackets\",\n      \"Suits\"\n    ],\n    \"Women's Wear\": [\n      \"Dresses\",\n      \"Tops\",\n      \"Skirts\",\n      \"Pants\",\n      \"Blouses\",\n      \"Jackets\"\n    ],\n    \"Footwear\": [\n      \"Sneakers\",\n      \"Formal Shoes\",\n      \"Boots\",\n      \"Sandals\",\n      \"Slippers\"\n    ]\n  };\n\n  const ACCESSORIES_SUBCATEGORIES = {\n    \"Fashion Accessories\": [\n      \"Bags\",\n      \"Belts\",\n      \"Hats\",\n      \"Scarves\",\n      \"Jewelry\"\n    ],\n    \"Tech Accessories\": [\n      \"Phone Cases\",\n      \"Laptop Bags\",\n      \"Headphone Cases\",\n      \"Tablet Covers\",\n      \"Chargers\",\n      \"Headphones\",\n      \"Speakers\",\n      \"MP3 Players\",\n      \"Sound Systems\",\n      \"Audio Cables\"\n    ]\n  };\n\n  const [sizes, setSizes] = useState([]);\n  const [selectedSizes, setSelectedSizes] = useState([]);\n  const [quantities, setQuantities] = useState({});\n\n  const isFootwearProduct = () => {\n    return productData.category === 'clothing' && \n           productData.subCategory && \n           productData.subCategory.split(' - ')[0] === 'Footwear';\n  };\n\n  useEffect(() => {\n    if (isFootwearProduct()) {\n      setSizes(SHOE_SIZES);\n      setSelectedSizes([]);\n      setQuantities({});\n    } else {\n      setSizes(['XS', 'S', 'M', 'L', 'XL', 'XXL']);\n      setSelectedSizes([]);\n      setQuantities({});\n    }\n  }, [productData.category, productData.subCategory]);\n\n  useEffect(() => {\n    const loadSellerPreferences = async () => {\n      try {\n        if (!user?.sellerId) {\n          setLoading(false);\n          return;\n        }\n\n        const sellerDoc = await getDoc(doc(db, 'sellers', user.sellerId));\n        if (sellerDoc.exists()) {\n          const sellerData = sellerDoc.data();\n          if (!sellerData.preferredNetwork || !sellerData.preferredToken) {\n            setLoading(false);\n            return;\n          }\n\n          setProductData(prev => ({\n            ...prev,\n            network: sellerData.preferredNetwork,\n            acceptedToken: sellerData.preferredToken,\n            tokenLogo: `/logos/${sellerData.preferredToken.toLowerCase()}.png`,\n            shippingFee: sellerData.shippingFee || 0\n          }));\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error loading seller preferences:', error);\n        setLoading(false);\n      }\n    };\n\n    loadSellerPreferences();\n  }, [user?.sellerId]);\n\n  if (loading) {\n    return <div className=\"flex justify-center items-center min-h-screen\">\n      <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-[#FF1B6B]\"></div>\n    </div>;\n  }\n\n  // Check if preferences are set\n  if (!productData.network || !productData.acceptedToken) {\n    return (\n      <div className=\"max-w-4xl mx-auto p-6\">\n        <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-yellow-800\">\n                Network and Payment Preferences Required\n              </h3>\n              <div className=\"mt-2 text-sm text-yellow-700\">\n                <p>\n                  Before adding products, you need to set your preferred network and payment token in your store settings.\n                </p>\n              </div>\n              <div className=\"mt-4\">\n                <button\n                  onClick={() => navigate('/merch/settings')}\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-[#FF1B6B] hover:bg-[#D4145A] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B]\"\n                >\n                  Go to Settings\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'category') {\n      setProductData(prev => ({\n        ...prev,\n        category: value,\n        subCategory: '',\n        hasVariants: false,\n        selectedSizes: [],\n        selectedColors: []\n      }));\n    } else {\n      setProductData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  const handleImageUpload = (e) => {\n    const files = Array.from(e.target.files);\n    \n    // Validate number of images\n    if (imageFiles.length + files.length > 5) {\n      toast.error('Maximum 5 images allowed');\n      return;\n    }\n\n    // Validate file size (2MB = 2 * 1024 * 1024 bytes)\n    const invalidFiles = files.filter(file => file.size > 2 * 1024 * 1024);\n    if (invalidFiles.length > 0) {\n      toast.error('Each image must be less than 2MB');\n      return;\n    }\n\n    // Create preview URLs\n    const newPreviews = files.map(file => URL.createObjectURL(file));\n    \n    setImageFiles(prev => [...prev, ...files]);\n    setImagePreview(prev => [...prev, ...newPreviews]);\n  };\n\n  const removeImage = (index) => {\n    URL.revokeObjectURL(imagePreview[index]); // Clean up URL object\n    setImageFiles(prev => prev.filter((_, i) => i !== index));\n    setImagePreview(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const uploadImages = async (files) => {\n    const uploadPromises = files.map(async (file) => {\n      const storageRef = ref(storage, `products/${user.uid}/${Date.now()}-${file.name}`);\n      const snapshot = await uploadBytes(storageRef, file);\n      return getDownloadURL(snapshot.ref);\n    });\n\n    return Promise.all(uploadPromises);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n\n    try {\n      // Check if user is a seller\n      if (!user?.sellerId) {\n        toast.error('You must be a registered seller to add products');\n        setSubmitting(false);\n        return;\n      }\n\n      // Get seller info\n      const sellerDoc = await getDoc(doc(db, 'sellers', user.sellerId));\n      if (!sellerDoc.exists()) {\n        toast.error('Seller information not found');\n        setSubmitting(false);\n        return;\n      }\n      const sellerData = sellerDoc.data();\n\n      // Validate required fields\n      if (!productData.name || !productData.description || !productData.price) {\n        toast.error('Please fill in all required fields');\n        setSubmitting(false);\n        return;\n      }\n\n      // Validate images\n      if (imageFiles.length === 0) {\n        toast.error('Please add at least one product image');\n        setSubmitting(false);\n        return;\n      }\n\n      // Upload images first\n      const imageUrls = await uploadImages(imageFiles);\n\n      // Validate sizes for footwear\n      if (isFootwearProduct() && productData.hasVariants && productData.selectedSizes.length === 0) {\n        toast.error('Please select at least one shoe size');\n        setSubmitting(false);\n        return;\n      }\n\n      // Validate quantities for selected sizes\n      if (productData.hasVariants) {\n        const totalQuantity = Object.values(productData.colorQuantities).reduce((sum, qty) => sum + Number(qty), 0);\n        if (totalQuantity === 0) {\n          toast.error('Please specify quantities for all selected colors');\n          setSubmitting(false);\n          return;\n        }\n      }\n\n      // Format the discountEndsAt date properly\n      let discountEndsAt = null;\n      if (productData.hasDiscount && productData.discountEndsAt) {\n        discountEndsAt = new Date(productData.discountEndsAt).toISOString();\n      }\n\n      // Calculate discounted price if discount is applied\n      const discountedPrice = productData.hasDiscount ? \n        Number(productData.price) * (1 - Number(productData.discountPercent) / 100) : \n        Number(productData.price);\n\n      // Prepare product data for Firestore\n      const newProductData = {\n        name: productData.name,\n        description: productData.description,\n        price: Number(productData.price),\n        category: productData.category,\n        subCategory: productData.subCategory,\n        images: imageUrls,\n        network: productData.network,\n        acceptedToken: productData.acceptedToken,\n        tokenLogo: productData.tokenLogo,\n        shippingFee: Number(productData.shippingFee),\n        shippingInfo: productData.shippingInfo,\n        hasVariants: productData.hasVariants,\n        sizes: productData.hasVariants ? productData.selectedSizes : [],\n        colors: productData.hasVariants ? productData.selectedColors : [],\n        colorQuantities: productData.hasVariants ? productData.colorQuantities : {},\n        quantity: productData.hasVariants ? \n          Object.values(productData.colorQuantities).reduce((a, b) => a + Number(b), 0) : \n          Number(productData.quantity),\n        hasDiscount: productData.hasDiscount,\n        discountPercent: productData.hasDiscount ? Number(productData.discountPercent) : 0,\n        discountEndsAt: discountEndsAt,\n        discountedPrice: discountedPrice,\n        status: 'active',\n        createdAt: serverTimestamp(),\n        updatedAt: serverTimestamp(),\n        sellerId: user.sellerId,\n        sellerName: sellerData.storeName || 'Anonymous',\n        soldCount: 0\n      };\n\n      // Remove empty or undefined values\n      Object.keys(newProductData).forEach(key => {\n        if (newProductData[key] === undefined || newProductData[key] === '' || newProductData[key] === null) {\n          delete newProductData[key];\n        }\n      });\n\n      const docRef = await addDoc(collection(db, 'products'), newProductData);\n      \n      toast.success('Product added successfully');\n      navigate(`/merch-store/product/${docRef.id}`);\n    } catch (error) {\n      console.error('Error adding product:', error);\n      toast.error('Failed to add product');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleSizeToggle = (size) => {\n    setProductData(prev => ({\n      ...prev,\n      selectedSizes: prev.selectedSizes.includes(size)\n        ? prev.selectedSizes.filter(s => s !== size)\n        : [...prev.selectedSizes, size]\n    }));\n  };\n\n  const handleColorToggle = (color) => {\n    setProductData(prev => ({\n      ...prev,\n      selectedColors: prev.selectedColors.includes(color.name)\n        ? prev.selectedColors.filter(c => c !== color.name)\n        : [...prev.selectedColors, color.name]\n    }));\n  };\n\n  const handleNetworkChange = (networkId) => {\n    setProductData(prev => ({\n      ...prev,\n      network: networkId\n    }));\n  };\n\n  const handleSubCategorySelect = (mainCategory, subItem) => {\n    setProductData(prev => ({\n      ...prev,\n      subCategory: `${mainCategory} - ${subItem}`\n    }));\n  };\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 100\n      }\n    }\n  };\n\n  if (loading) {\n    return <AddProductSkeleton />;\n  }\n\n  return (\n    <motion.div\n      className={`max-w-4xl mx-auto p-6 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}\n      initial=\"hidden\"\n      animate=\"visible\"\n      variants={containerVariants}\n    >\n      <style>{styles}</style>\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-2xl shadow-sm p-6`}>\n        <motion.div variants={itemVariants}>\n          <h1 className={`text-2xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} mb-2`}>Add New Product</h1>\n          <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'} text-sm mb-6`}>Fill in the details for your new product listing</p>\n        </motion.div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-8\">\n          {/* Image Upload Section */}\n          <motion.div variants={itemVariants} className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n            <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-4`}>\n              Product Images (Max 5 images, 2MB each)\n            </label>\n            <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n              {/* Image Previews */}\n              {imagePreview.map((url, index) => (\n                <motion.div\n                  key={url}\n                  className=\"relative aspect-square rounded-lg overflow-hidden group bg-white\"\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <img\n                    src={url}\n                    alt={`Preview ${index + 1}`}\n                    className=\"w-full h-full object-cover\"\n                  />\n                  <motion.button\n                    type=\"button\"\n                    className=\"absolute top-2 right-2 p-1.5 bg-red-500 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\n                    whileHover={{ scale: 1.1 }}\n                    whileTap={{ scale: 0.9 }}\n                    onClick={() => removeImage(index)}\n                  >\n                    <BiTrash size={16} />\n                  </motion.button>\n                </motion.div>\n              ))}\n\n              {/* Upload Button */}\n              {imagePreview.length < 5 && (\n                <motion.label\n                  className={`aspect-square rounded-lg border-2 border-dashed ${\n                    isDarkMode \n                      ? 'border-gray-600 hover:border-[#FF1B6B]' \n                      : 'border-gray-300 hover:border-[#FF1B6B]'\n                  } flex flex-col items-center justify-center cursor-pointer transition-colors ${\n                    isDarkMode ? 'bg-gray-800' : 'bg-white'\n                  }`}\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                >\n                  <BiImageAdd className={`w-8 h-8 ${isDarkMode ? 'text-gray-400' : 'text-gray-400'}`} />\n                  <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-2`}>Add Image</span>\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleImageUpload}\n                    className=\"hidden\"\n                    multiple\n                  />\n                </motion.label>\n              )}\n            </div>\n          </motion.div>\n\n          {/* Basic Product Details */}\n          <motion.div variants={itemVariants} className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-1`}>\n                Product Name *\n              </label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={productData.name}\n                onChange={handleInputChange}\n                required\n                className={`w-full px-4 py-2 border ${\n                  isDarkMode \n                    ? 'border-gray-600 bg-gray-700 text-white focus:border-[#FF1B6B]' \n                    : 'border-gray-300 bg-white text-gray-900 focus:border-[#FF1B6B]'\n                } rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors`}\n                placeholder=\"Enter product name\"\n              />\n            </div>\n\n            <div>\n              <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-1`}>\n                Category *\n              </label>\n              <select\n                name=\"category\"\n                value={productData.category}\n                onChange={handleInputChange}\n                required\n                className={`w-full px-4 py-2 border ${\n                  isDarkMode \n                    ? 'border-gray-600 bg-gray-700 text-white' \n                    : 'border-gray-300 bg-white text-gray-900'\n                } rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors appearance-none`}\n              >\n                <option value=\"\">Select Category</option>\n                <option value=\"clothing\">Clothing</option>\n                <option value=\"accessories\">Accessories</option>\n                <option value=\"electronics\">Electronics</option>\n                <option value=\"home\">Home</option>\n                <option value=\"art\">Art</option>\n                <option value=\"collectibles\">Collectibles</option>\n              </select>\n            </div>\n          </motion.div>\n\n          {/* Subcategory Section */}\n          {(productData.category === 'clothing' || productData.category === 'accessories') && (\n            <motion.div variants={itemVariants} className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n              <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-4`}>\n                Product Type *\n              </label>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Main Categories */}\n                <div className=\"space-y-4\">\n                  {Object.entries(productData.category === 'clothing' ? CLOTHING_SUBCATEGORIES : ACCESSORIES_SUBCATEGORIES)\n                    .map(([mainCategory, subItems]) => (\n                    <div key={mainCategory} className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-4`}>\n                      <h3 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-3`}>{mainCategory}</h3>\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        {subItems.map((subItem) => (\n                          <button\n                            key={subItem}\n                            type=\"button\"\n                            onClick={() => handleSubCategorySelect(mainCategory, subItem)}\n                            className={`px-3 py-2 rounded-lg text-sm font-medium transition-colors text-left ${\n                              productData.subCategory === `${mainCategory} - ${subItem}`\n                                ? 'bg-[#FF1B6B] text-white'\n                                : isDarkMode\n                                  ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                            }`}\n                          >\n                            {subItem}\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                {/* Selected Category Display */}\n                <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-4`}>\n                  <h3 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-3`}>Selected Category</h3>\n                  {productData.subCategory ? (\n                    <div className={`${isDarkMode ? 'bg-pink-900/20' : 'bg-pink-50'} border ${isDarkMode ? 'border-pink-900/20' : 'border-pink-100'} rounded-lg p-4`}>\n                      <p className={isDarkMode ? 'text-gray-200' : 'text-gray-700'}>\n                        <span className=\"font-medium\">Main Category:</span>{' '}\n                        {productData.subCategory.split(' - ')[0]}\n                      </p>\n                      <p className={`${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mt-2`}>\n                        <span className=\"font-medium\">Sub Category:</span>{' '}\n                        {productData.subCategory.split(' - ')[1]}\n                      </p>\n                    </div>\n                  ) : (\n                    <div className={`${isDarkMode ? 'bg-gray-700/50 border-gray-600 text-gray-400' : 'bg-gray-50 border-gray-100 text-gray-500'} border rounded-lg p-4`}>\n                      Please select a category from the left\n                    </div>\n                  )}\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {/* Variants Section */}\n          {(productData.category === 'clothing' || productData.category === 'accessories') && (\n            <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n              <div className=\"flex items-center mb-6\">\n                <input\n                  type=\"checkbox\"\n                  id=\"hasVariants\"\n                  name=\"hasVariants\"\n                  checked={productData.hasVariants}\n                  onChange={(e) => {\n                    setProductData(prev => ({\n                      ...prev,\n                      hasVariants: e.target.checked,\n                      sizes: e.target.checked ? prev.selectedSizes : [],\n                      colors: e.target.checked ? prev.selectedColors : []\n                    }));\n                  }}\n                  className=\"h-4 w-4 rounded border-gray-300 text-[#FF1B6B] focus:ring-[#FF1B6B]\"\n                />\n                <label htmlFor=\"hasVariants\" className={`ml-2 text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\n                  This product has size and color variants\n                </label>\n              </div>\n\n              {productData.hasVariants && (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {/* Size Selection */}\n                  <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-4`}>\n                    <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-3`}>\n                      Available Sizes\n                    </label>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {isFootwearProduct() ? (\n                        // Show shoe sizes for footwear\n                        SHOE_SIZES.map(size => (\n                          <button\n                            key={size}\n                            type=\"button\"\n                            onClick={() => handleSizeToggle(size)}\n                            className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\n                              productData.selectedSizes.includes(size)\n                                ? 'bg-[#FF1B6B] text-white'\n                                : isDarkMode\n                                  ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                            }`}\n                          >\n                            {size}\n                          </button>\n                        ))\n                      ) : (\n                        // Show clothing sizes for non-footwear\n                        SIZES.map(size => (\n                          <button\n                            key={size}\n                            type=\"button\"\n                            onClick={() => handleSizeToggle(size)}\n                            className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\n                              productData.selectedSizes.includes(size)\n                                ? 'bg-[#FF1B6B] text-white'\n                                : isDarkMode\n                                  ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                            }`}\n                          >\n                            {size}\n                          </button>\n                        ))\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Color Selection and Quantities */}\n                  <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-4`}>\n                    <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-3`}>\n                      Available Colors & Quantities\n                    </label>\n                    <div className=\"space-y-4\">\n                      {COLORS.map(color => {\n                        const isSelected = productData.selectedColors.includes(color.name);\n                        return (\n                          <div key={color.name} className=\"flex items-center gap-3\">\n                            <button\n                              type=\"button\"\n                              onClick={() => handleColorToggle(color)}\n                              className={`inline-flex items-center gap-2 px-3 py-1.5 rounded-full text-sm font-medium transition-colors ${\n                                isSelected\n                                  ? 'bg-[#FF1B6B] text-white'\n                                  : isDarkMode\n                                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                              }`}\n                            >\n                              <span\n                                className=\"h-4 w-4 rounded-full border border-gray-300 shadow-inner\"\n                                style={{ backgroundColor: color.value }}\n                              />\n                              <span>{color.name}</span>\n                            </button>\n                            \n                            {isSelected && (\n                              <div className=\"flex-1 max-w-[150px]\">\n                                <input\n                                  type=\"number\"\n                                  min=\"0\"\n                                  value={productData.colorQuantities[color.name] || ''}\n                                  onChange={(e) => {\n                                    const value = Math.max(0, parseInt(e.target.value) || 0);\n                                    setProductData(prev => ({\n                                      ...prev,\n                                      colorQuantities: {\n                                        ...prev.colorQuantities,\n                                        [color.name]: value\n                                      }\n                                    }));\n                                  }}\n                                  className={`w-full px-3 py-1.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors text-sm ${\n                                    isDarkMode\n                                      ? 'border-gray-600 bg-gray-700 text-white'\n                                      : 'border-gray-300 bg-white text-gray-900'\n                                  }`}\n                                  placeholder=\"Quantity\"\n                                />\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                    </div>\n                    \n                    {/* Total Quantity Display */}\n                    {productData.selectedColors.length > 0 && (\n                      <div className={`mt-4 pt-4 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n                        <div className=\"flex items-center justify-between text-sm\">\n                          <span className={isDarkMode ? 'text-gray-400' : 'text-gray-600'}>Total Quantity:</span>\n                          <span className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\n                            {Object.values(productData.colorQuantities).reduce((a, b) => a + b, 0)}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Network & Price Section */}\n          <motion.div variants={itemVariants} className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n              <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-3`}>\n                Network & Price\n              </label>\n              <div className=\"space-y-4\">\n                <div className=\"flex gap-3\">\n                  {NETWORKS.filter(network => network.id === productData.network).map(network => (\n                    <div\n                      key={network.id}\n                      className={`flex items-center gap-2 px-4 py-2 rounded-lg border-2 border-[#FF1B6B] ${\n                        isDarkMode ? 'bg-pink-900/20' : 'bg-pink-50'\n                      } flex-1 justify-center`}\n                    >\n                      <img src={network.logo} alt={network.name} className=\"w-5 h-5\" />\n                      <span className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>{network.name}</span>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"relative\">\n                  <input\n                    type=\"number\"\n                    name=\"price\"\n                    value={productData.price}\n                    onChange={handleInputChange}\n                    required\n                    min=\"0\"\n                    step=\"0.01\"\n                    className={`w-full pl-4 pr-24 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                      isDarkMode\n                        ? 'border-gray-600 bg-gray-700 text-white'\n                        : 'border-gray-300 bg-white text-gray-900'\n                    }`}\n                    placeholder=\"0.00\"\n                  />\n                  <div className={`absolute right-0 top-0 bottom-0 w-20 border-l ${\n                    isDarkMode\n                      ? 'border-gray-600 bg-gray-600 text-gray-200'\n                      : 'border-gray-300 bg-gray-50 text-gray-700'\n                  } text-sm rounded-r-lg flex items-center justify-center`}>\n                    {productData.acceptedToken}\n                  </div>\n                </div>\n\n                {/* Discount Section */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"hasDiscount\"\n                      checked={productData.hasDiscount}\n                      onChange={(e) => {\n                        setProductData(prev => ({\n                          ...prev,\n                          hasDiscount: e.target.checked,\n                          discountPercent: e.target.checked ? prev.discountPercent : 0\n                        }));\n                      }}\n                      className=\"h-4 w-4 rounded border-gray-300 text-[#FF1B6B] focus:ring-[#FF1B6B]\"\n                    />\n                    <label htmlFor=\"hasDiscount\" className={`text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\n                      Apply Discount\n                    </label>\n                  </div>\n\n                  {productData.hasDiscount && (\n                    <div className=\"space-y-4\">\n                      <div className=\"relative\">\n                        <input\n                          type=\"number\"\n                          name=\"discountPercent\"\n                          value={productData.discountPercent}\n                          onChange={(e) => {\n                            const value = Math.min(Math.max(0, Number(e.target.value)), 99);\n                            setProductData(prev => ({\n                              ...prev,\n                              discountPercent: value,\n                              discountedPrice: prev.price * (1 - value / 100)\n                            }));\n                          }}\n                          min=\"0\"\n                          max=\"99\"\n                          className={`w-full pl-4 pr-12 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                            isDarkMode\n                              ? 'border-gray-600 bg-gray-700 text-white'\n                              : 'border-gray-300 bg-white text-gray-900'\n                          }`}\n                          placeholder=\"Enter discount percentage\"\n                        />\n                        <div className={`absolute right-0 top-0 bottom-0 w-12 border-l ${\n                          isDarkMode\n                            ? 'border-gray-600 bg-gray-600 text-gray-200'\n                            : 'border-gray-300 bg-gray-50 text-gray-700'\n                        } text-sm rounded-r-lg flex items-center justify-center`}>\n                          %\n                        </div>\n                      </div>\n\n                      <div className=\"relative\">\n                        <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-2`}>\n                          Discount Ends At\n                        </label>\n                        <input\n                          type=\"datetime-local\"\n                          name=\"discountEndsAt\"\n                          value={productData.discountEndsAt ? new Date(productData.discountEndsAt).toISOString().substring(0, 16) : ''}\n                          onChange={(e) => {\n                            const selectedDate = new Date(e.target.value);\n                            const now = new Date();\n                            \n                            if (selectedDate <= now) {\n                              toast.error('Please select a future date and time');\n                              return;\n                            }\n                            \n                            setProductData(prev => ({\n                              ...prev,\n                              discountEndsAt: e.target.value\n                            }));\n                          }}\n                          min={new Date(new Date().getTime() + 60000).toISOString().slice(0, 16)}\n                          className={`w-full pl-4 pr-12 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                            isDarkMode\n                              ? 'border-gray-600 bg-gray-700 text-white'\n                              : 'border-gray-300 bg-white text-gray-900'\n                          }`}\n                        />\n                      </div>\n\n                      {productData.discountPercent > 0 && productData.price > 0 && (\n                        <div className={`${\n                          isDarkMode ? 'bg-pink-900/20 border-pink-900/20' : 'bg-pink-50 border-pink-100'\n                        } border rounded-lg p-3`}>\n                          <p className={isDarkMode ? 'text-gray-300' : 'text-gray-700'}>\n                            <span className=\"font-medium\">Original Price:</span>{' '}\n                            {productData.price} {productData.acceptedToken}\n                          </p>\n                          <p className=\"text-[#FF1B6B] mt-1\">\n                            <span className=\"font-medium\">Discounted Price:</span>{' '}\n                            {(productData.price * (1 - productData.discountPercent / 100)).toFixed(2)} {productData.acceptedToken}\n                          </p>\n                          <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1`}>\n                            <span className=\"font-medium\">Savings:</span>{' '}\n                            {(productData.price * (productData.discountPercent / 100)).toFixed(2)} {productData.acceptedToken}\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                {/* Payment Information Display */}\n                <div className={`flex items-center gap-2 px-4 py-3 ${\n                  isDarkMode ? 'bg-pink-900/20 border-pink-900/20' : 'bg-pink-50 border-pink-100'\n                } rounded-lg border mt-2`}>\n                  <img \n                    src={`/${productData.acceptedToken.toLowerCase()}.png`}\n                    alt={productData.acceptedToken}\n                    className=\"w-5 h-5 object-contain\"\n                  />\n                  <p className={isDarkMode ? 'text-gray-300' : 'text-gray-700'}>\n                    Buyers will pay in <span className=\"font-medium\">{productData.acceptedToken}</span> on <span className=\"font-medium\">{\n                      NETWORKS.find(n => n.id === productData.network)?.name || 'selected'\n                    }</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n              <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-3`}>\n                Quantity Available\n              </label>\n              <input\n                type=\"number\"\n                name=\"quantity\"\n                value={productData.quantity}\n                onChange={handleInputChange}\n                required\n                min=\"1\"\n                className={`w-full px-4 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                  isDarkMode\n                    ? 'border-gray-600 bg-gray-700 text-white'\n                    : 'border-gray-300 bg-white text-gray-900'\n                }`}\n                placeholder=\"Enter available quantity\"\n              />\n            </div>\n          </motion.div>\n\n          {/* Description Section */}\n          <motion.div variants={itemVariants} className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n            <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-3`}>\n              Description *\n            </label>\n            <textarea\n              name=\"description\"\n              value={productData.description}\n              onChange={handleInputChange}\n              required\n              rows={4}\n              className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                isDarkMode\n                  ? 'border-gray-600 bg-gray-700 text-white'\n                  : 'border-gray-300 bg-white text-gray-900'\n              }`}\n              placeholder=\"Describe your product...\"\n            />\n          </motion.div>\n\n          {/* Shipping Section */}\n          <motion.div variants={itemVariants} className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n            <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>Shipping Details</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-2`}>\n                  Shipping Fee (USD)\n                </label>\n                <div className=\"relative\">\n                  <span className={`absolute left-3 top-1/2 -translate-y-1/2 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>$</span>\n                  <input\n                    type=\"number\"\n                    name=\"shippingFee\"\n                    min=\"0\"\n                    step=\"0.01\"\n                    value={productData.shippingFee}\n                    disabled\n                    className={`w-full pl-8 pr-4 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                      isDarkMode\n                        ? 'border-gray-600 bg-gray-700/50 text-gray-400'\n                        : 'border-gray-300 bg-gray-50 text-gray-500'\n                    }`}\n                    placeholder=\"0.00\"\n                  />\n                </div>\n                <p className={`mt-1 text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                  Shipping fee is set in your store settings\n                </p>\n              </div>\n\n              <div>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-2`}>\n                  Shipping Information\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"shippingInfo\"\n                  value={productData.shippingInfo}\n                  onChange={handleInputChange}\n                  className={`w-full px-4 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                    isDarkMode\n                      ? 'border-gray-600 bg-gray-700 text-white'\n                      : 'border-gray-300 bg-white text-gray-900'\n                  }`}\n                  placeholder=\"e.g., Worldwide shipping available\"\n                />\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Submit Button */}\n          <motion.div variants={itemVariants} className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={submitting}\n              className={`px-8 py-3 rounded-lg font-medium text-white ${\n                submitting ? 'bg-gray-400 cursor-not-allowed' : 'bg-[#FF1B6B] hover:bg-[#D4145A]'\n              } transition-colors flex items-center gap-2`}\n            >\n              {submitting ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent\" />\n                  <span>Adding Product...</span>\n                </>\n              ) : (\n                'Add Product'\n              )}\n            </button>\n          </motion.div>\n        </form>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default AddProduct; ","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { BiEdit, BiTrash, BiPlus, BiX } from 'react-icons/bi';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { collection, query, where, getDocs, deleteDoc, doc, getDoc } from 'firebase/firestore';\nimport { ref, deleteObject } from 'firebase/storage';\nimport { db, storage } from '../../firebase/merchConfig';\nimport { toast } from 'react-hot-toast';\n\n// Token logos\nconst TOKEN_INFO = {\n  USDT: {\n    logo: '/logos/usdt.png',\n    name: 'USDT (Tether)',\n    decimals: 6\n  },\n  USDC: {\n    logo: '/logos/usdc.png',\n    name: 'USDC (USD Coin)',\n    decimals: 6\n  }\n};\n\nconst SkeletonPulse = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      className={`w-full h-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-lg`}\n      animate={{\n        opacity: [0.4, 0.7, 0.4]\n      }}\n      transition={{\n        duration: 1.5,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n    />\n  );\n};\n\nconst ProductsSkeleton = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <div className=\"max-w-5xl mx-auto p-4 space-y-6\">\n      {/* Header Skeleton */}\n      <div className=\"flex justify-between items-center\">\n        <div className=\"w-32 h-8\">\n          <SkeletonPulse />\n        </div>\n        <div className=\"w-40 h-10\">\n          <SkeletonPulse />\n        </div>\n      </div>\n\n      {/* Products Grid Skeleton */}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {[1, 2, 3, 4, 5, 6].map((i) => (\n          <div key={i} className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm overflow-hidden`}>\n            <div className=\"aspect-square\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"p-3 space-y-2\">\n              <div className=\"w-3/4 h-5\">\n                <SkeletonPulse />\n              </div>\n              <div className=\"w-1/2 h-4\">\n                <SkeletonPulse />\n              </div>\n              <div className=\"w-1/3 h-4\">\n                <SkeletonPulse />\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst ProductImages = ({ images }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (images.length <= 1) return;\n\n    const timer = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % images.length);\n    }, 3000);\n\n    return () => clearInterval(timer);\n  }, [images]);\n\n  return (\n    <div className=\"relative w-full h-full overflow-hidden\">\n      <AnimatePresence initial={false}>\n        <motion.img\n          key={currentIndex}\n          src={images[currentIndex]}\n          alt=\"Product\"\n          className=\"absolute w-full h-full object-cover\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.5 }}\n        />\n      </AnimatePresence>\n      {images.length > 1 && (\n        <div className=\"absolute bottom-2 left-0 right-0 flex justify-center gap-1\">\n          {images.map((_, index) => (\n            <div\n              key={index}\n              className={`w-1.5 h-1.5 rounded-full transition-colors duration-300 ${\n                index === currentIndex ? 'bg-white' : 'bg-white/50'\n              }`}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst DeleteConfirmationModal = ({ product, onConfirm, onCancel }) => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\"\n    >\n      <motion.div\n        initial={{ scale: 0.95, opacity: 0 }}\n        animate={{ scale: 1, opacity: 1 }}\n        exit={{ scale: 0.95, opacity: 0 }}\n        className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-6 max-w-md w-full`}\n      >\n        <div className=\"flex justify-between items-start mb-4\">\n          <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Delete Product</h3>\n          <button\n            onClick={onCancel}\n            className={`${isDarkMode ? 'text-gray-400 hover:text-gray-300' : 'text-gray-400 hover:text-gray-500'}`}\n          >\n            <BiX className=\"w-5 h-5\" />\n          </button>\n        </div>\n        \n        <div className=\"mb-6\">\n          <div className=\"flex items-center space-x-4 mb-4\">\n            <div className=\"w-16 h-16 rounded-lg overflow-hidden\">\n              <img\n                src={product.images[0]}\n                alt={product.name}\n                className=\"w-full h-full object-cover\"\n              />\n            </div>\n            <div>\n              <h4 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>{product.name}</h4>\n              <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Price: ${product.price}</p>\n            </div>\n          </div>\n          <p className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n            Are you sure you want to delete this product? This action cannot be undone.\n          </p>\n        </div>\n\n        <div className=\"flex justify-end space-x-3\">\n          <button\n            onClick={onCancel}\n            className={`px-4 py-2 ${\n              isDarkMode \n                ? 'text-gray-300 bg-gray-700 hover:bg-gray-600' \n                : 'text-gray-700 bg-gray-100 hover:bg-gray-200'\n            } rounded-lg transition-colors`}\n          >\n            Cancel\n          </button>\n          <button\n            onClick={onConfirm}\n            className=\"px-4 py-2 text-white bg-red-600 rounded-lg hover:bg-red-700 transition-colors\"\n          >\n            Delete Product\n          </button>\n        </div>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nconst Products = () => {\n  const navigate = useNavigate();\n  const { user } = useMerchAuth();\n  const { isDarkMode } = useTheme();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [productToDelete, setProductToDelete] = useState(null);\n  const [sellerPreferences, setSellerPreferences] = useState(null);\n\n  useEffect(() => {\n    if (user?.sellerId) {\n      Promise.all([\n        fetchProducts(),\n        fetchSellerPreferences()\n      ]);\n    }\n  }, [user]);\n\n  const fetchSellerPreferences = async () => {\n    try {\n      const sellerDoc = await getDoc(doc(db, 'sellers', user.sellerId));\n      if (sellerDoc.exists()) {\n        setSellerPreferences(sellerDoc.data());\n      }\n    } catch (error) {\n      console.error('Error fetching seller preferences:', error);\n    }\n  };\n\n  const fetchProducts = async () => {\n    try {\n      const q = query(\n        collection(db, 'products'),\n        where('sellerId', '==', user.sellerId)\n      );\n      \n      const querySnapshot = await getDocs(q);\n      const productsData = querySnapshot.docs.map(doc => {\n        const data = doc.data();\n        // If product doesn't have a token specified, use seller's preferred token\n        if (!data.acceptedToken && sellerPreferences?.preferredToken) {\n          data.acceptedToken = sellerPreferences.preferredToken;\n          data.tokenLogo = TOKEN_INFO[sellerPreferences.preferredToken].logo;\n        }\n        return {\n          id: doc.id,\n          ...data\n        };\n      });\n      \n      setProducts(productsData);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      toast.error('Failed to load products');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (product) => {\n    setProductToDelete(product);\n  };\n\n  const confirmDelete = async () => {\n    try {\n      await deleteDoc(doc(db, 'products', productToDelete.id));\n      const deletePromises = productToDelete.images.map(async (imageUrl) => {\n        const imageRef = ref(storage, imageUrl);\n        return deleteObject(imageRef);\n      });\n      await Promise.all(deletePromises);\n      setProducts(prev => prev.filter(p => p.id !== productToDelete.id));\n      toast.success('Product deleted successfully');\n    } catch (error) {\n      console.error('Error deleting product:', error);\n      toast.error('Failed to delete product');\n    } finally {\n      setProductToDelete(null);\n    }\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 100\n      }\n    }\n  };\n\n  if (loading) {\n    return <ProductsSkeleton />;\n  }\n\n  return (\n    <>\n      <motion.div\n        className={`max-w-5xl mx-auto p-4 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={containerVariants}\n      >\n        <div className=\"flex justify-between items-center mb-4\">\n          <motion.h1 \n            className={`text-xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}\n            variants={itemVariants}\n          >\n            My Products\n          </motion.h1>\n          <motion.div variants={itemVariants}>\n            <Link\n              to=\"/merch-store/add-product\"\n              className=\"flex items-center gap-2 px-3 py-1.5 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#D4145A] transition-colors text-sm\"\n            >\n              <BiPlus className=\"text-lg\" />\n              Add New Product\n            </Link>\n          </motion.div>\n        </div>\n\n        {products.length === 0 ? (\n          <motion.div\n            className={`text-center py-8 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}\n            variants={itemVariants}\n          >\n            <p className=\"mb-4\">You haven't added any products yet.</p>\n            <Link\n              to=\"/merch-store/add-product\"\n              className=\"text-[#FF1B6B] hover:text-[#D4145A] font-medium\"\n            >\n              Add your first product\n            </Link>\n          </motion.div>\n        ) : (\n          <motion.div \n            className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\"\n            variants={containerVariants}\n          >\n            {products.map((product) => (\n              <motion.div\n                key={product.id}\n                className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm overflow-hidden`}\n                variants={itemVariants}\n                whileHover={{ y: -3 }}\n              >\n                <div className=\"aspect-square relative group\">\n                  <ProductImages images={product.images} />\n                  <div className=\"absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center gap-3\">\n                    <motion.button\n                      whileHover={{ scale: 1.1 }}\n                      whileTap={{ scale: 0.9 }}\n                      className=\"p-1.5 bg-white text-gray-800 rounded-full\"\n                      onClick={() => navigate(`/merch-store/edit-product/${product.id}`)}\n                    >\n                      <BiEdit className=\"text-lg\" />\n                    </motion.button>\n                    <motion.button\n                      whileHover={{ scale: 1.1 }}\n                      whileTap={{ scale: 0.9 }}\n                      className=\"p-1.5 bg-white text-red-500 rounded-full\"\n                      onClick={() => handleDelete(product)}\n                    >\n                      <BiTrash className=\"text-lg\" />\n                    </motion.button>\n                  </div>\n                </div>\n                <div className=\"p-3\">\n                  <h3 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} text-sm mb-0.5 truncate`}>{product.name}</h3>\n                  <div className=\"flex items-center gap-2\">\n                    <img \n                      src={product.tokenLogo || TOKEN_INFO[product.acceptedToken]?.logo} \n                      alt={product.acceptedToken} \n                      className=\"w-5 h-5\"\n                    />\n                    <p className=\"text-[#FF1B6B] font-medium text-sm\">\n                      ${product.price.toFixed(2)}\n                    </p>\n                  </div>\n                  <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                    Stock: {product.quantity}\n                  </p>\n                </div>\n              </motion.div>\n            ))}\n          </motion.div>\n        )}\n      </motion.div>\n\n      <AnimatePresence>\n        {productToDelete && (\n          <DeleteConfirmationModal\n            product={productToDelete}\n            onConfirm={confirmDelete}\n            onCancel={() => setProductToDelete(null)}\n          />\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default Products; ","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { BiUpload, BiTrash } from 'react-icons/bi';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { doc, getDoc, updateDoc, serverTimestamp } from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { db, storage } from '../../firebase/merchConfig';\nimport { toast } from 'react-hot-toast';\n\nconst styles = `\n  :root {\n    color-scheme: light;\n  }\n  \n  .dark input[type=\"datetime-local\"] {\n    color-scheme: dark;\n    background-color: #1a1b1f !important;\n    color: #fff !important;\n  }\n\n  .dark input[type=\"datetime-local\"]::-webkit-calendar-picker-indicator {\n    filter: invert(1) !important;\n    opacity: 0.7;\n  }\n\n  .dark input[type=\"datetime-local\"]::-webkit-calendar-picker-indicator:hover {\n    opacity: 1;\n  }\n\n  .dark input[type=\"datetime-local\"]::-webkit-datetime-edit {\n    color: #fff !important;\n  }\n\n  .dark input[type=\"datetime-local\"]::-webkit-datetime-edit-fields-wrapper {\n    color: #fff !important;\n  }\n\n  input[type=\"datetime-local\"] {\n    color-scheme: light !important;\n    background-color: white !important;\n    color: #1F2937 !important;\n  }\n\n  input[type=\"datetime-local\"]::-webkit-calendar-picker-indicator {\n    filter: none !important;\n    color: #1F2937 !important;\n    opacity: 0.7;\n  }\n\n  input[type=\"datetime-local\"]::-webkit-calendar-picker-indicator:hover {\n    opacity: 1;\n  }\n\n  input[type=\"datetime-local\"]::-webkit-datetime-edit {\n    color: #1F2937 !important;\n  }\n\n  input[type=\"datetime-local\"]::-webkit-datetime-edit-fields-wrapper {\n    color: #1F2937 !important;\n  }\n\n  /* Style the checkbox */\n  input[type=\"checkbox\"] {\n    accent-color: #FF1B6B !important;\n    border-color: #FF1B6B !important;\n  }\n\n  input[type=\"checkbox\"]:checked {\n    background-color: #FF1B6B !important;\n    border-color: #FF1B6B !important;\n  }\n\n  input[type=\"checkbox\"]:focus {\n    box-shadow: 0 0 0 2px rgba(255, 27, 107, 0.3) !important;\n  }\n`;\n\n// Token logos and networks\nconst NETWORK_INFO = {\n  polygon: {\n    name: 'Polygon',\n    logo: '/polygon.png',\n    tokens: {\n      USDT: {\n        logo: '/logos/usdt.png',\n        name: 'USDT (Tether)',\n        decimals: 6\n      },\n      USDC: {\n        logo: '/logos/usdc.png',\n        name: 'USDC (USD Coin)',\n        decimals: 6\n      }\n    }\n  },\n  unichain: {\n    name: 'Unichain',\n    logo: '/unichain-logo.png',\n    tokens: {\n      USDT: {\n        logo: '/logos/usdt.png',\n        name: 'USDT (Tether)',\n        decimals: 6\n      },\n      USDC: {\n        logo: '/logos/usdc.png',\n        name: 'USDC (USD Coin)',\n        decimals: 6\n      }\n    }\n  }\n};\n\nconst SHOE_SIZES = [\n  \"US 6 / EU 39\",\n  \"US 6.5 / EU 39.5\",\n  \"US 7 / EU 40\",\n  \"US 7.5 / EU 40.5\",\n  \"US 8 / EU 41\",\n  \"US 8.5 / EU 41.5\",\n  \"US 9 / EU 42\",\n  \"US 9.5 / EU 42.5\",\n  \"US 10 / EU 43\",\n  \"US 10.5 / EU 43.5\",\n  \"US 11 / EU 44\",\n  \"US 11.5 / EU 44.5\",\n  \"US 12 / EU 45\",\n  \"US 13 / EU 46\"\n];\n\nconst EditProduct = () => {\n  const { user } = useMerchAuth();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { isDarkMode } = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [originalProduct, setOriginalProduct] = useState(null);\n  const [hasChanges, setHasChanges] = useState(false);\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 100\n      }\n    }\n  };\n\n  const [product, setProduct] = useState({\n    name: '',\n    description: '',\n    price: '',\n    quantity: '',\n    category: '',\n    subCategory: '',\n    images: [],\n    network: 'polygon',\n    acceptedToken: 'USDT',\n    tokenLogo: '/logos/usdt.png',\n    shippingFee: 0,\n    shippingInfo: '',\n    hasVariants: false,\n    sizes: [],\n    colors: [],\n    colorQuantities: {},\n    hasDiscount: false,\n    discountPercent: 0\n  });\n\n  const CLOTHING_SUBCATEGORIES = {\n    \"Men's Wear\": [\n      \"T-Shirts\",\n      \"Shirts\",\n      \"Pants\",\n      \"Hoodies\",\n      \"Jackets\",\n      \"Suits\"\n    ],\n    \"Women's Wear\": [\n      \"Dresses\",\n      \"Tops\",\n      \"Skirts\",\n      \"Pants\",\n      \"Blouses\",\n      \"Jackets\"\n    ],\n    \"Footwear\": [\n      \"Sneakers\",\n      \"Formal Shoes\",\n      \"Boots\",\n      \"Sandals\",\n      \"Slippers\"\n    ]\n  };\n\n  const ACCESSORIES_SUBCATEGORIES = {\n    \"Fashion Accessories\": [\n      \"Bags\",\n      \"Belts\",\n      \"Hats\",\n      \"Scarves\",\n      \"Jewelry\"\n    ],\n    \"Tech Accessories\": [\n      \"Phone Cases\",\n      \"Laptop Bags\",\n      \"Headphone Cases\",\n      \"Tablet Covers\",\n      \"Chargers\",\n      \"Headphones\",\n      \"Speakers\",\n      \"MP3 Players\",\n      \"Sound Systems\",\n      \"Audio Cables\"\n    ]\n  };\n\n  useEffect(() => {\n    fetchProduct();\n  }, [id]);\n\n  useEffect(() => {\n    if (originalProduct) {\n      const hasModifications = JSON.stringify(originalProduct) !== JSON.stringify(product);\n      setHasChanges(hasModifications);\n    }\n  }, [product, originalProduct]);\n\n  const fetchProduct = async () => {\n    try {\n      const productDoc = await getDoc(doc(db, 'products', id));\n      if (productDoc.exists()) {\n        const data = productDoc.data();\n        if (data.sellerId !== user.sellerId) {\n          toast.error('You do not have permission to edit this product');\n          navigate('/merch-store/products');\n          return;\n        }\n\n        // Get seller's preferred network and shipping fee\n        const sellerDoc = await getDoc(doc(db, 'sellers', user.sellerId));\n        if (sellerDoc.exists()) {\n          const sellerData = sellerDoc.data();\n          if (!sellerData.preferredNetwork) {\n            toast.error('Please set your preferred network in settings first');\n            navigate('/merch-store/settings');\n            return;\n          }\n          // Set the product's network to seller's preferred network and shipping fee\n          data.network = sellerData.preferredNetwork;\n          data.acceptedToken = sellerData.preferredToken;\n          data.shippingFee = sellerData.shippingFee || 0;\n        }\n\n        const productData = {\n          ...data,\n          hasVariants: data.hasVariants || false,\n          sizes: data.sizes || [],\n          colors: data.colors || [],\n          colorQuantities: data.colorQuantities || {}\n        };\n\n        setProduct(productData);\n        setOriginalProduct(productData);\n      } else {\n        toast.error('Product not found');\n        navigate('/merch-store/products');\n      }\n    } catch (error) {\n      console.error('Error fetching product:', error);\n      toast.error('Failed to load product');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'category') {\n      setProduct(prev => ({\n        ...prev,\n        category: value,\n        subCategory: '',\n        hasVariants: false,\n        sizes: [],\n        colors: []\n      }));\n    } else {\n      setProduct(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  const handleSubCategorySelect = (mainCategory, subItem) => {\n    setProduct(prev => ({\n      ...prev,\n      subCategory: `${mainCategory} - ${subItem}`\n    }));\n  };\n\n  const handleImageUpload = async (e) => {\n    const files = Array.from(e.target.files);\n    if (files.length + product.images.length > 5) {\n      toast.error('Maximum 5 images allowed');\n      return;\n    }\n\n    setUploading(true);\n    try {\n      const uploadPromises = files.map(async (file) => {\n        if (file.size > 2 * 1024 * 1024) {\n          throw new Error('Each image must be less than 2MB');\n        }\n\n        const storageRef = ref(storage, `products/${user.sellerId}/${id}/${file.name}`);\n        await uploadBytes(storageRef, file);\n        return getDownloadURL(storageRef);\n      });\n\n      const urls = await Promise.all(uploadPromises);\n      setProduct(prev => ({\n        ...prev,\n        images: [...prev.images, ...urls]\n      }));\n      toast.success('Images uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading images:', error);\n      toast.error(error.message || 'Failed to upload images');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleRemoveImage = async (imageUrl, index) => {\n    try {\n      const imageRef = ref(storage, imageUrl);\n      await deleteObject(imageRef);\n      setProduct(prev => ({\n        ...prev,\n        images: prev.images.filter((_, i) => i !== index)\n      }));\n      toast.success('Image removed successfully');\n    } catch (error) {\n      console.error('Error removing image:', error);\n      toast.error('Failed to remove image');\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n\n    try {\n      // Validate required fields\n      if (!product.name || !product.description || !product.price) {\n        toast.error('Please fill in all required fields');\n        setSubmitting(false);\n        return;\n      }\n\n      // Validate at least one image\n      if (!product.images || product.images.length === 0) {\n        toast.error('Please upload at least one product image');\n        setSubmitting(false);\n        return;\n      }\n\n      // Validate sizes for footwear\n      if (isFootwearProduct() && product.hasVariants) {\n        if (!product.sizes || product.sizes.length === 0) {\n          toast.error('Please select at least one size for footwear');\n          setSubmitting(false);\n          return;\n        }\n      }\n\n      // Calculate discounted price if discount is applied\n      let discountedPrice = null;\n      if (product.hasDiscount && product.discountPercent) {\n        discountedPrice = product.price * (1 - product.discountPercent / 100);\n      }\n\n      // Prepare update data\n      const updateData = {\n        name: product.name,\n        description: product.description,\n        price: parseFloat(product.price),\n        category: product.category,\n        subCategory: product.subCategory,\n        images: product.images,\n        hasVariants: product.hasVariants,\n        hasDiscount: product.hasDiscount,\n        discountPercent: product.hasDiscount ? parseFloat(product.discountPercent) : null,\n        discountEndsAt: product.hasDiscount ? new Date(product.discountEndsAt).toISOString() : null,\n        discountedPrice: discountedPrice,\n        updatedAt: serverTimestamp(),\n      };\n\n      // Add sizes and colors if product has variants\n      if (product.hasVariants) {\n        updateData.sizes = product.sizes;\n        updateData.colors = product.colors;\n        updateData.colorQuantities = product.colorQuantities;\n      }\n\n      // Remove null or undefined values\n      Object.keys(updateData).forEach(key => {\n        if (updateData[key] === null || updateData[key] === undefined) {\n          delete updateData[key];\n        }\n      });\n\n      // Update product in Firestore\n      const productRef = doc(db, 'products', id);\n      await updateDoc(productRef, updateData);\n\n      toast.success('Product updated successfully');\n      navigate(`/merch-store/product/${id}`);\n    } catch (error) {\n      console.error('Error updating product:', error);\n      toast.error('Failed to update product. Please try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const isFootwearProduct = () => {\n    return product.subCategory && \n           product.subCategory.split(' - ')[0] === 'Footwear';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <motion.div\n          className=\"w-6 h-6 border-2 border-[#FF1B6B] border-t-transparent rounded-full\"\n          animate={{ rotate: 360 }}\n          transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className={`max-w-4xl mx-auto p-6 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}\n    >\n      <style>{styles}</style>\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-2xl shadow-sm p-6`}>\n        <motion.div>\n          <h1 className={`text-2xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} mb-2`}>Edit Product</h1>\n          <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'} text-sm mb-6`}>Update your product details and listing information</p>\n        </motion.div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-8\">\n          {/* Product Images */}\n          <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n            <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-4`}>\n              Product Images ({product.images.length}/5)\n            </label>\n            <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n              {product.images.map((url, index) => (\n                <div key={index} className=\"relative aspect-square rounded-lg overflow-hidden group bg-white\">\n                  <img\n                    src={url}\n                    alt={`Product ${index + 1}`}\n                    className=\"w-full h-full object-cover\"\n                  />\n                  <motion.button\n                    type=\"button\"\n                    onClick={() => handleRemoveImage(url, index)}\n                    className=\"absolute top-2 right-2 p-1.5 bg-red-500 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\n                    whileHover={{ scale: 1.1 }}\n                    whileTap={{ scale: 0.9 }}\n                  >\n                    <BiTrash size={16} />\n                  </motion.button>\n                </div>\n              ))}\n              {product.images.length < 5 && (\n                <motion.label\n                  className={`aspect-square rounded-lg border-2 border-dashed ${\n                    isDarkMode \n                      ? 'border-gray-600 hover:border-[#FF1B6B]' \n                      : 'border-gray-300 hover:border-[#FF1B6B]'\n                  } flex flex-col items-center justify-center cursor-pointer transition-colors ${\n                    isDarkMode ? 'bg-gray-800' : 'bg-white'\n                  }`}\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                >\n                  <BiUpload className={`w-8 h-8 ${isDarkMode ? 'text-gray-400' : 'text-gray-400'}`} />\n                  <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-2`}>Add Image</span>\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    onChange={handleImageUpload}\n                    className=\"hidden\"\n                    disabled={uploading}\n                  />\n                </motion.label>\n              )}\n            </div>\n          </div>\n\n          {/* Product Description */}\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-1`}>\n                  Product Name *\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={product.name}\n                  onChange={handleInputChange}\n                  required\n                  className={`w-full px-4 py-2.5 border ${\n                    isDarkMode \n                      ? 'border-gray-600 bg-gray-700 text-white focus:border-[#FF1B6B]' \n                      : 'border-gray-300 bg-white text-gray-900 focus:border-[#FF1B6B]'\n                  } rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors`}\n                  placeholder=\"Enter product name\"\n                />\n              </div>\n\n              <div>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-1`}>\n                  Category *\n                </label>\n                <select\n                  name=\"category\"\n                  value={product.category}\n                  onChange={handleInputChange}\n                  required\n                  className={`w-full px-4 py-2.5 border ${\n                    isDarkMode \n                      ? 'border-gray-600 bg-gray-700 text-white' \n                      : 'border-gray-300 bg-white text-gray-900'\n                  } rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors appearance-none`}\n                >\n                  <option value=\"\">Select Category</option>\n                  <option value=\"clothing\">Clothing</option>\n                  <option value=\"accessories\">Accessories</option>\n                  <option value=\"electronics\">Electronics</option>\n                  <option value=\"home\">Home</option>\n                  <option value=\"art\">Art</option>\n                  <option value=\"collectibles\">Collectibles</option>\n                </select>\n              </div>\n            </div>\n\n            {/* Subcategory Section */}\n            {(product.category === 'clothing' || product.category === 'accessories') && (\n              <motion.div variants={itemVariants} className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-4`}>\n                  Product Type *\n                </label>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {/* Main Categories */}\n                  <div className=\"space-y-4\">\n                    {Object.entries(product.category === 'clothing' ? CLOTHING_SUBCATEGORIES : ACCESSORIES_SUBCATEGORIES)\n                      .map(([mainCategory, subItems]) => (\n                      <div key={mainCategory} className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-4`}>\n                        <h3 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-3`}>{mainCategory}</h3>\n                        <div className=\"grid grid-cols-2 gap-2\">\n                          {subItems.map((subItem) => (\n                            <button\n                              key={subItem}\n                              type=\"button\"\n                              onClick={() => handleSubCategorySelect(mainCategory, subItem)}\n                              className={`px-3 py-2 rounded-lg text-sm font-medium transition-colors text-left ${\n                                product.subCategory === `${mainCategory} - ${subItem}`\n                                  ? 'bg-[#FF1B6B] text-white'\n                                  : isDarkMode\n                                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                              }`}\n                            >\n                              {subItem}\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Selected Category Display */}\n                  <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-4`}>\n                    <h3 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-3`}>Selected Category</h3>\n                    {product.subCategory ? (\n                      <div className={`${isDarkMode ? 'bg-pink-900/20' : 'bg-pink-50'} border ${isDarkMode ? 'border-pink-900/20' : 'border-pink-100'} rounded-lg p-4`}>\n                        <p className={isDarkMode ? 'text-gray-200' : 'text-gray-700'}>\n                          <span className=\"font-medium\">Main Category:</span>{' '}\n                          {product.subCategory.split(' - ')[0]}\n                        </p>\n                        <p className={`${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mt-2`}>\n                          <span className=\"font-medium\">Sub Category:</span>{' '}\n                          {product.subCategory.split(' - ')[1]}\n                        </p>\n                      </div>\n                    ) : (\n                      <div className={`${isDarkMode ? 'bg-gray-700/50 border-gray-600 text-gray-400' : 'bg-gray-50 border-gray-100 text-gray-500'} border rounded-lg p-4`}>\n                        Please select a category from the left\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </motion.div>\n            )}\n\n            <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n              <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-3`}>\n                Description *\n              </label>\n              <textarea\n                name=\"description\"\n                value={product.description}\n                onChange={handleInputChange}\n                required\n                rows={4}\n                className={`w-full px-4 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                  isDarkMode\n                    ? 'border-gray-600 bg-gray-700 text-white'\n                    : 'border-gray-300 bg-white text-gray-900'\n                }`}\n                placeholder=\"Describe your product...\"\n              />\n            </div>\n          </div>\n\n          {/* Network & Price Section */}\n          <motion.div variants={itemVariants} className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n              <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-3`}>\n                Network & Price\n              </label>\n              <div className=\"space-y-4\">\n                <div className=\"flex gap-3\">\n                  {Object.entries(NETWORK_INFO)\n                    .filter(([network]) => network === product.network)\n                    .map(([network, info]) => (\n                      <div\n                        key={network}\n                        className={`flex items-center gap-2 px-4 py-2 rounded-lg border-2 border-[#FF1B6B] ${\n                          isDarkMode ? 'bg-pink-900/20' : 'bg-pink-50'\n                        } flex-1 justify-center`}\n                      >\n                        <img \n                          src={info.logo} \n                          alt={info.name} \n                          className=\"w-5 h-5\"\n                        />\n                        <span className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>{info.name}</span>\n                      </div>\n                  ))}\n                </div>\n\n                <div className=\"relative\">\n                  <input\n                    type=\"number\"\n                    name=\"price\"\n                    value={product.price}\n                    onChange={handleInputChange}\n                    required\n                    min=\"0\"\n                    step=\"0.01\"\n                    className={`w-full pl-4 pr-24 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                      isDarkMode\n                        ? 'border-gray-600 bg-gray-700 text-white'\n                        : 'border-gray-300 bg-white text-gray-900'\n                    }`}\n                    placeholder=\"0.00\"\n                  />\n                  <div className={`absolute right-0 top-0 bottom-0 w-20 border-l ${\n                    isDarkMode\n                      ? 'border-gray-600 bg-gray-600 text-gray-200'\n                      : 'border-gray-300 bg-gray-50 text-gray-700'\n                  } text-sm rounded-r-lg flex items-center justify-center`}>\n                    {product.acceptedToken}\n                  </div>\n                </div>\n\n                {/* Discount Section */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"hasDiscount\"\n                      checked={product.hasDiscount}\n                      onChange={(e) => {\n                        setProduct(prev => ({\n                          ...prev,\n                          hasDiscount: e.target.checked,\n                          discountPercent: e.target.checked ? prev.discountPercent : 0\n                        }));\n                      }}\n                      className=\"h-4 w-4 rounded border-gray-300 text-[#FF1B6B] focus:ring-[#FF1B6B]\"\n                    />\n                    <label htmlFor=\"hasDiscount\" className={`text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\n                      Apply Discount\n                    </label>\n                  </div>\n\n                  {product.hasDiscount && (\n                    <div className=\"space-y-4\">\n                      <div className=\"relative\">\n                        <input\n                          type=\"number\"\n                          name=\"discountPercent\"\n                          value={product.discountPercent}\n                          onChange={(e) => {\n                            const value = Math.min(Math.max(0, Number(e.target.value)), 99);\n                            setProduct(prev => ({\n                              ...prev,\n                              discountPercent: value,\n                              discountedPrice: prev.price * (1 - value / 100)\n                            }));\n                          }}\n                          min=\"0\"\n                          max=\"99\"\n                          className={`w-full pl-4 pr-12 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                            isDarkMode\n                              ? 'border-gray-600 bg-gray-700 text-white'\n                              : 'border-gray-300 bg-white text-gray-900'\n                          }`}\n                          placeholder=\"Enter discount percentage\"\n                        />\n                        <div className={`absolute right-0 top-0 bottom-0 w-12 border-l ${\n                          isDarkMode\n                            ? 'border-gray-600 bg-gray-600 text-gray-200'\n                            : 'border-gray-300 bg-gray-50 text-gray-700'\n                        } text-sm rounded-r-lg flex items-center justify-center`}>\n                          %\n                        </div>\n                      </div>\n\n                      <div className=\"relative\">\n                        <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-2`}>\n                          Discount Ends At\n                        </label>\n                        <input\n                          type=\"datetime-local\"\n                          name=\"discountEndsAt\"\n                          value={product.discountEndsAt ? new Date(product.discountEndsAt).toISOString().slice(0, 16) : ''}\n                          onChange={(e) => {\n                            const selectedDate = new Date(e.target.value);\n                            const now = new Date();\n                            \n                            if (selectedDate <= now) {\n                              toast.error('Please select a future date and time');\n                              return;\n                            }\n                            \n                            setProduct(prev => ({\n                              ...prev,\n                              discountEndsAt: selectedDate.toISOString()\n                            }));\n                          }}\n                          min={new Date(new Date().getTime() + 60000).toISOString().slice(0, 16)}\n                          className={`w-full pl-4 pr-12 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                            isDarkMode\n                              ? 'border-gray-600 bg-gray-700 text-white'\n                              : 'border-gray-300 bg-white text-gray-900'\n                          }`}\n                        />\n                      </div>\n\n                      {product.discountPercent > 0 && product.price > 0 && (\n                        <div className={`${\n                          isDarkMode ? 'bg-pink-900/20 border-pink-900/20' : 'bg-pink-50 border-pink-100'\n                        } border rounded-lg p-3`}>\n                          <p className={isDarkMode ? 'text-gray-300' : 'text-gray-700'}>\n                            <span className=\"font-medium\">Original Price:</span>{' '}\n                            {product.price} {product.acceptedToken}\n                          </p>\n                          <p className=\"text-[#FF1B6B] mt-1\">\n                            <span className=\"font-medium\">Discounted Price:</span>{' '}\n                            {(product.price * (1 - product.discountPercent / 100)).toFixed(2)} {product.acceptedToken}\n                          </p>\n                          <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1`}>\n                            <span className=\"font-medium\">Savings:</span>{' '}\n                            {(product.price * (product.discountPercent / 100)).toFixed(2)} {product.acceptedToken}\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                {/* Payment Information Display */}\n                <div className={`flex items-center gap-2 px-4 py-3 ${\n                  isDarkMode ? 'bg-pink-900/20 border-pink-900/20' : 'bg-pink-50 border-pink-100'\n                } rounded-lg border mt-2`}>\n                  <img \n                    src={`/${product.acceptedToken.toLowerCase()}.png`}\n                    alt={product.acceptedToken}\n                    className=\"w-5 h-5 object-contain\"\n                  />\n                  <p className={isDarkMode ? 'text-gray-300' : 'text-gray-700'}>\n                    Buyers will pay in <span className=\"font-medium\">{product.acceptedToken}</span> on <span className=\"font-medium\">{\n                      NETWORK_INFO[product.network]?.name || 'selected'\n                    }</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n              <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-3`}>\n                Quantity Available\n              </label>\n              <input\n                type=\"number\"\n                name=\"quantity\"\n                value={product.quantity}\n                onChange={handleInputChange}\n                required\n                min=\"1\"\n                className={`w-full px-4 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                  isDarkMode\n                    ? 'border-gray-600 bg-gray-700 text-white'\n                    : 'border-gray-300 bg-white text-gray-900'\n                }`}\n                placeholder=\"Enter available quantity\"\n              />\n            </div>\n          </motion.div>\n\n          {/* Variants Section */}\n          {(product.category === 'clothing' || product.category === 'accessories') && (\n            <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n              <div className=\"flex items-center mb-6\">\n                <input\n                  type=\"checkbox\"\n                  id=\"hasVariants\"\n                  name=\"hasVariants\"\n                  checked={product.hasVariants}\n                  onChange={(e) => {\n                    setProduct(prev => ({\n                      ...prev,\n                      hasVariants: e.target.checked,\n                      sizes: e.target.checked ? prev.sizes : [],\n                      colors: e.target.checked ? prev.colors : []\n                    }));\n                  }}\n                  className=\"h-4 w-4 rounded border-gray-300 text-[#FF1B6B] focus:ring-[#FF1B6B]\"\n                />\n                <label htmlFor=\"hasVariants\" className={`ml-2 text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\n                  This product has size and color variants\n                </label>\n              </div>\n\n              {product.hasVariants && (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {/* Size Selection */}\n                  <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-4`}>\n                    <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-3`}>\n                      Available Sizes\n                    </label>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {isFootwearProduct() ? (\n                        // Show shoe sizes for footwear\n                        SHOE_SIZES.map(size => (\n                          <button\n                            key={size}\n                            type=\"button\"\n                            onClick={() => {\n                              setProduct(prev => ({\n                                ...prev,\n                                sizes: prev.sizes.includes(size)\n                                  ? prev.sizes.filter(s => s !== size)\n                                  : [...prev.sizes, size]\n                              }));\n                            }}\n                            className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\n                              product.sizes.includes(size)\n                                ? 'bg-[#FF1B6B] text-white'\n                                : isDarkMode\n                                  ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                            }`}\n                          >\n                            {size}\n                          </button>\n                        ))\n                      ) : (\n                        // Show clothing sizes for non-footwear\n                        ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL'].map(size => (\n                          <button\n                            key={size}\n                            type=\"button\"\n                            onClick={() => {\n                              setProduct(prev => ({\n                                ...prev,\n                                sizes: prev.sizes.includes(size)\n                                  ? prev.sizes.filter(s => s !== size)\n                                  : [...prev.sizes, size]\n                              }));\n                            }}\n                            className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\n                              product.sizes.includes(size)\n                                ? 'bg-[#FF1B6B] text-white'\n                                : isDarkMode\n                                  ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                            }`}\n                          >\n                            {size}\n                          </button>\n                        ))\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Color Selection and Quantities */}\n                  <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-4`}>\n                    <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-3`}>\n                      Available Colors & Quantities\n                    </label>\n                    <div className=\"space-y-4\">\n                      {[\n                        { name: 'Black', code: '#000000' },\n                        { name: 'White', code: '#FFFFFF' },\n                        { name: 'Gray', code: '#808080' },\n                        { name: 'Red', code: '#FF0000' },\n                        { name: 'Blue', code: '#0000FF' },\n                        { name: 'Green', code: '#008000' },\n                        { name: 'Yellow', code: '#FFFF00' },\n                        { name: 'Purple', code: '#800080' },\n                        { name: 'Pink', code: '#FFC0CB' },\n                        { name: 'Brown', code: '#A52A2A' }\n                      ].map((color) => {\n                        const isSelected = product.colors.includes(color.name);\n                        return (\n                          <div key={color.name} className=\"flex items-center gap-3\">\n                            <button\n                              type=\"button\"\n                              onClick={() => {\n                                const newColors = product.colors.includes(color.name)\n                                  ? product.colors.filter(c => c !== color.name)\n                                  : [...product.colors, color.name];\n                                \n                                // Update colorQuantities when removing a color\n                                const newColorQuantities = { ...product.colorQuantities };\n                                if (!newColors.includes(color.name)) {\n                                  delete newColorQuantities[color.name];\n                                }\n                                \n                                setProduct(prev => ({\n                                  ...prev,\n                                  colors: newColors,\n                                  colorQuantities: newColorQuantities\n                                }));\n                              }}\n                              className={`inline-flex items-center gap-2 px-3 py-1.5 rounded-full text-sm font-medium transition-colors ${\n                                isSelected\n                                  ? 'bg-[#FF1B6B] text-white'\n                                  : isDarkMode\n                                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                              }`}\n                            >\n                              <span\n                                className=\"h-4 w-4 rounded-full border border-gray-300 shadow-inner\"\n                                style={{ backgroundColor: color.code }}\n                              />\n                              <span>{color.name}</span>\n                            </button>\n                            \n                            {isSelected && (\n                              <div className=\"flex-1 max-w-[150px]\">\n                                <input\n                                  type=\"number\"\n                                  min=\"0\"\n                                  value={product.colorQuantities[color.name] || ''}\n                                  onChange={(e) => {\n                                    const value = Math.max(0, parseInt(e.target.value) || 0);\n                                    setProduct(prev => ({\n                                      ...prev,\n                                      colorQuantities: {\n                                        ...prev.colorQuantities,\n                                        [color.name]: value\n                                      }\n                                    }));\n                                  }}\n                                  className={`w-full px-3 py-1.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors text-sm ${\n                                    isDarkMode\n                                      ? 'border-gray-600 bg-gray-700 text-white'\n                                      : 'border-gray-300 bg-white text-gray-900'\n                                  }`}\n                                  placeholder=\"Quantity\"\n                                />\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                    </div>\n                    \n                    {/* Total Quantity Display */}\n                    {product.colors.length > 0 && (\n                      <div className={`mt-4 pt-4 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n                        <div className=\"flex items-center justify-between text-sm\">\n                          <span className={isDarkMode ? 'text-gray-400' : 'text-gray-600'}>Total Quantity:</span>\n                          <span className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\n                            {Object.values(product.colorQuantities).reduce((a, b) => a + b, 0)}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Shipping Section */}\n          <motion.div variants={itemVariants} className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n            <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>Shipping Details</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-2`}>\n                  Shipping Fee (USD)\n                </label>\n                <div className=\"relative\">\n                  <span className={`absolute left-3 top-1/2 -translate-y-1/2 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>$</span>\n                  <input\n                    type=\"number\"\n                    name=\"shippingFee\"\n                    min=\"0\"\n                    step=\"0.01\"\n                    value={product.shippingFee}\n                    disabled\n                    className={`w-full pl-8 pr-4 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                      isDarkMode\n                        ? 'border-gray-600 bg-gray-700/50 text-gray-400'\n                        : 'border-gray-300 bg-gray-50 text-gray-500'\n                    }`}\n                    placeholder=\"0.00\"\n                  />\n                </div>\n                <p className={`mt-1 text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                  Shipping fee is set in your store settings\n                </p>\n              </div>\n\n              <div>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-2`}>\n                  Shipping Information\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"shippingInfo\"\n                  value={product.shippingInfo}\n                  onChange={handleInputChange}\n                  className={`w-full px-4 py-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] transition-colors ${\n                    isDarkMode\n                      ? 'border-gray-600 bg-gray-700 text-white'\n                      : 'border-gray-300 bg-white text-gray-900'\n                  }`}\n                  placeholder=\"e.g., Worldwide shipping available\"\n                />\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Submit Buttons */}\n          <div className=\"flex justify-end gap-4\">\n            <button\n              type=\"button\"\n              onClick={() => navigate('/merch-store/products')}\n              className={`px-8 py-3 border-2 ${\n                isDarkMode \n                  ? 'border-gray-600 text-gray-300 hover:bg-gray-700' \n                  : 'border-gray-300 text-gray-700 hover:bg-gray-50'\n              } rounded-lg transition-colors`}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={submitting || uploading || !hasChanges}\n              className={`px-8 py-3 rounded-lg font-medium text-white ${\n                submitting || uploading || !hasChanges \n                  ? 'bg-gray-400 cursor-not-allowed' \n                  : 'bg-[#FF1B6B] hover:bg-[#D4145A]'\n              } transition-colors flex items-center gap-2`}\n            >\n              {submitting ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent\" />\n                  <span>Updating Product...</span>\n                </>\n              ) : uploading ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent\" />\n                  <span>Saving Changes...</span>\n                </>\n              ) : (\n                'Save Changes'\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default EditProduct;","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { BiDollarCircle, BiPackage, BiUser, BiTrendingUp, BiCheck, BiDownload } from 'react-icons/bi';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { collection, query, where, getDocs, orderBy } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { toast } from 'react-hot-toast';\nimport * as XLSX from 'xlsx';\nimport { Line, Doughnut } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  ArcElement\n} from 'chart.js';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  ArcElement\n);\n\nconst StatCard = ({ title, value, icon: Icon, trend, subtitle, secondaryValue, withdrawals }) => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      whileHover={{ y: -3 }}\n      className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-2xl shadow-sm relative group`}\n    >\n      <div className=\"flex items-start justify-between\">\n        <div>\n          <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>{title}</p>\n          <p className={`text-xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mt-1`}>{value}</p>\n          {trend && (\n            <div className=\"flex items-center gap-1 mt-1\">\n              <BiTrendingUp className=\"text-emerald-500 w-4 h-4\" />\n              <span className=\"text-xs text-emerald-500\">{trend}% from last month</span>\n            </div>\n          )}\n          {secondaryValue && (\n            <p className=\"text-xs text-red-500 mt-1\">Refunds: {secondaryValue}</p>\n          )}\n          {subtitle && (\n            <div className=\"relative\">\n              <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1 cursor-help`}>{subtitle}</p>\n              {withdrawals && (\n                <div className={`absolute left-0 bottom-full mb-2 w-48 ${isDarkMode ? 'bg-gray-700' : 'bg-white'} rounded-lg shadow-lg p-3 text-sm opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all z-10`}>\n                  <h4 className={`font-medium mb-2 ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>Withdrawals</h4>\n                  <div className=\"space-y-1\">\n                    <div className=\"flex justify-between\">\n                      <span className={isDarkMode ? 'text-gray-300' : 'text-gray-700'}>Completed:</span>\n                      <span className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>${withdrawals.completed.toFixed(2)}</span>\n                    </div>\n                    <div className=\"flex justify-between text-orange-600\">\n                      <span>Pending:</span>\n                      <span className=\"font-medium\">${withdrawals.pending.toFixed(2)}</span>\n                    </div>\n                    <div className={`flex justify-between font-medium pt-1 border-t ${isDarkMode ? 'border-gray-600' : 'border-gray-200'}`}>\n                      <span className={isDarkMode ? 'text-gray-200' : 'text-gray-900'}>Total:</span>\n                      <span className={isDarkMode ? 'text-gray-200' : 'text-gray-900'}>${(withdrawals.completed + withdrawals.pending).toFixed(2)}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        <div className={`p-2 ${isDarkMode ? 'bg-pink-900/20' : 'bg-pink-50'} rounded-lg`}>\n          <Icon className=\"w-5 h-5 text-[#FF1B6B]\" />\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nconst SkeletonPulse = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      className={`w-full h-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-lg`}\n      animate={{\n        opacity: [0.4, 0.7, 0.4]\n      }}\n      transition={{\n        duration: 1.5,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n    />\n  );\n};\n\nconst SalesSkeleton = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <div className=\"space-y-6\">\n      {/* Header Skeleton */}\n      <div className=\"space-y-2\">\n        <div className=\"w-48 h-8\">\n          <SkeletonPulse />\n        </div>\n        <div className=\"w-64 h-5\">\n          <SkeletonPulse />\n        </div>\n      </div>\n\n      {/* Stats Grid Skeleton */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {[1, 2, 3].map((i) => (\n          <div key={i} className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} p-6 rounded-2xl shadow-sm`}>\n            <div className=\"flex items-start justify-between\">\n              <div className=\"space-y-2\">\n                <div className=\"w-32 h-5\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-40 h-8\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-24 h-4\">\n                  <SkeletonPulse />\n                </div>\n              </div>\n              <div className=\"w-12 h-12\">\n                <SkeletonPulse />\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Recent Orders Table Skeleton */}\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-2xl p-6 shadow-sm`}>\n        <div className=\"w-48 h-6 mb-4\">\n          <SkeletonPulse />\n        </div>\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className={`text-left border-b ${isDarkMode ? 'border-gray-700' : 'border-gray-200'}`}>\n                {['Order ID', 'Customer', 'Products', 'Total', 'Date', 'Status'].map((header) => (\n                  <th key={header} className=\"pb-3\">\n                    <div className=\"w-24 h-4\">\n                      <SkeletonPulse />\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody className={`divide-y ${isDarkMode ? 'divide-gray-700' : 'divide-gray-200'}`}>\n              {[1, 2, 3, 4, 5].map((i) => (\n                <tr key={i}>\n                  <td className=\"py-3\">\n                    <div className=\"w-20 h-5\">\n                      <SkeletonPulse />\n                    </div>\n                  </td>\n                  <td className=\"py-3\">\n                    <div className=\"w-32 h-5\">\n                      <SkeletonPulse />\n                    </div>\n                  </td>\n                  <td className=\"py-3\">\n                    <div className=\"w-24 h-5\">\n                      <SkeletonPulse />\n                    </div>\n                  </td>\n                  <td className=\"py-3\">\n                    <div className=\"w-24 h-5\">\n                      <SkeletonPulse />\n                    </div>\n                  </td>\n                  <td className=\"py-3\">\n                    <div className=\"w-32 h-5\">\n                      <SkeletonPulse />\n                    </div>\n                  </td>\n                  <td className=\"py-3\">\n                    <div className=\"w-20 h-6\">\n                      <SkeletonPulse />\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ProductDistributionChart = ({ orders }) => {\n  const { isDarkMode } = useTheme();\n  const productDistribution = orders.reduce((acc, order) => {\n    order.items.forEach(item => {\n      if (!acc[item.name]) {\n        acc[item.name] = 0;\n      }\n      acc[item.name]++;\n    });\n    return acc;\n  }, {});\n\n  // Get top 4 products instead of 9\n  const topProducts = Object.entries(productDistribution)\n    .sort(([,a], [,b]) => b - a)\n    .slice(0, 4);\n\n  const data = {\n    labels: topProducts.map(([name]) => name),\n    datasets: [{\n      data: topProducts.map(([,count]) => count),\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.9)',   // Pink\n        'rgba(99, 102, 241, 0.9)',   // Indigo\n        'rgba(245, 158, 11, 0.9)',   // Amber\n        'rgba(16, 185, 129, 0.9)',   // Emerald\n      ],\n      borderWidth: 0,\n      borderRadius: 2,\n      spacing: 2\n    }]\n  };\n\n  const options = {\n    cutout: '85%',\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        enabled: true,\n        backgroundColor: isDarkMode ? '#374151' : 'white',\n        titleColor: isDarkMode ? '#F3F4F6' : '#111827',\n        bodyColor: isDarkMode ? '#F3F4F6' : '#111827',\n        borderColor: isDarkMode ? '#4B5563' : '#E5E7EB',\n        borderWidth: 1,\n        padding: 12,\n        boxPadding: 6,\n        usePointStyle: true,\n        callbacks: {\n          label: function(context) {\n            return `${context.label}: ${context.raw} sold`;\n          }\n        }\n      }\n    },\n    maintainAspectRatio: false,\n    layout: {\n      padding: 0\n    }\n  };\n\n  const totalSold = topProducts.reduce((sum, [,count]) => sum + count, 0);\n\n  return (\n    <div className={`relative h-[140px] ${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-2`}>\n      {/* Chart container */}\n      <div className=\"h-[100px]\">\n        <Doughnut data={data} options={options} />\n      </div>\n      \n      {/* Total in center */}\n      <div className=\"absolute inset-0 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className={`text-xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>\n            {totalSold}\n          </p>\n          <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Total</p>\n        </div>\n      </div>\n      \n      {/* Legends below chart */}\n      <div className=\"absolute bottom-0 left-0 right-0 px-2\">\n        <div className=\"flex flex-wrap justify-center gap-3\">\n          {topProducts.map(([name, count], index) => (\n            <div key={name} className=\"flex items-center gap-1.5\">\n              <span className=\"w-2 h-2 rounded-full shrink-0\" style={{ \n                backgroundColor: data.datasets[0].backgroundColor[index] \n              }}></span>\n              <span className={`text-[10px] ${isDarkMode ? 'text-gray-300' : 'text-gray-600'} truncate max-w-[60px]`} title={name}>\n                {name}\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst TopProducts = ({ orders, isDarkMode }) => {\n  const productStats = orders.reduce((acc, order) => {\n    order.items.forEach(item => {\n      if (!acc[item.name]) {\n        acc[item.name] = {\n          count: 0,\n          price: item.price,\n          image: item.image\n        };\n      }\n      acc[item.name].count++;\n    });\n    return acc;\n  }, {});\n\n  const topProducts = Object.entries(productStats)\n    .sort(([,a], [,b]) => b.count - a.count)\n    .slice(0, 3);\n\n  return (\n    <div className=\"space-y-2\">\n      {topProducts.map(([name, data]) => (\n        <div key={name} className=\"flex items-center justify-between py-1\">\n          <div className=\"flex items-center gap-2\">\n            {data.image && (\n              <img src={data.image} alt={name} className=\"w-6 h-6 rounded object-cover\" />\n            )}\n            <div>\n              <p className={`text-xs font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'} truncate max-w-[120px]`} title={name}>{name}</p>\n              <p className={`text-[10px] ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>{data.count} sold</p>\n            </div>\n          </div>\n          <span className={`text-xs font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>${data.price}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// Add Pagination component\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  return (\n    <div className=\"flex items-center justify-center gap-1 mt-3\">\n      <button\n        onClick={() => onPageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n        className=\"p-1 text-gray-500 hover:text-gray-700 disabled:opacity-50\"\n      >\n        ←\n      </button>\n      {[...Array(totalPages)].map((_, i) => (\n        <button\n          key={i + 1}\n          onClick={() => onPageChange(i + 1)}\n          className={`w-6 h-6 text-xs rounded-full ${\n            currentPage === i + 1\n              ? 'bg-pink-100 text-pink-600'\n              : 'text-gray-500 hover:bg-gray-100'\n          }`}\n        >\n          {i + 1}\n        </button>\n      ))}\n      <button\n        onClick={() => onPageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n        className=\"p-1 text-gray-500 hover:text-gray-700 disabled:opacity-50\"\n      >\n        →\n      </button>\n    </div>\n  );\n};\n\n// Update RecentSoldProducts component\nconst RecentSoldProducts = ({ orders, isDarkMode }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const productsPerPage = 4;\n\n  const recentProducts = orders.reduce((acc, order) => {\n    order.items.forEach(item => {\n      if (!acc[item.name] || new Date(order.createdAt.toDate()) > new Date(acc[item.name].soldDate)) {\n        acc[item.name] = {\n          name: item.name,\n          price: item.price,\n          image: item.image,\n          soldDate: order.createdAt.toDate()\n        };\n      }\n    });\n    return acc;\n  }, {});\n\n  const allProducts = Object.values(recentProducts)\n    .sort((a, b) => b.soldDate - a.soldDate);\n\n  const totalPages = Math.ceil(allProducts.length / productsPerPage);\n  const indexOfLastProduct = currentPage * productsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n  const currentProducts = allProducts.slice(indexOfFirstProduct, indexOfLastProduct);\n\n  return (\n    <div className=\"mt-4\">\n      <div className=\"grid grid-cols-2 gap-3\">\n        {currentProducts.map((product, index) => (\n          <div key={index} className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-lg p-2 flex items-center gap-2`}>\n            <img \n              src={product.image} \n              alt={product.name} \n              className=\"w-10 h-10 rounded-lg object-cover\"\n            />\n            <div className=\"min-w-0\">\n              <p className={`text-xs font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'} truncate`} title={product.name}>\n                {product.name}\n              </p>\n              <div className=\"flex items-center justify-between gap-2\">\n                <span className={`text-[11px] ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                  {new Date(product.soldDate).toLocaleDateString()}\n                </span>\n                <span className={`text-[11px] font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\n                  ${product.price}\n                </span>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      {totalPages > 1 && (\n        <Pagination\n          currentPage={currentPage}\n          totalPages={totalPages}\n          onPageChange={setCurrentPage}\n        />\n      )}\n    </div>\n  );\n};\n\nconst Sales = () => {\n  const { user } = useMerchAuth();\n  const { isDarkMode } = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [salesData, setSalesData] = useState({\n    totalRevenue: 0,\n    totalOrders: 0,\n    totalCustomers: 0,\n    recentOrders: [],\n    allOrders: [],\n    allTimeRevenue: 0,\n    totalWithdrawn: 0,\n    pendingWithdrawals: 0\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const ordersPerPage = 50;\n  const [revenueData, setRevenueData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [selectedTimeframe, setSelectedTimeframe] = useState('Monthly');\n  const [productStats, setProductStats] = useState([25, 30, 20, 25]); // Example distribution\n\n  // Chart options\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        backgroundColor: isDarkMode ? '#374151' : 'white',\n        titleColor: isDarkMode ? '#F3F4F6' : '#111827',\n        bodyColor: isDarkMode ? '#F3F4F6' : '#111827',\n        borderColor: isDarkMode ? '#4B5563' : '#E5E7EB',\n        borderWidth: 1,\n        padding: 12,\n        boxPadding: 6,\n        usePointStyle: true,\n        callbacks: {\n          label: function(context) {\n            return `$${context.parsed.y.toFixed(2)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          font: {\n            size: 11\n          },\n          color: isDarkMode ? '#9CA3AF' : '#6B7280'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.05)',\n          drawBorder: false\n        },\n        ticks: {\n          font: {\n            size: 11\n          },\n          color: isDarkMode ? '#9CA3AF' : '#6B7280',\n          callback: function(value) {\n            if (value >= 1000) {\n              return '$' + (value/1000) + 'k';\n            }\n            return '$' + value;\n          }\n        }\n      }\n    },\n    elements: {\n      line: {\n        tension: 0.4\n      },\n      point: {\n        radius: 0\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (user) {\n      fetchSalesData();\n    }\n  }, [user, selectedTimeframe]);\n\n  const fetchSalesData = async () => {\n    try {\n      const now = new Date();\n      const firstDayThisMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n      const firstDayLastMonth = new Date(now.getFullYear(), now.getMonth() - 1, 1);\n      const lastDayLastMonth = new Date(now.getFullYear(), now.getMonth(), 0);\n\n      const ordersQuery = query(\n        collection(db, 'orders'),\n        where('sellerId', '==', user.sellerId),\n        orderBy('createdAt', 'desc')\n      );\n\n      const withdrawalsQuery = query(\n        collection(db, 'withdrawals'),\n        where('sellerId', '==', user.sellerId)\n      );\n\n      const [ordersSnapshot, withdrawalsSnapshot] = await Promise.all([\n        getDocs(ordersQuery),\n        getDocs(withdrawalsQuery)\n      ]);\n\n      const orders = ordersSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n\n      // Calculate metrics for this month and last month\n      const thisMonthOrders = orders.filter(order => {\n        const orderDate = order.createdAt?.toDate();\n        return orderDate >= firstDayThisMonth;\n      });\n\n      const lastMonthOrders = orders.filter(order => {\n        const orderDate = order.createdAt?.toDate();\n        return orderDate >= firstDayLastMonth && orderDate <= lastDayLastMonth;\n      });\n\n      // Calculate revenues\n      const thisMonthRevenue = thisMonthOrders.reduce((sum, order) => {\n        if (order.status !== 'cancelled' && order.status !== 'refunded') {\n          return sum + (order.total || 0);\n        }\n        return sum;\n      }, 0);\n\n      const lastMonthRevenue = lastMonthOrders.reduce((sum, order) => {\n        if (order.status !== 'cancelled' && order.status !== 'refunded') {\n          return sum + (order.total || 0);\n        }\n        return sum;\n      }, 0);\n\n      // Calculate unique customers\n      const thisMonthCustomers = new Set(thisMonthOrders.map(order => order.buyerId)).size;\n      const lastMonthCustomers = new Set(lastMonthOrders.map(order => order.buyerId)).size;\n\n      // Calculate percentage changes\n      const calculatePercentageChange = (current, previous) => {\n        if (previous === 0) return current > 0 ? 100 : 0;\n        return ((current - previous) / previous) * 100;\n      };\n\n      const revenueChange = calculatePercentageChange(thisMonthRevenue, lastMonthRevenue);\n      const ordersChange = calculatePercentageChange(thisMonthOrders.length, lastMonthOrders.length);\n      const customersChange = calculatePercentageChange(thisMonthCustomers, lastMonthCustomers);\n\n      // Calculate completed and pending withdrawals\n      const withdrawalsByStatus = withdrawalsSnapshot.docs.reduce((acc, doc) => {\n        const withdrawal = doc.data();\n        if (withdrawal.status === 'completed') {\n          acc.completed += withdrawal.amount || 0;\n        } else if (withdrawal.status === 'pending') {\n          acc.pending += withdrawal.amount || 0;\n        }\n        return acc;\n      }, { completed: 0, pending: 0 });\n\n      // Filter out cancelled orders and handle refunds for revenue calculation\n      const validOrders = orders.filter(order => order.status !== 'cancelled');\n      const grossRevenue = validOrders.reduce((sum, order) => {\n        // If order is refunded, don't include it in revenue\n        if (order.status === 'refunded') {\n          return sum;\n        }\n        return sum + order.total;\n      }, 0);\n\n      // Calculate total refunds\n      const totalRefunds = validOrders.reduce((sum, order) => {\n        if (order.status === 'refunded') {\n          return sum + order.total;\n        }\n        return sum;\n      }, 0);\n\n      // Calculate statistics\n      const uniqueCustomers = new Set(validOrders.map(order => order.buyerId)).size;\n\n      // Calculate all time revenue (total revenue earned, regardless of withdrawals)\n      const allTimeRevenue = grossRevenue;\n\n      // Net revenue is all time revenue minus completed withdrawals\n      const netRevenue = Math.max(0, grossRevenue - withdrawalsByStatus.completed);\n\n      // Prepare data for the revenue chart\n      const dates = [];\n      const revenues = [];\n\n      if (selectedTimeframe === 'Monthly') {\n        // Get last 30 days\n        for (let i = 29; i >= 0; i--) {\n          const date = new Date(now);\n          date.setDate(date.getDate() - i);\n          dates.push(date.toLocaleDateString('default', { month: 'short', day: 'numeric' }));\n          \n          const dayRevenue = orders.reduce((sum, order) => {\n            const orderDate = order.createdAt?.toDate();\n            if (orderDate && \n                orderDate.getDate() === date.getDate() &&\n                orderDate.getMonth() === date.getMonth() &&\n                orderDate.getFullYear() === date.getFullYear() &&\n                order.status !== 'cancelled' &&\n                order.status !== 'refunded') {\n              return sum + (order.total || 0);\n            }\n            return sum;\n          }, 0);\n          \n          revenues.push(dayRevenue);\n        }\n      } else {\n        // Weekly view - last 7 days\n        for (let i = 6; i >= 0; i--) {\n          const date = new Date(now);\n          date.setDate(date.getDate() - i);\n          dates.push(date.toLocaleDateString('default', { weekday: 'short' }));\n          \n          const dayRevenue = orders.reduce((sum, order) => {\n            const orderDate = order.createdAt?.toDate();\n            if (orderDate && \n                orderDate.getDate() === date.getDate() &&\n                orderDate.getMonth() === date.getMonth() &&\n                orderDate.getFullYear() === date.getFullYear() &&\n                order.status !== 'cancelled' &&\n                order.status !== 'refunded') {\n              return sum + (order.total || 0);\n            }\n            return sum;\n          }, 0);\n          \n          revenues.push(dayRevenue);\n        }\n      }\n\n      setRevenueData({\n        labels: dates,\n        datasets: [\n          {\n            data: revenues,\n            fill: true,\n            backgroundColor: 'rgba(255, 27, 107, 0.1)',\n            borderColor: 'rgb(255, 27, 107)',\n            pointRadius: 0,\n            pointHoverRadius: 4,\n            pointHoverBackgroundColor: 'rgb(255, 27, 107)',\n            pointHoverBorderColor: 'white',\n            pointHoverBorderWidth: 2\n          }\n        ]\n      });\n\n      setSalesData({\n        totalRevenue: netRevenue, // This is now net revenue (after withdrawals)\n        grossRevenue: grossRevenue,\n        totalRefunds: totalRefunds,\n        totalOrders: orders.length,\n        totalCustomers: uniqueCustomers,\n        recentOrders: orders.slice(0, 5),\n        allOrders: orders,\n        allTimeRevenue: allTimeRevenue, // This is the total revenue earned\n        totalWithdrawn: withdrawalsByStatus.completed,\n        pendingWithdrawals: withdrawalsByStatus.pending,\n        revenueChange: parseFloat(revenueChange.toFixed(1)),\n        ordersChange: parseFloat(ordersChange.toFixed(1)),\n        customersChange: parseFloat(customersChange.toFixed(1))\n      });\n    } catch (error) {\n      console.error('Error fetching sales data:', error);\n      toast.error('Failed to load sales data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get current orders for pagination\n  const indexOfLastOrder = currentPage * ordersPerPage;\n  const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;\n  const currentOrders = salesData.allOrders.slice(indexOfFirstOrder, indexOfLastOrder);\n  const totalPages = Math.ceil(salesData.allOrders.length / ordersPerPage);\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const exportToExcel = () => {\n    try {\n      const exportData = salesData.allOrders.map(order => ({\n        'Order ID': order.id,\n        'Product': order.items.map(item => item.name).join(', '),\n        'Customer': order.buyerInfo?.name || 'Anonymous',\n        'Price': order.total,\n        'Date': new Date(order.createdAt?.toDate()).toLocaleDateString(),\n        'Status': order.status\n      }));\n\n      const ws = XLSX.utils.json_to_sheet(exportData);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, \"Sales Data\");\n      XLSX.writeFile(wb, \"sales_data.xlsx\");\n      toast.success('Sales data exported successfully');\n    } catch (error) {\n      console.error('Error exporting data:', error);\n      toast.error('Failed to export sales data');\n    }\n  };\n\n  if (loading) {\n    return <SalesSkeleton />;\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      className={`relative h-screen flex flex-col ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}\n    >\n      <div className=\"p-6\">\n        <div className=\"max-w-7xl mx-auto space-y-6\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <div>\n              <h1 className={`text-2xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Sales Overview</h1>\n              <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Monitor your store's performance</p>\n            </div>\n            <button\n              onClick={exportToExcel}\n              className=\"flex items-center gap-2 px-4 py-2 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#D4145A] transition-colors\"\n            >\n              <BiDownload className=\"w-5 h-5\" />\n              <span>Export Sales</span>\n            </button>\n          </div>\n\n          {/* Revenue Section */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Chart Card */}\n            <div className={`lg:col-span-2 ${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-xl shadow-sm p-4`}>\n              <div className=\"flex justify-between items-center mb-4\">\n                <div>\n                  <h2 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Total Revenue</h2>\n                  <div className=\"flex items-center gap-2\">\n                    <span className={`text-2xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>${salesData.grossRevenue.toFixed(2)}</span>\n                    {salesData.revenueChange > 0 && (\n                      <span className=\"text-sm px-2 py-1 bg-green-100 text-green-600 rounded-full\">\n                        ↑ {salesData.revenueChange}%\n                      </span>\n                    )}\n                  </div>\n                  <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1`}>\n                    Gained ${salesData.grossRevenue - (salesData.lastMonthRevenue || 0)} this month\n                  </p>\n                </div>\n                <select\n                  value={selectedTimeframe}\n                  onChange={(e) => setSelectedTimeframe(e.target.value)}\n                  className={`px-3 py-1.5 text-sm border rounded-lg ${\n                    isDarkMode \n                      ? 'border-gray-600 bg-gray-700 text-gray-200' \n                      : 'border-gray-200 bg-white text-gray-700'\n                  }`}\n                >\n                  <option>Monthly</option>\n                  <option>Weekly</option>\n                </select>\n              </div>\n              <div className=\"h-[200px]\">\n                <Line data={revenueData} options={chartOptions} />\n              </div>\n            </div>\n\n            {/* Product Distribution Card */}\n            <div className=\"lg:col-span-1\">\n              <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-xl shadow-sm p-4`}>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  {/* Products Sold Chart */}\n                  <div>\n                    <h2 className={`text-sm font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-2`}>Products Sold</h2>\n                    <div className=\"h-[140px]\">\n                      <ProductDistributionChart orders={salesData.allOrders} />\n                    </div>\n                  </div>\n\n                  {/* Top Products */}\n                  <div>\n                    <div className=\"flex justify-between items-center mb-2\">\n                      <h2 className={`text-sm font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Top Products</h2>\n                      <button className={`text-xs ${isDarkMode ? 'text-gray-400 hover:text-gray-300' : 'text-gray-500 hover:text-gray-700'}`}>See all</button>\n                    </div>\n                    <TopProducts orders={salesData.allOrders} isDarkMode={isDarkMode} />\n                  </div>\n                </div>\n\n                {/* Recent Sold Products Grid */}\n                <RecentSoldProducts orders={salesData.allOrders} isDarkMode={isDarkMode} />\n              </div>\n            </div>\n          </div>\n\n          {/* Stats Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <StatCard\n              title=\"All Time Revenue\"\n              value={`$${salesData.allTimeRevenue.toFixed(2)}`}\n              icon={BiDollarCircle}\n              subtitle={`Withdrawn: $${salesData.totalWithdrawn.toFixed(2)}`}\n              withdrawals={{\n                completed: salesData.totalWithdrawn,\n                pending: salesData.pendingWithdrawals\n              }}\n            />\n            <StatCard\n              title=\"Net Revenue\"\n              value={`$${salesData.totalRevenue.toFixed(2)}`}\n              icon={BiDollarCircle}\n              trend={salesData.revenueChange}\n              secondaryValue={salesData.totalRefunds > 0 ? `$${salesData.totalRefunds.toFixed(2)}` : undefined}\n            />\n            <StatCard\n              title=\"Total Orders\"\n              value={salesData.totalOrders}\n              icon={BiPackage}\n              trend={salesData.ordersChange}\n            />\n            <StatCard\n              title=\"Total Customers\"\n              value={salesData.totalCustomers}\n              icon={BiUser}\n              trend={salesData.customersChange}\n            />\n          </div>\n\n          {/* Recent Orders */}\n          <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-xl shadow-sm`}>\n            <div className={`p-4 border-b ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n              <div className=\"flex justify-between items-center\">\n                <h2 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Recent Orders</h2>\n                <div className=\"flex items-center gap-2\">\n                  <button className={`p-2 ${isDarkMode ? 'hover:bg-gray-700' : 'hover:bg-gray-100'} rounded-lg`}>\n                    <svg className={`w-5 h-5 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className={`text-left text-sm ${isDarkMode ? 'text-gray-400 bg-gray-800' : 'text-gray-500 bg-gray-50'}`}>\n                    <th className=\"py-3 px-4 font-medium\">#</th>\n                    <th className=\"py-3 px-4 font-medium\">Product</th>\n                    <th className=\"py-3 px-4 font-medium\">Customer</th>\n                    <th className=\"py-3 px-4 font-medium\">Price</th>\n                    <th className=\"py-3 px-4 font-medium\">Date</th>\n                    <th className=\"py-3 px-4 font-medium\">Status</th>\n                  </tr>\n                </thead>\n                <tbody className={`divide-y ${isDarkMode ? 'divide-gray-700' : 'divide-gray-100'}`}>\n                  {currentOrders.slice(0, 10).map((order) => (\n                    <tr key={order.id} className={`text-sm ${isDarkMode ? 'hover:bg-gray-700' : 'hover:bg-gray-50'}`}>\n                      <td className={`py-3 px-4 ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>#{order.id.slice(-6)}</td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex items-center gap-3\">\n                          {order.items[0]?.image && (\n                            <img\n                              src={order.items[0].image}\n                              alt={order.items[0].name}\n                              className=\"w-10 h-10 rounded-lg object-cover\"\n                            />\n                          )}\n                          <div>\n                            <p className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>{order.items[0]?.name}</p>\n                            <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                              {order.items.length > 1 ? `+${order.items.length - 1} more` : ''}\n                            </p>\n                          </div>\n                        </div>\n                      </td>\n                      <td className={`py-3 px-4 ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>{order.buyerInfo?.name || 'Anonymous'}</td>\n                      <td className={`py-3 px-4 ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>${order.total.toFixed(2)}</td>\n                      <td className={`py-3 px-4 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                        {new Date(order.createdAt?.toDate()).toLocaleDateString()}\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                          order.status === 'delivered'\n                            ? 'bg-green-100 text-green-700'\n                            : order.status === 'shipped'\n                            ? 'bg-blue-100 text-blue-700'\n                            : order.status === 'processing'\n                            ? 'bg-yellow-100 text-yellow-700'\n                            : 'bg-gray-100 text-gray-700'\n                        }`}>\n                          {order.status}\n                        </span>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              {currentOrders.length === 0 ? (\n                <div className={`text-center py-6 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>No orders yet</div>\n              ) : (\n                <div className={`p-4 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n                  <Pagination\n                    currentPage={currentPage}\n                    totalPages={Math.ceil(salesData.allOrders.length / 10)}\n                    onPageChange={paginate}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Sales; ","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { BiPackage, BiCheck, BiX, BiMap, BiInfoCircle, BiTrash } from 'react-icons/bi';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { collection, query, where, getDocs, orderBy, updateDoc, doc, getDoc, writeBatch, addDoc } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { toast } from 'react-hot-toast';\n\nconst containerVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.4,\n      ease: 'easeOut'\n    }\n  }\n};\n\nconst SkeletonPulse = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      className={`w-full h-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-lg`}\n      animate={{\n        opacity: [0.4, 0.7, 0.4]\n      }}\n      transition={{\n        duration: 1.5,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n    />\n  );\n};\n\nconst OrdersReceivedSkeleton = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <div className=\"space-y-6\">\n      {/* Header Skeleton */}\n      <div className=\"flex justify-between items-center\">\n        <div className=\"space-y-2\">\n          <div className=\"w-48 h-8\">\n            <SkeletonPulse />\n          </div>\n          <div className=\"w-64 h-5\">\n            <SkeletonPulse />\n          </div>\n        </div>\n        <div className=\"flex gap-2\">\n          {[1, 2, 3, 4, 5].map((i) => (\n            <div key={i} className=\"w-24 h-10\">\n              <SkeletonPulse />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Orders Table Skeleton */}\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-2xl shadow-sm overflow-hidden`}>\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'}`}>\n                {['Order Details', 'Customer', 'Total', 'Status', 'Actions'].map((header) => (\n                  <th key={header} className=\"px-6 py-3\">\n                    <div className=\"w-24 h-4\">\n                      <SkeletonPulse />\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody className={`divide-y ${isDarkMode ? 'divide-gray-700' : 'divide-gray-200'}`}>\n              {[1, 2, 3, 4, 5].map((i) => (\n                <tr key={i}>\n                  <td className=\"px-6 py-4\">\n                    <div className=\"space-y-2\">\n                      <div className=\"w-20 h-5\">\n                        <SkeletonPulse />\n                      </div>\n                      <div className=\"w-32 h-4\">\n                        <SkeletonPulse />\n                      </div>\n                      <div className=\"w-24 h-4\">\n                        <SkeletonPulse />\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <div className=\"space-y-2\">\n                      <div className=\"w-32 h-5\">\n                        <SkeletonPulse />\n                      </div>\n                      <div className=\"w-48 h-4\">\n                        <SkeletonPulse />\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <div className=\"w-24 h-5\">\n                      <SkeletonPulse />\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <div className=\"w-20 h-6\">\n                      <SkeletonPulse />\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <div className=\"flex gap-2\">\n                      <div className=\"w-8 h-8\">\n                        <SkeletonPulse />\n                      </div>\n                      <div className=\"w-8 h-8\">\n                        <SkeletonPulse />\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst TrackingModal = ({ isOpen, onClose, onSubmit, orderId }) => {\n  const [trackingNumber, setTrackingNumber] = useState('');\n  const [carrier, setCarrier] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { isDarkMode } = useTheme();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!trackingNumber.trim() || !carrier.trim()) {\n      toast.error('Please enter both tracking number and carrier');\n      return;\n    }\n    setIsSubmitting(true);\n    await onSubmit(orderId, trackingNumber, carrier);\n    setIsSubmitting(false);\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40\" onClick={onClose} />\n      <div className=\"fixed inset-0 flex items-center justify-center z-50 p-4\">\n        <motion.div\n          initial={{ scale: 0.9, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-xl max-w-md w-full`}\n        >\n          <div className=\"p-6\">\n            <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>\n              Enter Shipping Information\n            </h3>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                  Shipping Carrier\n                </label>\n                <select\n                  value={carrier}\n                  onChange={(e) => setCarrier(e.target.value)}\n                  className={`w-full px-3 py-2 border rounded-lg focus:ring-[#FF1B6B] focus:border-[#FF1B6B] ${\n                    isDarkMode \n                      ? 'bg-gray-700 border-gray-600 text-gray-200' \n                      : 'border-gray-300 text-gray-900'\n                  }`}\n                  required\n                >\n                  <option value=\"\">Select a carrier</option>\n                  <option value=\"fedex\">FedEx</option>\n                  <option value=\"ups\">UPS</option>\n                  <option value=\"usps\">USPS</option>\n                  <option value=\"dhl\">DHL</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </div>\n              <div>\n                <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                  Tracking Number\n                </label>\n                <input\n                  type=\"text\"\n                  value={trackingNumber}\n                  onChange={(e) => setTrackingNumber(e.target.value)}\n                  className={`w-full px-3 py-2 border rounded-lg focus:ring-[#FF1B6B] focus:border-[#FF1B6B] ${\n                    isDarkMode \n                      ? 'bg-gray-700 border-gray-600 text-gray-200 placeholder-gray-400' \n                      : 'border-gray-300 text-gray-900 placeholder-gray-400'\n                  }`}\n                  placeholder=\"Enter tracking number\"\n                  required\n                />\n              </div>\n              <div className=\"flex justify-end gap-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={onClose}\n                  className={`px-4 py-2 text-sm font-medium rounded-lg ${\n                    isDarkMode \n                      ? 'text-gray-300 hover:bg-gray-700' \n                      : 'text-gray-700 hover:bg-gray-100'\n                  }`}\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={isSubmitting || !trackingNumber.trim() || !carrier.trim()}\n                  className=\"px-4 py-2 text-sm font-medium text-white bg-[#FF1B6B] hover:bg-[#D4145A] rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {isSubmitting ? 'Confirming...' : 'Confirm Shipping'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </motion.div>\n      </div>\n    </>\n  );\n};\n\nconst OrderDetailsModal = ({ order, onClose }) => {\n  const { isDarkMode } = useTheme();\n  if (!order) return null;\n\n  // Helper function to get country name\n  const getCountryName = (country) => {\n    if (typeof country === 'object' && country.name) {\n      return country.name;\n    }\n    return country;\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-6 max-w-2xl w-full max-h-[90vh] overflow-y-auto`}>\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Order Details</h2>\n          <button onClick={onClose} className={`${isDarkMode ? 'text-gray-400 hover:text-gray-300' : 'text-gray-500 hover:text-gray-700'}`}>\n            <BiX className=\"w-6 h-6\" />\n          </button>\n        </div>\n\n        {/* Order Info */}\n        <div className=\"space-y-6\">\n          {/* Order ID and Date */}\n          <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} p-4 rounded-lg`}>\n            <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Order ID: {order.id}</p>\n            <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n              Date: {new Date(order.createdAt?.toDate()).toLocaleString()}\n            </p>\n          </div>\n\n          {/* Customer Info */}\n          <div>\n            <h3 className={`font-medium mb-2 ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>Customer Information</h3>\n            <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} p-4 rounded-lg`}>\n              <div className=\"flex items-center gap-2 mb-2\">\n                <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Name: {order.buyerInfo?.name}</p>\n                {order.flag && (\n                  <img \n                    src={order.flag}\n                    alt={getCountryName(order.shippingAddress?.country)}\n                    className=\"w-5 h-4 object-cover rounded-sm shadow-sm\"\n                  />\n                )}\n              </div>\n              <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Email: {order.buyerInfo?.email}</p>\n              <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Phone: {order.buyerInfo?.phone}</p>\n            </div>\n          </div>\n\n          {/* Shipping Address */}\n          <div>\n            <h3 className={`font-medium mb-2 ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>Shipping Address</h3>\n            <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} p-4 rounded-lg`}>\n              <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>{order.shippingAddress?.street}</p>\n              <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                {order.shippingAddress?.city}, {order.shippingAddress?.state} {order.shippingAddress?.postalCode}\n              </p>\n              <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                {getCountryName(order.shippingAddress?.country)}\n              </p>\n            </div>\n          </div>\n\n          {/* Order Items */}\n          <div>\n            <h3 className={`font-medium mb-2 ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>Items</h3>\n            <div className=\"space-y-2\">\n              {order.items.map((item, index) => (\n                <div key={index} className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} p-4 rounded-lg`}>\n                  <div className=\"flex justify-between items-start\">\n                    <div className=\"space-y-1\">\n                      <p className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>{item.name}</p>\n                      <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Quantity: {item.quantity}</p>\n                      {item.size && (\n                        <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Size: {item.size}</p>\n                      )}\n                      {item.color && (\n                        <div className=\"flex items-center gap-2 text-sm\">\n                          <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Color:</span>\n                          <span className=\"flex items-center gap-1\">\n                            <span\n                              className=\"w-4 h-4 rounded-full border\"\n                              style={{ \n                                backgroundColor: item.color.toLowerCase(),\n                                borderColor: item.color.toLowerCase() === '#ffffff' ? '#e5e7eb' : 'transparent'\n                              }}\n                            />\n                            <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>{item.color}</span>\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"text-right\">\n                      <p className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>${item.price.toFixed(2)}</p>\n                      <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                        Shipping: ${item.shippingFee.toFixed(2)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Payment Info */}\n          <div>\n            <h3 className={`font-medium mb-2 ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>Payment Information</h3>\n            <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} p-4 rounded-lg`}>\n              <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                Method: {order.paymentMethod?.type} ({order.paymentMethod?.token})\n              </p>\n              <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                Network: {order.paymentMethod?.network}\n              </p>\n              <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                Wallet: {order.paymentMethod?.buyerWallet}\n              </p>\n              <p className={`text-sm font-medium mt-2 ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\n                Total: ${order.total.toFixed(2)}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst OrdersReceived = () => {\n  const { user } = useMerchAuth();\n  const { isDarkMode } = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [orders, setOrders] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [isTrackingModalOpen, setIsTrackingModalOpen] = useState(false);\n  const [selectedOrderId, setSelectedOrderId] = useState(null);\n\n  useEffect(() => {\n    fetchOrders();\n  }, [user]);\n\n  const fetchOrders = async () => {\n    try {\n      const ordersQuery = query(\n        collection(db, 'orders'),\n        where('sellerId', '==', user.sellerId),\n        orderBy('createdAt', 'desc')\n      );\n\n      const ordersSnapshot = await getDocs(ordersQuery);\n      const ordersData = ordersSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n\n      // Check for new orders and update seller's balance\n      const newOrders = ordersData.filter(order => \n        order.status === 'processing' && \n        !order.balanceUpdated\n      );\n\n      if (newOrders.length > 0) {\n        const sellerRef = doc(db, 'sellers', user.sellerId);\n        const sellerDoc = await getDoc(sellerRef);\n        \n        if (sellerDoc.exists()) {\n          try {\n            const sellerData = sellerDoc.data();\n            \n            // Initialize balance if it doesn't exist\n            if (!sellerData.balance) {\n              await updateDoc(sellerRef, {\n                balance: { available: 0, pending: 0 }\n              });\n              sellerData.balance = { available: 0, pending: 0 };\n            }\n            \n            // Calculate total new amount from orders\n            const totalNewAmount = newOrders.reduce((sum, order) => {\n              const orderTotal = parseFloat(order.total);\n              return sum + (isNaN(orderTotal) ? 0 : orderTotal);\n            }, 0);\n            \n            // Update seller's balance\n            const updatedBalance = {\n              available: parseFloat(sellerData.balance.available || 0),\n              pending: parseFloat(sellerData.balance.pending || 0) + totalNewAmount\n            };\n\n            // Update the seller document with new balance\n            await updateDoc(sellerRef, {\n              balance: {\n                available: updatedBalance.available,\n                pending: updatedBalance.pending\n              }\n            });\n\n            // Mark orders as balance updated\n            const batch = writeBatch(db);\n            newOrders.forEach(order => {\n              const orderRef = doc(db, 'orders', order.id);\n              batch.update(orderRef, { balanceUpdated: true });\n            });\n            await batch.commit();\n\n            console.log('Balance updated successfully:', {\n              previousBalance: sellerData.balance,\n              newBalance: updatedBalance,\n              totalNewAmount,\n              updatedOrders: newOrders.length\n            });\n          } catch (error) {\n            console.error('Error updating balance:', error);\n            console.error('Error details:', {\n              sellerId: user.sellerId,\n              sellerData: sellerDoc.data(),\n              newOrders: newOrders\n            });\n          }\n        }\n      }\n\n      setOrders(ordersData);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      toast.error('Failed to load orders');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateOrderStatus = async (orderId, trackingNumber, carrier) => {\n    try {\n      const orderRef = doc(db, 'orders', orderId);\n      const orderDoc = await getDoc(orderRef);\n      const orderData = orderDoc.data();\n\n      // Check if within shipping deadline\n      const shippingDeadline = orderData.shippingDeadline.toDate();\n      if (Date.now() > shippingDeadline) {\n        toast.error('Shipping confirmation deadline has passed');\n        return;\n      }\n\n      // Get seller's current balance\n      const sellerRef = doc(db, 'sellers', user.sellerId);\n      const sellerDoc = await getDoc(sellerRef);\n      const currentBalance = sellerDoc.data().balance || { available: 0, pending: 0 };\n      const orderAmount = Number(orderData.total || 0);\n\n      // Move order amount from pending to available\n      await updateDoc(sellerRef, {\n        balance: {\n          available: Number((Number(currentBalance.available || 0) + orderAmount).toFixed(2)),\n          pending: Number((Number(currentBalance.pending || 0) - orderAmount).toFixed(2))\n        }\n      });\n\n      // Update order status\n      await updateDoc(orderRef, {\n        status: 'shipped',\n        updatedAt: new Date(),\n        shippingConfirmed: true,\n        shippingConfirmedAt: new Date(),\n        fundsAvailable: true,\n        fundsAvailableAt: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000), // 14 days after shipping\n        trackingNumber,\n        carrier,\n        shippingStatus: 'in_transit'\n      });\n\n      setOrders(prev =>\n        prev.map(order =>\n          order.id === orderId\n            ? { \n                ...order, \n                status: 'shipped',\n                shippingConfirmed: true,\n                shippingConfirmedAt: new Date(),\n                fundsAvailable: true,\n                fundsAvailableAt: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000),\n                trackingNumber,\n                carrier,\n                shippingStatus: 'in_transit'\n              }\n            : order\n        )\n      );\n\n      toast.success('Shipping confirmed successfully');\n    } catch (error) {\n      console.error('Error updating order:', error);\n      toast.error('Failed to update order');\n    }\n  };\n\n  const cancelOrder = async (orderId) => {\n    try {\n      const orderRef = doc(db, 'orders', orderId);\n      \n      // Only update the order status\n      await updateDoc(orderRef, {\n        status: 'cancelled',\n        cancelledAt: new Date(),\n        cancelledBy: 'seller'\n      });\n      \n      toast.success('Order cancelled successfully');\n      fetchOrders(); // Refresh the orders list\n    } catch (error) {\n      console.error('Error cancelling order:', error);\n      toast.error('Failed to cancel order');\n    }\n  };\n\n  const filteredOrders = orders.filter(order => {\n    if (filter === 'all') return true;\n    return order.status === filter;\n  });\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'delivered':\n        return 'bg-green-100 text-green-700';\n      case 'completed':\n        return 'bg-green-100 text-green-700';\n      case 'processing':\n        return 'bg-blue-100 text-blue-700';\n      case 'cancelled':\n        return 'bg-red-100 text-red-700';\n      case 'pending':\n      default:\n        return 'bg-yellow-100 text-yellow-700';\n    }\n  };\n\n  if (loading) {\n    return <OrdersReceivedSkeleton />;\n  }\n\n  return (\n    <motion.div\n      className={`max-w-5xl mx-auto p-4 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}\n      initial=\"hidden\"\n      animate=\"visible\"\n      variants={containerVariants}\n    >\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className={`text-2xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Orders Received</h1>\n          <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Manage your incoming orders</p>\n        </div>\n        <div className=\"flex gap-2\">\n          {['all', 'processing', 'completed', 'cancelled'].map((status) => (\n            <button\n              key={status}\n              onClick={() => setFilter(status)}\n              className={`px-4 py-2 rounded-lg text-sm font-medium capitalize transition-colors ${\n                filter === status\n                  ? 'bg-[#FF1B6B] text-white'\n                  : isDarkMode\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n              }`}\n            >\n              {status}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {filteredOrders.length === 0 ? (\n        <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-2xl p-8 text-center`}>\n          <BiPackage className={`w-12 h-12 ${isDarkMode ? 'text-gray-600' : 'text-gray-400'} mx-auto mb-4`} />\n          <h2 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-2`}>No Orders Found</h2>\n          <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n            {filter === 'all'\n              ? \"You haven't received any orders yet\"\n              : `No ${filter} orders found`}\n          </p>\n        </div>\n      ) : (\n        <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-2xl shadow-sm overflow-hidden mt-6`}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'}`}>\n                  <th className={`px-6 py-3 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\n                    Order Details\n                  </th>\n                  <th className={`px-6 py-3 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\n                    Customer\n                  </th>\n                  <th className={`px-6 py-3 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\n                    Items\n                  </th>\n                  <th className={`px-6 py-3 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\n                    Total\n                  </th>\n                  <th className={`px-6 py-3 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\n                    Status\n                  </th>\n                  <th className={`px-6 py-3 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className={`divide-y ${isDarkMode ? 'divide-gray-700' : 'divide-gray-200'}`}>\n                {filteredOrders.map((order) => (\n                  <tr key={order.id} className={`${isDarkMode ? 'hover:bg-gray-700/50' : 'hover:bg-gray-50'}`}>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"space-y-1\">\n                        <p className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>#{order.id.slice(-6)}</p>\n                        <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                          {new Date(order.createdAt?.toDate()).toLocaleString()}\n                        </p>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"space-y-1\">\n                        <div className=\"flex items-center gap-2\">\n                          <p className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>{order.buyerInfo?.name}</p>\n                          {order.flag && (\n                            <img \n                              src={order.flag} \n                              alt={`${order.shippingAddress?.country} flag`}\n                              className=\"w-5 h-4 object-cover rounded-sm shadow-sm\"\n                            />\n                          )}\n                        </div>\n                        <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>{order.buyerInfo?.email}</p>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"space-y-2\">\n                        {order.items.map((item, index) => (\n                          <div key={index} className=\"text-sm\">\n                            <div className=\"flex items-center gap-3\">\n                              {item.image && (\n                                <img\n                                  src={item.image}\n                                  alt={item.name}\n                                  className=\"w-10 h-10 rounded-lg object-cover\"\n                                />\n                              )}\n                              <div>\n                                <p className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>{item.name}</p>\n                                <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                                  Qty: {item.quantity}\n                                  {item.size && ` • Size: ${item.size}`}\n                                  {item.color && (\n                                    <span className=\"flex items-center gap-1 mt-0.5\">\n                                      <span>Color:</span>\n                                      <span\n                                        className=\"w-3 h-3 rounded-full border\"\n                                        style={{ \n                                          backgroundColor: item.color.toLowerCase(),\n                                          borderColor: item.color.toLowerCase() === '#ffffff' ? '#e5e7eb' : 'transparent'\n                                        }}\n                                      />\n                                      <span>{item.color}</span>\n                                    </span>\n                                  )}\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <p className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>${order.total.toFixed(2)}</p>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <span className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusColor(order.status)}`}>\n                        {order.status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center gap-2\">\n                        <button\n                          onClick={() => setSelectedOrder(order)}\n                          className={`p-2 ${isDarkMode ? 'text-gray-400 hover:text-gray-300' : 'text-gray-400 hover:text-gray-600'} transition-colors`}\n                          title=\"View Details\"\n                        >\n                          <BiInfoCircle className=\"w-5 h-5\" />\n                        </button>\n                        {order.status === 'processing' && !order.shippingConfirmed && (\n                          <button\n                            onClick={() => {\n                              setSelectedOrderId(order.id);\n                              setIsTrackingModalOpen(true);\n                            }}\n                            className=\"px-3 py-1 text-sm font-medium rounded-full bg-green-100 text-green-800 hover:bg-green-200\"\n                          >\n                            Confirm Shipping\n                          </button>\n                        )}\n                        {order.trackingNumber && (\n                          <div className=\"flex flex-col gap-1\">\n                            <span className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                              {order.carrier.toUpperCase()}: {order.trackingNumber}\n                            </span>\n                            <span className={`text-xs font-medium flex items-center gap-1 ${\n                              order.shippingStatus === 'delivered' ? 'text-green-600' : 'text-blue-600'\n                            }`}>\n                              {order.shippingStatus === 'delivered' ? (\n                                <>\n                                  Delivered <BiCheck className=\"w-4 h-4\" />\n                                </>\n                              ) : 'In Transit'}\n                            </span>\n                          </div>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Tracking Modal */}\n      <TrackingModal\n        isOpen={isTrackingModalOpen}\n        onClose={() => setIsTrackingModalOpen(false)}\n        onSubmit={updateOrderStatus}\n        orderId={selectedOrderId}\n      />\n\n      {/* Order Details Modal */}\n      {selectedOrder && (\n        <OrderDetailsModal\n          order={selectedOrder}\n          onClose={() => setSelectedOrder(null)}\n        />\n      )}\n    </motion.div>\n  );\n};\n\nexport default OrdersReceived; ","import React, { useState, useEffect, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { BiStore, BiUser, BiDollar, BiShield, BiCreditCard, BiPackage } from 'react-icons/bi';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { doc, getDoc, updateDoc, setDoc } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { toast } from 'react-hot-toast';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ReactCountryFlag from 'react-country-flag';\nimport countryList from 'react-select-country-list';\nimport Select from 'react-select';\n\nconst SkeletonPulse = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      className={`w-full h-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-lg`}\n      animate={{\n        opacity: [0.4, 0.7, 0.4]\n      }}\n      transition={{\n        duration: 1.5,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n    />\n  );\n};\n\nconst SettingsSkeleton = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-6\">\n      {/* Header Skeleton */}\n      <div className=\"space-y-2\">\n        <div className=\"w-32 h-8\">\n          <SkeletonPulse />\n        </div>\n        <div className=\"w-64 h-5\">\n          <SkeletonPulse />\n        </div>\n      </div>\n\n      {/* Navigation Skeleton */}\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-xl p-2 shadow-sm`}>\n        <div className=\"flex gap-2\">\n          {[1, 2, 3, 4].map((i) => (\n            <div key={i} className=\"w-32 h-10\">\n              <SkeletonPulse />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Content Skeleton */}\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-2xl p-6 shadow-sm space-y-6`}>\n        {/* Form Fields */}\n        <div className=\"grid grid-cols-2 gap-6\">\n          {[1, 2].map((i) => (\n            <div key={i} className=\"space-y-2\">\n              <div className=\"w-32 h-5\">\n                <SkeletonPulse />\n              </div>\n              <div className=\"w-full h-10\">\n                <SkeletonPulse />\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"space-y-2\">\n          <div className=\"w-40 h-5\">\n            <SkeletonPulse />\n          </div>\n          <div className=\"w-full h-32\">\n            <SkeletonPulse />\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-3 gap-6\">\n          {[1, 2, 3].map((i) => (\n            <div key={i} className=\"space-y-2\">\n              <div className=\"w-24 h-5\">\n                <SkeletonPulse />\n              </div>\n              <div className=\"w-full h-10\">\n                <SkeletonPulse />\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Wallet Section */}\n        <div className=\"space-y-4\">\n          <div className=\"w-48 h-6\">\n            <SkeletonPulse />\n          </div>\n          <div className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'} rounded-xl p-6`}>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"space-y-2\">\n                <div className=\"w-32 h-5\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-48 h-4\">\n                  <SkeletonPulse />\n                </div>\n              </div>\n              <div className=\"w-32 h-10\">\n                <SkeletonPulse />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Submit Button */}\n        <div className=\"pt-4\">\n          <div className=\"w-full h-10\">\n            <SkeletonPulse />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Settings = () => {\n  const { user } = useMerchAuth();\n  const { isDarkMode } = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('profile');\n  const [showNetworkConfirm, setShowNetworkConfirm] = useState(false);\n  const [selectedNetwork, setSelectedNetwork] = useState(null);\n  const [buyerProfile, setBuyerProfile] = useState({\n    fullName: '',\n    email: user?.email || '',\n    phoneNumber: '',\n    shippingAddress: {\n      street: '',\n      city: '',\n      state: '',\n      country: {\n        name: '',\n        code: '',\n        flag: ''\n      },\n      postalCode: ''\n    }\n  });\n\n  const [storeSettings, setStoreSettings] = useState({\n    storeName: '',\n    description: '',\n    contactEmail: '',\n    phoneNumber: '',\n    country: '',\n    city: '',\n    postalCode: '',\n    shippingCountries: [],\n    shippingFee: 0,\n    preferredNetwork: ''\n  });\n\n  const [walletSettings, setWalletSettings] = useState({\n    walletAddress: '',\n    preferredToken: 'USDT'\n  });\n\n  const [hasChanges, setHasChanges] = useState(false);\n  const [originalSettings, setOriginalSettings] = useState(null);\n\n  const [buyerProfileHasChanges, setBuyerProfileHasChanges] = useState(false);\n  const [originalBuyerProfile, setOriginalBuyerProfile] = useState(null);\n\n  const countries = useMemo(() => countryList().getData(), []);\n  \n  const countryOptions = useMemo(() => \n    countries.map(country => ({\n      value: country.value,\n      label: (\n        <div className=\"flex items-center gap-2\">\n          <ReactCountryFlag \n            countryCode={country.value} \n            svg \n            style={{\n              width: '1.5em',\n              height: '1.5em',\n            }}\n          />\n          {country.label}\n        </div>\n      ),\n      searchLabel: country.label\n    })), \n    [countries]\n  );\n\n  const customStyles = useMemo(() => ({\n    control: (provided, state) => ({\n      ...provided,\n      padding: '2px',\n      borderColor: isDarkMode ? '#4B5563' : '#E5E7EB',\n      backgroundColor: isDarkMode ? '#374151' : 'white',\n      '&:hover': {\n        borderColor: '#FF1B6B'\n      }\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      backgroundColor: state.isSelected \n        ? '#FF1B6B' \n        : state.isFocused \n          ? isDarkMode ? '#4B5563' : '#FFE4E4'\n          : isDarkMode ? '#374151' : 'white',\n      color: state.isSelected \n        ? 'white' \n        : isDarkMode ? '#E5E7EB' : '#374151',\n      '&:hover': {\n        backgroundColor: state.isSelected ? '#FF1B6B' : isDarkMode ? '#4B5563' : '#FFE4E4',\n      }\n    }),\n    menu: (provided) => ({\n      ...provided,\n      backgroundColor: isDarkMode ? '#374151' : 'white',\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      color: isDarkMode ? '#E5E7EB' : '#374151',\n    }),\n    input: (provided) => ({\n      ...provided,\n      color: isDarkMode ? '#E5E7EB' : '#374151',\n    })\n  }), [isDarkMode]);\n\n  const handleCountryChange = (selectedOption) => {\n    const newProfile = {\n      ...buyerProfile,\n      shippingAddress: {\n        ...buyerProfile.shippingAddress,\n        country: {\n          name: selectedOption.searchLabel,\n          code: selectedOption.value,\n          flag: `https://flagcdn.com/${selectedOption.value.toLowerCase()}.svg`\n        }\n      }\n    };\n    setBuyerProfile(newProfile);\n    setBuyerProfileHasChanges(JSON.stringify(newProfile) !== JSON.stringify(originalBuyerProfile));\n  };\n\n  useEffect(() => {\n    const initializeSettings = async () => {\n      try {\n        if (!user) {\n          setLoading(false);\n          return;\n        }\n\n        // Set default tab based on user type\n        if (user.isSeller) {\n          setActiveTab('store');\n          await fetchSellerSettings();\n        } else {\n          setActiveTab('profile');\n          await fetchBuyerProfile();\n        }\n      } catch (error) {\n        toast.error('Failed to load settings');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeSettings();\n  }, [user]);\n\n  const fetchBuyerProfile = async () => {\n    try {\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      if (userDoc.exists()) {\n        const userData = userDoc.data();\n        const profileData = {\n          fullName: userData.fullName || '',\n          email: userData.email || user?.email || '',\n          phoneNumber: userData.phoneNumber || '',\n          walletAddress: userData.walletAddress || '',\n          shippingAddress: {\n            street: userData.shippingAddress?.street || '',\n            city: userData.shippingAddress?.city || '',\n            state: userData.shippingAddress?.state || '',\n            country: userData.shippingAddress?.country || {\n              name: '',\n              code: '',\n              flag: ''\n            },\n            postalCode: userData.shippingAddress?.postalCode || ''\n          }\n        };\n        setBuyerProfile(profileData);\n        setOriginalBuyerProfile(JSON.parse(JSON.stringify(profileData)));\n        setBuyerProfileHasChanges(false);\n\n        // Check if MetaMask is installed and connected\n        if (userData.walletAddress && window.ethereum) {\n          try {\n            const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n            if (accounts.length > 0 && accounts[0].toLowerCase() === userData.walletAddress.toLowerCase()) {\n              // Wallet is still connected, no need to reconnect\n              setBuyerProfile(prev => ({\n                ...prev,\n                walletAddress: accounts[0]\n              }));\n            }\n          } catch (error) {\n            console.error('Error checking wallet connection:', error);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching buyer profile:', error);\n      toast.error('Failed to load profile');\n    }\n  };\n\n  const handleBuyerInputChange = (e) => {\n    const { name, value } = e.target;\n    let newProfile;\n    if (name.includes('shippingAddress.')) {\n      const field = name.split('.')[1];\n      newProfile = {\n        ...buyerProfile,\n        shippingAddress: {\n          ...buyerProfile.shippingAddress,\n          [field]: value\n        }\n      };\n    } else {\n      newProfile = {\n        ...buyerProfile,\n        [name]: value\n      };\n    }\n    setBuyerProfile(newProfile);\n    setBuyerProfileHasChanges(JSON.stringify(newProfile) !== JSON.stringify(originalBuyerProfile));\n  };\n\n  const handleBuyerProfileSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await setDoc(doc(db, 'users', user.uid), {\n        ...buyerProfile,\n        updatedAt: new Date()\n      }, { merge: true });\n      setOriginalBuyerProfile(JSON.parse(JSON.stringify(buyerProfile)));\n      setBuyerProfileHasChanges(false);\n      toast.success('Profile updated successfully');\n    } catch (error) {\n      toast.error('Failed to update profile');\n    }\n  };\n\n  const fetchSellerSettings = async () => {\n    if (!user?.sellerId) return;\n\n    try {\n      const sellerRef = doc(db, 'sellers', user.sellerId);\n      const sellerDoc = await getDoc(sellerRef);\n      \n      if (!sellerDoc.exists()) {\n        // Get user document to check for existing wallet address\n        const userDoc = await getDoc(doc(db, 'users', user.uid));\n        const userData = userDoc.exists() ? userDoc.data() : {};\n\n        // Create initial seller document if it doesn't exist\n        const initialSellerData = {\n          sellerId: user.sellerId,\n          userId: user.uid,\n          storeName: '',\n          description: '',\n          contactEmail: user.email,\n          phoneNumber: '',\n          country: {\n            name: '',\n            code: '',\n            flag: ''\n          },\n          city: '',\n          postalCode: '',\n          shippingCountries: [],\n          shippingFee: 0,\n          preferredToken: 'USDC',\n          preferredNetwork: '',\n          walletAddress: userData.walletAddress || '',\n          createdAt: new Date(),\n          updatedAt: new Date()\n        };\n        \n        await setDoc(sellerRef, initialSellerData);\n        setStoreSettings(initialSellerData);\n        setOriginalSettings(initialSellerData);\n        setWalletSettings({\n          walletAddress: userData.walletAddress || '',\n          preferredToken: initialSellerData.preferredToken\n        });\n      } else {\n        const sellerData = sellerDoc.data();\n        // Ensure country data is in the correct format\n        const formattedSellerData = {\n          ...sellerData,\n          country: sellerData.country?.code ? sellerData.country : {\n            name: sellerData.country || '',\n            code: '',\n            flag: ''\n          }\n        };\n        setStoreSettings(formattedSellerData);\n        setOriginalSettings(formattedSellerData);\n        setWalletSettings({\n          walletAddress: sellerData.walletAddress || '',\n          preferredToken: sellerData.preferredToken || 'USDC'\n        });\n      }\n      setHasChanges(false);\n    } catch (error) {\n      toast.error('Failed to load seller settings');\n    }\n  };\n\n  const handleConnectWallet = async () => {\n    try {\n      const provider = await detectEthereumProvider();\n      if (!provider) {\n        toast.error('Please install MetaMask to connect your wallet');\n        return;\n      }\n\n      // Request account access and permissions\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      \n      if (accounts.length === 0) {\n        toast.error('Please connect your wallet');\n        return;\n      }\n\n      const walletAddress = accounts[0];\n      console.log('Connecting wallet:', walletAddress);\n\n      // Update local state immediately\n      if (user.isSeller) {\n        console.log('Updating seller state with wallet:', walletAddress);\n        setWalletSettings(prev => {\n          console.log('Previous wallet settings:', prev);\n          return {\n            ...prev,\n            walletAddress\n          };\n        });\n        setStoreSettings(prev => {\n          console.log('Previous store settings:', prev);\n          return {\n            ...prev,\n            walletAddress\n          };\n        });\n      } else {\n        setBuyerProfile(prev => ({\n          ...prev,\n          walletAddress\n        }));\n      }\n\n      // Update Firestore\n      try {\n        if (user.isSeller) {\n          console.log('Updating seller document with wallet:', walletAddress);\n          // Update seller document\n          const sellerRef = doc(db, 'sellers', user.sellerId);\n          await updateDoc(sellerRef, {\n            walletAddress,\n            updatedAt: new Date()\n          });\n\n          // Also update user document for consistency\n          await updateDoc(doc(db, 'users', user.uid), {\n            walletAddress,\n            updatedAt: new Date()\n          });\n\n          // Fetch updated seller data to ensure UI is in sync\n          const updatedSellerDoc = await getDoc(sellerRef);\n          if (updatedSellerDoc.exists()) {\n            const sellerData = updatedSellerDoc.data();\n            console.log('Updated seller data:', sellerData);\n            setStoreSettings(sellerData);\n            setWalletSettings(prev => ({\n              ...prev,\n              walletAddress: sellerData.walletAddress\n            }));\n          }\n        } else {\n          await updateDoc(doc(db, 'users', user.uid), {\n            walletAddress,\n            updatedAt: new Date()\n          });\n        }\n        toast.success('Wallet connected successfully');\n      } catch (error) {\n        console.error('Error updating Firestore:', error);\n        toast.error('Failed to save wallet connection');\n        // Revert local state if Firestore update fails\n        if (user.isSeller) {\n          setWalletSettings(prev => ({\n            ...prev,\n            walletAddress: ''\n          }));\n          setStoreSettings(prev => ({\n            ...prev,\n            walletAddress: ''\n          }));\n        } else {\n          setBuyerProfile(prev => ({\n            ...prev,\n            walletAddress: ''\n          }));\n        }\n      }\n    } catch (error) {\n      console.error('Wallet connection error:', error);\n      if (error.code === 4001) {\n        toast.error('You rejected the connection request');\n      } else {\n        toast.error('Failed to connect wallet');\n      }\n    }\n  };\n\n  const handleDisconnectWallet = async () => {\n    try {\n      // Update local state immediately\n      if (user.isSeller) {\n        setWalletSettings(prev => ({\n          ...prev,\n          walletAddress: ''\n        }));\n        setStoreSettings(prev => ({\n          ...prev,\n          walletAddress: ''\n        }));\n      } else {\n        setBuyerProfile(prev => ({\n          ...prev,\n          walletAddress: ''\n        }));\n      }\n\n      // Update Firestore\n      if (user.isSeller) {\n        await updateDoc(doc(db, 'sellers', user.sellerId), {\n          walletAddress: '',\n          updatedAt: new Date()\n        });\n      } else {\n        await updateDoc(doc(db, 'users', user.uid), {\n          walletAddress: '',\n          updatedAt: new Date()\n        });\n      }\n      toast.success('Wallet disconnected successfully');\n    } catch (error) {\n      console.error('Error disconnecting wallet:', error);\n      toast.error('Failed to disconnect wallet');\n      // Restore previous state if Firestore update fails\n      if (user.isSeller) {\n        setWalletSettings(prev => ({\n          ...prev,\n          walletAddress: walletSettings.walletAddress\n        }));\n        setStoreSettings(prev => ({\n          ...prev,\n          walletAddress: walletSettings.walletAddress\n        }));\n      } else {\n        setBuyerProfile(prev => ({\n          ...prev,\n          walletAddress: buyerProfile.walletAddress\n        }));\n      }\n    }\n  };\n\n  const handleStoreSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await updateDoc(doc(db, 'sellers', user.sellerId), {\n        ...storeSettings,\n        updatedAt: new Date()\n      });\n      setOriginalSettings(storeSettings);\n      setHasChanges(false);\n      toast.success('Store settings updated successfully');\n    } catch (error) {\n      toast.error('Failed to update store settings');\n    }\n  };\n\n  const handleStoreInputChange = (e) => {\n    const { name, value } = e.target;\n    setStoreSettings(prev => {\n      const newSettings = {\n        ...prev,\n        [name]: value\n      };\n      // Compare with original settings to determine if there are changes\n      const hasChanged = JSON.stringify(newSettings) !== JSON.stringify(originalSettings);\n      setHasChanges(hasChanged);\n      return newSettings;\n    });\n  };\n\n  if (loading) {\n    return <SettingsSkeleton />;\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      className={`max-w-4xl mx-auto p-6 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}\n    >\n      <div>\n        <h1 className={`text-2xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Settings</h1>\n        <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mb-6`}>\n          Manage your {user?.isSeller ? 'store settings' : 'profile'} and preferences\n        </p>\n      </div>\n\n      {/* Settings Navigation */}\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-xl p-2 shadow-sm mb-6`}>\n        <nav className=\"flex gap-2\">\n          {user?.isSeller ? (\n            // Seller Tabs\n            [\n              { id: 'store', label: 'Store Settings', icon: BiStore },\n              { id: 'account', label: 'Account', icon: BiUser },\n              { id: 'security', label: 'Security', icon: BiShield }\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\n                  activeTab === tab.id\n                    ? 'bg-[#FF1B6B] text-white'\n                    : isDarkMode \n                      ? 'text-gray-300 hover:bg-gray-700'\n                      : 'text-gray-600 hover:bg-gray-100'\n                }`}\n              >\n                <tab.icon className=\"w-5 h-5\" />\n                {tab.label}\n              </button>\n            ))\n          ) : (\n            // Buyer Tabs\n            [\n              { id: 'profile', label: 'Profile', icon: BiUser },\n              { id: 'shipping', label: 'Shipping', icon: BiPackage },\n              { id: 'security', label: 'Security', icon: BiShield }\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\n                  activeTab === tab.id\n                    ? 'bg-[#FF1B6B] text-white'\n                    : isDarkMode \n                      ? 'text-gray-300 hover:bg-gray-700'\n                      : 'text-gray-600 hover:bg-gray-100'\n                }`}\n              >\n                <tab.icon className=\"w-5 h-5\" />\n                {tab.label}\n              </button>\n            ))\n          )}\n        </nav>\n      </div>\n\n      {/* Settings Content */}\n      <div className=\"space-y-6\">\n        {user?.isSeller ? (\n          <>\n            {activeTab === 'store' && (\n              <form onSubmit={handleStoreSubmit} className=\"space-y-6\">\n                {/* Store Details */}\n                <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-gray-50'} rounded-xl p-6`}>\n                  <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>Store Details</h3>\n                  <div className=\"grid grid-cols-2 gap-6 mb-6\">\n                    <div>\n                      <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                        Store Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"storeName\"\n                        value={storeSettings.storeName}\n                        onChange={handleStoreInputChange}\n                        className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                          isDarkMode \n                            ? 'bg-gray-700 border-gray-600 text-gray-100' \n                            : 'bg-white border-gray-300 text-gray-900'\n                        }`}\n                      />\n                    </div>\n                    <div>\n                      <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                        Contact Email\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"contactEmail\"\n                        value={storeSettings.contactEmail}\n                        onChange={handleStoreInputChange}\n                        className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                          isDarkMode \n                            ? 'bg-gray-700 border-gray-600 text-gray-100' \n                            : 'bg-white border-gray-300 text-gray-900'\n                        }`}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"mb-6\">\n                    <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                      Store Description\n                    </label>\n                    <textarea\n                      name=\"description\"\n                      value={storeSettings.description}\n                      onChange={handleStoreInputChange}\n                      rows={3}\n                      className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                        isDarkMode \n                          ? 'bg-gray-700 border-gray-600 text-gray-100' \n                          : 'bg-white border-gray-300 text-gray-900'\n                      }`}\n                    />\n                  </div>\n\n                  <div className=\"grid grid-cols-3 gap-6\">\n                    <div>\n                      <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                        Country\n                      </label>\n                      <div className=\"w-full px-4 py-2 border rounded-lg flex items-center gap-2 ${\n                        isDarkMode \n                          ? 'bg-gray-700 border-gray-600 text-gray-200' \n                          : 'bg-gray-50 border-gray-200 text-gray-700'\n                      }\">\n                        {storeSettings.country?.code && (\n                          <ReactCountryFlag\n                            countryCode={storeSettings.country.code}\n                            svg\n                            style={{\n                              width: '1.5em',\n                              height: '1.5em',\n                            }}\n                          />\n                        )}\n                        <span className={`${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\n                          {storeSettings.country?.name || 'Country not set'}\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                        City\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"city\"\n                        value={storeSettings.city}\n                        onChange={handleStoreInputChange}\n                        className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                          isDarkMode \n                            ? 'bg-gray-700 border-gray-600 text-gray-100' \n                            : 'bg-white border-gray-300 text-gray-900'\n                        }`}\n                      />\n                    </div>\n                    <div>\n                      <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                        Postal Code\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"postalCode\"\n                        value={storeSettings.postalCode}\n                        onChange={handleStoreInputChange}\n                        className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                          isDarkMode \n                            ? 'bg-gray-700 border-gray-600 text-gray-100' \n                            : 'bg-white border-gray-300 text-gray-900'\n                        }`}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/* Shipping Settings */}\n                <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-gray-50'} rounded-xl p-6`}>\n                  <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>Shipping Settings</h3>\n                  <div>\n                    <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                      Shipping Fee (USD)\n                    </label>\n                    <div className=\"relative max-w-xs\">\n                      <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-500\">$</span>\n                      <input\n                        type=\"number\"\n                        name=\"shippingFee\"\n                        min=\"0\"\n                        step=\"0.01\"\n                        value={storeSettings.shippingFee}\n                        onChange={handleStoreInputChange}\n                        className={`w-full pl-8 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                          isDarkMode \n                            ? 'bg-gray-700 border-gray-600 text-gray-100' \n                            : 'bg-white border-gray-300 text-gray-900'\n                        }`}\n                        placeholder=\"0.00\"\n                      />\n                    </div>\n                    <p className=\"mt-1 text-sm text-gray-500\">\n                      This fee will be added to all orders from your store\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex justify-end\">\n                  <button\n                    type=\"submit\"\n                    disabled={!hasChanges}\n                    className={`px-6 py-2 rounded-lg transition-colors ${\n                      hasChanges \n                        ? 'bg-[#FF1B6B] text-white hover:bg-[#D4145A]' \n                        : `${isDarkMode ? 'bg-gray-700 text-gray-500' : 'bg-gray-200 text-gray-500'} cursor-not-allowed`\n                    }`}\n                  >\n                    Save Store Settings\n                  </button>\n                </div>\n              </form>\n            )}\n\n            {activeTab === 'account' && (\n              <div className=\"space-y-6\">\n                {/* Wallet Settings */}\n                <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-gray-50'} rounded-xl p-6`}>\n                  <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>Wallet Settings</h3>\n                  <div className={`${isDarkMode ? 'bg-gray-700' : 'bg-white'} rounded-lg p-4`}>\n                    <div className=\"flex items-start justify-between\">\n                      <div>\n                        <h4 className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>Connected Wallet</h4>\n                        <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1`}>\n                          {walletSettings.walletAddress \n                            ? `${walletSettings.walletAddress.slice(0, 6)}...${walletSettings.walletAddress.slice(-4)}`\n                            : 'No wallet connected'}\n                        </p>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        {walletSettings.walletAddress ? (\n                          <>\n                            <button\n                              type=\"button\"\n                              onClick={handleDisconnectWallet}\n                              className={`px-4 py-2 ${\n                                isDarkMode \n                                  ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \n                                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                              } rounded-lg transition-colors text-sm`}\n                            >\n                              Disconnect\n                            </button>\n                            <button\n                              type=\"button\"\n                              onClick={handleConnectWallet}\n                              className=\"px-4 py-2 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#D4145A] transition-colors text-sm\"\n                            >\n                              Change Wallet\n                            </button>\n                          </>\n                        ) : (\n                          <button\n                            type=\"button\"\n                            onClick={handleConnectWallet}\n                            className=\"px-4 py-2 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#D4145A] transition-colors text-sm\"\n                          >\n                            Connect Wallet\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Network Selection */}\n                <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-gray-50'} rounded-xl p-6`}>\n                  <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>Network Settings</h3>\n                  <div>\n                    <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-2`}>\n                      Preferred Network\n                    </label>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      {[\n                        { id: 'polygon', name: 'Polygon', logo: '/polygon.png' },\n                        { id: 'unichain', name: 'Unichain Testnet', logo: '/unichain-logo.png' }\n                      ].map(network => (\n                        <button\n                          key={network.id}\n                          type=\"button\"\n                          disabled={storeSettings.preferredNetwork === 'polygon' || storeSettings.preferredNetwork === 'unichain'}\n                          onClick={() => {\n                            if (storeSettings.preferredNetwork !== 'polygon' && storeSettings.preferredNetwork !== 'unichain') {\n                              setSelectedNetwork(network);\n                              setShowNetworkConfirm(true);\n                            }\n                          }}\n                          className={`p-4 border rounded-lg transition-colors flex items-center justify-center gap-2 ${\n                            storeSettings.preferredNetwork === network.id \n                              ? `border-[#FF1B6B] ${isDarkMode ? 'bg-pink-900/20' : 'bg-pink-50'}` \n                              : (storeSettings.preferredNetwork === 'polygon' || storeSettings.preferredNetwork === 'unichain')\n                                ? `border-gray-200 opacity-50 cursor-not-allowed ${isDarkMode ? 'bg-gray-700' : 'bg-white'}`\n                                : `border-gray-200 hover:border-[#FF1B6B] ${isDarkMode ? 'bg-gray-700' : 'bg-white'}`\n                          }`}\n                        >\n                          <img \n                            src={network.logo}\n                            alt={`${network.name} logo`}\n                            className=\"w-6 h-6\"\n                          />\n                          <span className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>{network.name}</span>\n                        </button>\n                      ))}\n                    </div>\n                    {showNetworkConfirm && selectedNetwork && (\n                      <div className={`mt-4 border border-[#FF1B6B] rounded-lg p-4 ${isDarkMode ? 'bg-pink-900/20' : 'bg-pink-50'}`}>\n                        <div className=\"flex items-start gap-3\">\n                          <div className=\"text-[#FF1B6B] mt-1\">⚠️</div>\n                          <div className=\"flex-1\">\n                            <h4 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-2`}>\n                              Confirm Network Selection\n                            </h4>\n                            <p className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'} mb-4`}>\n                              Are you sure you want to build your store on {selectedNetwork.name}? This is a one-time choice and all your products and transactions will only operate on this network.\n                            </p>\n                            <div className=\"flex justify-end gap-3\">\n                              <button\n                                onClick={() => {\n                                  setShowNetworkConfirm(false);\n                                  setSelectedNetwork(null);\n                                }}\n                                className={`px-4 py-2 text-sm ${isDarkMode ? 'text-gray-300 hover:text-gray-100' : 'text-gray-600 hover:text-gray-900'} transition-colors`}\n                              >\n                                Cancel\n                              </button>\n                              <button\n                                onClick={() => {\n                                  setStoreSettings(prev => ({ ...prev, preferredNetwork: selectedNetwork.id }));\n                                  updateDoc(doc(db, 'sellers', user.sellerId), {\n                                    preferredNetwork: selectedNetwork.id,\n                                    updatedAt: new Date()\n                                  });\n                                  toast.success(`Your store has been permanently set to operate on ${selectedNetwork.name} network`, {\n                                    style: {\n                                      background: '#FF1B6B',\n                                      color: '#fff',\n                                      padding: '16px',\n                                      borderRadius: '10px',\n                                    },\n                                    iconTheme: {\n                                      primary: '#fff',\n                                      secondary: '#FF1B6B',\n                                    },\n                                    duration: 5000\n                                  });\n                                  setShowNetworkConfirm(false);\n                                  setSelectedNetwork(null);\n                                }}\n                                className=\"px-4 py-2 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#D4145A] transition-colors text-sm\"\n                              >\n                                Confirm Selection\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                    <div className=\"mt-4\">\n                      <p className={`text-sm ${isDarkMode ? 'text-gray-200' : 'text-gray-500'}`}>\n                        {storeSettings.preferredNetwork \n                          ? `Your store operates on ${storeSettings.preferredNetwork === 'polygon' ? 'Polygon' : 'Unichain Testnet'} network.`\n                          : \"Select the network you want to build your store on. This is a one-time choice and cannot be changed later.\"}\n                      </p>\n                      {!storeSettings.preferredNetwork && (\n                        <p className=\"mt-2 text-sm text-[#FF1B6B]\">\n                          ⚠️ Warning: Once you select a network, you cannot change it later. All your products and transactions will operate only on the selected network.\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'security' && (\n              <div className=\"text-center py-8\">\n                <h2 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-2`}>Security Settings</h2>\n                <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Security settings coming soon</p>\n              </div>\n            )}\n          </>\n        ) : (\n          // Buyer Settings Content\n          <>\n            {activeTab === 'profile' && (\n              <form onSubmit={handleBuyerProfileSubmit} className=\"space-y-6\">\n                {/* Wallet Section */}\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Payment Wallet</h3>\n                  <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-gray-50'} rounded-xl p-6`}>\n                    <div className=\"flex items-start justify-between\">\n                      <div>\n                        <h4 className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>Connected Wallet</h4>\n                        <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1`}>\n                          {buyerProfile.walletAddress \n                            ? `${buyerProfile.walletAddress.slice(0, 6)}...${buyerProfile.walletAddress.slice(-4)}`\n                            : 'No wallet connected'}\n                        </p>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        {buyerProfile.walletAddress ? (\n                          <>\n                            <button\n                              type=\"button\"\n                              onClick={handleDisconnectWallet}\n                              className={`px-4 py-2 ${\n                                isDarkMode \n                                  ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \n                                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                              } rounded-lg transition-colors text-sm`}\n                            >\n                              Disconnect\n                            </button>\n                            <button\n                              type=\"button\"\n                              onClick={handleConnectWallet}\n                              className=\"px-4 py-2 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#D4145A] transition-colors text-sm\"\n                            >\n                              Change Wallet\n                            </button>\n                          </>\n                        ) : (\n                          <button\n                            type=\"button\"\n                            onClick={handleConnectWallet}\n                            className=\"px-4 py-2 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#D4145A] transition-colors text-sm\"\n                          >\n                            Connect Wallet\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Personal Information */}\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Personal Information</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    <div>\n                      <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                        Full Name\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"fullName\"\n                        value={buyerProfile.fullName}\n                        onChange={handleBuyerInputChange}\n                        className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                          isDarkMode \n                            ? 'bg-gray-700 border-gray-600 text-gray-100' \n                            : 'bg-white border-gray-300 text-gray-900'\n                        }`}\n                        placeholder=\"Your full name\"\n                      />\n                    </div>\n                    <div>\n                      <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                        Email\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={buyerProfile.email}\n                        onChange={handleBuyerInputChange}\n                        className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                          isDarkMode \n                            ? 'bg-gray-700 border-gray-600 text-gray-100' \n                            : 'bg-white border-gray-300 text-gray-900'\n                        }`}\n                        placeholder=\"Your email\"\n                      />\n                    </div>\n                    <div>\n                      <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                        Phone Number\n                      </label>\n                      <input\n                        type=\"tel\"\n                        name=\"phoneNumber\"\n                        value={buyerProfile.phoneNumber}\n                        onChange={handleBuyerInputChange}\n                        className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                          isDarkMode \n                            ? 'bg-gray-700 border-gray-600 text-gray-100' \n                            : 'bg-white border-gray-300 text-gray-900'\n                        }`}\n                        placeholder=\"Your phone number\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"pt-4\">\n                  <button\n                    type=\"submit\"\n                    disabled={!buyerProfileHasChanges}\n                    className={`w-full px-4 py-2 rounded-lg transition-colors ${\n                      buyerProfileHasChanges \n                        ? 'bg-[#FF1B6B] text-white hover:bg-[#D4145A]' \n                        : `${isDarkMode ? 'bg-gray-700 text-gray-500' : 'bg-gray-200 text-gray-500'} cursor-not-allowed`\n                    }`}\n                  >\n                    Save Profile\n                  </button>\n                </div>\n              </form>\n            )}\n\n            {activeTab === 'shipping' && (\n              <form onSubmit={handleBuyerProfileSubmit} className=\"space-y-6\">\n                <div>\n                  <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                    Street Address\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"shippingAddress.street\"\n                    value={buyerProfile.shippingAddress.street}\n                    onChange={handleBuyerInputChange}\n                    className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                      isDarkMode \n                        ? 'bg-gray-700 border-gray-600 text-gray-100' \n                        : 'bg-white border-gray-300 text-gray-900'\n                    }`}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-6\">\n                  <div>\n                    <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                      City\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"shippingAddress.city\"\n                      value={buyerProfile.shippingAddress.city}\n                      onChange={handleBuyerInputChange}\n                      className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                        isDarkMode \n                          ? 'bg-gray-700 border-gray-600 text-gray-100' \n                          : 'bg-white border-gray-300 text-gray-900'\n                      }`}\n                    />\n                  </div>\n                  <div>\n                    <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                      State/Province\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"shippingAddress.state\"\n                      value={buyerProfile.shippingAddress.state}\n                      onChange={handleBuyerInputChange}\n                      className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                        isDarkMode \n                          ? 'bg-gray-700 border-gray-600 text-gray-100' \n                          : 'bg-white border-gray-300 text-gray-900'\n                      }`}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-6\">\n                  <div>\n                    <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                      Country\n                    </label>\n                    <Select\n                      options={countryOptions}\n                      styles={customStyles}\n                      onChange={handleCountryChange}\n                      required\n                      placeholder=\"Select country\"\n                      className=\"country-select\"\n                      value={buyerProfile.shippingAddress.country?.code ? \n                        countryOptions.find(option => option.value === buyerProfile.shippingAddress.country.code) \n                        : null}\n                    />\n                  </div>\n                  <div>\n                    <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                      Postal Code\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"shippingAddress.postalCode\"\n                      value={buyerProfile.shippingAddress.postalCode}\n                      onChange={handleBuyerInputChange}\n                      className={`w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors ${\n                        isDarkMode \n                          ? 'bg-gray-700 border-gray-600 text-gray-100' \n                          : 'bg-white border-gray-300 text-gray-900'\n                      }`}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"pt-4\">\n                  <button\n                    type=\"submit\"\n                    disabled={!buyerProfileHasChanges}\n                    className={`w-full px-4 py-2 rounded-lg transition-colors ${\n                      buyerProfileHasChanges \n                        ? 'bg-[#FF1B6B] text-white hover:bg-[#D4145A]' \n                        : `${isDarkMode ? 'bg-gray-700 text-gray-500' : 'bg-gray-200 text-gray-500'} cursor-not-allowed`\n                    }`}\n                  >\n                    Save Shipping Address\n                  </button>\n                </div>\n              </form>\n            )}\n\n            {activeTab === 'security' && (\n              <div className=\"text-center py-8\">\n                <h2 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-2`}>Security Settings</h2>\n                <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Security settings coming soon</p>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Settings; ","import React, { useState, useEffect } from 'react';\r\n\r\nconst CountdownTimer = ({ endsAt }) => {\r\n  const [timeLeft, setTimeLeft] = useState('');\r\n\r\n  useEffect(() => {\r\n    const calculateTimeLeft = () => {\r\n      const now = new Date().getTime();\r\n      const endTime = new Date(endsAt).getTime();\r\n      const difference = endTime - now;\r\n\r\n      if (difference <= 0) {\r\n        return 'Ended';\r\n      }\r\n\r\n      // Calculate time units\r\n      const days = Math.floor(difference / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((difference % (1000 * 60)) / 1000);\r\n\r\n      // Format the output\r\n      if (days > 0) {\r\n        return `${days}d ${hours}h`;\r\n      } else if (hours > 0) {\r\n        return `${hours}h ${minutes}m`;\r\n      } else if (minutes > 0) {\r\n        return `${minutes}m ${seconds}s`;\r\n      } else {\r\n        return `${seconds}s`;\r\n      }\r\n    };\r\n\r\n    // Initial calculation\r\n    setTimeLeft(calculateTimeLeft());\r\n\r\n    // Update every second\r\n    const timer = setInterval(() => {\r\n      const timeLeft = calculateTimeLeft();\r\n      setTimeLeft(timeLeft);\r\n      \r\n      // Stop the interval if the countdown has ended\r\n      if (timeLeft === 'Ended') {\r\n        clearInterval(timer);\r\n      }\r\n    }, 1000);\r\n\r\n    // Cleanup\r\n    return () => clearInterval(timer);\r\n  }, [endsAt]);\r\n\r\n  return <span className=\"font-medium\">{timeLeft}</span>;\r\n};\r\n\r\nexport default CountdownTimer; ","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport { BiTime } from 'react-icons/bi';\nimport { MdLocalOffer } from 'react-icons/md';\nimport CountdownTimer from '../shared/CountdownTimer';\n\nconst FeaturedDeals = ({ products }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  // Filter only products with active discounts\n  const discountedProducts = products.filter(product => \n    product.hasDiscount && \n    product.discountEndsAt && \n    new Date(product.discountEndsAt) > new Date()\n  ).sort((a, b) => new Date(a.discountEndsAt) - new Date(b.discountEndsAt));\n\n  useEffect(() => {\n    if (discountedProducts.length <= 4) return;\n\n    const interval = setInterval(() => {\n      setCurrentIndex((prev) => {\n        const next = prev + 4;\n        return next >= discountedProducts.length ? 0 : next;\n      });\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [discountedProducts.length]);\n\n  if (discountedProducts.length === 0) return null;\n\n  return (\n    <div className=\"bg-gradient-to-r from-pink-500/5 via-pink-500/10 to-purple-500/5 rounded-2xl p-6 mb-8\">\n      <div className=\"flex items-center gap-3 mb-4\">\n        <div className=\"flex items-center gap-2 px-4 py-2 bg-[#FF1B6B] text-white rounded-full\">\n          <MdLocalOffer className=\"text-xl animate-pulse\" />\n          <span className=\"font-bold\">HOT DEALS</span>\n        </div>\n        <div className=\"h-[2px] flex-1 bg-gradient-to-r from-pink-500/20 to-transparent rounded-full\" />\n      </div>\n\n      <div className=\"relative overflow-hidden\">\n        <AnimatePresence initial={false}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n            {discountedProducts.slice(currentIndex, currentIndex + 4).map((product, index) => (\n              <motion.div\n                key={product.id}\n                initial={{ x: \"100%\", opacity: 0 }}\n                animate={{ x: 0, opacity: 1 }}\n                exit={{ x: \"-100%\", opacity: 0 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                className=\"group\"\n              >\n                <Link \n                  to={`/merch-store/product/${product.id}`}\n                  className=\"block bg-white rounded-xl overflow-hidden shadow-sm hover:shadow-xl transition-all duration-300 relative\"\n                >\n                  {/* Glowing effect on hover */}\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-pink-500/0 via-pink-500/10 to-purple-500/0 opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n                  \n                  <div className=\"aspect-[4/3] relative overflow-hidden\">\n                    <img \n                      src={product.images[0]} \n                      alt={product.name}\n                      className=\"w-full h-full object-cover transform group-hover:scale-110 transition-transform duration-700\"\n                    />\n                    <div className=\"absolute top-0 left-0 right-0 p-3 bg-gradient-to-b from-black/50 to-transparent\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2 px-3 py-1.5 bg-[#FF1B6B] text-white rounded-full text-sm font-bold\">\n                          <span>{product.discountPercent}% OFF</span>\n                        </div>\n                        <div className=\"flex items-center gap-1.5 px-3 py-1.5 bg-black/50 backdrop-blur-sm text-white rounded-full text-sm\">\n                          <BiTime className=\"text-base animate-pulse\" />\n                          <CountdownTimer endsAt={product.discountEndsAt} />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"absolute bottom-0 left-0 right-0 p-3 bg-gradient-to-t from-black/50 to-transparent\">\n                      <div className=\"flex items-end justify-between\">\n                        <div>\n                          <h3 className=\"text-white font-medium line-clamp-1\">{product.name}</h3>\n                          <div className=\"flex items-center gap-2 mt-1\">\n                            <div className=\"flex items-center gap-1\">\n                              <span className=\"text-[#FF1B6B] font-bold\">\n                                ${product.discountedPrice.toFixed(2)}\n                              </span>\n                              <span className=\"text-gray-300 text-sm line-through\">\n                                ${product.price.toFixed(2)}\n                              </span>\n                            </div>\n                            <img\n                              src={product.tokenLogo}\n                              alt={product.acceptedToken}\n                              className=\"w-4 h-4\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"flex items-center gap-1 px-2 py-1 bg-white/10 backdrop-blur-sm rounded-full\">\n                          <img \n                            src={product.network === 'polygon' ? '/polygon.png' : '/unichain-logo.png'} \n                            alt={product.network} \n                            className=\"w-4 h-4\"\n                          />\n                          <span className=\"text-xs font-medium text-white capitalize\">\n                            {product.network}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Link>\n              </motion.div>\n            ))}\n          </div>\n        </AnimatePresence>\n\n        {/* Navigation dots */}\n        {discountedProducts.length > 4 && (\n          <div className=\"flex justify-center gap-2 mt-4\">\n            {Array.from({ length: Math.ceil(discountedProducts.length / 4) }).map((_, i) => (\n              <button\n                key={i}\n                onClick={() => setCurrentIndex(i * 4)}\n                className={`w-2 h-2 rounded-full transition-all duration-300 ${\n                  Math.floor(currentIndex / 4) === i \n                    ? 'bg-[#FF1B6B] w-4' \n                    : 'bg-gray-300 hover:bg-gray-400'\n                }`}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FeaturedDeals; ","import React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence, useAnimation } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport { BiSearch, BiFilter, BiStar, BiMenu, BiTime } from 'react-icons/bi';\nimport { \n  MdGrid3X3,\n  MdOutlineShoppingBag,\n  MdDevices,\n  MdOutlineHome,\n  MdOutlinePalette,\n  MdOutlineCollections,\n  // Clothing and Fashion icons\n  MdOutlineCheckroom,\n  MdOutlineDry,\n  MdOutlineStyle,\n  MdOutlineSportsHockey,\n  MdOutlineDryCleaning,\n  MdOutlineBusinessCenter,\n  MdOutlinePerson,\n  MdOutlinePersonOutline,\n  MdOutlineWoman,\n  MdOutlineSportsBasketball,\n  MdOutlineWork,\n  // Footwear icons\n  MdOutlineDirectionsRun,\n  MdOutlineDirectionsWalk,\n  // Fashion Accessories icons\n  MdOutlineShoppingBag as MdOutlineBag,\n  MdOutlineWatchLater,\n  MdOutlineFace,\n  MdOutlineDiamond,\n  // Tech Accessories icons\n  MdOutlinePhoneAndroid,\n  MdOutlineLaptop,\n  MdOutlineHeadphones,\n  MdOutlineTablet,\n  MdOutlineBatteryChargingFull,\n  MdOutlineNightlight\n} from 'react-icons/md';\nimport {\n  GiTShirt,\n  GiPoloShirt,\n  GiArmoredPants,\n  GiHoodie,\n  GiLabCoat,\n  GiSuitcase,\n  GiDress,\n  GiSkirt,\n  GiRunningShoe,\n  GiBoots,\n  GiBelt\n} from 'react-icons/gi';\nimport {\n  FaShoePrints,\n  FaSocks\n} from 'react-icons/fa';\nimport { collection, query, getDocs, where, orderBy, limit } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { toast } from 'react-hot-toast';\nimport VerificationCheckmark from '../../components/shared/VerificationCheckmark';\nimport { MdLocalOffer, MdTimer } from 'react-icons/md';\nimport FeaturedDeals from '../../components/merch/FeaturedDeals';\nimport { AiFillStar } from 'react-icons/ai';\nimport { useTheme } from '../../context/ThemeContext';\n\nconst SkeletonPulse = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      className={`w-full h-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'} rounded-lg`}\n      animate={{\n        opacity: [0.3, 0.6, 0.3],\n        scale: [0.98, 1, 0.98]\n      }}\n      transition={{\n        duration: 2,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n    />\n  );\n};\n\nconst ProductImages = ({ images }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (images.length <= 1) return;\n\n    const timer = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % images.length);\n    }, 3000);\n\n    return () => clearInterval(timer);\n  }, [images]);\n\n  return (\n    <div className=\"relative w-full h-full overflow-hidden\">\n      <AnimatePresence initial={false}>\n        <motion.img\n          key={currentIndex}\n          src={images[currentIndex]}\n          alt=\"Product\"\n          className=\"absolute w-full h-full object-cover\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.5 }}\n        />\n      </AnimatePresence>\n      {images.length > 1 && (\n        <div className=\"absolute bottom-2 left-0 right-0 flex justify-center gap-1\">\n          {images.map((_, index) => (\n            <div\n              key={index}\n              className={`w-1.5 h-1.5 rounded-full transition-colors duration-300 ${\n                index === currentIndex ? 'bg-white' : 'bg-white/50'\n              }`}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst BrowseSkeleton = () => (\n  <div className=\"max-w-7xl mx-auto p-4 space-y-6\">\n    {/* Search and Filter Skeleton */}\n    <motion.div \n      className=\"flex items-center justify-between gap-4\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <div className=\"flex-1\">\n        <div className=\"w-full h-12\">\n          <SkeletonPulse />\n        </div>\n      </div>\n      <div className=\"w-32 h-12\">\n        <SkeletonPulse />\n      </div>\n    </motion.div>\n\n    {/* Categories Skeleton */}\n    <motion.div \n      className=\"flex gap-2 overflow-x-auto pb-2\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5, delay: 0.1 }}\n    >\n      {[1, 2, 3, 4, 5].map((i) => (\n        <motion.div \n          key={i} \n          className=\"w-24 h-8 flex-shrink-0\"\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.3, delay: i * 0.05 }}\n        >\n          <SkeletonPulse />\n        </motion.div>\n      ))}\n    </motion.div>\n\n    {/* Products Grid Skeleton */}\n    <motion.div \n      className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5, delay: 0.2 }}\n    >\n      {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((i) => (\n        <motion.div \n          key={i} \n          className=\"bg-white rounded-lg shadow-sm overflow-hidden\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3, delay: i * 0.05 }}\n        >\n          <div className=\"aspect-square\">\n            <SkeletonPulse />\n          </div>\n          <div className=\"p-3 space-y-2\">\n            <div className=\"w-3/4 h-4\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-1/2 h-4\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-1/3 h-4\">\n              <SkeletonPulse />\n            </div>\n          </div>\n        </motion.div>\n      ))}\n    </motion.div>\n  </div>\n);\n\nconst CountdownTimer = ({ endsAt }) => {\n  const [timeLeft, setTimeLeft] = useState('');\n\n  useEffect(() => {\n    const calculateTimeLeft = () => {\n      const now = new Date().getTime();\n      const endTime = new Date(endsAt).getTime();\n      const difference = endTime - now;\n\n      if (difference <= 0) {\n        return 'Ended';\n      }\n\n      const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n      const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((difference % (1000 * 60)) / 1000);\n\n      let timeString = '';\n      \n      if (days > 0) {\n        timeString = `${days}d ${hours}h ${minutes}m`;\n      } else if (hours > 0) {\n        timeString = `${hours}h ${minutes}m ${seconds}s`;\n      } else if (minutes > 0) {\n        timeString = `${minutes}m ${seconds}s`;\n      } else {\n        timeString = `${seconds}s`;\n      }\n\n      return timeString;\n    };\n\n    setTimeLeft(calculateTimeLeft());\n    const timer = setInterval(() => {\n      const remaining = calculateTimeLeft();\n      setTimeLeft(remaining);\n      if (remaining === 'Ended') {\n        clearInterval(timer);\n      }\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [endsAt]);\n\n  return (\n    <span className=\"font-mono text-lg sm:text-xl font-bold text-[#FF1B6B]\">\n      {timeLeft}\n    </span>\n  );\n};\n\nconst ProductCard = ({ product }) => {\n  const { isDarkMode } = useTheme();\n  const [rating, setRating] = useState(0);\n  const [reviewCount, setReviewCount] = useState(0);\n\n  useEffect(() => {\n    const fetchProductReviews = async () => {\n      try {\n        const reviewsRef = collection(db, 'reviews');\n        const q = query(reviewsRef, where('productId', '==', product.id));\n        const querySnapshot = await getDocs(q);\n        \n        let totalRating = 0;\n        querySnapshot.forEach((doc) => {\n          totalRating += doc.data().rating;\n        });\n\n        const avgRating = querySnapshot.size > 0 ? totalRating / querySnapshot.size : 0;\n        setRating(avgRating);\n        setReviewCount(querySnapshot.size);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchProductReviews();\n  }, [product.id]);\n\n  return (\n    <motion.div\n      className={`${isDarkMode ? 'bg-gray-800 hover:bg-gray-750' : 'bg-white hover:bg-gray-50'} rounded-lg shadow-sm overflow-hidden group transition-colors`}\n      whileHover={{ y: -3 }}\n    >\n      <Link to={`/merch-store/product/${product.id}`}>\n        <div className=\"aspect-square relative overflow-hidden\">\n          <ProductImages images={product.images} />\n        </div>\n        <div className=\"p-3\">\n          <h3 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} mb-1 truncate`}>\n            {product.name}\n          </h3>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <img\n                src={product.tokenLogo}\n                alt={product.acceptedToken}\n                className=\"w-4 h-4\"\n              />\n              <div className=\"flex items-center gap-1\">\n                {product.hasDiscount ? (\n                  <>\n                    <p className=\"text-[#FF1B6B] font-medium text-sm\">\n                      ${product.discountedPrice.toFixed(2)}\n                    </p>\n                    <p className={`${isDarkMode ? 'text-gray-500' : 'text-gray-400'} text-xs line-through`}>\n                      ${product.price.toFixed(2)}\n                    </p>\n                  </>\n                ) : (\n                  <p className=\"text-[#FF1B6B] font-medium text-sm\">\n                    ${product.price.toFixed(2)}\n                  </p>\n                )}\n              </div>\n            </div>\n            <div className={`flex items-center gap-1 px-2 py-1 rounded-full ${\n              isDarkMode ? 'bg-gray-700' : 'bg-gray-100'\n            }`}>\n              <img \n                src={product.network === 'polygon' ? '/polygon.png' : '/unichain-logo.png'} \n                alt={product.network} \n                className=\"w-4 h-4\"\n              />\n              <span className={`text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-600'} capitalize`}>\n                {product.network}\n              </span>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between mt-1\">\n            <div className=\"flex items-center gap-1\">\n              <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                by {product.sellerName}\n              </p>\n              {product.isSellerVerified && (\n                <div className=\"group relative inline-flex items-center\">\n                  <VerificationCheckmark className=\"!w-[10px] !h-[10px] min-w-[10px] min-h-[10px]\" />\n                  <div className={`absolute bottom-full left-1/2 -translate-x-1/2 mb-1 px-1 py-0.5 ${\n                    isDarkMode ? 'bg-gray-700' : 'bg-gray-900'\n                  } text-white text-[8px] rounded opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 whitespace-nowrap z-10`}>\n                    Verified Store\n                  </div>\n                </div>\n              )}\n            </div>\n            <p className={`text-xs font-medium ${\n              product.quantity > 10 \n                ? 'text-green-500' \n                : product.quantity > 0 \n                  ? 'text-orange-500' \n                  : 'text-red-500'\n            }`}>\n              {product.quantity > 10 \n                ? 'In Stock' \n                : product.quantity > 0 \n                  ? `Only ${product.quantity} left` \n                  : 'Out of Stock'}\n            </p>\n          </div>\n\n          {/* Sales and Rating Section */}\n          <div className={`flex items-center gap-1 mt-2 pt-2 border-t ${\n            isDarkMode ? 'border-gray-700' : 'border-gray-100'\n          }`}>\n            <AiFillStar className=\"text-[#FF1B6B] text-base\" />\n            <span className={`text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\n              {rating ? rating.toFixed(1) : 'New'}\n            </span>\n            {reviewCount > 0 && (\n              <span className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                ({reviewCount})\n              </span>\n            )}\n          </div>\n        </div>\n      </Link>\n    </motion.div>\n  );\n};\n\nconst MaxDiscountBanner = ({ products }) => {\n  const { isDarkMode } = useTheme();\n  // Find max discount and latest end time\n  const getMaxDiscountAndLatestEnd = () => {\n    let maxDiscount = 0;\n    let latestEndTime = null;\n\n    products.forEach(product => {\n      if (product.hasDiscount && product.discountEndsAt) {\n        // Update max discount\n        const discount = product.discountPercent;\n        if (discount > maxDiscount) {\n          maxDiscount = discount;\n        }\n\n        // Update latest end time\n        const endTime = new Date(product.discountEndsAt);\n        if (!latestEndTime || endTime > latestEndTime) {\n          latestEndTime = endTime;\n        }\n      }\n    });\n\n    return { maxDiscount, latestEndTime };\n  };\n\n  const { maxDiscount, latestEndTime } = getMaxDiscountAndLatestEnd();\n\n  if (!maxDiscount || !latestEndTime) return null;\n\n  return (\n    <div className={`${\n      isDarkMode \n        ? 'bg-gradient-to-r from-pink-950/20 via-pink-900/30 to-purple-950/20' \n        : 'bg-gradient-to-r from-pink-500/5 via-pink-500/10 to-purple-500/5'\n    } rounded-2xl p-6 mb-6 overflow-hidden relative`}>\n      {/* Flash Sale Badge */}\n      <div className=\"flex items-center gap-2 justify-center mb-6\">\n        <div className=\"flex items-center gap-2 px-4 py-2 bg-[#FF1B6B] text-white rounded-full shadow-lg\">\n          <MdLocalOffer className=\"text-xl animate-pulse\" />\n          <span className=\"font-bold\">Flash Sale · Limited time offer</span>\n        </div>\n      </div>\n\n      {/* Discount Text */}\n      <div className=\"text-center space-y-6\">\n        <div className=\"space-y-2\">\n          <p className={`text-2xl font-bold tracking-wider ${\n            isDarkMode ? 'text-gray-300' : 'text-gray-700'\n          }`}>\n            UP TO\n          </p>\n          <p className=\"text-5xl sm:text-6xl font-bold tracking-tight\">\n            <span className=\"text-[#FF1B6B]\">{maxDiscount}% OFF</span>\n          </p>\n        </div>\n\n        {/* Timer Section */}\n        <div className=\"flex flex-col sm:flex-row items-center justify-center gap-3\">\n          <span className={`text-lg font-medium ${\n            isDarkMode ? 'text-gray-300' : 'text-gray-700'\n          }`}>\n            Offer ends in:\n          </span>\n          <div className={`flex items-center gap-2 ${\n            isDarkMode ? 'bg-gray-800/80' : 'bg-white/80'\n          } px-4 py-2 rounded-lg shadow-sm`}>\n            <BiTime className=\"text-xl text-[#FF1B6B] animate-pulse\" />\n            <CountdownTimer endsAt={latestEndTime} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Browse = () => {\n  const { isDarkMode } = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [products, setProducts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [sortBy, setSortBy] = useState('latest');\n  const [selectedNetwork, setSelectedNetwork] = useState('all');\n  const [showCategoryDropdown, setShowCategoryDropdown] = useState(false);\n  const [networkDropdownOpen, setNetworkDropdownOpen] = useState(false);\n  const [sortDropdownOpen, setSortDropdownOpen] = useState(false);\n  const networkDropdownRef = useRef(null);\n  const sortDropdownRef = useRef(null);\n\n  const sortOptions = [\n    { value: 'latest', label: 'Latest' },\n    { value: 'price_low', label: 'Price: Low to High' },\n    { value: 'price_high', label: 'Price: High to Low' }\n  ];\n\n  const CLOTHING_SUBCATEGORIES = {\n    \"Men's Wear\": [\n      { name: \"T-Shirts\", icon: <GiTShirt className=\"text-lg\" /> },\n      { name: \"Shirts\", icon: <GiPoloShirt className=\"text-lg\" /> },\n      { name: \"Pants\", icon: <GiArmoredPants className=\"text-lg\" /> },\n      { name: \"Hoodies\", icon: <GiHoodie className=\"text-lg\" /> },\n      { name: \"Jackets\", icon: <GiLabCoat className=\"text-lg\" /> },\n      { name: \"Suits\", icon: <GiSuitcase className=\"text-lg\" /> }\n    ],\n    \"Women's Wear\": [\n      { name: \"Dresses\", icon: <GiDress className=\"text-lg\" /> },\n      { name: \"Tops\", icon: <GiTShirt className=\"text-lg\" /> },\n      { name: \"Skirts\", icon: <GiSkirt className=\"text-lg\" /> },\n      { name: \"Pants\", icon: <GiArmoredPants className=\"text-lg\" /> },\n      { name: \"Blouses\", icon: <GiPoloShirt className=\"text-lg\" /> },\n      { name: \"Jackets\", icon: <GiLabCoat className=\"text-lg\" /> }\n    ],\n    \"Footwear\": [\n      { name: \"Sneakers\", icon: <GiRunningShoe className=\"text-lg\" /> },\n      { name: \"Formal Shoes\", icon: <span className=\"text-lg text-gray-400 group-hover/item:text-[#FF1B6B] transition-colors\">👞</span> },\n      { name: \"Boots\", icon: <GiBoots className=\"text-lg\" /> },\n      { name: \"Sandals\", icon: <FaShoePrints className=\"text-lg\" /> },\n      { name: \"Slippers\", icon: <span className=\"text-lg text-gray-400 group-hover/item:text-[#FF1B6B] transition-colors\">🥿</span> }\n    ]\n  };\n\n  const ACCESSORIES_SUBCATEGORIES = {\n    \"Fashion Accessories\": [\n      { name: \"Bags\", icon: <MdOutlineBag className=\"text-lg\" /> },\n      { name: \"Belts\", icon: <GiBelt className=\"text-lg\" /> },\n      { name: \"Hats\", icon: <MdOutlineFace className=\"text-lg\" /> },\n      { name: \"Scarves\", icon: <span className=\"text-lg text-gray-400 group-hover/item:text-[#FF1B6B] transition-colors\">🧣</span> },\n      { name: \"Jewelry\", icon: <MdOutlineDiamond className=\"text-lg\" /> }\n    ],\n    \"Tech Accessories\": [\n      { name: \"Phone Cases\", icon: <MdOutlinePhoneAndroid className=\"text-lg\" /> },\n      { name: \"Laptop Bags\", icon: <MdOutlineLaptop className=\"text-lg\" /> },\n      { name: \"Headphone Cases\", icon: <MdOutlineHeadphones className=\"text-lg\" /> },\n      { name: \"Tablet Covers\", icon: <MdOutlineTablet className=\"text-lg\" /> },\n      { name: \"Chargers\", icon: <MdOutlineBatteryChargingFull className=\"text-lg\" /> }\n    ]\n  };\n\n  const categories = [\n    { \n      id: 'all', \n      name: 'All Categories',\n      icon: <MdGrid3X3 className=\"text-xl\" />\n    },\n    { \n      id: 'clothing', \n      name: 'Clothing',\n      icon: <MdOutlineCheckroom className=\"text-xl\" />,\n      subcategories: CLOTHING_SUBCATEGORIES\n    },\n    { \n      id: 'accessories', \n      name: 'Accessories',\n      icon: <MdOutlineShoppingBag className=\"text-xl\" />,\n      subcategories: ACCESSORIES_SUBCATEGORIES \n    },\n    { \n      id: 'electronics', \n      name: 'Electronics',\n      icon: <MdDevices className=\"text-xl\" />\n    },\n    { \n      id: 'home', \n      name: 'Home',\n      icon: <MdOutlineHome className=\"text-xl\" />\n    },\n    { \n      id: 'art', \n      name: 'Art',\n      icon: <MdOutlinePalette className=\"text-xl\" />\n    },\n    { \n      id: 'collectibles', \n      name: 'Collectibles',\n      icon: <MdOutlineCollections className=\"text-xl\" />\n    }\n  ];\n\n  const networks = [\n    { value: 'all', label: 'All Networks' },\n    { value: 'polygon', label: 'Polygon' },\n    { value: 'unichain', label: 'Unichain' }\n  ];\n\n  useEffect(() => {\n    fetchProducts();\n  }, [selectedCategory, sortBy, selectedNetwork]);\n\n  const fetchProducts = async () => {\n    try {\n      setLoading(true);\n      let q = collection(db, 'products');\n\n      // Build query based on filters\n      const constraints = [where('status', '==', 'active')];\n      \n      if (selectedCategory !== 'all') {\n        // Check if it's a subcategory selection\n        if (selectedCategory.includes('-')) {\n          const [mainCategory, categoryGroup, subCategory] = selectedCategory.split('-');\n          constraints.push(where('category', '==', mainCategory));\n          constraints.push(where('subCategory', '==', `${categoryGroup} - ${subCategory}`));\n        } else {\n          constraints.push(where('category', '==', selectedCategory));\n        }\n      }\n\n      if (selectedNetwork !== 'all') {\n        constraints.push(where('network', '==', selectedNetwork));\n      }\n\n      if (sortBy === 'latest') {\n        constraints.push(orderBy('createdAt', 'desc'));\n      } else if (sortBy === 'price_low') {\n        constraints.push(orderBy('price', 'asc'));\n      } else if (sortBy === 'price_high') {\n        constraints.push(orderBy('price', 'desc'));\n      }\n\n      q = query(q, ...constraints, limit(50));\n      const querySnapshot = await getDocs(q);\n      \n      // Fetch all unique seller IDs from products\n      const sellerIds = [...new Set(querySnapshot.docs.map(doc => doc.data().sellerId))];\n      \n      // Fetch all sellers in one batch\n      const sellersSnapshot = await getDocs(query(\n        collection(db, 'sellers'),\n        where('__name__', 'in', sellerIds)\n      ));\n      \n      // Create a map of seller verification status\n      const sellerVerificationMap = {};\n      sellersSnapshot.docs.forEach(doc => {\n        sellerVerificationMap[doc.id] = doc.data().verificationStatus === 'approved';\n      });\n\n      const productsData = querySnapshot.docs.map(doc => {\n        const data = doc.data();\n        return {\n          id: doc.id,\n          ...data,\n          isSellerVerified: sellerVerificationMap[data.sellerId] || false\n        };\n      });\n\n      setProducts(productsData);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      toast.error('Failed to load products');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filteredProducts = products.filter(product => \n    product.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    product.description.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 100\n      }\n    }\n  };\n\n  if (loading) {\n    return <BrowseSkeleton />;\n  }\n\n  return (\n    <motion.div\n      className={`max-w-7xl mx-auto p-4 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}\n      initial=\"hidden\"\n      animate=\"visible\"\n      variants={containerVariants}\n    >\n      {/* Search and Filter */}\n      <motion.div variants={itemVariants} className=\"flex flex-col md:flex-row gap-4 mb-6\">\n        <div className=\"flex gap-2 flex-1\">\n          {/* Categories Dropdown */}\n          <div className=\"relative group\">\n            <button\n              className={`px-4 py-3 ${\n                isDarkMode \n                  ? 'bg-gray-800 border-gray-700 hover:bg-gray-700' \n                  : 'bg-white border-gray-200 hover:bg-gray-50'\n              } rounded-lg border focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors min-w-[160px] text-left flex items-center gap-2`}\n            >\n              <BiMenu className={`text-xl ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`} />\n              <span className={`${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\n                {categories.find(cat => cat.id === selectedCategory)?.name || 'All Categories'}\n              </span>\n              <svg\n                className={`w-5 h-5 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} ml-auto transition-transform group-hover:rotate-180`}\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </button>\n\n            {/* Dropdown Menu */}\n            <div className={`absolute left-0 top-full mt-1 w-[280px] ${\n              isDarkMode \n                ? 'bg-gray-800 border-gray-700' \n                : 'bg-white border-gray-100'\n            } rounded-lg shadow-lg border z-50 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200`}>\n              {categories.map((category) => (\n                <div key={category.id} className=\"group/item\">\n                  <button\n                    onClick={() => {\n                      setSelectedCategory(category.id);\n                    }}\n                    className={`w-full px-4 py-2 text-left ${\n                      isDarkMode \n                        ? 'hover:bg-gray-700 text-gray-200 hover:text-[#FF1B6B]' \n                        : 'hover:bg-pink-50 text-gray-700 hover:text-[#FF1B6B]'\n                    } flex items-center gap-3`}\n                  >\n                    <span className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'} group-hover/item:text-[#FF1B6B] transition-colors`}>\n                      {category.icon}\n                    </span>\n                    <span>{category.name}</span>\n                    {category.subcategories && (\n                      <svg\n                        className={`w-4 h-4 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} ml-auto`}\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                      </svg>\n                    )}\n                  </button>\n\n                  {/* Subcategories */}\n                  {category.subcategories && (\n                    <div className={`absolute left-[279px] top-0 w-[280px] ${\n                      isDarkMode \n                        ? 'bg-gray-800 border-gray-700' \n                        : 'bg-white border-gray-100'\n                    } rounded-lg shadow-lg border invisible opacity-0 group-hover/item:visible group-hover/item:opacity-100 transition-all duration-200`}>\n                      {Object.entries(category.subcategories).map(([mainCategory, subItems]) => (\n                        <div key={mainCategory} className=\"p-2\">\n                          <div className={`px-2 py-1 text-sm font-medium ${\n                            isDarkMode ? 'text-gray-200' : 'text-gray-900'\n                          }`}>{mainCategory}</div>\n                          <div className=\"grid grid-cols-2 gap-1\">\n                            {subItems.map((subItem) => (\n                              <button\n                                key={subItem.name}\n                                onClick={() => {\n                                  setSelectedCategory(`${category.id}-${mainCategory}-${subItem.name}`);\n                                }}\n                                className={`px-2 py-1 text-sm ${\n                                  isDarkMode \n                                    ? 'text-gray-300 hover:bg-gray-700' \n                                    : 'text-gray-600 hover:bg-pink-50'\n                                } hover:text-[#FF1B6B] rounded text-left flex items-center gap-2`}\n                              >\n                                <span className={`${isDarkMode ? 'text-gray-400' : 'text-gray-400'} group-hover/item:text-[#FF1B6B] transition-colors`}>\n                                  {subItem.icon}\n                                </span>\n                                <span>{subItem.name}</span>\n                              </button>\n                            ))}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Search Bar */}\n          <div className=\"relative flex-1\">\n            <input\n              type=\"text\"\n              placeholder=\"Search products...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className={`w-full pl-12 pr-4 py-3 ${\n                isDarkMode \n                  ? 'bg-gray-800 border-gray-700 text-gray-200 placeholder-gray-400' \n                  : 'bg-white border-gray-200 text-gray-900 placeholder-gray-400'\n              } rounded-lg border focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors`}\n            />\n            <BiSearch className={`absolute left-4 top-1/2 -translate-y-1/2 ${\n              isDarkMode ? 'text-gray-400' : 'text-gray-400'\n            } text-xl`} />\n          </div>\n        </div>\n\n        <div className=\"flex items-center gap-3\">\n          {/* Network Dropdown */}\n          <div \n            className=\"relative\"\n            ref={networkDropdownRef}\n            onMouseEnter={() => setNetworkDropdownOpen(true)}\n            onMouseLeave={() => setNetworkDropdownOpen(false)}\n          >\n            <button\n              type=\"button\"\n              className={`px-4 py-3 ${\n                isDarkMode \n                  ? 'bg-gray-800 border-gray-700 hover:bg-gray-700' \n                  : 'bg-white border-gray-200 hover:bg-gray-50'\n              } rounded-lg border focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors min-w-[160px] text-left flex items-center justify-between`}\n            >\n              <span className={isDarkMode ? 'text-gray-200' : 'text-gray-700'}>\n                {networks.find(n => n.value === selectedNetwork)?.label || 'All Networks'}\n              </span>\n              <svg\n                className={`w-5 h-5 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} transition-transform ${networkDropdownOpen ? 'rotate-180' : ''}`}\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </button>\n            \n            {networkDropdownOpen && (\n              <div className={`absolute z-10 w-full mt-1 ${\n                isDarkMode \n                  ? 'bg-gray-800 border-gray-700' \n                  : 'bg-white border-gray-200'\n              } rounded-lg shadow-lg border`}>\n                {networks.map(network => (\n                  <button\n                    key={network.value}\n                    onClick={() => setSelectedNetwork(network.value)}\n                    className={`w-full px-4 py-2 text-left ${\n                      selectedNetwork === network.value\n                        ? 'bg-pink-50 text-[#FF1B6B]'\n                        : isDarkMode\n                          ? 'text-gray-200 hover:bg-gray-700'\n                          : 'text-gray-700 hover:bg-gray-50'\n                    } first:rounded-t-lg last:rounded-b-lg`}\n                  >\n                    {network.label}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Sort Dropdown */}\n          <div \n            className=\"relative\"\n            ref={sortDropdownRef}\n            onMouseEnter={() => setSortDropdownOpen(true)}\n            onMouseLeave={() => setSortDropdownOpen(false)}\n          >\n            <button\n              type=\"button\"\n              className={`px-4 py-3 ${\n                isDarkMode \n                  ? 'bg-gray-800 border-gray-700 hover:bg-gray-700' \n                  : 'bg-white border-gray-200 hover:bg-gray-50'\n              } rounded-lg border focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors min-w-[160px] text-left flex items-center justify-between`}\n            >\n              <span className={isDarkMode ? 'text-gray-200' : 'text-gray-700'}>\n                {sortOptions.find(opt => opt.value === sortBy)?.label || 'Latest'}\n              </span>\n              <svg\n                className={`w-5 h-5 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} transition-transform ${sortDropdownOpen ? 'rotate-180' : ''}`}\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </button>\n            \n            {sortDropdownOpen && (\n              <div className={`absolute z-10 w-full mt-1 ${\n                isDarkMode \n                  ? 'bg-gray-800 border-gray-700' \n                  : 'bg-white border-gray-200'\n              } rounded-lg shadow-lg border`}>\n                {sortOptions.map(option => (\n                  <button\n                    key={option.value}\n                    onClick={() => setSortBy(option.value)}\n                    className={`w-full px-4 py-2 text-left ${\n                      sortBy === option.value\n                        ? 'bg-pink-50 text-[#FF1B6B]'\n                        : isDarkMode\n                          ? 'text-gray-200 hover:bg-gray-700'\n                          : 'text-gray-700 hover:bg-gray-50'\n                    } first:rounded-t-lg last:rounded-b-lg`}\n                  >\n                    {option.label}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Max Discount Banner */}\n      <motion.div variants={itemVariants}>\n        <MaxDiscountBanner products={products} />\n      </motion.div>\n\n      {/* Featured Deals Section */}\n      <motion.div variants={itemVariants}>\n        <FeaturedDeals products={products} />\n      </motion.div>\n\n      {/* Products Grid */}\n      {filteredProducts.length === 0 ? (\n        <motion.div variants={itemVariants} className=\"text-center py-12\">\n          <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>No products found.</p>\n        </motion.div>\n      ) : (\n        <motion.div\n          className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\"\n          variants={containerVariants}\n        >\n          {filteredProducts.map((product) => (\n            <ProductCard key={product.id} product={product} />\n          ))}\n        </motion.div>\n      )}\n    </motion.div>\n  );\n};\n\nexport default Browse; ","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { BiStar, BiImage, BiX } from 'react-icons/bi';\nimport { FaStar } from 'react-icons/fa';\nimport { collection, query, where, getDocs, addDoc, orderBy, getDoc, doc, updateDoc } from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { db, storage } from '../../firebase/merchConfig';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { toast } from 'react-hot-toast';\nimport { useTheme } from '../../context/ThemeContext';\n\nconst StarRating = ({ rating, setRating, isInteractive = true }) => {\n  return (\n    <div className=\"flex items-center gap-1\">\n      {[1, 2, 3, 4, 5].map((star) => (\n        <button\n          key={star}\n          onClick={() => isInteractive && setRating(star)}\n          className={`${isInteractive ? 'cursor-pointer' : 'cursor-default'}`}\n          disabled={!isInteractive}\n        >\n          <FaStar\n            className={`w-6 h-6 ${\n              star <= rating ? 'text-[#FF1B6B]' : 'text-gray-300'\n            }`}\n          />\n        </button>\n      ))}\n    </div>\n  );\n};\n\nconst ReviewModal = ({ isOpen, onClose, productId, onReviewAdded }) => {\n  const [rating, setRating] = useState(0);\n  const [review, setReview] = useState('');\n  const [image, setImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { user } = useMerchAuth();\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) { // 2MB limit\n        toast.error('Image must be less than 2MB');\n        return;\n      }\n      setImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!rating) {\n      toast.error('Please select a rating');\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      // Get user's orders for this product\n      const ordersQuery = query(\n        collection(db, 'orders'),\n        where('buyerId', '==', user.uid),\n        where('status', '==', 'delivered')\n      );\n      \n      const ordersSnapshot = await getDocs(ordersQuery);\n      // Find the specific order that contains this product\n      const validOrder = ordersSnapshot.docs.find(doc => \n        doc.data().items.some(item => item.productId === productId)\n      );\n\n      if (!validOrder) {\n        toast.error('You can only review products you have purchased and received');\n        setIsSubmitting(false);\n        return;\n      }\n\n      // Get product details to fetch sellerId\n      const productDoc = await getDoc(doc(db, 'products', productId));\n      if (!productDoc.exists()) {\n        toast.error('Product not found');\n        setIsSubmitting(false);\n        return;\n      }\n      const productData = productDoc.data();\n\n      let imageUrl = '';\n      if (image) {\n        const imageRef = ref(storage, `reviews/${productId}/${user.uid}_${Date.now()}`);\n        await uploadBytes(imageRef, image);\n        imageUrl = await getDownloadURL(imageRef);\n      }\n\n      // Create the review data object with sellerId\n      const reviewData = {\n        productId,\n        userId: user.uid,\n        sellerId: productData.sellerId, // Add sellerId\n        rating,\n        review: review.trim(),\n        image: imageUrl,\n        createdAt: new Date(),\n        userName: user.displayName || user.email?.split('@')[0] || 'Anonymous',\n        productName: productData.name, // Add product name for better admin insights\n        orderDate: validOrder.data().createdAt, // Add order date for verification purposes\n        verificationStatus: 'pending' // Add verification status field\n      };\n\n      // Add the review to Firestore\n      await addDoc(collection(db, 'reviews'), reviewData);\n      \n      // Update seller's average rating\n      const sellerRef = doc(db, 'sellers', productData.sellerId);\n      const sellerDoc = await getDoc(sellerRef);\n      if (sellerDoc.exists()) {\n        const sellerData = sellerDoc.data();\n        const currentRating = sellerData.statistics?.rating || 0;\n        const totalReviews = sellerData.statistics?.totalReviews || 0;\n        \n        const newRating = ((currentRating * totalReviews) + rating) / (totalReviews + 1);\n        \n        await updateDoc(sellerRef, {\n          'statistics.rating': newRating,\n          'statistics.totalReviews': totalReviews + 1,\n          updatedAt: new Date()\n        });\n      }\n      \n      toast.success('Review submitted successfully');\n      onReviewAdded();\n      onClose();\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      toast.error('Failed to submit review. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40\" onClick={onClose} />\n      <div className=\"fixed inset-0 flex items-center justify-center z-50 p-4\">\n        <motion.div\n          initial={{ scale: 0.9, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\"\n        >\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold\">Write a Review</h3>\n            <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n              <BiX className=\"w-6 h-6\" />\n            </button>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Rating\n              </label>\n              <StarRating rating={rating} setRating={setRating} />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Review\n              </label>\n              <textarea\n                value={review}\n                onChange={(e) => setReview(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-[#FF1B6B] focus:border-[#FF1B6B]\"\n                rows=\"4\"\n                placeholder=\"Share your experience with this product...\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Add Image (optional)\n              </label>\n              <div className=\"flex items-center gap-4\">\n                <label className=\"cursor-pointer\">\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleImageChange}\n                    className=\"hidden\"\n                  />\n                  <div className=\"flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\">\n                    <BiImage className=\"w-5 h-5\" />\n                    <span className=\"text-sm\">Choose Image</span>\n                  </div>\n                </label>\n                {imagePreview && (\n                  <div className=\"relative\">\n                    <img\n                      src={imagePreview}\n                      alt=\"Preview\"\n                      className=\"w-16 h-16 object-cover rounded-lg\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setImage(null);\n                        setImagePreview('');\n                      }}\n                      className=\"absolute -top-2 -right-2 bg-red-500 text-white rounded-full p-1\"\n                    >\n                      <BiX className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"flex justify-end gap-3\">\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100 rounded-lg\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                disabled={isSubmitting || !rating}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-[#FF1B6B] hover:bg-[#D4145A] rounded-lg disabled:opacity-50\"\n              >\n                {isSubmitting ? 'Submitting...' : 'Submit Review'}\n              </button>\n            </div>\n          </form>\n        </motion.div>\n      </div>\n    </>\n  );\n};\n\nconst ImageModal = ({ isOpen, onClose, imageUrl }) => {\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <div className=\"fixed inset-0 bg-black bg-opacity-75 z-50\" onClick={onClose} />\n      <div className=\"fixed inset-0 flex items-center justify-center z-50 p-4\">\n        <div className=\"relative max-w-4xl w-full\">\n          <button\n            onClick={onClose}\n            className=\"absolute -top-10 right-0 text-white hover:text-gray-300\"\n          >\n            <BiX className=\"w-8 h-8\" />\n          </button>\n          <img\n            src={imageUrl}\n            alt=\"Review\"\n            className=\"w-full h-auto rounded-lg\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst ProductReviews = ({ productId }) => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { user } = useMerchAuth();\n  const [averageRating, setAverageRating] = useState(0);\n  const [canReview, setCanReview] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const reviewsPerPage = 10;\n  const { isDarkMode } = useTheme();\n\n  const fetchReviews = async () => {\n    try {\n      const reviewsQuery = query(\n        collection(db, 'reviews'),\n        where('productId', '==', productId),\n        orderBy('createdAt', 'desc')\n      );\n      \n      const reviewsSnapshot = await getDocs(reviewsQuery);\n      const reviewsData = reviewsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        createdAt: doc.data().createdAt?.toDate()\n      }));\n\n      setReviews(reviewsData);\n\n      // Calculate average rating\n      if (reviewsData.length > 0) {\n        const avgRating = reviewsData.reduce((sum, review) => sum + review.rating, 0) / reviewsData.length;\n        setAverageRating(avgRating);\n      }\n\n      // Check if user can review\n      if (user) {\n        const ordersQuery = query(\n          collection(db, 'orders'),\n          where('buyerId', '==', user.uid),\n          where('status', '==', 'delivered')\n        );\n        \n        const ordersSnapshot = await getDocs(ordersQuery);\n        const hasValidOrder = ordersSnapshot.docs.some(doc => \n          doc.data().items.some(item => item.productId === productId)\n        );\n        \n        const hasReviewed = reviewsData.some(review => review.userId === user.uid);\n        setCanReview(hasValidOrder && !hasReviewed);\n      }\n    } catch (error) {\n      console.error('Error fetching reviews:', error);\n      toast.error('Failed to load reviews');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchReviews();\n  }, [productId, user]);\n\n  // Calculate pagination\n  const totalPages = Math.ceil(reviews.length / reviewsPerPage);\n  const indexOfLastReview = currentPage * reviewsPerPage;\n  const indexOfFirstReview = indexOfLastReview - reviewsPerPage;\n  const currentReviews = reviews.slice(indexOfFirstReview, indexOfLastReview);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo({\n      top: document.getElementById('reviews-section').offsetTop - 100,\n      behavior: 'smooth'\n    });\n  };\n\n  if (loading) {\n    return <div className=\"animate-pulse\">Loading reviews...</div>;\n  }\n\n  return (\n    <div className=\"mt-8\" id=\"reviews-section\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n          <h2 className={`text-xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>\n            Customer Reviews\n          </h2>\n          {reviews.length > 0 && (\n            <div className=\"flex items-center gap-2 mt-1\">\n              <div className=\"flex items-center\">\n                {[1, 2, 3, 4, 5].map((star) => (\n                  <svg key={star} className=\"w-5 h-5 text-[#FF1B6B]\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                  </svg>\n                ))}\n              </div>\n              <span className={`${isDarkMode ? 'text-gray-200' : 'text-gray-700'} font-medium`}>\n                {averageRating.toFixed(1)}\n              </span>\n              <span className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                ({reviews.length} {reviews.length === 1 ? 'review' : 'reviews'})\n              </span>\n            </div>\n          )}\n        </div>\n        {canReview && (\n          <button\n            onClick={() => setIsModalOpen(true)}\n            className=\"px-4 py-2 text-sm font-medium text-white bg-[#FF1B6B] hover:bg-[#D4145A] rounded-lg\"\n          >\n            Write a Review\n          </button>\n        )}\n      </div>\n\n      {reviews.length === 0 ? (\n        <div className={`text-center py-8 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n          No reviews yet\n        </div>\n      ) : (\n        <>\n          <div className=\"space-y-6\">\n            {currentReviews.map((review) => (\n              <div key={review.id} className={`${isDarkMode ? 'border-gray-700' : 'border-gray-200'} border-b pb-6 last:border-b-0 last:pb-0`}>\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-800'}`}>\n                      {review.userName}\n                    </span>\n                    <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                      · {review.createdAt.toLocaleDateString()}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    {[1, 2, 3, 4, 5].map((star) => (\n                      <svg \n                        key={star} \n                        className={`w-4 h-4 ${star <= review.rating ? 'text-[#FF1B6B]' : isDarkMode ? 'text-gray-600' : 'text-gray-300'}`}\n                        fill=\"currentColor\" \n                        viewBox=\"0 0 20 20\"\n                      >\n                        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                      </svg>\n                    ))}\n                  </div>\n                </div>\n                <p className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                  {review.review}\n                </p>\n                {review.image && (\n                  <button\n                    onClick={() => setSelectedImage(review.image)}\n                    className=\"mt-3 block\"\n                  >\n                    <img\n                      src={review.image}\n                      alt=\"Review\"\n                      className=\"rounded-lg w-32 h-32 object-cover hover:opacity-90 transition-opacity\"\n                    />\n                  </button>\n                )}\n              </div>\n            ))}\n          </div>\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <div className=\"flex justify-center items-center gap-2 mt-8\">\n              <button\n                onClick={() => handlePageChange(currentPage - 1)}\n                disabled={currentPage === 1}\n                className=\"p-2 rounded-lg hover:bg-gray-100 disabled:opacity-50 disabled:hover:bg-transparent\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </svg>\n              </button>\n              {[...Array(totalPages)].map((_, index) => (\n                <button\n                  key={index + 1}\n                  onClick={() => handlePageChange(index + 1)}\n                  className={`w-8 h-8 rounded-lg text-sm font-medium ${\n                    currentPage === index + 1\n                      ? 'bg-[#FF1B6B] text-white'\n                      : 'text-gray-600 hover:bg-gray-100'\n                  }`}\n                >\n                  {index + 1}\n                </button>\n              ))}\n              <button\n                onClick={() => handlePageChange(currentPage + 1)}\n                disabled={currentPage === totalPages}\n                className=\"p-2 rounded-lg hover:bg-gray-100 disabled:opacity-50 disabled:hover:bg-transparent\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n              </button>\n            </div>\n          )}\n        </>\n      )}\n\n      <ReviewModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        productId={productId}\n        onReviewAdded={fetchReviews}\n      />\n\n      <ImageModal\n        isOpen={!!selectedImage}\n        onClose={() => setSelectedImage(null)}\n        imageUrl={selectedImage}\n      />\n    </div>\n  );\n};\n\nexport default ProductReviews; ","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { BiArrowBack, BiCart, BiStar, BiStore, BiPlus, BiMinus, BiWallet, BiMessageDetail } from 'react-icons/bi';\nimport { FiCopy } from 'react-icons/fi';\nimport { doc, getDoc, collection, query, where, getDocs, limit, updateDoc, addDoc, serverTimestamp, deleteDoc } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { toast } from 'react-hot-toast';\nimport ProductReviews from '../../components/reviews/ProductReviews';\nimport ReactCountryFlag from 'react-country-flag';\nimport VerificationCheckmark from '../../components/shared/VerificationCheckmark';\nimport CountdownTimer from '../../components/shared/CountdownTimer';\n\nconst SkeletonPulse = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      className={`w-full h-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-lg`}\n      animate={{\n        opacity: [0.4, 0.7, 0.4]\n      }}\n      transition={{\n        duration: 1.5,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n    />\n  );\n};\n\nconst ProductDetailsSkeleton = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <div className={`max-w-7xl mx-auto p-4 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n        {/* Image Gallery Skeleton */}\n        <div className=\"space-y-4\">\n          <div className=\"aspect-square rounded-lg overflow-hidden\">\n            <SkeletonPulse />\n          </div>\n          <div className=\"grid grid-cols-4 gap-2\">\n            {[1, 2, 3, 4].map((i) => (\n              <div key={i} className=\"aspect-square rounded-lg overflow-hidden\">\n                <SkeletonPulse />\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Product Info Skeleton */}\n        <div className=\"space-y-6\">\n          <div className=\"space-y-4\">\n            <div className=\"w-3/4 h-8\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-1/2 h-6\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-full h-32\">\n              <SkeletonPulse />\n            </div>\n          </div>\n\n          {/* Price and Token Skeleton */}\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-8 h-8\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-24 h-8\">\n              <SkeletonPulse />\n            </div>\n          </div>\n\n          {/* Quantity and Add to Cart Skeleton */}\n          <div className=\"space-y-4\">\n            <div className=\"w-32 h-10\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-full h-12\">\n              <SkeletonPulse />\n            </div>\n          </div>\n\n          {/* Seller Info Skeleton */}\n          <div className=\"border-t pt-6 mt-6\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-12 h-12 rounded-full overflow-hidden\">\n                <SkeletonPulse />\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"w-32 h-4\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-24 h-4\">\n                  <SkeletonPulse />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Similar Products Skeleton */}\n      <div className=\"mt-12 space-y-4\">\n        <div className=\"w-48 h-6\">\n          <SkeletonPulse />\n        </div>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          {[1, 2, 3, 4].map((i) => (\n            <div key={i} className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n              <div className=\"aspect-square\">\n                <SkeletonPulse />\n              </div>\n              <div className=\"p-3 space-y-2\">\n                <div className=\"w-3/4 h-4\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-1/2 h-4\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-1/3 h-4\">\n                  <SkeletonPulse />\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ProductDetails = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { user, updateCartCount } = useMerchAuth();\n  const [product, setProduct] = useState(null);\n  const { isDarkMode } = useTheme();\n  const [seller, setSeller] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [selectedImage, setSelectedImage] = useState(0);\n  const [similarProducts, setSimilarProducts] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [selectedSize, setSelectedSize] = useState('');\n  const [selectedColor, setSelectedColor] = useState('');\n  const [copiedAddress, setCopiedAddress] = useState(false);\n\n  useEffect(() => {\n    if (!id) return;\n\n    const fetchProduct = async () => {\n      setLoading(true);\n      try {\n        const productDoc = await getDoc(doc(db, 'products', id));\n        if (productDoc.exists()) {\n          const productData = { id: productDoc.id, ...productDoc.data() };\n          setProduct(productData);\n          \n          // Fetch seller details including shipping fee\n          if (productData.sellerId) {\n            const sellerDoc = await getDoc(doc(db, 'sellers', productData.sellerId));\n            if (sellerDoc.exists()) {\n              setSeller({ id: sellerDoc.id, ...sellerDoc.data() });\n            }\n          }\n          \n          fetchSimilarProducts();\n        }\n      } catch (error) {\n        console.error('Error fetching product:', error);\n        toast.error('Failed to load product details');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProduct();\n  }, [id]);\n\n  useEffect(() => {\n    if (product) {\n      const isDiscountValid = product.hasDiscount && new Date() < new Date(product.discountEndsAt);\n      const currentPrice = isDiscountValid ? product.discountedPrice : product.price;\n      const subtotal = currentPrice * quantity;\n      const shippingFee = product.shippingFee || 0;\n      const total = subtotal + shippingFee;\n      setTotalPrice(total);\n    }\n  }, [quantity, product]);\n\n  const fetchSimilarProducts = async () => {\n    try {\n      const productDoc = await getDoc(doc(db, 'products', id));\n      if (productDoc.exists()) {\n        const productData = productDoc.data();\n        \n        // First, try to get other products from the same seller\n        let q = query(\n          collection(db, 'products'),\n          where('sellerId', '==', productData.sellerId),\n          where('status', '==', 'active'),\n          limit(4)\n        );\n        let querySnapshot = await getDocs(q);\n        let similarProductsData = querySnapshot.docs\n          .map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }))\n          .filter(p => p.id !== id); // Exclude current product\n\n        // If seller has no other products, get products from same category\n        if (similarProductsData.length === 0) {\n          q = query(\n            collection(db, 'products'),\n            where('category', '==', productData.category),\n            where('status', '==', 'active'),\n            limit(4)\n          );\n          querySnapshot = await getDocs(q);\n          similarProductsData = querySnapshot.docs\n            .map(doc => ({\n              id: doc.id,\n              ...doc.data()\n            }))\n            .filter(p => p.id !== id);\n        }\n\n        setSimilarProducts(similarProductsData);\n      }\n    } catch (error) {\n      console.error('Error fetching similar products:', error);\n    }\n  };\n\n  const handleQuantityChange = (value) => {\n    if (!selectedColor && product.hasVariants) {\n      toast.error('Please select a color first');\n      return;\n    }\n\n    const maxQuantity = product.hasVariants\n      ? product.colorQuantities[selectedColor]\n      : product.quantity;\n\n    const newQuantity = Math.max(1, Math.min(maxQuantity, quantity + value));\n    setQuantity(newQuantity);\n  };\n\n  const addToCart = async () => {\n    try {\n      if (!user) {\n        toast.error('Please login to add items to cart');\n        navigate('/merch-store/login');\n        return;\n      }\n\n      if (product.category === 'clothing' && product.hasVariants) {\n        if (!selectedSize) {\n          toast.error('Please select a size');\n          return;\n        }\n        if (!selectedColor) {\n          toast.error('Please select a color');\n          return;\n        }\n      }\n\n      // Check if there's enough stock\n      const productDoc = await getDoc(doc(db, 'products', id));\n      if (!productDoc.exists()) {\n        toast.error('Product not found');\n        return;\n      }\n\n      const productData = productDoc.data();\n      const currentColorStock = product.hasVariants ? \n        (productData.colorQuantities?.[selectedColor] || 0) : \n        productData.quantity;\n\n      // Check existing cart items for the same color\n      const cartQuery = query(\n        collection(db, 'cart'),\n        where('userId', '==', user.uid),\n        where('productId', '==', id),\n        where('size', '==', selectedSize || null),\n        where('color', '==', selectedColor || null)\n      );\n      const cartSnapshot = await getDocs(cartQuery);\n      const existingCartItem = cartSnapshot.docs[0]?.data();\n      const totalRequestedQuantity = (existingCartItem?.quantity || 0) + quantity;\n\n      if (totalRequestedQuantity > currentColorStock) {\n        toast.error(`Sorry, only ${currentColorStock} items available in ${selectedColor || 'stock'}`);\n        return;\n      }\n\n      // Show loading toast\n      const loadingToast = toast.loading('Adding to cart...');\n\n      const cartRef = collection(db, 'cart');\n      const q = query(cartRef, \n        where('userId', '==', user.uid),\n        where('productId', '==', id),\n        where('size', '==', selectedSize || null),\n        where('color', '==', selectedColor || null)\n      );\n      const querySnapshot = await getDocs(q);\n\n      if (querySnapshot.empty) {\n        // Add new cart item\n        await addDoc(cartRef, {\n          userId: user.uid,\n          productId: id,\n          quantity: quantity,\n          size: selectedSize || null,\n          color: selectedColor || null,\n          addedAt: serverTimestamp(),\n          price: product.hasDiscount && new Date() < new Date(product.discountEndsAt) \n            ? product.discountedPrice \n            : product.price,\n          isDiscounted: product.hasDiscount && new Date() < new Date(product.discountEndsAt),\n          originalPrice: product.price,\n          discountedPrice: product.discountedPrice,\n          discountEndsAt: product.discountEndsAt\n        });\n        toast.dismiss(loadingToast);\n        toast.success(`Added ${quantity} item${quantity > 1 ? 's' : ''} to cart`);\n      } else {\n        // Update existing cart item\n        const cartDoc = querySnapshot.docs[0];\n        const currentQuantity = cartDoc.data().quantity;\n        await updateDoc(doc(db, 'cart', cartDoc.id), {\n          quantity: currentQuantity + quantity,\n          price: product.hasDiscount && new Date() < new Date(product.discountEndsAt) \n            ? product.discountedPrice \n            : product.price,\n          isDiscounted: product.hasDiscount && new Date() < new Date(product.discountEndsAt),\n          originalPrice: product.price,\n          discountedPrice: product.discountedPrice,\n          discountEndsAt: product.discountEndsAt\n        });\n        toast.dismiss(loadingToast);\n        toast.success(`Updated quantity in cart (+${quantity})`);\n      }\n\n      // Update cart count\n      await updateCartCount(user.uid);\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n      toast.error('Failed to add to cart');\n    }\n  };\n\n  const handleBuyNow = async () => {\n    try {\n      if (!user) {\n        toast.error('Please login to purchase items');\n        navigate('/merch-store/login');\n        return;\n      }\n\n      if (product.category === 'clothing' && product.hasVariants) {\n        if (!selectedSize) {\n          toast.error('Please select a size');\n          return;\n        }\n        if (!selectedColor) {\n          toast.error('Please select a color');\n          return;\n        }\n      }\n\n      // Check if there's enough stock\n      const productDoc = await getDoc(doc(db, 'products', id));\n      if (!productDoc.exists()) {\n        toast.error('Product not found');\n        return;\n      }\n\n      const productData = productDoc.data();\n      const currentColorStock = product.hasVariants ? \n        (productData.colorQuantities?.[selectedColor] || 0) : \n        productData.quantity;\n\n      if (quantity > currentColorStock) {\n        toast.error(`Sorry, only ${currentColorStock} items available in ${selectedColor || 'stock'}`);\n        return;\n      }\n\n      // Show loading toast\n      const loadingToast = toast.loading('Processing...');\n\n      // Clear existing cart first\n      const cartQuery = query(collection(db, 'cart'), where('userId', '==', user.uid));\n      const cartSnapshot = await getDocs(cartQuery);\n      const deletePromises = cartSnapshot.docs.map(doc => deleteDoc(doc.ref));\n      await Promise.all(deletePromises);\n\n      // Add this item to cart\n      await addDoc(collection(db, 'cart'), {\n        userId: user.uid,\n        productId: id,\n        quantity: quantity,\n        size: selectedSize || null,\n        color: selectedColor || null,\n        addedAt: serverTimestamp(),\n        price: product.hasDiscount && new Date() < new Date(product.discountEndsAt) \n          ? product.discountedPrice \n          : product.price,\n        isDiscounted: product.hasDiscount && new Date() < new Date(product.discountEndsAt),\n        originalPrice: product.price,\n        discountedPrice: product.discountedPrice,\n        discountEndsAt: product.discountEndsAt\n      });\n\n      // Update cart count\n      await updateCartCount(user.uid);\n\n      toast.dismiss(loadingToast);\n      // Navigate to checkout\n      navigate('/merch-store/checkout');\n\n      // Update product quantities after purchase\n      await updateProductQuantities(id, selectedColor, quantity);\n    } catch (error) {\n      console.error('Error processing buy now:', error);\n      toast.error('Failed to process. Please try again.');\n    }\n  };\n\n  const handleContactStore = async () => {\n    if (!user) {\n      toast.error('Please log in to contact the store');\n      return;\n    }\n\n    try {\n      // Show loading toast\n      const loadingToast = toast.loading('Starting conversation...');\n\n      // Check if conversation already exists with this seller\n      const q = query(\n        collection(db, 'conversations'),\n        where('participants', 'array-contains', user.uid),\n        where('sellerId', '==', product.sellerId)\n      );\n      const querySnapshot = await getDocs(q);\n      \n      let conversationId;\n      \n      if (!querySnapshot.empty) {\n        // Use existing conversation\n        conversationId = querySnapshot.docs[0].id;\n        \n        // Add new product card message\n        await addDoc(collection(db, 'messages'), {\n          conversationId,\n          senderId: user.uid,\n          text: \"Hi, I'm interested in this product:\",\n          timestamp: serverTimestamp(),\n          productCard: {\n            productId: product.id,\n            name: product.name,\n            description: product.description,\n            price: product.price,\n            image: product.images[0]\n          }\n        });\n\n        // Update conversation\n        await updateDoc(doc(db, 'conversations', conversationId), {\n          lastMessage: \"Hi, I'm interested in this product:\",\n          lastMessageTime: serverTimestamp(),\n          [`unreadCount.${product.sellerId}`]: (querySnapshot.docs[0].data().unreadCount?.[product.sellerId] || 0) + 1,\n          updatedAt: serverTimestamp()\n        });\n\n      } else {\n        // Create new conversation\n        const conversationRef = await addDoc(collection(db, 'conversations'), {\n          participants: [user.uid, product.sellerId],\n          buyerId: user.uid,\n          sellerId: product.sellerId,\n          buyerName: user.displayName || 'Token Factory Shopper',\n          sellerName: product.sellerName,\n          isVerifiedSeller: seller?.verificationStatus === 'approved',\n          unreadCount: {\n            [product.sellerId]: 1,\n            [user.uid]: 0\n          },\n          createdAt: serverTimestamp(),\n          updatedAt: serverTimestamp()\n        });\n        \n        conversationId = conversationRef.id;\n\n        // Add initial message with product card\n        await addDoc(collection(db, 'messages'), {\n          conversationId: conversationRef.id,\n          senderId: user.uid,\n          text: \"Hi, I'm interested in this product:\",\n          timestamp: serverTimestamp(),\n          productCard: {\n            productId: product.id,\n            name: product.name,\n            description: product.description,\n            price: product.price,\n            image: product.images[0]\n          }\n        });\n\n        // Update conversation with last message\n        await updateDoc(conversationRef, {\n          lastMessage: \"Hi, I'm interested in this product:\",\n          lastMessageTime: serverTimestamp()\n        });\n      }\n\n      // Dismiss loading toast and show success\n      toast.dismiss(loadingToast);\n      toast.success('Message sent successfully!');\n\n      // Navigate to conversation\n      navigate(`/merch-store/inbox/${conversationId}`);\n      \n    } catch (error) {\n      console.error('Error creating conversation:', error);\n      toast.error('Failed to start conversation');\n    }\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 100\n      }\n    }\n  };\n\n  const getTokenContractAddress = () => {\n    if (!seller || !product) return null;\n    \n    // Map network names to chain IDs\n    const networkToChainId = {\n      'sepolia': '11155111',\n      'polygon': '137',\n      'unichain': '1301'\n    };\n    \n    // Get network from seller's Firestore data and convert to chain ID\n    const networkName = seller.preferredNetwork?.toLowerCase();\n    const network = networkToChainId[networkName];\n    \n    if (!network) {\n      console.warn('Invalid network name:', networkName);\n      return null;\n    }\n    \n    const token = product.acceptedToken;\n    \n    const contractAddresses = {\n      '11155111': { // Sepolia\n        'USDC': import.meta.env.VITE_USDC_ADDRESS_SEPOLIA,\n        'USDT': import.meta.env.VITE_USDT_ADDRESS_SEPOLIA\n      },\n      '137': { // Polygon\n        'USDC': import.meta.env.VITE_USDC_ADDRESS_POLYGON,\n        'USDT': import.meta.env.VITE_USDT_ADDRESS_POLYGON\n      },\n      '1301': { // Unichain\n        'USDC': import.meta.env.VITE_UNICHAIN_USDC_ADDRESS,\n        'USDT': import.meta.env.VITE_UNICHAIN_USDT_ADDRESS\n      }\n    };\n\n    const address = contractAddresses[network]?.[token];\n    if (!address) {\n      console.warn(`No contract address found for token ${token} on network ${network}`);\n      return null;\n    }\n\n    return address;\n  };\n\n  const handleCopyAddress = async () => {\n    const address = getTokenContractAddress();\n    if (address) {\n      await navigator.clipboard.writeText(address);\n      setCopiedAddress(true);\n      setTimeout(() => setCopiedAddress(false), 2000);\n    }\n  };\n\n  const shortenAddress = (address) => {\n    if (!address) return '';\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n\n  // Add this function to update product quantities after purchase\n  const updateProductQuantities = async (productId, color, quantity) => {\n    const productRef = doc(db, 'products', productId);\n    const productDoc = await getDoc(productRef);\n    \n    if (!productDoc.exists()) {\n      throw new Error('Product not found');\n    }\n\n    const productData = productDoc.data();\n    \n    if (productData.hasVariants && color) {\n      // Update color-specific quantity\n      const currentColorQuantity = productData.colorQuantities[color] || 0;\n      const newColorQuantity = Math.max(0, currentColorQuantity - quantity);\n      \n      const newColorQuantities = {\n        ...productData.colorQuantities,\n        [color]: newColorQuantity\n      };\n\n      // Update total quantity as sum of all color quantities\n      const newTotalQuantity = Object.values(newColorQuantities).reduce((a, b) => a + b, 0);\n\n      await updateDoc(productRef, {\n        colorQuantities: newColorQuantities,\n        quantity: newTotalQuantity\n      });\n    } else {\n      // Update regular quantity\n      const newQuantity = Math.max(0, productData.quantity - quantity);\n      await updateDoc(productRef, {\n        quantity: newQuantity\n      });\n    }\n  };\n\n  if (loading) {\n    return <ProductDetailsSkeleton />;\n  }\n\n  if (!product) {\n    return (\n      <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'} flex items-center justify-center`}>\n        <div className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Product not found</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`container mx-auto px-4 py-8 ${isDarkMode ? 'bg-gray-900' : 'bg-white'}`}>\n      <motion.div\n        className={`max-w-6xl mx-auto p-4`}\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={containerVariants}\n      >\n        {/* Back Button */}\n        <motion.button\n          variants={itemVariants}\n          onClick={() => navigate(-1)}\n          className={`flex items-center gap-2 ${isDarkMode ? 'text-gray-300 hover:text-[#FF1B6B]' : 'text-gray-600 hover:text-[#FF1B6B]'} mb-6`}\n        >\n          <BiArrowBack className=\"text-xl\" />\n          <span>Back</span>\n        </motion.button>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          {/* Image Gallery */}\n          <motion.div variants={itemVariants} className=\"space-y-4\">\n            <div className=\"aspect-square rounded-lg overflow-hidden relative\">\n              <img\n                src={product.images[selectedImage]}\n                alt={product.name}\n                className=\"w-full h-full object-cover\"\n              />\n              {/* Discount Tag */}\n              {product.hasDiscount && new Date() < new Date(product.discountEndsAt) && (\n                <motion.div\n                  initial={{ scale: 0.8, opacity: 0 }}\n                  animate={{ scale: 1, opacity: 1 }}\n                  className=\"absolute bottom-0 left-0 right-0 bg-[#FF1B6B] text-white px-4 py-2.5 flex items-center justify-between\"\n                >\n                  <div className=\"flex items-center gap-2\">\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\n                    </svg>\n                    <span className=\"font-bold\">{product.discountPercent}% OFF</span>\n                  </div>\n                  <div className=\"text-sm flex items-center gap-2\">\n                    <span>·</span>\n                    <span>Ends in <CountdownTimer endsAt={product.discountEndsAt} /></span>\n                  </div>\n                </motion.div>\n              )}\n            </div>\n            <div className=\"grid grid-cols-4 gap-2\">\n              {product.images.map((image, index) => (\n                <button\n                  key={index}\n                  onClick={() => setSelectedImage(index)}\n                  className={`aspect-square rounded-lg overflow-hidden border-2 transition-colors ${\n                    selectedImage === index\n                      ? 'border-[#FF1B6B]'\n                      : 'border-transparent hover:border-gray-200'\n                  }`}\n                >\n                  <img\n                    src={image}\n                    alt={`${product.name} ${index + 1}`}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </button>\n              ))}\n            </div>\n          </motion.div>\n\n          {/* Product Info */}\n          <motion.div variants={itemVariants} className=\"space-y-6\">\n            <div className=\"flex items-start justify-between gap-4\">\n              <h1 className={`text-2xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} mb-2`}>\n                {product.name}\n              </h1>\n              {seller && (\n                <div className={`flex items-center gap-2 px-3 py-1.5 ${isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-gray-50 border-gray-200'} rounded-lg border shrink-0`}>\n                  <span className={`text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>{seller.storeName}</span>\n                  {seller.verificationStatus === 'approved' && (\n                    <div className=\"group relative inline-flex items-center\">\n                      <VerificationCheckmark className=\"!w-[10px] !h-[10px] min-w-[10px] min-h-[10px]\" />\n                      <div className=\"absolute bottom-full left-1/2 -translate-x-1/2 mb-1 px-1 py-0.5 bg-gray-900 text-white text-[8px] rounded opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 whitespace-nowrap z-10\">\n                        Verified Store\n                      </div>\n                    </div>\n                  )}\n                  {seller.country?.code && (\n                    <ReactCountryFlag\n                      countryCode={seller.country.code}\n                      svg\n                      style={{\n                        width: '1.2em',\n                        height: '1.2em',\n                      }}\n                      className=\"rounded-sm shadow-sm\"\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n            <p className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>{product.description}</p>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-3\">\n                <img\n                  src={product.tokenLogo}\n                  alt={product.acceptedToken}\n                  className=\"w-6 h-6\"\n                />\n                <div className=\"flex flex-col\">\n                  {product.hasDiscount && new Date() < new Date(product.discountEndsAt) ? (\n                    <>\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-2xl font-bold text-[#FF1B6B]\">\n                          {product.acceptedToken} {product.discountedPrice.toFixed(2)}\n                        </span>\n                        <span className=\"text-lg line-through text-gray-400\">\n                          {product.acceptedToken} {product.price.toFixed(2)}\n                        </span>\n                      </div>\n                      <div className=\"text-sm text-[#FF1B6B]\">\n                        Save {product.acceptedToken} {(product.price - product.discountedPrice).toFixed(2)}\n                      </div>\n                    </>\n                  ) : (\n                    <span className=\"text-2xl font-bold text-[#FF1B6B]\">\n                      {product.acceptedToken} {product.price.toFixed(2)}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className={`px-4 py-2 rounded-lg font-medium ${\n                product.quantity > 10 \n                  ? isDarkMode ? 'bg-green-900/20 text-green-400' : 'bg-green-100 text-green-700'\n                  : product.quantity > 0 \n                    ? isDarkMode ? 'bg-orange-900/20 text-orange-400' : 'bg-orange-100 text-orange-700'\n                    : isDarkMode ? 'bg-red-900/20 text-red-400' : 'bg-red-100 text-red-700'\n              }`}>\n                {product.quantity > 10 \n                  ? 'In Stock' \n                  : product.quantity > 0 \n                    ? `Only ${product.quantity} left` \n                    : 'Out of Stock'}\n              </div>\n            </div>\n\n            {/* Color Selection */}\n            {product.hasVariants && (\n              <div className=\"space-y-4\">\n                {/* Size Selection */}\n                {product.sizes.length > 0 && (\n                  <div>\n                    <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'} block mb-3`}>Select Size</span>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {product.sizes.map((size) => (\n                        <button\n                          key={size}\n                          onClick={() => setSelectedSize(size)}\n                          className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\n                            selectedSize === size\n                              ? 'bg-[#FF1B6B] text-white'\n                              : isDarkMode \n                                ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                          }`}\n                        >\n                          {size}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Color Selection */}\n                {product.colors.length > 0 && (\n                  <div>\n                    <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'} block mb-3`}>Select Color</span>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {product.colors.map((color) => {\n                        const isAvailable = product.colorQuantities[color] > 0;\n                        return (\n                          <button\n                            key={color}\n                            onClick={() => setSelectedColor(color)}\n                            disabled={!isAvailable}\n                            className={`inline-flex items-center gap-2 px-3 py-1.5 rounded-full text-sm font-medium transition-colors ${\n                              selectedColor === color\n                                ? 'bg-[#FF1B6B] text-white'\n                                : isAvailable\n                                ? isDarkMode \n                                  ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                                : isDarkMode\n                                  ? 'bg-gray-800 text-gray-500 cursor-not-allowed'\n                                  : 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                            }`}\n                          >\n                            <span\n                              className=\"w-4 h-4 rounded-full border border-gray-300\"\n                              style={{ backgroundColor: color.toLowerCase() }}\n                            />\n                            <span>{color}</span>\n                            <span className=\"text-xs\">\n                              ({product.colorQuantities[color] || 0})\n                            </span>\n                          </button>\n                        );\n                      })}\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Quantity Selector */}\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center gap-4\">\n                <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Quantity:</span>\n                <div className=\"flex items-center gap-2\">\n                  <button\n                    onClick={() => handleQuantityChange(-1)}\n                    disabled={quantity <= 1}\n                    className=\"p-1 rounded-full hover:bg-pink-50 disabled:opacity-50 disabled:hover:bg-transparent\"\n                  >\n                    <BiMinus className=\"text-xl\" />\n                  </button>\n                  <span className=\"w-12 text-center font-medium\">{quantity}</span>\n                  <button\n                    onClick={() => handleQuantityChange(1)}\n                    disabled={quantity >= product.quantity}\n                    className=\"p-1 rounded-full hover:bg-pink-50 disabled:opacity-50 disabled:hover:bg-transparent\"\n                  >\n                    <BiPlus className=\"text-xl\" />\n                  </button>\n                </div>\n              </div>\n\n              {/* Price Breakdown */}\n              <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-gray-50'} p-4 rounded-lg space-y-2`}>\n                <div className=\"flex justify-between text-sm\">\n                  <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Subtotal:</span>\n                  <div className=\"text-right\">\n                    {product.hasDiscount && new Date() < new Date(product.discountEndsAt) ? (\n                      <>\n                        <span className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\n                          {product.acceptedToken} {(product.discountedPrice * quantity).toFixed(2)}\n                        </span>\n                        <div className=\"text-xs text-gray-400 line-through\">\n                          {product.acceptedToken} {(product.price * quantity).toFixed(2)}\n                        </div>\n                      </>\n                    ) : (\n                      <span className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\n                        {product.acceptedToken} {(product.price * quantity).toFixed(2)}\n                      </span>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between text-sm\">\n                  <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Shipping Fee:</span>\n                  <span className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\n                    {product.acceptedToken} {(product.shippingFee || 0).toFixed(2)}\n                  </span>\n                </div>\n                <div className=\"border-t pt-2 flex justify-between font-medium\">\n                  <span className={`${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>Total:</span>\n                  <span className=\"text-[#FF1B6B]\">{product.acceptedToken} {totalPrice.toFixed(2)}</span>\n                </div>\n              </div>\n\n              {/* Action Buttons */}\n              <div className=\"flex gap-4\">\n                <button\n                  onClick={addToCart}\n                  className={`flex-1 flex items-center justify-center gap-2 py-3 ${\n                    isDarkMode \n                      ? 'bg-gray-800 text-gray-200 hover:bg-gray-700 hover:text-[#FF1B6B]'\n                      : 'bg-gray-100 text-gray-800 hover:bg-gray-100 hover:text-[#FF1B6B]'\n                  } rounded-lg transition-colors`}\n                >\n                  <BiCart className=\"text-xl\" />\n                  Add to Cart\n                </button>\n                <button\n                  onClick={handleBuyNow}\n                  className=\"flex-1 flex items-center justify-center gap-2 py-3 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#D4145A] transition-colors\"\n                >\n                  <BiWallet className=\"text-xl\" />\n                  Buy Now\n                </button>\n              </div>\n\n              {/* Contact Store Button */}\n              <button\n                onClick={handleContactStore}\n                className={`w-full flex items-center justify-center gap-2 py-3 ${\n                  isDarkMode \n                    ? 'bg-gray-800 border-2 border-[#FF1B6B] text-[#FF1B6B] hover:bg-gray-700'\n                    : 'bg-white border-2 border-[#FF1B6B] text-[#FF1B6B] hover:bg-pink-50'\n                } rounded-lg transition-colors mt-2`}\n              >\n                <BiMessageDetail className=\"text-xl\" />\n                Contact Store\n              </button>\n            </div>\n\n            {/* Additional Info */}\n            <div className={`border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-200'} pt-6 space-y-6`}>\n              <h2 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} mb-4`}>\n                Additional Information\n              </h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Category and Payment Token */}\n                <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} p-6 rounded-2xl shadow-sm`}>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Category</span>\n                      <span className={`${isDarkMode ? 'text-gray-100' : 'text-gray-800'} font-medium`}>\n                        {product.category.charAt(0).toUpperCase() + product.category.slice(1)}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Payment Token</span>\n                      <div className=\"flex items-center gap-2\">\n                        <img src={product.tokenLogo} alt={product.acceptedToken} className=\"w-4 h-4\" />\n                        <span className={`${isDarkMode ? 'text-gray-100' : 'text-gray-800'} font-medium`}>{product.acceptedToken}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Token Contract Address */}\n                <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} p-6 rounded-2xl shadow-sm`}>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Token Contract</span>\n                      {getTokenContractAddress() && (\n                        <div className=\"flex items-center gap-2\">\n                          <div className=\"px-2 py-1 rounded-full bg-purple-100 text-purple-700 text-xs font-medium\">\n                            {seller?.preferredNetwork?.toUpperCase()}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"relative\">\n                      <div className={`${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'} rounded-lg overflow-hidden`}>\n                        <div className=\"flex items-center justify-between\">\n                          <div className={`px-4 py-2.5 font-mono text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                            {getTokenContractAddress() ? shortenAddress(getTokenContractAddress()) : 'Network or token not configured'}\n                          </div>\n                          {getTokenContractAddress() && (\n                            <button\n                              onClick={handleCopyAddress}\n                              className=\"px-4 py-2.5 text-gray-400 hover:text-[#FF1B6B] transition-colors\"\n                              title=\"Copy full contract address\"\n                            >\n                              <FiCopy className={`text-lg ${copiedAddress ? 'text-[#FF1B6B]' : ''}`} />\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                      {copiedAddress && (\n                        <div className=\"absolute -right-2 top-1/2 -translate-y-1/2 transform translate-x-full\">\n                          <span className=\"bg-[#FF1B6B] text-white text-xs px-2 py-1 rounded\">\n                            Copied!\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {getTokenContractAddress() && (\n                      <p className=\"text-xs text-gray-500 flex items-center gap-1.5\">\n                        <svg className=\"w-3.5 h-3.5 text-[#FF1B6B]\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                        Copy to acquire {product.acceptedToken} on {\n                          seller?.preferredNetwork?.toLowerCase() === 'sepolia' ? 'Sepolia' :\n                          seller?.preferredNetwork?.toLowerCase() === 'polygon' ? 'Polygon' :\n                          seller?.preferredNetwork?.toLowerCase() === 'unichain' ? 'Unichain' : 'Unknown'\n                        } network\n                      </p>\n                    )}\n                  </div>\n                </div>\n\n                {/* Variants Information */}\n                {product.category === 'clothing' && product.hasVariants && (\n                  <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} p-6 rounded-2xl shadow-sm md:col-span-2`}>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div>\n                        <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'} block mb-3`}>Available Sizes</span>\n                        <div className=\"flex flex-wrap gap-2\">\n                          {product.sizes.map((size) => (\n                            <span key={size} className={`px-3 py-1 rounded-full text-sm font-medium ${isDarkMode ? 'text-gray-200 bg-gray-700' : 'text-gray-700 bg-gray-50'}`}>\n                              {size}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                      <div>\n                        <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'} block mb-3`}>Available Colors</span>\n                        <div className=\"flex flex-wrap gap-2\">\n                          {product.colors.map((color) => (\n                            <div key={color} className={`flex items-center gap-1.5 px-3 py-1 rounded-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'}`}>\n                              <span\n                                className=\"w-3 h-3 rounded-full border border-gray-200\"\n                                style={{ backgroundColor: color.toLowerCase() }}\n                              />\n                              <span className={`text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>{color}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Shipping Information */}\n            <div className={`border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-200'} pt-6 mt-6`}>\n              <h3 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} mb-4`}>\n                Shipping Details\n              </h3>\n              <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} p-6 rounded-2xl shadow-sm space-y-4`}>\n                <div className=\"flex items-center justify-between\">\n                  <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Shipping Fee</span>\n                  <span className=\"font-medium text-[#FF1B6B]\">${product.shippingFee?.toFixed(2) || '0.00'}</span>\n                </div>\n                {product.shippingInfo && (\n                  <div className={`pt-4 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-200'}`}>\n                    <h4 className={`text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} mb-2`}>\n                      Shipping Information\n                    </h4>\n                    <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'} leading-relaxed`}>\n                      {product.shippingInfo}\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </motion.div>\n        </div>\n\n        {/* Similar Products */}\n        {similarProducts.length > 0 && (\n          <motion.div\n            variants={itemVariants}\n            className={`mt-12 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-200'} pt-8`}\n          >\n            <h2 className={`text-xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} mb-2`}>\n              {similarProducts[0].sellerId === product.sellerId \n                ? `More from ${product.sellerName}`\n                : 'Similar Products'}\n            </h2>\n            <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'} text-sm mb-6`}>\n              {similarProducts[0].sellerId === product.sellerId \n                ? 'Check out other items from this store'\n                : 'You might also like these products'}\n            </p>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {similarProducts.map((product) => (\n                <motion.div\n                  key={product.id}\n                  className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm overflow-hidden group`}\n                  whileHover={{ y: -3 }}\n                >\n                  <button\n                    onClick={() => {\n                      navigate(`/merch-store/product/${product.id}`);\n                      window.scrollTo(0, 0);\n                    }}\n                    className=\"w-full text-left\"\n                  >\n                    <div className=\"aspect-square relative overflow-hidden\">\n                      <img\n                        src={product.images[0]}\n                        alt={product.name}\n                        className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-300\"\n                      />\n                    </div>\n                    <div className=\"p-3\">\n                      <h3 className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-800'} mb-1 truncate`}>\n                        {product.name}\n                      </h3>\n                      <div className=\"flex items-center gap-2\">\n                        <img\n                          src={product.tokenLogo}\n                          alt={product.acceptedToken}\n                          className=\"w-4 h-4\"\n                        />\n                        <p className=\"text-[#FF1B6B] font-medium\">\n                          ${product.price.toFixed(2)}\n                        </p>\n                      </div>\n                      <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1`}>\n                        by {product.sellerName}\n                      </p>\n                    </div>\n                  </button>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        )}\n\n        {/* Reviews Section */}\n        <motion.div\n          variants={itemVariants}\n          className={`mt-12 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-200'} pt-8`}\n        >\n          <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} p-6 rounded-2xl shadow-sm`}>\n            <ProductReviews productId={id} />\n          </div>\n        </motion.div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default ProductDetails; ","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { BiTrash, BiPlus, BiMinus } from 'react-icons/bi';\nimport { collection, query, where, getDocs, doc, updateDoc, deleteDoc, getDoc } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { toast } from 'react-hot-toast';\n\nconst SkeletonPulse = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      className={`w-full h-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-lg`}\n      animate={{\n        opacity: [0.4, 0.7, 0.4]\n      }}\n      transition={{\n        duration: 1.5,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n    />\n  );\n};\n\nconst CartSkeleton = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <div className={`max-w-7xl mx-auto p-4 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\n      {/* Header Skeleton */}\n      <div className=\"mb-8\">\n        <div className=\"w-32 h-8\">\n          <SkeletonPulse />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        {/* Cart Items Skeleton */}\n        <div className=\"lg:col-span-2 space-y-4\">\n          {[1, 2, 3].map((i) => (\n            <div key={i} className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm p-4`}>\n              <div className=\"flex gap-4\">\n                <div className=\"w-24 h-24 rounded-lg overflow-hidden flex-shrink-0\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"flex-1 space-y-2\">\n                  <div className=\"w-3/4 h-5\">\n                    <SkeletonPulse />\n                  </div>\n                  <div className=\"w-1/2 h-4\">\n                    <SkeletonPulse />\n                  </div>\n                  <div className=\"flex items-center justify-between mt-4\">\n                    <div className=\"w-32 h-8\">\n                      <SkeletonPulse />\n                    </div>\n                    <div className=\"w-24 h-8\">\n                      <SkeletonPulse />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Order Summary Skeleton */}\n        <div className=\"lg:col-span-1\">\n          <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm p-6 space-y-4`}>\n            <div className=\"w-40 h-6\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between\">\n                <div className=\"w-24 h-4\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-20 h-4\">\n                  <SkeletonPulse />\n                </div>\n              </div>\n              <div className=\"flex justify-between\">\n                <div className=\"w-24 h-4\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-20 h-4\">\n                  <SkeletonPulse />\n                </div>\n              </div>\n              <div className=\"flex justify-between\">\n                <div className=\"w-24 h-4\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-20 h-4\">\n                  <SkeletonPulse />\n                </div>\n              </div>\n            </div>\n            <div className={`border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-200'} pt-4 mt-4`}>\n              <div className=\"flex justify-between items-center\">\n                <div className=\"w-32 h-6\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-28 h-6\">\n                  <SkeletonPulse />\n                </div>\n              </div>\n            </div>\n            <div className=\"w-full h-12 mt-6\">\n              <SkeletonPulse />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Cart = () => {\n  const { user, updateCartCount } = useMerchAuth();\n  const { isDarkMode } = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [cartItems, setCartItems] = useState([]);\n  const [platformFee, setPlatformFee] = useState(2.5); // Default fee percentage\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchCartItems();\n    fetchPlatformFee();\n  }, [user]);\n\n  const fetchPlatformFee = async () => {\n    try {\n      const settingsDoc = await getDoc(doc(db, 'settings', 'platform'));\n      if (settingsDoc.exists()) {\n        const settings = settingsDoc.data();\n        setPlatformFee(settings.platformFee || 2.5);\n      }\n    } catch (error) {\n      console.error('Error fetching platform fee:', error);\n      // Use default platform fee if there's an error\n      setPlatformFee(2.5);\n    }\n  };\n\n  const fetchCartItems = async () => {\n    try {\n      const q = query(\n        collection(db, 'cart'),\n        where('userId', '==', user.uid)\n      );\n      const querySnapshot = await getDocs(q);\n      const items = [];\n\n      for (const cartDoc of querySnapshot.docs) {\n        const cartData = cartDoc.data();\n        const productDoc = await getDoc(doc(db, 'products', cartData.productId));\n        \n        if (productDoc.exists()) {\n          const productData = productDoc.data();\n          items.push({\n            id: cartDoc.id,\n            quantity: cartData.quantity,\n            product: {\n              id: productDoc.id,\n              ...productData\n            }\n          });\n        }\n      }\n\n      setCartItems(items);\n    } catch (error) {\n      console.error('Error fetching cart items:', error);\n      toast.error('Failed to load cart items');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateQuantity = async (cartItemId, newQuantity) => {\n    try {\n      const cartDoc = doc(db, 'cart', cartItemId);\n      const cartItem = cartItems.find(item => item.id === cartItemId);\n      \n      // Check current stock\n      const productDoc = await getDoc(doc(db, 'products', cartItem.product.id));\n      if (!productDoc.exists()) {\n        toast.error('Product not found');\n        return;\n      }\n\n      const currentStock = productDoc.data().quantity;\n      if (newQuantity > currentStock) {\n        toast.error(`Sorry, only ${currentStock} items available in stock`);\n        return;\n      }\n\n      await updateDoc(cartDoc, {\n        quantity: newQuantity\n      });\n      setCartItems(prev =>\n        prev.map(item =>\n          item.id === cartItemId\n            ? { ...item, quantity: newQuantity }\n            : item\n        )\n      );\n    } catch (error) {\n      console.error('Error updating quantity:', error);\n      toast.error('Failed to update quantity');\n    }\n  };\n\n  const removeItem = async (cartItemId) => {\n    try {\n      await deleteDoc(doc(db, 'cart', cartItemId));\n      setCartItems(prev => prev.filter(item => item.id !== cartItemId));\n      await updateCartCount(user.uid);\n      toast.success('Item removed from cart');\n    } catch (error) {\n      console.error('Error removing item:', error);\n      toast.error('Failed to remove item');\n    }\n  };\n\n  const calculateSubtotal = () => {\n    return cartItems.reduce((total, item) => {\n      const isDiscountValid = item.product.hasDiscount && new Date() < new Date(item.product.discountEndsAt);\n      const price = isDiscountValid ? item.product.discountedPrice : item.product.price;\n      return total + (price * item.quantity);\n    }, 0);\n  };\n\n  const calculateFees = () => {\n    const subtotal = calculateSubtotal();\n    return (subtotal * platformFee) / 100;\n  };\n\n  const calculateTotal = () => {\n    return calculateSubtotal() + calculateFees();\n  };\n\n  const handleCheckout = () => {\n    if (cartItems.length === 0) {\n      toast.error('Your cart is empty');\n      return;\n    }\n\n    navigate('/merch-store/checkout');\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 100\n      }\n    }\n  };\n\n  if (loading) {\n    return <CartSkeleton />;\n  }\n\n  return (\n    <motion.div\n      className={`max-w-4xl mx-auto p-4 space-y-6 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}\n      initial=\"hidden\"\n      animate=\"visible\"\n      variants={containerVariants}\n    >\n      <motion.h1\n        variants={itemVariants}\n        className={`text-2xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}\n      >\n        Shopping Cart\n      </motion.h1>\n\n      {cartItems.length === 0 ? (\n        <motion.div\n          variants={itemVariants}\n          className={`text-center py-12 ${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg`}\n        >\n          <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mb-4`}>Your cart is empty</p>\n          <Link\n            to=\"/merch-store\"\n            className=\"text-[#FF1B6B] hover:text-[#D4145A] font-medium\"\n          >\n            Continue Shopping\n          </Link>\n        </motion.div>\n      ) : (\n        <>\n          {/* Cart Items */}\n          <motion.div variants={containerVariants} className=\"space-y-4\">\n            {cartItems.map((item) => (\n              <motion.div\n                key={item.id}\n                variants={itemVariants}\n                className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-4 flex gap-4 items-center`}\n              >\n                <Link\n                  to={`/merch-store/product/${item.product.id}`}\n                  className=\"w-24 h-24 rounded-lg overflow-hidden flex-shrink-0\"\n                >\n                  <img\n                    src={item.product.images[0]}\n                    alt={item.product.name}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </Link>\n                <div className=\"flex-1\">\n                  <Link\n                    to={`/merch-store/product/${item.product.id}`}\n                    className={`font-medium ${isDarkMode ? 'text-gray-100 hover:text-[#FF1B6B]' : 'text-gray-800 hover:text-[#FF1B6B]'}`}\n                  >\n                    {item.product.name}\n                  </Link>\n                  <div className=\"flex items-center gap-2 mt-1\">\n                    <img\n                      src={item.product.tokenLogo}\n                      alt={item.product.acceptedToken}\n                      className=\"w-4 h-4\"\n                    />\n                    <span className=\"text-[#FF1B6B] font-medium\">\n                      {item.product.hasDiscount && new Date() < new Date(item.product.discountEndsAt) ? (\n                        <>\n                          ${item.product.discountedPrice.toFixed(2)}\n                          <span className={`text-sm ${isDarkMode ? 'text-gray-500' : 'text-gray-400'} line-through ml-1`}>\n                            ${item.product.price.toFixed(2)}\n                          </span>\n                        </>\n                      ) : (\n                        `$${item.product.price.toFixed(2)}`\n                      )}\n                    </span>\n                  </div>\n                  <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1`}>\n                    Sold by {item.product.sellerName}\n                  </p>\n                </div>\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"flex items-center gap-2\">\n                    <button\n                      onClick={() => updateQuantity(item.id, item.quantity - 1)}\n                      className={`p-1 rounded-full ${isDarkMode ? 'hover:bg-gray-700' : 'hover:bg-gray-100'} ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}\n                      disabled={item.quantity <= 1}\n                    >\n                      <BiMinus className=\"text-lg\" />\n                    </button>\n                    <span className={`w-8 text-center ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>{item.quantity}</span>\n                    <button\n                      onClick={() => updateQuantity(item.id, item.quantity + 1)}\n                      className={`p-1 rounded-full ${isDarkMode ? 'hover:bg-gray-700' : 'hover:bg-gray-100'} ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}\n                      disabled={item.quantity >= item.product.quantity}\n                    >\n                      <BiPlus className=\"text-lg\" />\n                    </button>\n                  </div>\n                  <button\n                    onClick={() => removeItem(item.id)}\n                    className={`p-2 ${isDarkMode ? 'text-gray-500 hover:text-red-400' : 'text-gray-400 hover:text-red-500'} transition-colors`}\n                  >\n                    <BiTrash className=\"text-xl\" />\n                  </button>\n                </div>\n              </motion.div>\n            ))}\n          </motion.div>\n\n          {/* Order Summary */}\n          <motion.div\n            variants={itemVariants}\n            className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-6 space-y-4`}\n          >\n            <h2 className={`font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>Order Summary</h2>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className={`${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>Subtotal</span>\n                <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>${calculateSubtotal().toFixed(2)}</span>\n              </div>\n              <div className={`flex justify-between font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} pt-2 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-200'}`}>\n                <span>Total</span>\n                <span>${calculateSubtotal().toFixed(2)}</span>\n              </div>\n            </div>\n            <button\n              onClick={handleCheckout}\n              className=\"w-full py-3 bg-[#FF1B6B] text-white rounded-lg font-medium hover:bg-[#D4145A] transition-colors\"\n            >\n              Proceed to Checkout\n            </button>\n          </motion.div>\n        </>\n      )}\n    </motion.div>\n  );\n};\n\nexport default Cart; ","import React, { useEffect, useState } from 'react';\nimport { FiX } from 'react-icons/fi';\n\nconst TrackingModal = ({ isOpen, onClose, trackingNumber, carrier }) => {\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // Add console filtering\n  useEffect(() => {\n    // Store original console methods\n    const originalConsole = {\n      log: console.log,\n      warn: console.warn,\n      error: console.error\n    };\n\n    // Filter out all messages\n    const filterLogs = (type) => (...args) => {\n      // Only allow console messages that we explicitly want to show\n      const isOurMessage = args.some(arg => \n        typeof arg === 'string' && \n        arg.includes('Error initializing tracking widget:')\n      );\n      \n      if (isOurMessage) {\n        originalConsole[type](...args);\n      }\n    };\n\n    // Override console methods\n    console.log = filterLogs('log');\n    console.warn = filterLogs('warn');\n    console.error = filterLogs('error');\n\n    // Cleanup\n    return () => {\n      console.log = originalConsole.log;\n      console.warn = originalConsole.warn;\n      console.error = originalConsole.error;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!isOpen) return;\n\n    const container = document.getElementById('tracking-container');\n    if (!container) return;\n\n    const initializeWidget = () => {\n      try {\n        // Clear previous content\n        container.innerHTML = '';\n\n        // Create a div for the tracking widget\n        const widgetContainer = document.createElement('div');\n        widgetContainer.id = 'YQContainer';\n        widgetContainer.className = 'rounded-lg border border-pink-100 shadow-sm';\n        container.appendChild(widgetContainer);\n\n        if (window.YQV5) {\n          window.YQV5.trackSingle({\n            YQ_ContainerId: \"YQContainer\",\n            YQ_Height: 560,\n            YQ_Fc: carrier || \"0\",\n            YQ_Lang: \"en\",\n            YQ_Num: trackingNumber\n          });\n          setIsInitialized(true);\n        }\n      } catch (error) {\n        console.error('Error initializing tracking widget:', error);\n      }\n    };\n\n    // Load the 17Track script if not already loaded\n    if (!document.getElementById('YQScript')) {\n      const script = document.createElement('script');\n      script.id = 'YQScript';\n      script.src = 'https://www.17track.net/externalcall.js';\n      script.async = true;\n      document.head.appendChild(script);\n    }\n\n    // Check for YQV5 object\n    const checkYQV5 = setInterval(() => {\n      if (window.YQV5) {\n        clearInterval(checkYQV5);\n        initializeWidget();\n      }\n    }, 100);\n\n    // Cleanup\n    return () => {\n      clearInterval(checkYQV5);\n      setIsInitialized(false);\n      if (container) {\n        container.innerHTML = '';\n      }\n    };\n  }, [isOpen, trackingNumber, carrier]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50\">\n      <div className=\"fixed inset-0 bg-white bg-opacity-90\" onClick={onClose} />\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 p-4 relative z-50\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"text-xl font-semibold text-[#FF1B6B]\">\n            Tracking Details\n          </h3>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-[#FF1B6B] transition-colors\"\n          >\n            <FiX className=\"w-5 h-5\" />\n          </button>\n        </div>\n\n        <div className=\"mb-4 p-3 bg-pink-50 rounded-lg\">\n          <div className=\"flex items-center gap-3 text-sm\">\n            <span className=\"font-medium text-gray-500\">Tracking Number:</span>\n            <span className=\"font-medium text-gray-900\">{trackingNumber}</span>\n            <span className=\"mx-2 text-gray-300\">|</span>\n            <span className=\"font-medium text-gray-500\">Carrier:</span>\n            <span className=\"font-medium text-gray-900\">{carrier || 'Auto-detect'}</span>\n          </div>\n        </div>\n\n        {!isInitialized ? (\n          <div className=\"flex items-center justify-center py-6\">\n            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-[#FF1B6B]\" />\n          </div>\n        ) : null}\n        <div id=\"tracking-container\" className=\"w-full min-h-[560px] rounded-lg bg-gradient-to-br from-pink-50 to-white\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default TrackingModal; ","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport { BiPackage, BiChevronRight, BiStar, BiCheck, BiX, BiImage } from 'react-icons/bi';\nimport { FaPlaneDeparture, FaBox, FaCheckCircle, FaStar } from 'react-icons/fa';\nimport { collection, query, where, getDocs, orderBy, addDoc, serverTimestamp, doc, updateDoc, getDoc } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { toast } from 'react-hot-toast';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { getMerchPlatformContract, parseTokenAmount } from '../../contracts/MerchPlatform';\nimport { ethers } from 'ethers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport TrackingModal from '../../components/TrackingModal';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { storage } from '../../firebase/merchConfig';\n\nconst SkeletonPulse = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      className={`w-full h-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-lg`}\n      animate={{\n        opacity: [0.4, 0.7, 0.4]\n      }}\n      transition={{\n        duration: 1.5,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n    />\n  );\n};\n\nconst OrdersSkeleton = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <div className=\"max-w-7xl mx-auto p-4\">\n      {/* Header Skeleton */}\n      <div className=\"mb-8\">\n        <div className=\"w-32 h-8\">\n          <SkeletonPulse />\n        </div>\n      </div>\n\n      {/* Orders List Skeleton */}\n      <div className=\"space-y-6\">\n        {[1, 2, 3].map((i) => (\n          <div key={i} className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm p-6`}>\n            {/* Order Header */}\n            <div className=\"flex justify-between items-center mb-4\">\n              <div className=\"space-y-2\">\n                <div className=\"w-48 h-5\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-32 h-4\">\n                  <SkeletonPulse />\n                </div>\n              </div>\n              <div className=\"w-24 h-8\">\n                <SkeletonPulse />\n              </div>\n            </div>\n\n            {/* Order Items */}\n            <div className={`border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-200'} pt-4 space-y-4`}>\n              {[1, 2].map((j) => (\n                <div key={j} className=\"flex gap-4\">\n                  <div className=\"w-20 h-20 rounded-lg overflow-hidden flex-shrink-0\">\n                    <SkeletonPulse />\n                  </div>\n                  <div className=\"flex-1 space-y-2\">\n                    <div className=\"w-3/4 h-5\">\n                      <SkeletonPulse />\n                    </div>\n                    <div className=\"w-1/2 h-4\">\n                      <SkeletonPulse />\n                    </div>\n                    <div className=\"flex items-center gap-4\">\n                      <div className=\"w-20 h-4\">\n                        <SkeletonPulse />\n                      </div>\n                      <div className=\"w-24 h-4\">\n                        <SkeletonPulse />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Order Summary */}\n            <div className={`border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-200'} mt-4 pt-4`}>\n              <div className=\"flex justify-between items-center\">\n                <div className=\"space-y-2\">\n                  <div className=\"w-32 h-4\">\n                    <SkeletonPulse />\n                  </div>\n                  <div className=\"w-48 h-4\">\n                    <SkeletonPulse />\n                  </div>\n                </div>\n                <div className=\"text-right space-y-2\">\n                  <div className=\"w-32 h-6\">\n                    <SkeletonPulse />\n                  </div>\n                  <div className=\"w-24 h-4\">\n                    <SkeletonPulse />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst RefundRequestModal = ({ isOpen, onClose, order }) => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const { isDarkMode } = useTheme();\n\n  useEffect(() => {\n    checkWalletConnection();\n  }, []);\n\n  const checkWalletConnection = async () => {\n    try {\n      const provider = await detectEthereumProvider();\n      if (provider) {\n        const accounts = await provider.request({ method: 'eth_accounts' });\n        if (accounts.length > 0) {\n          setWalletAddress(accounts[0]);\n          setWalletConnected(true);\n        }\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n    }\n  };\n\n  const handleSubmitRefund = async () => {\n    if (order.status !== 'cancelled') {\n      toast.error('Only cancelled orders are eligible for refund requests');\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      // Get seller's wallet address from sellers collection\n      const sellerDoc = await getDoc(doc(db, 'sellers', order.sellerId));\n      if (!sellerDoc.exists()) {\n        throw new Error(`Seller not found with ID: ${order.sellerId}`);\n      }\n      \n      const sellerWallet = sellerDoc.data().walletAddress;\n      const buyerWallet = order.paymentMethod?.buyerWallet;\n\n      // Validate addresses\n      if (!buyerWallet || !ethers.isAddress(buyerWallet)) {\n        throw new Error('Invalid buyer wallet address');\n      }\n\n      if (!sellerWallet || !ethers.isAddress(sellerWallet)) {\n        throw new Error(`Invalid seller wallet address: ${sellerWallet}`);\n      }\n\n      const refundAmount = order.total * 0.95; // Calculate 95% of the total (5% platform fee deducted)\n\n      // Create refund request in Firestore\n      const refundRequest = {\n        orderId: order.id,\n        buyerId: order.buyerId,\n        sellerId: order.sellerId,\n        amount: refundAmount,\n        originalAmount: order.total,\n        paymentAddress: buyerWallet, // Use buyer's wallet address\n        status: 'pending',\n        createdAt: serverTimestamp(),\n        network: order.paymentMethod.network,\n        orderDetails: {\n          items: order.items,\n          total: order.total,\n          paymentMethod: order.paymentMethod\n        }\n      };\n\n      // Add the refund request to Firestore\n      await addDoc(collection(db, 'refundRequests'), refundRequest);\n\n      toast.success('Refund request submitted successfully');\n      onClose();\n\n    } catch (error) {\n      console.error('Error submitting refund request:', error);\n      toast.error(error.message || 'Failed to submit refund request');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  const platformFee = order.total * 0.05;\n  const refundAmount = order.total * 0.95;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-6 max-w-md w-full mx-4`}>\n        <h2 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>Request Refund</h2>\n        \n        {order.status !== 'cancelled' ? (\n          <div className=\"mb-4 p-4 bg-yellow-50 rounded-lg\">\n            <div className=\"flex items-start gap-2\">\n              <FiAlertCircle className=\"text-yellow-500 text-lg mt-0.5\" />\n              <div>\n                <p className=\"text-sm font-medium text-yellow-800\">Not Eligible for Refund</p>\n                <p className=\"text-sm text-yellow-700 mt-1\">\n                  Only cancelled orders are eligible for refund requests. This order's status is \"{order.status}\".\n                </p>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"mb-4 p-4 bg-blue-50 rounded-lg\">\n              <div className=\"flex items-start gap-2\">\n                <FiAlertCircle className=\"text-blue-500 text-lg mt-0.5\" />\n                <div>\n                  <p className=\"text-sm font-medium text-blue-800\">Refund Processing Time</p>\n                  <p className=\"text-sm text-blue-700 mt-1\">\n                    Refund requests typically take up to 1 week to process.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"mb-4 p-4 bg-pink-50 rounded-lg\">\n              <div className=\"flex items-start gap-2\">\n                <FiAlertCircle className=\"text-[#FF1B6B] text-lg mt-0.5\" />\n                <div>\n                  <p className=\"text-sm font-medium text-[#FF1B6B]\">Platform Fee Notice</p>\n                  <p className=\"text-sm text-[#FF1B6B]/80 mt-1\">\n                    The 5% platform fee (${platformFee.toFixed(2)}) is non-refundable as it was deducted at the time of purchase.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        <div className=\"space-y-4 mb-6\">\n          <div>\n            <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n              Order ID\n            </label>\n            <input\n              type=\"text\"\n              value={`#${order.id.slice(-6)}`}\n              disabled\n              className={`w-full px-3 py-2 ${isDarkMode ? 'bg-gray-700 text-gray-200 border-gray-600' : 'bg-gray-50 text-gray-700 border-gray-300'} border rounded-lg`}\n            />\n          </div>\n\n          <div>\n            <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n              Payment Address\n            </label>\n            <input\n              type=\"text\"\n              value={order.paymentMethod.buyerWallet}\n              disabled\n              className={`w-full px-3 py-2 ${isDarkMode ? 'bg-gray-700 text-gray-200 border-gray-600' : 'bg-gray-50 text-gray-700 border-gray-300'} border rounded-lg`}\n            />\n          </div>\n\n          <div className=\"space-y-3\">\n            <div>\n              <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                Original Amount\n              </label>\n              <div className=\"flex items-center gap-2\">\n                <img\n                  src={`/${order.paymentMethod?.token?.toLowerCase() || 'usdt'}.png`}\n                  alt={order.paymentMethod?.token || 'USDT'}\n                  className=\"w-5 h-5\"\n                />\n                <input\n                  type=\"text\"\n                  value={`$${order.total.toFixed(2)}`}\n                  disabled\n                  className={`flex-1 px-3 py-2 ${isDarkMode ? 'bg-gray-700 text-gray-200 border-gray-600' : 'bg-gray-50 text-gray-700 border-gray-300'} border rounded-lg line-through`}\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-[#FF1B6B] mb-1\">\n                Refund Amount (after 5% platform fee)\n              </label>\n              <div className=\"flex items-center gap-2\">\n                <img\n                  src={`/${order.paymentMethod?.token?.toLowerCase() || 'usdt'}.png`}\n                  alt={order.paymentMethod?.token || 'USDT'}\n                  className=\"w-5 h-5\"\n                />\n                <input\n                  type=\"text\"\n                  value={`$${refundAmount.toFixed(2)}`}\n                  disabled\n                  className={`flex-1 px-3 py-2 bg-[#FF1B6B]/5 border border-[#FF1B6B]/20 rounded-lg ${isDarkMode ? 'text-gray-200' : 'text-gray-700'} font-medium`}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end gap-3\">\n          <button\n            onClick={onClose}\n            className={`px-4 py-2 ${isDarkMode ? 'text-gray-300 hover:text-gray-100' : 'text-gray-700 hover:text-gray-900'}`}\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleSubmitRefund}\n            disabled={isSubmitting || order.status !== 'cancelled'}\n            className={`px-4 py-2 rounded-lg text-white ${\n              order.status !== 'cancelled'\n                ? 'bg-gray-400 cursor-not-allowed'\n                : isSubmitting\n                ? 'bg-[#FF1B6B] opacity-50 cursor-not-allowed'\n                : 'bg-[#FF1B6B] hover:bg-[#D4145A]'\n            }`}\n          >\n            {isSubmitting ? 'Submitting...' : 'Submit Refund Request'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst DeliveryConfirmationModal = ({ isOpen, onClose, onConfirm, orderId }) => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { isDarkMode } = useTheme();\n\n  const handleConfirm = async () => {\n    setIsSubmitting(true);\n    await onConfirm(orderId);\n    setIsSubmitting(false);\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50\">\n      <div className={`fixed inset-0 ${isDarkMode ? 'bg-gray-900' : 'bg-white'} bg-opacity-90`} onClick={onClose} />\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-xl max-w-md w-full mx-4 p-6 relative z-50`}>\n        <h3 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>Confirm Delivery</h3>\n        \n        <div className=\"mb-4 p-4 bg-blue-50 rounded-lg\">\n          <div className=\"flex items-start gap-2\">\n            <FiAlertCircle className=\"text-blue-500 text-lg mt-0.5\" />\n            <div>\n              <p className=\"text-sm font-medium text-blue-800\">Please confirm that you have received your order.</p>\n              <p className=\"text-sm text-blue-700 mt-1\">\n                This will help release the payment to the seller.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mb-4 p-4 bg-pink-50 rounded-lg\">\n          <div className=\"flex items-start gap-2\">\n            <FiAlertCircle className=\"text-[#FF1B6B] text-lg mt-0.5\" />\n            <div>\n              <p className=\"text-sm font-medium text-[#FF1B6B]\">Automatic Fund Release Notice</p>\n              <p className=\"text-sm text-[#FF1B6B]/80 mt-1\">\n                If delivery is not confirmed within 2-3 weeks of shipping and no complaint is raised about non-receipt while tracking shows delivered, the seller's funds will be automatically released.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end gap-3\">\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className={`px-4 py-2 ${isDarkMode ? 'text-gray-300 hover:text-gray-100' : 'text-gray-700 hover:text-gray-900'}`}\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleConfirm}\n            disabled={isSubmitting}\n            className=\"px-4 py-2 rounded-lg text-white bg-[#FF1B6B] hover:bg-[#D4145A] disabled:opacity-50\"\n          >\n            {isSubmitting ? 'Confirming...' : 'Confirm Delivery'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ReviewModal = ({ isOpen, onClose, order, item }) => {\n  const [rating, setRating] = useState(0);\n  const [review, setReview] = useState('');\n  const [image, setImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { user } = useMerchAuth();\n  const { isDarkMode } = useTheme();\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        toast.error('Image must be less than 2MB');\n        return;\n      }\n      setImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!rating) {\n      toast.error('Please select a rating');\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      let imageUrl = '';\n      if (image) {\n        const imageRef = ref(storage, `reviews/${item.productId}/${user.uid}_${Date.now()}`);\n        await uploadBytes(imageRef, image);\n        imageUrl = await getDownloadURL(imageRef);\n      }\n\n      const reviewData = {\n        productId: item.productId,\n        orderId: order.id,\n        userId: user.uid,\n        sellerId: item.sellerId || order.sellerId,\n        rating,\n        review: review.trim(),\n        image: imageUrl,\n        createdAt: new Date(),\n        userName: user.displayName || user.email?.split('@')[0] || 'Anonymous',\n        productName: item.name,\n        productImage: item.image\n      };\n\n      await addDoc(collection(db, 'reviews'), reviewData);\n      toast.success('Review submitted successfully');\n      onClose();\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      toast.error('Failed to submit review');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40\" onClick={onClose} />\n      <div className=\"fixed inset-0 flex items-center justify-center z-50 p-4\">\n        <motion.div\n          initial={{ scale: 0.9, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-xl max-w-md w-full p-6`}\n        >\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Write a Review</h3>\n            <button onClick={onClose} className={`${isDarkMode ? 'text-gray-400 hover:text-gray-300' : 'text-gray-500 hover:text-gray-700'}`}>\n              <BiX className=\"w-6 h-6\" />\n            </button>\n          </div>\n\n          <div className={`flex items-center gap-3 p-3 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'} rounded-lg mb-4`}>\n            <img src={item.image} alt={item.name} className=\"w-16 h-16 rounded-lg object-cover\" />\n            <div>\n              <h4 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>{item.name}</h4>\n              <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Order #{order.id.slice(-6)}</p>\n            </div>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>Rating</label>\n              <div className=\"flex items-center gap-1\">\n                {[1, 2, 3, 4, 5].map((star) => (\n                  <button\n                    key={star}\n                    type=\"button\"\n                    onClick={() => setRating(star)}\n                    className=\"focus:outline-none\"\n                  >\n                    <FaStar\n                      className={`w-6 h-6 ${\n                        star <= rating ? 'text-[#FF1B6B]' : isDarkMode ? 'text-gray-600' : 'text-gray-300'\n                      }`}\n                    />\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>Review</label>\n              <textarea\n                value={review}\n                onChange={(e) => setReview(e.target.value)}\n                className={`w-full px-3 py-2 border rounded-lg focus:ring-[#FF1B6B] focus:border-[#FF1B6B] ${\n                  isDarkMode \n                    ? 'bg-gray-700 border-gray-600 text-gray-200 placeholder-gray-400' \n                    : 'border-gray-300 text-gray-900 placeholder-gray-400'\n                }`}\n                rows=\"4\"\n                placeholder=\"Share your experience with this product...\"\n              />\n            </div>\n\n            <div>\n              <label className={`block text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\n                Add Image (optional)\n              </label>\n              <div className=\"flex items-center gap-4\">\n                <label className=\"cursor-pointer\">\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleImageChange}\n                    className=\"hidden\"\n                  />\n                  <div className={`flex items-center gap-2 px-4 py-2 border rounded-lg ${\n                    isDarkMode \n                      ? 'border-gray-600 hover:bg-gray-700' \n                      : 'border-gray-300 hover:bg-gray-50'\n                  }`}>\n                    <BiImage className={`w-5 h-5 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`} />\n                    <span className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>Choose Image</span>\n                  </div>\n                </label>\n                {imagePreview && (\n                  <div className=\"relative\">\n                    <img\n                      src={imagePreview}\n                      alt=\"Preview\"\n                      className=\"w-16 h-16 rounded-lg object-cover\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setImage(null);\n                        setImagePreview('');\n                      }}\n                      className=\"absolute -top-2 -right-2 bg-red-100 text-red-600 rounded-full p-0.5\"\n                    >\n                      <BiX className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"w-full py-2 px-4 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#FF1B6B]/90 disabled:opacity-50\"\n            >\n              {isSubmitting ? 'Submitting...' : 'Submit Review'}\n            </button>\n          </form>\n        </motion.div>\n      </div>\n    </>\n  );\n};\n\nconst Orders = () => {\n  const { user } = useMerchAuth();\n  const { isDarkMode } = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [orders, setOrders] = useState([]);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [isRefundModalOpen, setIsRefundModalOpen] = useState(false);\n  const [isDeliveryModalOpen, setIsDeliveryModalOpen] = useState(false);\n  const [selectedOrderForDelivery, setSelectedOrderForDelivery] = useState(null);\n  const [isTrackingModalOpen, setIsTrackingModalOpen] = useState(false);\n  const [selectedTracking, setSelectedTracking] = useState(null);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [selectedItemForReview, setSelectedItemForReview] = useState(null);\n\n  useEffect(() => {\n    fetchOrders();\n  }, [user]);\n\n  const fetchOrders = async () => {\n    try {\n      const q = query(\n        collection(db, 'orders'),\n        where('buyerId', '==', user.uid),\n        orderBy('createdAt', 'desc')\n      );\n      const querySnapshot = await getDocs(q);\n      const ordersData = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setOrders(ordersData);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      toast.error('Failed to load orders');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status.toLowerCase()) {\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-700';\n      case 'processing':\n        return 'bg-blue-100 text-blue-700';\n      case 'shipped':\n        return 'bg-purple-100 text-purple-700';\n      case 'delivered':\n        return 'bg-green-100 text-green-700';\n      case 'cancelled':\n        return 'bg-red-100 text-red-700';\n      default:\n        return 'bg-gray-100 text-gray-700';\n    }\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 100\n      }\n    }\n  };\n\n  const confirmDelivery = async (orderId) => {\n    try {\n      const orderRef = doc(db, 'orders', orderId);\n      await updateDoc(orderRef, {\n        status: 'delivered',\n        deliveredAt: new Date(),\n        shippingStatus: 'delivered',\n        deliveryConfirmedByBuyer: true\n      });\n\n      // Update local state\n      setOrders(prev =>\n        prev.map(order =>\n          order.id === orderId\n            ? {\n                ...order,\n                status: 'delivered',\n                deliveredAt: new Date(),\n                shippingStatus: 'delivered',\n                deliveryConfirmedByBuyer: true\n              }\n            : order\n        )\n      );\n\n      toast.success('Delivery confirmed successfully');\n    } catch (error) {\n      console.error('Error confirming delivery:', error);\n      toast.error('Failed to confirm delivery');\n    }\n  };\n\n  const handleTrackingClick = (order) => {\n    setSelectedTracking({\n      trackingNumber: order.trackingNumber,\n      carrier: order.carrier\n    });\n    setIsTrackingModalOpen(true);\n  };\n\n  if (loading) {\n    return <OrdersSkeleton />;\n  }\n\n  return (\n    <motion.div\n      className={`max-w-4xl mx-auto p-4 space-y-6 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}\n      initial=\"hidden\"\n      animate=\"visible\"\n      variants={containerVariants}\n    >\n      <motion.h1\n        variants={itemVariants}\n        className={`text-2xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}\n      >\n        My Orders\n      </motion.h1>\n\n      {orders.length === 0 ? (\n        <motion.div\n          variants={itemVariants}\n          className={`text-center py-12 ${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg`}\n        >\n          <div className=\"flex justify-center mb-4\">\n            <BiPackage className={`text-4xl ${isDarkMode ? 'text-gray-600' : 'text-gray-400'}`} />\n          </div>\n          <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mb-4`}>You haven't placed any orders yet</p>\n          <Link\n            to=\"/merch-store\"\n            className=\"text-[#FF1B6B] hover:text-[#D4145A] font-medium\"\n          >\n            Start Shopping\n          </Link>\n        </motion.div>\n      ) : (\n        <motion.div variants={containerVariants} className=\"space-y-4\">\n          {orders.map((order) => (\n            <motion.div\n              key={order.id}\n              variants={itemVariants}\n              className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-4`}\n            >\n              {/* Order Header */}\n              <div className=\"flex justify-between items-center mb-3\">\n                <div className=\"flex items-center gap-2\">\n                  <h3 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>\n                    Order #{order.id.slice(-6)}\n                  </h3>\n                  <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                    {new Date(order.createdAt?.seconds * 1000).toLocaleDateString()}\n                  </span>\n                </div>\n                <span\n                  className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusColor(\n                    order.status\n                  )}`}\n                >\n                  {order.status}\n                </span>\n              </div>\n\n              {/* Order Items */}\n              <div className={`border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n                {order.items.map((item) => (\n                  <div key={item.productId} className=\"flex items-center gap-3 py-3\">\n                    <Link\n                      to={`/merch-store/product/${item.productId}`}\n                      className=\"w-14 h-14 rounded-lg overflow-hidden flex-shrink-0\"\n                    >\n                      <img\n                        src={item.image}\n                        alt={item.name}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </Link>\n                    <div className=\"flex-1 min-w-0\">\n                      <Link\n                        to={`/merch-store/product/${item.productId}`}\n                        className={`font-medium ${isDarkMode ? 'text-gray-100 hover:text-[#FF1B6B]' : 'text-gray-800 hover:text-[#FF1B6B]'} block truncate`}\n                      >\n                        {item.name}\n                      </Link>\n                      <div className=\"flex items-center gap-2 mt-1\">\n                        <img\n                          src={`/${order.paymentMethod?.token?.toLowerCase() || 'usdt'}.png`}\n                          alt={order.paymentMethod?.token || 'USDT'}\n                          className=\"w-4 h-4\"\n                        />\n                        <span className=\"text-[#FF1B6B] font-medium\">\n                          ${item.price.toFixed(2)}\n                        </span>\n                        <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                          × {item.quantity}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      {order.status === 'delivered' && (\n                        <button\n                          onClick={() => {\n                            setSelectedOrder(order);\n                            setSelectedItemForReview(item);\n                            setIsReviewModalOpen(true);\n                          }}\n                          className=\"text-sm text-[#FF1B6B] hover:text-[#FF1B6B]/80 font-medium flex items-center gap-1\"\n                        >\n                          <BiStar className=\"w-4 h-4\" />\n                          Write a Review\n                        </button>\n                      )}\n                      <BiChevronRight className={`text-xl ${isDarkMode ? 'text-gray-500' : 'text-gray-400'}`} />\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Order Summary and Tracking */}\n              <div className={`border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-100'} pt-3`}>\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Total Amount</span>\n                    <div className=\"flex items-center gap-1\">\n                      <img\n                        src={`/${order.paymentMethod?.token?.toLowerCase() || 'usdt'}.png`}\n                        alt={order.paymentMethod?.token || 'USDT'}\n                        className=\"w-4 h-4\"\n                      />\n                      <span className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>\n                        ${order.total.toFixed(2)}\n                      </span>\n                    </div>\n                  </div>\n                  {order.status === 'shipped' && (\n                    <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                      Estimated Delivery: {new Date(order.createdAt?.seconds * 1000 + 14 * 24 * 60 * 60 * 1000).toLocaleDateString()}\n                    </span>\n                  )}\n                </div>\n\n                {order.trackingNumber && (\n                  <div className=\"flex justify-between items-center mt-2\">\n                    <div className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                      <span className=\"font-medium\">{order.carrier || 'other'}</span> Tracking: \n                      <span className=\"ml-1 font-medium\">{order.trackingNumber}</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      {order.status === 'shipped' && !order.deliveryConfirmedByBuyer && (\n                        <button\n                          onClick={() => {\n                            setSelectedOrderForDelivery(order.id);\n                            setIsDeliveryModalOpen(true);\n                          }}\n                          className=\"px-3 py-1 text-sm font-medium rounded-full bg-green-100 text-green-800 hover:bg-green-200 transition-colors\"\n                        >\n                          Confirm Delivery\n                        </button>\n                      )}\n                      <button\n                        onClick={() => handleTrackingClick(order)}\n                        className=\"px-3 py-1 text-sm font-medium rounded-full bg-blue-100 text-blue-800 hover:bg-blue-200 transition-colors\"\n                      >\n                        Track Package\n                      </button>\n                      {order.shippingStatus === 'in_transit' ? (\n                        <div className=\"flex items-center gap-1 text-blue-600\">\n                          <FaPlaneDeparture className=\"text-base\" />\n                          <span className=\"font-medium\">In Transit</span>\n                        </div>\n                      ) : order.deliveryConfirmedByBuyer ? (\n                        <div className=\"flex items-center gap-1 text-green-600\">\n                          <FaCheckCircle className=\"text-base\" />\n                          <span className=\"font-medium\">Delivered</span>\n                        </div>\n                      ) : (\n                        <div className=\"flex items-center gap-1 text-gray-600\">\n                          <FaBox className=\"text-base\" />\n                          <span className=\"font-medium\">Processing</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Add Refund Button */}\n              <div className={`flex justify-end mt-3 pt-3 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n                <button\n                  onClick={() => {\n                    setSelectedOrder(order);\n                    setIsRefundModalOpen(true);\n                  }}\n                  className=\"px-4 py-2 text-sm font-medium text-[#FF1B6B] hover:text-[#D4145A] transition-colors\"\n                >\n                  Request Refund\n                </button>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n      )}\n\n      {/* Add Modals */}\n      {selectedOrder && (\n        <RefundRequestModal\n          isOpen={isRefundModalOpen}\n          onClose={() => {\n            setIsRefundModalOpen(false);\n            setSelectedOrder(null);\n          }}\n          order={selectedOrder}\n        />\n      )}\n\n      <DeliveryConfirmationModal\n        isOpen={isDeliveryModalOpen}\n        onClose={() => setIsDeliveryModalOpen(false)}\n        onConfirm={confirmDelivery}\n        orderId={selectedOrderForDelivery}\n      />\n\n      {selectedTracking && (\n        <TrackingModal\n          isOpen={isTrackingModalOpen}\n          onClose={() => {\n            setIsTrackingModalOpen(false);\n            setSelectedTracking(null);\n          }}\n          trackingNumber={selectedTracking.trackingNumber}\n          carrier={selectedTracking.carrier}\n        />\n      )}\n\n      {selectedItemForReview && (\n        <ReviewModal\n          isOpen={isReviewModalOpen}\n          onClose={() => {\n            setIsReviewModalOpen(false);\n            setSelectedItemForReview(null);\n          }}\n          order={selectedOrder}\n          item={selectedItemForReview}\n        />\n      )}\n    </motion.div>\n  );\n};\n\nexport default Orders; ","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\nimport { BiWallet, BiCreditCard, BiNetworkChart, BiX } from 'react-icons/bi';\nimport { FaEthereum } from 'react-icons/fa';\nimport { SiTether } from 'react-icons/si';\nimport { collection, query, where, getDocs, doc, getDoc, addDoc, deleteDoc, serverTimestamp, setDoc, updateDoc, Timestamp } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { toast } from 'react-hot-toast';\nimport { ethers } from 'ethers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { getMerchPlatformContract, getTokenContract, parseTokenAmount, NETWORK_NAMES, SUPPORTED_TOKENS } from '../../contracts/MerchPlatform';\n\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst itemVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: {\n    opacity: 1,\n    y: 0\n  }\n};\n\nconst Checkout = () => {\n  const navigate = useNavigate();\n  const { user } = useMerchAuth();\n  const { isDarkMode } = useTheme();\n  const [cartItems, setCartItems] = useState([]);\n  const [buyerProfile, setBuyerProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [selectedToken, setSelectedToken] = useState('');\n  const [chainId, setChainId] = useState(null);\n  const [orderSummary, setOrderSummary] = useState({\n    subtotal: 0,\n    shippingTotal: 0,\n    total: 0\n  });\n  const [tokenBalance, setTokenBalance] = useState('0');\n  const [transactionStatus, setTransactionStatus] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch cart items\n        const cartQuery = query(\n          collection(db, 'cart'),\n          where('userId', '==', user.uid)\n        );\n        const cartSnapshot = await getDocs(cartQuery);\n        const items = [];\n        let subtotal = 0;\n        let shippingTotal = 0;\n\n        for (const cartDoc of cartSnapshot.docs) {\n          const cartItem = cartDoc.data();\n          const productDoc = await getDoc(doc(db, 'products', cartItem.productId));\n          \n          if (productDoc.exists()) {\n            const product = productDoc.data();\n            const isDiscountValid = product.hasDiscount && new Date() < new Date(product.discountEndsAt);\n            const price = isDiscountValid ? product.discountedPrice : product.price;\n            \n            items.push({\n              id: cartDoc.id,\n              ...cartItem,\n              product: {\n                id: cartItem.productId,\n                ...product\n              }\n            });\n\n            subtotal += price * cartItem.quantity;\n            shippingTotal += (product.shippingFee || 0);\n          }\n        }\n\n        setCartItems(items);\n        setOrderSummary({\n          subtotal,\n          shippingTotal,\n          total: subtotal + shippingTotal\n        });\n\n        // Set chainId from the first product's network\n        if (items.length > 0) {\n          const networkId = items[0].product.network === 'unichain' ? 1301 : \n                          items[0].product.network === 'polygon' ? 137 : \n                          Number(items[0].product.network);\n          setChainId(networkId);\n          setSelectedToken(items[0].product.acceptedToken);\n          \n          // Immediately try to switch to the correct network\n          if (window.ethereum && window.ethereum.networkVersion !== networkId.toString()) {\n            try {\n              if (networkId === 1301) {\n                await window.ethereum.request({\n                  method: 'wallet_switchEthereumChain',\n                  params: [{ chainId: '0x515' }],\n                }).catch(async () => {\n                  await window.ethereum.request({\n                    method: 'wallet_addEthereumChain',\n                    params: [{\n                      chainId: '0x515',\n                      chainName: 'Unichain Testnet',\n                      nativeCurrency: {\n                        name: 'UNW',\n                        symbol: 'UNW',\n                        decimals: 18\n                      },\n                      rpcUrls: [import.meta.env.VITE_UNICHAIN_RPC_URL],\n                      blockExplorerUrls: [import.meta.env.VITE_UNICHAIN_EXPLORER_URL]\n                    }]\n                  });\n                });\n              } else {\n                await window.ethereum.request({\n                  method: 'wallet_switchEthereumChain',\n                  params: [{ chainId: '0x89' }],\n                }).catch(async () => {\n                  await window.ethereum.request({\n                    method: 'wallet_addEthereumChain',\n                    params: [{\n                      chainId: '0x89',\n                      chainName: 'Polygon Mainnet',\n                      nativeCurrency: {\n                        name: 'MATIC',\n                        symbol: 'MATIC',\n                        decimals: 18\n                      },\n                      rpcUrls: ['https://polygon-rpc.com/'],\n                      blockExplorerUrls: ['https://polygonscan.com/']\n                    }]\n                  });\n                });\n              }\n            } catch (error) {\n              // Silently handle network switching errors\n            }\n          }\n        }\n\n        // Fetch buyer profile\n        const userDoc = await getDoc(doc(db, 'users', user.uid));\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          \n          // Check if we have a complete shipping address\n          const hasCompleteAddress = userData.shippingAddress && \n            userData.shippingAddress.street && \n            userData.shippingAddress.city && \n            userData.shippingAddress.state && \n            userData.shippingAddress.postalCode && \n            userData.shippingAddress.country;\n\n          // If we have a complete address but no flag, add the flag\n          if (hasCompleteAddress && !userData.flag && userData.shippingAddress?.country) {\n            try {\n              // Handle country whether it's a string or object\n              const countryValue = typeof userData.shippingAddress.country === 'object' \n                ? userData.shippingAddress.country.code \n                : userData.shippingAddress.country;\n              \n              // Get country code and ensure it's a string and properly formatted\n              const country = String(countryValue);\n              // Some countries might have spaces or special characters, so we clean it\n              const countryCode = country.trim().toLowerCase().split(' ')[0].slice(0, 2);\n              \n              if (countryCode) {\n                const flagUrl = `https://flagcdn.com/${countryCode}.svg`;\n                await updateDoc(doc(db, 'users', user.uid), {\n                  flag: flagUrl\n                });\n                userData.flag = flagUrl;\n              }\n            } catch (error) {\n              console.error('Error setting flag URL:', error);\n              // Don't throw the error, just log it and continue\n            }\n          }\n\n          setBuyerProfile({\n            ...userData,\n            hasCompleteAddress\n          });\n\n          // Set wallet connection status based on profile\n          if (userData.walletAddress) {\n            setWalletConnected(true);\n            setWalletAddress(userData.walletAddress);\n          }\n        }\n\n        setLoading(false);\n      } catch (error) {\n        console.error('Error loading checkout data:', error);\n        toast.error('Failed to load checkout data');\n        setLoading(false);\n      }\n    };\n\n    if (user) {\n      fetchData();\n    }\n  }, [user]);\n\n  const handleConnectWallet = async () => {\n    try {\n      const provider = await detectEthereumProvider();\n      if (!provider) {\n        toast.error('Please install MetaMask to connect your wallet');\n        return;\n      }\n\n      // Automatically switch to the correct network without prompting\n      if (window.ethereum.networkVersion !== chainId.toString()) {\n        if (chainId === 1301) {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainId: '0x515',\n              chainName: 'Unichain Testnet',\n              nativeCurrency: {\n                name: 'UNW',\n                symbol: 'UNW',\n                decimals: 18\n              },\n              rpcUrls: [import.meta.env.VITE_UNICHAIN_RPC_URL],\n              blockExplorerUrls: [import.meta.env.VITE_UNICHAIN_EXPLORER_URL]\n            }]\n          }).catch(async () => {\n            await window.ethereum.request({\n              method: 'wallet_switchEthereumChain',\n              params: [{ chainId: '0x515' }],\n            });\n          });\n        } else {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_switchEthereumChain',\n              params: [{ chainId: '0x89' }],\n            });\n          } catch (switchError) {\n            if (switchError.code === 4902) {\n              await window.ethereum.request({\n                method: 'wallet_addEthereumChain',\n                params: [{\n                  chainId: '0x89',\n                  chainName: 'Polygon Mainnet',\n                  nativeCurrency: {\n                    name: 'MATIC',\n                    symbol: 'MATIC',\n                    decimals: 18\n                  },\n                  rpcUrls: ['https://polygon-rpc.com/'],\n                  blockExplorerUrls: ['https://polygonscan.com/']\n                }]\n              });\n            }\n          }\n        }\n      }\n\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      \n      if (accounts.length === 0) {\n        toast.error('Please connect your wallet');\n        return;\n      }\n\n      const walletAddress = accounts[0];\n      setWalletAddress(walletAddress);\n      setWalletConnected(true);\n\n      await setDoc(doc(db, 'users', user.uid), {\n        walletAddress,\n        updatedAt: new Date()\n      }, { merge: true });\n\n      toast.success('Wallet connected successfully');\n      await checkTokenBalance();\n    } catch (error) {\n      if (error.code === 4001) {\n        toast.error('You rejected the connection request');\n      } else {\n        toast.error('Failed to connect wallet');\n      }\n    }\n  };\n\n  const checkTokenBalance = async () => {\n    try {\n      if (!walletAddress || !selectedToken || !chainId) return;\n\n      if (window.ethereum.networkVersion !== chainId.toString()) {\n        if (chainId === 1301) {\n          await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: '0x515' }],\n          }).catch(async () => {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [{\n                chainId: '0x515',\n                chainName: 'Unichain Testnet',\n                nativeCurrency: {\n                  name: 'UNW',\n                  symbol: 'UNW',\n                  decimals: 18\n                },\n                rpcUrls: [import.meta.env.VITE_UNICHAIN_RPC_URL],\n                blockExplorerUrls: [import.meta.env.VITE_UNICHAIN_EXPLORER_URL]\n              }]\n            });\n          });\n        } else {\n          await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: '0x89' }],\n          }).catch(async () => {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [{\n                chainId: '0x89',\n                chainName: 'Polygon Mainnet',\n                nativeCurrency: {\n                  name: 'MATIC',\n                  symbol: 'MATIC',\n                  decimals: 18\n                },\n                rpcUrls: ['https://polygon-rpc.com/'],\n                blockExplorerUrls: ['https://polygonscan.com/']\n              }]\n            });\n          });\n        }\n      }\n\n      const tokenAddress = SUPPORTED_TOKENS[chainId]?.[selectedToken];\n      if (!tokenAddress) return;\n\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const tokenContract = getTokenContract(provider, chainId, selectedToken);\n      const balance = await tokenContract.balanceOf(walletAddress);\n      setTokenBalance(ethers.formatUnits(balance, 6));\n    } catch (error) {\n      setTokenBalance('0');\n    }\n  };\n\n  useEffect(() => {\n    if (walletConnected && selectedToken && chainId && walletAddress) {\n      checkTokenBalance();\n    }\n  }, [walletConnected, selectedToken, chainId, walletAddress]);\n\n  const handlePlaceOrder = async () => {\n    // Check for complete shipping address first\n    if (!buyerProfile?.shippingAddress ||\n        !buyerProfile?.shippingAddress?.street ||\n        !buyerProfile?.shippingAddress?.city ||\n        !buyerProfile?.shippingAddress?.state ||\n        !buyerProfile?.shippingAddress?.postalCode ||\n        !buyerProfile?.shippingAddress?.country) {\n      toast.error('Please add a complete shipping address in your profile settings');\n      navigate('/merch-store/settings');\n      return;\n    }\n\n    if (!walletConnected) {\n      toast.error('Please connect your wallet in your profile settings first');\n      navigate('/merch-store/settings');\n      return;\n    }\n\n    if (cartItems.length === 0) {\n      toast.error('Your cart is empty');\n      return;\n    }\n\n    // Check if balance is sufficient\n    if (parseFloat(tokenBalance) < orderSummary.total) {\n      toast.error(`Insufficient ${selectedToken} balance`);\n      return;\n    }\n\n    setIsProcessing(true);\n    const loadingToast = toast.loading('Processing your order...');\n\n    try {\n      // Switch to the correct network if needed\n      if (window.ethereum.networkVersion !== chainId.toString()) {\n        setTransactionStatus('Switching network...');\n        try {\n          await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: `0x${Number(chainId).toString(16)}` }],\n          });\n        } catch (error) {\n          toast.dismiss(loadingToast);\n          toast.error(`Please switch to ${NETWORK_NAMES[chainId]} network in MetaMask`);\n          setIsProcessing(false);\n          return;\n        }\n      }\n\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      // Get contracts\n      const merchPlatform = getMerchPlatformContract(signer, chainId);\n      const tokenContract = getTokenContract(signer, chainId, selectedToken);\n\n      // Verify contract addresses\n      if (!merchPlatform.address || !tokenContract.address) {\n        throw new Error('Invalid contract addresses');\n      }\n\n      // Calculate total amount in smallest token unit (e.g., wei)\n      const totalAmount = ethers.parseUnits(\n        // Round to 6 decimal places and ensure we don't exceed the approved amount\n        orderSummary.total.toFixed(6),\n        6 // USDT/USDC use 6 decimals\n      );\n\n      // Check current allowance\n      setTransactionStatus('Checking token approval...');\n      const currentAllowance = await tokenContract.allowance(walletAddress, merchPlatform.address);\n      \n      // If current allowance is less than total amount, request approval\n      if (currentAllowance < totalAmount) {\n        setTransactionStatus('Approving token spending...');\n        // Add a small buffer to the approval amount to account for rounding\n        // For discounted prices, we still add the 0.01 buffer to ensure sufficient allowance\n        const approvalBuffer = ethers.parseUnits('0.01', 6); // 0.01 USDT buffer\n        const approvalAmount = totalAmount + approvalBuffer;\n        \n        // Log the amounts for debugging\n        console.log('Total Amount:', ethers.formatUnits(totalAmount, 6));\n        console.log('Approval Amount with buffer:', ethers.formatUnits(approvalAmount, 6));\n        \n        const approveTx = await tokenContract.approve(merchPlatform.address, approvalAmount);\n        await approveTx.wait();\n      }\n\n      // Create order on-chain for each seller\n      const sellerOrders = {};\n      \n      // First, fetch all seller wallets\n      const sellerPromises = cartItems.map(async item => {\n        const sellerId = item.product.sellerId;\n        if (!sellerOrders[sellerId]) {\n          // Fetch seller data from Firestore\n          const sellerDoc = await getDoc(doc(db, 'sellers', sellerId));\n          if (!sellerDoc.exists()) {\n            throw new Error(`Seller ${sellerId} not found`);\n          }\n          const sellerData = sellerDoc.data();\n          if (!sellerData.walletAddress) {\n            throw new Error(`Seller ${sellerId} has no wallet connected`);\n          }\n          const sellerWallet = ethers.getAddress(sellerData.walletAddress); // Ensure proper address format\n          sellerOrders[sellerId] = {\n            seller: sellerWallet,\n            amount: 0,\n            items: []\n          };\n        }\n        return sellerId;\n      });\n\n      // Wait for all seller data to be fetched\n      await Promise.all(sellerPromises);\n\n      // Now group items by seller\n      cartItems.forEach(item => {\n        const sellerId = item.product.sellerId;\n        // Check if discount is valid and use discounted price if applicable\n        const isDiscountValid = item.product.hasDiscount && new Date() < new Date(item.product.discountEndsAt);\n        const price = isDiscountValid ? item.product.discountedPrice : item.product.price;\n        const itemTotal = (price * item.quantity) + (item.product.shippingFee || 0);\n        sellerOrders[sellerId].amount += itemTotal;\n        sellerOrders[sellerId].items.push(item);\n      });\n\n      // Process each seller's order\n      let orderCount = 0;\n      for (const [sellerId, orderData] of Object.entries(sellerOrders)) {\n        orderCount++;\n        setTransactionStatus(`Processing order ${orderCount}/${Object.keys(sellerOrders).length}...`);\n        \n        // The contract will deduct the platform fee from this amount, so we send the full amount\n        // Add extra buffer to each seller's amount to handle any rounding\n        const amount = ethers.parseUnits(orderData.amount.toFixed(6), 6);\n        \n        // Log the order amount for debugging\n        console.log('Seller order amount:', ethers.formatUnits(amount, 6));\n        \n        const createOrderTx = await merchPlatform.createOrder(\n          orderData.seller,\n          tokenContract.address,\n          amount\n        );\n        const receipt = await createOrderTx.wait();\n        console.log('Transaction receipt:', receipt);\n\n        // Look for OrderCreated event\n        const event = receipt.logs.find(log => {\n          try {\n            const parsedLog = merchPlatform.interface.parseLog(log);\n            console.log('Parsed log:', parsedLog);\n            return parsedLog.name === 'OrderCreated';\n          } catch (e) {\n            return false;\n          }\n        });\n\n        if (!event) {\n          console.error('OrderCreated event not found in logs');\n          console.log('All logs:', receipt.logs);\n          throw new Error('Failed to get order ID from transaction');\n        }\n\n        // Parse the event data\n        const parsedEvent = merchPlatform.interface.parseLog(event);\n        console.log('Parsed OrderCreated event:', parsedEvent);\n        \n        // The orderId is the first indexed parameter\n        const numericOrderId = parsedEvent.args.orderId.toString();\n        console.log('Order ID from event:', numericOrderId);\n\n        setTransactionStatus('Saving order details...');\n\n        // Update product quantities\n        const updateQuantityPromises = orderData.items.map(async (item) => {\n          const productRef = doc(db, 'products', item.product.id);\n          const productDoc = await getDoc(productRef);\n          if (productDoc.exists()) {\n            const currentQuantity = productDoc.data().quantity;\n            const newQuantity = Math.max(0, currentQuantity - item.quantity);\n            await updateDoc(productRef, { quantity: newQuantity });\n          }\n        });\n        await Promise.all(updateQuantityPromises);\n\n        // Create Firebase order for THIS seller only\n        const orderRef = await addDoc(collection(db, 'orders'), {\n          numericOrderId, // Store the numeric order ID from the contract\n          buyerId: user.uid,\n          sellerId: sellerId,\n          sellerName: orderData.items[0].product.sellerName,\n          items: orderData.items.map(item => ({\n            productId: item.product.id,\n            name: item.product.name,\n            image: item.product.images[0],\n            quantity: item.quantity,\n            price: item.product.price,\n            shippingFee: item.product.shippingFee || 0,\n            size: item.size || null,\n            color: item.color || null\n          })),\n          status: 'processing',\n          paymentStatus: 'completed',\n          paymentMethod: {\n            type: 'crypto',\n            token: selectedToken,\n            network: chainId,\n            buyerWallet: walletAddress\n          },\n          buyerInfo: {\n            name: buyerProfile.name,\n            email: buyerProfile.email,\n            phone: buyerProfile.phoneNumber || null\n          },\n          flag: typeof buyerProfile.shippingAddress.country === 'object' && buyerProfile.shippingAddress.country.code\n            ? `https://flagcdn.com/${buyerProfile.shippingAddress.country.code.toLowerCase()}.svg`\n            : null,\n          shippingAddress: buyerProfile.shippingAddress,\n          subtotal: orderData.amount,\n          total: orderData.amount,\n          createdAt: serverTimestamp(),\n          shippingConfirmed: false,\n          shippingConfirmedAt: null,\n          fundsAvailable: false,\n          fundsAvailableAt: null,\n          shippingDeadline: Timestamp.fromMillis(Date.now() + (72 * 60 * 60 * 1000)), // 72 hours (3 days)\n          fundsReleaseDate: Timestamp.fromMillis(Date.now() + (15 * 24 * 60 * 60 * 1000)), // 15 days\n        });\n      }\n\n      // Clear cart\n      const deletePromises = cartItems.map(item => \n        deleteDoc(doc(db, 'cart', item.id))\n      );\n      await Promise.all(deletePromises);\n\n      toast.dismiss(loadingToast);\n      toast.success('Order placed successfully!');\n      navigate(`/merch-store/orders`);\n    } catch (error) {\n      toast.dismiss(loadingToast);\n      toast.error(error.message || 'Failed to place order. Please try again.');\n    } finally {\n      setIsProcessing(false);\n      setTransactionStatus('');\n    }\n  };\n\n  // Update the shipping address check in the render section\n  const hasValidShippingAddress = buyerProfile?.hasCompleteAddress;\n\n  // Update the place order button disabled condition\n  const isOrderButtonDisabled = \n    !walletConnected || \n    cartItems.length === 0 || \n    !hasValidShippingAddress ||\n    isProcessing || \n    parseFloat(tokenBalance) < orderSummary.total;\n\n  // Update the shipping address section render\n  const renderShippingAddress = () => {\n    if (!buyerProfile?.shippingAddress) {\n      return (\n        <div className=\"space-y-4\">\n          <div className={`${isDarkMode ? 'bg-pink-900/20 border-pink-800/30' : 'bg-pink-50 border-pink-200'} border rounded-lg p-4`}>\n            <div className=\"flex items-start\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-[#FF1B6B]\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-[#FF1B6B]\">Shipping Address Required</h3>\n                <p className={`mt-1 text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                  Please add your shipping address to continue with the checkout process.\n                </p>\n              </div>\n            </div>\n          </div>\n          <button\n            onClick={() => navigate('/merch-store/settings')}\n            className=\"w-full px-4 py-3 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#D4145A] transition-colors flex items-center justify-center gap-2\"\n          >\n            <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clipRule=\"evenodd\" />\n            </svg>\n            Add Shipping Address\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"space-y-2\">\n        <p className={`${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>{buyerProfile.shippingAddress.street}</p>\n        <p className={`${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>{buyerProfile.shippingAddress.city}, {buyerProfile.shippingAddress.postalCode}</p>\n        <div className=\"flex items-center gap-2\">\n          <p className={`${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>\n            {typeof buyerProfile.shippingAddress.country === 'object' \n              ? buyerProfile.shippingAddress.country.name \n              : buyerProfile.shippingAddress.country}\n          </p>\n          {typeof buyerProfile.shippingAddress.country === 'object' && buyerProfile.shippingAddress.country.code && (\n            <img \n              src={`https://flagcdn.com/w20/${buyerProfile.shippingAddress.country.code.toLowerCase()}.png`}\n              alt={buyerProfile.shippingAddress.country.name}\n              className=\"w-5 h-auto\"\n            />\n          )}\n        </div>\n        <button\n          onClick={() => navigate('/merch-store/settings')}\n          className=\"text-[#FF1B6B] hover:text-[#D4145A] transition-colors mt-2\"\n        >\n          Edit Address\n        </button>\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-[#FFF5F7]'} flex items-center justify-center`}>\n        <motion.div\n          animate={{\n            scale: [1, 1.2, 1],\n            opacity: [1, 0.8, 1],\n          }}\n          transition={{\n            duration: 1,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n          className=\"w-12 h-12 rounded-full border-4 border-[#FF1B6B] border-t-transparent\"\n        />\n      </div>\n    );\n  }\n\n  return (\n    <motion.div\n      variants={containerVariants}\n      initial=\"hidden\"\n      animate=\"visible\"\n      className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-[#FFF5F7]'} p-4 md:p-8`}\n    >\n      <div className=\"max-w-6xl mx-auto\">\n        <motion.h1\n          variants={itemVariants}\n          className={`text-3xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-8`}\n        >\n          Checkout\n        </motion.h1>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Order Summary */}\n          <motion.div\n            variants={itemVariants}\n            className=\"lg:col-span-2 space-y-6\"\n          >\n            <motion.div variants={itemVariants} className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg p-6`}>\n              <h2 className={`font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} mb-4`}>Order Summary</h2>\n              {cartItems.map((item) => (\n                <div key={item.id} className={`flex items-start space-x-4 mb-4 pb-4 ${isDarkMode ? 'border-gray-700' : 'border-b'} last:border-b-0`}>\n                  <img\n                    src={item.product.images[0]}\n                    alt={item.product.name}\n                    className=\"w-20 h-20 object-cover rounded-lg\"\n                  />\n                  <div className=\"flex-1 flex justify-between\">\n                    <div>\n                      <h3 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>{item.product.name}</h3>\n                      <div className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'} mt-1`}>\n                        <p>Quantity: {item.quantity}</p>\n                        {item.size && <p>Size: {item.size}</p>}\n                        {item.color && (\n                          <div className=\"flex items-center gap-2 mt-1\">\n                            <span>Color:</span>\n                            <span className=\"flex items-center gap-1\">\n                              <span\n                                className=\"w-4 h-4 rounded-full border border-gray-300\"\n                                style={{ \n                                  backgroundColor: item.color.toLowerCase(),\n                                  borderColor: item.color.toLowerCase() === '#ffffff' ? '#e5e7eb' : 'transparent'\n                                }}\n                              />\n                              {item.color}\n                            </span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      {item.product.hasDiscount && new Date() < new Date(item.product.discountEndsAt) ? (\n                        <>\n                          <p className={`${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>\n                            ${(item.product.discountedPrice * item.quantity).toFixed(2)}\n                            <span className={`text-sm ${isDarkMode ? 'text-gray-500' : 'text-gray-400'} line-through ml-1`}>\n                              ${(item.product.price * item.quantity).toFixed(2)}\n                            </span>\n                          </p>\n                        </>\n                      ) : (\n                        <p className={`${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>${(item.product.price * item.quantity).toFixed(2)}</p>\n                      )}\n                      {item.product.shippingFee > 0 && (\n                        <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>+ ${item.product.shippingFee.toFixed(2)} shipping</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n              <div className={`${isDarkMode ? 'border-gray-700' : 'border-t'} pt-4 mt-4 space-y-2`}>\n                <div className=\"flex justify-between\">\n                  <span className={`${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>Subtotal</span>\n                  <span className={`${isDarkMode ? 'text-gray-100' : 'text-gray-600'}`}>${orderSummary.subtotal.toFixed(2)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className={`${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>Shipping</span>\n                  <span className={`${isDarkMode ? 'text-gray-100' : 'text-gray-600'}`}>${orderSummary.shippingTotal.toFixed(2)}</span>\n                </div>\n                <div className={`flex justify-between font-bold ${isDarkMode ? 'text-gray-100 border-gray-700' : 'text-gray-800 border-t'} pt-2`}>\n                  <span>Total</span>\n                  <span>${orderSummary.total.toFixed(2)}</span>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Shipping Address */}\n            <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm p-6`}>\n              <h2 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>\n                Shipping Address\n              </h2>\n              {renderShippingAddress()}\n            </div>\n          </motion.div>\n\n          {/* Payment Section */}\n          <motion.div\n            variants={itemVariants}\n            className=\"lg:col-span-1 space-y-4\"\n          >\n            {/* Connect Wallet */}\n            <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm p-4 max-w-sm mx-auto`}>\n              <h2 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>\n                Payment Method\n              </h2>\n              {!walletConnected ? (\n                <div className=\"space-y-4\">\n                  <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>Please connect your wallet in your profile settings first.</p>\n                  <button\n                    onClick={() => navigate('/merch-store/settings')}\n                    className=\"w-full flex items-center justify-center gap-2 px-4 py-3 rounded-lg bg-[#FF1B6B] text-white hover:bg-[#D4145A] transition-colors\"\n                  >\n                    <BiWallet className=\"w-5 h-5\" />\n                    <span>Go to Settings</span>\n                  </button>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  <div className={`flex items-center justify-between p-3 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'} rounded-lg`}>\n                    <div className=\"flex items-center gap-2\">\n                      <BiWallet className={`w-5 h-5 ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`} />\n                      <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                        {walletAddress.slice(0, 6)}...{walletAddress.slice(-4)}\n                      </span>\n                    </div>\n                    <button\n                      onClick={() => navigate('/merch-store/settings')}\n                      className=\"text-sm text-[#FF1B6B] hover:text-[#D4145A]\"\n                    >\n                      Change in Settings\n                    </button>\n                  </div>\n\n                  {/* Network Information */}\n                  <div className={`p-3 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'} rounded-lg`}>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <BiNetworkChart className={`w-5 h-5 ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`} />\n                        <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>Network Required:</span>\n                      </div>\n                      <span className={`text-sm font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>\n                        {NETWORK_NAMES[chainId]}\n                      </span>\n                    </div>\n                  </div>\n\n                  {/* Token Balance */}\n                  <div className=\"space-y-2\">\n                    <p className={`text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                      Payment Token\n                    </p>\n                    <div className={`p-3 rounded-lg border-2 border-[#FF1B6B] ${isDarkMode ? 'bg-pink-900/20' : 'bg-pink-50'}`}>\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          <img \n                            src={cartItems[0]?.product?.tokenLogo} \n                            alt={selectedToken}\n                            className=\"w-5 h-5\"\n                          />\n                          <span className={`${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>{selectedToken}</span>\n                        </div>\n                        <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                          Balance: {parseFloat(tokenBalance).toFixed(2)} {selectedToken}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Transaction Status */}\n                  {transactionStatus && (\n                    <div className={`mt-4 p-3 ${isDarkMode ? 'bg-blue-900/20' : 'bg-blue-50'} rounded-lg`}>\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-blue-500 border-t-transparent\" />\n                        <span className={`text-sm ${isDarkMode ? 'text-blue-300' : 'text-blue-600'}`}>{transactionStatus}</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* Order Total */}\n            <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm p-4 max-w-sm mx-auto`}>\n              <h2 className={`text-lg font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'} mb-4`}>\n                Order Summary\n              </h2>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className={`${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>Subtotal</span>\n                  <div className=\"flex items-center gap-1\">\n                    <img\n                      src={cartItems[0]?.product?.tokenLogo} \n                      alt={selectedToken}\n                      className=\"w-4 h-4\"\n                    />\n                    <span className={`${isDarkMode ? 'text-gray-100' : 'text-gray-600'}`}>${orderSummary.subtotal.toFixed(2)}</span>\n                  </div>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className={`${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>Shipping</span>\n                  <div className=\"flex items-center gap-1\">\n                    <img\n                      src={cartItems[0]?.product?.tokenLogo} \n                      alt={selectedToken}\n                      className=\"w-4 h-4\"\n                    />\n                    <span className={`${isDarkMode ? 'text-gray-100' : 'text-gray-600'}`}>${orderSummary.shippingTotal.toFixed(2)}</span>\n                  </div>\n                </div>\n                <div className={`h-px ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} my-2`} />\n                <div className=\"flex justify-between font-medium\">\n                  <span className={`${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Total</span>\n                  <div className=\"flex items-center gap-1\">\n                    <img \n                      src={cartItems[0]?.product?.tokenLogo} \n                      alt={selectedToken}\n                      className=\"w-4 h-4\"\n                    />\n                    <span className={`${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>${orderSummary.total.toFixed(2)}</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Error Messages */}\n              {!isProcessing && (\n                <>\n                  {!walletConnected && (\n                    <div className={`mt-4 p-3 ${isDarkMode ? 'bg-pink-900/20 border-pink-800/30' : 'bg-pink-50 border-pink-200'} border rounded-lg`}>\n                      <div className=\"flex items-start gap-2\">\n                        <svg className=\"h-5 w-5 text-[#FF1B6B] mt-0.5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                        </svg>\n                        <div>\n                          <p className=\"text-sm font-medium text-[#FF1B6B]\">Wallet Not Connected</p>\n                          <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'} mt-1`}>Please connect your wallet in settings to enable order placement.</p>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {walletConnected && !hasValidShippingAddress && (\n                    <div className={`mt-4 p-3 ${isDarkMode ? 'bg-pink-900/20 border-pink-800/30' : 'bg-pink-50 border-pink-200'} border rounded-lg`}>\n                      <div className=\"flex items-start gap-2\">\n                        <svg className=\"h-5 w-5 text-[#FF1B6B] mt-0.5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                        </svg>\n                        <div>\n                          <p className=\"text-sm font-medium text-[#FF1B6B]\">Shipping Address Required</p>\n                          <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'} mt-1`}>Please add your shipping address in settings to enable order placement.</p>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {walletConnected && hasValidShippingAddress && parseFloat(tokenBalance) < orderSummary.total && (\n                    <div className={`mt-4 p-3 ${isDarkMode ? 'bg-pink-900/20 border-pink-800/30' : 'bg-pink-50 border-pink-200'} border rounded-lg`}>\n                      <div className=\"flex items-start gap-2\">\n                        <svg className=\"h-5 w-5 text-[#FF1B6B] mt-0.5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                        </svg>\n                        <div>\n                          <p className=\"text-sm font-medium text-[#FF1B6B]\">Insufficient Balance</p>\n                          <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'} mt-1`}>Your {selectedToken} balance is too low to complete this purchase.</p>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {walletConnected && hasValidShippingAddress && cartItems.length === 0 && (\n                    <div className={`mt-4 p-3 ${isDarkMode ? 'bg-pink-900/20 border-pink-800/30' : 'bg-pink-50 border-pink-200'} border rounded-lg`}>\n                      <div className=\"flex items-start gap-2\">\n                        <svg className=\"h-5 w-5 text-[#FF1B6B] mt-0.5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                        </svg>\n                        <div>\n                          <p className=\"text-sm font-medium text-[#FF1B6B]\">Empty Cart</p>\n                          <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'} mt-1`}>Add items to your cart to proceed with checkout.</p>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n\n              <button\n                onClick={handlePlaceOrder}\n                disabled={isOrderButtonDisabled}\n                className={`w-full mt-6 px-4 py-3 rounded-lg text-white transition-colors ${\n                  isOrderButtonDisabled\n                    ? `${isDarkMode ? 'bg-gray-700' : 'bg-gray-300'} cursor-not-allowed`\n                    : 'bg-[#FF1B6B] hover:bg-[#D4145A] disabled:opacity-50 disabled:cursor-not-allowed'\n                }`}\n              >\n                {isProcessing ? 'Processing Order...' :\n                 !walletConnected ? 'Connect Wallet to Continue' :\n                 !hasValidShippingAddress ? 'Add Shipping Address to Continue' :\n                 parseFloat(tokenBalance) < orderSummary.total ? `Insufficient ${selectedToken} Balance` :\n                 cartItems.length === 0 ? 'Cart is Empty' :\n                 'Place Order'}\n              </button>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Checkout; ","import React, { useState, useEffect } from 'react';\r\nimport { collection, query, orderBy, limit, getDocs } from 'firebase/firestore';\r\nimport { db } from '../../firebase/merchConfig';\r\n\r\nexport default function AdminRecentWithdrawals() {\r\n  const [recentWithdrawals, setRecentWithdrawals] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchRecentWithdrawals = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const withdrawalsQuery = query(\r\n        collection(db, 'withdrawals'),\r\n        orderBy('timestamp', 'desc'),\r\n        limit(10)\r\n      );\r\n\r\n      const snapshot = await getDocs(withdrawalsQuery);\r\n      const withdrawals = snapshot.docs.map(doc => {\r\n        const data = doc.data();\r\n        return {\r\n          id: doc.id,\r\n          ...data,\r\n          timestamp: data.timestamp?.toDate?.() || null,\r\n          processedAt: data.processedAt?.toDate?.() || null\r\n        };\r\n      }).filter(Boolean);\r\n\r\n      setRecentWithdrawals(withdrawals);\r\n    } catch (err) {\r\n      console.error('Error fetching recent withdrawals:', err);\r\n      setError('Failed to fetch recent withdrawals');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRecentWithdrawals();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\r\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n          Recent Withdrawals\r\n        </h2>\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"w-8 h-8 border-4 border-[#FF1B6B] border-t-transparent rounded-full animate-spin\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\r\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n          Recent Withdrawals\r\n        </h2>\r\n        <div className=\"text-red-500 dark:text-red-400 text-center\">{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!recentWithdrawals || recentWithdrawals.length === 0) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\r\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n          Recent Withdrawals\r\n        </h2>\r\n        <div className=\"text-center text-gray-500 dark:text-gray-400\">No recent withdrawals</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\r\n      <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n        Recent Withdrawals\r\n      </h2>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n          <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n            <tr>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Date</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Amount</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Token</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Network</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Status</th>\r\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Transaction</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n            {recentWithdrawals.map((withdrawal) => (\r\n              <tr key={withdrawal.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\r\n                  {withdrawal.timestamp ? new Date(withdrawal.timestamp).toLocaleString() : 'N/A'}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\r\n                  {withdrawal.amount?.toFixed(2) || '0.00'} {withdrawal.token || 'N/A'}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\r\n                  <div className=\"flex items-center\">\r\n                    <img \r\n                      src={`/logos/${withdrawal.token?.toLowerCase() || 'usdt'}.png`}\r\n                      alt={withdrawal.token || 'Token'}\r\n                      className=\"w-5 h-5 mr-2\"\r\n                    />\r\n                    {withdrawal.token || 'N/A'}\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\r\n                  <div className=\"flex items-center\">\r\n                    <img \r\n                      src={withdrawal.network === 'unichain' ? '/unichain-logo.png' : '/polygon.png'}\r\n                      alt={withdrawal.network || 'Network'}\r\n                      className=\"w-5 h-5 mr-2\"\r\n                    />\r\n                    {withdrawal.network === 'unichain' ? 'Unichain Testnet' : 'Polygon'}\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                  <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n                    withdrawal.status === 'completed' \r\n                      ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200'\r\n                      : withdrawal.status === 'pending'\r\n                      ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200'\r\n                      : 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200'\r\n                  }`}>\r\n                    {withdrawal.status || 'N/A'}\r\n                  </span>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-300\">\r\n                  {withdrawal.transactionHash ? (\r\n                    <a \r\n                      href={`${withdrawal.network === 'unichain' \r\n                        ? 'https://unichain-sepolia.blockscout.com/tx/'\r\n                        : 'https://polygonscan.com/tx/'\r\n                      }${withdrawal.transactionHash}`}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"text-[#FF1B6B] hover:text-[#D4145A] dark:text-[#FF1B6B] dark:hover:text-[#D4145A]\"\r\n                    >\r\n                      View\r\n                    </a>\r\n                  ) : 'N/A'}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, orderBy, updateDoc, doc, getDoc, writeBatch, setDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { FiCheck, FiX, FiAlertTriangle, FiLoader } from 'react-icons/fi';\nimport { useAccount, useNetwork, useSwitchNetwork } from 'wagmi';\nimport { ethers } from 'ethers';\nimport { toast } from 'react-hot-toast';\nimport { NETWORK_NAMES } from '../../contracts/MerchPlatform';\nimport { getMerchPlatformContract } from '../../contracts/MerchPlatform';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport AdminRecentWithdrawals from './AdminRecentWithdrawals';\nimport { motion } from 'framer-motion';\n\nconst ADMIN_WALLET = \"0x5828D525fe00902AE22f2270Ac714616651894fF\";\n\n// Skeleton Components\nconst WithdrawalRequestSkeleton = () => (\n  <motion.div \n    initial={{ opacity: 0.6 }}\n    animate={{ opacity: 1 }}\n    transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n    className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 mb-4\"\n  >\n    <div className=\"flex justify-between items-start mb-4\">\n      <div className=\"flex items-center space-x-3\">\n        <div className=\"w-10 h-10 bg-gray-200 dark:bg-gray-700 rounded-full\"></div>\n        <div>\n          <div className=\"h-5 bg-gray-200 dark:bg-gray-700 rounded w-32 mb-2\"></div>\n          <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-24\"></div>\n        </div>\n      </div>\n      <div className=\"flex space-x-2\">\n        <div className=\"h-8 w-24 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n        <div className=\"h-8 w-20 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n      </div>\n    </div>\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n      <div className=\"space-y-2\">\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4\"></div>\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\n      </div>\n      <div className=\"space-y-2\">\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-full\"></div>\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-2/3\"></div>\n      </div>\n      <div className=\"space-y-2\">\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4\"></div>\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\n      </div>\n    </div>\n  </motion.div>\n);\n\nconst PlatformFeeSkeleton = () => (\n  <motion.div \n    initial={{ opacity: 0.6 }}\n    animate={{ opacity: 1 }}\n    transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n    className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 mb-8\"\n  >\n    <div className=\"h-6 bg-gray-200 dark:bg-gray-700 rounded w-48 mb-4\"></div>\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      {[...Array(2)].map((_, i) => (\n        <div key={i} className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n          <div className=\"flex items-center mb-4\">\n            <div className=\"w-6 h-6 bg-gray-200 dark:bg-gray-600 rounded-full mr-2\"></div>\n            <div className=\"h-5 bg-gray-200 dark:bg-gray-600 rounded w-32\"></div>\n          </div>\n          <div className=\"space-y-4\">\n            {[...Array(2)].map((_, j) => (\n              <div key={j} className=\"space-y-2\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-6 h-6 bg-gray-200 dark:bg-gray-600 rounded-full mr-2\"></div>\n                    <div className=\"h-4 bg-gray-200 dark:bg-gray-600 rounded w-16\"></div>\n                  </div>\n                  <div className=\"h-4 bg-gray-200 dark:bg-gray-600 rounded w-24\"></div>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"h-8 bg-gray-200 dark:bg-gray-600 rounded flex-grow\"></div>\n                  <div className=\"h-8 w-20 bg-gray-200 dark:bg-gray-600 rounded\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  </motion.div>\n);\n\n// Get token addresses from environment variables\nconst getTokenAddresses = (chainId) => {\n  if (chainId === 1301) { // Unichain\n    return {\n      USDT: import.meta.env.VITE_UNICHAIN_USDT_ADDRESS,\n      USDC: import.meta.env.VITE_UNICHAIN_USDC_ADDRESS\n    };\n  } else if (chainId === 137) { // Polygon\n    return {\n      USDT: import.meta.env.VITE_USDT_ADDRESS_POLYGON,\n      USDC: import.meta.env.VITE_USDC_ADDRESS_POLYGON\n    };\n  }\n  return null;\n};\n\nexport default function AdminWithdrawals() {\n  const [withdrawals, setWithdrawals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [processingId, setProcessingId] = useState(null);\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const { chain } = useNetwork();\n  const { switchNetwork } = useSwitchNetwork();\n  const theme = localStorage.getItem('admin-theme') || 'light';\n  const [platformFeeAmounts, setPlatformFeeAmounts] = useState({\n    unichain: {\n      USDT: { fees: '0', amount: '', loading: false, error: null },\n      USDC: { fees: '0', amount: '', loading: false, error: null }\n    },\n    polygon: {\n      USDT: { fees: '0', amount: '', loading: false, error: null },\n      USDC: { fees: '0', amount: '', loading: false, error: null }\n    }\n  });\n\n  useEffect(() => {\n    // Check if wallet is already connected\n    const checkWalletConnection = async () => {\n      try {\n        const provider = await detectEthereumProvider();\n        if (provider) {\n          const accounts = await provider.request({ method: 'eth_accounts' });\n          if (accounts.length > 0 && accounts[0].toLowerCase() === ADMIN_WALLET.toLowerCase()) {\n            setWalletAddress(accounts[0]);\n            setWalletConnected(true);\n          }\n        }\n      } catch (error) {\n        console.error('Error checking wallet connection:', error);\n      }\n    };\n\n    checkWalletConnection();\n  }, []);\n\n  useEffect(() => {\n    // Listen for account changes\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', (accounts) => {\n        if (accounts.length === 0 || accounts[0].toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n          setWalletConnected(false);\n          setWalletAddress('');\n        } else {\n          setWalletAddress(accounts[0]);\n          setWalletConnected(true);\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (walletConnected && walletAddress.toLowerCase() === ADMIN_WALLET.toLowerCase()) {\n      fetchWithdrawals();\n    } else {\n      setLoading(false);\n    }\n  }, [walletConnected, walletAddress]);\n\n  const fetchWithdrawals = async () => {\n    if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) return;\n    try {\n      const withdrawalsQuery = query(\n        collection(db, 'withdrawals'),\n        where('status', '==', 'pending'),\n        orderBy('timestamp', 'desc')\n      );\n      const snapshot = await getDocs(withdrawalsQuery);\n      \n      // Fetch all unique seller IDs\n      const sellerIds = [...new Set(snapshot.docs.map(doc => doc.data().sellerId))];\n      \n      // Fetch seller details in parallel\n      const sellerDetailsPromises = sellerIds.map(sellerId => \n        getDoc(doc(db, 'sellers', sellerId))\n      );\n      const sellerDetailsSnapshots = await Promise.all(sellerDetailsPromises);\n      \n      // Create a map of seller details\n      const sellerDetailsMap = {};\n      sellerDetailsSnapshots.forEach(sellerDoc => {\n        if (sellerDoc.exists()) {\n          sellerDetailsMap[sellerDoc.id] = sellerDoc.data();\n        }\n      });\n\n      // Map withdrawals with seller details\n      const withdrawalData = snapshot.docs.map(doc => {\n        const data = doc.data();\n        const sellerDetails = sellerDetailsMap[data.sellerId] || {};\n        return {\n          id: doc.id,\n          ...data,\n          storeName: sellerDetails.storeName || 'Unknown Store',\n          storeId: `SELL_${data.sellerId}`,\n          storeAvatar: sellerDetails.avatarUrl || null\n        };\n      });\n\n      setWithdrawals(withdrawalData);\n    } catch (error) {\n      console.error('Error fetching withdrawals:', error);\n      toast.error('Failed to fetch withdrawal requests');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleApprove = async (withdrawal) => {\n    if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n      toast.error('Please connect your admin wallet');\n      return;\n    }\n    \n    setProcessingId(withdrawal.id);\n\n    try {\n      // Get the network for this withdrawal\n      const network = withdrawal.network === 'unichain' ? '1301' : '137';\n      const chainId = Number(network);\n\n      // Only switch network if we're on a different network\n      if (chain?.id !== chainId && switchNetwork) {\n        try {\n          await switchNetwork(chainId);\n          // Wait for network switch to complete\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        } catch (error) {\n          throw new Error(`Failed to switch to ${network === '1301' ? 'Unichain' : 'Polygon'} network`);\n        }\n      }\n\n      // Get provider and signer\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      // Get contract with signer - note the order: provider first, then chainId\n      const contract = await getMerchPlatformContract(signer, chainId);\n      if (!contract) {\n        throw new Error('Could not get contract instance');\n      }\n\n      // Convert amount to proper decimals (6 for USDT/USDC)\n      const amount = ethers.parseUnits(withdrawal.amount.toString(), 6);\n      \n      // Get token address based on network and token type\n      const tokenAddress = withdrawal.token === 'USDT' \n        ? (chainId === 1301 ? import.meta.env.VITE_UNICHAIN_USDT_ADDRESS : import.meta.env.VITE_USDT_ADDRESS_POLYGON)\n        : (chainId === 1301 ? import.meta.env.VITE_UNICHAIN_USDC_ADDRESS : import.meta.env.VITE_USDC_ADDRESS_POLYGON);\n\n      // Show pending toast\n      toast.loading('Please confirm the transaction in MetaMask...', { id: 'withdrawal' });\n\n      // Approve withdrawal on-chain\n      const tx = await contract.approveWithdrawal(\n        withdrawal.walletAddress,\n        tokenAddress,\n        amount\n      );\n\n      // Update toast to show transaction is processing\n      toast.loading('Processing withdrawal...', { id: 'withdrawal' });\n\n      // Wait for transaction confirmation\n      const receipt = await tx.wait();\n\n      if (receipt.status === 1) {\n        // Update withdrawal status\n        await updateDoc(doc(db, 'withdrawals', withdrawal.id), {\n          status: 'completed',\n          completedAt: serverTimestamp(),\n          transactionHash: tx.hash\n        });\n\n        // Update seller's balance\n        const sellerRef = doc(db, 'sellers', withdrawal.sellerId);\n        const sellerDoc = await getDoc(sellerRef);\n        if (sellerDoc.exists()) {\n          const currentBalance = sellerDoc.data().balance || 0;\n          await updateDoc(sellerRef, {\n            balance: Math.max(0, currentBalance - withdrawal.amount) // Ensure balance doesn't go below 0\n          });\n        }\n\n        toast.success('Withdrawal approved successfully', { id: 'withdrawal' });\n        \n        // Refresh the withdrawals list\n        await fetchWithdrawals();\n      } else {\n        throw new Error('Transaction failed');\n      }\n    } catch (error) {\n      console.error('Error approving withdrawal:', error);\n      toast.error(\n        error.message.includes('user rejected') \n          ? 'Transaction was rejected'\n          : error.message || 'Failed to approve withdrawal',\n        { id: 'withdrawal' }\n      );\n    } finally {\n      setProcessingId(null);\n    }\n  };\n\n  const handleReject = async (withdrawalId) => {\n    if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) return;\n    try {\n      await updateDoc(doc(db, 'withdrawals', withdrawalId), {\n        status: 'rejected',\n        processedAt: new Date()\n      });\n      toast.success('Withdrawal rejected');\n      fetchWithdrawals();\n    } catch (error) {\n      console.error('Error rejecting withdrawal:', error);\n      toast.error('Failed to reject withdrawal');\n    }\n  };\n\n  const fetchPlatformFees = async () => {\n    console.log('Starting to fetch platform fees...');\n    \n    // Set loading states\n    setPlatformFeeAmounts(prev => ({\n      unichain: {\n        USDT: { ...prev.unichain.USDT, loading: true, error: null },\n        USDC: { ...prev.unichain.USDC, loading: true, error: null }\n      },\n      polygon: {\n        USDT: { ...prev.polygon.USDT, loading: true, error: null },\n        USDC: { ...prev.polygon.USDC, loading: true, error: null }\n      }\n    }));\n\n    try {\n      // Token ABI for balance checking\n      const tokenABI = [\"function balanceOf(address) view returns (uint256)\"];\n\n      // Get Unichain balances\n      console.log('Connecting to Unichain network...');\n      const unichainProvider = new ethers.JsonRpcProvider('https://sepolia.unichain.org');\n      const unichainContract = await getMerchPlatformContract(unichainProvider, '1301');\n      const unichainAddresses = getTokenAddresses(1301);\n\n      // Get Polygon balances\n      console.log('Connecting to Polygon network...');\n      const polygonProvider = new ethers.JsonRpcProvider('https://polygon-mainnet.g.alchemy.com/v2/' + import.meta.env.VITE_ALCHEMY_API_KEY);\n      const polygonContract = await getMerchPlatformContract(polygonProvider, '137');\n      const polygonAddresses = getTokenAddresses(137);\n\n      let newFeeAmounts = {\n        unichain: {\n          USDT: { amount: '', fees: '0', loading: false, error: null },\n          USDC: { amount: '', fees: '0', loading: false, error: null }\n        },\n        polygon: {\n          USDT: { amount: '', fees: '0', loading: false, error: null },\n          USDC: { amount: '', fees: '0', loading: false, error: null }\n        }\n      };\n\n      // Fetch Unichain balances\n      if (unichainContract && unichainAddresses) {\n        try {\n          // Get USDT balance\n          const unichainUSDTContract = new ethers.Contract(\n            unichainAddresses.USDT,\n            tokenABI,\n            unichainProvider\n          );\n          const unichainUSDTBalance = await unichainUSDTContract.balanceOf(unichainContract.target);\n          newFeeAmounts.unichain.USDT = {\n            amount: '',\n            fees: ethers.formatUnits(unichainUSDTBalance, 6),\n            loading: false,\n            error: null\n          };\n\n          // Get USDC balance\n          const unichainUSDCContract = new ethers.Contract(\n            unichainAddresses.USDC,\n            tokenABI,\n            unichainProvider\n          );\n          const unichainUSDCBalance = await unichainUSDCContract.balanceOf(unichainContract.target);\n          newFeeAmounts.unichain.USDC = {\n            amount: '',\n            fees: ethers.formatUnits(unichainUSDCBalance, 6),\n            loading: false,\n            error: null\n          };\n        } catch (error) {\n          console.error('Error fetching Unichain balances:', error);\n          newFeeAmounts.unichain.USDT.error = 'Failed to fetch balance';\n          newFeeAmounts.unichain.USDC.error = 'Failed to fetch balance';\n        }\n      }\n\n      // Fetch Polygon balances\n      if (polygonContract && polygonAddresses) {\n        try {\n          // Get USDT balance\n          const polygonUSDTContract = new ethers.Contract(\n            polygonAddresses.USDT,\n            tokenABI,\n            polygonProvider\n          );\n          const polygonUSDTBalance = await polygonUSDTContract.balanceOf(polygonContract.target);\n          newFeeAmounts.polygon.USDT = {\n            amount: '',\n            fees: ethers.formatUnits(polygonUSDTBalance, 6),\n            loading: false,\n            error: null\n          };\n\n          // Get USDC balance\n          const polygonUSDCContract = new ethers.Contract(\n            polygonAddresses.USDC,\n            tokenABI,\n            polygonProvider\n          );\n          const polygonUSDCBalance = await polygonUSDCContract.balanceOf(polygonContract.target);\n          newFeeAmounts.polygon.USDC = {\n            amount: '',\n            fees: ethers.formatUnits(polygonUSDCBalance, 6),\n            loading: false,\n            error: null\n          };\n        } catch (error) {\n          console.error('Error fetching Polygon balances:', error);\n          newFeeAmounts.polygon.USDT.error = 'Failed to fetch balance';\n          newFeeAmounts.polygon.USDC.error = 'Failed to fetch balance';\n        }\n      }\n\n      setPlatformFeeAmounts(newFeeAmounts);\n    } catch (error) {\n      console.error('Error in fetchPlatformFees:', error);\n      toast.error('Failed to fetch platform fees');\n    }\n  };\n\n  useEffect(() => {\n    let intervalId;\n    \n    const fetchAndSetFees = async () => {\n      if (!walletConnected) return;\n      \n      try {\n        await fetchPlatformFees();\n      } catch (error) {\n        console.error('Error in fetchAndSetFees:', error);\n      }\n    };\n\n    // Initial fetch\n    fetchAndSetFees();\n\n    // Only set up interval if wallet is connected\n    if (walletConnected) {\n      intervalId = setInterval(fetchAndSetFees, 60000); // Fetch every minute instead of every 30 seconds\n    }\n\n    // Cleanup function\n    return () => {\n      if (intervalId) {\n        console.log('Clearing platform fees interval');\n        clearInterval(intervalId);\n      }\n    };\n  }, [walletConnected]); // Only re-run when wallet connection status changes\n\n  // Add a manual refresh button\n  const handleManualRefresh = () => {\n    console.log('Manually refreshing platform fees...');\n    fetchPlatformFees();\n  };\n\n  const handleAmountChange = (network, token, value) => {\n    setPlatformFeeAmounts(prev => ({\n      ...prev,\n      [network]: {\n        ...prev[network],\n        [token]: { ...prev[network][token], amount: value }\n      }\n    }));\n  };\n\n  const handleWithdrawPlatformFees = async (network, token) => {\n    if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n      toast.error('Please connect your admin wallet');\n      return;\n    }\n\n    const amount = platformFeeAmounts[network][token].amount;\n    if (!amount || parseFloat(amount) <= 0) {\n      toast.error('Please enter a valid amount');\n      return;\n    }\n\n    try {\n      // Show pending toast early to indicate processing\n      toast.loading('Preparing transaction...', { id: 'platform-fee-withdrawal' });\n\n      const chainId = network === 'unichain' ? 1301 : 137;\n      console.log('Starting withdrawal process:', { network, token, chainId, amount });\n\n      // Request account access first\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n\n      // Check if we need to switch networks\n      const currentChainId = Number(window.ethereum.networkVersion);\n      if (currentChainId !== chainId) {\n        console.log('Switching network to:', chainId);\n        try {\n          if (chainId === 137) {\n            await window.ethereum.request({\n              method: 'wallet_switchEthereumChain',\n              params: [{ chainId: '0x89' }], // 137 in hex\n            });\n          } else {\n            await window.ethereum.request({\n              method: 'wallet_switchEthereumChain',\n              params: [{ chainId: '0x515' }], // 1301 in hex\n            });\n          }\n          // Wait for network switch to complete\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        } catch (error) {\n          // Handle the case where the network needs to be added first\n          if (error.code === 4902) {\n            try {\n              if (chainId === 137) {\n                await window.ethereum.request({\n                  method: 'wallet_addEthereumChain',\n                  params: [{\n                    chainId: '0x89',\n                    chainName: 'Polygon Mainnet',\n                    nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n                    rpcUrls: ['https://polygon-rpc.com/'],\n                    blockExplorerUrls: ['https://polygonscan.com/']\n                  }]\n                });\n              } else {\n                await window.ethereum.request({\n                  method: 'wallet_addEthereumChain',\n                  params: [{\n                    chainId: '0x515',\n                    chainName: 'Unichain Testnet',\n                    nativeCurrency: { name: 'UNW', symbol: 'UNW', decimals: 18 },\n                    rpcUrls: [import.meta.env.VITE_UNICHAIN_RPC_URL],\n                    blockExplorerUrls: [import.meta.env.VITE_UNICHAIN_EXPLORER_URL]\n                  }]\n                });\n              }\n              // Wait after adding network\n              await new Promise(resolve => setTimeout(resolve, 2000));\n            } catch (addError) {\n              console.error('Failed to add network:', addError);\n              toast.error(`Failed to add ${network} network to MetaMask`, { id: 'platform-fee-withdrawal' });\n              return;\n            }\n          }\n          console.error('Network switch failed:', error);\n          toast.error(`Failed to switch to ${network} network`, { id: 'platform-fee-withdrawal' });\n          return;\n        }\n      }\n\n      // Verify we're on the correct network after switching\n      const finalChainId = Number(window.ethereum.networkVersion);\n      if (finalChainId !== chainId) {\n        toast.error(`Please switch to ${network} network in MetaMask`, { id: 'platform-fee-withdrawal' });\n        return;\n      }\n\n      console.log('Getting provider and signer...');\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      \n      console.log('Getting contract instance...');\n      const contract = await getMerchPlatformContract(signer, chainId.toString());\n      \n      if (!contract) {\n        toast.error('Could not get contract instance', { id: 'platform-fee-withdrawal' });\n        return;\n      }\n\n      // Get token addresses for the current chain\n      const tokenAddresses = getTokenAddresses(chainId);\n      if (!tokenAddresses) {\n        toast.error(`No token addresses found for chain ${chainId}`, { id: 'platform-fee-withdrawal' });\n        return;\n      }\n\n      const tokenAddress = tokenAddresses[token];\n      if (!tokenAddress) {\n        toast.error(`No address found for token ${token} on chain ${chainId}`, { id: 'platform-fee-withdrawal' });\n        return;\n      }\n\n      console.log('Contract and token details:', {\n        contractAddress: contract.target,\n        tokenAddress,\n        withdrawAmount: amount\n      });\n\n      const parsedAmount = ethers.parseUnits(amount.toString(), 6);\n\n      // Update toast before transaction\n      toast.loading('Please confirm the transaction in MetaMask...', { id: 'platform-fee-withdrawal' });\n      \n      // Call withdrawPlatformFees function with explicit gas limit\n      const tx = await contract.withdrawPlatformFees(\n        tokenAddress,\n        parsedAmount,\n        { gasLimit: 500000 } // Add explicit gas limit\n      );\n\n      console.log('Transaction submitted:', tx.hash);\n      toast.loading(`Processing platform fee withdrawal...`, { id: 'platform-fee-withdrawal' });\n\n      const receipt = await tx.wait();\n      console.log('Transaction receipt:', receipt);\n\n      if (receipt.status === 1) {\n        // Create a withdrawal record in Firestore\n        const withdrawalRef = doc(collection(db, 'withdrawals'));\n        await setDoc(withdrawalRef, {\n          id: withdrawalRef.id,\n          amount: parseFloat(amount),\n          token,\n          network,\n          status: 'completed',\n          type: 'platform_fee',\n          walletAddress: walletAddress,\n          timestamp: new Date(),\n          transactionHash: tx.hash,\n          processedAt: new Date(),\n          processedBy: walletAddress\n        });\n\n        toast.success(`Successfully withdrew ${amount} ${token}`, { id: 'platform-fee-withdrawal' });\n        \n        // Clear the input field\n        setPlatformFeeAmounts(prev => ({\n          ...prev,\n          [network]: {\n            ...prev[network],\n            [token]: {\n              ...prev[network][token],\n              amount: ''\n            }\n          }\n        }));\n\n        // Refresh platform fees\n        fetchPlatformFees();\n      } else {\n        throw new Error('Transaction failed');\n      }\n    } catch (error) {\n      console.error('Error withdrawing platform fees:', error);\n      toast.error(\n        error.message || 'Failed to withdraw platform fees',\n        { id: 'platform-fee-withdrawal' }\n      );\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6 max-w-7xl mx-auto\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <motion.div \n            initial={{ opacity: 0.6 }}\n            animate={{ opacity: 1 }}\n            transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n            className=\"h-8 bg-gray-200 dark:bg-gray-700 rounded w-48\"\n          />\n          <motion.div \n            initial={{ opacity: 0.6 }}\n            animate={{ opacity: 1 }}\n            transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n            className=\"h-10 w-32 bg-gray-200 dark:bg-gray-700 rounded\"\n          />\n        </div>\n        <PlatformFeeSkeleton />\n        {[...Array(3)].map((_, i) => (\n          <WithdrawalRequestSkeleton key={i} />\n        ))}\n      </div>\n    );\n  }\n\n  if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-[60vh] p-6\">\n        <FiAlertTriangle className=\"w-16 h-16 text-[#FF1B6B] mb-4\" />\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">Access Denied</h2>\n        <p className=\"text-gray-600 dark:text-gray-400 text-center mb-6\">\n          Please connect your admin wallet to access the withdrawals page.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Withdrawal Requests</h1>\n        <button\n          onClick={handleManualRefresh}\n          className=\"px-4 py-2 text-sm font-medium text-white bg-[#FF1B6B] rounded hover:bg-[#D4145A] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] dark:focus:ring-offset-gray-800\"\n        >\n          Refresh Balances\n        </button>\n      </div>\n      \n      {/* Platform Fee Withdrawal Section */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 mb-8\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Platform Fee Withdrawals</h2>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Unichain Network */}\n          <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n            <div className=\"flex items-center mb-4\">\n              <img src=\"/unichain-logo.png\" alt=\"Unichain\" className=\"w-6 h-6 mr-2\" />\n              <h3 className=\"text-md font-medium text-gray-900 dark:text-white\">Unichain Network</h3>\n            </div>\n            <div className=\"space-y-4\">\n              {/* USDT */}\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <img src=\"/logos/usdt.png\" alt=\"USDT\" className=\"w-6 h-6 mr-2\" />\n                    <span className=\"text-sm text-gray-700 dark:text-gray-300\">USDT</span>\n                  </div>\n                  <div className=\"text-right\">\n                    {platformFeeAmounts.unichain.USDT.loading ? (\n                      <div className=\"w-4 h-4 border-2 border-[#FF1B6B] border-t-transparent rounded-full animate-spin ml-auto\" />\n                    ) : platformFeeAmounts.unichain.USDT.error ? (\n                      <div className=\"text-sm text-red-500 dark:text-red-400\">{platformFeeAmounts.unichain.USDT.error}</div>\n                    ) : (\n                      <div className=\"text-sm text-gray-700 dark:text-gray-300\">\n                        Platform Fees: ${parseFloat(platformFeeAmounts.unichain.USDT.fees || 0).toFixed(2)}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"number\"\n                    value={platformFeeAmounts.unichain.USDT.amount}\n                    onChange={(e) => handleAmountChange('unichain', 'USDT', e.target.value)}\n                    placeholder=\"Enter amount\"\n                    className=\"block w-full px-3 py-1 text-sm rounded-md shadow-sm focus:ring-[#FF1B6B] focus:border-[#FF1B6B] bg-white dark:bg-gray-600 border-gray-300 dark:border-gray-500 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n                  />\n                  <button\n                    onClick={() => handleWithdrawPlatformFees('unichain', 'USDT')}\n                    className=\"px-3 py-1 text-sm font-medium text-white bg-[#FF1B6B] rounded hover:bg-[#D4145A] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] dark:focus:ring-offset-gray-800\"\n                  >\n                    Withdraw\n                  </button>\n                </div>\n              </div>\n              \n              {/* USDC */}\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <img src=\"/logos/usdc.png\" alt=\"USDC\" className=\"w-6 h-6 mr-2\" />\n                    <span className=\"text-sm text-gray-700 dark:text-gray-300\">USDC</span>\n                  </div>\n                  <div className=\"text-right\">\n                    {platformFeeAmounts.unichain.USDC.loading ? (\n                      <div className=\"w-4 h-4 border-2 border-[#FF1B6B] border-t-transparent rounded-full animate-spin ml-auto\" />\n                    ) : platformFeeAmounts.unichain.USDC.error ? (\n                      <div className=\"text-sm text-red-500 dark:text-red-400\">{platformFeeAmounts.unichain.USDC.error}</div>\n                    ) : (\n                      <div className=\"text-sm text-gray-700 dark:text-gray-300\">\n                        Platform Fees: ${parseFloat(platformFeeAmounts.unichain.USDC.fees || 0).toFixed(2)}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"number\"\n                    value={platformFeeAmounts.unichain.USDC.amount}\n                    onChange={(e) => handleAmountChange('unichain', 'USDC', e.target.value)}\n                    placeholder=\"Enter amount\"\n                    className=\"block w-full px-3 py-1 text-sm rounded-md shadow-sm focus:ring-[#FF1B6B] focus:border-[#FF1B6B] bg-white dark:bg-gray-600 border-gray-300 dark:border-gray-500 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n                  />\n                  <button\n                    onClick={() => handleWithdrawPlatformFees('unichain', 'USDC')}\n                    className=\"px-3 py-1 text-sm font-medium text-white bg-[#FF1B6B] rounded hover:bg-[#D4145A] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] dark:focus:ring-offset-gray-800\"\n                  >\n                    Withdraw\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Polygon Network */}\n          <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n            <div className=\"flex items-center mb-4\">\n              <img src=\"/polygon.png\" alt=\"Polygon\" className=\"w-6 h-6 mr-2\" />\n              <h3 className=\"text-md font-medium text-gray-900 dark:text-white\">Polygon Network</h3>\n            </div>\n            <div className=\"space-y-4\">\n              {/* USDT */}\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <img src=\"/logos/usdt.png\" alt=\"USDT\" className=\"w-6 h-6 mr-2\" />\n                    <span className=\"text-sm text-gray-700 dark:text-gray-300\">USDT</span>\n                  </div>\n                  <div className=\"text-right\">\n                    {platformFeeAmounts.polygon.USDT.loading ? (\n                      <div className=\"w-4 h-4 border-2 border-[#FF1B6B] border-t-transparent rounded-full animate-spin ml-auto\" />\n                    ) : platformFeeAmounts.polygon.USDT.error ? (\n                      <div className=\"text-sm text-red-500 dark:text-red-400\">{platformFeeAmounts.polygon.USDT.error}</div>\n                    ) : (\n                      <div className=\"text-sm text-gray-700 dark:text-gray-300\">\n                        Platform Fees: ${parseFloat(platformFeeAmounts.polygon.USDT.fees || 0).toFixed(2)}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"number\"\n                    value={platformFeeAmounts.polygon.USDT.amount}\n                    onChange={(e) => handleAmountChange('polygon', 'USDT', e.target.value)}\n                    placeholder=\"Enter amount\"\n                    className=\"block w-full px-3 py-1 text-sm rounded-md shadow-sm focus:ring-[#FF1B6B] focus:border-[#FF1B6B] bg-white dark:bg-gray-600 border-gray-300 dark:border-gray-500 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n                  />\n                  <button\n                    onClick={() => handleWithdrawPlatformFees('polygon', 'USDT')}\n                    className=\"px-3 py-1 text-sm font-medium text-white bg-[#FF1B6B] rounded hover:bg-[#D4145A] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] dark:focus:ring-offset-gray-800\"\n                  >\n                    Withdraw\n                  </button>\n                </div>\n              </div>\n              \n              {/* USDC */}\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <img src=\"/logos/usdc.png\" alt=\"USDC\" className=\"w-6 h-6 mr-2\" />\n                    <span className=\"text-sm text-gray-700 dark:text-gray-300\">USDC</span>\n                  </div>\n                  <div className=\"text-right\">\n                    {platformFeeAmounts.polygon.USDC.loading ? (\n                      <div className=\"w-4 h-4 border-2 border-[#FF1B6B] border-t-transparent rounded-full animate-spin ml-auto\" />\n                    ) : platformFeeAmounts.polygon.USDC.error ? (\n                      <div className=\"text-sm text-red-500 dark:text-red-400\">{platformFeeAmounts.polygon.USDC.error}</div>\n                    ) : (\n                      <div className=\"text-sm text-gray-700 dark:text-gray-300\">\n                        Platform Fees: ${parseFloat(platformFeeAmounts.polygon.USDC.fees || 0).toFixed(2)}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"number\"\n                    value={platformFeeAmounts.polygon.USDC.amount}\n                    onChange={(e) => handleAmountChange('polygon', 'USDC', e.target.value)}\n                    placeholder=\"Enter amount\"\n                    className=\"block w-full px-3 py-1 text-sm rounded-md shadow-sm focus:ring-[#FF1B6B] focus:border-[#FF1B6B] bg-white dark:bg-gray-600 border-gray-300 dark:border-gray-500 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n                  />\n                  <button\n                    onClick={() => handleWithdrawPlatformFees('polygon', 'USDC')}\n                    className=\"px-3 py-1 text-sm font-medium text-white bg-[#FF1B6B] rounded hover:bg-[#D4145A] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] dark:focus:ring-offset-gray-800\"\n                  >\n                    Withdraw\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm overflow-hidden mb-8\">\n        {withdrawals.length === 0 ? (\n          <div className=\"p-6 text-center text-gray-500 dark:text-gray-400\">\n            No pending withdrawal requests\n          </div>\n        ) : (\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead className=\"bg-gray-50 dark:bg-gray-700\">\n              <tr>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-[15%]\">Store</th>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-[10%]\">Amount</th>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-[10%]\">Token</th>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-[12%]\">Network</th>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-[18%]\">Wallet</th>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-[15%]\">Requested</th>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-[20%]\">Actions</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n              {withdrawals.map((withdrawal) => (\n                <tr key={withdrawal.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                  <td className=\"px-4 py-4 whitespace-nowrap\">\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        {withdrawal.storeName || 'Unknown Store'}\n                      </div>\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {withdrawal.storeId}\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                    ${withdrawal.amount.toFixed(2)}\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                    <div className=\"flex items-center\">\n                      <img \n                        src={`/logos/${withdrawal.token.toLowerCase()}.png`}\n                        alt={withdrawal.token}\n                        className=\"w-5 h-5 mr-2\"\n                      />\n                      {withdrawal.token}\n                    </div>\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                    <div className=\"flex items-center\">\n                      <img \n                        src={withdrawal.network === 'unichain' ? '/unichain-logo.png' : '/polygon.png'}\n                        alt={withdrawal.network === 'unichain' ? 'Unichain Testnet' : 'Polygon'}\n                        className=\"w-5 h-5 mr-2\"\n                      />\n                      {withdrawal.network === 'unichain' ? 'Unichain Testnet' : 'Polygon'}\n                    </div>\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                    <div className=\"flex items-center space-x-1\">\n                      <span className=\"truncate max-w-[120px]\">{withdrawal.walletAddress}</span>\n                      <button\n                        onClick={() => {\n                          navigator.clipboard.writeText(withdrawal.walletAddress);\n                          toast.success('Wallet address copied!');\n                        }}\n                        className=\"text-[#FF1B6B] hover:text-[#D4145A] dark:hover:text-[#FF1B6B]\"\n                      >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path d=\"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\" />\n                          <path d=\"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                    {new Date(withdrawal.timestamp?.toDate()).toLocaleString()}\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium\">\n                    {/* Rest of the actions column content stays the same */}\n                    {processingId === withdrawal.id ? (\n                      <button\n                        disabled\n                        className=\"inline-flex items-center px-3 py-1 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-[#FF1B6B] opacity-50 cursor-not-allowed\"\n                      >\n                        <FiLoader className=\"mr-1 animate-spin\" />\n                        Processing...\n                      </button>\n                    ) : (\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center gap-2\">\n                          {/* Progress bar and countdown */}\n                          <div className=\"flex-grow bg-gray-200 dark:bg-gray-700 rounded-full h-2 relative group\">\n                            {/* Production: 14 days = 1209600000 milliseconds */}\n                            {(() => {\n                              const waitingPeriod = 1209600000; // 14 days\n                              const elapsed = Date.now() - withdrawal.requestedAt;\n                              const progress = Math.min(100, (elapsed / waitingPeriod) * 100);\n                              const isReady = elapsed >= waitingPeriod;\n                              \n                              return (\n                                <>\n                                  <div \n                                    className=\"bg-[#FF1B6B] h-2 rounded-full transition-all duration-500\"\n                                    style={{ width: `${progress}%` }}\n                                  />\n                                  {/* Tooltip */}\n                                  <div className=\"opacity-0 group-hover:opacity-100 transition-opacity absolute -top-[80px] left-1/2 transform -translate-x-1/2 z-50\">\n                                    <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 shadow-lg rounded-lg p-3 w-[280px]\">\n                                      <div className=\"flex items-start gap-2\">\n                                        <FiAlertTriangle className=\"text-[#FF1B6B] mt-0.5 flex-shrink-0\" />\n                                        <div>\n                                          <p className=\"text-gray-900 dark:text-white font-medium\">Withdrawal Hold Period</p>\n                                          <p className=\"text-gray-600 dark:text-gray-400 text-xs mt-1\">\n                                            {isReady \n                                              ? \"Ready for approval! The holding period has passed.\"\n                                              : \"Withdrawals are held for 14 days before they can be approved to ensure all orders are delivered and no disputes are pending.\"}\n                                          </p>\n                                          {!isReady && (\n                                            <p className=\"text-[#FF1B6B] text-xs mt-1 font-medium\">\n                                              Time remaining: {Math.ceil((waitingPeriod - elapsed) / (1000 * 60 * 60 * 24))} days\n                                            </p>\n                                          )}\n                                        </div>\n                                      </div>\n                                    </div>\n                                    {/* Arrow */}\n                                    <div className=\"absolute left-1/2 transform -translate-x-1/2 -bottom-2\">\n                                      <div className=\"border-8 border-transparent border-t-white dark:border-t-gray-800\"></div>\n                                    </div>\n                                  </div>\n                                </>\n                              );\n                            })()}\n                          </div>\n\n                          {/* Always visible reject button */}\n                          <button\n                            onClick={() => handleReject(withdrawal.id)}\n                            className=\"p-1.5 rounded-full text-gray-500 hover:text-white hover:bg-red-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 dark:focus:ring-offset-gray-800 transition-colors\"\n                            title=\"Reject withdrawal\"\n                          >\n                            <FiX className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n\n                        {/* Approve button - only show if waiting period is over */}\n                        {Date.now() - withdrawal.requestedAt >= 1209600000 && (\n                          <button\n                            onClick={() => handleApprove(withdrawal)}\n                            className=\"w-full inline-flex items-center justify-center px-3 py-1 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-[#FF1B6B] hover:bg-[#D4145A] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] dark:focus:ring-offset-gray-800\"\n                          >\n                            <FiCheck className=\"mr-1\" />\n                            Approve\n                          </button>\n                        )}\n                      </div>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n\n      {/* Recent Withdrawals Section */}\n      <AdminRecentWithdrawals />\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { FiSave, FiAlertTriangle } from 'react-icons/fi';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { toast } from 'react-hot-toast';\n\nconst ADMIN_WALLET = \"0x5828D525fe00902AE22f2270Ac714616651894fF\";\n\nexport default function AdminSettings() {\n  const [settings, setSettings] = useState({\n    withdrawalMinimum: 5,\n    platformFee: 2.5,\n    withdrawalProcessingTime: '1',\n    maintenanceMode: false\n  });\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const theme = localStorage.getItem('admin-theme') || 'light';\n\n  useEffect(() => {\n    // Check if wallet is already connected\n    const checkWalletConnection = async () => {\n      try {\n        const provider = await detectEthereumProvider();\n        if (provider) {\n          const accounts = await provider.request({ method: 'eth_accounts' });\n          if (accounts.length > 0 && accounts[0].toLowerCase() === ADMIN_WALLET.toLowerCase()) {\n            setWalletAddress(accounts[0]);\n            setWalletConnected(true);\n          }\n        }\n      } catch (error) {\n        console.error('Error checking wallet connection:', error);\n      }\n    };\n\n    checkWalletConnection();\n  }, []);\n\n  useEffect(() => {\n    // Listen for account changes\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', (accounts) => {\n        if (accounts.length === 0 || accounts[0].toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n          setWalletConnected(false);\n          setWalletAddress('');\n        } else {\n          setWalletAddress(accounts[0]);\n          setWalletConnected(true);\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (walletConnected && walletAddress.toLowerCase() === ADMIN_WALLET.toLowerCase()) {\n      fetchSettings();\n    } else {\n      setLoading(false);\n    }\n  }, [walletConnected, walletAddress]);\n\n  const fetchSettings = async () => {\n    if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) return;\n    try {\n      const settingsDoc = await getDoc(doc(db, 'settings', 'platform'));\n      if (settingsDoc.exists()) {\n        setSettings(settingsDoc.data());\n      } else {\n        // Create initial settings document if it doesn't exist\n        await setDoc(doc(db, 'settings', 'platform'), settings);\n      }\n    } catch (error) {\n      console.error('Error fetching settings:', error);\n      setMessage({ type: 'error', text: 'Failed to load settings' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) return;\n    \n    setSaving(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      await setDoc(doc(db, 'settings', 'platform'), settings);\n      setMessage({ type: 'success', text: 'Settings updated successfully' });\n      toast.success('Settings updated successfully');\n    } catch (error) {\n      console.error('Error updating settings:', error);\n      setMessage({ type: 'error', text: 'Failed to update settings' });\n      toast.error('Failed to update settings');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setSettings(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : type === 'number' ? parseFloat(value) : value\n    }));\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"w-8 h-8 border-4 border-[#FF1B6B] border-t-transparent rounded-full animate-spin\" />\n      </div>\n    );\n  }\n\n  if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-[60vh] p-6\">\n        <FiAlertTriangle className=\"w-16 h-16 text-[#FF1B6B] mb-4\" />\n        <h2 className={`text-2xl font-bold ${theme === 'dark' ? 'text-white' : 'text-gray-800'} mb-2`}>Access Denied</h2>\n        <p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-600'} text-center mb-6`}>Please connect your admin wallet to access platform settings.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <h1 className=\"text-2xl font-bold text-[#FF1B6B] mb-6\">Platform Settings</h1>\n\n      <div className={`${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-lg p-6`}>\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div>\n            <label className={`block text-sm font-medium ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'} mb-2`}>\n              Minimum Withdrawal Amount (USDT)\n            </label>\n            <input\n              type=\"number\"\n              name=\"withdrawalMinimum\"\n              value={settings.withdrawalMinimum}\n              onChange={handleChange}\n              className={`block w-full px-3 py-2 rounded-md shadow-sm focus:ring-[#FF1B6B] focus:border-[#FF1B6B] ${\n                theme === 'dark'\n                  ? 'bg-gray-700 border-gray-600 text-white'\n                  : 'border-gray-300 text-gray-900'\n              }`}\n              min=\"0\"\n              step=\"0.01\"\n            />\n          </div>\n\n          <div>\n            <label className={`block text-sm font-medium ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'} mb-2`}>\n              Platform Fee (%)\n            </label>\n            <input\n              type=\"number\"\n              name=\"platformFee\"\n              value={settings.platformFee}\n              onChange={handleChange}\n              className={`block w-full px-3 py-2 rounded-md shadow-sm focus:ring-[#FF1B6B] focus:border-[#FF1B6B] ${\n                theme === 'dark'\n                  ? 'bg-gray-700 border-gray-600 text-white'\n                  : 'border-gray-300 text-gray-900'\n              }`}\n              min=\"0\"\n              max=\"100\"\n              step=\"0.1\"\n            />\n          </div>\n\n          <div>\n            <label className={`block text-sm font-medium ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'} mb-2`}>\n              Withdrawal Processing Time (days)\n            </label>\n            <input\n              type=\"text\"\n              name=\"withdrawalProcessingTime\"\n              value={settings.withdrawalProcessingTime}\n              onChange={handleChange}\n              className={`block w-full px-3 py-2 rounded-md shadow-sm focus:ring-[#FF1B6B] focus:border-[#FF1B6B] ${\n                theme === 'dark'\n                  ? 'bg-gray-700 border-gray-600 text-white'\n                  : 'border-gray-300 text-gray-900'\n              }`}\n            />\n          </div>\n\n          <div className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              name=\"maintenanceMode\"\n              checked={settings.maintenanceMode}\n              onChange={handleChange}\n              className=\"h-4 w-4 text-[#FF1B6B] focus:ring-[#FF1B6B] border-gray-300 rounded\"\n            />\n            <label className={`ml-2 block text-sm ${theme === 'dark' ? 'text-gray-300' : 'text-gray-900'}`}>\n              Maintenance Mode\n            </label>\n          </div>\n\n          {message.text && (\n            <div className={`p-4 rounded-md ${\n              message.type === 'success' \n                ? theme === 'dark' ? 'bg-green-900 text-green-300' : 'bg-green-50 text-green-800'\n                : theme === 'dark' ? 'bg-red-900 text-red-300' : 'bg-red-50 text-red-800'\n            }`}>\n              {message.text}\n            </div>\n          )}\n\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={saving || !walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-[#FF1B6B] hover:bg-[#D4145A] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] disabled:opacity-50\"\n            >\n              <FiSave className=\"mr-2\" />\n              {saving ? 'Saving...' : 'Save Changes'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, orderBy, doc, updateDoc, getDoc, addDoc, serverTimestamp, limit } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { toast } from 'react-hot-toast';\nimport { FiAlertTriangle, FiCheck, FiX, FiDollarSign, FiClock, FiCheckCircle } from 'react-icons/fi';\nimport { getMerchPlatformContract, SUPPORTED_TOKENS } from '../../contracts/MerchPlatform';\nimport { ethers } from 'ethers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { motion } from 'framer-motion';\n\nconst ADMIN_WALLET = \"0x5828D525fe00902AE22f2270Ac714616651894fF\";\n\n// Skeleton Components\nconst RefundRequestSkeleton = () => (\n  <motion.div \n    initial={{ opacity: 0.6 }}\n    animate={{ opacity: 1 }}\n    transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n    className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\"\n  >\n    <div className=\"flex justify-between items-start mb-4\">\n      <div>\n        <div className=\"h-6 bg-gray-200 dark:bg-gray-700 rounded w-32 mb-2\"></div>\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-48\"></div>\n      </div>\n      <div className=\"flex gap-2\">\n        <div className=\"h-8 w-32 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n        <div className=\"h-8 w-24 bg-gray-200 dark:bg-gray-700 rounded\"></div>\n      </div>\n    </div>\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      <div className=\"space-y-2\">\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4\"></div>\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-2/3\"></div>\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\n      </div>\n      <div className=\"space-y-2\">\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-full\"></div>\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-2/3\"></div>\n      </div>\n    </div>\n  </motion.div>\n);\n\nconst RefundHistorySkeleton = () => (\n  <motion.div \n    initial={{ opacity: 0.6 }}\n    animate={{ opacity: 1 }}\n    transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n    className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm overflow-hidden\"\n  >\n    <div className=\"overflow-x-auto\">\n      <table className=\"min-w-full\">\n        <thead className=\"bg-gray-50 dark:bg-gray-700\">\n          <tr>\n            {[...Array(9)].map((_, i) => (\n              <th key={i} className=\"px-6 py-3\">\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-600 rounded w-24\"></div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n          {[...Array(5)].map((_, i) => (\n            <tr key={i}>\n              {[...Array(9)].map((_, j) => (\n                <td key={j} className=\"px-6 py-4\">\n                  <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-20\"></div>\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  </motion.div>\n);\n\nconst TransactionHashModal = ({ isOpen, onClose, onSubmit, refundRequest }) => {\n  const [txHash, setTxHash] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = async () => {\n    if (!txHash.trim()) {\n      toast.error('Please enter the transaction hash');\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      await onSubmit(txHash);\n      onClose();\n    } catch (error) {\n      console.error('Error submitting transaction hash:', error);\n      toast.error('Failed to submit transaction hash');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md w-full mx-4\">\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">Submit Transaction Hash</h2>\n        \n        <div className=\"mb-4 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n          <div className=\"flex items-start gap-2\">\n            <FiAlertTriangle className=\"text-blue-500 dark:text-blue-400 text-lg mt-0.5\" />\n            <div>\n              <p className=\"text-sm font-medium text-blue-800 dark:text-blue-300\">Refund Details</p>\n              <p className=\"text-sm text-blue-700 dark:text-blue-400 mt-1\">\n                Amount: ${refundRequest.amount.toFixed(2)} {refundRequest.order.paymentMethod.token}\n              </p>\n              <p className=\"text-sm text-blue-700 dark:text-blue-400\">\n                To: {refundRequest.paymentAddress.slice(0, 6)}...{refundRequest.paymentAddress.slice(-4)}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Transaction Hash\n            </label>\n            <input\n              type=\"text\"\n              value={txHash}\n              onChange={(e) => setTxHash(e.target.value)}\n              placeholder=\"0x...\"\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-[#FF1B6B] focus:border-[#FF1B6B] bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n            />\n          </div>\n        </div>\n\n        <div className=\"flex justify-end gap-3 mt-6\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleSubmit}\n            disabled={isSubmitting}\n            className={`px-4 py-2 rounded-lg text-white ${\n              isSubmitting\n                ? 'bg-[#FF1B6B] opacity-50 cursor-not-allowed'\n                : 'bg-[#FF1B6B] hover:bg-[#D4145A]'\n            }`}\n          >\n            {isSubmitting ? 'Submitting...' : 'Submit & Approve'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default function AdminRefunds() {\n  const { isAdmin } = useMerchAuth();\n  const [loading, setLoading] = useState(true);\n  const [refundRequests, setRefundRequests] = useState([]);\n  const [refundHistory, setRefundHistory] = useState([]);\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [selectedRefund, setSelectedRefund] = useState(null);\n  const [showTxHashModal, setShowTxHashModal] = useState(false);\n  const [activeTab, setActiveTab] = useState('pending');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [historyPage, setHistoryPage] = useState(1);\n  const itemsPerPage = 10;\n  const theme = localStorage.getItem('admin-theme') || 'light';\n\n  useEffect(() => {\n    checkWalletConnection();\n  }, []);\n\n  useEffect(() => {\n    // Listen for account changes\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', (accounts) => {\n        if (accounts.length === 0 || accounts[0].toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n          setWalletConnected(false);\n          setWalletAddress('');\n        } else {\n          setWalletAddress(accounts[0]);\n          setWalletConnected(true);\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (walletConnected && walletAddress.toLowerCase() === ADMIN_WALLET.toLowerCase()) {\n      fetchRefundRequests();\n    } else {\n      setLoading(false);\n    }\n  }, [walletConnected, walletAddress]);\n\n  const checkWalletConnection = async () => {\n    try {\n      const provider = await detectEthereumProvider();\n      if (provider) {\n        const accounts = await provider.request({ method: 'eth_accounts' });\n        if (accounts.length > 0 && accounts[0].toLowerCase() === ADMIN_WALLET.toLowerCase()) {\n          setWalletAddress(accounts[0]);\n          setWalletConnected(true);\n        }\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n    }\n  };\n\n  const fetchRefundRequests = async () => {\n    if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) return;\n    try {\n      // Fetch pending requests\n      const pendingQuery = query(\n        collection(db, 'refundRequests'),\n        where('status', '==', 'pending'),\n        orderBy('createdAt', 'desc')\n      );\n      const pendingSnapshot = await getDocs(pendingQuery);\n      \n      // Fetch completed refunds (approved or rejected)\n      const historyQuery = query(\n        collection(db, 'refundRequests'),\n        where('status', 'in', ['approved', 'rejected']),\n        orderBy('processedAt', 'desc')\n      );\n      const historySnapshot = await getDocs(historyQuery);\n      \n      // Process pending requests\n      const pendingData = await Promise.all(pendingSnapshot.docs.map(async refundDoc => {\n        const data = refundDoc.data();\n        const orderRef = doc(db, 'orders', data.orderId);\n        const orderDoc = await getDoc(orderRef);\n        return {\n          id: refundDoc.id,\n          ...data,\n          order: orderDoc.exists() ? { id: orderDoc.id, ...orderDoc.data() } : null,\n          createdAt: data.createdAt?.toDate()\n        };\n      }));\n\n      // Process history requests\n      const historyData = await Promise.all(historySnapshot.docs.map(async refundDoc => {\n        const data = refundDoc.data();\n        const orderRef = doc(db, 'orders', data.orderId);\n        const orderDoc = await getDoc(orderRef);\n        \n        // Fetch buyer info\n        const buyerRef = doc(db, 'users', data.buyerId);\n        const buyerDoc = await getDoc(buyerRef);\n        const buyerData = buyerDoc.exists() ? buyerDoc.data() : null;\n\n        // Fetch seller info\n        const sellerRef = doc(db, 'sellers', data.sellerId);\n        const sellerDoc = await getDoc(sellerRef);\n        const sellerData = sellerDoc.exists() ? sellerDoc.data() : null;\n\n        return {\n          id: refundDoc.id,\n          ...data,\n          order: orderDoc.exists() ? { id: orderDoc.id, ...orderDoc.data() } : null,\n          buyerName: buyerData?.name || 'Unknown Buyer',\n          sellerName: sellerData?.storeName || sellerData?.name || 'Unknown Seller',\n          createdAt: data.createdAt?.toDate(),\n          processedAt: data.processedAt?.toDate()\n        };\n      }));\n\n      setRefundRequests(pendingData);\n      setRefundHistory(historyData);\n    } catch (error) {\n      console.error('Error fetching refund requests:', error);\n      toast.error('Failed to fetch refund requests');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRequestRefundWithdrawal = async (refundRequest) => {\n    if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n      toast.error('Please connect your admin wallet');\n      return;\n    }\n\n    try {\n      // Get the order details to get the numeric orderId\n      const orderDoc = await getDoc(doc(db, 'orders', refundRequest.orderId));\n      if (!orderDoc.exists()) {\n        toast.error('Order not found');\n        return;\n      }\n      const orderData = orderDoc.data();\n      const numericOrderId = orderData.numericOrderId;\n      if (!numericOrderId) {\n        console.error('Missing numericOrderId in order:', orderData);\n        toast.error('Order ID not found. This might be an old order.');\n        return;\n      }\n\n      // Get the buyer's address from the order data\n      const buyerAddress = orderData.paymentMethod?.buyerWallet;\n      console.log('Raw buyer address from order:', buyerAddress);\n      \n      // Try to format the address\n      let formattedBuyerAddress;\n      try {\n        formattedBuyerAddress = ethers.getAddress(buyerAddress); // This will format the address to checksum format\n        console.log('Formatted buyer address:', formattedBuyerAddress);\n      } catch (error) {\n        console.error('Error formatting buyer address:', error);\n        toast.error('Invalid buyer wallet address format');\n        return;\n      }\n\n      if (!ethers.isAddress(formattedBuyerAddress)) {\n        console.error('Address validation failed:', {\n          original: buyerAddress,\n          formatted: formattedBuyerAddress\n        });\n        toast.error('Invalid buyer wallet address in order');\n        return;\n      }\n\n      // Debug log all relevant data\n      console.log('Full refund details:', {\n        numericOrderId,\n        buyerAddress: formattedBuyerAddress,\n        orderData,\n        refundRequest,\n        network: orderData.paymentMethod?.network,\n        token: orderData.paymentMethod?.token\n      });\n\n      // Get seller's wallet address from sellers collection\n      const sellerDoc = await getDoc(doc(db, 'sellers', refundRequest.sellerId));\n      if (!sellerDoc.exists()) {\n        toast.error('Seller not found');\n        return;\n      }\n\n      const sellerAddress = sellerDoc.data().walletAddress;\n      if (!ethers.isAddress(sellerAddress)) {\n        console.error('Invalid seller address:', sellerAddress);\n        toast.error('Invalid seller wallet address');\n        return;\n      }\n\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const network = refundRequest.order.paymentMethod.network;\n      const networkId = network.toString();\n      const token = refundRequest.order.paymentMethod.token;\n\n      // Get token address from SUPPORTED_TOKENS mapping\n      const tokenAddress = SUPPORTED_TOKENS[networkId]?.[token];\n      if (!tokenAddress) {\n        toast.error(`Unsupported token ${token} on network ${networkId}`);\n        return;\n      }\n\n      // Get contract instance\n      const contract = await getMerchPlatformContract(provider, networkId);\n      if (!contract) {\n        toast.error('Failed to get contract instance');\n        return;\n      }\n\n      const contractWithSigner = contract.connect(signer);\n\n      // Round to 6 decimal places and convert to string to avoid floating point issues\n      const roundedAmount = Number(refundRequest.amount).toFixed(6);\n      console.log('Rounded refund amount:', roundedAmount);\n\n      // Parse refund amount with 6 decimals (USDT/USDC standard)\n      const refundAmount = ethers.parseUnits(roundedAmount, 6);\n      console.log('Parsed refund amount:', refundAmount.toString());\n\n      // Show pending toast\n      const pendingToast = toast.loading('Processing refund...');\n\n      // Debug log\n      console.log('Processing refund with params:', {\n        orderId: numericOrderId,\n        buyerAddress: formattedBuyerAddress,\n        sellerAddress,\n        refundAmount: refundAmount.toString(),\n        token,\n        network: networkId,\n        roundedAmount\n      });\n\n      // Call the processRefund function with numeric orderId\n      const tx = await contractWithSigner.processRefund(\n        numericOrderId,\n        formattedBuyerAddress,\n        sellerAddress,\n        refundAmount\n      );\n\n      // Wait for transaction confirmation\n      await tx.wait();\n\n      // Create withdrawal record in Firestore\n      await addDoc(collection(db, 'withdrawals'), {\n        sellerId: refundRequest.sellerId,\n        amount: Number(roundedAmount), // Use the rounded amount\n        token: token,\n        fee: 0,\n        netAmount: Number(roundedAmount), // Use the rounded amount\n        status: 'completed',\n        walletAddress: formattedBuyerAddress,\n        network: network === 1301 ? 'unichain' : 'polygon',\n        timestamp: serverTimestamp(),\n        requestedAt: Date.now(),\n        completedAt: Date.now(),\n        transactionHash: tx.hash,\n        refundRequestId: refundRequest.id,\n        type: 'refund'\n      });\n\n      // Update refund request status\n      await updateDoc(doc(db, 'refundRequests', refundRequest.id), {\n        status: 'approved',\n        processedAt: serverTimestamp(),\n        transactionHash: tx.hash\n      });\n\n      // Update order status\n      await updateDoc(doc(db, 'orders', refundRequest.orderId), {\n        status: 'refunded'\n      });\n\n      // Update seller's balance\n      const sellerBalanceRef = doc(db, 'sellers', refundRequest.sellerId);\n      const sellerBalanceDoc = await getDoc(sellerBalanceRef);\n      if (sellerBalanceDoc.exists()) {\n        const currentBalance = sellerBalanceDoc.data().balance || 0;\n        await updateDoc(sellerBalanceRef, {\n          balance: Math.max(0, currentBalance - Number(roundedAmount)) // Ensure balance doesn't go below 0\n        });\n      }\n\n      // Update seller's revenue data\n      const sellerRevenueRef = doc(db, 'sellers', refundRequest.sellerId);\n      const sellerRevenueDoc = await getDoc(sellerRevenueRef);\n      \n      if (sellerRevenueDoc.exists()) {\n        const currentRevenue = sellerRevenueDoc.data().netRevenue || 0;\n        const currentMonthlyRevenue = sellerRevenueDoc.data().monthlyRevenue || {};\n        \n        // Get the current month and year\n        const now = new Date();\n        const monthKey = `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}`;\n        \n        // Update monthly revenue\n        const monthlyRevenue = { ...currentMonthlyRevenue };\n        monthlyRevenue[monthKey] = (monthlyRevenue[monthKey] || 0) - Number(roundedAmount);\n\n        await updateDoc(sellerRevenueRef, {\n          netRevenue: Math.max(0, currentRevenue - Number(roundedAmount)), // Ensure it doesn't go below 0\n          monthlyRevenue,\n          lastUpdated: serverTimestamp()\n        });\n\n        console.log('Updated seller revenue:', {\n          previousRevenue: currentRevenue,\n          refundAmount: Number(roundedAmount),\n          newRevenue: Math.max(0, currentRevenue - Number(roundedAmount))\n        });\n      }\n\n      toast.dismiss(pendingToast);\n      toast.success('Refund processed successfully');\n      \n      // Refresh the refund requests list\n      fetchRefundRequests();\n    } catch (error) {\n      console.error('Error processing refund:', error);\n      toast.error(\n        error.message.includes('user rejected') \n          ? 'Transaction was rejected'\n          : error.message || 'Failed to process refund'\n      );\n    }\n  };\n\n  const handleSubmitTransactionHash = async (txHash) => {\n    try {\n      // Update refund request status in Firestore\n      await updateDoc(doc(db, 'refundRequests', selectedRefund.id), {\n        status: 'approved',\n        processedAt: new Date(),\n        transactionHash: txHash\n      });\n\n      // Update order status\n      await updateDoc(doc(db, 'orders', selectedRefund.orderId), {\n        status: 'refunded'\n      });\n\n      // Update withdrawal status\n      const withdrawalsQuery = query(\n        collection(db, 'withdrawals'),\n        where('refundRequestId', '==', selectedRefund.id),\n        limit(1)\n      );\n      const withdrawalSnapshot = await getDocs(withdrawalsQuery);\n      if (!withdrawalSnapshot.empty) {\n        await updateDoc(doc(db, 'withdrawals', withdrawalSnapshot.docs[0].id), {\n          status: 'completed',\n          completedAt: new Date(),\n          completionTxHash: txHash\n        });\n      }\n\n      toast.success('Refund approved successfully');\n      fetchRefundRequests();\n    } catch (error) {\n      console.error('Error updating refund status:', error);\n      throw error;\n    }\n  };\n\n  const handleRejectRefund = async (refundId) => {\n    if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n      toast.error('Please connect your admin wallet');\n      return;\n    }\n\n    try {\n      await updateDoc(doc(db, 'refundRequests', refundId), {\n        status: 'rejected',\n        processedAt: new Date()\n      });\n      toast.success('Refund request rejected');\n      fetchRefundRequests();\n    } catch (error) {\n      console.error('Error rejecting refund:', error);\n      toast.error('Failed to reject refund request');\n    }\n  };\n\n  // Get current items for history pagination\n  const indexOfLastHistory = historyPage * itemsPerPage;\n  const indexOfFirstHistory = indexOfLastHistory - itemsPerPage;\n  const currentHistory = refundHistory.slice(indexOfFirstHistory, indexOfLastHistory);\n  const totalHistoryPages = Math.ceil(refundHistory.length / itemsPerPage);\n\n  // Change history page\n  const paginateHistory = (pageNumber) => setHistoryPage(pageNumber);\n\n  // Reset pages when switching tabs\n  useEffect(() => {\n    setCurrentPage(1);\n    setHistoryPage(1);\n  }, [activeTab]);\n\n  if (loading) {\n    return (\n      <div className=\"p-6 max-w-7xl mx-auto space-y-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <motion.div \n            initial={{ opacity: 0.6 }}\n            animate={{ opacity: 1 }}\n            transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n            className=\"h-8 bg-gray-200 dark:bg-gray-700 rounded w-64\"\n          />\n          <div className=\"flex gap-2\">\n            {[...Array(2)].map((_, i) => (\n              <motion.div \n                key={i}\n                initial={{ opacity: 0.6 }}\n                animate={{ opacity: 1 }}\n                transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\n                className=\"h-10 w-32 bg-gray-200 dark:bg-gray-700 rounded-lg\"\n              />\n            ))}\n          </div>\n        </div>\n        {activeTab === 'pending' ? (\n          <div className=\"space-y-6\">\n            {[...Array(3)].map((_, i) => (\n              <RefundRequestSkeleton key={i} />\n            ))}\n          </div>\n        ) : (\n          <RefundHistorySkeleton />\n        )}\n      </div>\n    );\n  }\n\n  if (!walletConnected || walletAddress.toLowerCase() !== ADMIN_WALLET.toLowerCase()) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-[60vh] p-6\">\n        <FiAlertTriangle className=\"w-16 h-16 text-[#FF1B6B] mb-4\" />\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">Access Denied</h2>\n        <p className=\"text-gray-600 dark:text-gray-400 text-center mb-6\">\n          Please connect your admin wallet to access the refunds page.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Refunds Management</h1>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => setActiveTab('pending')}\n            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\n              activeTab === 'pending'\n                ? 'bg-[#FF1B6B] text-white'\n                : 'bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n            }`}\n          >\n            Pending Requests\n          </button>\n          <button\n            onClick={() => setActiveTab('history')}\n            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\n              activeTab === 'history'\n                ? 'bg-[#FF1B6B] text-white'\n                : 'bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n            }`}\n          >\n            Refunds History\n          </button>\n        </div>\n      </div>\n      \n      {activeTab === 'pending' ? (\n        refundRequests.length === 0 ? (\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 text-center\">\n            <p className=\"text-gray-500 dark:text-gray-400\">No pending refund requests</p>\n          </div>\n        ) : (\n          <div className=\"grid gap-6\">\n            {refundRequests.map((request) => (\n              <div\n                key={request.id}\n                className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\"\n              >\n                <div className=\"flex justify-between items-start mb-4\">\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                      Order #{request.orderId.slice(-6)}\n                    </h3>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Requested on {request.createdAt.toLocaleString()}\n                    </p>\n                  </div>\n                  <div className=\"flex gap-2\">\n                    <button\n                      onClick={() => handleRequestRefundWithdrawal(request)}\n                      className=\"flex items-center gap-1 px-3 py-1 bg-[#FF1B6B] text-white rounded-lg hover:bg-[#D4145A] transition-colors\"\n                    >\n                      <FiDollarSign className=\"w-4 h-4\" />\n                      Request Withdrawal\n                    </button>\n                    <button\n                      onClick={() => handleRejectRefund(request.id)}\n                      className=\"flex items-center gap-1 px-3 py-1 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors\"\n                    >\n                      <FiX className=\"w-4 h-4\" />\n                      Reject\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                        Buyer ID:\n                      </span>\n                      <span className=\"ml-2 text-sm text-gray-900 dark:text-gray-300\">\n                        {request.buyerId}\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                        Seller ID:\n                      </span>\n                      <span className=\"ml-2 text-sm text-gray-900 dark:text-gray-300\">\n                        {request.sellerId}\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                        Refund Amount:\n                      </span>\n                      <span className=\"ml-2 text-sm text-gray-900 dark:text-gray-300\">\n                        ${request.amount.toFixed(2)}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                        Payment Address:\n                      </span>\n                      <span className=\"ml-2 text-sm text-gray-900 dark:text-gray-300 break-all\">\n                        {request.paymentAddress}\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                        Token:\n                      </span>\n                      <span className=\"ml-2 text-sm text-gray-900 dark:text-gray-300\">\n                        {request.order?.paymentMethod?.token}\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                        Network:\n                      </span>\n                      <span className=\"ml-2 text-sm text-gray-900 dark:text-gray-300\">\n                        {request.order?.paymentMethod?.network === 1301 ? 'Unichain' : 'Polygon'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )\n      ) : (\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm overflow-hidden\">\n          {refundHistory.length === 0 ? (\n            <div className=\"p-6 text-center\">\n              <p className=\"text-gray-500 dark:text-gray-400\">No refund history found</p>\n            </div>\n          ) : (\n            <>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                  <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                    <tr>\n                      {['Order ID', 'Buyer', 'Seller', 'Amount', 'Status', 'Token', 'Network', 'Processed On', 'Transaction'].map((header) => (\n                        <th key={header} className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                          {header}\n                        </th>\n                      ))}\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                    {currentHistory.map((refund) => (\n                      <tr key={refund.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n                          #{refund.orderId.slice(-6)}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                          {refund.buyerName}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                          {refund.sellerName}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                          ${refund.amount.toFixed(2)}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n                            refund.status === 'approved'\n                              ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-400'\n                              : 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-400'\n                          }`}>\n                            {refund.status}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                          {refund.order?.paymentMethod?.token}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                          {refund.order?.paymentMethod?.network === 1301 ? 'Unichain' : 'Polygon'}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                          {refund.processedAt.toLocaleString()}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                          {refund.transactionHash ? (\n                            <a\n                              href={`${refund.order?.paymentMethod?.network === 1301 \n                                ? 'https://unichain-sepolia.blockscout.com/'\n                                : 'https://polygonscan.com'}/tx/${refund.transactionHash}`}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"text-[#FF1B6B] hover:text-[#D4145A] dark:text-pink-400 dark:hover:text-pink-300\"\n                            >\n                              View\n                            </a>\n                          ) : '-'}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n\n              {/* Pagination Controls */}\n              {totalHistoryPages > 1 && (\n                <div className=\"px-4 py-3 flex items-center justify-center border-t border-gray-200 dark:border-gray-700\">\n                  <div className=\"flex gap-1\">\n                    {Array.from({ length: totalHistoryPages }, (_, i) => (\n                      <button\n                        key={i + 1}\n                        onClick={() => paginateHistory(i + 1)}\n                        className={`px-2 py-1 text-xs font-medium rounded-md transition-colors ${\n                          historyPage === i + 1\n                            ? 'bg-[#FF1B6B] text-white'\n                            : 'bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-600'\n                        }`}\n                      >\n                        {i + 1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      )}\n\n      <TransactionHashModal\n        isOpen={showTxHashModal}\n        onClose={() => {\n          setShowTxHashModal(false);\n          setSelectedRefund(null);\n        }}\n        onSubmit={handleSubmitTransactionHash}\n        refundRequest={selectedRefund}\n      />\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { collection, query, where, getDocs, orderBy, doc, getDoc } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { toast } from 'react-hot-toast';\nimport { FiAlertCircle } from 'react-icons/fi';\n\nexport default function SellerRefunds() {\n  const { user } = useMerchAuth();\n  const { isDarkMode } = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [refundRequests, setRefundRequests] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const refundsPerPage = 10;\n\n  useEffect(() => {\n    if (user?.sellerId) {\n      fetchRefundRequests();\n    }\n  }, [user]);\n\n  const fetchRefundRequests = async () => {\n    try {\n      const refundsQuery = query(\n        collection(db, 'refundRequests'),\n        where('sellerId', '==', user.sellerId),\n        orderBy('createdAt', 'desc')\n      );\n      const snapshot = await getDocs(refundsQuery);\n      \n      // Fetch order details and buyer info for each refund request\n      const refundData = await Promise.all(snapshot.docs.map(async refundDoc => {\n        const data = refundDoc.data();\n        \n        try {\n          // Fetch order to get buyer info\n          const orderRef = doc(db, 'orders', data.orderId);\n          const orderDoc = await getDoc(orderRef);\n          const orderData = orderDoc.data();\n          \n          return {\n            id: refundDoc.id,\n            ...data,\n            buyerName: orderData?.buyerInfo?.name || orderData?.buyerId || 'Anonymous',\n            createdAt: data.createdAt?.toDate(),\n            processedAt: data.processedAt?.toDate()\n          };\n        } catch (orderError) {\n          console.error('Error fetching order:', orderError);\n          return {\n            id: refundDoc.id,\n            ...data,\n            buyerName: data.buyerId || 'Anonymous',\n            createdAt: data.createdAt?.toDate(),\n            processedAt: data.processedAt?.toDate()\n          };\n        }\n      }));\n\n      setRefundRequests(refundData);\n    } catch (error) {\n      console.error('Error fetching refund requests:', error);\n      toast.error('Failed to fetch refund requests');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusBadgeClass = (status) => {\n    switch (status) {\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'approved':\n        return 'bg-green-100 text-green-800';\n      case 'rejected':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Get current refunds\n  const indexOfLastRefund = currentPage * refundsPerPage;\n  const indexOfFirstRefund = indexOfLastRefund - refundsPerPage;\n  const currentRefunds = refundRequests.slice(indexOfFirstRefund, indexOfLastRefund);\n  const totalPages = Math.ceil(refundRequests.length / refundsPerPage);\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  if (loading) {\n    return (\n      <div className={`flex items-center justify-center min-h-[200px] ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\n        <div className=\"w-8 h-8 border-4 border-[#FF1B6B] border-t-transparent rounded-full animate-spin\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className={`p-4 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\n      <div className=\"max-w-5xl mx-auto\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h1 className={`text-xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Buyers Refunds</h1>\n        </div>\n\n        {refundRequests.length === 0 ? (\n          <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow p-4 text-center`}>\n            <FiAlertCircle className={`w-12 h-12 ${isDarkMode ? 'text-gray-600' : 'text-gray-400'} mx-auto mb-4`} />\n            <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>No refund requests found</p>\n          </div>\n        ) : (\n          <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow overflow-hidden`}>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className={`${isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50'}`}>\n                  <tr>\n                    <th className={`px-4 py-2 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\n                      Order ID\n                    </th>\n                    <th className={`px-4 py-2 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\n                      Buyer\n                    </th>\n                    <th className={`px-4 py-2 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\n                      Amount\n                    </th>\n                    <th className={`px-4 py-2 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\n                      Status\n                    </th>\n                    <th className={`px-4 py-2 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\n                      Requested On\n                    </th>\n                    <th className={`px-4 py-2 text-left text-xs font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\n                      Processed On\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className={`${isDarkMode ? 'bg-gray-800 divide-y divide-gray-700' : 'bg-white divide-y divide-gray-200'}`}>\n                  {currentRefunds.map((request) => (\n                    <tr key={request.id} className={`${isDarkMode ? 'hover:bg-gray-700/50' : 'hover:bg-gray-50'}`}>\n                      <td className={`px-4 py-3 whitespace-nowrap text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\n                        #{request.orderId.slice(-6)}\n                      </td>\n                      <td className={`px-4 py-3 whitespace-nowrap text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-500'}`}>\n                        {request.buyerName}\n                      </td>\n                      <td className={`px-4 py-3 whitespace-nowrap text-sm ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\n                        ${request.amount.toFixed(2)}\n                      </td>\n                      <td className=\"px-4 py-3 whitespace-nowrap\">\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusBadgeClass(request.status)}`}>\n                          {request.status}\n                        </span>\n                      </td>\n                      <td className={`px-4 py-3 whitespace-nowrap text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-500'}`}>\n                        {request.createdAt.toLocaleString()}\n                      </td>\n                      <td className={`px-4 py-3 whitespace-nowrap text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-500'}`}>\n                        {request.processedAt ? request.processedAt.toLocaleString() : '-'}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n\n            {/* Pagination */}\n            {totalPages > 1 && (\n              <div className={`px-4 py-3 flex items-center justify-center ${isDarkMode ? 'border-t border-gray-700' : 'border-t border-gray-200'}`}>\n                <div className=\"flex gap-1\">\n                  {Array.from({ length: totalPages }, (_, i) => (\n                    <button\n                      key={i + 1}\n                      onClick={() => paginate(i + 1)}\n                      className={`px-2 py-1 text-xs font-medium rounded-md transition-colors ${\n                        currentPage === i + 1\n                          ? 'bg-[#FF1B6B] text-white'\n                          : isDarkMode\n                            ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                            : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                      }`}\n                    >\n                      {i + 1}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        <div className={`mt-4 ${isDarkMode ? 'bg-blue-900/20' : 'bg-blue-50'} border ${isDarkMode ? 'border-blue-800/30' : 'border-blue-200'} rounded-lg p-3`}>\n          <div className=\"flex items-start gap-2\">\n            <FiAlertCircle className={`text-base mt-0.5 ${isDarkMode ? 'text-blue-400' : 'text-blue-500'}`} />\n            <div>\n              <p className={`text-sm font-medium ${isDarkMode ? 'text-blue-300' : 'text-blue-800'}`}>About Refund Requests</p>\n              <p className={`text-sm mt-1 ${isDarkMode ? 'text-blue-300/90' : 'text-blue-700'}`}>\n                Refund requests are automatically created when buyers request refunds for cancelled orders. \n                Our platform will process and handle these refunds, ensuring proper deduction from your account balance.\n                The refunded amount will be automatically deducted from your total sales.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { collection, query, where, getDocs, orderBy } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { toast } from 'react-hot-toast';\nimport { FiClock, FiCheckCircle, FiXCircle, FiExternalLink } from 'react-icons/fi';\n\nconst SkeletonPulse = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <motion.div\n      className={`w-full h-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-lg`}\n      animate={{\n        opacity: [0.4, 0.7, 0.4]\n      }}\n      transition={{\n        duration: 1.5,\n        repeat: Infinity,\n        ease: \"easeInOut\"\n      }}\n    />\n  );\n};\n\nconst RefundsSkeleton = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <div className=\"space-y-6\">\n      {[1, 2, 3].map((i) => (\n        <div key={i} className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm p-6`}>\n          <div className=\"space-y-4\">\n            <div className=\"w-48 h-6\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"w-32 h-4\">\n              <SkeletonPulse />\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <div className=\"w-24 h-4\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-36 h-4\">\n                  <SkeletonPulse />\n                </div>\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"w-28 h-4\">\n                  <SkeletonPulse />\n                </div>\n                <div className=\"w-32 h-4\">\n                  <SkeletonPulse />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst getStatusIcon = (status) => {\n  switch (status) {\n    case 'approved':\n      return <FiCheckCircle className=\"w-5 h-5 text-green-500\" />;\n    case 'rejected':\n      return <FiXCircle className=\"w-5 h-5 text-red-500\" />;\n    default:\n      return <FiClock className=\"w-5 h-5 text-yellow-500\" />;\n  }\n};\n\nconst getStatusColor = (status, isDarkMode) => {\n  switch (status) {\n    case 'approved':\n      return isDarkMode \n        ? 'bg-[#FF1B6B]/20 border border-[#FF1B6B]/30 text-[#FF1B6B]'\n        : 'bg-[#FF1B6B]/10 border border-[#FF1B6B]/20 text-[#FF1B6B]';\n    case 'rejected':\n      return isDarkMode\n        ? 'bg-red-900/20 border border-red-800/30 text-red-400'\n        : 'bg-red-50 border border-red-200 text-red-700';\n    default:\n      return isDarkMode\n        ? 'bg-yellow-900/20 border border-yellow-800/30 text-yellow-400'\n        : 'bg-yellow-50 border border-yellow-200 text-yellow-700';\n  }\n};\n\nconst getStatusText = (status) => {\n  switch (status) {\n    case 'approved':\n      return 'Approved';\n    case 'rejected':\n      return 'Rejected';\n    default:\n      return 'Processing';\n  }\n};\n\nexport default function Refunds() {\n  const { user } = useMerchAuth();\n  const { isDarkMode } = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [refunds, setRefunds] = useState([]);\n\n  useEffect(() => {\n    if (user?.uid) {\n      fetchRefunds();\n    }\n  }, [user]);\n\n  const fetchRefunds = async () => {\n    try {\n      const refundsQuery = query(\n        collection(db, 'refundRequests'),\n        where('buyerId', '==', user.uid),\n        orderBy('createdAt', 'desc')\n      );\n      const snapshot = await getDocs(refundsQuery);\n      const refundsData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        createdAt: doc.data().createdAt?.toDate(),\n        processedAt: doc.data().processedAt?.toDate()\n      }));\n      setRefunds(refundsData);\n    } catch (error) {\n      console.error('Error fetching refunds:', error);\n      toast.error('Failed to load refund history');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <RefundsSkeleton />;\n  }\n\n  return (\n    <div className={`max-w-2xl mx-auto p-4 space-y-4 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\n      <h1 className={`text-xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>Buyers Refunds</h1>\n\n      {refunds.length === 0 ? (\n        <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm p-4 text-center`}>\n          <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>No refund requests found</p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {refunds.map((refund) => (\n            <div key={refund.id} className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-sm border ${isDarkMode ? 'border-gray-700 hover:border-[#FF1B6B]' : 'border-gray-100 hover:border-[#FF1B6B]'} transition-colors duration-200`}>\n              <div className=\"p-4\">\n                <div className=\"flex justify-between items-start mb-4\">\n                  <div className=\"space-y-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <h3 className={`text-base font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>\n                        Order #{refund.orderId.slice(-6)}\n                      </h3>\n                      <span className={`px-2.5 py-1 rounded-full text-xs font-medium flex items-center gap-1.5 ${getStatusColor(refund.status, isDarkMode)}`}>\n                        {getStatusIcon(refund.status)}\n                        {getStatusText(refund.status)}\n                      </span>\n                    </div>\n                    <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                      Requested on {refund.createdAt.toLocaleString()}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-3\">\n                    <div className={`${isDarkMode ? 'bg-[#FF1B6B]/10' : 'bg-[#FF1B6B]/5'} p-3 rounded-lg`}>\n                      <div className=\"flex items-center gap-2 mb-1\">\n                        <span className={`text-xs font-semibold ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>Amount</span>\n                      </div>\n                      <p className={`text-xl font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>\n                        ${refund.amount.toFixed(2)} <span className=\"text-[#FF1B6B]\">{refund.orderDetails.paymentMethod.token}</span>\n                      </p>\n                    </div>\n                    <div>\n                      <span className={`text-xs font-medium ${isDarkMode ? 'text-gray-400' : 'text-gray-600'} block mb-1`}>Payment Address</span>\n                      <div className={`${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'} p-2 rounded-lg`}>\n                        <code className={`text-xs ${isDarkMode ? 'text-gray-200' : 'text-gray-800'} break-all font-mono`}>\n                          {refund.paymentAddress}\n                        </code>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-3\">\n                    <div>\n                      <span className={`text-xs font-medium ${isDarkMode ? 'text-gray-400' : 'text-gray-600'} block mb-1`}>Network</span>\n                      <div className={`inline-flex items-center gap-2 px-2.5 py-1.5 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'} rounded-lg`}>\n                        <span className={`text-xs ${isDarkMode ? 'text-gray-200' : 'text-gray-800'}`}>\n                          {refund.orderDetails.paymentMethod.network === 1301 ? 'Unichain' : 'Polygon'}\n                        </span>\n                      </div>\n                    </div>\n                    \n                    {refund.status === 'approved' && refund.transactionHash && (\n                      <div>\n                        <span className={`text-xs font-medium ${isDarkMode ? 'text-gray-400' : 'text-gray-600'} block mb-1`}>Transaction Hash</span>\n                        <div className={`${isDarkMode ? 'bg-[#FF1B6B]/10 border-[#FF1B6B]/20' : 'bg-[#FF1B6B]/5 border-[#FF1B6B]/10'} border p-2 rounded-lg`}>\n                          <div className=\"flex items-center justify-between\">\n                            <code className={`text-xs ${isDarkMode ? 'text-gray-200' : 'text-gray-800'} font-mono truncate`}>\n                              {refund.transactionHash}\n                            </code>\n                            <a\n                              href={`${refund.orderDetails.paymentMethod.network === 1301 \n                                ? 'https://unichain-sepolia.blockscout.com/tx/'\n                                : 'https://polygonscan.com/tx/'\n                              }${refund.transactionHash}`}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"ml-2 flex items-center gap-1 text-[#FF1B6B] hover:text-[#D4145A] transition-colors\"\n                            >\n                              <span className=\"text-xs font-medium\">View</span>\n                              <FiExternalLink className=\"w-3.5 h-3.5\" />\n                            </a>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                    \n                    {refund.status !== 'pending' && (\n                      <div>\n                        <span className={`text-xs font-medium ${isDarkMode ? 'text-gray-400' : 'text-gray-600'} block mb-1`}>Processed on</span>\n                        <div className={`inline-flex items-center gap-2 px-2.5 py-1.5 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-50'} rounded-lg`}>\n                          <span className={`text-xs ${isDarkMode ? 'text-gray-200' : 'text-gray-800'}`}>\n                            {refund.processedAt.toLocaleString()}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n} ","import React from 'react';\r\nimport { FiShield, FiDollarSign, FiTruck, FiRefreshCw, FiUserCheck, FiUsers, FiSettings, FiBook, FiLock, FiGlobe } from 'react-icons/fi';\r\nimport { useTheme } from '../../context/ThemeContext';\r\n\r\nexport default function TermsAndConditions() {\r\n  const { isDarkMode } = useTheme();\r\n  \r\n  const sections = [\r\n    {\r\n      title: \"Platform Overview\",\r\n      icon: <FiGlobe className=\"w-6 h-6\" />,\r\n      items: [\r\n        \"These terms govern your use of our platform and services\",\r\n        \"You must be 18 years or older to use the platform\",\r\n        \"By using the platform, you agree to these terms and conditions\",\r\n        \"We reserve the right to update these terms with notice to users\"\r\n      ]\r\n    },\r\n    {\r\n      title: \"Platform Fees and Charges\",\r\n      icon: <FiDollarSign className=\"w-6 h-6\" />,\r\n      items: [\r\n        \"5% platform fee is automatically deducted from each sale\",\r\n        \"Refund requests will have a 5% fee deducted (platform fee is non-refundable)\",\r\n        \"Minimum withdrawal amount: 5 USDC/USDT for sellers\",\r\n        \"Admin can update platform fees (maximum 10%)\"\r\n      ]\r\n    },\r\n    {\r\n      title: \"Order Processing and Shipping\",\r\n      icon: <FiTruck className=\"w-6 h-6\" />,\r\n      items: [\r\n        \"Sellers have 3 days to confirm shipping for orders\",\r\n        \"Orders not shipped within 3 days may be automatically cancelled\",\r\n        \"Sellers must provide valid tracking information when confirming shipping\",\r\n        \"Buyers are responsible for providing correct delivery addresses\"\r\n      ]\r\n    },\r\n    {\r\n      title: \"Refunds and Cancellations\",\r\n      icon: <FiRefreshCw className=\"w-6 h-6\" />,\r\n      items: [\r\n        \"Only cancelled orders are eligible for refund requests\",\r\n        \"Refund requests typically take up to 1 week to process\",\r\n        \"Refunds will be processed to the original payment address\",\r\n        \"Platform fees (5%) are non-refundable on refunded orders\",\r\n        \"3-day window to request refund for cancelled orders\"\r\n      ]\r\n    },\r\n    {\r\n      title: \"Payment and Withdrawals\",\r\n      icon: <FiDollarSign className=\"w-6 h-6\" />,\r\n      items: [\r\n        \"Supported payment tokens: USDT and USDC\",\r\n        \"Payments are processed on either Unichain or Polygon network\",\r\n        \"Sellers are responsible for gas fees during withdrawals\",\r\n        \"Withdrawals are processed on the seller's selected network\",\r\n        \"Platform may hold funds for pending refunds\",\r\n        \"Withdrawal processing requires confirmation of delivery for all orders in the timeframe\",\r\n        \"If buyers don't confirm delivery, withdrawals will be processed 2-3 weeks after shipping confirmation\"\r\n      ]\r\n    },\r\n    {\r\n      title: \"Seller Obligations\",\r\n      icon: <FiUserCheck className=\"w-6 h-6\" />,\r\n      items: [\r\n        \"Sellers must maintain accurate product listings\",\r\n        \"Sellers are responsible for order fulfillment within the 3-day window\",\r\n        \"Sellers must handle shipping and provide tracking information\",\r\n        \"False shipping confirmations will result in rejected withdrawal requests\",\r\n        \"Sellers' available balance reflects total sales minus platform fees and pending refunds\",\r\n        \"Sellers must comply with all applicable laws and regulations\",\r\n        \"Posting of NSFW content is strictly prohibited and will result in immediate account termination\",\r\n        \"Platform reserves the right to delete seller accounts without notice for NSFW violations\"\r\n      ]\r\n    },\r\n    {\r\n      title: \"Buyer Protection\",\r\n      icon: <FiShield className=\"w-6 h-6\" />,\r\n      items: [\r\n        \"3-day window to request refund for cancelled orders\",\r\n        \"Refund amounts will be processed minus the 5% platform fee\",\r\n        \"Buyers can track order status and shipping information\",\r\n        \"Buyers can view refund request status and transaction details\",\r\n        \"Platform maintains records of all transactions for buyer security\"\r\n      ]\r\n    },\r\n    {\r\n      title: \"Account Security\",\r\n      icon: <FiLock className=\"w-6 h-6\" />,\r\n      items: [\r\n        \"Users are responsible for maintaining account security\",\r\n        \"Account credentials must not be shared with third parties\",\r\n        \"Users must notify us immediately of any unauthorized access\",\r\n        \"We reserve the right to suspend accounts for security violations\"\r\n      ]\r\n    },\r\n    {\r\n      title: \"Platform Rights\",\r\n      icon: <FiSettings className=\"w-6 h-6\" />,\r\n      items: [\r\n        \"The platform reserves the right to pause operations if necessary\",\r\n        \"Admin can update platform fees (maximum 10%)\",\r\n        \"Platform may hold funds for pending refunds\",\r\n        \"Platform maintains records of all transactions and activities\",\r\n        \"We may modify or terminate services with notice to users\",\r\n        \"Any suspicious activity or attempts to manipulate sales will result in immediate account termination\",\r\n        \"Platform monitors and audits all transactions for potential manipulation\"\r\n      ]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className={`max-w-5xl mx-auto px-4 py-8 ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\r\n      <div className=\"text-center mb-12\">\r\n        <h1 className={`text-3xl font-bold mb-4 ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Terms and Conditions</h1>\r\n        <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-600'} max-w-2xl mx-auto`}>\r\n          Please read these terms and conditions carefully before using the MerchStore platform. \r\n          These terms outline the rules and regulations for the use of our services.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"space-y-8\">\r\n        {sections.map((section, index) => (\r\n          <div \r\n            key={section.title}\r\n            className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300`}\r\n          >\r\n            <div className=\"p-6\">\r\n              <div className=\"flex items-center gap-4 mb-4\">\r\n                <div className=\"p-3 bg-[#FF1B6B]/10 rounded-lg text-[#FF1B6B]\">\r\n                  {section.icon}\r\n                </div>\r\n                <h2 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>\r\n                  {section.title}\r\n                </h2>\r\n              </div>\r\n              <ul className=\"space-y-3\">\r\n                {section.items.map((item, itemIndex) => (\r\n                  <li key={itemIndex} className=\"flex items-start gap-2\">\r\n                    <span className=\"text-[#FF1B6B] mt-1.5\">•</span>\r\n                    <span className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>{item}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"mt-12 text-center text-sm\">\r\n        <p className={`${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>Last updated: {new Date().toLocaleDateString()}</p>\r\n        <p className={`mt-2 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n          By using the MerchStore platform, you agree to these terms and conditions. \r\n          We reserve the right to modify these terms at any time.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { useMerchAuth } from '../../context/MerchAuthContext';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useTheme } from '../../context/ThemeContext';\r\n\r\nexport default function ForgotPassword() {\r\n  const { isDarkMode } = useTheme();\r\n  const [email, setEmail] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { resetPassword } = useMerchAuth();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await resetPassword(email);\r\n      // Success toast is shown by the resetPassword function\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-[#FFF5F7]'} flex items-center justify-center p-4`}>\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        className={`max-w-md w-full space-y-8 ${isDarkMode ? 'bg-gray-800' : 'bg-white'} p-8 rounded-2xl shadow-xl`}\r\n      >\r\n        <div className=\"text-center\">\r\n          <h2 className={`text-3xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>Reset Password</h2>\r\n          <p className={`mt-2 text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\r\n            Enter your email address and we'll send you a link to reset your password.\r\n          </p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"mt-8 space-y-6\">\r\n          <div>\r\n            <label htmlFor=\"email\" className={`block text-sm font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-700'}`}>\r\n              Email address\r\n            </label>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              required\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className={`mt-1 block w-full px-3 py-2 border ${isDarkMode ? 'border-gray-600 bg-gray-700 text-white placeholder-gray-400' : 'border-gray-300 text-gray-900 placeholder-gray-500'} rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors`}\r\n              placeholder=\"Enter your email\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-[#FF1B6B] hover:bg-[#D4145A] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n            >\r\n              {isLoading ? 'Sending reset link...' : 'Send reset link'}\r\n            </button>\r\n\r\n            <div className=\"text-center\">\r\n              <Link \r\n                to=\"/merch-store/login\" \r\n                className={`text-sm font-medium ${isDarkMode ? 'text-gray-300 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}\r\n              >\r\n                Back to login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { confirmPasswordReset, verifyPasswordResetCode } from 'firebase/auth';\r\nimport { auth } from '../../firebase/merchConfig';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nexport default function ResetPassword() {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isVerifying, setIsVerifying] = useState(true);\r\n  const [oobCode, setOobCode] = useState('');\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    // Get the reset code from URL parameters\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const code = queryParams.get('oobCode');\r\n    \r\n    if (!code) {\r\n      toast.error('Invalid password reset link');\r\n      navigate('/merch-store/login');\r\n      return;\r\n    }\r\n\r\n    // Verify the password reset code\r\n    verifyPasswordResetCode(auth, code)\r\n      .then(() => {\r\n        setOobCode(code);\r\n        setIsVerifying(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error verifying reset code:', error);\r\n        toast.error('This password reset link has expired or is invalid');\r\n        navigate('/merch-store/login');\r\n      });\r\n  }, [navigate, location]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (newPassword !== confirmPassword) {\r\n      toast.error('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 6) {\r\n      toast.error('Password must be at least 6 characters long');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await confirmPasswordReset(auth, oobCode, newPassword);\r\n      toast.success('Password reset successful! Please sign in with your new password.');\r\n      navigate('/merch-store/login');\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error);\r\n      toast.error(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isVerifying) {\r\n    return (\r\n      <div className=\"min-h-screen bg-[#FFF5F7] flex items-center justify-center p-4\">\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          className=\"text-center\"\r\n        >\r\n          <div className=\"w-16 h-16 border-4 border-[#FF1B6B] border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Verifying reset link...</p>\r\n        </motion.div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-[#FFF5F7] flex items-center justify-center p-4\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        className=\"max-w-md w-full space-y-8 bg-white p-8 rounded-2xl shadow-xl\"\r\n      >\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-3xl font-bold text-gray-900\">Set New Password</h2>\r\n          <p className=\"mt-2 text-sm text-gray-600\">\r\n            Please enter your new password below.\r\n          </p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"mt-8 space-y-6\">\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n                New Password\r\n              </label>\r\n              <input\r\n                id=\"newPassword\"\r\n                name=\"newPassword\"\r\n                type=\"password\"\r\n                required\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors\"\r\n                placeholder=\"Enter new password\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n                Confirm New Password\r\n              </label>\r\n              <input\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                required\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-[#FF1B6B] focus:border-[#FF1B6B] transition-colors\"\r\n                placeholder=\"Confirm new password\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-[#FF1B6B] hover:bg-[#D4145A] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FF1B6B] disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n          >\r\n            {isLoading ? 'Resetting password...' : 'Reset Password'}\r\n          </button>\r\n        </form>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { collection, query, where, orderBy, onSnapshot, addDoc, updateDoc, doc, serverTimestamp, writeBatch, deleteDoc } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { BiSend, BiArrowBack, BiMessageDetail, BiCheck, BiCheckDouble, BiPencil, BiTrash, BiX } from 'react-icons/bi';\nimport { toast } from 'react-hot-toast';\nimport VerificationCheckmark from '../../components/shared/VerificationCheckmark';\n\nconst LoadingSkeleton = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <div className=\"grid grid-cols-12\">\n      <div className=\"col-span-4 border-r\">\n        <div className=\"p-4 border-b\">\n          <motion.div \n            className={`h-7 w-32 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded`}\n            animate={{ opacity: [0.5, 0.8, 0.5] }}\n            transition={{ duration: 1.5, repeat: Infinity }}\n          />\n        </div>\n        <div className=\"overflow-y-auto\">\n          {[...Array(5)].map((_, i) => (\n            <div key={i} className=\"p-4 border-b\">\n              <div className=\"flex items-center gap-1.5 mb-2\">\n                <motion.div \n                  className={`h-5 w-32 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded`}\n                  animate={{ opacity: [0.5, 0.8, 0.5] }}\n                  transition={{ duration: 1.5, repeat: Infinity, delay: i * 0.1 }}\n                />\n                <motion.div \n                  className={`h-3 w-3 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-full`}\n                  animate={{ opacity: [0.5, 0.8, 0.5] }}\n                  transition={{ duration: 1.5, repeat: Infinity, delay: i * 0.1 }}\n                />\n              </div>\n              <motion.div \n                className={`h-4 w-48 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded`}\n                animate={{ opacity: [0.5, 0.8, 0.5] }}\n                transition={{ duration: 1.5, repeat: Infinity, delay: i * 0.1 }}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"col-span-8\">\n        <div className=\"p-4 border-b\">\n          <motion.div \n            className={`h-6 w-32 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded`}\n            animate={{ opacity: [0.5, 0.8, 0.5] }}\n            transition={{ duration: 1.5, repeat: Infinity }}\n          />\n        </div>\n        <div className=\"p-4 space-y-4\">\n          {[...Array(6)].map((_, i) => (\n            <div key={i} className={`flex ${i % 2 === 0 ? 'justify-end' : 'justify-start'}`}>\n              <motion.div \n                className={`rounded-lg h-10 ${i % 2 === 0 ? 'bg-pink-100' : isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} ${i % 2 === 0 ? 'w-64' : 'w-48'}`}\n                animate={{ opacity: [0.5, 0.8, 0.5] }}\n                transition={{ duration: 1.5, repeat: Infinity, delay: i * 0.1 }}\n              />\n            </div>\n          ))}\n          {/* Product Card Skeleton */}\n          <div className=\"flex justify-start\">\n            <motion.div \n              className={`w-[280px] h-[300px] ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-xl`}\n              animate={{ opacity: [0.5, 0.8, 0.5] }}\n              transition={{ duration: 1.5, repeat: Infinity }}\n            />\n          </div>\n        </div>\n        <div className=\"p-4 border-t mt-auto\">\n          <motion.div \n            className={`h-10 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-lg`}\n            animate={{ opacity: [0.5, 0.8, 0.5] }}\n            transition={{ duration: 1.5, repeat: Infinity }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst MessageStatus = ({ message, currentUser }) => {\n  if (message.senderId !== currentUser.uid) return null;\n  \n  const getTime = (timestamp) => {\n    if (!timestamp) return '';\n    const date = timestamp.toDate();\n    return date.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });\n  };\n\n  return (\n    <div className=\"flex items-center gap-1 text-xs mt-1\">\n      <span className=\"text-gray-400\">{getTime(message.timestamp)}</span>\n      <div className=\"text-gray-400\">\n        {!message.delivered && <BiCheck className=\"text-sm\" />}\n        {message.delivered && !message.read && <BiCheckDouble className=\"text-sm\" />}\n        {message.delivered && message.read && <BiCheckDouble className=\"text-sm text-[#FF1B6B]\" />}\n      </div>\n    </div>\n  );\n};\n\nconst Message = ({ message, currentUser, onEdit, onDelete }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedText, setEditedText] = useState(message.text);\n  const isOwnMessage = message.senderId === currentUser.uid;\n  const navigate = useNavigate();\n  const { isDarkMode } = useTheme();\n\n  const renderProductCard = (productCard) => (\n    <div className={`my-4 ${isOwnMessage ? 'ml-auto' : ''} max-w-[280px]`}>\n      <button \n        onClick={() => navigate(`/merch-store/product/${productCard.productId}`)}\n        className={`w-full rounded-xl overflow-hidden shadow-sm hover:shadow-md transition-shadow ${\n          isOwnMessage \n            ? isDarkMode ? 'border-pink-900/20' : 'border-pink-100'\n            : isDarkMode ? 'border-gray-700' : 'border-gray-100'\n        }`}\n      >\n        <img \n          src={productCard.image} \n          alt={productCard.name} \n          className=\"w-full h-48 object-cover\"\n        />\n        <div className={`p-3 ${isDarkMode ? 'bg-gray-800' : 'bg-white'} text-left`}>\n          <h4 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>\n            {productCard.name}\n          </h4>\n          <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1`}>\n            {productCard.description}\n          </p>\n          <p className=\"font-medium mt-2 text-[#FF1B6B]\">\n            ${productCard.price.toFixed(2)}\n          </p>\n        </div>\n      </button>\n    </div>\n  );\n\n  const handleEdit = () => {\n    onEdit(message.id, editedText);\n    setIsEditing(false);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleEdit();\n    }\n    if (e.key === 'Escape') {\n      setIsEditing(false);\n      setEditedText(message.text);\n    }\n  };\n\n  return (\n    <div className={`mb-6 ${isOwnMessage ? 'text-right' : ''}`}>\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.2 }}\n      >\n        <div className=\"inline-block relative group\">\n          {isEditing ? (\n            <div className=\"flex flex-col gap-2 min-w-[300px]\">\n              <textarea\n                value={editedText}\n                onChange={(e) => setEditedText(e.target.value)}\n                onKeyDown={handleKeyDown}\n                className={`w-full px-4 py-2.5 border rounded-xl focus:outline-none focus:border-[#FF1B6B] focus:ring-1 focus:ring-[#FF1B6B] min-h-[100px] resize-none ${\n                  isDarkMode \n                    ? 'bg-gray-700 border-gray-600 text-gray-100' \n                    : 'border-gray-200 text-gray-900'\n                }`}\n                autoFocus\n              />\n              <div className=\"flex justify-end gap-2\">\n                <button\n                  onClick={handleEdit}\n                  className={`px-3 py-1.5 text-[#FF1B6B] ${\n                    isDarkMode ? 'hover:bg-pink-900/20' : 'hover:bg-pink-50'\n                  } rounded-full transition-colors flex items-center gap-1`}\n                >\n                  <BiCheck className=\"text-xl\" />\n                  <span className=\"text-sm\">Save</span>\n                </button>\n                <button\n                  onClick={() => {\n                    setIsEditing(false);\n                    setEditedText(message.text);\n                  }}\n                  className={`px-3 py-1.5 ${\n                    isDarkMode \n                      ? 'text-gray-400 hover:bg-gray-700' \n                      : 'text-gray-500 hover:bg-gray-100'\n                  } rounded-full transition-colors flex items-center gap-1`}\n                >\n                  <BiX className=\"text-xl\" />\n                  <span className=\"text-sm\">Cancel</span>\n                </button>\n              </div>\n            </div>\n          ) : (\n            <>\n              <div\n                className={`inline-block max-w-[80%] relative ${isOwnMessage ? 'ml-auto' : ''}`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  {isOwnMessage && !message.productCard && (\n                    <div className=\"flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity\">\n                      <button\n                        onClick={() => setIsEditing(true)}\n                        className={`p-1.5 ${\n                          isDarkMode \n                            ? 'text-gray-400 hover:text-[#FF1B6B] hover:bg-pink-900/20' \n                            : 'text-gray-500 hover:text-[#FF1B6B] hover:bg-pink-50'\n                        } rounded-full transition-colors`}\n                      >\n                        <BiPencil className=\"text-sm\" />\n                      </button>\n                      <button\n                        onClick={() => onDelete(message.id)}\n                        className={`p-1.5 ${\n                          isDarkMode \n                            ? 'text-gray-400 hover:text-red-500 hover:bg-red-900/20' \n                            : 'text-gray-500 hover:text-red-500 hover:bg-red-50'\n                        } rounded-full transition-colors`}\n                      >\n                        <BiTrash className=\"text-sm\" />\n                      </button>\n                    </div>\n                  )}\n                  <div>\n                    <div\n                      className={`rounded-2xl px-4 py-2.5 ${\n                        isOwnMessage\n                          ? 'bg-[#FF1B6B] text-white'\n                          : isDarkMode \n                            ? 'bg-gray-700 text-gray-100'\n                            : 'bg-gray-100 text-gray-800'\n                      }`}\n                    >\n                      <p className=\"whitespace-pre-wrap break-words text-left\">\n                        {message.text}\n                      </p>\n                    </div>\n                    {message.edited && (\n                      <div className={`text-xs ${isDarkMode ? 'text-gray-500' : 'text-gray-400'} mt-0.5 text-right`}>\n                        edited\n                      </div>\n                    )}\n                    {message.productCard && renderProductCard(message.productCard)}\n                    <MessageStatus message={message} currentUser={currentUser} />\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nconst Inbox = () => {\n  const { conversationId } = useParams();\n  const navigate = useNavigate();\n  const { user } = useMerchAuth();\n  const [conversations, setConversations] = useState([]);\n  const [currentConversation, setCurrentConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const { isDarkMode } = useTheme();\n\n  useEffect(() => {\n    if (!user) return;\n\n    // Listen to conversations\n    const q = query(\n      collection(db, 'conversations'),\n      where('participants', 'array-contains', user.uid),\n      orderBy('updatedAt', 'desc')\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const conversationsData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setConversations(conversationsData);\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, [user]);\n\n  useEffect(() => {\n    if (!conversationId) return;\n\n    // Listen to messages for current conversation\n    const q = query(\n      collection(db, 'messages'),\n      where('conversationId', '==', conversationId),\n      orderBy('timestamp', 'asc')\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const messagesData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setMessages(messagesData);\n      \n      // Update unread count and mark messages as read\n      if (currentConversation) {\n        // Mark messages as read\n        const unreadMessages = snapshot.docs.filter(doc => \n          doc.data().senderId !== user.uid && \n          (!doc.data().read || !doc.data().delivered)\n        );\n\n        // Batch update for better performance\n        if (unreadMessages.length > 0) {\n          const batch = writeBatch(db);\n          unreadMessages.forEach(doc => {\n            batch.update(doc.ref, {\n              delivered: true,\n              read: true\n            });\n          });\n          batch.commit();\n        }\n\n        // Reset unread count\n        updateDoc(doc(db, 'conversations', conversationId), {\n          [`unreadCount.${user.uid}`]: 0\n        });\n      }\n    });\n\n    return () => unsubscribe();\n  }, [conversationId, currentConversation]);\n\n  useEffect(() => {\n    // Find and set current conversation\n    const conversation = conversations.find(c => c.id === conversationId);\n    setCurrentConversation(conversation);\n  }, [conversationId, conversations]);\n\n  useEffect(() => {\n    // Scroll to bottom when messages change\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    const messageText = newMessage.trim();\n    setNewMessage(''); // Clear input immediately\n\n    try {\n      // Add new message\n      await addDoc(collection(db, 'messages'), {\n        conversationId,\n        senderId: user.uid,\n        text: messageText,\n        timestamp: serverTimestamp(),\n        delivered: false,\n        read: false\n      });\n\n      // Update conversation\n      await updateDoc(doc(db, 'conversations', conversationId), {\n        lastMessage: messageText,\n        lastMessageTime: serverTimestamp(),\n        [`unreadCount.${currentConversation.sellerId}`]: (currentConversation.unreadCount?.[currentConversation.sellerId] || 0) + 1,\n        updatedAt: serverTimestamp()\n      });\n    } catch (error) {\n      console.error('Error sending message:', error);\n      toast.error('Failed to send message');\n      setNewMessage(messageText); // Restore the message if sending fails\n    }\n  };\n\n  const handleEditMessage = async (messageId, newText) => {\n    if (!newText.trim()) return;\n    \n    try {\n      await updateDoc(doc(db, 'messages', messageId), {\n        text: newText.trim(),\n        edited: true,\n        editedAt: serverTimestamp()\n      });\n    } catch (error) {\n      console.error('Error editing message:', error);\n      toast.error('Failed to edit message');\n    }\n  };\n\n  const handleDeleteMessage = async (messageId) => {\n    try {\n      await deleteDoc(doc(db, 'messages', messageId));\n      toast.success('Message deleted');\n    } catch (error) {\n      console.error('Error deleting message:', error);\n      toast.error('Failed to delete message');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\n        <div className=\"max-w-6xl mx-auto p-4\">\n          <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-xl shadow-sm overflow-hidden`}>\n            <LoadingSkeleton />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-gradient-to-br from-gray-50 to-pink-50/30'}`}>\n      <div className=\"max-w-6xl mx-auto p-4\">\n        <div className={`${isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-100'} rounded-2xl shadow-sm border overflow-hidden backdrop-blur-xl`}>\n          <div className=\"grid grid-cols-12\">\n            {/* Conversations List */}\n            <div className={`col-span-4 border-r ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n              <div className={`p-6 border-b ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n                <h2 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>Messages</h2>\n              </div>\n              <div className=\"overflow-y-auto h-[calc(100vh-12rem)] scrollbar-thin scrollbar-thumb-gray-200 scrollbar-track-gray-50\">\n                {conversations.map((conversation) => (\n                  <button\n                    key={conversation.id}\n                    onClick={() => navigate(`/merch-store/inbox/${conversation.id}`)}\n                    className={`w-full p-6 border-b ${isDarkMode ? 'border-gray-700 hover:bg-gray-700/50' : 'border-gray-100 hover:bg-gray-50/80'} transition-all ${\n                      conversation.id === conversationId ? isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50/80' : ''\n                    }`}\n                  >\n                    <div className=\"flex justify-between items-start\">\n                      <div className=\"min-w-0 flex-1\">\n                        <div className=\"flex items-center gap-1.5 mb-1\">\n                          <h3 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} truncate ${\n                            conversation.unreadCount?.[user.uid] > 0 ? 'font-bold' : ''\n                          }`}>\n                            {user.uid === conversation.buyerId ? conversation.sellerName : conversation.buyerName}\n                          </h3>\n                          {conversation.isVerifiedSeller && user.uid === conversation.buyerId && (\n                            <div className=\"group relative inline-flex items-center shrink-0\">\n                              <VerificationCheckmark className=\"!w-[10px] !h-[10px] min-w-[10px] min-h-[10px]\" />\n                              <div className={`absolute bottom-full left-1/2 -translate-x-1/2 mb-1 px-1 py-0.5 ${isDarkMode ? 'bg-gray-800' : 'bg-gray-900'} text-white text-[8px] rounded opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 whitespace-nowrap z-10`}>\n                                Verified Store\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                        <p className={`text-sm truncate ${\n                          conversation.unreadCount?.[user.uid] > 0 \n                            ? isDarkMode ? 'text-gray-100 font-medium' : 'text-gray-900 font-medium'\n                            : isDarkMode ? 'text-gray-400' : 'text-gray-500'\n                        }`}>\n                          {conversation.lastMessage || 'No messages yet'}\n                        </p>\n                        {conversation.unreadCount?.[user.uid] > 0 && (\n                          <div className=\"mt-1 text-xs text-[#FF1B6B]\">\n                            {conversation.unreadCount[user.uid]} new {conversation.unreadCount[user.uid] === 1 ? 'message' : 'messages'}\n                          </div>\n                        )}\n                      </div>\n                      {conversation.unreadCount?.[user.uid] > 0 && (\n                        <span className=\"bg-[#FF1B6B] text-white text-xs px-2.5 py-1.5 rounded-full ml-3 shrink-0\">\n                          {conversation.unreadCount[user.uid]}\n                        </span>\n                      )}\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Messages Area */}\n            <div className={`col-span-8 ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n              {currentConversation ? (\n                <>\n                  {/* Chat Header */}\n                  <div className={`p-6 border-b ${isDarkMode ? 'border-gray-700 bg-gray-800/80' : 'border-gray-100 bg-white/80'} backdrop-blur-sm`}>\n                    <div className=\"flex items-center gap-3\">\n                      <button \n                        onClick={() => navigate(-1)}\n                        className={`md:hidden ${isDarkMode ? 'hover:text-[#FF1B6B]' : 'hover:text-[#FF1B6B]'} transition-colors`}\n                      >\n                        <BiArrowBack className=\"text-xl\" />\n                      </button>\n                      <h3 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>\n                        {user.uid === currentConversation.buyerId ? currentConversation.sellerName : currentConversation.buyerName}\n                      </h3>\n                    </div>\n                  </div>\n\n                  {/* Messages */}\n                  <div className=\"p-6 overflow-y-auto h-[calc(100vh-16rem)] no-scrollbar\">\n                    {messages.map((message) => (\n                      <Message\n                        key={message.id}\n                        message={message}\n                        currentUser={user}\n                        onEdit={handleEditMessage}\n                        onDelete={handleDeleteMessage}\n                      />\n                    ))}\n                    <div ref={messagesEndRef} />\n                  </div>\n\n                  {/* Message Input */}\n                  <form onSubmit={handleSendMessage} className={`p-4 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n                    <div className=\"flex gap-2\">\n                      <input\n                        type=\"text\"\n                        value={newMessage}\n                        onChange={(e) => setNewMessage(e.target.value)}\n                        placeholder=\"Type a message...\"\n                        className={`flex-1 px-4 py-3 border rounded-xl focus:outline-none focus:border-[#FF1B6B] focus:ring-1 focus:ring-[#FF1B6B] transition-all ${\n                          isDarkMode ? 'bg-gray-700 border-gray-600 text-gray-100 placeholder-gray-400' : 'border-gray-200 text-gray-900'\n                        }`}\n                      />\n                      <button\n                        type=\"submit\"\n                        className=\"px-5 py-3 bg-[#FF1B6B] text-white rounded-xl hover:bg-[#D4145A] transition-colors\"\n                      >\n                        <BiSend className=\"text-xl\" />\n                      </button>\n                    </div>\n                  </form>\n                </>\n              ) : (\n                <div className=\"h-full flex flex-col items-center justify-center text-gray-500\">\n                  <div className={`w-16 h-16 mb-4 ${isDarkMode ? 'text-gray-600' : 'text-gray-300'}`}>\n                    <BiMessageDetail className=\"w-full h-full\" />\n                  </div>\n                  <p className={isDarkMode ? 'text-gray-400' : 'text-gray-500'}>Select a conversation to start messaging</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Inbox; ","import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { collection, query, where, orderBy, onSnapshot, addDoc, updateDoc, doc, serverTimestamp, writeBatch, deleteDoc } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { useMerchAuth } from '../../context/MerchAuthContext';\nimport { useTheme } from '../../context/ThemeContext';\nimport { BiSend, BiArrowBack, BiMessageDetail, BiCheck, BiCheckDouble, BiPencil, BiTrash, BiX } from 'react-icons/bi';\nimport { toast } from 'react-hot-toast';\n\nconst LoadingSkeleton = () => {\n  const { isDarkMode } = useTheme();\n  return (\n    <div className=\"grid grid-cols-12\">\n      <div className=\"col-span-4 border-r\">\n        <div className=\"p-4 border-b\">\n          <motion.div \n            className={`h-7 w-48 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded`}\n            animate={{ opacity: [0.5, 0.8, 0.5] }}\n            transition={{ duration: 1.5, repeat: Infinity }}\n          />\n        </div>\n        <div className=\"overflow-y-auto\">\n          {[...Array(5)].map((_, i) => (\n            <div key={i} className=\"p-4 border-b\">\n              <motion.div \n                className={`h-5 w-32 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded mb-2`}\n                animate={{ opacity: [0.5, 0.8, 0.5] }}\n                transition={{ duration: 1.5, repeat: Infinity, delay: i * 0.1 }}\n              />\n              <motion.div \n                className={`h-4 w-48 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded`}\n                animate={{ opacity: [0.5, 0.8, 0.5] }}\n                transition={{ duration: 1.5, repeat: Infinity, delay: i * 0.1 }}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"col-span-8\">\n        <div className=\"p-4 border-b\">\n          <motion.div \n            className={`h-6 w-32 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded`}\n            animate={{ opacity: [0.5, 0.8, 0.5] }}\n            transition={{ duration: 1.5, repeat: Infinity }}\n          />\n        </div>\n        <div className=\"p-4 space-y-4\">\n          {[...Array(6)].map((_, i) => (\n            <div key={i} className={`flex ${i % 2 === 0 ? 'justify-end' : 'justify-start'}`}>\n              <motion.div \n                className={`rounded-lg h-10 ${i % 2 === 0 ? 'bg-pink-100' : isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} ${i % 2 === 0 ? 'w-64' : 'w-48'}`}\n                animate={{ opacity: [0.5, 0.8, 0.5] }}\n                transition={{ duration: 1.5, repeat: Infinity, delay: i * 0.1 }}\n              />\n            </div>\n          ))}\n          {/* Product Card Skeleton */}\n          <div className=\"flex justify-start\">\n            <motion.div \n              className={`w-[280px] h-[300px] ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-xl`}\n              animate={{ opacity: [0.5, 0.8, 0.5] }}\n              transition={{ duration: 1.5, repeat: Infinity }}\n            />\n          </div>\n        </div>\n        <div className=\"p-4 border-t mt-auto\">\n          <motion.div \n            className={`h-10 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} rounded-lg`}\n            animate={{ opacity: [0.5, 0.8, 0.5] }}\n            transition={{ duration: 1.5, repeat: Infinity }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst MessageStatus = ({ message, currentUser }) => {\n  if (message.senderId !== currentUser.uid) return null;\n  \n  const getTime = (timestamp) => {\n    if (!timestamp) return '';\n    const date = timestamp.toDate();\n    return date.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });\n  };\n\n  return (\n    <div className=\"flex items-center gap-1 text-xs mt-1\">\n      <span className=\"text-gray-400\">{getTime(message.timestamp)}</span>\n      <div className=\"text-gray-400\">\n        {!message.delivered && <BiCheck className=\"text-sm\" />}\n        {message.delivered && !message.read && <BiCheckDouble className=\"text-sm\" />}\n        {message.delivered && message.read && <BiCheckDouble className=\"text-sm text-[#FF1B6B]\" />}\n      </div>\n    </div>\n  );\n};\n\nconst Message = ({ message, currentUser, onEdit, onDelete }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedText, setEditedText] = useState(message.text);\n  const isOwnMessage = message.senderId === currentUser.uid;\n  const navigate = useNavigate();\n  const { isDarkMode } = useTheme();\n\n  const renderProductCard = (productCard) => (\n    <div className={`my-4 ${isOwnMessage ? 'ml-auto' : ''} max-w-[280px]`}>\n      <button \n        onClick={() => navigate(`/merch-store/product/${productCard.productId}`)}\n        className={`w-full rounded-xl overflow-hidden shadow-sm hover:shadow-md transition-shadow ${\n          isOwnMessage \n            ? isDarkMode ? 'border-pink-900/20' : 'border-pink-100'\n            : isDarkMode ? 'border-gray-700' : 'border-gray-100'\n        }`}\n      >\n        <img \n          src={productCard.image} \n          alt={productCard.name} \n          className=\"w-full h-48 object-cover\"\n        />\n        <div className={`p-3 ${isDarkMode ? 'bg-gray-800' : 'bg-white'} text-left`}>\n          <h4 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>\n            {productCard.name}\n          </h4>\n          <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'} mt-1`}>\n            {productCard.description}\n          </p>\n          <p className=\"font-medium mt-2 text-[#FF1B6B]\">\n            ${productCard.price.toFixed(2)}\n          </p>\n        </div>\n      </button>\n    </div>\n  );\n\n  const handleEdit = () => {\n    onEdit(message.id, editedText);\n    setIsEditing(false);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleEdit();\n    }\n    if (e.key === 'Escape') {\n      setIsEditing(false);\n      setEditedText(message.text);\n    }\n  };\n\n  return (\n    <div className={`mb-6 ${isOwnMessage ? 'text-right' : ''}`}>\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.2 }}\n      >\n        <div className=\"inline-block relative group\">\n          {isEditing ? (\n            <div className=\"flex flex-col gap-2 min-w-[300px]\">\n              <textarea\n                value={editedText}\n                onChange={(e) => setEditedText(e.target.value)}\n                onKeyDown={handleKeyDown}\n                className={`w-full px-4 py-2.5 border rounded-xl focus:outline-none focus:border-[#FF1B6B] focus:ring-1 focus:ring-[#FF1B6B] min-h-[100px] resize-none ${\n                  isDarkMode \n                    ? 'bg-gray-700 border-gray-600 text-gray-100' \n                    : 'border-gray-200 text-gray-900'\n                }`}\n                autoFocus\n              />\n              <div className=\"flex justify-end gap-2\">\n                <button\n                  onClick={handleEdit}\n                  className={`px-3 py-1.5 text-[#FF1B6B] ${\n                    isDarkMode ? 'hover:bg-pink-900/20' : 'hover:bg-pink-50'\n                  } rounded-full transition-colors flex items-center gap-1`}\n                >\n                  <BiCheck className=\"text-xl\" />\n                  <span className=\"text-sm\">Save</span>\n                </button>\n                <button\n                  onClick={() => {\n                    setIsEditing(false);\n                    setEditedText(message.text);\n                  }}\n                  className={`px-3 py-1.5 ${\n                    isDarkMode \n                      ? 'text-gray-400 hover:bg-gray-700' \n                      : 'text-gray-500 hover:bg-gray-100'\n                  } rounded-full transition-colors flex items-center gap-1`}\n                >\n                  <BiX className=\"text-xl\" />\n                  <span className=\"text-sm\">Cancel</span>\n                </button>\n              </div>\n            </div>\n          ) : (\n            <>\n              <div\n                className={`inline-block max-w-[80%] relative ${isOwnMessage ? 'ml-auto' : ''}`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  {isOwnMessage && !message.productCard && (\n                    <div className=\"flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity\">\n                      <button\n                        onClick={() => setIsEditing(true)}\n                        className={`p-1.5 ${\n                          isDarkMode \n                            ? 'text-gray-400 hover:text-[#FF1B6B] hover:bg-pink-900/20' \n                            : 'text-gray-500 hover:text-[#FF1B6B] hover:bg-pink-50'\n                        } rounded-full transition-colors`}\n                      >\n                        <BiPencil className=\"text-sm\" />\n                      </button>\n                      <button\n                        onClick={() => onDelete(message.id)}\n                        className={`p-1.5 ${\n                          isDarkMode \n                            ? 'text-gray-400 hover:text-red-500 hover:bg-red-900/20' \n                            : 'text-gray-500 hover:text-red-500 hover:bg-red-50'\n                        } rounded-full transition-colors`}\n                      >\n                        <BiTrash className=\"text-sm\" />\n                      </button>\n                    </div>\n                  )}\n                  <div>\n                    <div\n                      className={`rounded-2xl px-4 py-2.5 ${\n                        isOwnMessage\n                          ? 'bg-[#FF1B6B] text-white'\n                          : isDarkMode \n                            ? 'bg-gray-700 text-gray-100'\n                            : 'bg-gray-100 text-gray-800'\n                      }`}\n                    >\n                      <p className=\"whitespace-pre-wrap break-words text-left\">\n                        {message.text}\n                      </p>\n                    </div>\n                    {message.edited && (\n                      <div className={`text-xs ${isDarkMode ? 'text-gray-500' : 'text-gray-400'} mt-0.5 text-right`}>\n                        edited\n                      </div>\n                    )}\n                    {message.productCard && renderProductCard(message.productCard)}\n                    <MessageStatus message={message} currentUser={currentUser} />\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nconst SellerInbox = () => {\n  const { conversationId } = useParams();\n  const navigate = useNavigate();\n  const { user } = useMerchAuth();\n  const [conversations, setConversations] = useState([]);\n  const [currentConversation, setCurrentConversation] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const { isDarkMode } = useTheme();\n\n  useEffect(() => {\n    if (!user) return;\n\n    // Listen to conversations where user is the seller\n    const q = query(\n      collection(db, 'conversations'),\n      where('participants', 'array-contains', user.sellerId),\n      orderBy('updatedAt', 'desc')\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const conversationsData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setConversations(conversationsData);\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, [user]);\n\n  useEffect(() => {\n    if (!conversationId) return;\n\n    // Listen to messages for current conversation\n    const q = query(\n      collection(db, 'messages'),\n      where('conversationId', '==', conversationId),\n      orderBy('timestamp', 'asc')\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const messagesData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setMessages(messagesData);\n      \n      // Update unread count and mark messages as read\n      if (currentConversation) {\n        // Mark messages as read\n        const unreadMessages = snapshot.docs.filter(doc => \n          doc.data().senderId !== user.uid && \n          (!doc.data().read || !doc.data().delivered)\n        );\n\n        // Batch update for better performance\n        if (unreadMessages.length > 0) {\n          const batch = writeBatch(db);\n          unreadMessages.forEach(doc => {\n            batch.update(doc.ref, {\n              delivered: true,\n              read: true\n            });\n          });\n          batch.commit();\n        }\n\n        // Reset unread count\n        updateDoc(doc(db, 'conversations', conversationId), {\n          [`unreadCount.${user.sellerId}`]: 0\n        });\n      }\n    });\n\n    return () => unsubscribe();\n  }, [conversationId, currentConversation]);\n\n  useEffect(() => {\n    // Find and set current conversation\n    const conversation = conversations.find(c => c.id === conversationId);\n    setCurrentConversation(conversation);\n  }, [conversationId, conversations]);\n\n  useEffect(() => {\n    // Scroll to bottom when messages change\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    const messageText = newMessage.trim();\n    setNewMessage(''); // Clear input immediately\n\n    try {\n      // Add new message\n      await addDoc(collection(db, 'messages'), {\n        conversationId,\n        senderId: user.uid,\n        text: messageText,\n        timestamp: serverTimestamp(),\n        delivered: false,\n        read: false\n      });\n\n      // Update conversation\n      await updateDoc(doc(db, 'conversations', conversationId), {\n        lastMessage: messageText,\n        lastMessageTime: serverTimestamp(),\n        [`unreadCount.${currentConversation.buyerId}`]: (currentConversation.unreadCount?.[currentConversation.buyerId] || 0) + 1,\n        updatedAt: serverTimestamp()\n      });\n    } catch (error) {\n      console.error('Error sending message:', error);\n      toast.error('Failed to send message');\n      setNewMessage(messageText); // Restore the message if sending fails\n    }\n  };\n\n  const handleEditMessage = async (messageId, newText) => {\n    if (!newText.trim()) return;\n    \n    try {\n      await updateDoc(doc(db, 'messages', messageId), {\n        text: newText.trim(),\n        edited: true,\n        editedAt: serverTimestamp()\n      });\n    } catch (error) {\n      console.error('Error editing message:', error);\n      toast.error('Failed to edit message');\n    }\n  };\n\n  const handleDeleteMessage = async (messageId) => {\n    try {\n      await deleteDoc(doc(db, 'messages', messageId));\n      toast.success('Message deleted');\n    } catch (error) {\n      console.error('Error deleting message:', error);\n      toast.error('Failed to delete message');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>\n        <div className=\"max-w-6xl mx-auto p-4\">\n          <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-xl shadow-sm overflow-hidden`}>\n            <LoadingSkeleton />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-gradient-to-br from-gray-50 to-pink-50/30'}`}>\n      <div className=\"max-w-6xl mx-auto p-4\">\n        <div className={`${isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-100'} rounded-2xl shadow-sm border overflow-hidden backdrop-blur-xl`}>\n          <div className=\"grid grid-cols-12\">\n            {/* Conversations List */}\n            <div className={`col-span-4 border-r ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n              <div className={`p-6 border-b ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n                <h2 className={`text-xl font-semibold ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>Customer Messages</h2>\n              </div>\n              <div className=\"overflow-y-auto h-[calc(100vh-12rem)] scrollbar-thin scrollbar-thumb-gray-200 scrollbar-track-gray-50\">\n                {conversations.map((conversation) => (\n                  <button\n                    key={conversation.id}\n                    onClick={() => navigate(`/merch-store/seller/inbox/${conversation.id}`)}\n                    className={`w-full p-6 border-b ${isDarkMode ? 'border-gray-700 hover:bg-gray-700/50' : 'border-gray-100 hover:bg-gray-50/80'} transition-all ${\n                      conversation.id === conversationId ? isDarkMode ? 'bg-gray-700/50' : 'bg-gray-50/80' : ''\n                    }`}\n                  >\n                    <div className=\"flex justify-between items-start\">\n                      <div className=\"min-w-0 flex-1\">\n                        <div className=\"flex items-center gap-1.5 mb-1\">\n                          <h3 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-800'} truncate ${\n                            conversation.unreadCount?.[user.sellerId] > 0 ? 'font-bold' : ''\n                          }`}>\n                            {conversation.buyerName}\n                          </h3>\n                        </div>\n                        <p className={`text-sm truncate ${\n                          conversation.unreadCount?.[user.sellerId] > 0 \n                            ? isDarkMode ? 'text-gray-100 font-medium' : 'text-gray-900 font-medium'\n                            : isDarkMode ? 'text-gray-400' : 'text-gray-500'\n                        }`}>\n                          {conversation.lastMessage || 'No messages yet'}\n                        </p>\n                        {conversation.unreadCount?.[user.sellerId] > 0 && (\n                          <div className=\"mt-1 text-xs text-[#FF1B6B]\">\n                            {conversation.unreadCount[user.sellerId]} new {conversation.unreadCount[user.sellerId] === 1 ? 'message' : 'messages'}\n                          </div>\n                        )}\n                      </div>\n                      {conversation.unreadCount?.[user.sellerId] > 0 && (\n                        <span className=\"bg-[#FF1B6B] text-white text-xs px-2.5 py-1.5 rounded-full ml-3 shrink-0\">\n                          {conversation.unreadCount[user.sellerId]}\n                        </span>\n                      )}\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Messages Area */}\n            <div className={`col-span-8 ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n              {currentConversation ? (\n                <>\n                  {/* Chat Header */}\n                  <div className={`p-6 border-b ${isDarkMode ? 'border-gray-700 bg-gray-800/80' : 'border-gray-100 bg-white/80'} backdrop-blur-sm`}>\n                    <div className=\"flex items-center gap-3\">\n                      <button \n                        onClick={() => navigate(-1)}\n                        className={`md:hidden ${isDarkMode ? 'hover:text-[#FF1B6B]' : 'hover:text-[#FF1B6B]'} transition-colors`}\n                      >\n                        <BiArrowBack className=\"text-xl\" />\n                      </button>\n                      <h3 className={`font-medium ${isDarkMode ? 'text-gray-100' : 'text-gray-800'}`}>\n                        {currentConversation.buyerName}\n                      </h3>\n                    </div>\n                  </div>\n\n                  {/* Messages */}\n                  <div className=\"p-6 overflow-y-auto h-[calc(100vh-16rem)] no-scrollbar\">\n                    {messages.map((message) => (\n                      <Message\n                        key={message.id}\n                        message={message}\n                        currentUser={user}\n                        onEdit={handleEditMessage}\n                        onDelete={handleDeleteMessage}\n                      />\n                    ))}\n                    <div ref={messagesEndRef} />\n                  </div>\n\n                  {/* Message Input */}\n                  <form onSubmit={handleSendMessage} className={`p-4 border-t ${isDarkMode ? 'border-gray-700' : 'border-gray-100'}`}>\n                    <div className=\"flex gap-2\">\n                      <input\n                        type=\"text\"\n                        value={newMessage}\n                        onChange={(e) => setNewMessage(e.target.value)}\n                        placeholder=\"Type a message...\"\n                        className={`flex-1 px-4 py-3 border rounded-xl focus:outline-none focus:border-[#FF1B6B] focus:ring-1 focus:ring-[#FF1B6B] transition-all ${\n                          isDarkMode ? 'bg-gray-700 border-gray-600 text-gray-100 placeholder-gray-400' : 'border-gray-200 text-gray-900'\n                        }`}\n                      />\n                      <button\n                        type=\"submit\"\n                        className=\"px-5 py-3 bg-[#FF1B6B] text-white rounded-xl hover:bg-[#D4145A] transition-colors\"\n                      >\n                        <BiSend className=\"text-xl\" />\n                      </button>\n                    </div>\n                  </form>\n                </>\n              ) : (\n                <div className=\"h-full flex flex-col items-center justify-center text-gray-500\">\n                  <div className={`w-16 h-16 mb-4 ${isDarkMode ? 'text-gray-600' : 'text-gray-300'}`}>\n                    <BiMessageDetail className=\"w-full h-full\" />\n                  </div>\n                  <p className={isDarkMode ? 'text-gray-400' : 'text-gray-500'}>Select a conversation to start messaging</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SellerInbox; ","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { BiDollarCircle, BiPackage, BiUser, BiTrendingUp, BiHistory, BiWallet, BiSearch, BiChevronLeft, BiChevronRight, BiChevronDown } from 'react-icons/bi';\nimport { collection, query, getDocs, orderBy, where } from 'firebase/firestore';\nimport { db } from '../../firebase/merchConfig';\nimport { toast } from 'react-hot-toast';\n\nconst StatCard = ({ title, value, icon: Icon, trend, subtitle, secondaryValue }) => (\n  <motion.div\n    whileHover={{ y: -3 }}\n    className=\"bg-white dark:bg-gray-800 p-4 rounded-2xl shadow-sm\"\n  >\n    <div className=\"flex items-start justify-between\">\n      <div>\n        <p className=\"text-sm text-gray-500 dark:text-gray-400\">{title}</p>\n        <p className=\"text-xl font-bold text-gray-900 dark:text-white mt-1\">{value}</p>\n        {trend && (\n          <div className=\"flex items-center gap-1 mt-1\">\n            <BiTrendingUp className=\"text-emerald-500 w-4 h-4\" />\n            <span className=\"text-xs text-emerald-500\">{trend}% from last month</span>\n          </div>\n        )}\n        {secondaryValue && (\n          <p className=\"text-xs text-red-500 mt-1\">Refunds: {secondaryValue}</p>\n        )}\n        {subtitle && (\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">{subtitle}</p>\n        )}\n      </div>\n      <div className=\"p-2 bg-pink-50 dark:bg-pink-900/20 rounded-lg\">\n        <Icon className=\"w-5 h-5 text-[#FF1B6B]\" />\n      </div>\n    </div>\n  </motion.div>\n);\n\nconst StoresRevenue = () => {\n  const [loading, setLoading] = useState(false);\n  const [stores, setStores] = useState([]);\n  const [filteredStores, setFilteredStores] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(null);\n  const [withdrawalHistory, setWithdrawalHistory] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isWithdrawalVisible, setIsWithdrawalVisible] = useState(true);\n  const storesPerPage = 5;\n\n  useEffect(() => {\n    fetchStoresData();\n    fetchAllWithdrawals();\n  }, []);\n\n  useEffect(() => {\n    // Filter stores based on search term\n    const filtered = stores.filter(store => \n      store.storeName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      store.id.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    // Sort stores by all-time revenue in descending order\n    const sortedStores = filtered.sort((a, b) => b.metrics.allTimeRevenue - a.metrics.allTimeRevenue);\n    setFilteredStores(sortedStores);\n    setCurrentPage(1); // Reset to first page when search changes\n  }, [searchTerm, stores]);\n\n  const fetchStoresData = async () => {\n    try {\n      // Fetch all sellers\n      const sellersQuery = query(collection(db, 'sellers'), orderBy('storeName'));\n      const sellersSnapshot = await getDocs(sellersQuery);\n      const sellersData = sellersSnapshot.docs.map(doc => {\n        const data = doc.data();\n        // Ensure country data is properly formatted\n        const country = data.country || {};\n        if (typeof country === 'string') {\n          // If country is just a string, convert it to proper format\n          return {\n            id: doc.id,\n            ...data,\n            country: {\n              code: country.trim().toLowerCase().slice(0, 2),\n              name: country\n            }\n          };\n        } else if (country.code) {\n          // If country is an object with code, ensure it's properly formatted\n          return {\n            id: doc.id,\n            ...data,\n            country: {\n              ...country,\n              code: country.code.trim().toLowerCase()\n            }\n          };\n        }\n        return {\n          id: doc.id,\n          ...data\n        };\n      });\n\n      // For each seller, fetch their orders and withdrawals\n      const storesWithMetrics = await Promise.all(sellersData.map(async (seller) => {\n        const now = new Date();\n        const firstDayThisMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n        const firstDayLastMonth = new Date(now.getFullYear(), now.getMonth() - 1, 1);\n        const lastDayLastMonth = new Date(now.getFullYear(), now.getMonth(), 0);\n\n        // Fetch orders\n        const ordersQuery = query(\n          collection(db, 'orders'),\n          where('sellerId', '==', seller.id)\n        );\n        const ordersSnapshot = await getDocs(ordersQuery);\n        const orders = ordersSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n\n        // Fetch withdrawals\n        const withdrawalsQuery = query(\n          collection(db, 'withdrawals'),\n          where('sellerId', '==', seller.id)\n        );\n        const withdrawalsSnapshot = await getDocs(withdrawalsQuery);\n        const withdrawals = withdrawalsSnapshot.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n            createdAt: data.requestedAt ? new Date(data.requestedAt) : null\n          };\n        });\n\n        // Sort withdrawals by date\n        withdrawals.sort((a, b) => {\n          const dateA = a.createdAt?.toDate?.() || new Date(a.createdAt || 0);\n          const dateB = b.createdAt?.toDate?.() || new Date(b.createdAt || 0);\n          return dateB - dateA;\n        });\n\n        // Calculate completed and pending withdrawals\n        const withdrawalsByStatus = withdrawals.reduce((acc, withdrawal) => {\n          if (withdrawal.status === 'completed') {\n            acc.completed += withdrawal.amount || 0;\n          } else if (withdrawal.status === 'pending') {\n            acc.pending += withdrawal.amount || 0;\n          }\n          return acc;\n        }, { completed: 0, pending: 0 });\n\n        // Calculate metrics\n        const thisMonthOrders = orders.filter(order => {\n          const orderDate = order.createdAt?.toDate?.() || new Date(order.createdAt || 0);\n          return orderDate >= firstDayThisMonth;\n        });\n\n        const lastMonthOrders = orders.filter(order => {\n          const orderDate = order.createdAt?.toDate?.() || new Date(order.createdAt || 0);\n          return orderDate >= firstDayLastMonth && orderDate <= lastDayLastMonth;\n        });\n\n        const validOrders = orders.filter(order => order.status !== 'cancelled');\n        const grossRevenue = validOrders.reduce((sum, order) => {\n          // If order is refunded, don't include it in revenue\n          if (order.status === 'refunded') {\n            return sum;\n          }\n          return sum + (order.total || 0);\n        }, 0);\n\n        // All time revenue is just the gross revenue (total earned)\n        const allTimeRevenue = grossRevenue;\n\n        // Net revenue is gross revenue minus completed withdrawals\n        const netRevenue = grossRevenue - withdrawalsByStatus.completed;\n\n        const uniqueCustomers = new Set(validOrders.map(order => order.buyerId)).size;\n\n        // Calculate percentage changes\n        const calculatePercentageChange = (current, previous) => {\n          if (previous === 0) return current > 0 ? 100 : 0;\n          return ((current - previous) / previous) * 100;\n        };\n\n        const thisMonthRevenue = thisMonthOrders.reduce((sum, order) => {\n          return order.status !== 'refunded' && order.status !== 'cancelled' \n            ? sum + (order.total || 0) : sum;\n        }, 0);\n\n        const lastMonthRevenue = lastMonthOrders.reduce((sum, order) => {\n          return order.status !== 'refunded' && order.status !== 'cancelled'\n            ? sum + (order.total || 0) : sum;\n        }, 0);\n\n        return {\n          ...seller,\n          metrics: {\n            allTimeRevenue: allTimeRevenue, // Total earned (without withdrawals)\n            totalWithdrawn: withdrawalsByStatus.completed, // Total amount withdrawn\n            pendingWithdrawals: withdrawalsByStatus.pending, // Pending withdrawals\n            netRevenue: netRevenue, // Available for withdrawal (gross - withdrawn)\n            totalOrders: orders.length,\n            totalCustomers: uniqueCustomers,\n            revenueChange: parseFloat(calculatePercentageChange(thisMonthRevenue, lastMonthRevenue).toFixed(1)),\n            ordersChange: parseFloat(calculatePercentageChange(thisMonthOrders.length, lastMonthOrders.length).toFixed(1)),\n            customersChange: parseFloat(calculatePercentageChange(\n              new Set(thisMonthOrders.map(order => order.buyerId)).size,\n              new Set(lastMonthOrders.map(order => order.buyerId)).size\n            ).toFixed(1))\n          },\n          withdrawalHistory: withdrawals.sort((a, b) => \n            (b.requestedAt || 0) - (a.requestedAt || 0)\n          ).map(withdrawal => ({\n            id: withdrawal.id,\n            amount: withdrawal.amount || 0,\n            status: withdrawal.status,\n            createdAt: withdrawal.requestedAt ? new Date(withdrawal.requestedAt) : null,\n            network: withdrawal.network,\n            walletAddress: withdrawal.walletAddress\n          }))\n        };\n      }));\n\n      setStores(storesWithMetrics);\n    } catch (error) {\n      console.error('Error fetching stores data:', error);\n      toast.error('Failed to load stores data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchAllWithdrawals = async () => {\n    try {\n      const withdrawalsQuery = query(\n        collection(db, 'withdrawals'),\n        orderBy('requestedAt', 'desc')\n      );\n      const withdrawalsSnapshot = await getDocs(withdrawalsQuery);\n      const withdrawals = withdrawalsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        createdAt: doc.data().requestedAt ? new Date(doc.data().requestedAt) : null\n      }));\n      setWithdrawalHistory(withdrawals);\n    } catch (error) {\n      console.error('Error fetching withdrawal history:', error);\n      toast.error('Failed to load withdrawal history');\n    }\n  };\n\n  // Get current stores for pagination\n  const indexOfLastStore = currentPage * storesPerPage;\n  const indexOfFirstStore = indexOfLastStore - storesPerPage;\n  const currentStores = filteredStores.slice(indexOfFirstStore, indexOfLastStore);\n  const totalPages = Math.ceil(filteredStores.length / storesPerPage);\n\n  const paginate = (pageNumber) => {\n    if (pageNumber > 0 && pageNumber <= totalPages) {\n      setCurrentPage(pageNumber);\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Stores Revenue</h1>\n        <div className=\"relative\">\n          <input\n            type=\"text\"\n            placeholder=\"Search stores...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"pl-10 pr-4 py-2 border border-gray-200 dark:border-gray-700 rounded-lg w-64 focus:outline-none focus:ring-2 focus:ring-pink-100 focus:border-[#FF1B6B] bg-white dark:bg-gray-800 text-gray-900 dark:text-white\"\n          />\n          <BiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n        </div>\n      </div>\n      \n      {/* Stores List */}\n      <div className=\"grid gap-6 mb-6\">\n        {currentStores.map(store => (\n          <div \n            key={store.id}\n            className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-sm hover:shadow-md transition-shadow\"\n          >\n            <div className=\"flex justify-between items-start mb-4\">\n              <div>\n                <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">{store.storeName}</h2>\n                <div className=\"flex items-center gap-2\">\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">Store ID: {store.id}</p>\n                  {store.country?.code && (\n                    <img \n                      src={`https://flagcdn.com/${store.country.code.toLowerCase()}.svg`}\n                      alt={store.country.name || \"Store country flag\"}\n                      className=\"w-3.5 h-2.5 object-cover rounded-[2px] shadow-sm\"\n                    />\n                  )}\n                </div>\n              </div>\n              <span className={`px-3 py-1 rounded-full text-sm ${\n                store.verificationStatus === 'approved' \n                  ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300' \n                  : 'bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-300'\n              }`}>\n                {store.verificationStatus === 'approved' ? 'Verified' : 'Unverified'}\n              </span>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <StatCard\n                title=\"All Time Revenue\"\n                value={`$${store.metrics.allTimeRevenue.toFixed(2)}`}\n                icon={BiDollarCircle}\n                subtitle={\n                  <span className=\"flex items-center gap-1\">\n                    <span>Withdrawn: ${store.metrics.totalWithdrawn.toFixed(2)}</span>\n                    {store.metrics.pendingWithdrawals > 0 && (\n                      <span className=\"text-yellow-600\">\n                        (-${store.metrics.pendingWithdrawals.toFixed(2)} pending)\n                      </span>\n                    )}\n                  </span>\n                }\n              />\n              <StatCard\n                title=\"Net Revenue\"\n                value={`$${store.metrics.netRevenue.toFixed(2)}`}\n                icon={BiDollarCircle}\n                trend={store.metrics.revenueChange}\n              />\n              <StatCard\n                title=\"Total Orders\"\n                value={store.metrics.totalOrders}\n                icon={BiPackage}\n                trend={store.metrics.ordersChange}\n              />\n              <StatCard\n                title=\"Total Customers\"\n                value={store.metrics.totalCustomers}\n                icon={BiUser}\n                trend={store.metrics.customersChange}\n              />\n            </div>\n\n            {/* Withdrawal History */}\n            <div className=\"mt-6\">\n              <button \n                onClick={(e) => {\n                  e.stopPropagation(); // Prevent store card click\n                  setSelectedStore(selectedStore === store.id ? null : store.id);\n                }}\n                className=\"w-full flex items-center justify-between mb-4 text-gray-900 dark:text-white hover:text-[#FF1B6B] dark:hover:text-[#FF1B6B] transition-colors\"\n              >\n                <div className=\"flex items-center gap-2\">\n                  <BiHistory className=\"w-5 h-5\" />\n                  <h3 className=\"text-lg font-semibold\">Withdrawal History</h3>\n                </div>\n                <BiChevronDown \n                  className={`w-5 h-5 transition-transform duration-200 ${\n                    selectedStore === store.id ? 'rotate-180' : ''\n                  }`} \n                />\n              </button>\n\n              <AnimatePresence>\n                {selectedStore === store.id && (\n                  <motion.div\n                    initial={{ height: 0, opacity: 0 }}\n                    animate={{ height: \"auto\", opacity: 1 }}\n                    exit={{ height: 0, opacity: 0 }}\n                    transition={{ duration: 0.2 }}\n                    className=\"overflow-hidden\"\n                  >\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"w-full\">\n                        <thead>\n                          <tr className=\"text-left text-sm text-gray-500 dark:text-gray-400 border-b border-gray-200 dark:border-gray-700\">\n                            <th className=\"px-4 py-3\">Store Name</th>\n                            <th className=\"px-4 py-3\">Date</th>\n                            <th className=\"px-4 py-3\">Amount</th>\n                            <th className=\"px-4 py-3\">Token</th>\n                            <th className=\"px-4 py-3\">Network</th>\n                            <th className=\"px-4 py-3\">Wallet Address</th>\n                            <th className=\"px-4 py-3\">Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                          {store.withdrawalHistory.map(withdrawal => (\n                            <tr key={withdrawal.id} className=\"text-sm hover:bg-gray-50 dark:hover:bg-gray-700/50\">\n                              <td className=\"px-4 py-3 font-medium text-gray-900 dark:text-white\">{store.storeName}</td>\n                              <td className=\"px-4 py-3 text-gray-700 dark:text-gray-300\">\n                                {withdrawal.createdAt ? \n                                  (withdrawal.createdAt?.toDate?.() || new Date(withdrawal.createdAt)).toLocaleString('en-US', {\n                                    year: 'numeric',\n                                    month: 'short',\n                                    day: 'numeric',\n                                    hour: '2-digit',\n                                    minute: '2-digit'\n                                  })\n                                  : 'No date available'\n                                }\n                              </td>\n                              <td className=\"px-4 py-3 text-gray-700 dark:text-gray-300\">${withdrawal.amount.toFixed(2)}</td>\n                              <td className=\"px-4 py-3\">\n                                <div className=\"flex items-center gap-2\">\n                                  {withdrawal.token === 'USDC' ? (\n                                    <img \n                                      src=\"/usdc.png\"\n                                      alt=\"USDC\"\n                                      className=\"w-4 h-4 object-contain\"\n                                    />\n                                  ) : (\n                                    <img \n                                      src=\"/usdt.png\"\n                                      alt=\"USDT\"\n                                      className=\"w-4 h-4 object-contain\"\n                                    />\n                                  )}\n                                  <span className=\"text-gray-700 dark:text-gray-300\">\n                                    {withdrawal.token || 'USDT'}\n                                  </span>\n                                </div>\n                              </td>\n                              <td className=\"px-4 py-3\">\n                                <div className=\"flex items-center gap-2\">\n                                  {withdrawal.network === 'polygon' ? (\n                                    <img \n                                      src=\"/polygon.png\"\n                                      alt=\"Polygon\"\n                                      className=\"w-4 h-4 object-contain\"\n                                    />\n                                  ) : withdrawal.network === 'unichain' ? (\n                                    <img \n                                      src=\"/unichain-logo.png\"\n                                      alt=\"Unichain\"\n                                      className=\"w-4 h-4 object-contain\"\n                                    />\n                                  ) : null}\n                                  <span className=\"text-gray-700 dark:text-gray-300\">\n                                    {withdrawal.network}\n                                  </span>\n                                </div>\n                              </td>\n                              <td className=\"px-4 py-3\">\n                                <div className=\"flex items-center gap-2\">\n                                  <BiWallet className=\"w-4 h-4 text-[#FF1B6B]\" />\n                                  <span className=\"font-mono text-xs text-gray-700 dark:text-gray-300\">\n                                    {withdrawal.walletAddress.slice(0, 6)}...{withdrawal.walletAddress.slice(-4)}\n                                  </span>\n                                </div>\n                              </td>\n                              <td className=\"px-4 py-3\">\n                                <span className={`px-2 py-1 rounded-full text-xs ${\n                                  withdrawal.status === 'completed'\n                                    ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300'\n                                    : 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-300'\n                                }`}>\n                                  {withdrawal.status}\n                                </span>\n                              </td>\n                            </tr>\n                          ))}\n                          {store.withdrawalHistory.length === 0 && (\n                            <tr>\n                              <td colSpan=\"7\" className=\"px-4 py-3 text-center text-gray-500 dark:text-gray-400\">\n                                No withdrawal history\n                              </td>\n                            </tr>\n                          )}\n                        </tbody>\n                      </table>\n                    </div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Pagination with dark mode support */}\n      {totalPages > 1 && (\n        <div className=\"flex justify-center items-center gap-2 mt-6\">\n          <button\n            onClick={() => paginate(currentPage - 1)}\n            disabled={currentPage === 1}\n            className={`p-2 rounded-lg ${\n              currentPage === 1\n                ? 'text-gray-400 dark:text-gray-600 cursor-not-allowed'\n                : 'text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700'\n            }`}\n          >\n            <BiChevronLeft className=\"w-5 h-5\" />\n          </button>\n          \n          {Array.from({ length: totalPages }, (_, i) => i + 1).map(number => (\n            <button\n              key={number}\n              onClick={() => paginate(number)}\n              className={`w-8 h-8 rounded-lg text-sm font-medium ${\n                currentPage === number\n                  ? 'bg-[#FF1B6B] text-white'\n                  : 'text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700'\n              }`}\n            >\n              {number}\n            </button>\n          ))}\n\n          <button\n            onClick={() => paginate(currentPage + 1)}\n            disabled={currentPage === totalPages}\n            className={`p-2 rounded-lg ${\n              currentPage === totalPages\n                ? 'text-gray-400 dark:text-gray-600 cursor-not-allowed'\n                : 'text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700'\n            }`}\n          >\n            <BiChevronRight className=\"w-5 h-5\" />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StoresRevenue; ","import { createBrowserRouter, Navigate, useLocation } from 'react-router-dom';\nimport { useMerchAuth } from './context/MerchAuthContext';\nimport App from './App';\nimport Dashboard from './components/Dashboard';\nimport CollectionsList from './components/CollectionsList';\nimport CollectionPage from './components/CollectionPage';\nimport HistoryPage from './pages/HistoryPage';\nimport AccountPage from './pages/AccountPage';\nimport ActivityPage from './pages/ActivityPage';\nimport BridgePage from './pages/bridge';\nimport Login from './pages/merch/Login';\nimport Signup from './pages/merch/Signup';\nimport BecomeSeller from './pages/merch/BecomeSeller';\nimport ProtectedRoute from './components/merch/ProtectedRoute';\nimport MerchStoreLayout from './components/merch/MerchStoreLayout';\nimport SellerDashboard from './pages/merch/SellerDashboard';\nimport AddProduct from './pages/merch/AddProduct';\nimport Products from './pages/merch/Products';\nimport EditProduct from './pages/merch/EditProduct';\nimport MerchSales from './pages/merch/Sales';\nimport OrdersReceived from './pages/merch/OrdersReceived';\nimport Settings from './pages/merch/Settings';\nimport Browse from './pages/merch/Browse';\nimport ProductDetails from './pages/merch/ProductDetails';\nimport Cart from './pages/merch/Cart';\nimport Orders from './pages/merch/Orders';\nimport Checkout from './pages/merch/Checkout';\nimport AdminLayout from './components/admin/AdminLayout';\nimport AdminDashboard from './pages/admin/AdminDashboard';\nimport AdminWithdrawals from './pages/admin/AdminWithdrawals';\nimport AdminSales from './pages/admin/AdminSales';\nimport AdminSettings from './pages/admin/AdminSettings';\nimport AdminRefunds from './pages/admin/AdminRefunds';\nimport StoreVerification from './pages/admin/StoreVerification';\nimport SellerRefunds from './pages/merch/SellerRefunds';\nimport Refunds from './pages/merch/Refunds';\nimport TermsAndConditions from './pages/merch/TermsAndConditions';\nimport ForgotPassword from './pages/merch/ForgotPassword';\nimport ResetPassword from './pages/merch/ResetPassword';\nimport Inbox from './pages/merch/Inbox';\nimport SellerInbox from './pages/merch/SellerInbox';\nimport StoresRevenue from './pages/admin/StoresRevenue';\nimport FeesTracker from './pages/FeesTracker';\nimport MemeFactory from './pages/MemeFactory';\n\nconst ADMIN_WALLET = \"0x5828D525fe00902AE22f2270Ac714616651894fF\"; // We'll replace this with your actual address\n\nfunction AdminRoute({ children }) {\n  const { isAdmin, loading } = useMerchAuth();\n  const location = useLocation();\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!isAdmin) {\n    return <Navigate to=\"/merch-store\" state={{ from: location }} replace />;\n  }\n\n  return children;\n}\n\n// Add this new component for conditional inbox rendering\nconst InboxRouter = () => {\n  const { user } = useMerchAuth();\n  return user?.isSeller ? <SellerInbox /> : <Inbox />;\n};\n\nexport const router = createBrowserRouter([\n  // Main app routes\n  {\n    path: '/',\n    element: <App />,\n    children: [\n      {\n        index: true,\n        element: <Dashboard />,\n      },\n      {\n        path: '/collections',\n        element: <CollectionsList />,\n      },\n      {\n        path: '/collection/:symbol',\n        element: <CollectionPage />,\n      },\n      {\n        path: '/history',\n        element: <HistoryPage />,\n      },\n      {\n        path: '/account',\n        element: <AccountPage />,\n      },\n      {\n        path: '/trading',\n        element: <ActivityPage />,\n      },\n      {\n        path: '/bridge',\n        element: <BridgePage />,\n      },\n      {\n        path: '/feestracker',\n        element: <FeesTracker />,\n      },\n      {\n        path: '/memefactory',\n        element: <MemeFactory />,\n      },\n    ],\n  },\n  // Add redirect for /login\n  {\n    path: '/login',\n    element: <Navigate to=\"/merch-store/login\" replace />\n  },\n  // Add redirect for /signup\n  {\n    path: '/signup',\n    element: <Navigate to=\"/merch-store/signup\" replace />\n  },\n  // Merch store routes with their own layout\n  {\n    path: '/merch-store',\n    element: <MerchStoreLayout />,\n    children: [\n      {\n        path: '',\n        element: <Browse />\n      },\n      {\n        path: 'product/:id',\n        element: <ProductDetails />\n      },\n      {\n        path: 'login',\n        element: <Login />,\n      },\n      {\n        path: 'signup',\n        element: <Signup />,\n      },\n      {\n        path: 'become-seller',\n        element: <BecomeSeller />,\n      },\n      {\n        path: 'cart',\n        element: (\n          <ProtectedRoute>\n            <Cart />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'checkout',\n        element: (\n          <ProtectedRoute>\n            <Checkout />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'orders',\n        element: (\n          <ProtectedRoute>\n            <Orders />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'dashboard',\n        element: (\n          <ProtectedRoute sellerOnly>\n            <SellerDashboard />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'products',\n        element: (\n          <ProtectedRoute sellerOnly>\n            <Products />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'add-product',\n        element: (\n          <ProtectedRoute sellerOnly>\n            <AddProduct />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'edit-product/:id',\n        element: (\n          <ProtectedRoute sellerOnly>\n            <EditProduct />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'sales',\n        element: (\n          <ProtectedRoute sellerOnly>\n            <MerchSales />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'orders-received',\n        element: (\n          <ProtectedRoute sellerOnly>\n            <OrdersReceived />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'my-refunds',\n        element: (\n          <ProtectedRoute>\n            <Refunds />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'refunds',\n        element: (\n          <ProtectedRoute sellerOnly>\n            <SellerRefunds />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'settings',\n        element: (\n          <ProtectedRoute>\n            <Settings />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'terms',\n        element: <TermsAndConditions />,\n      },\n      {\n        path: 'forgot-password',\n        element: <ForgotPassword />,\n      },\n      {\n        path: 'reset-password',\n        element: <ResetPassword />,\n      },\n      {\n        path: 'inbox',\n        element: (\n          <ProtectedRoute>\n            <InboxRouter />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'inbox/:conversationId',\n        element: (\n          <ProtectedRoute>\n            <InboxRouter />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'seller/inbox',\n        element: (\n          <ProtectedRoute sellerOnly>\n            <SellerInbox />\n          </ProtectedRoute>\n        ),\n      },\n      {\n        path: 'seller/inbox/:conversationId',\n        element: (\n          <ProtectedRoute sellerOnly>\n            <SellerInbox />\n          </ProtectedRoute>\n        ),\n      },\n    ],\n  },\n  // Admin Routes\n  {\n    path: '/admin',\n    element: <AdminRoute><AdminLayout /></AdminRoute>,\n    children: [\n      {\n        index: true,\n        element: <AdminRoute><AdminDashboard /></AdminRoute>,\n      },\n      {\n        path: 'withdrawals',\n        element: <AdminRoute><AdminWithdrawals /></AdminRoute>,\n      },\n      {\n        path: 'store-verification',\n        element: <AdminRoute><StoreVerification /></AdminRoute>,\n      },\n      {\n        path: 'refunds',\n        element: <AdminRoute><AdminRefunds /></AdminRoute>,\n      },\n      {\n        path: 'sales',\n        element: <AdminRoute><AdminSales /></AdminRoute>,\n      },\n      {\n        path: 'settings',\n        element: <AdminRoute><AdminSettings /></AdminRoute>,\n      },\n      {\n        path: 'stores-revenue',\n        element: <StoresRevenue />\n      },\n    ],\n  },\n]); ","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { RouterProvider } from 'react-router-dom';\nimport { WagmiConfig } from 'wagmi';\nimport { wagmiConfig } from './config/wagmi';\nimport { ThemeProvider } from './context/ThemeContext';\nimport { MerchAuthProvider } from './context/MerchAuthContext';\nimport { router } from './router';\nimport './index.css';\n\n// If no provider is available, inject a dummy provider to prevent errors\nif (!window.ethereum) {\n  window.ethereum = {\n    isMetaMask: false,\n    request: () => Promise.reject(new Error('No crypto wallet found. Please install MetaMask or another Web3 wallet.')),\n    on: (eventName, callback) => {\n      // Return a no-op function for cleanup\n      return () => {};\n    },\n    removeListener: () => {},\n    autoRefreshOnNetworkChange: false,\n    chainId: null,\n    networkVersion: null,\n    selectedAddress: null,\n    isConnected: () => false,\n    enable: () => Promise.reject(new Error('No crypto wallet found. Please install MetaMask or another Web3 wallet.')),\n    sendAsync: () => Promise.reject(new Error('No crypto wallet found')),\n    send: () => Promise.reject(new Error('No crypto wallet found')),\n    addListener: () => {},\n    removeAllListeners: () => {},\n    providers: [],\n    isEIP1193: true,\n  };\n}\n\nfunction Root() {\n  return (\n    <WagmiConfig config={wagmiConfig}>\n      <ThemeProvider>\n        <MerchAuthProvider>\n          <RouterProvider router={router} />\n        </MerchAuthProvider>\n      </ThemeProvider>\n    </WagmiConfig>\n  );\n}\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>\n);"],"names":["ThemeContext","createContext","ThemeProvider","children","isDarkMode","setIsDarkMode","useState","savedMode","useEffect","value","jsx","useTheme","context","useContext","isDevelopment","firebaseConfig","app","initializeApp","auth","getAuth","db","getFirestore","storage","getStorage","getAnalytics","googleProvider","GoogleAuthProvider","MerchAuthContext","MerchAuthProvider","user","setUser","loading","setLoading","isAdmin","setIsAdmin","cartCount","setCartCount","unsubscribe","onAuthStateChanged","authUser","userRef","doc","userDoc","getDoc","userData","userObj","fetchCartCount","userId","q","query","collection","where","querySnapshot","getDocs","error","email","password","createUserWithEmailAndPassword","setDoc","signOut","signInWithEmailAndPassword","signInWithPopup","toast","sendPasswordResetEmail","useMerchAuth","AdminLayout","location","useLocation","theme","setTheme","React","toggleTheme","isActive","path","navItems","FiGrid","FiCreditCard","FiRefreshCcw","FiDollarSign","FiBarChart2","FiCheckCircle","FiSettings","jsxs","FiSun","FiMoon","item","Link","Outlet","ADMIN_WALLET","AdminDashboard","walletConnected","setWalletConnected","walletAddress","setWalletAddress","searchTerm","setSearchTerm","selectedStore","setSelectedStore","stats","setStats","orderViewType","setOrderViewType","currentPage","setCurrentPage","hasMore","setHasMore","loadingMore","setLoadingMore","ordersPerPage","getUniqueStores","stores","order","filteredOrders","useMemo","matchesSearch","matchesStore","loadMoreOrders","lastOrder","ordersQuery","orderBy","startAfter","limit","ordersSnapshot","newOrders","orderData","sellerQuery","sellerSnapshot","sellerData","prev","handleScroll","e","scrollTop","clientHeight","scrollHeight","provider","detectEthereumProvider","accounts","handleConnectWallet","fetchDashboardData","sellersQuery","sellersSnapshot","withdrawalsQuery","withdrawalsSnapshot","sellersMap","data","processedOrders","validOrders","activeOrders","refundedOrders","totalSales","sum","totalRefunds","currentPlatformFees","totalPlatformFees","withdrawnFees","sellerWithdrawals","withdrawal","sellerId","sellerStats","sellerName","withdrawals","currentSales","seller","topSellers","a","b","productsQuery","totalProducts","salesByNetwork","FiTrendingUp","FiUsers","FiShoppingBag","index","store","FiList","Navigate","useWallet","address","isConnected","useAccount","chain","useNetwork","publicClient","usePublicClient","walletClient","useWalletClient","NETWORK_NAMES","SUPPORTED_TOKENS","ABI","getContractAddress","chainId","envKey","__vite_import_meta_env__","getMerchPlatformContract","ethers.isAddress","contract","ethers.Contract","getTokenContract","tokenSymbol","tokenAddress","tokenABI","parseTokenAmount","amount","decimals","ethers.parseUnits","AdminSales","salesData","setSalesData","sellerSales","setSellerSales","timeFilter","setTimeFilter","fetchSalesData","orders","uniqueSellers","tokenSales","token","refundAmount","sellerDoc","flag","country","currentBalance","sellerOrders","sellerNonRefundedOrders","sellerRefundedOrders","totalBalance","calculatePeriodSales","days","now","cutoff","orderDate","isWithinPeriod","hasValidStatus","availableToWithdraw","FiAlertTriangle","FiRefreshCw","filter","safeData","VerificationCheckmark","SellerSkeleton","motion","_","i","ReviewSkeleton","StoreVerification","sellers","setSellers","selectedSeller","setSelectedSeller","reviews","setReviews","rejectionReason","setRejectionReason","showRejectModal","setShowRejectModal","selectedSellerId","setSelectedSellerId","viewMode","setViewMode","isLoadingReviews","setIsLoadingReviews","fetchSellers","formatTimestamp","timestamp","sellersRef","sellerIds","reviewsRef","reviewsQuery","reviewsSnapshot","reviewsBySeller","review","sellersData","sellerReviews","totalRating","avgRating","fetchSellerReviews","s","reviewsData","handleVerifyStore","approve","updateDoc","handleReject","filteredSellers","text","FiSearch","star","FaStar","FiX","Sidebar","onOpenModal","onOpenNFTModal","isCollapsed","setIsCollapsed","isMobileOpen","setIsMobileOpen","menuItems","BiCoin","RiPaintLine","HiOutlineHome","BsCollection","FaRocket","TbChartCandle","FaLink","BiStore","BsClockHistory","RiUserLine","BiHistory","socialLinks","FaTelegram","FaTwitter","FaDiscord","renderMenuItem","commonClasses","Fragment","FaChevronLeft","social","NetworkSelector","networkLoading","chains","isChangingNetwork","setIsChangingNetwork","handleError","ConnectButton","TOKENS","PriceTicker","prices","setPrices","fetchPrices","response","axios","formattedPrices","id","interval","coin","Header","BiSun","BiMoon","MAX_FILE_SIZE","ACCEPTED_IMAGE_TYPES","validateFile","file","fileType","uploadTokenLogo","formData","errorData","ipfsUrl","httpUrl","NFTCollectionABI","collectionsRef","tokenDeploymentsRef","mintsRef","holdersRef","saveCollection","collectionData","artwork","collectionDataWithoutFile","dataToSave","addDoc","getCollection","symbol","getAllCollections","filters","constraints","updateCollectionMinted","newTotalMinted","docRef","serverTimestamp","subscribeToCollection","callback","onSnapshot","snapshot","saveTokenDeployment","deployment","getTokenDeploymentsByWallet","getCollectionsByWallet","getRecentMints","collectionAddress","firestoreLimit","saveMintData","mintData","metadataUrl","sanitizedData","cleanData","holderRef","holderSnapshot","quantity","holderDoc","currentQuantity","getTokenDeploymentByAddress","getTokenDetails","getOwnedNFTs","mintsQuery","mints","collectionsSnapshot","collections","ownedNFTs","processedTokens","mint","baseEntry","tokenKey","getAllTokenDeployments","DeploymentsContext","DeploymentsProvider","deployments","setDeployments","nftDeployments","setNftDeployments","allDeployments","formattedNftDeployments","nft","addDeployment","timeA","useDeployments","PINATA_JWT","PINATA_API","IPFS_GATEWAY","uploadFileToIPFS","uploadMetadataToIPFS","metadata","metadataCopy","ipfsToHttp","tokenTransfersRef","ERC20_TRANSFER_ABI","activeListeners","processedTransactions","trackTokenTransfers","latestBlock","startBlock","events","event","txKey","block","transfer","existingQuery","listener","from","to","getTokenTransfersForAddress","sentQuery","receivedQuery","sentSnapshot","receivedSnapshot","sentTransfers","receivedTransfers","getNFTTransfersForAddress","style","Icons","CHAIN_IDS","FACTORY_ADDRESSES","CHAIN_FEES","NETWORK_CURRENCIES","ProgressModal","isOpen","onClose","currentStep","tokenName","deployedAddress","steps","currentStepIndex","step","formatErrorMessage","copyToClipboard","Transition","Dialog","Icon","isCompleted","isErrorStep","clsx","BiCopy","StarRatingModal","onRate","rating","setRating","hoveredRating","setHoveredRating","CreateTokenModal","account","currentChainId","setCurrentChainId","deployedTokenAddress","setDeployedTokenAddress","setFormData","previewLogo","setPreviewLogo","showProgressModal","setShowProgressModal","progressStep","setProgressStep","progressError","setProgressError","showConfetti","setShowConfetti","showRatingModal","setShowRatingModal","windowSize","setWindowSize","handleChange","handleLogoChange","getFactoryAddress","getFee","fee","currency","handleSuccess","eventData","logoUrls","getChainName","network","createToken","uploadError","signer","ethers.BrowserProvider","factoryAddress","factory","TokenFactoryABI","ethers.parseEther","gasSettings","receipt","tokenCreatedEvent","log","eventSignature","ethers.id","tokenEvent","tokenData","handleResize","BiX","BiImageAdd","BiWallet","Confetti","TOKEN_ADDRESSES","NFTFactoryABI","STAT_TRAITS","prepareAndUploadMetadata","artworkFile","tokenId","imageIpfsUrl","imageHttpUrl","attributes","attr","numericValue","isNumeric","trait_type","NFT_FACTORY_ADDRESSES","collectionName","isError","createPortal","STEPS","CREATION_FEES","AddressModal","addresses","onRemoveAddress","onUpdateAddress","handleModalClick","handleMintLimitChange","newValue","updatedAddresses","addr","finalValue","BiTrash","CreateNFTModal","navigate","useNavigate","openConnectModal","useConnectModal","setCurrentStep","newAddress","setNewAddress","isMintingTokenOpen","setIsMintingTokenOpen","setChainId","getAvailableTokens","FaEthereum","renderTokenSelection","availableTokens","selectedToken","t","BiChevronDown","updateFormData","getCreationFee","chainId2","ethers.JsonRpcProvider","formattedFee","ethers.formatEther","updates","handleFileChange","isVideo","isImage","maxSize","url","validateAddress","handleSubmit","networkChainId","signer2","actualFee","numericFee","paymentTokenAddress","getPaymentToken","maxPerWallet","parsedFee","expectedFee","parseEther","creationEvent","ethers.AbiCoder","nftContract","limits","handleFileUpload","type","input","jsonData","getAddressFromString","str","match","foundAddresses","found","process","line","workbook","XLSX.read","sheet","XLSX.utils","row","cell","validAddresses","renderStep","renderButtons","currentIndex","handleButtonClick","BiVideo","prop","newProps","handleWhitelistToggle","setShowAddressModal","BiListUl","handleAddAddress","FaFileCsv","FaFileExcel","FaFileCode","tokenAddresses","renderConnectPrompt","showAddressModal","handleRemoveAddress","newAddresses","handleUpdateWhitelist","setMaxPerWallet","checked","tokenFaqs","nftFaqs","FAQ","BiHelpCircle","Tab","selected","faq","UniswapVersionContext","UniswapVersionProvider","version","setVersion","explorers","getExplorerUrl","baseUrl","VOLUME_CACHE_DURATION","VolumeTracker","blockNumber","cached","volumes","lastBlock","UNISWAP_ADDRESSES","reserves","token0Address","token1Address","token0Decimals","token1Decimals","reserve0","ethers.formatUnits","reserve1","pairAddress","pairContract","cacheKey","cachedData","currentBlock","currentBlockData","blocksPerDay","oneDayBlocks","sevenDayBlocks","thirtyDayBlocks","swapFilter","oneDayEvents","sevenDayEvents","thirtyDayEvents","token0Price","calculateVolume","volume","eventVolume","amount0In","amount0Out","amount1In","amount1Out","volumeData","FACTORY_ABI","ROUTER_ABI","PAIR_ABI","ERC20_ABI","UniswapService","storedCache","pools","poolInfo","cacheData","pairCount","pairs","pair","token0","token1","pairError","tokenA","tokenB","amount0Desired","amount1Desired","isToken0ETH","isToken1ETH","actualToken0","actualToken1","amount0","amount1","router","token0Contract","token1Contract","existingPair","gasPrice","maxApproval","ethers.MaxUint256","approvalPromises","allowance0","allowance1","gas0","gas1","tx","finalAllowances","createPairGas","createPairTx","createPairReceipt","pairCreatedEvent","resolve","amount0Min","amount1Min","deadline","addLiquidityTx","ethAmount","tokenAmount","ethAmountMin","tokenAmountMin","addLiquidityReceipt","amountIn","amountOutMin","tokenContract","balance","currentAllowance","approveError","swapError","amountADesired","amountBDesired","amountAMin","amountBMin","tokenAContract","tokenBContract","decimalsA","decimalsB","finalAmountA","finalAmountB","optimalB","balanceA","balanceB","slippageTolerance","finalAmountAMin","finalAmountBMin","allowanceA","allowanceB","finalAllowanceA","finalAllowanceB","errorMessage","token0Symbol","token1Symbol","quotePath","amounts","name","approveAParams","approveBParams","batchSize","batches","batch","j","poolAddresses","uncachedPools","results","batchResults","token0IsTokenA","optimalAmountB","priceRatio","estimatedPrice","formattedAmountA","formattedAmountB","token0Amount","token1Amount","normalizedToken0","normalizedToken1","token1Price","liquidity","decimals0","decimals1","CHAINLINK_FEEDS","STABLECOINS","AGGREGATOR_ABI","ChainlinkService","feedAddress","optimismProvider","aggregator","roundData","feeds","stablecoins","usdcPool","isToken0","tokenReserve","usdcReserve","tokenDecimals","usdcDecimals","normalizedTokenReserve","usdtPool","usdtReserve","usdtDecimals","price","useTokenPrices","chainlinkService","mounted","updatePrices","ethPrice","usdcPrice","usdtPrice","useUniswap","CryptoSplash","factoryCoins","FaBitcoin","SiDogecoin","SiLitecoin","SiRipple","SiCardano","FaCoins","containerVariants","gearVariants","staticCoinVariants","custom","movingCoinVariants","particleVariants","FaCog","Dashboard","uniswap","poolStats","setPoolStats","showWelcome","setShowWelcome","position","setPosition","isDone","setIsDone","loadPoolStats","totalLiquidity","totalVolume24h","uniqueHolders","poolAddress","reserve0USD","reserve1USD","holder","formatUSD","features","BiShield","BiRocket","BiCog","BiWater","BiPalette","TokenCard","isNFT","collectionUrl","networkName","chainName","BiCollection","formatDistanceToNow","feature","BiTransfer","BiLineChart","FuturisticCard","className","hideCorners","CATEGORY_ICONS","FaPaintBrush","FaGamepad","FaCamera","FaMusic","BiMoviePlay","GiCrownCoin","itemVariants","ITEMS_PER_PAGE","CollectionsList","setCollections","setFilters","tokenLogos","setTokenLogos","closeTimeoutRef","useRef","fetchedCollections","filteredCollections","tokenDeployment","FilterControls","networkDropdownOpen","setNetworkDropdownOpen","typeDropdownOpen","setTypeDropdownOpen","sortDropdownOpen","setSortDropdownOpen","handleMouseEnter","setDropdown","handleMouseLeave","networks","types","sortOptions","n","f","option","getMintStatus","releaseDate","mintEndDate","timeUntil","BiTime","BiCheck","getCategoryIcon","category","categoryKey","iconData","renderCurrencyLogo","logoUrl","SkeletonCard","paginatedCollections","startIndex","endIndex","totalPages","PaginationControls","p","ChevronLeftIcon","page","ChevronRightIcon","status","maxResults","subscribeToMints","RecentMints","setMints","useParams","setCollection","displayLimit","setDisplayLimit","loaderRef","handleObserver","useCallback","entries","handleLoadMore","observer","recentMints","updatedMints","prevMints","existingIds","m","newLimit","moreMints","formatValue","valueInWei","cleanValue","ethValue","floatValue","renderMedia","imageUrl","renderTokenInfo","explorerUrl","renderTimeWithHash","ALCHEMY_API_KEY","ALCHEMY_URLS","NETWORK_RPC_URLS","formatAddress","formattedAddress","getBadgeIcon","FaCrown","RiMedalFill","CustomTooltip","active","payload","TopHolders","holders","setHolders","setError","loadData","loadUnichainHolders","loadMoonwalkerHolders","loadMonadHolders","networkKey","contractAddress","alchemyUrl","errorText","holdersData","owner","loadERC721Holders","erc721Interface","tokenOwners","holdersMap","currentCount","loadERC1155Holders","erc1155Interface","erc1155Contract","balances","singleEvents","fromBalance","toBalance","batchEvents","values","isERC1155","prepareChartData","h","maxNFTs","distributionData","max","range","d","top10Data","cumulativeData","totalQuantity","ResponsiveContainer","BarChart","XAxis","Tooltip","props","Bar","PieChart","Pie","entry","Cell","AreaChart","Area","shortenAddress","sendMessage","sender","replyTo","messagesRef","messageData","subscribeToMessages","messages","Timestamp","sortedMessages","timeCompare","updateBannedUsers","bannedList","moderationRef","loadBannedUsers","docSnap","deleteMessage","messageId","messageRef","deleteDoc","generateColors","seed","hash","hue","MessageAvatar","size","colors","patterns","createShape","angle","radius","x","y","points","point","CHAT_THEMES","ReplyPreview","ArrowUturnLeftIcon","XMarkIcon","MessageBubble","message","isMyMessage","isCreatorMessage","onReply","currentTheme","getTheme","isCreator","handleModeration","canReply","scrollToMessage","element","urls","formatMessageWithLinks","LinkPreview","FaTrash","FaBan","threadMessage","BanList","show","bannedAddresses","onUnban","urlPattern","DOMPurify","part","urlObj","isTwitter","tweetId","Chat","setMessages","newMessage","setNewMessage","showEmojiPicker","setShowEmojiPicker","isLoading","setIsLoading","messagesEndRef","chatContainerRef","textareaRef","setCurrentTheme","replyingTo","setReplyingTo","emojiPickerRef","isChatEnabled","setIsChatEnabled","setBannedAddresses","showBanList","setShowBanList","creatorAddress","messageSender","newMessages","scrollToBottom","handleReply","onEmojiClick","emojiObject","autoResize","textarea","groupMessages","groups","prevMessage","isSameSender","isWithinTimeWindow","ThemeSelector","IoColorPaletteOutline","themeName","handleClickOutside","action","userAddress","newBannedList","AnimatePresence","group","FaSmile","EmojiPicker","FaPaperPlane","TIME_RANGES","ERC1155_ABI","getProvider","fetchTransferEvents","fromBlock","singleFilter","batchFilter","singleTransfers","batchTransfers","allTransfers","uniqueBlocks","blockData","blockTimestamps","fetchBlockscoutData","tokenEndpoint","transfersEndpoint","mintToken","numValue","processVolumeData","timeRange","startDate","subHours","subDays","volumeByDay","date","startOfDay","isWithinInterval","existing","label","tokenLogo","renderTokenIcon","getTokenSymbol","format","VolumeMetrics","setVolumeData","setTimeRange","setTokenLogo","transfers","processedData","totalVolume","totalEthVolume","totalTransactions","avgVolume","CartesianGrid","YAxis","TABS","AnalyticsTabs","activeTab","setActiveTab","tab","CountdownTimer","targetDate","timeLeft","setTimeLeft","calculateTimeLeft","difference","timer","key","MintEndCountdown","endDate","infiniteMint","RemainingMintAmount","userMintedAmount","remaining","CollectionPage","mintAmount","setMintAmount","checkingAddress","setCheckingAddress","setAccount","maxSupply","setMaxSupply","setUserMintedAmount","totalMinted","setTotalMinted","setProvider","whitelistChecked","setWhitelistChecked","isWhitelisted","setIsWhitelisted","whitelistEntry","setWhitelistEntry","paymentTokenInfo","setPaymentTokenInfo","parsedChainId","handleChainChanged","userMinted","options","progress","config","paymentToken","ethers.ZeroAddress","handleMint","imageBlob","ipfsHash","mintPriceWei","totalCost","newTotal","newUserMinted","formattedValue","formattedMintPrice","isLive","checkEligibility","whitelistAddresses","checkAddress","foundEntry","addressToCheck","mintLimit","onChainWhitelist","onChainLimit","renderPrice","renderMintButton","isMintEnded","isBeforeRelease","expectedChainId","isWrongNetwork","networkDisplayName","BiMinus","BiPlus","BiWorld","CACHE_DURATION","activityCache","getCachedActivities","localCache","cacheActivities","activities","HistoryPage","setActivities","selectedNetwork","setSelectedNetwork","NetworkFilter","networkCounts","filteredActivities","activity","loadHistory","cachedActivities","loadFreshData","transferEvents","allCollectionsData","tokenDetailsMap","acc","formattedTokenTransfers","tokenDetails","fetchedDetails","formattedAmount","formattedTokenDeployments","uniqueTokenAddresses","collectionsMap","formattedNFTTransfers","formattedNFTCreations","allMints","uniqueTransactions","getNetworkDisplayName","renderActivityCard","isNFTActivity","getTagColor","getTagText","getExplorerUrlFromUtils","nftCache","getCachedNFTs","cacheNFTs","nfts","fetchBlockscoutNFTs","nftTokens","latestTransfer","AccountPage","setNfts","filteredNFTs","networkId","loadNFTs","cachedNFTs","supportedChains","allNFTs","blockscoutNFTMap","processedNFTs","blockscoutData","firebaseNFTKeys","newBlockscoutNFTs","finalNFTs","dateA","logos","formatMintPrice","isZeroToken","individualPrice","totalEthValue","typeCount","networkCount","networkFilters","renderNFTCard","displayName","COMMON_TOKENS","scrollbarStyles","TokenRow","onSelect","isSelected","setBalance","rawBalance","result","ethers.toBigInt","formatted","displayBalance","renderTokenLogo","commonToken","TokenSelectionModal","selectedTokenAddress","searchQuery","setSearchQuery","customToken","setCustomToken","refreshTrigger","setRefreshTrigger","deployedTokens","setDeployedTokens","tokensWithBalance","setTokensWithBalance","tokens","formattedTokens","checkTokenBalance","formattedBalance","validTokens","timeoutId","filteredTokens","searchLower","handleTokenSelect","finalToken","FaSearch","TokenSwap","fromToken","setFromToken","toToken","setToToken","fromAmount","setFromAmount","toAmount","setToAmount","route","setRoute","showFromTokenModal","setShowFromTokenModal","showToTokenModal","setShowToTokenModal","fromTokenBalance","setFromTokenBalance","toTokenBalance","setToTokenBalance","slippage","setSlippage","customSlippage","setCustomSlippage","showCustomSlippage","setShowCustomSlippage","showMoreDetails","setShowMoreDetails","estimatedFee","setEstimatedFee","networkCost","setNetworkCost","exchangeRate","setExchangeRate","calculateTradeDetails","fromAmountDecimal","rate","getQuote","amountOut","updateBalances","ethBalance","handleSwap","amountOutMinRaw","slippageMultiplier","handleFromTokenSelect","tokenInfo","handleToTokenSelect","fetchPriceRatio","ratio","TokenBalance","err","formatBalance","handleSlippageChange","handleCustomSlippageChange","tempToken","tempAmount","FaExchangeAlt","WETH_ABI","CHAINLINK_AGGREGATOR_ABI","UnichainUniswapService","amount0Decimal","amount1Decimal","isToken0WETH","isToken1WETH","isETHPair","isNewPair","ethers.getBigInt","finalAmount0Big","finalAmount1Big","token0InPair","priceInfo","amountToken","amountETH","target","amountTokenMin","amountETHMin","actualTokenAddress","getPairData","fullAmount","roundedAmount","isFromNative","isToNative","minOutWithSlippage","fromAddress","toAddress","intermediaryTokens","routePromises","intermediary","routes","bestRoute","maxOutput","getAmountsOutData","amountsHex","pairAddresses","pool","token0Info","token1Info","feed","quoteTokenAddress","quoteTokenContract","quoteTokenDecimals","uniquePairs","maxPairsToCheck","currentBatchSize","pairDataPromises","idx","validResults","isTokenAWETH","isTokenBWETH","useUnichain","MONAD_TOKENS","getChainTokens","getTokenMetadata","getTokenLogo","generateTokenInitialsLogo","canvas","ctx","balanceCache","BLOCKSCOUT_URLS","tokenBalances","setTokenBalances","fetchTokensAndBalances","retries","chainIdHex","allTokens","newBalances","blockscoutUrl","blockscoutTokens","isValidToken","hasTemp","lowerStr","isNotTempToken","isDuplicate","nativeBalance","balanceBigInt","nativeSymbol","tokenPromises","callData","tokenResults","tokensWithBalances","getChainId","hexChainId","decimalChainId","checkForProvider","tokenBalance","isTokenLoading","hasBalance","overlayVariants","modalVariants","listContainerVariants","TokenSelector","excludeToken","buttonVariants","WrapIcons","SwapProgressModal","tokenIn","tokenOut","WrapProgressModal","isWrapping","getOperationText","hover","setHover","starValue","SUPPORTED_CHAIN_IDS","getNetworkMessage","WMONAD_ABI","showTokenSelector","setShowTokenSelector","activeSide","setActiveSide","routeError","setRouteError","swapStep","setSwapStep","setSwapError","networkError","setNetworkError","findingRoute","setFindingRoute","isWrapUnwrapOperation","newRoute","newToAmount","routeInfo","actualFromToken","hasFees","burnFee","marketingFee","liquidityFee","routerAddress","fromTokenHasFees","toTokenHasFees","toTokenContract","handleWrapUnwrap","parsedAmount","wmonadContract","getActionButtonText","handleRating","UNISWAP_V3_ADDRESSES","QUOTER_ABI","SWAP_ROUTER_ABI","FEE_TIERS","encodePath","fees","encoded","providerRef","quoterContractRef","setRouteInfo","priceImpact","setPriceImpact","abortController","fromTokenObj","toTokenObj","directPath","directQuote","pathToWeth","wethQuote","pathToUsdt","finalQuote","effectiveFromToken","effectiveToToken","routingPaths","bestAmountOut","bestPath","quotedAmountOut","impact","midPriceAmountIn","midPriceAmountOut","expectedOutput","checkAndSetAllowance","routerAllowance","wethContract","parsedToAmount","gasLimit","swapData","unwrapData","refundData","swapButtonVariants","PoolCreation","setToken0","setToken1","setAmount0","setAmount1","setFee","showToken0Modal","setShowToken0Modal","showToken1Modal","setShowToken1Modal","setPriceInfo","handleToken0Select","handleToken1Select","handleAmount0Change","handleAmount1Change","handleCreatePool","parsedAmount0","parsedAmount1","updatePriceInfo","feeTier","PoolProgressModal","isNewPool","poolExists","isExistingPool","ExistingPoolMessage","handleAddLiquidity","handleCopyAddress","NetworkStatus","networkInfo","getBalance","setPriceRatio","setIsNewPool","setPoolExists","checkChain","isValidNetwork","actualAddress","firebaseError","calculatedAmount1","ethers.Interface","ethers.getAddress","ethers.dataSlice","routerInterface","POSITION_MANAGER_ADDRESS","POSITION_MANAGER_ABI","FeeAmount","TICK_SPACINGS","FACTORY_ADDRESS","POOL_INTERFACE","V3PositionManager","signerOrProvider","ownerAddress","params","amount0BN","amount1BN","allowance0BN","allowance1BN","sqrtPriceX96","finalToken0","finalToken1","finalSqrtPriceX96","poolCreatedEvent","tickLower","tickUpper","recipient","finalAmount0Desired","finalAmount1Desired","finalAmount0Min","finalAmount1Min","finalTickLower","finalTickUpper","tickSpacing","signerAddress","mintParams","transferEvent","mintEvent","positions","amount0Max","amount1Max","ethers.MaxUint128","tick","adjustedPrice","feeAmount","basePrice","lowerPricePercent","upperPricePercent","lowerPrice","upperPrice","slippagePercent","slippageFactor","amount0Expected","amount1Expected","calls","multicallData","txParams","functionName","formattedInputAmount","formattedOutputAmount","poolContract","slot0","WETH9_ADDRESS","getDisplaySymbol","selectedFeeTier","setSelectedFeeTier","initialPrice","setInitialPrice","setTickLower","setTickUpper","showPriceRangeModal","setShowPriceRangeModal","selectedRange","setSelectedRange","priceRange","setPriceRange","showFeeTierDetails","setShowFeeTierDetails","showTokenOrder","setShowTokenOrder","token0Balance","setToken0Balance","token1Balance","setToken1Balance","poolData","setPoolData","isLoadingPoolData","setIsLoadingPoolData","formatPrice","inverted","num","renderPriceSection","invertedPrice","fetchPoolData","positionManager","poolToken0IsOurToken0","Q96","squaredPrice","decimalAdjustment","formattedPrice","calculatedAmount0","handleInitialPriceChange","nextStep","prevStep","token0IsEth","token1IsEth","shouldOrderByAddress","finalAmount0","finalAmount1","rawPrice","sqrtPrice","fullRange","lower","upper","createPoolCall","mintCall","liquidityEvent","readTokenBalances","fetchBalance","tier","preset","PoolSelectionModal","setPools","factoryPools","validPools","token0Metadata","token1Metadata","filteredPools","AddLiquidity","setPool","setToken0Amount","setToken1Amount","showPoolModal","setShowPoolModal","activeInput","setActiveInput","calculateTimeoutRef","calculateAmount","formattedAmount1","formattedAmount0","handleToken0Change","handleToken1Change","finalAllowance0","finalAllowance1","selectedPool","RemoveLiquidity","lpBalance","setLpBalance","removePercentage","setRemovePercentage","isMounted","lpContract","totalSupply","userShare","sharePercentage","percentage","baseToken0Amount","baseToken1Amount","newToken0Amount","newToken1Amount","handleRemoveLiquidity","lpTokensToRemove","updatedPool","ManageLiquidity","SUPPORTED_NETWORKS","CACHE_KEY","CACHE_EXPIRY","getEnhancedTokenMetadata","existingMetadata","WETH_ADDRESS","logo","searchVariants","skeletonVariants","skeletonItemVariants","PoolItem","SkeletonPoolItem","processPoolData","pairInterface","token0Data","token1Data","reservesData","WMONAD_ADDRESS","isToken0WMONAD","isToken1WMONAD","displayToken0","displayToken1","USDT_ADDRESS","isToken0USDT","isToken1USDT","searchResults","setSearchResults","loadedCount","setLoadedCount","totalPairs","setTotalPairs","handleVisibilityChange","getPoolsFromCache","savePoolsToCache","localData","sessionData","loadPoolsFromChain","factoryContract","indices","tokenInterface","processedPools","token0Name","token1Name","commonToken0","commonToken1","token0Deployment","token1Deployment","processedPool","filtered","displayPools","getCommonTokens","commonTokens","displaySymbol","getTokenPairDisplay","addLiquidityError","setAddLiquidityError","isToken0Native","isToken1Native","monAmount","routerContract","wethToken","MULTICALL_ADDRESS","MULTICALL_ABI","ERC20_INTERFACE","usePools","fetchTokenInfo","multicall","Contract","returnData","fetchPools","uniqueTokens","feeLevel","setFeeLevel","currentPrice","minPriceMultiplier","maxPriceMultiplier","setSelectedPool","lpTokenAmount","setLpTokenAmount","lpTokenBalance","setLpTokenBalance","selectedPercentage","setSelectedPercentage","isLoadingBalance","setIsLoadingBalance","lpAmount","newBalance","handleMaxClick","handlePoolSelect","ChevronDownIcon","removeError","setRemoveError","liquidityToRemove","handleSetMaxAmount","handlePercentageClick","myPoolsCache","serializedData","stored","tokenMetadataCache","parsed","serialized","MyPools","searchAddress","setSearchAddress","balanceData","tokenMetadataPromises","cachedMetadata","tokenMetadata","lpTokens","handleSearch","prevPools","newPool","UNICHAIN_NETWORKS","getCommonTokenMetadata","PoolSkeleton","poolVariants","token0Firebase","token1Firebase","NFT_POSITION_MANAGER_ABI","NFT_POSITION_MANAGER_ADDRESS","POOL_ABI","NFT_METADATA_ABI","Q32","getSqrtRatioAtTick","absTick","getAmount0FromTick","sqrtPriceCurrent","sqrtPriceLower","sqrtPriceUpper","liquidityBn","getAmount1FromTick","formatBigInt","valueString","formatUnits","isPositionInRange","currentTick","PROGRESS_STEPS","PositionCard","onAction","nftImage","setNftImage","setCurrentTick","fetchNFTMetadata","tokenURI","base64Data","jsonString","priceLower","priceUpper","Menu","BiDotsHorizontalRounded","AddLiquidityModal","balance0","setBalance0","balance1","setBalance1","setSqrtPriceX96","calculatePrice","calculateAmounts","bal0","bal1","title","RemoveLiquidityModal","setPercentage","amount0Value","amount1Value","nftManager","CollectFeesModal","handleCollectFees","setPositions","showAddLiquidityModal","setShowAddLiquidityModal","showRemoveLiquidityModal","setShowRemoveLiquidityModal","showCollectFeesModal","setShowCollectFeesModal","selectedPosition","setSelectedPosition","fetchPositions","positionManagerContract","positionPromises","slot0Data","poolLiquidity","positionShare","positionError","validPositions","handlePositionAction","FaChartLine","useUniswapVersion","create","set","VersionToggle","initialTokens","poolDetails","setPoolDetails","details","getTabsForVersion","FaList","FaPlus","FaWater","ActivityPage","selectedTokens","setSelectedTokens","selectedPoolAddress","setSelectedPoolAddress","devModeEnabled","setDevModeEnabled","zKeyPresses","setZKeyPresses","handleTabChange","handleKeyPress","newPresses","getChainComponent","componentType","isUnichain","isMonad","UnichainTokenSwapV2","UnichainTokenSwapV3","SepoliaTokenSwap","UnichainPoolCreationV2","UnichainPoolCreationV3","SepoliaPoolCreation","UnichainManageLiquidityV2","UnichainManageLiquidityV3","SepoliaManageLiquidity","UnichainMyPoolsV2","UnichainMyPoolsV3","SepoliaMyPools","unichainTestnet","BRIDGE_CONTRACTS","L1_BRIDGE_ABI","content","setShow","AnimatedClock","targetTime","formatTime","seconds","minutes","secs","BridgeProgressModal","txHash","fromNetwork","toNetwork","CheckIcon","TermsModal","onAccept","acceptedTerms","setAcceptedTerms","allTermsAccepted","SkeletonHistoryItem","NetworkModeToggle","mode","onChange","ActivityModal","setShowProgress","setTxHash","networkMode","setNetworkMode","fetchBridgeHistory","responses","etherscanApiKey","ethData","unichainData","r","bridgeContract","formattedActivities","FaArrowRight","TransactionSummaryModal","onConfirm","NETWORKS","BridgePage","Bridge","isMainnetMode","setIsMainnetMode","selectedFromNetwork","setSelectedFromNetwork","selectedToNetwork","setSelectedToNetwork","showActivity","setShowActivity","setAmount","showTerms","setShowTerms","showProgress","setEthBalance","networkStatus","setNetworkStatus","showSummary","setShowSummary","hasPendingTx","setHasPendingTx","showFromDropdown","setShowFromDropdown","showToDropdown","setShowToDropdown","debouncedFetch","ethers.providers","handleAmountChange","handleReviewBridge","amountNum","balanceNum","handleAcceptTerms","txValue","checkPendingTransactions","pendingBridges","txTime","minutesPassed","handleNetworkSelect","NetworkDropdown","anchorRef","rect","fromButtonRef","toButtonRef","InformationCircleIcon","FaGasPump","METHOD_IDS","CHAIN_INFO","FeesTracker","selectedChain","setSelectedChain","setFees","earnedFees","setEarnedFees","newFees","setNewFees","creatorStats","setCreatorStats","transactions","setTransactions","fetchCreatorStats","uniqueTokenCreators","uniqueNFTCreators","uniqueRecentTokenCreators","uniqueRecentNFTCreators","totalTokenCreations","totalNFTCreations","recent24hTokenCreations","recent24hNFTCreations","tokenTxs","nftTxs","oneDayAgo","info","apiKey","tokenCreationsUrl","nftCreationsUrl","tokenResponse","nftResponse","nftData","creator","txTimestamp","fetchTokenEventsFromChain","fetchNFTEventsFromChain","CHUNK_SIZE","toBlock","tokenFilter","tokenEvents","nftFactory","nftFilter","nftEvents","withdrawFees","toastId","targetChainId","amountToWithdraw","fetchEarnedFees","earned","tokenFactory","nftBalance","fetchFees","tokenFee","nftFee","updateFee","newFee","DEX_TRADING_URLS","DEX_IMAGES","TokenInfo","setTokenAddress","setTokenData","useContractRead","MemeTokenABI","treasuryAddress","devAddress","marketingWallet","liquidityAddress","treasuryFee","devFee","buyFees","sellFees","deadBalance","treasuryBalance","devBalance","marketingBalance","liquidityBalance","contractBalance","tradingEnabled","BiRefresh","FaFire","BiMoney","RecentlyCreatedTokens","recentTokens","setRecentTokens","setPage","tokensPerPage","fetchTokens","allEvents","BLOCK_RANGE","sortedTokens","rawSupply","currentTokens","getTradeUrl","dexInfo","getDexInfo","BiLinkExternal","toastOptions","SnapshotViewer","inputTokenAddress","setInputTokenAddress","verifiedTokenAddress","setVerifiedTokenAddress","setTokenContract","snapshots","setSnapshots","selectedSnapshot","setSelectedSnapshot","holderData","setHolderData","verifying","setVerifying","isWaitingForWallet","setIsWaitingForWallet","tokenOwner","isOwner","takeSnapshot","snapshotData","useContractWrite","isSnapshotPending","useWaitForTransaction","verifyTokenAddress","updatedSnapshotData","fetchHolderData","snapshotId","activeHolders","exportToCSV","csvContent","encodedUri","link","handleTakeSnapshot","handleSelectSnapshot","Toaster","Button","Spinner","BiSearch","HiOutlineCamera","HiOutlineDownload","Table","dexConfigs","leftMemeMessages","rightMemeMessages","MemeTypewriter","delay","displayedTexts","setDisplayedTexts","isTyping","setIsTyping","timeouts","timeout","newTexts","newTyping","MemeFactory","showLiquidityModal","setShowLiquidityModal","toggles","setToggles","showPreLaunchModal","setShowPreLaunchModal","liquidityAdded","setLiquidityAdded","totalSteps","isSnapshotModalOpen","setIsSnapshotModalOpen","savedState","savedAddress","savedFormData","savedLiquidityAdded","formDataToSave","clearSavedState","handleLiquiditySuccess","handleToggle","toggleName","newState","deploymentData","saveError","trackingError","dexConfig","totalSupplyBN","safeConvertToBigInt","basisPoints","swapTokensAtPercent","swapTokensAtBasisPoints","totalSecondaryFees","parsedLog","ShieldCheckIcon","FireIcon","LockClosedIcon","TokenCreationForm","LiquidityModal","PreLaunchModal","FeatureToggle","description","enabled","onToggle","ratingValue","onSuccess","liquidityAmount","setLiquidityAmount","setTokenAmount","isAdding","setIsAdding","isSuccess","setIsSuccess","setPoolAddress","tokenAmountWei","ethAmountWei","approveTx","AiOutlineLoading3Quarters","FormStep","InfoTooltip","FaInfoCircle","App","isModalOpen","setIsModalOpen","isNFTModalOpen","setIsNFTModalOpen","isFAQOpen","setIsFAQOpen","isProviderLoading","setIsProviderLoading","checkProvider","WagmiConfig","wagmiConfig","RainbowKitProvider","darkTheme","lightTheme","Routes","Route","Login","setEmail","setPassword","showPassword","setShowPassword","login","loginWithGoogle","handleGoogleLogin","FiEyeOff","FiEye","FcGoogle","Signup","showConfirmPassword","setShowConfirmPassword","isGoogleLoading","setIsGoogleLoading","signup","passwordRegex","passwordChecks","validations","validation","handleGoogleSignup","userCredential","isNewUser","FiCheck","countryCallingCodes","BecomeSeller","setStep","listingFee","isProcessing","setIsProcessing","countries","countryList","phonePlaceholder","setPhonePlaceholder","countryOptions","ReactCountryFlag","customStyles","provided","state","storeInfo","setStoreInfo","handleInputChange","generateSellerId","handlePaymentSuccess","reference","initializePayment","script","handleCountryChange","selectedOption","countryCode","benefit","BiCheckCircle","BiArrowBack","Select","components","ProtectedRoute","MerchStoreLayout","logout","isMobileMenuOpen","setIsMobileMenuOpen","setSeller","unreadMessages","setUnreadMessages","totalUnread","total","handleLogout","buyerNavItems","BiHomeAlt","BiCart","BiPackage","BiMessageDetail","sellerNavItems","BiListPlus","BiDollarCircle","commonNavItems","BiMenu","BiUser","NavLink","BiLogOut","WithdrawalTermsModal","termsAccepted","setTermsAccepted","isWaitingWallet","setIsWaitingWallet","handleAccept","TOKEN_INFO","SkeletonPulse","DashboardSkeleton","getProgressBarWidth","getProgressBarColor","SAFETY_BUFFER","SellerDashboard","platformFee","setPlatformFee","minWithdrawal","setMinWithdrawal","recentOrders","setRecentOrders","setWithdrawals","setSellerData","isTermsModalOpen","setIsTermsModalOpen","setSelectedToken","isIncomingPaymentsExpanded","setIsIncomingPaymentsExpanded","incomingPayments","setIncomingPayments","showVerificationModal","setShowVerificationModal","isSubmittingVerification","setIsSubmittingVerification","fetchSellerData","fetchPlatformSettings","settingsDoc","settings","sellerDocRef","unsubscribeSeller","productsSnapshot","unsubscribeOrders","incomingPaymentsList","shippingDeadline","unsubscribeWithdrawals","withdrawalSnapshot","withdrawalHistory","totalWithdrawn","w","totalGrossRevenue","totalNetRevenue","tokenRevenue","customers","shippingWindowEnd","orderTotal","orderToken","netAmount","pendingWithdrawals","o","statsCards","FiBox","canRequestVerification","cooldownHours","cooldownEnds","getRemainingCooldownTime","hours","handleRequestVerification","prevSeller","VerificationModal","VerificationButton","cooldown","FiAlertCircle","stat","payment","availableDate","hoursRemaining","switchError","merchPlatform","withdrawalAmount","pendingToast","styles","AddProductSkeleton","SHOE_SIZES","AddProduct","submitting","setSubmitting","imageFiles","setImageFiles","imagePreview","setImagePreview","productData","setProductData","SIZES","COLORS","CLOTHING_SUBCATEGORIES","ACCESSORIES_SUBCATEGORIES","sizes","setSizes","selectedSizes","setSelectedSizes","quantities","setQuantities","isFootwearProduct","handleImageUpload","files","newPreviews","removeImage","uploadImages","uploadPromises","storageRef","ref","uploadBytes","getDownloadURL","imageUrls","qty","discountEndsAt","discountedPrice","newProductData","handleSizeToggle","handleColorToggle","color","c","handleSubCategorySelect","mainCategory","subItem","subItems","ProductsSkeleton","ProductImages","images","setCurrentIndex","DeleteConfirmationModal","product","onCancel","Products","products","setProducts","productToDelete","setProductToDelete","sellerPreferences","setSellerPreferences","fetchProducts","fetchSellerPreferences","productsData","handleDelete","confirmDelete","deletePromises","imageRef","deleteObject","BiEdit","NETWORK_INFO","EditProduct","uploading","setUploading","originalProduct","setOriginalProduct","hasChanges","setHasChanges","setProduct","fetchProduct","hasModifications","productDoc","handleRemoveImage","updateData","productRef","BiUpload","selectedDate","newColors","newColorQuantities","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Legend","Filler","ArcElement","StatCard","trend","subtitle","secondaryValue","BiTrendingUp","SalesSkeleton","header","ProductDistributionChart","productDistribution","topProducts","count","totalSold","Doughnut","TopProducts","productStats","Pagination","onPageChange","RecentSoldProducts","productsPerPage","recentProducts","allProducts","indexOfLastProduct","indexOfFirstProduct","currentProducts","Sales","revenueData","setRevenueData","selectedTimeframe","setSelectedTimeframe","chartOptions","firstDayThisMonth","firstDayLastMonth","lastDayLastMonth","thisMonthOrders","lastMonthOrders","thisMonthRevenue","lastMonthRevenue","thisMonthCustomers","lastMonthCustomers","calculatePercentageChange","current","previous","revenueChange","ordersChange","customersChange","withdrawalsByStatus","grossRevenue","uniqueCustomers","allTimeRevenue","netRevenue","dates","revenues","dayRevenue","indexOfLastOrder","indexOfFirstOrder","currentOrders","paginate","pageNumber","exportToExcel","exportData","ws","wb","XLSX.writeFile","BiDownload","Line","OrdersReceivedSkeleton","TrackingModal","onSubmit","orderId","trackingNumber","setTrackingNumber","carrier","setCarrier","isSubmitting","setIsSubmitting","OrderDetailsModal","getCountryName","OrdersReceived","setOrders","setFilter","selectedOrder","setSelectedOrder","isTrackingModalOpen","setIsTrackingModalOpen","selectedOrderId","setSelectedOrderId","fetchOrders","ordersData","sellerRef","totalNewAmount","updatedBalance","writeBatch","orderRef","updateOrderStatus","orderAmount","getStatusColor","BiInfoCircle","SettingsSkeleton","Settings","showNetworkConfirm","setShowNetworkConfirm","buyerProfile","setBuyerProfile","storeSettings","setStoreSettings","walletSettings","setWalletSettings","originalSettings","setOriginalSettings","buyerProfileHasChanges","setBuyerProfileHasChanges","originalBuyerProfile","setOriginalBuyerProfile","newProfile","fetchSellerSettings","fetchBuyerProfile","profileData","handleBuyerInputChange","field","handleBuyerProfileSubmit","formattedSellerData","initialSellerData","updatedSellerDoc","handleDisconnectWallet","handleStoreSubmit","handleStoreInputChange","newSettings","hasChanged","endsAt","FeaturedDeals","discountedProducts","next","MdLocalOffer","BrowseSkeleton","timeString","ProductCard","reviewCount","setReviewCount","AiFillStar","MaxDiscountBanner","getMaxDiscountAndLatestEnd","maxDiscount","latestEndTime","discount","endTime","Browse","selectedCategory","setSelectedCategory","sortBy","setSortBy","networkDropdownRef","sortDropdownRef","GiTShirt","GiPoloShirt","GiArmoredPants","GiHoodie","GiLabCoat","GiSuitcase","GiDress","GiSkirt","GiRunningShoe","GiBoots","FaShoePrints","MdOutlineBag","GiBelt","MdOutlineFace","MdOutlineDiamond","MdOutlinePhoneAndroid","MdOutlineLaptop","MdOutlineHeadphones","MdOutlineTablet","MdOutlineBatteryChargingFull","categories","MdGrid3X3","MdOutlineCheckroom","MdOutlineShoppingBag","MdDevices","MdOutlineHome","MdOutlinePalette","MdOutlineCollections","categoryGroup","subCategory","sellerVerificationMap","filteredProducts","cat","opt","StarRating","isInteractive","ReviewModal","productId","onReviewAdded","setReview","image","setImage","handleImageChange","reader","validOrder","reviewData","currentRating","totalReviews","newRating","BiImage","ImageModal","ProductReviews","averageRating","setAverageRating","canReview","setCanReview","selectedImage","setSelectedImage","reviewsPerPage","fetchReviews","hasValidOrder","hasReviewed","indexOfLastReview","indexOfFirstReview","currentReviews","handlePageChange","ProductDetailsSkeleton","ProductDetails","updateCartCount","setQuantity","similarProducts","setSimilarProducts","totalPrice","setTotalPrice","selectedSize","setSelectedSize","selectedColor","setSelectedColor","copiedAddress","setCopiedAddress","fetchSimilarProducts","subtotal","shippingFee","similarProductsData","handleQuantityChange","maxQuantity","newQuantity","addToCart","currentColorStock","cartQuery","loadingToast","cartRef","cartDoc","handleBuyNow","updateProductQuantities","handleContactStore","conversationId","conversationRef","getTokenContractAddress","networkToChainId","currentColorQuantity","newColorQuantity","newTotalQuantity","isAvailable","FiCopy","CartSkeleton","Cart","cartItems","setCartItems","fetchCartItems","fetchPlatformFee","items","cartData","updateQuantity","cartItemId","cartItem","currentStock","removeItem","calculateSubtotal","handleCheckout","isInitialized","setIsInitialized","originalConsole","filterLogs","args","arg","container","initializeWidget","widgetContainer","checkYQV5","OrdersSkeleton","RefundRequestModal","checkWalletConnection","handleSubmitRefund","sellerWallet","buyerWallet","refundRequest","DeliveryConfirmationModal","handleConfirm","Orders","isRefundModalOpen","setIsRefundModalOpen","isDeliveryModalOpen","setIsDeliveryModalOpen","selectedOrderForDelivery","setSelectedOrderForDelivery","selectedTracking","setSelectedTracking","isReviewModalOpen","setIsReviewModalOpen","selectedItemForReview","setSelectedItemForReview","confirmDelivery","handleTrackingClick","BiStar","BiChevronRight","FaPlaneDeparture","FaCheckCircle","FaBox","Checkout","orderSummary","setOrderSummary","setTokenBalance","transactionStatus","setTransactionStatus","cartSnapshot","shippingTotal","hasCompleteAddress","countryValue","flagUrl","handlePlaceOrder","totalAmount","approvalBuffer","approvalAmount","sellerPromises","itemTotal","orderCount","parsedEvent","numericOrderId","updateQuantityPromises","hasValidShippingAddress","isOrderButtonDisabled","renderShippingAddress","BiNetworkChart","AdminRecentWithdrawals","recentWithdrawals","setRecentWithdrawals","fetchRecentWithdrawals","WithdrawalRequestSkeleton","PlatformFeeSkeleton","getTokenAddresses","AdminWithdrawals","processingId","setProcessingId","switchNetwork","useSwitchNetwork","platformFeeAmounts","setPlatformFeeAmounts","fetchWithdrawals","sellerDetailsPromises","sellerDetailsSnapshots","sellerDetailsMap","withdrawalData","sellerDetails","handleApprove","withdrawalId","fetchPlatformFees","unichainProvider","unichainContract","unichainAddresses","polygonProvider","polygonContract","polygonAddresses","newFeeAmounts","unichainUSDTBalance","unichainUSDCBalance","polygonUSDTBalance","polygonUSDCBalance","intervalId","fetchAndSetFees","handleManualRefresh","handleWithdrawPlatformFees","addError","withdrawalRef","FiLoader","elapsed","isReady","AdminSettings","setSettings","saving","setSaving","setMessage","fetchSettings","FiSave","RefundRequestSkeleton","RefundHistorySkeleton","TransactionHashModal","AdminRefunds","refundRequests","setRefundRequests","refundHistory","setRefundHistory","selectedRefund","setSelectedRefund","showTxHashModal","setShowTxHashModal","historyPage","setHistoryPage","itemsPerPage","fetchRefundRequests","pendingQuery","pendingSnapshot","historyQuery","historySnapshot","pendingData","refundDoc","orderDoc","historyData","buyerRef","buyerDoc","buyerData","handleRequestRefundWithdrawal","buyerAddress","formattedBuyerAddress","sellerAddress","contractWithSigner","sellerBalanceRef","sellerBalanceDoc","sellerRevenueRef","sellerRevenueDoc","currentRevenue","currentMonthlyRevenue","monthKey","monthlyRevenue","handleSubmitTransactionHash","handleRejectRefund","refundId","indexOfLastHistory","indexOfFirstHistory","currentHistory","totalHistoryPages","paginateHistory","request","refund","SellerRefunds","refundsPerPage","refundsQuery","orderError","getStatusBadgeClass","indexOfLastRefund","indexOfFirstRefund","currentRefunds","RefundsSkeleton","getStatusIcon","FiXCircle","FiClock","getStatusText","Refunds","refunds","setRefunds","fetchRefunds","refundsData","FiExternalLink","TermsAndConditions","sections","FiGlobe","FiTruck","FiUserCheck","FiShield","FiLock","section","itemIndex","ForgotPassword","resetPassword","ResetPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isVerifying","setIsVerifying","oobCode","setOobCode","code","verifyPasswordResetCode","confirmPasswordReset","LoadingSkeleton","MessageStatus","currentUser","getTime","BiCheckDouble","Message","onEdit","onDelete","isEditing","setIsEditing","editedText","setEditedText","isOwnMessage","renderProductCard","productCard","handleEdit","handleKeyDown","BiPencil","Inbox","conversations","setConversations","currentConversation","setCurrentConversation","conversationsData","messagesData","conversation","handleSendMessage","messageText","handleEditMessage","newText","handleDeleteMessage","BiSend","SellerInbox","StoresRevenue","setStores","filteredStores","setFilteredStores","setWithdrawalHistory","storesPerPage","fetchStoresData","fetchAllWithdrawals","sortedStores","storesWithMetrics","indexOfLastStore","indexOfFirstStore","currentStores","BiChevronLeft","number","AdminRoute","InboxRouter","createBrowserRouter","MerchSales","eventName","Root","RouterProvider","ReactDOM"],"mappings":"80JAEA,MAAMA,GAAeC,EAAAA,cAAc,EAEnB,SAAAC,GAAc,CAAE,SAAAC,GAAY,CAC1C,KAAM,CAACC,EAAYC,CAAa,EAAIC,WAAS,IAAM,CAE3C,MAAAC,EAAY,aAAa,QAAQ,UAAU,EACjD,OAAIA,IAAc,KACT,KAAK,MAAMA,CAAS,EAEtB,OAAO,WAAW,8BAA8B,EAAE,OAAA,CAC1D,EAEDC,EAAAA,UAAU,IAAM,CAEVJ,EACO,SAAA,gBAAgB,UAAU,IAAI,MAAM,EAEpC,SAAA,gBAAgB,UAAU,OAAO,MAAM,EAElD,aAAa,QAAQ,WAAY,KAAK,UAAUA,CAAU,CAAC,CAAA,EAC1D,CAACA,CAAU,CAAC,EAMf,MAAMK,EAAQ,CACZ,WAAAL,EACA,YANkB,IAAM,CACxBC,EAAc,CAACD,CAAU,CAC3B,CAKA,EAEA,OACGM,EAAAA,IAAAV,GAAa,SAAb,CAAsB,MAAAS,EACpB,SAAAN,CACH,CAAA,CAEJ,CAEO,SAASQ,IAAW,CACnB,MAAAC,EAAUC,aAAWb,EAAY,EACvC,GAAIY,IAAY,OACR,MAAA,IAAI,MAAM,8CAA8C,EAEzD,OAAAA,CACT,CCvCA,MAAME,GAAgB,OAAO,SAAS,WAAa,YAE7CC,GAAiB,CACrB,OAAQ,0CACR,WAAYD,GAAgB,oCAAkD,yBAC9E,UAAW,oBACX,cAAe,wCACf,kBAAmB,eACnB,MAAO,4CACP,cAAe,kGACjB,EAGME,GAAMC,GAAcF,GAAgB,YAAY,EAChDG,GAAOC,GAAQH,EAAG,EAClBI,GAAKC,GAAaL,EAAG,EACrBM,GAAUC,GAAWP,EAAG,EACZQ,GAAaR,EAAG,EAGlC,MAAMS,GAAiB,IAAIC,GAC3BD,GAAe,oBAAoB,CACjC,OAAQ,iBACR,UAAW,gBACb,CAAC,EAEDP,GAAK,kBAAkB,ECpBvB,MAAMS,GAAmB1B,EAAAA,cAAc,EAEvB,SAAA2B,GAAkB,CAAE,SAAAzB,GAAY,CAC9C,KAAM,CAAC0B,EAAMC,CAAO,EAAIxB,EAAAA,SAAS,IAAI,EAC/B,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAC2B,EAASC,CAAU,EAAI5B,EAAAA,SAAS,EAAK,EACFA,EAAAA,SAAS,EAAI,EACvD,KAAM,CAAC6B,EAAWC,CAAY,EAAI9B,EAAAA,SAAS,CAAC,EAE5CE,EAAAA,UAAU,IAAM,CACd,MAAM6B,EAAcC,GAAmBpB,GAAM,MAAOqB,GAAa,CAC/D,GAAIA,EAAU,CACZ,MAAMC,EAAUC,GAAIrB,GAAI,QAASmB,EAAS,GAAG,EACvCG,EAAU,MAAMC,GAAOH,CAAO,EAC9BI,EAAWF,EAAQ,SAAWA,EAAQ,KAAA,EAAS,CAAC,EAEhDG,EAAU,CACd,IAAKN,EAAS,IACd,MAAOA,EAAS,MAChB,KAAMK,EAAS,MAAQ,KACvB,SAAUA,EAAS,UAAY,GAC/B,SAAUA,EAAS,UAAY,KAC/B,cAAeA,EAAS,eAAiB,KACzC,UAAWA,EAAS,WAAa,IAAI,KACrC,cAAe,IACjB,EAEAd,EAAQe,CAAO,EACJX,EAAAU,EAAS,SAAW,EAAK,EACpCZ,EAAW,EAAK,CAAA,MAEhBF,EAAQ,IAAI,EACZI,EAAW,EAAK,EAChBF,EAAW,EAAK,CAClB,CACD,EAED,MAAO,IAAMK,EAAY,CAC3B,EAAG,EAAE,EAEC,MAAAS,EAAiB,MAAOC,GAAW,CACnC,GAAA,CACI,MAAAC,EAAIC,GAAMC,GAAW9B,GAAI,MAAM,EAAG+B,GAAM,SAAU,KAAMJ,CAAM,CAAC,EAC/DK,EAAgB,MAAMC,GAAQL,CAAC,EACrCZ,EAAagB,EAAc,IAAI,QACxBE,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,EACjDlB,EAAa,CAAC,CAAA,CAElB,EA8FM3B,EAAQ,CACZ,KAAAoB,EACA,QAAAE,EACA,OA3Fa,MAAOwB,EAAOC,EAAUZ,IAAa,CAC9C,GAAA,CACI,KAAA,CAAE,KAAAf,CAAK,EAAI,MAAM4B,GAA+BvC,GAAMqC,EAAOC,CAAQ,EAE3E,aAAME,GAAOjB,GAAIrB,GAAI,QAASS,EAAK,GAAG,EAAG,CACvC,GAAGe,EACH,MAAAW,EACA,UAAW,IAAI,KAAK,EAAE,YAAY,EAClC,SAAU,GACV,QAAS,EAAA,CACV,EAGD,MAAMI,GAAQzC,EAAI,EAEXW,QACAyB,EAAO,CACN,cAAA,MAAM,gBAAiBA,CAAK,EAC9B,IAAI,MAAMA,EAAM,OAAO,CAAA,CAEjC,EAwEE,MAtEY,MAAOC,EAAOC,IAAa,CACnC,GAAA,CACI,KAAA,CAAE,KAAA3B,CAAK,EAAI,MAAM+B,GAA2B1C,GAAMqC,EAAOC,CAAQ,EAChE3B,OAAAA,QACAyB,EAAO,CACN,cAAA,MAAM,eAAgBA,CAAK,EAC7B,IAAI,MAAMA,EAAM,OAAO,CAAA,CAEjC,EA+DE,gBA7DsB,SAAY,CAC9B,GAAA,CACF,KAAM,CAAE,KAAAzB,CAAAA,EAAS,MAAMgC,GAAgB3C,GAAMO,EAAc,EAKvD,OAFY,MAAMkB,GAAOF,GAAIrB,GAAI,QAASS,EAAK,GAAG,CAAC,GAE1C,UAEX,MAAM6B,GAAOjB,GAAIrB,GAAI,QAASS,EAAK,GAAG,EAAG,CACvC,MAAOA,EAAK,MACZ,KAAMA,EAAK,YACX,SAAUA,EAAK,SACf,UAAW,IAAI,KAAK,EAAE,YAAY,EAClC,SAAU,GACV,QAAS,GACT,gBAAiB,CACf,OAAQ,GACR,KAAM,GACN,MAAO,GACP,QAAS,GACT,WAAY,EAAA,CACd,CACD,EAGIA,QACAyB,EAAO,CAEV,MADI,QAAA,MAAM,sBAAuBA,CAAK,EACtCA,EAAM,OAAS,4BACX,IAAI,MAAM,mBAAmB,EAE/B,IAAI,MAAMA,EAAM,OAAO,CAAA,CAEjC,EA4BE,OA1Ba,SAAY,CACrB,GAAA,CACF,MAAMK,GAAQzC,EAAI,EAClB4C,EAAM,QAAQ,yBAAyB,QAChCR,EAAO,CACN,cAAA,MAAM,gBAAiBA,CAAK,EAC9B,IAAI,MAAMA,EAAM,OAAO,CAAA,CAEjC,EAmBE,cAjBoB,MAAOC,GAAU,CACjC,GAAA,CACI,MAAAQ,GAAuB7C,GAAMqC,CAAK,EACxCO,EAAM,QAAQ,qDAAqD,QAC5DR,EAAO,CACN,cAAA,MAAM,wBAAyBA,CAAK,EACtC,IAAI,MAAMA,EAAM,OAAO,CAAA,CAEjC,EAUE,QAAArB,EACA,UAAAE,EACA,gBAtGsB,MAAOY,GAAW,CACxC,MAAMD,EAAeC,CAAM,CAC7B,CAqGA,EAEA,aACGpB,GAAiB,SAAjB,CAA0B,MAAAlB,EACxB,SAAA,CAACsB,GAAW5B,EACf,CAEJ,CAEO,SAAS6D,IAAe,CAC7B,OAAOnD,EAAAA,WAAWc,EAAgB,CACpC,CC9KA,SAAwBsC,IAAc,CACpC,MAAMC,EAAWC,GAAY,EACvB,CAACC,EAAOC,CAAQ,EAAIC,GAAM,SAAS,aAAa,QAAQ,aAAa,GAAK,OAAO,EAEvF9D,EAAAA,UAAU,IAAM,CAEd,SAAS,gBAAgB,UAAU,OAAO,QAAS,MAAM,EAChD,SAAA,gBAAgB,UAAU,IAAI4D,CAAK,EAE/B,aAAA,QAAQ,cAAeA,CAAK,CAAA,EACxC,CAACA,CAAK,CAAC,EAEV,MAAMG,EAAc,IAAM,CACfF,EAAAD,IAAU,QAAU,OAAS,OAAO,CAC/C,EAEMI,EAAYC,GACTP,EAAS,WAAaO,EAGzBC,EAAW,CACf,CAAE,KAAM,SAAU,WAAOC,GAAO,CAAA,CAAA,EAAI,MAAO,WAAY,EACvD,CAAE,KAAM,qBAAsB,WAAOC,GAAa,CAAA,CAAA,EAAI,MAAO,aAAc,EAC3E,CAAE,KAAM,iBAAkB,WAAOC,GAAa,CAAA,CAAA,EAAI,MAAO,SAAU,EACnE,CAAE,KAAM,eAAgB,WAAOC,GAAa,CAAA,CAAA,EAAI,MAAO,OAAQ,EAC/D,CAAE,KAAM,wBAAyB,WAAOC,GAAY,CAAA,CAAA,EAAI,MAAO,gBAAiB,EAChF,CAAE,KAAM,4BAA6B,WAAOC,GAAc,CAAA,CAAA,EAAI,MAAO,oBAAqB,EAC1F,CAAE,KAAM,kBAAmB,WAAOC,GAAW,CAAA,CAAA,EAAI,MAAO,UAAW,CACrE,EAWE,OAAAC,OAAC,OAAI,UAAW,gBAAgBd,IAAU,OAAS,cAAgB,YAAY,GAE7E,SAAA,CAAA1D,MAAC,SAAO,CAAA,UAAW,GAAG0D,IAAU,OAAS,8BAAgC,0BAA0B,sBACjG,SAAA1D,EAAA,IAAC,OAAI,UAAU,yCACb,SAACwE,OAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oBACb,SAAAA,EAAA,IAAC,MAAG,UAAU,mCAAmC,uBAAW,CAC9D,CAAA,EACAA,EAAA,IAAC,SAAA,CACC,QAAS6D,EACT,UAAW,kBACTH,IAAU,OACN,gDACA,6CACN,kCACA,aAAW,eAEV,SAAAA,IAAU,OAAS1D,EAAA,IAACyE,GAAM,CAAA,UAAU,UAAU,EAAKzE,EAAA,IAAC0E,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAClF,CACF,CAAA,CACF,CAAA,EACF,EAGA1E,EAAAA,IAAC,OAAI,UAAW,GAAG0D,IAAU,OAAS,8BAAgC,0BAA0B,sBAC9F,SAAA1D,EAAAA,IAAC,OAAI,UAAU,yCACb,eAAC,MAAI,CAAA,UAAU,sBACZ,SAASgE,EAAA,IAAKW,GACbH,EAAA,KAACI,GAAA,CAEC,GAAID,EAAK,KACT,UAAW,qEACTb,EAASa,EAAK,IAAI,EACd,kCACA,sBACEjB,IAAU,OACN,0DACA,yDACN,EACN,GAEA,SAAA,CAAA1D,EAAA,IAAC,OAAK,CAAA,UAAU,OAAQ,SAAA2E,EAAK,KAAK,EACjCA,EAAK,KAAA,CAAA,EAbDA,EAAK,IAAA,CAeb,CACH,CAAA,CACF,CAAA,EACF,EAGA3E,EAAA,IAAC,OAAK,CAAA,UAAW,0CAA0C0D,IAAU,OAAS,aAAe,eAAe,GAC1G,SAAC1D,EAAA,IAAA6E,GAAA,CAAO,CAAA,CACV,CAAA,CAAA,EACF,CAEJ,CCvFA,MAAMC,GAAe,6CAErB,SAAwBC,IAAiB,CACjC,KAAA,CAAE,QAAAxD,CAAQ,EAAI+B,GAAa,EAC3B,CAACjC,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACoF,EAAiBC,CAAkB,EAAIrF,EAAAA,SAAS,EAAK,EACtD,CAACsF,EAAeC,CAAgB,EAAIvF,EAAAA,SAAS,EAAE,EAC/C,CAACwF,EAAYC,CAAa,EAAIzF,EAAAA,SAAS,EAAE,EACzC,CAAC0F,EAAeC,CAAgB,EAAI3F,EAAAA,SAAS,KAAK,EAClD,CAAC4F,EAAOC,CAAQ,EAAI7F,WAAS,CACjC,WAAY,EACZ,aAAc,EACd,aAAc,EACd,cAAe,EACf,mBAAoB,EACpB,gBAAiB,EACjB,YAAa,EACb,cAAe,EACf,eAAgB,EAChB,YAAa,EACb,kBAAmB,EACnB,cAAe,EACf,cAAe,EACf,aAAc,CAAC,EACf,WAAY,CAAC,EACb,eAAgB,CACd,SAAU,EACV,QAAS,CAAA,CACX,CACD,EAC2CA,EAAAA,SAAS,CAAE,CAAA,EACvD,KAAM,CAAC8F,EAAeC,CAAgB,EAAI/F,EAAAA,SAAS,MAAM,EACnBA,EAAAA,SAAS,EAAE,EACjD,KAAM,CAACgG,EAAaC,CAAc,EAAIjG,EAAAA,SAAS,CAAC,EAC1C,CAACkG,EAASC,CAAU,EAAInG,EAAAA,SAAS,EAAI,EACrC,CAACoG,EAAaC,CAAc,EAAIrG,EAAAA,SAAS,EAAK,EAC9CsG,EAAgB,GAEhBC,EAAkB,IAAM,CACtB,MAAAC,EAASZ,EAAM,cAAc,OAAaa,EAAM,UAAU,GAAK,CAAC,EACtE,MAAO,CAAC,MAAO,GAAG,IAAI,IAAID,CAAM,CAAC,CACnC,EAEME,EAAiBC,EAAAA,QAAQ,IACtBf,EAAM,cAAc,OAAgBa,GAAA,CACzC,MAAMG,EACHH,EAAM,GAAG,YAAc,EAAA,SAASjB,EAAW,aAAa,IACxDiB,EAAM,WAAW,MAAQ,IAAI,cAAc,SAASjB,EAAW,aAAa,EAEzEqB,EAAenB,IAAkB,OAASe,EAAM,aAAef,EAErE,OAAOkB,GAAiBC,CAAA,CACzB,EACA,CAACjB,EAAM,aAAcJ,EAAYE,CAAa,CAAC,EAE5CoB,EAAiB,SAAY,CAC7B,GAAA,EAAAV,GAAe,CAACF,GAEpB,CAAAG,EAAe,EAAI,EACf,GAAA,CACF,MAAMU,EAAYnB,EAAM,aAAaA,EAAM,aAAa,OAAS,CAAC,EAC5DoB,EAAcrE,GAClBC,GAAW9B,GAAI,QAAQ,EACvBmG,GAAQ,YAAa,MAAM,EAC3BC,GAAWH,EAAU,SAAS,EAC9BI,GAAMb,CAAa,CACrB,EAEMc,EAAiB,MAAMrE,GAAQiE,CAAW,EAC1CK,EAAY,MAAM,QAAQ,IAAID,EAAe,KAAK,IAAI,MAAMjF,GAAO,CACvE,MAAMmF,EAAY,CAChB,GAAInF,EAAI,GACR,GAAGA,EAAI,KAAK,CACd,EAGA,GAAImF,EAAU,SAAU,CACtB,MAAMC,EAAc5E,GAClBC,GAAW9B,GAAI,SAAS,EACxB+B,GAAM,MAAO,KAAMyE,EAAU,QAAQ,CACvC,EACME,EAAiB,MAAMzE,GAAQwE,CAAW,EAC5C,GAAA,CAACC,EAAe,MAAO,CACzB,MAAMC,EAAaD,EAAe,KAAK,CAAC,EAAE,KAAK,EAC/CF,EAAU,WAAaG,EAAW,WAAaA,EAAW,MAAQ,iBACxDH,EAAA,WAAaG,EAAW,SAAS,MAAQ,IAAA,CACrD,CAGK,OAAAH,CAAA,CACR,CAAC,EAEED,EAAU,OAASf,GACrBH,EAAW,EAAK,EAGlBN,EAAkB6B,IAAA,CAChB,GAAGA,EACH,aAAc,CAAC,GAAGA,EAAK,aAAc,GAAGL,CAAS,CAAA,EACjD,EACapB,EAAAyB,GAAQA,EAAO,CAAC,QACxB1E,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,EACjDQ,EAAM,MAAM,4BAA4B,CAAA,QACxC,CACA6C,EAAe,EAAK,CAAA,EAExB,EAEMsB,EAAgBC,GAAM,CAC1B,KAAM,CAAE,UAAAC,EAAW,aAAAC,EAAc,aAAAC,GAAiBH,EAAE,OAChDG,EAAeF,GAAaC,EAAe,KAC9BhB,EAAA,CAEnB,EAEA5G,EAAAA,UAAU,IAAM,EAEgB,SAAY,CACpC,GAAA,CACI,MAAA8H,EAAW,MAAMC,GAAuB,EAC9C,GAAID,EAAU,CACZ,MAAME,EAAW,MAAMF,EAAS,QAAQ,CAAE,OAAQ,eAAgB,EAC9DE,EAAS,OAAS,GAAKA,EAAS,CAAC,EAAE,YAAY,IAAMhD,GAAa,gBACnDK,EAAA2C,EAAS,CAAC,CAAC,EAC5B7C,EAAmB,EAAI,EACzB,QAEKrC,EAAO,CACN,QAAA,MAAM,oCAAqCA,CAAK,CAAA,CAE5D,GAEsB,CACxB,EAAG,EAAE,EAEL9C,EAAAA,UAAU,IAAM,CAEV,OAAO,UACT,OAAO,SAAS,GAAG,kBAAoBgI,GAAa,CAC9CA,EAAS,SAAW,GAAKA,EAAS,CAAC,EAAE,YAAY,IAAMhD,GAAa,eACtEG,EAAmB,EAAK,EACxBE,EAAiB,EAAE,IAEFA,EAAA2C,EAAS,CAAC,CAAC,EAC5B7C,EAAmB,EAAI,EACzB,CACD,CAEL,EAAG,EAAE,EAEL,MAAM8C,EAAsB,SAAY,CAClC,GAAA,CAEF,GAAI,CADa,MAAMF,GAAuB,EAC/B,CACbzE,EAAM,MAAM,gDAAgD,EAC5D,MAAA,CAGF,MAAM0E,EAAW,MAAM,OAAO,SAAS,QAAQ,CAC7C,OAAQ,qBAAA,CACT,EAEG,GAAAA,EAAS,SAAW,EAAG,CACzB1E,EAAM,MAAM,4BAA4B,EACxC,MAAA,CAGI8B,MAAAA,EAAgB4C,EAAS,CAAC,EAC5B5C,EAAc,YAAA,IAAkBJ,GAAa,eAC/CK,EAAiBD,CAAa,EAC9BD,EAAmB,EAAI,EACvB7B,EAAM,QAAQ,+BAA+B,IAE7CA,EAAM,MAAM,4CAA4C,EACxD6B,EAAmB,EAAK,EACxBE,EAAiB,EAAE,SAEdvC,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EAC5CA,EAAM,OAAS,KACjBQ,EAAM,MAAM,qCAAqC,EAEjDA,EAAM,MAAM,0BAA0B,CACxC,CAEJ,EAEAtD,EAAAA,UAAU,IAAM,CACVkF,GAAmBE,EAAc,YAAkB,IAAAJ,GAAa,eAC/CkD,EAAA,CACrB,EACC,CAAChD,EAAiBE,CAAa,CAAC,EAEnC,MAAM8C,EAAqB,SAAY,CACjC,GAAA,CACF1G,EAAW,EAAI,EACf,MAAM2G,EAAe1F,GAAMC,GAAW9B,GAAI,SAAS,CAAC,EAC9CwH,EAAkB,MAAMvF,GAAQsF,CAAY,EAE5CE,EAAmB5F,GACvBC,GAAW9B,GAAI,aAAa,EAC5B+B,GAAM,SAAU,KAAM,CAAC,YAAa,SAAS,CAAC,CAChD,EACM2F,EAAsB,MAAMzF,GAAQwF,CAAgB,EAEpDvB,EAAcrE,GAClBC,GAAW9B,GAAI,QAAQ,EACvBmG,GAAQ,YAAa,MAAM,EAC3BE,GAAMb,CAAa,CACrB,EACMc,EAAiB,MAAMrE,GAAQiE,CAAW,EAG1CyB,EAAa,CAAC,EACJH,EAAA,KAAK,QAAenG,IAAA,CAC5B,MAAAuG,EAAOvG,GAAI,KAAK,EACXsG,EAAAtG,GAAI,EAAE,EAAI,CACnB,GAAIA,GAAI,GACR,KAAMuG,EAAK,WAAaA,EAAK,MAAQ,gBACrC,KAAMA,EAAK,SAAS,MAAQ,IAC9B,CAAA,CACD,EAGK,MAAAC,EAAkB,MAAM,QAAQ,IAAIvB,EAAe,KAAK,IAAI,MAAMjF,IAAO,CAC7E,MAAMmF,EAAY,CAChB,GAAInF,GAAI,GACR,GAAGA,GAAI,KAAK,CACd,EAGA,GAAImF,EAAU,UAAYmB,EAAWnB,EAAU,QAAQ,EAAG,CAClD,MAAAG,GAAagB,EAAWnB,EAAU,QAAQ,EAChDA,EAAU,WAAaG,GAAW,KAClCH,EAAU,WAAaG,GAAW,IAAA,CAG7B,OAAAH,CAAA,CACR,CAAC,EAESnB,EAAAwC,EAAgB,SAAWrC,CAAa,EAGnD,MAAMsC,EAAcD,EAAgB,OAAgBlC,IAAAA,GAAM,SAAW,WAAW,EAC1EoC,EAAeD,EAAY,OAAOnC,IACtCA,GAAM,SAAW,WACjBA,GAAM,SAAW,cACjBA,GAAM,SAAW,aACjBA,GAAM,SAAW,WACnB,EACMqC,EAAiBF,EAAY,OAAgBnC,IAAAA,GAAM,SAAW,UAAU,EAGxEsC,EAAaF,EAAa,OAAO,CAACG,GAAKvC,IAAUuC,IAAO,OAAOvC,EAAM,KAAK,GAAK,GAAI,CAAC,EAGpFwC,EAAeH,EAAe,OAAO,CAACE,GAAKvC,IAAUuC,IAAQ,OAAOvC,EAAM,KAAK,GAAK,GAAK,IAAO,CAAC,EAGjGyC,EAAsBH,EAAa,IACnCI,GAAoB,CAAC,GAAGN,EAAc,GAAGC,CAAc,EAAE,OAAO,CAACE,GAAKvC,IAAUuC,GAAO,OAAOvC,EAAM,KAAK,EAAI,IAAO,CAAC,EAGrH2C,GAAgBZ,EAAoB,KACvC,OAAOrG,IAAOA,GAAI,KAAK,EAAE,SAAW,YAAcA,GAAI,OAAO,OAAS,cAAc,EACpF,OAAO,CAAC6G,GAAK7G,IAAQ6G,GAAM7G,EAAI,OAAO,OAAQ,CAAC,EAG5CkH,GAAoB,CAAC,EACPb,EAAA,KAAK,QAAerG,IAAA,CAChC,MAAAmH,EAAanH,GAAI,KAAK,EACtBoH,GAAWD,EAAW,SAEvBD,GAAkBE,EAAQ,IAC7BF,GAAkBE,EAAQ,EAAI,CAC5B,UAAW,EACX,QAAS,CACX,GAGED,EAAW,SAAW,YACxBD,GAAkBE,EAAQ,EAAE,WAAaD,EAAW,QAAU,EACrDA,EAAW,SAAW,YAC/BD,GAAkBE,EAAQ,EAAE,SAAWD,EAAW,QAAU,EAC9D,CACD,EAGD,MAAME,EAAc,CAAC,EACRX,EAAA,QAAiBpC,IAAA,CAC5B,MAAM8C,EAAW9C,GAAM,SACjBgD,GAAahB,EAAWc,CAAQ,GAAG,MAAQ,gBAE5CC,EAAYD,CAAQ,IACvBC,EAAYD,CAAQ,EAAI,CACtB,GAAIA,EACJ,KAAME,GACN,KAAMhB,EAAWc,CAAQ,GAAG,MAAQ,KACpC,WAAY,EACZ,WAAY,EACZ,YAAa,CACf,GAEFC,EAAYD,CAAQ,EAAE,YAAc,OAAO9C,GAAM,KAAK,GAAK,EAC/C+C,EAAAD,CAAQ,EAAE,aAAe,CAAA,CACtC,EAGD,OAAO,KAAKC,CAAW,EAAE,QAAoBD,IAAA,CACrC,MAAAG,EAAcL,GAAkBE,EAAQ,GAAK,CAAE,UAAW,EAAG,QAAS,CAAE,EAClEC,EAAAD,EAAQ,EAAE,WAAa,KAAK,IAAI,EAAGC,EAAYD,EAAQ,EAAE,WAAaG,EAAY,SAAS,CAAA,CACxG,EAGD,MAAMC,EAAe,OAAO,OAAOH,CAAW,EAC3C,OAAO,CAACR,GAAKY,IAAWZ,GAAMY,EAAO,WAAY,CAAC,EAG/CC,EAAa,OAAO,OAAOL,CAAW,EACzC,KAAK,CAACM,GAAGC,IAAMA,EAAE,WAAaD,GAAE,UAAU,EAC1C,MAAM,EAAG,CAAC,EACV,IAAeF,KAAA,CACd,GAAIA,GAAO,GACX,KAAMA,GAAO,KACb,KAAMA,GAAO,KACb,MAAO,KAAK,IAAI,EAAGA,GAAO,UAAU,EACpC,OAAQA,GAAO,WAAA,EACf,EAGEI,EAAgBrH,GAAMC,GAAW9B,GAAI,UAAU,CAAC,EAEhDmJ,GADmB,MAAMlH,GAAQiH,CAAa,GACb,KAGvC,IAAIE,GAAiB,CAAE,SAAU,EAAG,QAAS,CAAE,EAClCrB,EAAA,QAAiBpC,IAAA,CACxBA,GAAM,eAAe,UAAY,KACnCyD,GAAe,UAAY,OAAOzD,GAAM,KAAK,GAAK,EACzCA,GAAM,eAAe,UAAY,MAC1CyD,GAAe,SAAW,OAAOzD,GAAM,KAAK,GAAK,EACnD,CACD,EAEQZ,EAAA,CACP,WAAAkD,EACA,aAAAY,EACA,aAAAV,EACA,cAAeX,EAAgB,KAC/B,mBAAoBE,EAAoB,KAAK,OAAOrG,IAAOA,GAAI,KAAK,EAAE,SAAW,SAAS,EAAE,OAC5F,gBAAiB+G,EACjB,YAAaP,EAAgB,OAC7B,cAAAsB,EACA,eAAgB,IAAI,IAAI,CAAC,GAAGpB,EAAc,GAAGC,CAAc,EAAE,IAAIrC,IAASA,GAAM,OAAO,CAAC,EAAE,KAC1F,YAAayC,EACb,kBAAAC,GACA,cAAAC,GACA,cAAeD,GAAoBC,GACnC,aAAcT,EACd,WAAAkB,EACA,eAAAK,EAAA,CACD,QAEMlH,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,EACrDQ,EAAM,MAAM,+BAA+B,CAAA,QAC3C,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEA,OAAKC,EAID,CAACyD,GAAmBE,EAAc,gBAAkBJ,GAAa,cAEhEN,EAAA,KAAA,MAAI,CAAA,UAAU,qFACb,SAAA,OAAC,KAAA,CAAG,UAAU,yCAAyC,SAA6B,gCAAA,QACnF,IAAA,CAAE,UAAU,wCAAwC,SAAwD,2DAAA,EAC7GxE,EAAA,IAAC,SAAA,CACC,QAAS+H,EACT,UAAU,oFACX,SAAA,gBAAA,CAAA,CAED,EACF,EAIA1G,EAECrB,MAAA,OAAI,UAAU,gDACb,SAACA,EAAA,IAAA,MAAI,CAAA,UAAU,mFAAmF,EACpG,EAKDwE,EAAA,KAAA,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4DACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,iFACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAc,iBAAA,EACrEA,EAAAA,KAAA,IAAE,CAAA,UAAU,mDAAmD,SAAA,CAAA,IAAEgB,EAAM,WAAW,QAAQ,CAAC,CAAA,EAAE,QAC7F,IAAA,CAAE,UAAU,2CAA2C,SAA4B,8BAAA,CAAA,CAAA,EACtF,EACCxF,EAAAA,IAAA+J,GAAa,CAAA,UAAU,yBAA0B,CAAA,CAAA,CAAA,CACpD,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,iFACb,SAACvF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAa,gBAAA,EACpEA,EAAAA,KAAA,IAAE,CAAA,UAAU,mDAAmD,SAAA,CAAA,IAAE,KAAK,IAAI,EAAGgB,EAAM,YAAY,EAAE,QAAQ,CAAC,CAAA,EAAE,QAC5G,IAAA,CAAE,UAAU,2CAA2C,SAAwB,0BAAA,CAAA,CAAA,EAClF,EACCxF,EAAAA,IAAAoE,GAAa,CAAA,UAAU,yBAA0B,CAAA,CAAA,CAAA,CACpD,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,+EACb,SAACI,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAa,gBAAA,EACpEA,EAAAA,KAAA,IAAE,CAAA,UAAU,mDAAmD,SAAA,CAAA,IAAEgB,EAAM,aAAa,QAAQ,CAAC,CAAA,EAAE,QAC/F,IAAA,CAAE,UAAU,2CAA2C,SAAqC,uCAAA,CAAA,CAAA,EAC/F,EACCxF,EAAAA,IAAAkE,GAAa,CAAA,UAAU,uBAAwB,CAAA,CAAA,CAAA,CAClD,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,iFACb,SAACM,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAsB,yBAAA,EAC7EA,EAAAA,KAAA,IAAE,CAAA,UAAU,mDAAmD,SAAA,CAAA,IAAEgB,EAAM,kBAAkB,QAAQ,CAAC,CAAA,EAAE,QACpG,IAAA,CAAE,UAAU,2CAA2C,SAAqC,uCAAA,CAAA,CAAA,EAC/F,EACCxF,EAAAA,IAAA+J,GAAa,CAAA,UAAU,yBAA0B,CAAA,CAAA,CAAA,CACpD,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,iFACb,SAACvF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAqB,wBAAA,EAC5EA,EAAAA,KAAA,IAAE,CAAA,UAAU,mDAAmD,SAAA,CAAA,IAAEgB,EAAM,YAAY,QAAQ,CAAC,CAAA,EAAE,QAC9F,IAAA,CAAE,UAAU,2CAA2C,SAAwB,0BAAA,CAAA,CAAA,EAClF,EACCxF,EAAAA,IAAAoE,GAAa,CAAA,UAAU,yBAA0B,CAAA,CAAA,CAAA,CACpD,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,iFACb,SAACI,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAc,iBAAA,EACrExE,EAAA,IAAA,IAAA,CAAE,UAAU,mDAAoD,WAAM,cAAc,EACpFwE,EAAAA,KAAA,IAAE,CAAA,UAAU,2CAA4C,SAAA,CAAMgB,EAAA,cAAc,kBAAA,CAAgB,CAAA,CAAA,EAC/F,EACCxF,EAAAA,IAAAgK,GAAQ,CAAA,UAAU,yBAA0B,CAAA,CAAA,CAAA,CAC/C,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,iFACb,SAACxF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAY,eAAA,EACnExE,EAAA,IAAA,IAAA,CAAE,UAAU,mDAAoD,WAAM,YAAY,QAClF,IAAA,CAAE,UAAU,2CAA2C,SAAe,iBAAA,CAAA,CAAA,EACzE,EACCA,EAAAA,IAAAiK,GAAc,CAAA,UAAU,yBAA0B,CAAA,CAAA,CAAA,CACrD,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,iFACb,SAACzF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAc,iBAAA,EACrExE,EAAA,IAAA,IAAA,CAAE,UAAU,mDAAoD,WAAM,cAAc,QACpF,IAAA,CAAE,UAAU,2CAA2C,SAAe,iBAAA,CAAA,CAAA,EACzE,EACCA,EAAAA,IAAAiE,GAAO,CAAA,UAAU,yBAA0B,CAAA,CAAA,CAAA,CAC9C,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,iFACb,SAACO,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAe,kBAAA,EACtExE,EAAA,IAAA,IAAA,CAAE,UAAU,mDAAoD,WAAM,eAAe,QACrF,IAAA,CAAE,UAAU,2CAA2C,SAAa,eAAA,CAAA,CAAA,EACvE,EACCA,EAAAA,IAAAgK,GAAQ,CAAA,UAAU,yBAA0B,CAAA,CAAA,CAAA,CAC/C,CACF,CAAA,CAAA,EACF,EAECxF,EAAAA,KAAA,MAAI,CAAA,UAAU,6CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qDACb,SAAA,OAAC,KAAA,CAAG,UAAU,2DAA2D,SAAgB,mBAAA,EACxFA,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,MAAC,OAAI,IAAI,qBAAqB,IAAI,WAAW,UAAU,yBAAyB,QAC/E,OAAA,CAAK,UAAU,mCAAmC,SAAQ,UAAA,CAAA,CAAA,EAC7D,EACCwE,EAAAA,KAAA,OAAK,CAAA,UAAU,4CAA4C,SAAA,CAAA,IACxDgB,EAAM,eAAe,SAAS,QAAQ,CAAC,CAAA,CAC3C,CAAA,CAAA,EACF,EACChB,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,MAAC,OAAI,IAAI,eAAe,IAAI,UAAU,UAAU,yBAAyB,QACxE,OAAA,CAAK,UAAU,mCAAmC,SAAO,SAAA,CAAA,CAAA,EAC5D,EACCwE,EAAAA,KAAA,OAAK,CAAA,UAAU,4CAA4C,SAAA,CAAA,IACxDgB,EAAM,eAAe,QAAQ,QAAQ,CAAC,CAAA,CAC1C,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEChB,EAAAA,KAAA,MAAI,CAAA,UAAU,qDACb,SAAA,OAAC,KAAA,CAAG,UAAU,2DAA2D,SAAW,cAAA,QACnF,MAAA,CAAI,UAAU,YACZ,SAAMgB,EAAA,WAAW,IAAI,CAACgE,EAAQU,IAC5B1F,OAAA,MAAA,CAAoB,UAAU,oCAC7B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,wFACb,SAAAkK,EAAQ,EACX,EACC1F,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,mCAAoC,SAAAwJ,EAAO,KAAK,EAC/DA,EAAO,MACNxJ,EAAA,IAAC,MAAA,CACC,IAAKwJ,EAAO,KACZ,IAAI,sBACJ,UAAU,kDAAA,CAAA,CACZ,CAEJ,CAAA,CAAA,EACF,EACChF,EAAAA,KAAA,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,4CAA4C,SAAA,CAAA,IACxDgF,EAAO,MAAM,QAAQ,CAAC,CAAA,EAC1B,EACChF,EAAAA,KAAA,IAAE,CAAA,UAAU,2CACV,SAAA,CAAOgF,EAAA,OAAO,SAAA,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,GAvBQA,EAAO,EAwBjB,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEChF,EAAAA,KAAA,MAAI,CAAA,UAAU,0DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,OAAC,KAAA,CAAG,UAAU,sDAAsD,SAAa,gBAAA,EAChFA,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,MAAOsF,EACP,SAAWkC,GAAMjC,EAAiBiC,EAAE,OAAO,KAAK,EAChD,UAAU,2LAET,SAAgBrB,EAAA,EAAE,IAAKgE,SACrB,SAAA,CAAmB,MAAOA,EACxB,SAAUA,IAAA,MAAQ,aAAeA,CAAA,EADvBA,CAEb,CACD,CAAA,CACH,EAEC3F,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,YAAY,iCACZ,MAAOoF,EACP,SAAWoC,GAAMnC,EAAcmC,EAAE,OAAO,KAAK,EAC7C,UAAU,qMAAA,CACZ,EACAxH,EAAA,IAAC,MAAA,CACC,UAAU,mEACV,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAA,EAAA,IAAC,OAAA,CACC,cAAc,QACd,eAAe,QACf,YAAa,EACb,EAAE,6CAAA,CAAA,CACJ,CAAA,CACF,EACF,EAECwE,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM2F,EAAiB,MAAM,EACtC,UAAW,oCACTD,IAAkB,OACd,0BACA,4EACN,GAEA,SAAC1F,EAAAA,IAAAoK,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAC9B,EACApK,EAAA,IAAC,SAAA,CACC,QAAS,IAAM2F,EAAiB,MAAM,EACtC,UAAW,oCACTD,IAAkB,OACd,0BACA,4EACN,GAEA,SAAC1F,EAAAA,IAAAiE,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC9B,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECyB,IAAkB,OAChB1F,EAAAA,IAAA,MAAA,CAAI,UAAU,kBACb,SAACwE,EAAA,KAAA,QAAM,CAAA,UAAU,2DACf,SAAA,CAAAxE,MAAC,QAAM,CAAA,UAAU,8BACf,SAAAwE,EAAA,KAAC,KACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,oGAAoG,SAElH,WAAA,QACC,KAAA,CAAG,UAAU,oGAAoG,SAElH,SAAA,QACC,KAAA,CAAG,UAAU,oGAAoG,SAElH,WAAA,QACC,KAAA,CAAG,UAAU,oGAAoG,SAElH,SAAA,QACC,KAAA,CAAG,UAAU,oGAAoG,SAElH,SAAA,QACC,KAAA,CAAG,UAAU,oGAAoG,SAElH,MAAA,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EACCxE,EAAA,IAAA,QAAM,CAAA,UAAU,0EACd,SAAAsG,GAAgB,IAAKD,GACnB7B,EAAA,KAAA,KAAkB,CAAA,UAAU,0CAC3B,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAU,uEACX,WAAM,GAAG,MAAM,EAAE,CAAA,CACpB,QACC,KAAG,CAAA,UAAU,uEACZ,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,OAAC,OAAA,CAAM,WAAM,WAAW,EACvB6B,EAAM,YACLrG,EAAA,IAAC,MAAA,CACC,IAAKqG,EAAM,WACX,IAAI,sBACJ,UAAU,kDAAA,CAAA,CACZ,CAAA,CAEJ,CAAA,CACF,QACC,KAAG,CAAA,UAAU,uEACZ,SAAC7B,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,OAAM,CAAA,SAAAqG,EAAM,WAAW,MAAQ,YAAY,EAC3CA,EAAM,MACLrG,EAAA,IAAC,MAAA,CACC,IAAKqG,EAAM,KACX,IAAK,OAAOA,EAAM,iBAAiB,SAAY,SAC3CA,EAAM,iBAAiB,QAAQ,KAC/BA,EAAM,iBAAiB,QAC3B,UAAU,kDAAA,CAAA,CACZ,CAAA,CAEJ,CAAA,CACF,EACC7B,EAAAA,KAAA,KAAG,CAAA,UAAU,uEAAuE,SAAA,CAAA,IACjF6B,EAAM,OAAO,QAAQ,CAAC,CAAA,EAC1B,QACC,KAAG,CAAA,UAAU,sCACZ,eAAC,QAAK,UAAW,8CACfA,EAAM,SAAW,aACjBA,EAAM,SAAW,UADc,oEAE/BA,EAAM,SAAW,aAAe,gEAChCA,EAAM,SAAW,YAAc,4DAC/BA,EAAM,SAAW,WAAa,wEAC9BA,EAAM,SAAW,YAAc,wEAC/B,+DACF,GACG,SAAAA,EAAM,MACT,CAAA,EACF,EACArG,MAAC,MAAG,UAAU,uEACX,WAAM,WAAW,OAAS,IAAI,KAAKqG,EAAM,UAAU,QAAQ,EAAE,eAAmB,EAAA,IAAI,KAAKA,EAAM,SAAS,EAAE,gBAC7G,CAAA,CAAA,GAhDOA,EAAM,EAiDf,CACD,CACH,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EAEA7B,EAAA,KAAC,MAAA,CACC,UAAU,4EACV,MAAO,CAAE,UAAW,OAAQ,EAC5B,SAAU+C,EAET,SAAA,CAAgBjB,GAAA,IAAKD,GACpB7B,EAAA,KAAC,MAAA,CAEC,UAAU,uDAEV,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,uDAAuD,SAAA,CAAA,UAC1D6B,EAAM,GAAG,MAAM,EAAE,CAAA,EAC3B,EACArG,MAAC,KAAE,UAAU,2CACV,WAAM,WAAW,OAAS,IAAI,KAAKqG,EAAM,UAAU,QAAQ,EAAE,eAAmB,EAAA,IAAI,KAAKA,EAAM,SAAS,EAAE,gBAC7G,CAAA,CAAA,EACF,EACCrG,EAAA,IAAA,OAAA,CAAK,UAAW,8CACfqG,EAAM,SAAW,aACjBA,EAAM,SAAW,UADc,oEAE/BA,EAAM,SAAW,aAAe,gEAChCA,EAAM,SAAW,YAAc,4DAC/BA,EAAM,SAAW,WAAa,wEAC9BA,EAAM,SAAW,YAAc,wEAC/B,+DACF,GACG,WAAM,MACT,CAAA,CAAA,EACF,EAEC7B,EAAAA,KAAA,MAAI,CAAA,UAAU,wEACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,2CAA2C,SAAQ,WAAA,EAClEA,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,MAAC,QAAK,UAAU,uDACb,SAAMqG,EAAA,WAAW,MAAQ,YAC5B,EACCA,EAAM,MACLrG,EAAA,IAAC,MAAA,CACC,IAAKqG,EAAM,KACX,IAAI,qBACJ,UAAU,kDAAA,CAAA,CACZ,CAEJ,CAAA,CAAA,EACF,EACC7B,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,2CAA2C,SAAM,SAAA,EAChEA,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,uDACb,SAAAqG,EAAM,WACT,EACCA,EAAM,YACLrG,EAAA,IAAC,MAAA,CACC,IAAKqG,EAAM,WACX,IAAI,sBACJ,UAAU,kDAAA,CAAA,CACZ,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEC7B,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,uDAAuD,SAAY,eAAA,EAClFA,EAAAA,KAAA,OAAK,CAAA,UAAU,kDAAkD,SAAA,CAAA,IAC9D6B,EAAM,OAAO,QAAQ,CAAC,CAAA,CAC1B,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EA/DKA,EAAM,EAAA,CAiEd,EACAL,SACE,MAAI,CAAA,UAAU,yCACb,SAAChG,EAAAA,IAAA,MAAA,CAAI,UAAU,kFAAmF,CAAA,CACpG,CAAA,CAAA,CAAA,CAAA,CAEJ,CAEJ,CAAA,CAAA,EACF,QA/ZQqK,GAAA,CAAS,GAAG,eAAe,QAAO,GAAC,CAia/C,CC/xBO,SAASC,IAAY,CAC1B,KAAM,CAAE,QAAAC,EAAS,YAAAC,CAAa,EAAGC,GAAY,EACvC,CAAE,MAAAC,CAAO,EAAGC,GAAY,EACxBC,EAAeC,GAAiB,EAChC,CAAE,KAAMC,CAAc,EAAGC,GAAiB,EAEhD,MAAO,CACL,QAASR,EACT,YAAAC,EACA,MAAAE,EACA,SAAUE,EACV,OAAQE,CACT,CACH,g6KCbaE,GAAgB,CAC3B,KAAQ,mBACR,IAAO,iBACT,EAEaC,GAAmB,CAC9B,KAAQ,CACN,KAAQ,6CACR,KAAQ,4CACV,EACA,IAAO,CACL,KAAQ,6CACR,KAAQ,4CAAA,CAEZ,EAEaC,GAAM,CACjB,CACE,UAAa,GACb,OAAU,CACR,CAAC,QAAW,GAAM,aAAgB,UAAW,KAAQ,UAAW,KAAQ,SAAS,EACjF,CAAC,QAAW,GAAM,aAAgB,UAAW,KAAQ,QAAS,KAAQ,SAAS,EAC/E,CAAC,QAAW,GAAM,aAAgB,UAAW,KAAQ,SAAU,KAAQ,SAAS,EAChF,CAAC,QAAW,GAAO,aAAgB,UAAW,KAAQ,QAAS,KAAQ,SAAS,EAChF,CAAC,QAAW,GAAO,aAAgB,UAAW,KAAQ,SAAU,KAAQ,SAAS,CACnF,EACA,KAAQ,eACR,KAAQ,OACV,EACA,CACE,OAAU,CACR,CAAC,aAAgB,UAAU,KAAQ,UAAU,KAAQ,SAAS,EAC9D,CAAC,aAAgB,UAAU,KAAQ,SAAS,KAAQ,SAAS,EAC7D,CAAC,aAAgB,UAAU,KAAQ,UAAU,KAAQ,SAAS,CAChE,EACA,KAAQ,cACR,QAAW,CAAC,EACZ,gBAAmB,aACnB,KAAQ,UACV,EACA,CACE,OAAU,CACR,CAAC,aAAgB,UAAU,KAAQ,SAAS,KAAQ,SAAS,EAC7D,CAAC,aAAgB,UAAU,KAAQ,UAAU,KAAQ,SAAS,CAChE,EACA,KAAQ,oBACR,QAAW,CAAC,EACZ,gBAAmB,aACnB,KAAQ,UACV,EACA,CACE,OAAU,CACR,CAAC,aAAgB,UAAU,KAAQ,UAAU,KAAQ,SAAS,EAC9D,CAAC,aAAgB,UAAU,KAAQ,SAAS,KAAQ,SAAS,EAC7D,CAAC,aAAgB,UAAU,KAAQ,UAAU,KAAQ,SAAS,CAChE,EACA,KAAQ,oBACR,QAAW,CAAC,EACZ,gBAAmB,aACnB,KAAQ,UACV,EACA,CACE,OAAU,CACR,CAAC,aAAgB,UAAU,KAAQ,WAAW,KAAQ,SAAS,EAC/D,CAAC,aAAgB,UAAU,KAAQ,SAAS,KAAQ,SAAS,EAC7D,CAAC,aAAgB,UAAU,KAAQ,UAAU,KAAQ,SAAS,EAC9D,CAAC,aAAgB,UAAU,KAAQ,UAAU,KAAQ,SAAS,CAChE,EACA,KAAQ,gBACR,QAAW,CAAC,EACZ,gBAAmB,aACnB,KAAQ,UACV,EACA,CACE,OAAU,CAAC,EACX,KAAQ,QACR,QAAW,CAAC,EACZ,gBAAmB,aACnB,KAAQ,UACV,EACA,CACE,OAAU,CAAC,EACX,KAAQ,UACR,QAAW,CAAC,EACZ,gBAAmB,aACnB,KAAQ,UACV,EACA,CACE,OAAU,CAAC,EACX,KAAQ,QACR,QAAW,CAAC,CAAC,aAAgB,UAAU,KAAQ,GAAG,KAAQ,UAAU,EACpE,gBAAmB,OACnB,KAAQ,UACV,EACA,CACE,OAAU,CAAC,EACX,KAAQ,SACR,QAAW,CAAC,CAAC,aAAgB,OAAO,KAAQ,GAAG,KAAQ,OAAO,EAC9D,gBAAmB,OACnB,KAAQ,UACV,EACA,CACE,OAAU,CAAC,CAAC,aAAgB,UAAU,KAAQ,GAAG,KAAQ,SAAS,EAAE,CAAC,aAAgB,UAAU,KAAQ,GAAG,KAAQ,UAAU,EAC5H,KAAQ,iBACR,QAAW,CAAC,CAAC,aAAgB,UAAU,KAAQ,GAAG,KAAQ,UAAU,EACpE,gBAAmB,OACnB,KAAQ,UACV,EACA,CACE,OAAU,CAAC,CAAC,aAAgB,UAAU,KAAQ,GAAG,KAAQ,UAAU,EACnE,KAAQ,SACR,QAAW,CACT,CAAC,aAAgB,UAAU,KAAQ,UAAU,KAAQ,SAAS,EAC9D,CAAC,aAAgB,UAAU,KAAQ,QAAQ,KAAQ,SAAS,EAC5D,CAAC,aAAgB,UAAU,KAAQ,SAAS,KAAQ,SAAS,EAC7D,CAAC,aAAgB,UAAU,KAAQ,QAAQ,KAAQ,SAAS,EAC5D,CAAC,aAAgB,UAAU,KAAQ,SAAS,KAAQ,SAAS,EAC7D,CAAC,aAAgB,OAAO,KAAQ,cAAc,KAAQ,MAAM,EAC5D,CAAC,aAAgB,UAAU,KAAQ,YAAY,KAAQ,SAAS,EAChE,CAAC,aAAgB,OAAO,KAAQ,aAAa,KAAQ,MAAM,CAC7D,EACA,gBAAmB,OACnB,KAAQ,UACV,EACA,CACE,OAAU,CACR,CAAC,aAAgB,UAAU,KAAQ,SAAS,KAAQ,SAAS,EAC7D,CAAC,aAAgB,UAAU,KAAQ,UAAU,KAAQ,SAAS,CAChE,EACA,KAAQ,uBACR,QAAW,CAAC,EACZ,gBAAmB,aACnB,KAAQ,UAAA,CAEZ,EAEaC,GAAsBC,GAAY,CACvC,MAAAC,EAAS,+BAA+BD,CAAO,GAC/Cb,EAAUe,GAAgBD,CAAM,EACtC,OAAKd,IACH,QAAQ,KAAK,uCAAuCa,CAAO,eAAeC,CAAM,4BAA4B,EACrG,KAGX,EAEaE,GAA2B,CAAC3D,EAAUwD,IAAY,CACzD,GAAA,CACI,MAAAb,EAAUY,GAAmBC,CAAO,EAC1C,GAAI,CAACb,EACI,OAAA,KAGT,GAAI,CAACiB,GAAiBjB,CAAO,EAC3B,eAAQ,KAAK,sCAAsCa,CAAO,KAAKb,CAAO,EAAE,EACjE,KAGT,MAAMkB,EAAW,IAAIC,EAAgBnB,EAASW,GAAKtD,CAAQ,EACpD,cAAA,eAAe6D,EAAU,UAAW,CACzC,MAAOlB,EACP,SAAU,GACV,aAAc,EAAA,CACf,EACMkB,QACA7I,EAAO,CACd,eAAQ,KAAK,8CAA8CwI,CAAO,IAAKxI,CAAK,EACrE,IAAA,CAEX,EAEa+I,GAAmB,CAAC/D,EAAUwD,EAASQ,IAAgB,CAClE,MAAMC,EAAeZ,GAAiBG,CAAO,IAAIQ,CAAW,EACxD,GAAA,CAACC,EAAoB,MAAA,IAAI,MAAM,qBAAqBD,CAAW,aAAaR,CAAO,EAAE,EACzF,GAAI,CAACI,GAAiBK,CAAY,EAChC,MAAM,IAAI,MAAM,0BAA0BA,CAAY,EAAE,EAG1D,MAAMC,EAAW,CACf,4EACA,qFACA,qEACF,EAEML,EAAW,IAAIC,EAAgBG,EAAcC,EAAUlE,CAAQ,EAC9D,cAAA,eAAe6D,EAAU,UAAW,CACzC,MAAOI,EACP,SAAU,GACV,aAAc,EAAA,CACf,EACMJ,CACT,EAMaM,GAAmB,CAACC,EAAQC,EAAW,IAC3CC,GAAkBF,EAAO,SAAA,EAAYC,CAAQ,EC3LhDnH,GAAe,6CAErB,SAAwBqH,IAAa,CACnC,KAAM,CAACC,EAAWC,CAAY,EAAIzM,WAAS,CACzC,aAAc,EACd,aAAc,EACd,YAAa,EACb,kBAAmB,EACnB,gBAAiB,EACjB,WAAY,CACV,KAAM,CAAE,MAAO,EAAG,QAAS,CAAE,EAC7B,KAAM,CAAE,MAAO,EAAG,QAAS,CAAE,CAAA,CAC/B,CACD,EACK,CAAC0M,EAAaC,CAAc,EAAI3M,EAAAA,SAAS,CAAA,CAAE,EAC3C,CAAC4M,EAAYC,CAAa,EAAI7M,EAAAA,SAAS,KAAK,EAC5C,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAE,MAAA8D,CAAM,EAAIzD,GAAS,EACrB,CAAC+E,EAAiBC,CAAkB,EAAIrF,EAAAA,SAAS,EAAK,EACtD,CAACsF,EAAeC,CAAgB,EAAIvF,EAAAA,SAAS,EAAE,EACjC0D,GAAa,EACjC,KAAM,CAAC8B,EAAYC,CAAa,EAAIzF,EAAAA,SAAS,EAAE,EACzC,CAAC0F,EAAeC,CAAgB,EAAI3F,EAAAA,SAAS,KAAK,EAExDE,EAAAA,UAAU,IAAM,EAEgB,SAAY,CACpC,GAAA,CACI,MAAA8H,EAAW,MAAMC,GAAuB,EAC9C,GAAID,EAAU,CACZ,MAAME,EAAW,MAAMF,EAAS,QAAQ,CAAE,OAAQ,eAAgB,EAC9DE,EAAS,OAAS,GAAKA,EAAS,CAAC,EAAE,YAAY,IAAMhD,GAAa,gBACnDK,EAAA2C,EAAS,CAAC,CAAC,EAC5B7C,EAAmB,EAAI,EACzB,QAEKrC,EAAO,CACN,QAAA,MAAM,oCAAqCA,CAAK,CAAA,QACxD,CACAtB,EAAW,EAAK,CAAA,CAEpB,GAEsB,CACxB,EAAG,EAAE,EAELxB,EAAAA,UAAU,IAAM,CAEV,OAAO,UACT,OAAO,SAAS,GAAG,kBAAoBgI,GAAa,CAC9CA,EAAS,SAAW,GAAKA,EAAS,CAAC,EAAE,YAAY,IAAMhD,GAAa,eACtEG,EAAmB,EAAK,EACxBE,EAAiB,EAAE,IAEFA,EAAA2C,EAAS,CAAC,CAAC,EAC5B7C,EAAmB,EAAI,EACzB,CACD,CAEL,EAAG,EAAE,EAELnF,EAAAA,UAAU,IAAM,CACVkF,GAAmBE,EAAc,YAAkB,IAAAJ,GAAa,eACnD4H,EAAA,CACjB,EACC,CAAC1H,EAAiBE,CAAa,CAAC,EAEnC,MAAMwH,EAAiB,SAAY,CAC7B,GAAA,CACFpL,EAAW,EAAI,EAGf,MAAMsF,EAAcrE,GAClBC,GAAW9B,GAAI,QAAQ,EACvBmG,GAAQ,YAAa,MAAM,CAC7B,EAEM8F,GADiB,MAAMhK,GAAQiE,CAAW,GAClB,KAAK,IAAI7E,IAAQ,CAC7C,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,EACZ,UAAWA,EAAI,KAAK,EAAE,WAAW,OAAO,OAAS,KACjD,KAAMA,EAAI,KAAK,EAAE,MAAQ,KACzB,gBAAiBA,EAAI,KAAK,EAAE,iBAAmB,CAAA,CAAC,EAChD,EAGI6K,EAAgB,CAAC,EAChBD,EAAA,QAAiBtG,GAAA,CAClBA,EAAM,UAAY,CAACuG,EAAcvG,EAAM,QAAQ,IACnCuG,EAAAvG,EAAM,QAAQ,EAAI,CAC9B,GAAIA,EAAM,SACV,KAAMA,EAAM,YAAc,gBAC5B,EACF,CACD,EAGD,MAAMmC,EAAcmE,EAAO,OAAgBtG,GAAAA,EAAM,SAAW,WAAW,EACjEoC,EAAeD,EAAY,OAAOnC,GACtCA,EAAM,SAAW,WACjBA,EAAM,SAAW,cACjBA,EAAM,SAAW,aACjBA,EAAM,SAAW,WACnB,EACMqC,EAAiBF,EAAY,OAAgBnC,GAAAA,EAAM,SAAW,UAAU,EAGxEsC,EAAaF,EAAa,OAAO,CAACG,EAAKvC,IAAUuC,GAAO,OAAOvC,EAAM,KAAK,GAAK,GAAI,CAAC,EAGpFwC,EAAeH,EAAe,OAAO,CAACE,EAAKvC,IAAUuC,GAAQ,OAAOvC,EAAM,KAAK,GAAK,GAAK,IAAO,CAAC,EAGjGwG,EAAa,CACjB,KAAM,CAAE,MAAO,EAAG,QAAS,EAAG,IAAK,CAAE,EACrC,KAAM,CAAE,MAAO,EAAG,QAAS,EAAG,IAAK,CAAE,CACvC,EAGapE,EAAA,QAAiBpC,GAAA,CACtB,MAAAyG,EAAQzG,EAAM,eAAe,OAAS,OACtC2F,EAAS,OAAO3F,EAAM,KAAK,GAAK,EAClCwG,EAAWC,CAAK,IACPD,EAAAC,CAAK,EAAE,OAASd,EAC3Ba,EAAWC,CAAK,EAAE,IAAMD,EAAWC,CAAK,EAAE,MAC5C,CACD,EAGcpE,EAAA,QAAiBrC,GAAA,CACxB,MAAAyG,EAAQzG,EAAM,eAAe,OAAS,OAEtC0G,GADS,OAAO1G,EAAM,KAAK,GAAK,GACR,IAC1BwG,EAAWC,CAAK,IACPD,EAAAC,CAAK,EAAE,SAAWC,EAE/B,CACD,EAGYV,EAAA,CACX,aAAc,KAAK,IAAI,EAAG1D,CAAU,EACpC,aAAAE,EACA,YAAaJ,EAAa,OAC1B,kBAAmBA,EAAa,OAASE,EAAaF,EAAa,OAAS,EAC5E,gBAAiB,IAAI,IAAIA,EAAa,IAAapC,GAAAA,EAAM,OAAO,CAAC,EAAE,KACnE,WAAAwG,EACA,aAAc,MAAM,QAAQ,IAAIF,EAAO,MAAM,EAAG,EAAE,EAAE,IAAI,MAAMtG,GAAS,CAE/D,MAAA2G,EAAY,MAAM/K,GAAOF,GAAIrB,GAAI,UAAW2F,EAAM,QAAQ,CAAC,EAC3DgB,EAAa2F,EAAU,SAAWA,EAAU,KAAA,EAAS,CAAC,EAErD,MAAA,CACL,GAAI3G,EAAM,IAAM,GAChB,UAAWA,EAAM,WAAa,CAAC,EAC/B,MAAO,OAAOA,EAAM,KAAK,GAAK,EAC9B,OAAQA,EAAM,QAAU,UACxB,UAAWA,EAAM,WAAa,IAAI,KAClC,SAAUA,EAAM,UAAY,GAC5B,WAAYA,EAAM,YAAc,iBAChC,WAAYgB,EAAW,SAAS,MAAQ,KACxC,KAAMhB,EAAM,MAAQ,KACpB,gBAAiBA,EAAM,iBAAmB,CAAA,CAC5C,CAAA,CACD,CAAC,CAAA,CACH,EAGK,MAAAgB,EAAa,MAAM,QAAQ,IAAI,OAAO,OAAOuF,CAAa,EAAE,IAAI,MAAMpD,GAAU,CAGpF,MAAMnC,GADY,MAAMpF,GAAOF,GAAIrB,GAAI,UAAW8I,EAAO,EAAE,CAAC,GAC/B,KAAK,GAAK,CAAC,EAGlCyD,EAAO5F,EAAW,SAAS,MAAQ,KACnC6F,EAAU7F,EAAW,SAAW,KAGhC8F,EAAiB,OAAO9F,EAAW,SAAS,WAAa,CAAC,EAE1D+F,EAAe5E,EAAY,WAAgBnC,GAAM,WAAamD,EAAO,EAAE,EACvE6D,EAA0BD,EAAa,OAAgB/G,IAAAA,GAAM,SAAW,UAAU,EAClFiH,EAAuBF,EAAa,OAAgB/G,IAAAA,GAAM,SAAW,UAAU,EAG/EkH,EAAeH,EAClB,OAAO/G,KACLA,GAAM,SAAW,WAAaA,GAAM,SAAW,cAAgBA,GAAM,SAAW,cACjFA,GAAM,SAAW,UACnB,EACC,OAAO,CAACuC,GAAKvC,IAAUuC,IAAO,OAAOvC,EAAM,KAAK,GAAK,GAAI,CAAC,EAGvDwC,EAAeyE,EAAqB,OAAO,CAAC1E,GAAKvC,IAAUuC,IAAQ,OAAOvC,EAAM,KAAK,GAAK,GAAK,IAAO,CAAC,EAGvGmH,GAAwBC,IAAS,CAC/B,MAAAC,MAAU,KACVC,EAAS,IAAI,KAAKD,CAAG,EAC3B,OAAAC,EAAO,SAAS,EAAG,EAAG,EAAG,CAAC,EAC1BA,EAAO,QAAQA,EAAO,QAAQ,EAAIF,EAAI,EAE/BL,EACJ,OAAgB/G,GAAA,CACX,GAAA,CAACA,EAAM,UAAkB,MAAA,GAG7B,MAAMuH,EAAY,IAAI,KAAKvH,EAAM,SAAS,EAC1CuH,EAAU,SAAS,EAAG,EAAG,EAAG,CAAC,EAG7B,MAAMC,EAAiBD,GAAaD,EAG9BG,GACJzH,EAAM,SAAW,WACjBA,EAAM,SAAW,cACjBA,EAAM,SAAW,aACjBA,EAAM,SAAW,cACdA,EAAM,SAAW,WAEtB,OAAOwH,GAAkBC,CAC1B,CAAA,EACA,OAAO,CAAClF,EAAKvC,IAAUuC,GAAO,OAAOvC,EAAM,KAAK,GAAK,GAAI,CAAC,CAC/D,EAGM0H,GAAsBZ,EAErB,MAAA,CACL,GAAI3D,EAAO,GACX,KAAMA,EAAO,KACb,KAAAyD,EACA,QAAAC,EACA,YAAaG,EAAwB,QAAU,EAC/C,aAAcE,GAAgB,EAC9B,aAAc1E,GAAgB,EAC9B,MAAO,CACL,KAAM2E,GAAqB,CAAC,GAAK,EACjC,IAAOJ,EACJ,OAAO/G,KACLA,GAAM,SAAW,WAClBA,GAAM,SAAW,cACjBA,GAAM,SAAW,cACjBA,GAAM,SAAW,UACnB,EACC,OAAO,CAACuC,GAAKvC,IAAUuC,IAAO,OAAOvC,EAAM,KAAK,GAAK,GAAI,CAAC,CAC/D,EACA,oBAAA0H,EACF,CAAA,CACD,CAAC,EAEFxB,EAAelF,CAAU,QAClBzE,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,EACjDQ,EAAM,MAAM,2BAA2B,CAAA,QACvC,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEM6E,EAAkB,IAAM,CACtB,MAAAC,EAASgG,EAAU,cAAc,OAAa/F,EAAM,UAAU,GAAK,CAAC,EAC1E,MAAO,CAAC,MAAO,GAAG,IAAI,IAAID,CAAM,CAAC,CACnC,EAEME,EAAiB8F,EAAU,cAAc,OAAgB/F,GAAA,CAC7D,MAAMG,EACHH,EAAM,GAAG,YAAc,EAAA,SAASjB,EAAW,aAAa,IACxDiB,EAAM,WAAW,MAAQ,IAAI,cAAc,SAASjB,EAAW,aAAa,EAEzEqB,EAAenB,IAAkB,OAASe,EAAM,aAAef,EAErE,OAAOkB,GAAiBC,CAAA,CACzB,EAED,OAAIpF,EAECrB,MAAA,OAAI,UAAU,gDACb,SAACA,EAAA,IAAA,MAAI,CAAA,UAAU,mFAAmF,EACpG,EAIA,CAACgF,GAAmBE,EAAc,gBAAkBJ,GAAa,cAEhEN,EAAA,KAAA,MAAI,CAAA,UAAU,6DACb,SAAA,CAACxE,EAAAA,IAAAgO,GAAA,CAAgB,UAAU,gCAAgC,EAC1DhO,EAAAA,IAAA,MAAG,UAAW,sBAAsB0D,IAAU,OAAS,aAAe,eAAe,QAAS,SAAa,eAAA,CAAA,EAC3G1D,EAAAA,IAAA,KAAE,UAAW,GAAG0D,IAAU,OAAS,gBAAkB,eAAe,oBAAqB,SAA+D,iEAAA,CAAA,CAAA,EAC3J,EAKDc,EAAA,KAAA,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,OAAC,KAAA,CAAG,UAAU,mDAAmD,SAAe,kBAAA,EAChFA,EAAA,KAAC,SAAA,CACC,QAASkI,EACT,UAAU,+GAEV,SAAA,CAAC1M,EAAAA,IAAAiO,GAAA,CAAY,UAAU,UAAU,EAAE,cAAA,CAAA,CAAA,CAErC,EACF,EAGCzJ,EAAAA,KAAA,MAAI,CAAA,UAAU,4DACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,kFACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAa,gBAAA,EACpEA,EAAAA,KAAA,IAAE,CAAA,UAAU,mDAAmD,SAAA,CAAA,IAAE4H,EAAU,aAAa,QAAQ,CAAC,CAAA,EAAE,EACnG5H,EAAAA,KAAA,IAAE,CAAA,UAAU,2CAA4C,SAAA,CAAU4H,EAAA,YAAY,SAAA,EAAO,EACrFA,EAAU,aAAe,GACvB5H,EAAA,KAAA,IAAA,CAAE,UAAU,uBAAuB,SAAA,CAAA,aAAW4H,EAAU,aAAa,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,EAErF,EACCpM,EAAAA,IAAA,OAAI,UAAU,gDACb,SAACA,EAAA,IAAAoE,GAAa,CAAA,UAAU,yBAA0B,CAAA,CACpD,CAAA,CAAA,CAAA,CACF,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,kFACb,SAACI,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAY,eAAA,EACnExE,EAAA,IAAA,IAAA,CAAE,UAAU,mDAAoD,WAAU,YAAY,QACtF,IAAA,CAAE,UAAU,2CAA2C,SAAa,eAAA,CAAA,CAAA,EACvE,EACCA,EAAAA,IAAA,OAAI,UAAU,gDACb,SAACA,EAAA,IAAAiK,GAAc,CAAA,UAAU,yBAA0B,CAAA,CACrD,CAAA,CAAA,CAAA,CACF,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,kFACb,SAACzF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAmB,sBAAA,EAC1EA,EAAAA,KAAA,IAAE,CAAA,UAAU,mDAAmD,SAAA,CAAA,IAAE4H,EAAU,kBAAkB,QAAQ,CAAC,CAAA,EAAE,QACxG,IAAA,CAAE,UAAU,2CAA2C,SAAiB,mBAAA,CAAA,CAAA,EAC3E,EACCpM,EAAAA,IAAA,OAAI,UAAU,gDACb,SAACA,EAAA,IAAA+J,GAAa,CAAA,UAAU,yBAA0B,CAAA,CACpD,CAAA,CAAA,CAAA,CACF,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,kFACb,SAACvF,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAgB,mBAAA,EACvExE,EAAA,IAAA,IAAA,CAAE,UAAU,mDAAoD,WAAU,gBAAgB,QAC1F,IAAA,CAAE,UAAU,2CAA2C,SAAY,cAAA,CAAA,CAAA,EACtE,EACCA,EAAAA,IAAA,OAAI,UAAU,gDACb,SAACA,EAAA,IAAAgK,GAAQ,CAAA,UAAU,yBAA0B,CAAA,CAC/C,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGCxF,EAAAA,KAAA,MAAI,CAAA,UAAU,2DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,OAAC,KAAA,CAAG,UAAU,sDAAsD,SAAa,gBAAA,EAChFA,EAAAA,KAAA,MAAI,CAAA,UAAU,aAEb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,MAAOsF,EACP,SAAWkC,GAAMjC,EAAiBiC,EAAE,OAAO,KAAK,EAChD,UAAU,iNAET,SAAgBrB,EAAA,EAAE,IAAKgE,SACrB,SAAA,CAAmB,MAAOA,EACxB,SAAUA,IAAA,MAAQ,aAAeA,CAAA,EADvBA,CAEb,CACD,CAAA,CACH,EAGC3F,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,YAAY,iCACZ,MAAOoF,EACP,SAAWoC,GAAMnC,EAAcmC,EAAE,OAAO,KAAK,EAC7C,UAAU,2NAAA,CACZ,EACAxH,EAAA,IAAC,MAAA,CACC,UAAU,mEACV,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAA,EAAA,IAAC,OAAA,CACC,cAAc,QACd,eAAe,QACf,YAAa,EACb,EAAE,6CAAA,CAAA,CACJ,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,kBACb,SAACwE,EAAA,KAAA,QAAA,CAAM,UAAU,2DACf,SAAA,CAAAxE,MAAC,QACC,CAAA,gBAAC,KAAG,CAAA,UAAU,8BACZ,SAAA,OAAC,KAAA,CAAG,UAAU,oGAAoG,SAAQ,WAAA,QACzH,KAAA,CAAG,UAAU,oGAAoG,SAAM,SAAA,QACvH,KAAA,CAAG,UAAU,oGAAoG,SAAQ,WAAA,QACzH,KAAA,CAAG,UAAU,oGAAoG,SAAM,SAAA,QACvH,KAAA,CAAG,UAAU,oGAAoG,SAAM,SAAA,QACvH,KAAA,CAAG,UAAU,oGAAoG,SAAI,MAAA,CAAA,CAAA,CAAA,CACxH,CAAA,CACF,EACCA,EAAA,IAAA,QAAM,CAAA,UAAU,0EACd,SAAAsG,GAAgB,IAAKD,GACnB7B,EAAA,KAAA,KAAkB,CAAA,UAAU,6CAC3B,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAU,uEACX,WAAM,GAAG,MAAM,EAAE,CAAA,CACpB,QACC,KAAG,CAAA,UAAU,uEACZ,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,OAAC,OAAA,CAAM,WAAM,WAAW,EACvB6B,EAAM,YACLrG,EAAA,IAAC,MAAA,CACC,IAAKqG,EAAM,WACX,IAAI,sBACJ,UAAU,kDAAA,CAAA,CACZ,CAAA,CAEJ,CAAA,CACF,QACC,KAAG,CAAA,UAAU,uEACZ,SAAC7B,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,OAAM,CAAA,SAAAqG,EAAM,WAAW,MAAQ,YAAY,EAC3CA,EAAM,MACLrG,EAAA,IAAC,MAAA,CACC,IAAKqG,EAAM,KACX,IAAK,OAAOA,EAAM,iBAAiB,SAAY,SAC3CA,EAAM,iBAAiB,QAAQ,KAC/BA,EAAM,iBAAiB,QAC3B,UAAU,kDAAA,CAAA,CACZ,CAAA,CAEJ,CAAA,CACF,EACC7B,EAAAA,KAAA,KAAG,CAAA,UAAU,uEAAuE,SAAA,CAAA,IACjF6B,EAAM,OAAO,QAAQ,CAAC,CAAA,EAC1B,QACC,KAAG,CAAA,UAAU,8BACZ,eAAC,QAAK,UAAW,8CACfA,EAAM,SAAW,aACjBA,EAAM,SAAW,UADc,uEAE/BA,EAAM,SAAW,aAAe,mEAChCA,EAAM,SAAW,YAAc,+DAC/BA,EAAM,SAAW,WAAa,2EAC9BA,EAAM,SAAW,YAAc,2EAC/B,+DACF,GACG,SAAAA,EAAM,MACT,CAAA,EACF,EACCrG,EAAAA,IAAA,KAAG,CAAA,UAAU,uEACX,SAAA,IAAI,KAAKqG,EAAM,SAAS,EAAE,eAAA,CAC7B,CAAA,CAAA,GAhDOA,EAAM,EAiDf,CACD,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGC7B,EAAAA,KAAA,MAAI,CAAA,UAAU,sDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,OAAC,KAAA,CAAG,UAAU,sDAAsD,SAAc,iBAAA,EACjFxE,EAAAA,IAAA,MAAI,CAAA,UAAU,iBACZ,SAAA,CAAC,KAAM,KAAK,EAAE,IAAKkO,GAClBlO,EAAA,IAAC,SAAA,CAEC,QAAS,IAAMyM,EAAcyB,CAAM,EACnC,UAAW,gCACT1B,IAAe0B,EACX,0BACA,wGACN,GAEC,SAAAA,IAAW,KAAO,MAAQ,UAAA,EARtBA,CAAA,CAUR,CACH,CAAA,CAAA,EACF,EAGC1J,EAAAA,KAAA,MAAI,CAAA,UAAU,OACb,SAAA,OAAC,KAAA,CAAG,UAAU,2DAA2D,SAAmB,sBAAA,QAC3F,MAAI,CAAA,UAAU,iDACZ,SAAA,OAAO,QAAQ4H,EAAU,YAAc,CAAE,CAAA,EAAE,IAAI,CAAC,CAACU,EAAOxE,CAAI,IAAM,CACjE,MAAM6F,EAAW,CACf,IAAK7F,GAAM,KAAO,EAClB,QAASA,GAAM,SAAW,CAC5B,EAGE,OAAC9D,EAAA,KAAA,MAAgB,CAAA,UAAU,mDACzB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAAsI,IAAU,OACR9M,EAAA,IAAA,MAAA,CAAI,IAAI,kBAAkB,IAAI,OAAO,UAAU,SAAU,CAAA,QAEzD,MAAI,CAAA,IAAI,kBAAkB,IAAI,OAAO,UAAU,UAAU,QAE3D,OAAA,CAAK,UAAU,mCAAoC,SAAM8M,CAAA,CAAA,CAAA,EAC5D,EACCtI,EAAAA,KAAA,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,4CAA4C,SAAA,CAAA,IACrD2J,EAAS,IAAI,QAAQ,CAAC,CAAA,EAC1B,EACCA,EAAS,QAAU,GACjB3J,EAAA,KAAA,IAAA,CAAE,UAAU,uBAAuB,SAAA,CAAA,aACvB2J,EAAS,QAAQ,QAAQ,CAAC,CAAA,CACvC,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,EAlBQrB,CAmBV,CAAA,CAEH,CACH,CAAA,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,kBACb,SAACtI,EAAA,KAAA,QAAA,CAAM,UAAU,2DACf,SAAA,CAAAxE,MAAC,QACC,CAAA,gBAAC,KAAG,CAAA,UAAU,8BACZ,SAAA,OAAC,KAAA,CAAG,UAAU,oGAAoG,SAAM,SAAA,QACvH,KAAA,CAAG,UAAU,oGAAoG,SAAG,MAAA,QACpH,KAAA,CAAG,UAAU,oGAAoG,SAAQ,WAAA,QACzH,KAAA,CAAG,UAAU,oGAAoG,SAAqB,uBAAA,CAAA,CAAA,CAAA,CACzI,CAAA,CACF,EACCA,EAAA,IAAA,QAAM,CAAA,UAAU,gDACd,SAAAsM,EAAY,IAAK9C,GACfhF,EAAA,KAAA,KAAmB,CAAA,UAAU,6CAC5B,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,8BACZ,SAAAA,EAAAA,IAAC,OAAI,UAAU,0BACb,SAACwE,EAAA,KAAA,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,oDACb,SAAAwJ,EAAO,KACV,EACCA,EAAO,SAAS,MACfxJ,EAAA,IAAC,MAAA,CACC,IAAKwJ,EAAO,QAAQ,KACpB,IAAKA,EAAO,QAAQ,MAAQ,eAC5B,UAAU,kDAAA,CAAA,CACZ,EAEJ,EACChF,EAAAA,KAAA,MAAI,CAAA,UAAU,2CACZ,SAAA,CAAOgF,EAAA,YAAY,SAAA,CACtB,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EACChF,EAAAA,KAAA,KAAG,CAAA,UAAU,uEAAuE,SAAA,CAAA,IACjFgF,EAAO,MAAM,IAAI,EAAE,QAAQ,CAAC,CAAA,EAChC,EACChF,EAAAA,KAAA,KAAG,CAAA,UAAU,uEAAuE,SAAA,CAAA,IACjFgF,EAAO,MAAM,IAAO,QAAQ,CAAC,CAAA,EACjC,QACC,KAAG,CAAA,UAAU,8BACZ,SAAChF,EAAA,KAAA,MAAA,CAAI,UAAU,qCAAqC,SAAA,CAAA,IAChD,OAAOgF,EAAO,qBAAuB,CAAC,EAAE,QAAQ,CAAC,CAAA,CAAA,CACrD,CACF,CAAA,CAAA,GAhCOA,EAAO,EAiChB,CACD,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,CCzlBa,MAAA4E,GAAwB,IACnC5J,EAAA,KAAC,MAAI,CAAA,UAAU,UAAU,QAAQ,YAAY,KAAK,OAAO,MAAM,6BAC7D,SAAA,CAAAxE,EAAA,IAAC,OAAA,CACC,EAAE,mFACF,KAAK,UACL,OAAO,8CAAA,CACT,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,2FACF,KAAK,UACL,UAAU,gBAAA,CACZ,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,yBACF,OAAO,QACP,YAAY,MACZ,cAAc,QACd,eAAe,QACf,UAAU,gBAAA,CAAA,CACZ,EACF,ECbIqO,GAAiB,IACrBrO,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,6DAEV,SAAA9J,EAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,SACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAsD,CAAA,EACrEA,EAAAA,IAAC,MAAI,CAAA,UAAU,qDAAsD,CAAA,EACrEwE,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC+J,EAAGC,IACpBxO,EAAA,IAAA,MAAA,CAAY,UAAU,8CAAA,EAAbwO,CAA4D,CACvE,EACDxO,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,CACtE,CAAA,CAAA,EACF,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,CACrE,CAAA,CAAA,CACF,EAGIyO,GAAiB,IACrBjK,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,qDAEV,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,+CAAgD,CAAA,EAC/DA,EAAAA,IAAC,MAAI,CAAA,UAAU,+CAAgD,CAAA,CAAA,EACjE,EACAA,MAAC,OAAI,UAAU,aACZ,UAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGC,IACpBxO,EAAAA,IAAA,MAAA,CAAY,UAAU,8CAAb,EAAAwO,CAA4D,CACvE,CACH,CAAA,CAAA,EACF,EACAxO,EAAAA,IAAC,MAAI,CAAA,UAAU,qDAAsD,CAAA,EACrEA,EAAAA,IAAC,MAAI,CAAA,UAAU,gDAAiD,CAAA,EAChEwE,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,gDAAiD,CAAA,EAChEA,EAAAA,IAAC,MAAI,CAAA,UAAU,+CAAgD,CAAA,CAAA,CACjE,CAAA,CAAA,CAAA,CACF,EAGI0O,GAAoB,IAAM,CAC9B,KAAM,CAACC,EAASC,CAAU,EAAIhP,EAAAA,SAAS,CAAA,CAAE,EACnC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACwF,EAAYC,CAAa,EAAIzF,EAAAA,SAAS,EAAE,EACzC,CAACiP,EAAgBC,CAAiB,EAAIlP,EAAAA,SAAS,IAAI,EACnD,CAACmP,EAASC,CAAU,EAAIpP,EAAAA,SAAS,CAAA,CAAE,EACnC,CAACqP,EAAiBC,CAAkB,EAAItP,EAAAA,SAAS,EAAE,EACnD,CAACuP,EAAiBC,CAAkB,EAAIxP,EAAAA,SAAS,EAAK,EACtD,CAACyP,EAAkBC,CAAmB,EAAI1P,EAAAA,SAAS,IAAI,EACvD,CAAC2P,EAAUC,CAAW,EAAI5P,EAAAA,SAAS,SAAS,EAC5C,CAAC6P,EAAkBC,CAAmB,EAAI9P,EAAAA,SAAS,EAAK,EAE9DE,EAAAA,UAAU,IAAM,CACD6P,EAAA,EAEbb,EAAkB,IAAI,EACtBE,EAAW,CAAA,CAAE,CAAA,EACZ,CAACO,CAAQ,CAAC,EAEP,MAAAK,EAAmBC,GAClBA,EAGDA,EAAU,QACL,IAAI,KAAKA,EAAU,QAAU,GAAI,EAAE,eAAe,QAAS,CAChE,KAAM,UACN,MAAO,OACP,IAAK,UACL,KAAM,UACN,OAAQ,SAAA,CACT,GAIUA,aAAqB,KAAOA,EAAY,IAAI,KAAKA,CAAS,GAC3D,eAAe,QAAS,CAClC,KAAM,UACN,MAAO,OACP,IAAK,UACL,KAAM,UACN,OAAQ,SAAA,CACT,EArBsB,GAwBnBF,EAAe,SAAY,CAC3B,GAAA,CACFrO,EAAW,EAAI,EACT,MAAAwO,EAAatN,GAAW9B,GAAI,SAAS,EACrC4B,EAAIC,GACRuN,EACArN,GAAM,qBAAsB,KAAM8M,CAAQ,EAC1C1I,GAAQ,YAAa,KAAK,CAC5B,EACMnE,EAAgB,MAAMC,GAAQL,CAAC,EAG/ByN,EAAYrN,EAAc,KAAK,IAAIX,GAAOA,EAAI,EAAE,EAGhDiO,EAAaxN,GAAW9B,GAAI,SAAS,EACrCuP,EAAe1N,GACnByN,EACAvN,GAAM,WAAY,KAAMsN,EAAU,OAASA,EAAY,CAAC,OAAO,CAAC,EAChElJ,GAAQ,YAAa,MAAM,CAC7B,EACMqJ,EAAkB,MAAMvN,GAAQsN,CAAY,EAG5CE,EAAkB,CAAC,EACTD,EAAA,KAAK,QAAQnO,GAAO,CAC5B,MAAAqO,EAAS,CAAE,GAAIrO,EAAI,GAAI,GAAGA,EAAI,MAAO,EACtCoO,EAAgBC,EAAO,QAAQ,IAClBD,EAAAC,EAAO,QAAQ,EAAI,CAAC,GAEtCD,EAAgBC,EAAO,QAAQ,EAAE,KAAKA,CAAM,CAAA,CAC7C,EAGD,MAAMC,EAAc3N,EAAc,KAAK,IAAIX,GAAO,CAC1C,MAAAyH,EAAS,CAAE,GAAIzH,EAAI,GAAI,GAAGA,EAAI,MAAO,EACrCuO,EAAgBH,EAAgBpO,EAAI,EAAE,GAAK,CAAC,EAC5CwO,EAAcD,EAAc,OAAO,CAAC1H,EAAKwH,IAAWxH,EAAMwH,EAAO,OAAQ,CAAC,EAC1EI,EAAYF,EAAc,OAAS,EAAIC,EAAcD,EAAc,OAAS,EAE3E,MAAA,CACL,GAAG9G,EACH,YAAa8G,EAAc,OAC3B,cAAeE,EACf,QAASF,CACX,CAAA,CACD,EAED1B,EAAWyB,CAAW,QACfzN,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,GAAM,MAAM,wBAAwB,CAAA,QACpC,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEMmP,EAAqB,MAAOtH,GAAa,CACzC,GAAA,CACFuG,EAAoB,EAAI,EAExB,MAAMlG,EAASmF,EAAQ,KAAU+B,GAAAA,EAAE,KAAOvH,CAAQ,EAC9C,GAAAK,GAAUA,EAAO,QAAS,CAE5BwF,EAAWxF,EAAO,OAAO,EACzB,MAAA,CAII,MAAAwG,EAAaxN,GAAW9B,GAAI,SAAS,EACrC4B,EAAIC,GACRyN,EACAvN,GAAM,WAAY,KAAM0G,CAAQ,EAChCtC,GAAQ,YAAa,MAAM,CAC7B,EAEM8J,GADgB,MAAMhO,GAAQL,CAAC,GACH,KAAK,IAAIP,IAAQ,CACjD,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EACFiN,EAAW2B,CAAW,QACf/N,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,GAAM,MAAM,wBAAwB,CAAA,QACpC,CACAsM,EAAoB,EAAK,CAAA,CAE7B,EAEMkB,EAAoB,MAAOzH,EAAU0H,IAAY,CACjD,GAAA,CACF,GAAIA,EACF,MAAMC,GAAU/O,GAAIrB,GAAI,UAAWyI,CAAQ,EAAG,CAC5C,mBAAoB,WACpB,iBAAkB,IAAI,KAAK,EAAE,YAAY,EACzC,WAAY,KACZ,gBAAiB,IAAA,CAClB,MACI,CACLmG,EAAoBnG,CAAQ,EAC5BiG,EAAmB,EAAI,EACvB,MAAA,CAIFR,EAAWD,EAAQ,IAAInF,GACrBA,EAAO,KAAOL,EACV,CACE,GAAGK,EACH,mBAAoBqH,EAAU,WAAa,WAC3C,gBAAiBA,EAAU,KAAO5B,CAAA,EAEpCzF,CAAA,CACL,EAEDpG,GAAM,QAAQ,SAASyN,EAAU,WAAa,UAAU,eAAe,QAChEjO,EAAO,CACN,QAAA,MAAM,qCAAsCA,CAAK,EACzDQ,GAAM,MAAM,qCAAqC,CAAA,CAErD,EAEM2N,EAAe,SAAY,CAC/B,GAAI,CAAC1B,GAAoB,CAACJ,EAAgB,OAAQ,CAChD7L,GAAM,MAAM,uCAAuC,EACnD,MAAA,CAGE,GAAA,CACF,MAAM0N,GAAU/O,GAAIrB,GAAI,UAAW2O,CAAgB,EAAG,CACpD,mBAAoB,WACpB,iBAAkB,IAAI,KAAK,EAAE,YAAY,EACzC,eAAgB,KAChB,gBAAiBJ,EAAgB,KAAK,EACtC,kBAAmB,EAAA,CACpB,EAGDL,EAAWD,EAAQ,IAAInF,GACrBA,EAAO,KAAO6F,EACV,CACE,GAAG7F,EACH,mBAAoB,WACpB,gBAAiByF,EAAgB,KAAK,CAAA,EAExCzF,CAAA,CACL,EAED4F,EAAmB,EAAK,EACxBF,EAAmB,EAAE,EACrBI,EAAoB,IAAI,EACxBlM,GAAM,QAAQ,6BAA6B,QACpCR,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7CQ,GAAM,MAAM,qCAAqC,CAAA,CAErD,EAEM4N,EAAkBrC,EAAQ,UAC9BnF,EAAO,WAAW,YAAY,EAAE,SAASpE,EAAW,YAAa,CAAA,GACjEoE,EAAO,OAAO,cAAc,SAASpE,EAAW,YAAa,CAAA,CAC/D,EAEA,OAAI/D,EAEAmD,EAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,+CAAA,CACZ,EACAtO,EAAAA,IAAC,MAAI,CAAA,UAAU,mDACZ,SAAA,CAAC,UAAW,WAAY,UAAU,EAAE,IAAKiR,GACxCjR,EAAA,IAACsO,EAAO,IAAP,CAEC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,uDAAA,EAJL2C,CAAA,CAMR,CACH,CAAA,CAAA,EACF,EACAjR,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,mDAAA,CAAA,CACZ,EACF,EACA9J,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qDACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,oDAAA,CACZ,QACC,MAAI,CAAA,UAAU,YACZ,SAAC,CAAA,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACC,EAAGC,UACpBH,GAAoB,CAAA,EAAAG,CAAG,CACzB,CACH,CAAA,CAAA,EACF,EACAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,oDAAA,CACZ,QACC,MAAI,CAAA,UAAU,YACZ,SAAC,CAAA,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACC,EAAGC,UACpBC,GAAoB,CAAA,EAAAD,CAAG,CACzB,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAKFhK,EAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,KAAA,CAAG,UAAU,mDACX,SAAAuP,IAAa,UACV,8BACAA,IAAa,WACX,kBACA,iBAER,CAAA,EACA/K,EAAAA,KAAC,MAAI,CAAA,UAAU,mDACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMwP,EAAY,SAAS,EACpC,UAAW,8DACTD,IAAa,UACT,iEACA,4EACN,GACD,SAAA,SAAA,CAED,EACAvP,EAAA,IAAC,SAAA,CACC,QAAS,IAAMwP,EAAY,UAAU,EACrC,UAAW,8DACTD,IAAa,WACT,iEACA,4EACN,GACD,SAAA,UAAA,CAED,EACAvP,EAAA,IAAC,SAAA,CACC,QAAS,IAAMwP,EAAY,UAAU,EACrC,UAAW,8DACTD,IAAa,WACT,iEACA,4EACN,GACD,SAAA,UAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EACA/K,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,YAAY,mBACZ,MAAOoF,EACP,SAAWoC,GAAMnC,EAAcmC,EAAE,OAAO,KAAK,EAC7C,UAAU,6PAAA,CACZ,EACAxH,EAAAA,IAACkR,GAAS,CAAA,UAAU,wDAAyD,CAAA,CAAA,CAC/E,CAAA,CAAA,EACF,EAEA1M,EAAAA,KAAC,MAAI,CAAA,UAAU,wCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qDACb,SAAA,CAACxE,EAAAA,IAAA,KAAA,CAAG,UAAU,2DACX,SAAAuP,IAAa,UACV,mBACAA,IAAa,WACX,kBACA,iBAER,CAAA,EACA/K,EAAAA,KAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CAAgBwM,EAAA,IAAKxH,GACpBxJ,EAAA,IAAC,MAAA,CAEC,QAAS,IAAM,CACb8O,EAAkBtF,CAAM,EACxBiH,EAAmBjH,EAAO,EAAE,CAC9B,EACA,UAAW,0DACTqF,GAAgB,KAAOrF,EAAO,GAC1B,kDACA,wGACN,GAEA,SAAAhF,EAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAA,IAAC,KAAG,CAAA,UAAU,4CAA6C,SAAAwJ,EAAO,UAAU,EAC3ExJ,EAAA,IAAA,IAAA,CAAE,UAAU,2CAA4C,WAAO,MAAM,EACrEuP,IAAa,YAAc/F,EAAO,kBAChChF,EAAAA,KAAA,IAAA,CAAE,UAAU,gDAAgD,SAAA,CAAA,eAC9CoL,EAAgBpG,EAAO,gBAAgB,CAAA,EACtD,EAED+F,IAAa,YAAc/F,EAAO,YAChChF,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,2CAA2C,SAAA,CAAA,eACzCoL,EAAgBpG,EAAO,UAAU,CAAA,EAChD,EACCA,EAAO,iBACLhF,OAAA,IAAA,CAAE,UAAU,gDAAgD,SAAA,CAAA,WAClDgF,EAAO,eAAA,CAClB,CAAA,CAAA,EAEJ,EAEFhF,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,EAAA,IAAC,MAAI,CAAA,UAAU,oBACZ,SAAA,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKmR,GACpBnR,EAAA,IAACoR,GAAA,CAEC,UAAW,WACTD,GAAQ3H,EAAO,cACX,iBACA,kCACN,EAAA,EALK2H,CAOR,CAAA,EACH,EACA3M,EAAAA,KAAC,OAAK,CAAA,UAAU,gDAAgD,SAAA,CAAA,IAC5DgF,EAAO,YAAY,WAAA,CACvB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACC+F,IAAa,WACX/K,OAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAUwH,GAAM,CACdA,EAAE,gBAAgB,EACAoJ,EAAApH,EAAO,GAAI,EAAI,CACnC,EACA,UAAU,mBAEV,eAAC4E,GAAsB,CAAA,CAAA,CAAA,CACzB,EACApO,EAAA,IAAC,SAAA,CACC,QAAUwH,GAAM,CACdA,EAAE,gBAAgB,EACAoJ,EAAApH,EAAO,GAAI,EAAK,CACpC,EACA,UAAU,4HAEV,SAAAxJ,EAAAA,IAACqR,GAAI,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC3B,EACF,EAED9B,IAAa,YACZvP,MAACoO,GAAsB,CAAA,CAAA,EAExBmB,IAAa,YACXvP,EAAA,IAAAqR,GAAA,CAAI,UAAU,wCAAyC,CAAA,CAAA,CAE5D,CAAA,CAAA,EA9EK7H,EAAO,EAAA,CAgFf,EACAwH,EAAgB,SAAW,GACzBhR,EAAA,IAAA,MAAA,CAAI,UAAU,oDACZ,SAAAuP,IAAa,UACV,iCACA,0BAEN,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAGCV,GACCrK,EAAA,KAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAAAxE,EAAA,IAAC,KAAG,CAAA,UAAU,sDAAuD,SAAA6O,EAAe,UAAU,EAC9FrK,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAAAxE,EAAA,IAAC,MAAI,CAAA,UAAU,oBACZ,SAAA,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKmR,GACpBnR,EAAA,IAACoR,GAAA,CAEC,UAAW,WACTD,GAAQtC,EAAe,cACnB,iBACA,kCACN,EAAA,EALKsC,CAOR,CAAA,EACH,EACAnR,EAAAA,IAAC,QAAK,UAAU,oDACb,WAAe,cAAc,QAAQ,CAAC,EACzC,EACAwE,EAAAA,KAAC,OAAK,CAAA,UAAU,2CAA2C,SAAA,CAAA,IACvDqK,EAAe,YAAY,WAAA,CAC/B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECY,EACEzP,EAAA,IAAA,MAAA,CAAI,UAAU,YACZ,UAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGC,IACpBxO,MAAAyO,GAAA,CAAA,EAAoBD,CAAG,CACzB,EACH,EAEAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CAAAuK,EAAQ,IAAKqB,GACX5L,EAAAA,KAAA,MAAA,CAAoB,UAAU,qDAC7B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CACb,SAAAoQ,EAAO,SACV,EACCpQ,EAAAA,IAAA,OAAA,CAAK,UAAU,2CACb,SAAI,IAAA,KAAKoQ,EAAO,WAAW,QAAU,GAAI,EAAE,mBAAA,CAC9C,CAAA,CAAA,EACF,EACCpQ,EAAA,IAAA,MAAA,CAAI,UAAU,oBACZ,SAAC,CAAA,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKmR,GACpBnR,EAAA,IAACoR,GAAA,CAEC,UAAW,WACTD,GAAQf,EAAO,OAAS,iBAAmB,kCAC7C,EAAA,EAHKe,CAAA,CAKR,CACH,CAAA,CAAA,EACF,EACCnR,EAAA,IAAA,IAAA,CAAE,UAAU,mCAAoC,WAAO,OAAO,EAC9DoQ,EAAO,OACNpQ,EAAA,IAAC,MAAA,CACC,IAAKoQ,EAAO,MACZ,IAAI,SACJ,UAAU,wDACV,QAAS,IAAM,OAAO,KAAKA,EAAO,MAAO,QAAQ,CAAA,CACnD,EAEF5L,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKoQ,EAAO,aACZ,IAAKA,EAAO,YACZ,UAAU,gCAAA,CACZ,EACCpQ,EAAA,IAAA,OAAA,CAAK,UAAU,2CAA4C,WAAO,WAAY,CAAA,CAAA,CACjF,CAAA,CAAA,GArCQoQ,EAAO,EAsCjB,CACD,EACArB,EAAQ,SAAW,SACjB,MAAI,CAAA,UAAU,oDAAoD,SAEnE,gBAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEJ,EAGCI,SACE,MAAI,CAAA,UAAU,6EACb,SAAC3K,EAAAA,KAAA,MAAA,CAAI,UAAU,gEACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,2DAA2D,SAA2B,8BAAA,EACpGwE,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,kEAAkE,SAEnF,mBAAA,EACAA,EAAA,IAAC,WAAA,CACC,MAAOiP,EACP,SAAWzH,GAAM0H,EAAmB1H,EAAE,OAAO,KAAK,EAClD,UAAU,uLACV,KAAK,IACL,YAAY,0CAAA,CAAA,CACd,EACF,EACAhD,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACboP,EAAmB,EAAK,EACxBF,EAAmB,EAAE,EACrBI,EAAoB,IAAI,CAC1B,EACA,UAAU,iGACX,SAAA,QAAA,CAED,EACAtP,EAAA,IAAC,SAAA,CACC,QAAS+Q,EACT,UAAU,8GACV,SAAU,CAAC9B,EAAgB,KAAK,EACjC,SAAA,QAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAEJ,CAEJ,EChlBA,SAAwBqC,GAAQ,CAAE,YAAAC,EAAa,eAAAC,GAAkB,CAC/D,KAAM,CAACC,EAAaC,CAAc,EAAI9R,EAAAA,SAAS,EAAK,EAC9C,CAAC+R,EAAcC,CAAe,EAAIhS,EAAAA,SAAS,EAAK,EAChD4D,EAAWC,GAAY,EAEvBK,EAAYC,GAASP,EAAS,WAAaO,EAE3C8N,EAAY,CAEhB,CACE,KAAMC,GACN,MAAO,eACP,OAAQP,EACR,QAAS,EACX,EACA,CACE,KAAMQ,GACN,MAAO,aACP,OAAQP,CACV,EAEA,CAAE,KAAM,SAAU,EAElB,CACE,KAAMQ,GACN,MAAO,YACP,GAAI,IACJ,aAAc,EAChB,EACA,CACE,KAAMC,GACN,MAAO,cACP,GAAI,eACJ,aAAc,GACd,mBAAoB,EACtB,EACA,CACE,KAAMC,GACN,MAAO,eACP,GAAI,eACJ,aAAc,EAChB,EAEA,CAAE,KAAM,SAAU,EAElB,CACE,KAAMC,GACN,MAAO,UACP,GAAI,WACJ,aAAc,EAChB,EAEA,CACE,KAAMC,GACN,MAAO,SACP,GAAI,UACJ,aAAc,EAChB,EACA,CACE,KAAMC,GACN,MAAO,aACP,GAAI,eACJ,aAAc,EAChB,EACA,CACE,KAAMF,GACN,MAAO,kBACP,GAAI,IACJ,aAAc,GACd,WAAY,EACd,EACA,CACE,KAAMG,GACN,MAAO,gBACP,GAAI,IACJ,aAAc,GACd,WAAY,EACd,EAEA,CAAE,KAAM,SAAU,EAElB,CACE,KAAMC,GACN,MAAO,UACP,GAAI,WACJ,aAAc,GACd,mBAAoB,EACtB,EACA,CACE,KAAMC,GACN,MAAO,UACP,GAAI,WACJ,aAAc,EAAA,CAElB,EAEMC,EAAc,CAClB,CAAE,KAAMC,GAAY,KAAM,6BAA8B,MAAO,UAAW,EAC1E,CAAE,KAAMC,GAAW,KAAM,yBAA0B,MAAO,aAAc,EACxE,CAAE,KAAMC,GAAW,KAAM,wCAAyC,MAAO,SAAU,CACrF,EAEMC,EAAiB,CAAClO,EAAMuF,IAAU,CAElC,GAAAvF,EAAK,OAAS,UAChB,aACG,MAA6B,CAAA,UAAU,oDAA9B,EAAA,WAAWuF,CAAK,EAAmE,EAIjG,MAAM4I,EAAgB;AAAA,QAClBnO,EAAK,QACH,2GACA,oCAAqCA,EAAK,WAA2E,4BAA9D,2DAAyF;AAAA,aAC7IA,EAAK,cAAgBb,EAASa,EAAK,EAAE,GAAK,CAACA,EAAK,mBAAqB,iBAAmB,EAAE,EAAE;AAAA,QACjG8M,EAAc,iBAAmB,EAAE;AAAA,MAGvC,OAAI9M,EAAK,aAELH,EAAA,KAACI,GAAA,CAEC,GAAID,EAAK,GACT,UAAWmO,EACX,QAASnO,EAAK,WAAc6C,GAAMA,EAAE,eAAmB,EAAA,OAEvD,SAAA,CAAAxH,MAAC2E,EAAK,KAAL,CAAU,KAAM,GAAI,UAAW,iBAAiBA,EAAK,cAAgBb,EAASa,EAAK,EAAE,GAAK,CAACA,EAAK,mBAAqB,iBAAmB,EAAE,GAAI,EAC9I,CAAC8M,GACAzR,MAAC,QAAK,UAAU,WAAY,WAAK,MAAM,EAExC2E,EAAK,YAAc,CAAC8M,SAClB,OAAK,CAAA,UAAU,kJAAkJ,SAElK,aAAA,CAAA,CAAA,CAAA,EAZGvH,CAcP,EAKF1F,EAAA,KAAC,SAAA,CAEC,QAASG,EAAK,SAAW,IAAM,CAAA,GAC/B,UAAWmO,EAEX,SAAA,CAAA9S,EAAA,IAAC2E,EAAK,KAAL,CAAU,KAAM,GAAI,UAAU,gBAAgB,EAC9C,CAAC8M,GACCzR,EAAAA,IAAA,MAAA,CAAI,UAAU,mFACb,SAACA,EAAAA,IAAA,OAAA,CAAK,UAAU,WAAY,SAAK2E,EAAA,KAAA,CAAM,CACzC,CAAA,CAAA,CAAA,EARGuF,CAUP,CAEJ,EAEA,OAGK1F,EAAA,KAAAuO,WAAA,CAAA,SAAA,CACCpB,GAAA3R,EAAA,IAAC,MAAA,CACC,UAAU,sFACV,QAAS,IAAM4R,EAAgB,EAAK,CAAA,CACtC,EAIF5R,EAAA,IAAC,SAAA,CACC,QAAS,IAAM4R,EAAgB,CAACD,CAAY,EAC5C,UAAW,4JACTA,EAAe,2BAA6B,2BAC9C,GAEA,SAAA3R,EAAA,IAACgT,GAAA,CACC,KAAM,GACN,UAAW;AAAA,cACNrB,EAA8B,GAAf,YAAiB;AAAA,WAAA,CAAA,CAEvC,CACF,EAGAnN,EAAA,KAAC,QAAA,CACC,UAAW;AAAA,YACPiN,EAAc,OAAS,MAAM;AAAA;AAAA,YAE7BE,EAAe,gBAAkB,mBAAmB;AAAA,UAIxD,SAAA,CAACnN,EAAAA,KAAA,MAAA,CAAI,UAAU,eAEb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM0R,EAAe,CAACD,CAAW,EAC1C,UAAU,0OAEV,SAAAzR,EAAA,IAACgT,GAAA,CACC,KAAM,GACN,UAAW;AAAA,kBACPvB,EAAc,aAAe,EAAE;AAAA,eAAA,CAAA,CAErC,CACF,QAEC,MAAI,CAAA,UAAU,yBACb,SAACjN,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAI,WACJ,IAAI,qBACJ,UAAU,0BAAA,CACZ,EACC,CAACyR,GACAzR,EAAAA,IAAC,KAAG,CAAA,UAAU,kFAAkF,SAEhG,eAAA,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,EAGCA,EAAAA,IAAA,MAAA,CAAI,UAAU,YACZ,SAAU6R,EAAA,IAAI,CAAClN,EAAMuF,IAAU2I,EAAelO,EAAMuF,CAAK,CAAC,CAC7D,CAAA,CAAA,EACF,EAGAlK,EAAAA,IAAC,OAAI,UAAW,2CAA2CyR,EAAc,6BAA+B,EAAE,GACxG,SAACzR,EAAA,IAAA,MAAA,CAAI,UAAW,cAAcyR,EAAc,WAAa,EAAE,GACxD,WAAY,IAAI,CAACwB,EAAQ/I,IACxBlK,EAAA,IAAC,IAAA,CAEC,KAAMiT,EAAO,KACb,OAAO,SACP,IAAI,sBACJ,UAAU,uDACV,MAAOA,EAAO,MAEd,SAACjT,EAAA,IAAAiT,EAAO,KAAP,CAAY,KAAM,EAAI,CAAA,CAAA,EAPlB/I,CASR,CAAA,CACH,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,CACF,EACF,CAEJ,CC1QA,SAAwBgJ,IAAkB,CACxC,KAAM,CAAE,UAAWC,EAAgB,MAAAzI,EAAO,OAAA0I,CAAA,EAAWzI,GAAW,EAC1D,CAAE,YAAAH,CAAY,EAAIC,GAAW,EAC7B,CAAC4I,EAAmBC,CAAoB,EAAI1T,EAAAA,SAAS,EAAK,EAGhEE,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAyT,EAAe3Q,GAAU,CACzBA,EAAM,SAAS,SAAS,yBAAyB,IACnD0Q,EAAqB,EAAK,EAC1BlQ,EAAM,MAAM,0CAA0C,EAE1D,EAGA,OAAI,OAAO,UACF,OAAA,SAAS,GAAG,QAASmQ,CAAW,EAGlC,IAAM,CACP,OAAO,UACF,OAAA,SAAS,eAAe,QAASA,CAAW,CAEvD,CACF,EAAG,EAAE,EAGLzT,EAAAA,UAAU,IAAM,CACV0K,GAAeE,GACjB4I,EAAqB,EAAK,CAC5B,EACC,CAAC5I,EAAOF,CAAW,CAAC,EAGrBxK,MAAC,OAAI,UAAU,WAAW,MAAO,CAAE,OAAQ,OACzC,SAAAA,EAAA,IAACwT,GAAA,CACC,YAAaL,GAAkBE,EAAoB,UAAY,OAC/D,YAAa,GACb,cAAc,UACd,QAAS,IAAM,CACT,CAACF,GAAkB,CAACE,GACtBC,EAAqB,EAAI,CAC3B,CACF,CAAA,EAEJ,CAEJ,CCjDA,MAAMG,GAAS,CACb,QAAW,MACX,SAAY,MACZ,YAAe,MACf,OAAU,MACV,QAAW,MACX,OAAU,MACV,SAAY,MACZ,SAAY,OACZ,cAAe,OACf,UAAa,OACb,QAAW,MACX,QAAW,MACX,QAAW,MACX,OAAU,OACV,oBAAqB,MACrB,SAAY,MACZ,mBAAoB,MACpB,OAAU,MACV,eAAgB,MAChB,SAAY,KACd,EAEA,SAAwBC,IAAc,CACpC,KAAM,CAACC,EAAQC,CAAS,EAAIhU,EAAAA,SAAS,CAAA,CAAE,EACjC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EAoC3C,OAlCAE,EAAAA,UAAU,IAAM,CACd,MAAM+T,EAAc,SAAY,CAC1B,GAAA,CACI,MAAAC,EAAW,MAAMC,GAAM,IAC3B,gDAAiD,CAC/C,OAAQ,CACN,IAAK,OAAO,KAAKN,EAAM,EAAE,KAAK,GAAG,EACjC,cAAe,MACf,oBAAqB,EAAA,CACvB,CAEJ,EAEMO,EAAkB,OAAO,QAAQF,EAAS,IAAI,EAAE,IAAI,CAAC,CAACG,EAAI3L,CAAI,KAAO,CACzE,GAAA2L,EACA,OAAQR,GAAOQ,CAAE,EACjB,MAAO3L,EAAK,IACZ,UAAWA,EAAK,cAAA,EAChB,EAEFsL,EAAUI,CAAe,EACzB1S,EAAW,EAAK,QACTsB,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7CtB,EAAW,EAAK,CAAA,CAEpB,EAEYuS,EAAA,EACN,MAAAK,EAAW,YAAYL,EAAa,GAAK,EAExC,MAAA,IAAM,cAAcK,CAAQ,CACrC,EAAG,EAAE,EAED7S,EAAgB,KAGlBrB,MAAC,OAAI,UAAU,yBACb,eAAC,MAAI,CAAA,UAAU,6BACb,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAU,2DACZ,SAAA,CAAC,GAAG2T,EAAQ,GAAGA,CAAM,EAAE,IAAI,CAACQ,EAAMjK,IACjC1F,EAAA,KAAC,MAAA,CAEC,UAAU,0BAEV,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,uDACb,SAAAmU,EAAK,OACR,EACA3P,EAAAA,KAAC,OAAK,CAAA,UAAU,2CAA2C,SAAA,CAAA,IACvD2P,EAAK,MAAM,eAAe,OAAW,CAAE,sBAAuB,CAAG,CAAA,CAAA,EACrE,EACA3P,EAAAA,KAAC,QAAK,UAAW,WACf2P,EAAK,WAAa,EAAI,iBAAmB,cAC3C,GACG,SAAA,CAAKA,EAAA,UAAU,QAAQ,CAAC,EAAE,GAAA,CAC7B,CAAA,CAAA,CAAA,EAbK,GAAGA,EAAK,EAAE,IAAIjK,CAAK,EAAA,CAe3B,CACH,CAAA,CACF,CAAA,EACF,CAEJ,CCrFA,SAAwBkK,IAAS,CAC/B,KAAM,CAAE,WAAA1U,EAAY,YAAAmE,CAAY,EAAI5D,GAAS,EACrB,OAAAwK,GAAW,EAGjCjG,EAAA,KAAC,SAAO,CAAA,UAAU,8LAChB,SAAA,CAAAxE,EAAA,IAAC0T,GAAY,EAAA,EAEblP,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAACkT,GAAgB,EAAA,EAEjBlT,EAAA,IAAC,SAAA,CACC,QAAS6D,EACT,UAAU,4FAET,SAAAnE,QAAc2U,GAAM,CAAA,KAAM,EAAI,CAAA,EAAKrU,EAAAA,IAACsU,GAAO,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACxD,CACF,CAAA,CAAA,EACF,CAEJ,owLC3BMC,GAAgB,EAAI,KAAO,KAC3BC,GAAuB,CAAC,aAAc,YAAa,YAAa,YAAY,EAErEC,GAAgBC,GAAS,CAEpC,GAAI,CAACA,GAAQ,EAAEA,aAAgB,MAAQA,aAAgB,MAC/C,MAAA,IAAI,MAAM,qBAAqB,EAIvC,IAAIC,EAAWD,EAAK,KAChB,GAAA,CAACC,GAAYD,EAAK,KAEpB,OADkBA,EAAK,KAAK,MAAM,GAAG,EAAE,OAAO,YAAY,EACvC,CACjB,IAAK,MACL,IAAK,OACQC,EAAA,aACX,MACF,IAAK,MACQA,EAAA,YACX,MACF,IAAK,OACQA,EAAA,aACX,MACF,QACQ,MAAA,IAAI,MAAM,+DAA+D,CAAA,CAKjF,GAAA,CAACA,GAAY,CAACH,GAAqB,SAASG,EAAS,YAAA,CAAa,EAC9D,MAAA,IAAI,MAAM,0CAA0C,EAI5D,GAAI,CAACD,EAAK,MAAQA,EAAK,KAAOH,GACtB,MAAA,IAAI,MAAM,iCAAiC,EAI/C,GAAAG,EAAK,OAAS,EACV,MAAA,IAAI,MAAM,eAAe,CAEnC,EAEA,eAAsBE,GAAgBF,EAAM,CACtC,GAAA,CAEFD,GAAaC,CAAI,EAGX,MAAAG,EAAW,IAAI,SACZA,EAAA,OAAO,OAAQH,CAAI,EAGtB,MAAAZ,EAAW,MAAM,MAAM,iDAAkD,CAC7E,OAAQ,OACR,QAAS,CACP,cAAiB,krBACnB,EACA,KAAMe,CAAA,CACP,EAEG,GAAA,CAACf,EAAS,GAAI,CACV,MAAAgB,EAAY,MAAMhB,EAAS,OAAO,MAAM,KAAO,CAAA,EAAG,EACxD,MAAM,IAAI,MAAMgB,EAAU,SAAW,6BAA6BhB,EAAS,MAAM,EAAE,CAAA,CAG/E,MAAAxL,EAAO,MAAMwL,EAAS,KAAK,EAE7B,GAAA,CAACxL,EAAK,SACF,MAAA,IAAI,MAAM,mCAAmC,EAG/C,MAAAyM,EAAU,UAAUzM,EAAK,QAAQ,GACjC0M,EAAU,qCAAqC1M,EAAK,QAAQ,GAE3D,MAAA,CACL,QAAAyM,EACA,QAAAC,CACF,QACOpS,EAAO,CAEd,MADQ,QAAA,MAAM,gBAAiBA,CAAK,EAChCA,EAAM,QAAQ,SAAS,KAAK,EACxB,IAAI,MAAM,0DAA0D,EACjEA,EAAM,QAAQ,SAAS,KAAK,EAC/B,IAAI,MAAM,kDAAkD,EAE5DA,CACR,CAEJ,CC3FO,MAAMqS,GAAmB,CAC9B,OAAQ,CACN,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,WACR,KAAQ,SACT,EACD,CACE,aAAgB,SAChB,KAAQ,YACR,KAAQ,QAClB,CACO,EACD,KAAQ,OACR,QAAW,CAAE,EACb,gBAAmB,UACnB,KAAQ,UACT,EACD,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,SACT,EACD,CACE,aAAgB,SAChB,KAAQ,YACR,KAAQ,QAClB,CACO,EACD,KAAQ,cACR,QAAW,CAAE,EACb,gBAAmB,aACnB,KAAQ,UACT,EACD,CACE,OAAU,CAAE,EACZ,KAAQ,cACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,GACR,KAAQ,SAClB,CACO,EACD,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,OAAU,CAAE,EACZ,KAAQ,SACR,QAAW,CACT,CACE,WAAc,CACZ,CACE,aAAgB,UAChB,KAAQ,YACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,YACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,eACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,cACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,cACR,KAAQ,SACT,EACD,CACE,aAAgB,OAChB,KAAQ,eACR,KAAQ,MACT,EACD,CACE,aAAgB,UAChB,KAAQ,eACR,KAAQ,SACT,EACD,CACE,aAAgB,OAChB,KAAQ,kBACR,KAAQ,MACtB,CACW,EACD,aAAgB,2CAChB,KAAQ,GACR,KAAQ,OAClB,CACO,EACD,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,OAAU,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAW,EACvE,KAAQ,kBACR,QAAW,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAW,EACxE,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,OAAU,CACR,CACE,aAAgB,YAChB,KAAQ,YACR,KAAQ,WACT,EACD,CACE,aAAgB,YAChB,KAAQ,SACR,KAAQ,WAClB,CACO,EACD,KAAQ,eACR,QAAW,CAAE,EACb,gBAAmB,aACnB,KAAQ,UACT,EACD,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,gBACR,KAAQ,SAClB,CACO,EACD,KAAQ,kBACR,QAAW,CAAE,EACb,gBAAmB,aACnB,KAAQ,UACT,EACD,4BACA,8BACA,4BACA,+BACA,2BACD,EACD,QAAS,CACP,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,SACR,KAAQ,SACT,EACD,CACE,aAAgB,SAChB,KAAQ,YACR,KAAQ,QAClB,CACO,EACD,KAAQ,OACR,QAAW,CAAE,EACb,gBAAmB,UACnB,KAAQ,UACT,EACD,CACE,OAAU,CAAE,EACZ,KAAQ,cACR,QAAW,CAAC,CAAE,aAAgB,OAAQ,KAAQ,GAAI,KAAQ,OAAQ,EAClE,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,OAAU,CAAE,EACZ,KAAQ,SACR,QAAW,CAAC,CACV,WAAc,CACZ,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,SAAW,EACrE,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,SAAW,EACrE,CAAE,aAAgB,UAAW,KAAQ,eAAgB,KAAQ,SAAW,EACxE,CAAE,aAAgB,UAAW,KAAQ,cAAe,KAAQ,SAAW,EACvE,CAAE,aAAgB,UAAW,KAAQ,cAAe,KAAQ,SAAW,EACvE,CAAE,aAAgB,OAAQ,KAAQ,eAAgB,KAAQ,MAAQ,EAClE,CAAE,aAAgB,UAAW,KAAQ,eAAgB,KAAQ,SAAW,EACxE,CAAE,aAAgB,OAAQ,KAAQ,kBAAmB,KAAQ,MAAM,CACpE,EACD,aAAgB,2CAChB,KAAQ,GACR,KAAQ,OAChB,CAAO,EACD,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,UAAa,GACb,OAAU,CACR,CAAE,QAAW,GAAO,aAAgB,SAAU,KAAQ,UAAW,KAAQ,QAAU,EACnF,CAAE,QAAW,GAAO,aAAgB,UAAW,KAAQ,QAAS,KAAQ,SAAS,CAClF,EACD,KAAQ,QACR,KAAQ,OACT,EACD,CACE,UAAa,GACb,OAAU,CACR,CACE,QAAW,GACX,aAAgB,UAChB,KAAQ,QACR,KAAQ,SACT,EACD,CACE,QAAW,GACX,aAAgB,SAChB,KAAQ,OACR,KAAQ,QACT,EACD,CACE,QAAW,GACX,aAAgB,SAChB,KAAQ,SACR,KAAQ,QACT,EACD,CACE,QAAW,GACX,aAAgB,SAChB,KAAQ,UACR,KAAQ,QAClB,CACO,EACD,KAAQ,cACR,KAAQ,OACT,EACD,CACE,OAAU,CAAE,EACZ,KAAQ,cACR,QAAW,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAW,EACxE,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,OAAU,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAW,EACvE,KAAQ,kBACR,QAAW,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAW,EACxE,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,gBACR,KAAQ,SAClB,CACO,EACD,KAAQ,kBACR,QAAW,CAAE,EACb,gBAAmB,aACnB,KAAQ,UACd,CACG,EACD,cAAe,CACb,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,WACR,KAAQ,SACT,EACD,CACE,aAAgB,SAChB,KAAQ,YACR,KAAQ,QAClB,CACO,EACD,KAAQ,OACR,QAAW,CAAE,EACb,gBAAmB,UACnB,KAAQ,UACT,EACD,CACE,OAAU,CAAE,EACZ,KAAQ,cACR,QAAW,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAW,EACxE,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,OAAU,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAW,EACvE,KAAQ,kBACR,QAAW,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAW,EACxE,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,OAAU,CAAE,EACZ,KAAQ,SACR,QAAW,CAAC,CACV,WAAc,CACZ,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,SAAW,EACrE,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,SAAW,EACrE,CAAE,aAAgB,UAAW,KAAQ,eAAgB,KAAQ,SAAW,EACxE,CAAE,aAAgB,UAAW,KAAQ,cAAe,KAAQ,SAAW,EACvE,CAAE,aAAgB,UAAW,KAAQ,cAAe,KAAQ,SAAW,EACvE,CAAE,aAAgB,OAAQ,KAAQ,eAAgB,KAAQ,MAAQ,EAClE,CAAE,aAAgB,UAAW,KAAQ,eAAgB,KAAQ,SAAW,EACxE,CAAE,aAAgB,OAAQ,KAAQ,kBAAmB,KAAQ,MAAM,CACpE,EACD,aAAgB,2CAChB,KAAQ,GACR,KAAQ,OAChB,CAAO,EACD,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,YACR,KAAQ,SAClB,CACO,EACD,KAAQ,cACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,WACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,gBACR,KAAQ,SAClB,CACO,EACD,gBAAmB,OACnB,KAAQ,UACd,CACG,EACD,eAAgB,CACd,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,SACR,KAAQ,SACT,EACD,CACE,aAAgB,SAChB,KAAQ,YACR,KAAQ,QAClB,CACO,EACD,KAAQ,OACR,QAAW,CAAE,EACb,gBAAmB,UACnB,KAAQ,UACT,EACD,CACE,OAAU,CAAE,EACZ,KAAQ,cACR,QAAW,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAW,EACxE,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,OAAU,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAW,EACvE,KAAQ,kBACR,QAAW,CAAC,CAAE,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAW,EACxE,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,OAAU,CAAE,EACZ,KAAQ,SACR,QAAW,CAAC,CACV,WAAc,CACZ,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,SAAW,EACrE,CAAE,aAAgB,UAAW,KAAQ,YAAa,KAAQ,SAAW,EACrE,CAAE,aAAgB,UAAW,KAAQ,eAAgB,KAAQ,SAAW,EACxE,CAAE,aAAgB,UAAW,KAAQ,cAAe,KAAQ,SAAW,EACvE,CAAE,aAAgB,UAAW,KAAQ,cAAe,KAAQ,SAAW,EACvE,CAAE,aAAgB,OAAQ,KAAQ,eAAgB,KAAQ,MAAQ,EAClE,CAAE,aAAgB,UAAW,KAAQ,eAAgB,KAAQ,SAAW,EACxE,CAAE,aAAgB,OAAQ,KAAQ,kBAAmB,KAAQ,MAAM,CACpE,EACD,aAAgB,2CAChB,KAAQ,GACR,KAAQ,OAChB,CAAO,EACD,gBAAmB,OACnB,KAAQ,UACT,EACD,CACE,OAAU,CACR,CACE,aAAgB,UAChB,KAAQ,UACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,YACR,KAAQ,SAClB,CACO,EACD,KAAQ,cACR,QAAW,CACT,CACE,aAAgB,UAChB,KAAQ,WACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,gBACR,KAAQ,SAClB,CACO,EACD,gBAAmB,OACnB,KAAQ,UACd,CACA,CACA,ECrbM5U,GAAiB,CACrB,OAAQ,0CACR,WAAY,qCACZ,UAAW,qBACX,cAAe,yCACf,kBAAmB,eACnB,MAAO,4CACP,cAAe,cACjB,EAGMC,GAAMC,GAAcF,EAAc,EACfS,GAAaR,EAAG,EAC5B,MAAAI,GAAKC,GAAaL,EAAG,EAGrB4U,GAAiB1S,GAAW9B,GAAI,aAAa,EAC7CyU,GAAsB3S,GAAW9B,GAAI,kBAAkB,EACvD0U,GAAW5S,GAAW9B,GAAI,OAAO,EACjC2U,GAAa7S,GAAW9B,GAAI,SAAS,EACxB8B,GAAW9B,GAAI,SAAS,EACzB8B,GAAW9B,GAAI,QAAQ,EACf8B,GAAW9B,GAAI,gBAAgB,EACxC8B,GAAW9B,GAAI,OAAO,EAClB8B,GAAW9B,GAAI,WAAW,EAEzC,MAAA4U,GAAiB,MAAOC,GAAmB,CAClD,GAAA,CACF,KAAM,CAAE,QAAAC,EAAS,GAAGC,CAAA,EAA8BF,EAE5CG,EAAa,CACjB,GAAGD,EACH,UAAW,IAAI,KAAK,EAAE,YAAY,EAClC,UAAW,IAAI,KAAK,EAAE,YAAY,CACpC,EAGA,OADe,MAAME,GAAOT,GAAgBQ,CAAU,GACxC,SACP9S,EAAO,CACR,MAAAA,CAAA,CAEV,EAEagT,GAAgB,MAAOC,GAAW,CACzC,GAAA,CACF,MAAMvT,EAAIC,GAAM2S,GAAgBzS,GAAM,SAAU,KAAMoT,CAAM,CAAC,EACvDnT,EAAgB,MAAMC,GAAQL,CAAC,EAEjC,GAAA,CAACI,EAAc,MAAO,CAClBX,MAAAA,EAAMW,EAAc,KAAK,CAAC,EACzB,MAAA,CACL,GAAIX,EAAI,GACR,GAAGA,EAAI,KAAK,CACd,CAAA,CAEK,OAAA,WACAa,EAAO,CACR,MAAAA,CAAA,CAEV,EAEakT,GAAoB,MAAOC,EAAU,KAAO,CACnD,GAAA,CACE,IAAAzT,EAAIE,GAAW9B,GAAI,aAAa,EACpC,MAAMsV,EAAc,CAAC,EAErB,OAAID,EAAQ,SAAWA,EAAQ,UAAY,QACrCA,EAAQ,UAAY,mBAEtBC,EAAY,KAAKvT,GAAM,UAAW,KAAM,GAAG,CAAC,EACnCsT,EAAQ,UAAY,WAC7BC,EAAY,KAAKvT,GAAM,UAAW,KAAM,IAAI,CAAC,EAE7CuT,EAAY,KAAKvT,GAAM,UAAW,KAAMsT,EAAQ,OAAO,CAAC,GAIxDA,EAAQ,MAAQA,EAAQ,OAAS,OACnCC,EAAY,KAAKvT,GAAM,OAAQ,KAAMsT,EAAQ,IAAI,CAAC,EAIhDA,EAAQ,cACVC,EAAY,KAAKvT,GAAM,eAAgB,KAAM,EAAI,CAAC,EAIpDuT,EAAY,KAAKnP,GAAQ,YAAa,MAAM,CAAC,EAGzCvE,EAAAC,GAAMD,EAAG,GAAG0T,CAAW,GAEL,MAAMrT,GAAQL,CAAC,GAChB,KAAK,IAAIP,IAAQ,CACpC,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,QACKa,EAAO,CACN,cAAA,MAAM,8BAA+BA,CAAK,EAC5CA,CAAA,CAEV,EAEaqT,GAAyB,MAAOJ,EAAQK,IAAmB,CAClE,GAAA,CACF,MAAM5T,EAAIC,GAAM2S,GAAgBzS,GAAM,SAAU,KAAMoT,CAAM,CAAC,EACvDnT,EAAgB,MAAMC,GAAQL,CAAC,EAEjC,GAAA,CAACI,EAAc,MAAO,CACxB,MAAMyT,EAASzT,EAAc,KAAK,CAAC,EAAE,IACrC,aAAMoO,GAAUqF,EAAQ,CACtB,YAAaD,EACb,UAAWE,GAAgB,CAAA,CAC5B,EAEM,CACL,GAAG1T,EAAc,KAAK,CAAC,EAAE,KAAK,EAC9B,YAAawT,CACf,CAAA,QAEKtT,EAAO,CACR,MAAAA,CAAA,CAEV,EAEayT,GAAwB,CAACR,EAAQS,IAAa,CACzD,MAAMhU,EAAIC,GAAM2S,GAAgBzS,GAAM,SAAU,KAAMoT,CAAM,CAAC,EACtD,OAAAU,GAAWjU,EAAIkU,GAAa,CAC5BA,EAAS,OACZF,EAASE,EAAS,KAAK,CAAC,EAAE,MAAM,CAClC,CACD,CACH,EAEaC,GAAsB,MAAOC,EAAYxR,IAAkB,CAClE,GAAA,CACF,GAAI,CAACwR,EAAW,SAAW,CAACA,EAAW,UAC/B,MAAA,IAAI,MAAM,yDAAyD,EAG3E,MAAMf,GAAOR,GAAqB,CAChC,GAAGuB,EACH,eAAgBxR,EAAc,YAAY,EAC1C,UAAW,KAAK,IAAI,EACpB,KAAM,QACN,QAASwR,EAAW,QACpB,UAAWA,EAAW,SAAA,CACvB,QACM9T,EAAO,CACR,MAAAA,CAAA,CAEV,EAEa+T,GAA8B,MAAOzR,GAAkB,CAC9D,GAAA,CACF,MAAM5C,EAAIC,GACR4S,GACA1S,GAAM,iBAAkB,KAAMyC,EAAc,YAAa,CAAA,CAC3D,EAOO,OALe,MAAMvC,GAAQL,CAAC,GACH,KAAK,IAAIP,IAAQ,CACjD,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EACiB,KAAK,CAAC2H,EAAGC,IAAMA,EAAE,UAAYD,EAAE,SAAS,QACpD9G,EAAO,CACR,MAAAA,CAAA,CAEV,EAEagU,GAAyB,MAAO1R,GAAkB,CACzD,GAAA,CACF,MAAM5C,EAAIC,GACR2S,GACAzS,GAAM,iBAAkB,KAAMyC,EAAc,YAAa,CAAA,CAC3D,EAOO,OALe,MAAMvC,GAAQL,CAAC,GACH,KAAK,IAAIP,IAAQ,CACjD,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EACiB,KAAK,CAAC2H,EAAGC,IAAMA,EAAE,UAAYD,EAAE,SAAS,QACpD9G,EAAO,CACR,MAAAA,CAAA,CAEV,EAGaiU,GAAiB,MAAOC,GAAsB,CACrD,GAAA,CACF,MAAMxU,EAAIC,GACR6S,GACA3S,GAAM,oBAAqB,KAAMqU,CAAiB,EAClDjQ,GAAQ,YAAa,MAAM,EAC3BkQ,GAAe,EAAE,CACnB,EAGA,OADsB,MAAMpU,GAAQL,CAAC,GAChB,KAAK,IAAIP,IAAQ,CACpC,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,EACZ,UAAWA,EAAI,KAAK,EAAE,WAAW,OAAO,CAAA,EACxC,OACY,CACd,MAAO,CAAC,CAAA,CAEZ,EAGaiV,GAAe,MAAOC,GAAa,CAC1C,GAAA,CACF,KAAM,CAAE,YAAAC,EAAa,GAAGC,CAAA,EAAkBF,EAEpCG,EAAY,CAChB,kBAAmBD,EAAc,mBAAqB,GACtD,cAAeA,EAAc,cAAgBA,EAAc,cAAc,cAAgB,GACzF,QAAS,OAAOA,EAAc,SAAW,GAAG,EAC5C,SAAU,OAAOA,EAAc,UAAY,GAAG,EAC9C,KAAM,OAAOA,EAAc,MAAQ,EAAE,EACrC,MAAO,OAAOA,EAAc,OAAS,EAAE,EACvC,MAAO,OAAOA,EAAc,OAAS,GAAG,EACxC,KAAM,OAAOA,EAAc,MAAQ,SAAS,EAC5C,KAAMA,EAAc,MAAQ,GAC5B,OAAQA,EAAc,QAAU,GAChC,YAAaA,EAAc,aAAe,QAC1C,QAASA,EAAc,SAAW,UAClC,UAAWA,EAAc,WAAa,IACtC,aAAcA,EAAc,cAAgB,KAC5C,UAAWf,GAAgB,CAC7B,EAEA,GAAI,CAACgB,EAAU,mBAAqB,CAACA,EAAU,cACvC,MAAA,IAAI,MAAM,sCAAsC,EAGxD,MAAMjB,EAAS,MAAMR,GAAOP,GAAUgC,CAAS,EAEzCC,EAAY9U,GAChB8S,GACA5S,GAAM,oBAAqB,KAAM2U,EAAU,iBAAiB,EAC5D3U,GAAM,gBAAiB,KAAM2U,EAAU,aAAa,CACtD,EAEME,EAAiB,MAAM3U,GAAQ0U,CAAS,EACxCE,EAAW,OAAOH,EAAU,QAAQ,EAE1C,GAAIE,EAAe,MACjB,MAAM3B,GAAON,GAAY,CACvB,kBAAmB+B,EAAU,kBAC7B,cAAeA,EAAU,cACzB,SAAAG,EACA,YAAanB,GAAgB,CAAA,CAC9B,MACI,CACC,MAAAoB,EAAYF,EAAe,KAAK,CAAC,EACjCG,EAAkB,OAAOD,EAAU,KAAK,EAAE,QAAQ,GAAK,EACvD,MAAA1G,GAAU0G,EAAU,IAAK,CAC7B,SAAUC,EAAkBF,EAC5B,YAAanB,GAAgB,CAAA,CAC9B,CAAA,CAGH,OAAOD,EAAO,SACPvT,EAAO,CACR,MAAAA,CAAA,CAEV,EAiCa8U,GAA8B,MAAOnN,GAAY,CACxD,GAAA,CACF,MAAMjI,EAAIC,GACR4S,GACA1S,GAAM,UAAW,KAAM8H,CAAO,CAChC,EACM7H,EAAgB,MAAMC,GAAQL,CAAC,EAEjC,OAACI,EAAc,MAGZ,KAFEA,EAAc,KAAK,CAAC,EAAE,KAAK,OAGtB,CACP,OAAA,IAAA,CAEX,EA+DaiV,GAAkB,MAAO9L,GAAiB,CACjD,GAAA,CACK,OAAA,MAAM6L,GAA4B7L,CAAY,OACvC,CACP,OAAA,IAAA,CAEX,EAmDa+L,GAAe,MAAOrN,GAAY,CACzC,GAAA,CACF,MAAMsN,EAAatV,GACjBC,GAAW9B,GAAI,OAAO,EACtB+B,GAAM,gBAAiB,KAAM8H,EAAQ,YAAa,CAAA,CACpD,EAGMuN,GADgB,MAAMnV,GAAQkV,CAAU,GAClB,KAAK,IAAI9V,IAAQ,CAC3C,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,EACZ,SAAUA,EAAI,KAAK,EAAE,WAAW,OAAO,OAAS,IAAK,EACrD,EAEIgW,EAAsB,MAAMpV,GAAQH,GAAW9B,GAAI,aAAa,CAAC,EACjEsX,MAAkB,IAEJD,EAAA,KAAK,QAAQhW,GAAO,CAChC,MAAAuG,EAAOvG,EAAI,KAAK,EAClBuG,EAAK,iBACP0P,EAAY,IAAI1P,EAAK,gBAAgB,YAAA,EAAeA,CAAI,CAC1D,CACD,EAED,MAAM2P,EAAY,CAAC,EACbC,MAAsB,IAE5B,UAAWC,KAAQL,EAAO,CACxB,MAAMtV,EAAawV,EAAY,IAAIG,EAAK,mBAAmB,aAAa,EAEpE3V,GAAAA,GAAc2V,EAAK,OAAS,UAAW,CACzC,MAAMC,EAAY,CAChB,GAAGD,EACH,GAAI3V,GAAc,CAAC,EACnB,QAAS2V,EAAK,SAAW,EACzB,KAAMA,EAAK,MAAQ3V,GAAY,MAAQ,qBACvC,eAAgBA,GAAY,MAAQ2V,EAAK,KACzC,KAAMA,EAAK,MAAQ3V,GAAY,MAAQ,SACvC,OAAQA,GAAY,QAAU2V,EAAK,OACnC,YAAa3V,GAAY,aAAe2V,EAAK,aAAe,QAC5D,QAAS3V,GAAY,SAAW2V,EAAK,SAAW,UAChD,MAAOA,EAAK,OAAS3V,GAAY,WAAa,IAC9C,aAAc2V,EAAK,cAAgB3V,GAAY,cAAgB,IACjE,EAEM6V,EAAW,GAAGD,EAAU,iBAAiB,IAAIA,EAAU,OAAO,GAEpE,GAAI,CAACF,EAAgB,IAAIG,CAAQ,EAE/B,GADAH,EAAgB,IAAIG,CAAQ,EACxBF,EAAK,OAAS,WAAaA,EAAK,QAAU,EAC5C,QAAS3J,EAAI,EAAGA,EAAI2J,EAAK,QAAS3J,IAChCyJ,EAAU,KAAK,CACb,GAAGG,EACH,QAAS,EACT,SAAU,GAAGC,CAAQ,IAAI7J,CAAC,EAAA,CAC3B,OAGHyJ,EAAU,KAAK,CACb,GAAGG,EACH,QAASD,EAAK,SAAW,EACzB,SAAUE,CAAA,CACX,CAEL,CACF,CAGK,OAAAJ,OACO,CACd,MAAO,CAAC,CAAA,CAEZ,EAyKaK,GAAyB,SAAY,CAC5C,GAAA,CACF,MAAMhW,EAAIC,GACR4S,GACA1S,GAAM,OAAQ,KAAM,OAAO,EAC3BoE,GAAQ,YAAa,MAAM,CAC7B,EAGA,OADsB,MAAMlE,GAAQL,CAAC,GAChB,KAAK,IAAIP,IAAQ,CACpC,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,OACY,CACd,MAAO,CAAC,CAAA,CAEZ,ECvrBMwW,GAAqBhZ,EAAAA,cAAc,EAEzB,SAAAiZ,GAAoB,CAAE,SAAA/Y,GAAY,CAC1C,KAAA,CAAE,QAAA8K,CAAQ,EAAIE,GAAW,EACzB,CAACgO,EAAaC,CAAc,EAAI9Y,EAAAA,SAAS,CAAA,CAAE,EAC3C,CAAC+Y,EAAgBC,CAAiB,EAAIhZ,EAAAA,SAAS,CAAA,CAAE,EAGvDE,EAAAA,UAAU,IAAM,EACU,SAAY,CAC9B,GAAA,CAEI+Y,MAAAA,EAAiB,MAAMP,GAAuB,EAIpD,GAHAI,EAAeG,CAAc,EAGzBtO,EAAS,CAEL,MAAAuO,GADiB,MAAMlC,GAAuBrM,CAAO,GACZ,IAAYwO,IAAA,CACzD,GAAGA,EACH,KAAM,MACN,KAAMA,EAAI,WACV,SAAUA,EAAI,aACd,YAAaA,EAAI,UACjB,UAAWA,EAAI,UACf,UAAWA,EAAI,UAAY,UAAY,UACrCA,EAAI,UAAY,gBAAkB,gBAClCA,EAAI,UAAY,oBAAsBA,EAAI,UAAY,IAAM,mBAC5DA,EAAI,UAAY,UAAY,UAAYA,EAAI,OAAA,EAC9C,EACFH,EAAkBE,CAAuB,CAAA,MAEzCF,EAAkB,CAAA,CAAE,QAEfhW,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,EACjD8V,EAAe,CAAA,CAAE,EACjBE,EAAkB,CAAA,CAAE,CAAA,CAExB,GAEgB,CAAA,EACf,CAACrO,CAAO,CAAC,EAEN,MAAAyO,EAAgB,MAAOtC,GAAe,CAC1C,GAAKnM,EAED,GAAA,CACI,MAAAkM,GAAoBC,EAAYnM,CAAO,EAEvCsO,MAAAA,EAAiB,MAAMP,GAAuB,EACpDI,EAAeG,CAAc,QACtBjW,EAAO,CACR,MAAAA,CAAA,CAEV,EAGMiW,EAAiB,CAAC,GAAGJ,EAAa,GAAGE,CAAc,EACtD,KAAK,CAACjP,EAAGC,IAAM,CACR,MAAAsP,EAAQvP,EAAE,WAAaA,EAAE,UAE/B,OADcC,EAAE,WAAaA,EAAE,WAChBsP,CAAA,CAChB,EACA,MAAM,EAAG,EAAE,EAGZ,OAAAjZ,MAACuY,GAAmB,SAAnB,CAA4B,MAAO,CAAE,YAAaM,EAAgB,cAAAG,GAChE,SAAAvZ,EACH,CAEJ,CAEO,MAAMyZ,GAAiB,IAAM,CAC5B,MAAAhZ,EAAUC,aAAWoY,EAAkB,EAC7C,GAAI,CAACrY,EACG,MAAA,IAAI,MAAM,0DAA0D,EAErE,OAAAA,CACT,EChFMiZ,GAAa,4qBACbC,GAAa,mCACbC,GAAe,wBAErB,eAAsBC,GAAiB5E,EAA6B,CAC5D,MAAAG,EAAW,IAAI,SACZ,OAAAA,EAAA,OAAO,OAAQH,CAAI,EAWrB,WATU,MAAMX,GAAM,KAAK,GAAGqF,EAAU,iBAAkBvE,EAAU,CACzE,QAAS,CACP,eAAgB,sBAChB,cAAe,UAAUsE,EAAU,EACrC,EACA,cAAe,GAAA,CAChB,GAEyB,KAAK,QACN,EAC3B,CAEA,eAAsBI,GAAqBC,EAAwC,CAC3E,MAAAC,EAAe,CAAE,GAAGD,CAAS,EAa5B,MAAA,WAXU,MAAMzF,GAAM,KAC3B,GAAGqF,EAAU,iBACbK,EACA,CACE,QAAS,CACP,eAAgB,mBAChB,cAAe,UAAUN,EAAU,EAAA,CACrC,CAEJ,GAE0B,KAAK,QAAQ,EACzC,CAEO,SAASO,GAAW3E,EAAyB,CAC9C,OAACA,EACDA,EAAQ,WAAW,MAAM,EAAUA,EAChCA,EAAQ,QAAQ,UAAWsE,EAAY,EAFzB,EAGvB,CCxCA,MAAMM,GAAoBnX,GAAW9B,GAAI,gBAAgB,EAGnDkZ,GAAqB,CACzB,yEACF,EAgBMC,GAAkB,IAAI,IACtBC,GAAwB,IAAI,IAErBC,GAAsB,MAAOlO,EAAcjE,IAAa,CACnE,GAAI,CAEF,GAAIiS,GAAgB,IAAIhO,CAAY,EAClC,OAGF,MAAMJ,EAAW,IAAIC,EAAgBG,EAAc+N,GAAoBhS,CAAQ,EAGzEoS,EAAc,MAAMpS,EAAS,eAAgB,EAI7CwD,GADU,MAAMxD,EAAS,WAAY,GACnB,QAGlBsG,EAASzC,EAAS,QAAQ,SAAU,EACpCwO,EAAa,KAAK,IAAI,EAAGD,EAAc,GAAK,EAE5CE,EAAS,MAAMzO,EAAS,YAAYyC,EAAQ+L,EAAYD,CAAW,EAGzE,UAAWG,KAASD,EAAQ,CAC1B,MAAME,EAAQ,GAAGD,EAAM,eAAe,IAAIA,EAAM,KAAK,CAAC,CAAC,IAAIA,EAAM,KAAK,CAAC,CAAC,IAAIA,EAAM,KAAK,CAAC,CAAC,GAGzF,GAAIL,GAAsB,IAAIM,CAAK,EACjC,SAIF,MAAMC,EAAQ,MAAMzS,EAAS,SAASuS,EAAM,WAAW,EAEjDG,EAAW,CACf,aAAAzO,EACA,YAAasO,EAAM,KAAK,CAAC,EAAE,YAAa,EACxC,UAAWA,EAAM,KAAK,CAAC,EAAE,YAAa,EACtC,OAAQA,EAAM,KAAK,CAAC,EAAE,SAAU,EAChC,gBAAiBA,EAAM,gBACvB,YAAaA,EAAM,YACnB,UAAWE,EAAM,UAAY,IAC7B,QAAS,OAAOjP,CAAO,CACxB,EAGKmP,EAAgBhY,GACpBoX,GACAlX,GAAM,kBAAmB,KAAM6X,EAAS,eAAe,EACvD7X,GAAM,cAAe,KAAM6X,EAAS,WAAW,EAC/C7X,GAAM,YAAa,KAAM6X,EAAS,SAAS,CAC5C,GACoB,MAAM3X,GAAQ4X,CAAa,GAE/B,OACf,MAAM5E,GAAOgE,GAAmBW,CAAQ,EAI1CR,GAAsB,IAAIM,CAAK,CACrC,CAGI,MAAMI,EAAW/O,EAAS,GAAG,WAAY,MAAOgP,EAAMC,EAAI3a,EAAOoa,IAAU,CACzE,MAAMC,EAAQ,GAAGD,EAAM,eAAe,IAAIM,CAAI,IAAIC,CAAE,IAAI3a,CAAK,GAG7D,GAAI+Z,GAAsB,IAAIM,CAAK,EACjC,OAIF,MAAMC,EAAQ,MAAMzS,EAAS,SAASuS,EAAM,WAAW,EAEjDG,EAAW,CACf,aAAAzO,EACA,YAAa4O,EAAK,YAAa,EAC/B,UAAWC,EAAG,YAAa,EAC3B,OAAQ3a,EAAM,SAAU,EACxB,gBAAiBoa,EAAM,gBACvB,YAAaA,EAAM,YACnB,UAAWE,EAAM,UAAY,IAC7B,QAAS,OAAOjP,CAAO,CACxB,EAGKmP,EAAgBhY,GACpBoX,GACAlX,GAAM,kBAAmB,KAAM6X,EAAS,eAAe,EACvD7X,GAAM,cAAe,KAAM6X,EAAS,WAAW,EAC/C7X,GAAM,YAAa,KAAM6X,EAAS,SAAS,CAC5C,GACoB,MAAM3X,GAAQ4X,CAAa,GAE/B,OACf,MAAM5E,GAAOgE,GAAmBW,CAAQ,EAI1CR,GAAsB,IAAIM,CAAK,CACrC,CAAK,EAEDP,GAAgB,IAAIhO,EAAc2O,CAAQ,CAE3C,OAAQ5X,EAAO,CACd,MAAMA,CACV,CACA,EAoLa+X,GAA8B,MAAOpQ,GAAY,CAC5D,GAAI,CAEF,MAAMqQ,EAAYrY,GAChBoX,GACAlX,GAAM,cAAe,KAAM8H,EAAQ,YAAW,CAAE,EAChD1D,GAAQ,YAAa,MAAM,CAC5B,EAEKgU,EAAgBtY,GACpBoX,GACAlX,GAAM,YAAa,KAAM8H,EAAQ,YAAW,CAAE,EAC9C1D,GAAQ,YAAa,MAAM,CAC5B,EAEK,CAACiU,EAAcC,CAAgB,EAAI,MAAM,QAAQ,IAAI,CACzDpY,GAAQiY,CAAS,EACjBjY,GAAQkY,CAAa,CAC3B,CAAK,EAEKG,EAAgBF,EAAa,KAAK,IAAI/Y,GAAO,CACjD,MAAMuG,EAAOvG,EAAI,KAAM,EACvB,MAAO,CACL,GAAIA,EAAI,GACR,GAAGuG,EACH,KAAM,OACN,UAAW,IAAI,KAAKA,EAAK,SAAS,CACnC,CACP,CAAK,EAEK2S,EAAoBF,EAAiB,KAAK,IAAIhZ,GAAO,CACzD,MAAMuG,EAAOvG,EAAI,KAAM,EACvB,MAAO,CACL,GAAIA,EAAI,GACR,GAAGuG,EACH,KAAM,WACN,UAAW,IAAI,KAAKA,EAAK,SAAS,CACnC,CACP,CAAK,EAOD,MAJqB,CAAC,GAAG0S,EAAe,GAAGC,CAAiB,EAAE,KAC5D,CAACvR,EAAGC,IAAMA,EAAE,UAAU,UAAYD,EAAE,UAAU,QAAO,CACtD,CAGF,MAAe,CACd,MAAO,CAAE,CACb,CACA,EAEawR,GAA4B,MAAO3Q,GAAY,CAC1D,GAAI,CAEF,MAAMqQ,EAAYrY,GAChBC,GAAW9B,GAAI,cAAc,EAC7B+B,GAAM,cAAe,KAAM8H,EAAQ,YAAW,CAAE,EAChD1D,GAAQ,YAAa,MAAM,CAC5B,EAEKgU,EAAgBtY,GACpBC,GAAW9B,GAAI,cAAc,EAC7B+B,GAAM,YAAa,KAAM8H,EAAQ,YAAW,CAAE,EAC9C1D,GAAQ,YAAa,MAAM,CAC5B,EAEK,CAACiU,EAAcC,CAAgB,EAAI,MAAM,QAAQ,IAAI,CACzDpY,GAAQiY,CAAS,EACjBjY,GAAQkY,CAAa,CAC3B,CAAK,EAEKG,EAAgBF,EAAa,KAAK,IAAI/Y,GAAO,CACjD,MAAMuG,EAAOvG,EAAI,KAAM,EACvB,MAAO,CACL,GAAIA,EAAI,GACR,GAAGuG,EACH,KAAM,OACN,UAAW,IAAI,KAAKA,EAAK,SAAS,CACnC,CACP,CAAK,EAEK2S,EAAoBF,EAAiB,KAAK,IAAIhZ,GAAO,CACzD,MAAMuG,EAAOvG,EAAI,KAAM,EACvB,MAAO,CACL,GAAIA,EAAI,GACR,GAAGuG,EACH,KAAM,WACN,UAAW,IAAI,KAAKA,EAAK,SAAS,CACnC,CACP,CAAK,EAOD,MAJqB,CAAC,GAAG0S,EAAe,GAAGC,CAAiB,EAAE,KAC5D,CAACvR,EAAGC,IAAMA,EAAE,UAAU,UAAYD,EAAE,UAAU,QAAO,CACtD,CAGF,MAAe,CACd,MAAO,CAAE,CACb,CACA,EC/YMyR,GAAQ,SAAS,cAAc,OAAO,EAC5CA,GAAM,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0CpB,SAAS,KAAK,YAAYA,EAAK,EAG/B,MAAMC,GAAQ,CACZ,UAAW,IACRpb,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAAO,MAAO,CAAE,UAAW,2BAC3E,EAAA,SAACwE,EAAAA,KAAA,KAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGxE,EAAAA,IAAA,OAAK,CAAA,EAAE,6BAA6B,cAAc,QAAQ,MAAO,CAAE,UAAW,kCAAmC,CAAA,CAAG,EACpHA,EAAAA,IAAA,OAAA,CAAK,EAAE,sEAAsE,cAAc,QAAQ,MAAO,CAAE,UAAW,mCAAoC,eAAgB,MAAA,CAAU,CAAA,CAAA,CAAA,CACxL,CAAA,CACF,EAEF,cAAe,IACZA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGA,EAAAA,IAAA,OAAA,CAAK,EAAE,4BAA4B,cAAc,QAAQ,eAAe,QAAQ,MAAO,CAAE,UAAW,kCAAoC,EACxIA,EAAAA,IAAA,OAAA,CAAK,EAAE,UAAU,cAAc,QAAQ,MAAO,CAAE,UAAW,iCAAkC,eAAgB,MAAA,CAAU,CAAA,CAAA,CAAA,CAC1H,CAAA,CACF,EAEF,cAAe,IACZA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGA,EAAAA,IAAA,OAAK,CAAA,EAAE,0BAA0B,cAAc,QAAQ,MAAO,CAAE,UAAW,8BAA+B,CAAA,CAAG,EAC7GA,EAAAA,IAAA,OAAA,CAAK,EAAE,WAAW,cAAc,QAAQ,MAAO,CAAE,UAAW,+BAAgC,eAAgB,QAAU,EACtHA,EAAAA,IAAA,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,MAAO,CAAE,UAAW,2BAAA,CAA+B,CAAA,CAAA,CAAA,CACnF,CAAA,CACF,EAEF,UAAW,IACRA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,oCAAoC,QAChI,OAAK,CAAA,EAAE,gBAAgB,cAAc,QAAQ,eAAe,QAAQ,UAAU,2CAA2C,MAAO,CAAE,gBAAiB,GAAI,iBAAkB,GAAM,CAAA,CAAA,CAAA,CAClL,CAAA,CACF,EAEF,MAAO,IACJA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAE,CAAA,YAAa,IAAK,OAAO,eAAe,MAAO,CAAE,UAAW,wBAAyB,EACtF,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,eAAe,QAC3G,OAAK,CAAA,EAAE,UAAU,cAAc,QAAQ,UAAU,eAAe,QAChE,OAAK,CAAA,EAAE,aAAa,cAAc,QAAQ,UAAU,cAAe,CAAA,CAAA,CAAA,CACtE,CACF,CAAA,CAEJ,EAGMqb,GAAY,CAChB,QAAS,SACT,QAAS,IACT,iBAAkB,IAClB,SAAU,KACV,WAAY,WACZ,cAAe,KACjB,EAEMC,GAAoB,CACxB,CAACD,GAAU,OAAO,EAAG,6CACrB,CAACA,GAAU,OAAO,EAAG,6CACrB,CAACA,GAAU,gBAAgB,EAAG,6CAC9B,CAACA,GAAU,QAAQ,EAAG,6CACtB,CAACA,GAAU,UAAU,EAAG,6CACxB,CAACA,GAAU,aAAa,EAAG,4CAC7B,EAEME,GAAa,CACjB,CAACF,GAAU,OAAO,EAAG,OACrB,CAACA,GAAU,OAAO,EAAG,KACrB,CAACA,GAAU,gBAAgB,EAAG,OAC9B,CAACA,GAAU,QAAQ,EAAG,OACtB,CAACA,GAAU,UAAU,EAAG,MACxB,CAACA,GAAU,aAAa,EAAG,MAC7B,EAWMG,GAAqB,CACzB,CAACH,GAAU,OAAO,EAAG,MACrB,CAACA,GAAU,OAAO,EAAG,MACrB,CAACA,GAAU,gBAAgB,EAAG,MAC9B,CAACA,GAAU,QAAQ,EAAG,MACtB,CAACA,GAAU,UAAU,EAAG,OACxB,CAACA,GAAU,aAAa,EAAG,KAC7B,EAGMI,GAAgB,CAAC,CAAE,OAAAC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,UAAAC,EAAW,MAAAjZ,EAAO,gBAAAkZ,KAAsB,CAC7F,MAAMC,EAAQ,CACZ,CAAE,IAAK,YAAa,MAAO,wBAAyB,KAAMX,GAAM,SAAU,EAC1E,CAAE,IAAK,YAAa,MAAO,iBAAkB,KAAMA,GAAM,aAAc,EACvE,CAAE,IAAK,WAAY,MAAO,iBAAkB,KAAMA,GAAM,aAAc,EACtE,CAAE,IAAK,YAAa,MAAO,6BAA8B,KAAMA,GAAM,SAAU,CACjF,EAEMY,EAAmBD,EAAM,UAAkBE,GAAAA,EAAK,MAAQL,CAAW,EAInEM,EAAsBtZ,GACtBA,GAAO,SAAS,sBAAsB,EACjC,8CAELA,GAAO,SAAS,oBAAoB,EAC/B,kDAEFA,GAAO,QAAQ,kCAAmC,EAAE,GAAK,oBAG5DuZ,EAAkB,MAAOlL,GAAS,CAClC,GAAA,CACI,MAAA,UAAU,UAAU,UAAUA,CAAI,EACxC7N,GAAM,QAAQ,8BAA8B,OAChC,CACZA,GAAM,MAAM,wBAAwB,CAAA,CAExC,EAEA,aACGgZ,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EAAAA,SACnC,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,qBAAqB,QAAAV,EAC9C,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAC/S,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,CACxE,QAEC,MAAI,CAAA,UAAU,0CACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,uIACtB,SAAA,QAACA,GAAO,MAAP,CAAa,UAAU,yDACrB,SAAA,CAAAzZ,EAAQ,uBAAyB,iBACjCiZ,GAAa,CAACjZ,GACZ5C,MAAA,MAAI,CAAA,UAAU,8DACZ,SACH6b,CAAA,CAAA,CAAA,EAEJ,EACA7b,MAAC,OAAI,UAAU,YACZ,WAAM,IAAI,CAACic,EAAM/R,IAAU,CAC1B,MAAMoS,EAAOL,EAAK,KACZnY,EAAWoG,IAAU8R,EACrBO,EAAc,CAAC3Z,GAASsH,EAAQ8R,EAChCQ,EAAc5Z,GAASsH,IAAU8R,EAGrC,OAAAxX,EAAA,KAAC,MAAA,CAEC,UAAWiY,GACT,2DACA,CACE,iCAAkC3Y,GAAY,CAAC0Y,EAC/C,iBAAkBD,EAClB,6BAA8BC,EAC9B,gBAAiB,CAAC1Y,GAAY,CAACyY,GAAe,CAACC,CAAA,CAEnD,EAEA,SAAA,CAAAxc,EAAA,IAACsc,EAAK,EAAA,EACL9X,EAAAA,KAAA,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CAA6C,SAAAic,EAAK,MAAM,EACvEnY,GAAYmY,EAAK,MAAQ,YAAc,CAACrZ,GACvC4B,EAAA,KAAC,IAAE,CAAA,UAAU,gDAAgD,SAAA,CAAA,kBAC3CqX,CAAA,CAClB,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,EAnBKI,EAAK,GAoBZ,CAEH,CAAA,EACH,EACCrZ,GACE4B,EAAA,KAAA,MAAI,CAAA,UAAU,6DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACZ5W,EAAAA,KAAA,MAAI,CAAA,UAAU,SACb,SAAA,OAAC,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,QAC7D,IAAE,CAAA,UAAU,4BACV,SAAA0X,EAAmBtZ,CAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACC5C,EAAAA,IAAA,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,iLACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAEDC,IAAgB,aACdpX,OAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,OAAC,IAAA,CAAE,UAAU,qCAAqC,SAA8B,iCAAA,QAC/E,IAAA,CAAE,UAAU,wCAAwC,SAAiD,mDAAA,CAAA,CAAA,EACxG,EAECA,EAAAA,KAAA,MAAI,CAAA,UAAU,0FACb,SAAA,OAAC,KAAA,CAAG,UAAU,iDAAiD,SAAsB,yBAAA,EACpFA,EAAAA,KAAA,MAAI,CAAA,UAAU,uEACb,SAAA,OAAC,OAAA,CAAK,UAAU,4DACb,SACHsX,EAAA,EACA9b,EAAA,IAAC,SAAA,CACC,QAAS,IAAMmc,EAAgBL,CAAe,EAC9C,UAAU,4EACV,MAAM,eAEN,SAAC9b,EAAAA,IAAA0c,GAAO,CAAA,UAAU,0CAA2C,CAAA,CAAA,CAAA,CAC/D,EACF,QACC,IAAA,CAAE,UAAU,gDAAgD,SAE7D,0DAAA,CAAA,CAAA,EACF,EAEClY,EAAAA,KAAA,MAAI,CAAA,UAAU,0FACb,SAAA,OAAC,KAAA,CAAG,UAAU,iDAAiD,SAAU,aAAA,EAExEA,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,OAAC,MAAA,CAAI,UAAU,gGAAgG,SAAC,IAAA,SAC/G,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,4CAA4C,SAAY,eAAA,QACpE,IAAA,CAAE,UAAU,2CAA2C,SAA6D,+DAAA,CAAA,CAAA,CACvH,CAAA,CAAA,EACF,EAECA,EAAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,OAAC,MAAA,CAAI,UAAU,gGAAgG,SAAC,IAAA,SAC/G,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,4CAA4C,SAAa,gBAAA,QACrE,IAAA,CAAE,UAAU,2CAA2C,SAAiD,mDAAA,CAAA,CAAA,CAC3G,CAAA,CAAA,EACF,EAECA,EAAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,OAAC,MAAA,CAAI,UAAU,gGAAgG,SAAC,IAAA,SAC/G,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,4CAA4C,SAAa,gBAAA,QACrE,IAAA,CAAE,UAAU,2CAA2C,SAAyC,2CAAA,CAAA,CAAA,CACnG,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,EAGMmY,GAAkB,CAAC,CAAE,OAAAjB,EAAQ,QAAAC,EAAS,OAAAiB,KAAa,CACvD,KAAM,CAACC,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAACmd,EAAeC,CAAgB,EAAIpd,EAAAA,SAAS,CAAC,EAEpD,aACGwc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EAAAA,SACnC,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAC/S,EAAAA,IAAA,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,gHACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CAAa,UAAU,qEAAqE,SAE7F,uBAAA,EACCrc,EAAAA,IAAA,MAAA,CAAI,UAAU,iCACZ,SAAC,CAAA,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGrE,IACrBlK,EAAA,IAAC,SAAA,CAEC,aAAc,IAAMgd,EAAiB9S,EAAQ,CAAC,EAC9C,aAAc,IAAM8S,EAAiB,CAAC,EACtC,QAAS,IAAM,CACbF,EAAU5S,EAAQ,CAAC,EACnB0S,EAAO1S,EAAQ,CAAC,EACRyR,EAAA,CACV,EACA,UAAU,qBAEV,SAAA3b,EAAA,IAAC,MAAA,CACC,UAAW,6BACTkK,EAAQ,IAAM6S,GAAiBF,GAAU,iBAAmB,kCAC9D,GACA,KAAK,eACL,QAAQ,YAER,SAAC7c,EAAAA,IAAA,OAAK,CAAA,EAAE,8FAA+F,CAAA,CAAA,CAAA,CACzG,EAlBKkK,CAAA,CAoBR,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,EAkDA,SAAwB+S,GAAiB,CAAE,OAAAvB,EAAQ,QAAAC,GAAW,CACtD,KAAA,CAAE,QAAAuB,CAAQ,EAAI5S,GAAU,EACxB,CAAC6S,EAAgBC,CAAiB,EAAIxd,EAAAA,SAAS,IAAI,EACnD,CAACyd,EAAsBC,CAAuB,EAAI1d,EAAAA,SAAS,IAAI,EAC/D,CAACiV,EAAU0I,CAAW,EAAI3d,WAAS,CACvC,KAAM,GACN,OAAQ,GACR,YAAa,GACb,YAAa,GACb,KAAM,IAAA,CACP,EACK,CAAC4d,EAAaC,CAAc,EAAI7d,EAAAA,SAAS,IAAI,EAC7C,CAAE,cAAAoZ,CAAc,EAAIE,GAAe,EACnC,CAACwE,EAAmBC,CAAoB,EAAI/d,EAAAA,SAAS,EAAK,EAC1D,CAACge,EAAcC,CAAe,EAAIje,EAAAA,SAAS,IAAI,EAC/C,CAACke,EAAeC,CAAgB,EAAIne,EAAAA,SAAS,IAAI,EACjD,CAACoe,EAAcC,CAAe,EAAIre,EAAAA,SAAS,EAAK,EAChD,CAACse,EAAiBC,CAAkB,EAAIve,EAAAA,SAAS,EAAK,EACtD,CAACwe,EAAYC,CAAa,EAAIze,WAAS,CAC3C,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,EAEDE,EAAAA,UAAU,IAAM,EACK,SAAY,CAC7B,GAAI,OAAO,SAAU,CACb,MAAAsL,EAAU,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACrDgS,EAAA,SAAShS,EAAS,EAAE,CAAC,CAAA,CAE3C,GACW,EAEX,OAAO,UAAU,GAAG,eAAiBA,GAAY,CAC7BgS,EAAA,SAAShS,EAAS,EAAE,CAAC,CAAA,CACxC,CACH,EAAG,EAAE,EAEC,MAAAkT,EAAgB9W,GAAM,CACd+V,EAAA,CAAE,GAAG1I,EAAU,CAACrN,EAAE,OAAO,IAAI,EAAGA,EAAE,OAAO,MAAO,CAC9D,EAEM+W,EAAoB/W,GAAM,CAC9B,MAAMkN,EAAOlN,EAAE,OAAO,MAAM,CAAC,EACzBkN,IACF6I,EAAY,CAAE,GAAG1I,EAAU,KAAMH,EAAM,EACxB+I,EAAA,IAAI,gBAAgB/I,CAAI,CAAC,EAE5C,EAEM8J,EAAoB,IACjBlD,GAAkB6B,CAAc,EAGnCsB,EAAS,IAAM,CACb,MAAAC,EAAMnD,GAAW4B,CAAc,EAC/BwB,EAAWnD,GAAmB2B,CAAc,GAAK,MAChD,MAAA,GAAGuB,CAAG,IAAIC,CAAQ,EAC3B,EAEMC,EAAgB,MAAO9C,EAAiB+C,EAAWC,IAAa,CAChE,GAAA,CACI,MAAAC,EAAgB3T,GAAY,CAChC,OAAQA,EAAS,CACf,IAAK,KACI,MAAA,UACT,IAAK,UACI,MAAA,UACT,IAAK,KACI,MAAA,mBACT,IAAK,MACI,MAAA,mBACT,IAAK,YACI,MAAA,aACT,IAAK,OACI,MAAA,gBACT,QACS,MAAA,SAAA,CAEb,EAGI0Q,GACFwB,EAAwBxB,CAAe,EAIrC,GAAA,CACI,MAAA1Q,EAAU,MAAM,WAAW,EAAE,KAAK4T,GAAWA,EAAQ,OAAO,EAC5DtI,EAAa,CACjB,QAASoF,EACT,KAAMjH,EAAS,KACf,OAAQA,EAAS,OACjB,SAAU,GACV,YAAaA,EAAS,YACtB,KAAMiK,GAAU,KAChB,SAAUA,GAAU,SACpB,UAAW,KAAK,IAAI,EACpB,QAAA1T,EACA,UAAW2T,EAAa3T,CAAO,EAC/B,KAAM,OACR,EACA,MAAM4N,EAActC,CAAU,QACvB9T,EAAO,CACN,QAAA,KAAK,2BAA4BA,CAAK,CAAA,CAKhDib,EAAgB,WAAW,EAC3BE,EAAiB,IAAI,QACdnb,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9Cmb,EAAiBnb,EAAM,OAAO,CAAA,CAElC,EAEMqc,EAAc,MAAOzX,GAAM,CAG/B,GAFAA,EAAE,eAAe,EAEb,CAAC0V,EAAS,CACZ9Z,GAAM,MAAM,kCAAkC,EAC9C,MAAA,CAGFua,EAAqB,EAAI,EACzBE,EAAgB,WAAW,EAC3BE,EAAiB,IAAI,EAEjB,GAAA,CACF,IAAIe,EAAW,CAAE,QAAS,GAAI,QAAS,EAAG,EAC1C,GAAIjK,EAAS,KAAM,CACjBgJ,EAAgB,WAAW,EACvB,GAAA,CACSiB,EAAA,MAAMlK,GAAgBC,EAAS,IAAI,QACvCqK,GAAa,CACpBrB,EAAgB,OAAO,EACNE,EAAA,uBAAuBmB,GAAY,OAAO,EAAE,EAC7D,MAAA,CACF,KACK,CACLrB,EAAgB,OAAO,EACvBE,EAAiB,sBAAsB,EACvC,MAAA,CAII,MAAAoB,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAClCC,EAAiBb,EAAkB,EAEzC,GAAI,CAACa,EAAgB,CACnBxB,EAAgB,OAAO,EACvBE,EAAiB,4CAA4C,EAC7D,MAAA,CAGF,MAAMuB,EAAU,IAAI5T,EAAgB2T,EAAgBE,GAAgB,IAAKJ,CAAM,EAG3E,IAAAT,EACAvB,IAAmB9B,GAAU,eAC/BqD,EAAMc,GAAkBjE,GAAW4B,CAAc,CAAC,EAClD/Z,GAAM,QAAQ,iDAAiD,GACtD+Z,IAAmB9B,GAAU,YAChCqD,EAAAc,GAAkB,MAAM,EAC9Bpc,GAAM,QAAQ,oEAAoE,GAElFsb,EAAMc,GAAkBjE,GAAW4B,CAAc,GAAG,YAAc,MAAM,EAG1EU,EAAgB,UAAU,EAGpB,MAAA4B,EAActC,IAAmB9B,GAAU,cAAgB,CAC/D,SAAU,GAAA,EACR,CACF,SAAU,GACZ,EAcMqE,EAAU,MAZL,MAAMJ,EAAQ,YACvBzK,EAAS,KACTA,EAAS,OACT,GACA3I,GAAkB2I,EAAS,YAAa,EAAE,EAC1CiK,EAAS,QACT,CACE,MAAOJ,EACP,GAAGe,CAAA,CAEP,GAEyB,KAAK,EAGxBE,EAAoBD,EAAQ,KAAK,KAAYE,IAAA,CAEjD,GAAIA,GAAI,QAAQ,YAAkB,IAAAP,EAAe,cACxC,MAAA,GAGL,GAAA,CAEF,MAAMQ,GAAiBC,GACrB,uEACF,EAGA,OAAOF,GAAI,OAAO,CAAC,EAAE,YAAY,IAAMC,GAAe,YAAY,QAC3DrY,GAAG,CACF,eAAA,MAAM,kCAAmCA,EAAC,EAC3C,EAAA,CACT,CACD,EAGG,IAAAqE,EACJ,GAAK8T,EAuBY9T,EAJGyT,EAAQ,UAAU,SAAS,CAC3C,OAAQK,EAAkB,OAC1B,KAAMA,EAAkB,IAAA,CACzB,EACwB,KAAK,CAAC,MAvBT,CAUtB,MAAMI,GARSL,EAAQ,KAAK,IAAWE,GAAA,CACjC,GAAA,CACK,OAAAN,EAAQ,UAAU,SAASM,CAAG,OAC3B,CACH,OAAA,IAAA,CACT,CACD,EAAE,OAAO,OAAO,EAES,KAAczF,GAAAA,EAAM,OAAS,cAAc,EACrE,GAAI4F,GACalU,EAAAkU,GAAW,KAAK,CAAC,MAExB,eAAA,MAAM,kBAAmBL,EAAQ,IAAI,EACvC,IAAI,MAAM,oDAAoD,CACtE,CAWF,GAAI7T,EACFyR,EAAwBzR,CAAY,EACpCgS,EAAgB,WAAW,MAErB,OAAA,IAAI,MAAM,8CAA8C,EAIhE,MAAMmC,GAAY,CAChB,KAAMnL,EAAS,KACf,OAAQA,EAAS,OACjB,SAAU,GACV,OAAQ3I,GAAkB2I,EAAS,YAAa,EAAE,EAClD,KAAMiK,EAAS,OACjB,EAEM,MAAAF,EAAc/S,EAAcmU,GAAWlB,CAAQ,EAGrDjB,EAAgB,WAAW,EAC3BI,EAAgB,EAAI,EAGpB,WAAW,IAAM,CACfN,EAAqB,EAAK,EAC1BE,EAAgB,IAAI,EACpBE,EAAiB,IAAI,EAGrB,WAAW,IAAM,CACfI,EAAmB,EAAI,GACtB,GAAI,EAGP,WAAW,IAAM,CACfF,EAAgB,EAAK,GACpB,GAAK,GACP,GAAI,EAECtC,EAAA,EACI4B,EAAA,CACV,KAAM,GACN,OAAQ,GACR,YAAa,GACb,YAAa,GACb,KAAM,IAAA,CACP,EACDE,EAAe,IAAI,QAEZ7a,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5Cib,EAAgB,OAAO,EACvBE,EACEnb,EAAM,QAAQ,SAAS,OAAO,EAC1B,uCACA,2BAA2BA,EAAM,OAAO,EAC9C,CAAA,CAEJ,EAGA9C,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMmgB,EAAe,IAAM,CACX5B,EAAA,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAClB,CACH,EAES,cAAA,iBAAiB,SAAU4B,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAChE,EAAG,EAAE,EAIDzb,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAAvO,OAAC6X,GAAO,CAAA,KAAMX,EAAQ,QAAAC,EAAkB,UAAU,oBAChD,SAAA,OAAC,MAAI,CAAA,UAAU,qCAAqC,cAAY,OAAO,QAEtE,MAAA,CAAI,UAAU,8DACb,eAACU,GAAO,MAAP,CAAa,UAAU,gGACtB,SAAC7X,EAAA,KAAA,MAAA,CAAI,UAAU,WAEf,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAoD,EAClEA,EAAAA,IAAA,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,EACnEA,EAAAA,IAAA,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAuD,EACrEA,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wDAAwD,EACtEA,EAAAA,IAAA,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGGA,EAAAA,IAAA,MAAI,CAAA,UAAU,sFAAsF,EACpGA,EAAAA,IAAA,MAAI,CAAA,UAAU,uFAAuF,EACrGA,EAAAA,IAAA,MAAI,CAAA,UAAU,yFAAyF,EACvGA,EAAAA,IAAA,MAAI,CAAA,UAAU,0FAA0F,EAGxGA,EAAAA,IAAA,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,EAGChK,EAAAA,KAAA,MAAI,CAAA,UAAU,+CACjB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,EAAA,IAACqc,GAAO,MAAP,CAAa,UAAU,sDAAsD,SAE9E,mBAAA,EACKrc,EAAAA,IAAA,SAAO,CAAA,QAAS2b,EAAS,UAAU,oCAClC,SAAC3b,EAAA,IAAAkgB,GAAA,CAAI,KAAM,EAAI,CAAA,CACrB,CAAA,CAAA,EACF,EAEC1b,EAAAA,KAAA,IAAE,CAAA,UAAU,gDAAgD,SAAA,CAAA,+BAC1Bia,KAAY,KAAA,EAC/C,EAEMvB,EAcL1Y,EAAA,KAAA,OAAA,CAAK,SAAUya,EAAa,UAAU,YAErC,SAAA,CAAAjf,EAAAA,IAAC,OAAI,UAAU,2BACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAW,qDAAqDwd,EAAc,mBAAqB,iBAAiB,oDACtH,SACCA,EAAAxd,EAAAA,IAAC,MAAI,CAAA,IAAKwd,EAAa,IAAI,aAAa,UAAU,4BAA6B,CAAA,EAE9Exd,EAAAA,IAAAmgB,IAAW,KAAM,GAAI,UAAU,eAAA,CAAgB,EAEpD,EACAngB,EAAA,IAAC,QAAA,CACC,KAAK,OACL,SAAUue,EACV,OAAO,UACP,UAAU,yDAAA,CAAA,CACZ,CAAA,CACF,CAAA,CACF,SAGC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,sDAAsD,SAAU,aAAA,EACjFve,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,OACL,MAAO6U,EAAS,KAChB,SAAUyJ,EACV,UAAU;AAAA;AAAA;AAAA;AAAA,0GAKV,YAAY,WACZ,SAAQ,GACR,aAAa,KAAA,CAAA,CACf,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,sDAAsD,SAAY,eAAA,EACnFte,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,SACL,MAAO6U,EAAS,OAChB,SAAUyJ,EACV,UAAU;AAAA;AAAA;AAAA;AAAA,0GAKV,YAAY,MACZ,SAAQ,GACR,aAAa,KAAA,CAAA,CACf,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,sDAAsD,SAAQ,WAAA,EAC/Ete,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,WACL,MAAM,KACN,SAAQ,GACR,UAAU,4JAAA,CACZ,QACC,MAAA,CAAI,UAAU,6BAA6B,SAE5C,gDAAA,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,sDAAsD,SAAY,eAAA,EACnFA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,cACL,MAAO6U,EAAS,YAChB,SAAUyJ,EACV,UAAU,0OACV,YAAY,UACZ,SAAQ,EAAA,CAAA,CACV,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,sDAAsD,SAAW,cAAA,EAClFte,EAAA,IAAC,WAAA,CACC,KAAK,cACL,MAAO6U,EAAS,YAChB,SAAUyJ,EACV,UAAU,sPACV,YAAY,yBACZ,KAAK,GAAA,CAAA,CACP,EACF,EAEC9Z,EAAAA,KAAA,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS2b,EACT,UAAU,2GACX,SAAA,QAAA,CAED,EACA3b,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,oGACJ,SAAU,CAACkd,EAClB,SAAA,cAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,EA7HO1Y,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAACogB,IAAS,KAAM,GAAI,UAAU,0CAAA,CAA2C,EAC3E,QACC,KAAA,CAAG,UAAU,2DAA2D,SAEzE,sBAAA,QACC,IAAA,CAAE,UAAU,wCAAwC,SAErD,+CAAA,QACC,aAAW,CAAA,CAAA,CAAA,EACd,CAkHN,CAEE,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAAA,EACF,EAGApgB,EAAA,IAACyb,GAAA,CACC,OAAQiC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1BE,EAAgB,IAAI,CACtB,EACA,YAAaD,EACb,UAAW/I,EAAS,KACpB,MAAOiJ,EACP,gBAAiBT,CAAA,CACnB,EAGArd,EAAA,IAAC2c,GAAA,CACC,OAAQuB,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,OAAStB,GAAW,CACV,QAAA,IAAI,6BAA8BA,CAAM,CAAA,CAElD,CACF,EAGCmB,GACChe,EAAA,IAACqgB,GAAA,CACC,MAAOjC,EAAW,MAClB,OAAQA,EAAW,OACnB,eAAgB,IAChB,QAAS,GACT,QAAS,GACT,iBAAkB,GAClB,iBAAkB,GAClB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,SAAS,EAC9D,MAAO,CACL,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,OACR,OAAQ,MACR,cAAe,MAAA,CACjB,CAAA,CACF,EAEJ,CAEJ,CC37BO,MAAMkC,GAAkB,CAC3B,SAAU,CACN,KAAM,6CACN,KAAM,6CACN,KAAM,4CACV,EACA,IAAK,CACD,KAAM,6CACN,KAAM,6CACN,OAAQ,4CACZ,EACA,KAAM,CACF,KAAM,6CACN,KAAM,6CACN,KAAM,4CACV,EACA,WAAY,CACR,KAAM,OACN,KAAM,OACN,MAAO,MAAgB,CAE/B,EChFaC,GAAgB,CAC3B,CACE,OAAU,CACR,CACE,WAAc,CACZ,CACE,aAAgB,SAChB,KAAQ,iBACR,KAAQ,QACT,EACD,CACE,aAAgB,SAChB,KAAQ,OACR,KAAQ,QACT,EACD,CACE,aAAgB,SAChB,KAAQ,SACR,KAAQ,QACT,EACD,CACE,aAAgB,SAChB,KAAQ,cACR,KAAQ,QACT,EACD,CACE,aAAgB,UAChB,KAAQ,YACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,YACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,eACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,cACR,KAAQ,SACT,EACD,CACE,aAAgB,UAChB,KAAQ,cACR,KAAQ,SACT,EACD,CACE,aAAgB,OAChB,KAAQ,eACR,KAAQ,MACT,EACD,CACE,aAAgB,UAChB,KAAQ,eACR,KAAQ,SACT,EACD,CACE,aAAgB,OAChB,KAAQ,kBACR,KAAQ,MACT,EACD,CACE,aAAgB,UAChB,KAAQ,kBACR,KAAQ,SACT,EACD,CACE,aAAgB,SAChB,KAAQ,sBACR,KAAQ,QACpB,CACS,EACD,aAAgB,8CAChB,KAAQ,SACR,KAAQ,OAChB,CACK,EACD,KAAQ,sBACR,QAAW,CAAE,EACb,gBAAmB,UACnB,KAAQ,UACT,EACD,CACE,UAAa,GACb,OAAU,CACR,CACE,QAAW,GACX,aAAgB,UAChB,KAAQ,UACR,KAAQ,SACT,EACD,CACE,QAAW,GACX,aAAgB,UAChB,KAAQ,aACR,KAAQ,SACT,EACD,CACE,QAAW,GACX,aAAgB,SAChB,KAAQ,iBACR,KAAQ,QAChB,CACK,EACD,KAAQ,oBACR,KAAQ,OACZ,CACA,EC3GMC,GAAc,CAAC,QAAS,WAAY,QAAS,QAAS,SAAU,OAAQ,SAAS,EAEjE,eAAAC,GACpB5L,EACA6L,EACAC,EAC8E,CAC1E,GAAA,CAEI,MAAAC,EAAe,MAAMtH,GAAiBoH,CAAW,EACjDG,EAAenH,GAAWkH,CAAY,EAGtCE,EAAajM,EAAS,YAAY,IAAKkM,GAAc,CACzD,MAAMhhB,EAAQghB,EAAK,OAAO,SAAc,GAAA,GAClCC,EAAe,OAAOjhB,CAAK,EAC3BkhB,EAAY,CAAC,MAAMD,CAAY,GAAKjhB,IAAU,GAC9CmhB,EAAaH,EAAK,YAAY,YAAY,EAGzC,MAAA,CACL,WAAYA,EAAK,WACjB,MAAOE,EAAYD,EAAejhB,EAClC,aAAckhB,GAAaT,GAAY,SAASU,CAAU,EAAI,SAAW,MAC3E,CAAA,CACD,EAAE,OAAeH,GAAAA,EAAK,YAAcA,EAAK,QAAU,EAAE,GAAK,CAAC,EAGtDvH,EAAwB,CAC5B,KAAM3E,EAAS,MAAQ8L,EAAU,KAAKA,CAAO,GAAK,IAClD,YAAa9L,EAAS,aAAe,GACrC,MAAO+L,EACP,aAAc/L,EAAS,SAAW,GAClC,WAAAiM,EACA,iBAAkBjM,EAAS,kBAAoB,QACjD,EAKO,MAAA,CACL,YAHkB,MAAM0E,GAAqBC,CAAQ,EAIrD,aAAAqH,EACA,aAAAD,CACF,OACc,CACR,MAAA,IAAI,MAAM,uCAAuC,CAAA,CAE3D,CC5BA,MAAMvF,GAAY,CAChB,QAAS,SACT,QAAS,IACT,iBAAkB,IAClB,SAAU,KACV,WAAY,WACZ,cAAe,KACjB,EAYM8F,GAAwB,CAC5B,CAAC9F,GAAU,OAAO,EAAG,6CACrB,CAACA,GAAU,OAAO,EAAG,6CACrB,CAACA,GAAU,gBAAgB,EAAG,6CAC9B,CAACA,GAAU,QAAQ,EAAG,6CACtB,CAACA,GAAU,UAAU,EAAG,6CACxB,CAACA,GAAU,aAAa,EAAG,4CAC7B,EAWMG,GAAqB,CACzB,CAACH,GAAU,OAAO,EAAG,MACrB,CAACA,GAAU,OAAO,EAAG,MACrB,CAACA,GAAU,gBAAgB,EAAG,MAC9B,CAACA,GAAU,QAAQ,EAAG,MACtB,CAACA,GAAU,UAAU,EAAG,OACxB,CAACA,GAAU,aAAa,EAAG,KAC7B,EAGMF,GAAQ,SAAS,cAAc,OAAO,EAC5CA,GAAM,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0CpB,SAAS,KAAK,YAAYA,EAAK,EAG/B,MAAMC,GAAQ,CACZ,UAAW,IACRpb,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAAO,MAAO,CAAE,UAAW,2BAC3E,EAAA,SAACwE,EAAAA,KAAA,KAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGxE,EAAAA,IAAA,OAAK,CAAA,EAAE,6BAA6B,cAAc,QAAQ,MAAO,CAAE,UAAW,kCAAmC,CAAA,CAAG,EACpHA,EAAAA,IAAA,OAAA,CAAK,EAAE,sEAAsE,cAAc,QAAQ,MAAO,CAAE,UAAW,mCAAoC,eAAgB,MAAA,CAAU,CAAA,CAAA,CAAA,CACxL,CAAA,CACF,EAEF,kBAAmB,IAChBA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGA,EAAAA,IAAA,OAAA,CAAK,EAAE,4BAA4B,cAAc,QAAQ,eAAe,QAAQ,MAAO,CAAE,UAAW,kCAAoC,EACxIA,EAAAA,IAAA,OAAA,CAAK,EAAE,UAAU,cAAc,QAAQ,MAAO,CAAE,UAAW,iCAAkC,eAAgB,MAAA,CAAU,CAAA,CAAA,CAAA,CAC1H,CAAA,CACF,EAEF,mBAAoB,IACjBA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGA,EAAAA,IAAA,OAAK,CAAA,EAAE,0BAA0B,cAAc,QAAQ,MAAO,CAAE,UAAW,8BAA+B,CAAA,CAAG,EAC7GA,EAAAA,IAAA,OAAA,CAAK,EAAE,WAAW,cAAc,QAAQ,MAAO,CAAE,UAAW,+BAAgC,eAAgB,QAAU,EACtHA,EAAAA,IAAA,OAAA,CAAK,EAAE,uBAAuB,cAAc,QAAQ,MAAO,CAAE,UAAW,+BAAgC,eAAgB,MAAQ,EAChIA,EAAAA,IAAA,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,MAAO,CAAE,UAAW,2BAAA,CAA+B,CAAA,CAAA,CAAA,CACnF,CAAA,CACF,EAEF,iBAAkB,IACfA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGA,EAAAA,IAAA,OAAK,CAAA,EAAE,UAAU,cAAc,QAAQ,MAAO,CAAE,UAAW,8BAA+B,CAAA,CAAG,EAC7FA,EAAAA,IAAA,OAAA,CAAK,EAAE,UAAU,cAAc,QAAQ,MAAO,CAAE,UAAW,+BAAgC,eAAgB,QAAU,QACrH,OAAA,CAAK,EAAE,6BAA6B,cAAc,QAAQ,eAAe,QAAQ,MAAO,CAAE,UAAW,iCAAkC,eAAgB,MAAA,CAAU,CAAA,CAAA,CAAA,CACpK,CAAA,CACF,EAEF,UAAW,IACRA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,oCAAoC,QAChI,OAAK,CAAA,EAAE,gBAAgB,cAAc,QAAQ,eAAe,QAAQ,UAAU,2CAA2C,MAAO,CAAE,gBAAiB,GAAI,iBAAkB,GAAM,CAAA,CAAA,CAAA,CAClL,CAAA,CACF,EAEF,MAAO,IACJA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAE,CAAA,YAAa,IAAK,OAAO,eAAe,MAAO,CAAE,UAAW,wBAAyB,EACtF,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,eAAe,QAC3G,OAAK,CAAA,EAAE,UAAU,cAAc,QAAQ,UAAU,eAAe,QAChE,OAAK,CAAA,EAAE,aAAa,cAAc,QAAQ,UAAU,cAAe,CAAA,CAAA,CAAA,CACtE,CACF,CAAA,CAEJ,EAGMyb,GAAgB,CAAC,CAAE,OAAAC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,eAAAwF,EAAgB,MAAAxe,KAAY,CACjF,MAAMmZ,EAAQ,CACZ,CAAE,IAAK,YAAa,MAAO,wBAAyB,KAAMX,GAAM,SAAU,EAC1E,CAAE,IAAK,YAAa,MAAO,qBAAsB,KAAMA,GAAM,iBAAkB,EAC/E,CAAE,IAAK,WAAY,MAAO,sBAAuB,KAAMA,GAAM,kBAAmB,EAChF,CAAE,IAAK,YAAa,MAAO,oBAAqB,KAAMA,GAAM,gBAAiB,EAC7E,CAAE,IAAK,YAAa,MAAO,kCAAmC,KAAMA,GAAM,SAAU,CACtF,EAEMY,EAAmBD,EAAM,UAAkBE,GAAAA,EAAK,MAAQL,CAAW,EACnEyF,EAAU,EAAQze,EAGlBsZ,EAAsBtZ,GACtBA,GAAO,SAAS,sBAAsB,EACjC,8CAELA,GAAO,SAAS,oBAAoB,EAC/B,kDAEFA,GAAO,QAAQ,kCAAmC,EAAE,GAAK,oBAG3D,OAAA0e,GAAA,mBACJlF,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EAAAA,SACnC,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,0BAA0B,QAAAV,EACnD,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAC/S,EAAAA,IAAA,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,gHACtB,SAAA,QAACA,GAAO,MAAP,CAAa,UAAU,yDACrB,SAAA,CAAAgF,EAAU,4BAA8B,0BACxCD,GAAkB,CAACC,GACjBrhB,MAAA,MAAI,CAAA,UAAU,8DACZ,SACHohB,CAAA,CAAA,CAAA,EAEJ,EACAphB,MAAC,OAAI,UAAU,YACZ,WAAM,IAAI,CAACic,EAAM/R,IAAU,CAC1B,MAAMoS,EAAOL,EAAK,KACZnY,EAAWoG,IAAU8R,EACrBO,EAAc,CAAC8E,GAAWnX,EAAQ8R,EAClCQ,EAAc6E,GAAWnX,IAAU8R,EAGvC,OAAAxX,EAAA,KAAC,MAAA,CAEC,UAAWiY,GACT,2DACA,CACE,iCAAkC3Y,GAAY,CAAC0Y,EAC/C,iBAAkBD,EAClB,6BAA8BC,EAC9B,gBAAiB,CAAC1Y,GAAY,CAACyY,GAAe,CAACC,CAAA,CAEnD,EAEA,SAAA,CAAAxc,EAAA,IAACsc,EAAK,EAAA,EACL9X,EAAAA,KAAA,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CAA6C,SAAAic,EAAK,MAAM,EACvEnY,GAAYmY,EAAK,MAAQ,YAAc,CAACoF,GACvC7c,EAAA,KAAC,IAAE,CAAA,UAAU,gDAAgD,SAAA,CAAA,uBACtC4c,CAAA,CACvB,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,EAnBKnF,EAAK,GAoBZ,CAEH,CAAA,EACH,EACCoF,GACE7c,EAAA,KAAA,MAAI,CAAA,UAAU,6DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACZ5W,EAAAA,KAAA,MAAI,CAAA,UAAU,SACb,SAAA,OAAC,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,QAC7D,IAAE,CAAA,UAAU,4BACV,SAAA0X,EAAmBtZ,CAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACC5C,EAAAA,IAAA,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,iLACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAEDC,IAAgB,aACf5b,EAAA,IAAC,MAAI,CAAA,UAAU,mBACb,SAACA,EAAAA,IAAA,IAAE,CAAA,UAAU,6BAA6B,SAAA,kCAAA,CAAgC,CAC5E,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EACA,SAAS,IACX,CACF,EAGM2c,GAAkB,CAAC,CAAE,OAAAjB,EAAQ,QAAAC,EAAS,OAAAiB,KAAa,CACvD,KAAM,CAACC,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAACmd,EAAeC,CAAgB,EAAIpd,EAAAA,SAAS,CAAC,EAEpD,aACGwc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EAAAA,SACnC,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAC/S,EAAAA,IAAA,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,gHACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CAAa,UAAU,qEAAqE,SAE7F,uBAAA,EACCrc,EAAAA,IAAA,MAAA,CAAI,UAAU,iCACZ,SAAC,CAAA,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGrE,IACrBlK,EAAA,IAAC,SAAA,CAEC,aAAc,IAAMgd,EAAiB9S,EAAQ,CAAC,EAC9C,aAAc,IAAM8S,EAAiB,CAAC,EACtC,QAAS,IAAM,CACbF,EAAU5S,EAAQ,CAAC,EACnB0S,EAAO1S,EAAQ,CAAC,EACRyR,EAAA,CACV,EACA,UAAU,qBAEV,SAAA3b,EAAA,IAAC,MAAA,CACC,UAAW,6BACTkK,EAAQ,IAAM6S,GAAiBF,GAAU,iBAAmB,kCAC9D,GACA,KAAK,eACL,QAAQ,YAER,SAAC7c,EAAAA,IAAA,OAAK,CAAA,EAAE,8FAA+F,CAAA,CAAA,CAAA,CACzG,EAlBKkK,CAAA,CAoBR,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,EAEMqX,GAAQ,CACZ,CAAE,GAAI,OAAQ,MAAO,iBAAkB,EACvC,CAAE,GAAI,SAAU,MAAO,YAAa,EACpC,CAAE,GAAI,UAAW,MAAO,SAAU,EAClC,CAAE,GAAI,aAAc,MAAO,YAAa,EACxC,CAAE,GAAI,UAAW,MAAO,SAAU,CACpC,EAEMC,GAAgB,CACpB,IAAK,QACL,SAAU,YACV,EAAG,YACH,KAAM,YACN,WAAY,WACZ,MAAO,UACT,EA8BMC,GAAe,CAAC,CAAE,OAAA/F,EAAQ,QAAAC,EAAS,UAAA+F,EAAW,gBAAAC,EAAiB,gBAAAC,KAAsB,CACrF,GAAA,CAAClG,EAAe,OAAA,KAEd,MAAAmG,EAAoBra,GAAM,CAC9BA,EAAE,gBAAgB,CACpB,EAEMsa,EAAwB,CAAC5X,EAAO1C,IAAM,CAC1CA,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAEZ,MAAAua,EAAWva,EAAE,OAAO,MACpBwa,EAAmB,CAAC,GAAGN,CAAS,EAGhC3a,EAAQgb,IAAa,GAAK,GAAK,SAASA,CAAQ,GAAK,GAEvD,OAAOC,EAAiB9X,CAAK,GAAM,SACrC8X,EAAiB9X,CAAK,EAAI,CACxB,QAAS8X,EAAiB9X,CAAK,EAC/B,QAASnD,CACX,EAEAib,EAAiB9X,CAAK,EAAI,CACxB,GAAG8X,EAAiB9X,CAAK,EACzB,QAASnD,CACX,EAGc6a,EAAA,CAAE,mBAAoBI,EAAkB,CAC1D,EAEO,OAAAV,GAAA,aACL9c,EAAA,KAAC,MAAA,CACC,UAAU,wBACV,QAASqd,EAET,SAAA,CAAC7hB,EAAAA,IAAA,MAAA,CAAI,UAAU,4BAA4B,EAE1CA,EAAAA,IAAA,MAAI,CAAA,UAAU,qDACb,SAAAwE,EAAA,KAAC,MAAA,CACC,UAAU,gFACV,QAASqd,EAGT,SAAA,CAACrd,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAoD,EAClEA,EAAAA,IAAA,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,EACnEA,EAAAA,IAAA,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAuD,EACrEA,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wDAAwD,EACtEA,EAAAA,IAAA,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAUwH,GAAM,CACdA,EAAE,gBAAgB,EACVmU,EAAA,CACV,EACA,UAAU,gMAEV,eAACuE,GAAA,CAAI,KAAM,GAAI,UAAU,gBAAiB,CAAA,CAAA,CAC5C,EAGC1b,EAAAA,KAAA,MAAI,CAAA,UAAU,OACb,SAAA,OAAC,KAAA,CAAG,UAAU,2DAA2D,SAEzE,sBAAA,QAEC,MAAA,CAAI,UAAU,0IACZ,WAAU,OAAS,QACjB,MAAA,CAAI,UAAU,yBACZ,SAAAkd,EAAU,IAAI,CAACO,EAAM/X,IACpB1F,EAAA,KAAC,MAAA,CAEC,UAAU,4IAEV,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,UAAU,4DACb,SAAA,OAAOiiB,GAAS,SAAWA,EAAK,QAAUA,CAAA,CAC7C,EACCzd,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,OAAC,OAAA,CAAK,UAAU,2CAA2C,SAAW,cAAA,EACtExE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,UAAU,UACV,QAAQ,SACR,MAAO,OAAOiiB,GAAS,SAAYA,EAAK,UAAY,GAAK,GAAKA,EAAK,QAAW,EAC9E,SAAWza,GAAMsa,EAAsB5X,EAAO1C,CAAC,EAC/C,OAASA,GAAM,CACP,MAAAzH,EAAQyH,EAAE,OAAO,MACjBwa,EAAmB,CAAC,GAAGN,CAAS,EAChCQ,EAAaniB,IAAU,IAAM,SAASA,CAAK,EAAI,EAAI,EAAI,SAASA,CAAK,EAEvE,OAAOiiB,EAAiB9X,CAAK,GAAM,SACrC8X,EAAiB9X,CAAK,EAAI,CACxB,QAAS8X,EAAiB9X,CAAK,EAC/B,QAASgY,CACX,EAEAF,EAAiB9X,CAAK,EAAI,CACxB,GAAG8X,EAAiB9X,CAAK,EACzB,QAASgY,CACX,EAGcN,EAAA,CAAE,mBAAoBI,EAAkB,CAC1D,EACA,UAAYxa,GAAM,CAChBA,EAAE,gBAAgB,EAEd,EAAAA,EAAE,MAAQ,aAAeA,EAAE,MAAQ,UACnCA,EAAE,MAAQ,aAAeA,EAAE,MAAQ,cACnCA,EAAE,MAAQ,QAIV,CAAC,QAAQ,KAAKA,EAAE,GAAG,GAAK,CAACA,EAAE,SAAW,CAACA,EAAE,SAC3CA,EAAE,eAAe,CAErB,EACA,UAAU,kNACV,QAAUA,GAAM,CACdA,EAAE,gBAAgB,EAClBA,EAAE,OAAO,OAAO,CAAA,CAClB,CAAA,CACF,EACF,EACAxH,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAUwH,GAAM,CACdA,EAAE,gBAAgB,EAClBma,EAAgBzX,CAAK,CACvB,EACA,UAAU,6FAEV,SAAClK,EAAAA,IAAAmiB,GAAQ,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACrB,CACF,CAAA,CAAA,CAAA,EAhEKjY,CAAA,CAkER,CACH,CAAA,EAEClK,EAAA,IAAA,OAAI,UAAU,oDAAoD,kCAEnE,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,EACA,SAAS,IACX,CACF,EAiBA,SAAwBoiB,GAAe,CAAE,OAAA1G,EAAQ,QAAAC,GAAW,CAC1D,MAAM0G,EAAWC,GAAY,EACvB,CAAE,QAASpF,CAAQ,EAAIzS,GAAW,EAClC,CAAE,iBAAA8X,CAAiB,EAAIC,GAAgB,EAC3B7X,GAAW,EAC7B,KAAM,CAACiR,EAAa6G,CAAc,EAAI7iB,EAAAA,SAAS,MAAM,EAC/C,CAAC8iB,EAAYC,CAAa,EAAI/iB,EAAAA,SAAS,EAAE,EACzC,CAACud,EAAgBC,CAAiB,EAAIxd,EAAAA,SAAS,IAAI,EACnD,CAAC8d,EAAmBC,CAAoB,EAAI/d,EAAAA,SAAS,EAAK,EAC1D,CAACge,EAAcC,CAAe,EAAIje,EAAAA,SAAS,IAAI,EAC/C,CAACke,EAAeC,CAAgB,EAAIne,EAAAA,SAAS,IAAI,EACjD,CAACoe,EAAcC,CAAe,EAAIre,EAAAA,SAAS,EAAK,EAChD,CAACse,EAAiBC,CAAkB,EAAIve,EAAAA,SAAS,EAAK,EACtD,CAACgjB,EAAoBC,CAAqB,EAAIjjB,EAAAA,SAAS,EAAK,EAC5D,CAACiV,EAAU0I,CAAW,EAAI3d,WAAS,CACvC,KAAM,GACN,KAAM,GACN,OAAQ,GACR,YAAa,GACb,QAAS,GACT,SAAU,GACV,QAAS,CACP,QAAS,GACT,QAAS,GACT,SAAU,GACV,IAAK,EACP,EACA,QAAS,KACT,WAAY,KACZ,YAAa,KACb,WAAY,CAAC,EACb,UAAW,GACX,UAAW,GACX,aAAc,GACd,YAAa,GACb,YAAa,GACb,aAAc,GACd,gBAAiB,GACjB,mBAAoB,CAAC,EACrB,aAAc,SACd,mBAAoB,GACpB,kBAAmB,GACnB,kBAAmB,GACnB,oBAAqB,EACrB,gBAAiB,EAAA,CAClB,EACK,CAACwe,EAAYC,CAAa,EAAIze,WAAS,CAC3C,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,EAGK,CAACwL,EAAS0X,CAAU,EAAIljB,EAAAA,SAAS,IAAI,EAG3CE,EAAAA,UAAU,MACW,SAAY,CAC7B,GAAI,OAAO,SACL,GAAA,CACI,MAAAmU,EAAK,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACvD6O,EAAA,SAAS7O,EAAI,EAAE,CAAC,QACpBrR,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,CAAA,CAGpD,GAEW,EACP,OAAO,UACF,OAAA,SAAS,GAAG,eAAiBqR,GAAO6O,EAAW,SAAS7O,EAAI,EAAE,CAAC,CAAC,EAGlE,IAAM,CACP,OAAO,UACF,OAAA,SAAS,eAAe,eAAiBA,GAAO6O,EAAW,SAAS7O,EAAI,EAAE,CAAC,CAAC,CAEvF,GACC,EAAE,EAGL,MAAM8O,EAAqB,IACrB3X,IAAY,IACP,CACL,CACE,GAAI,SACJ,KAAM,qBACN,KAAOpL,EAAAA,IAAAgjB,GAAW,CAAA,UAAU,iBAAiB,EAC7C,QAAS,GACT,OAAQ,KACV,EACA,CACE,GAAI,SACJ,KAAM,eACN,KAAOhjB,EAAAA,IAAAogB,GAAS,CAAA,UAAU,iBAAiB,EAC3C,QAAS,GACT,OAAQ,EAAA,CAEZ,EACShV,IAAY,KACd,CACL,CACE,GAAI,SACJ,KAAM,qBACN,KAAOpL,EAAAA,IAAAgjB,GAAW,CAAA,UAAU,iBAAiB,EAC7C,QAAS,GACT,OAAQ,KACV,EACA,CACE,GAAI,SACJ,KAAM,eACN,KAAOhjB,EAAAA,IAAAogB,GAAS,CAAA,UAAU,iBAAiB,EAC3C,QAAS,GACT,OAAQ,EAAA,CAEZ,EACShV,IAAY,IACd,CACL,CACE,GAAI,SACJ,KAAM,qBACN,KAAOpL,EAAAA,IAAA,MAAI,CAAA,IAAI,eAAe,IAAI,MAAM,UAAU,UAAU,EAC5D,QAAS,GACT,OAAQ,KACV,EACA,CACE,GAAI,SACJ,KAAM,eACN,KAAOA,EAAAA,IAAAogB,GAAS,CAAA,UAAU,iBAAiB,EAC3C,QAAS,GACT,OAAQ,EAAA,CAEZ,EACShV,IAAY,MACd,CACL,CACE,GAAI,SACJ,KAAM,qBACN,KAAOpL,EAAAA,IAAA,MAAI,CAAA,IAAI,aAAa,IAAI,MAAM,UAAU,UAAU,EAC1D,QAAS,GACT,OAAQ,KACV,EACA,CACE,GAAI,SACJ,KAAM,eACN,KAAOA,EAAAA,IAAAogB,GAAS,CAAA,UAAU,iBAAiB,EAC3C,QAAS,GACT,OAAQ,EAAA,CAEZ,EAIK,CACL,CACE,GAAI,SACJ,KAAM,eACN,KAAOpgB,EAAAA,IAAAogB,GAAS,CAAA,UAAU,iBAAiB,EAC3C,QAAS,GACT,OAAQ,EAAA,CAEZ,EAII6C,EAAuB,IAAM,CACjC,MAAMC,EAAkBH,EAAmB,EACrCI,EAAgBD,EAAgB,KAAUE,IAAAA,GAAE,KAAOvO,EAAS,YAAY,GAAKqO,EAAgB,CAAC,EAGlG,OAAC1e,EAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMqe,EAAsB,CAACD,CAAkB,EACxD,UAAU,gPAEV,SAAA,CAACpe,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAc2e,EAAA,KACdnjB,EAAAA,IAAA,OAAM,CAAA,SAAA6U,EAAS,eAAiB,UAAYA,EAAS,kBAClDA,EAAS,kBACTsO,EAAc,IAAK,CAAA,CAAA,EACzB,QACCE,GAAc,CAAA,UAAW,wBAAwBT,EAAqB,aAAe,EAAE,EAAI,CAAA,CAAA,CAAA,CAC9F,EAECA,GACE5iB,EAAA,IAAA,MAAI,CAAA,UAAU,6HACZ,SAAgBkjB,EAAA,IAAKpW,IACpBtI,EAAA,KAAC,SAAA,CAEC,QAAS,IAAM,CACE8e,EAAA,CACb,aAAcxW,GAAM,GACpB,mBAAoBA,GAAM,QAC1B,kBAAmBA,GAAM,MAAA,CAC1B,EACD+V,EAAsB,EAAK,CAC7B,EACA,UAAU,yGAET,SAAA,CAAM/V,GAAA,WACN,OAAM,CAAA,SAAAA,GAAM,IAAK,CAAA,CAAA,CAAA,EAZbA,GAAM,EAAA,CAcd,CACH,CAAA,CAAA,EAEJ,CAEJ,EAEMyW,EAAiB,SAAY,CAC7B,GAAA,CAEEnY,IAAAA,EAMJ,GALI,OAAO,WACTA,EAAU,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACvDoY,EAAA,SAASpY,EAAS,EAAE,GAG5B,CAACA,EACH,eAAQ,MAAM,wBAAwB,EAC/B,KAIL,GAAAoW,GAAcpW,CAAO,EACvB,OAAOoW,GAAcpW,CAAO,EAIxB,MAAAiU,EAAiB8B,GAAsB/V,CAAO,EACpD,GAAI,CAACiU,EACK,eAAA,MAAM,uCAAwCjU,CAAO,EACtD,KAIH,MAAAxD,GAAW,IAAI6b,GACnBrY,IAAYiQ,GAAU,QAAU,0BAChCjQ,IAAYiQ,GAAU,SAAW,+BACjCjQ,IAAYiQ,GAAU,iBAAmB,+BACzCjQ,IAAYiQ,GAAU,cAAgB,iCACtC,yBACF,EAUMqD,EAAM,MAPY,IAAIhT,EAC1B2T,EACA,CAAC,oDAAoD,EACrDzX,EACF,EAGkC,UAAUwD,CAAO,EAG7CsY,GAAeC,GAAmBjF,CAAG,EACrCC,GAAWnD,GAAmBpQ,CAAO,GAAK,MAEzC,MAAA,GAAGsY,EAAY,IAAI/E,EAAQ,SAC3B/b,EAAO,CACN,eAAA,MAAM,8BAA+BA,CAAK,EAC3C4e,GAAcpW,CAAO,GAAK,IAAA,CAErC,EAGAtL,EAAAA,UAAU,IAAM,EACD,SAAY,CACjB,MAAAyjB,EAAe,EAAE,KAAY7E,GAAA,CACjCnB,EAAqBjW,KAAA,CACnB,GAAGA,GACH,IAAAoX,CAAA,EACA,CAAA,CACH,CACH,GACK,CACP,EAAG,EAAE,EAEC,MAAA4E,EAAkBM,GAAY,CAClCrG,MAAqB,CAAE,GAAGjW,EAAM,GAAGsc,GAAU,CAC/C,EAEMC,EAAoBrc,GAAM,CAC9B,MAAMkN,EAAOlN,EAAE,OAAO,MAAM,CAAC,EAC7B,GAAIkN,EAAM,CAEF,MAAAoP,GAAUpP,EAAK,OAAS,YACxBqP,GAAUrP,EAAK,KAAK,WAAW,QAAQ,EAEzC,GAAA,CAACoP,IAAW,CAACC,GAAS,CACxB3gB,GAAM,MAAM,0CAA0C,EACtD,MAAA,CAIF,MAAM4gB,EAAUF,GAAU,EAAI,KAAO,KAAO,EAAI,KAAO,KACnD,GAAApP,EAAK,KAAOsP,EAAS,CACvB5gB,GAAM,MAAM,+BAA+B0gB,GAAU,MAAQ,KAAK,EAAE,EACpE,MAAA,CAGI,MAAAG,GAAM,IAAI,gBAAgBvP,CAAI,EACrB4O,EAAA,CACb,QAAS5O,EACT,WAAYuP,GACZ,YAAaH,GAAU,QAAU,OAAA,CAClC,CAAA,CAEL,EAEMI,EAAmB3Z,GAChB,sBAAsB,KAAKA,CAAO,EAqErC4Z,EAAe,SAAY,CAC3B,GAAA,CAIF,GAFA/gB,GAAM,QAAQ,gBAAgB,EAE1B,CAAC8Z,EAAS,CACZ9Z,GAAM,MAAM,kCAAkC,EAC9C,MAAA,CAIE,GAAA,CAACyR,EAAS,MAAQ,CAACA,EAAS,MAAQ,CAACA,EAAS,QAAU,CAACA,EAAS,QAAS,CAC7EzR,GAAM,MAAM,oCAAoC,EAChD,MAAA,CAIF,MAAMwE,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDjC,EAAiB,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACxEiH,GAAiB,SAASjH,EAAgB,EAAE,EAG9C,IAAAkC,GAaJ,GAZI+E,KAAmB,IACJ/E,GAAA,6CACR+E,KAAmB,IACX/E,GAAA,6CACR+E,KAAmB,KACX/E,GAAA,6CACR+E,KAAmB,WACX/E,GAAA,6CACR+E,KAAmB,QACX/E,GAAA,8CAGf,CAACA,GAAgB,CACbjc,GAAA,MAAM,uDAAuDghB,EAAc,EAAE,EACnF,MAAA,CAGFzG,EAAqB,EAAI,EACzBE,EAAgB,WAAW,EAC3BE,EAAiB,IAAI,EAEf,MAAAsG,EAAU,MAAMzc,EAAS,UAAU,EAGnC0c,GAAY,MAAMf,EAAe,EACvC,GAAI,CAACe,GAAW,CACdlhB,GAAM,MAAM,0CAA0C,EACtD,MAAA,CAGF,KAAM,CAACmhB,EAAU,EAAID,GAAU,MAAM,GAAG,EAClC5F,GAAMc,GAAkB+E,EAAU,EACxC,QAAQ,IAAI,eAAgB7F,GAAI,SAAA,CAAU,EAEtC,GAAA,CAEFb,EAAgB,WAAW,EACrB,KAAA,CAAE,YAAA3G,GAAa,aAAA2J,GAAc,aAAAD,EAAA,EAAiB,MAAMH,GAAyB5L,EAAUA,EAAS,OAAO,EAG7GgJ,EAAgB,UAAU,EAC1B,MAAMyB,GAAU,IAAI5T,EAAgB2T,GAAgBkB,GAAe8D,CAAO,EAEpEG,GAAsBC,EAAgBL,EAAc,EAC1D,QAAQ,IAAI,2BAA4B,CACtC,KAAMvP,EAAS,aACf,QAAS2P,GACT,cAAe3P,EAAS,kBAAA,CACzB,EAIK6P,MAAAA,GAAe7P,EAAS,gBAC1B,OAAO,GAAO,EACd,OAAOA,EAAS,cAAgB,CAAC,EAG/B8P,GAAY,OAAOhB,GAAmBjF,EAAG,CAAC,EAC1CkG,GAAc,OAAOL,EAAU,EACrC,GAAII,KAAcC,GAChB,MAAM,IAAI,MAAM,uBAAuBD,EAAS,eAAeC,EAAW,EAAE,EAI9E,IAAInF,GAAc,CAAC,EACf2E,KAAmB/I,GAAU,gBACjBoE,GAAA,CACZ,SAAU,IACV,aAAcvT,GAAkB,MAAO,MAAM,EAC7C,qBAAsBA,GAAkB,KAAM,MAAM,CACtD,EACA9I,GAAM,2CAA4C,CAChD,SAAU,IACV,KAAM,IAAA,CACP,GA4BG,MAAAsc,GAAU,MAzBL,MAAMJ,GAAQ,oBACvB,CACE,eAAgBzK,EAAS,OAAS,SAAW,SAAW,UACxD,KAAMA,EAAS,KACf,OAAQA,EAAS,OACjB,YAAa,UACb,UAAW,OAAOA,EAAS,WAAa,GAAK,EAC7C,UAAWgQ,GAAWhQ,EAAS,WAAa,GAAG,EAC/C,aAAc6P,GACd,YAAa,OAAO7P,EAAS,YAAc,KAAK,MAAM,IAAI,KAAKA,EAAS,WAAW,EAAE,QAAQ,EAAI,GAAI,EAAI,KAAK,MAAM,KAAK,MAAQ,GAAI,CAAC,EACtI,YAAa,OAAOA,EAAS,YAAc,KAAK,MAAM,IAAI,KAAKA,EAAS,WAAW,EAAE,QAAY,EAAA,GAAI,EAAI,CAAC,EAC1G,aAAc,EAAQA,EAAS,aAC/B,aAAcA,EAAS,eAAiB,SAAW,6CACjDA,EAAS,eAAiB,SAAWA,EAAS,mBAC9C2P,IAAuB,6CACzB,gBAAiB,EAAQ3P,EAAS,gBAClC,gBAAiBA,EAAS,iBAAmBqI,EAC7C,oBAAqB,OAAOrI,EAAS,qBAAuB,CAAC,CAC/D,EACA,CACE,MAAO6J,GACP,GAAGe,EAAA,CAEP,GAEyB,KAAK,EAG1B,IAAA3I,GACE,MAAAgO,GAAgBpF,GAAQ,KAAK,KACjCE,IAAAA,GAAI,OAAO,CAAC,IAAM,oEACpB,EAiBA,GAfIkF,KAKkBhO,GAJAiO,GAAgB,gBAAA,EAAkB,OACpD,CAAC,wNAAwN,EACzND,GAAc,IAChB,EACgC,CAAC,EAAE,YAGhChO,KAIHA,GAHyB4I,GAAQ,KAAK,KACpCE,IAAAA,GAAI,OAAO,CAAC,IAAM,oEACpB,GACsC,SAGpC,CAAC9I,GAAmB,CACtB+G,EAAgB,OAAO,EACvBE,EAAiB,mDAAmD,EACpE,MAAA,CAIF,GAAIqG,KAAmB/I,GAAU,eAAiB,CAACvE,GAC3C,MAAA,IAAI,MAAM,+EAA+E,EAIjG,GAAIjC,EAAS,iBAAmBA,EAAS,mBAAmB,OAAS,EAAG,CACtEgJ,EAAgB,WAAW,EACrB,MAAAmH,GAAc,IAAItZ,EACtBoL,GACA7B,GAAiB,OACjBoP,CACF,EAGM3C,GAAY7M,EAAS,mBAAmB,IAC5ClQ,IAAA,OAAOA,IAAS,SAAWA,GAAOA,GAAK,OACzC,EACMsgB,GAASpQ,EAAS,mBAAmB,IAAIlQ,IAClB,OAA3B,OAAOA,IAAS,SAAkB,EAAYA,GAAK,OAAhB,CACrC,EAGA,MADoB,MAAMqgB,GAAY,aAAatD,GAAWuD,EAAM,GAClD,KAAK,CAAA,CAIzB,MAAM1P,GAAiB,CACrB,GAAGV,EACH,gBAAiBiC,GACjB,QAASsN,KAAmB,KAAO,WAC3BA,KAAmB,SAAW,UAC9BA,KAAmB,IAAM,UACzBA,KAAmB,WAAa,aAChCA,KAAmB,MAAQ,gBAAkB,UACrD,QAASA,GACT,WAAYvD,GACZ,aAAAD,GACA,YAAA1J,GACA,UAAW,CACT,KAAMrC,EAAS,cAAgB,SAC/B,OAAQA,EAAS,eAAiB,OAAS,OACnCA,EAAS,eAAiB,OAAS,OACnCA,EAAS,eAAiB,SAAWA,EAAS,mBAC9CA,EAAS,eAAiB,SACxBuP,KAAmB,IAAM,MACzBA,KAAmB,MAAQ,MAAQ,OAI7C,QAASvP,EAAS,eAAiB,SAAW,6CACtCA,EAAS,eAAiB,SAAWA,EAAS,mBAC9C2P,IAAuB,4CACjC,EACA,mBAAoB3P,EAAS,mBAC7B,UAAW,KAAK,IAAI,EACpB,YAAa,EACb,eAAgBqI,EAAQ,YAAY,CACtC,EAEA,MAAM5H,GAAeC,EAAc,EAGnCsI,EAAgB,WAAW,EAC3BI,EAAgB,EAAI,EAGpB,WAAW,IAAM,CACfN,EAAqB,EAAK,EAC1BE,EAAgB,IAAI,EACpBE,EAAiB,IAAI,EAGrB,WAAW,IAAM,CACfI,EAAmB,EAAI,GACtB,GAAI,EAGP,WAAW,IAAM,CACfF,EAAgB,EAAK,GACpB,GAAK,GACP,GAAI,EAECtC,EAAA,EACC0G,EAAA,eAAexN,EAAS,MAAM,EAAE,QAElCjS,GAAO,CACN,QAAA,MAAM,wCAAyCA,EAAK,EAC5Dib,EAAgB,OAAO,EACNE,EAAAnb,GAAM,SAAW,gDAAgD,CAAA,QAE7EA,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EAChDib,EAAgB,OAAO,EACvBE,EAAiB,8EAA8E,CAAA,CAEnG,EAGMmH,EAAoBC,GAAS,CAC3B,MAAAC,EAAQ,SAAS,cAAc,OAAO,EAC5CA,EAAM,KAAO,OACbA,EAAM,OAASD,IAAS,MAAQ,OACjBA,IAAS,QAAU,aACnB,QAETC,EAAA,SAAW,MAAO5d,IAAM,CAC5B,MAAMkN,GAAOlN,GAAE,OAAO,MAAM,CAAC,EAC7B,GAAKkN,GAED,GAAA,CACF,IAAIgN,EAAY,CAAC,EAEjB,GAAIyD,IAAS,OAAQ,CACb,MAAAlU,GAAO,MAAMyD,GAAK,KAAK,EACzB,IAAA2Q,GACA,GAAA,CACSA,GAAA,KAAK,MAAMpU,EAAI,QACnBzJ,GAAG,CACF,QAAA,MAAM,oBAAqBA,EAAC,EACpCpE,GAAM,MAAM,qBAAqB,EACjC,MAAA,CAII,MAAAkiB,GAAwBC,IAAQ,CAChC,GAAA,OAAOA,IAAQ,SAAiB,OAAA,KAC9B,MAAAC,GAAQD,GAAI,MAAM,mBAAmB,EACpC,OAAAC,GAAQA,GAAM,CAAC,EAAI,IAC5B,EA+BMC,IA5BgB1lB,IAAU,CACxB,MAAA2lB,OAAY,IAEZC,GAAWhhB,IAAS,CAEpB,GAAA,OAAOA,IAAS,SAAU,CACtB,MAAAsd,GAAOqD,GAAqB3gB,EAAI,EAClCsd,IAAYyD,GAAA,IAAIzD,EAAI,EACxB,MAAA,CAIE,GAAA,MAAM,QAAQtd,EAAI,EAAG,CACvBA,GAAK,QAAQghB,EAAO,EACpB,MAAA,CAIEhhB,IAAQ,OAAOA,IAAS,UAC1B,OAAO,OAAOA,EAAI,EAAE,QAAQghB,EAAO,CAEvC,EAEA,OAAAA,GAAQ5lB,EAAK,EACN,MAAM,KAAK2lB,EAAK,CACzB,GAGoCL,EAAQ,EACpC,QAAA,IAAI,mBAAoBI,EAAc,EAClC/D,EAAA+D,GAAe,IAAaxD,KAAA,CAAE,QAASA,GAAM,QAAS,CAAA,EAAI,CAAA,SAGlEkD,IAAS,MAIXzD,GAHa,MAAMhN,GAAK,KAAK,GAEV,MAAM,UAAU,EAEhC,IAAYkR,IAAAA,GAAK,MAAM,EACvB,OAAOA,IAAQA,GAAK,OAAS,CAAC,EAC9B,IAAgBrb,KAAA,CACf,QAASA,GAAQ,QAAQ,QAAS,EAAE,EACpC,QAAS,CAAA,EACT,UAEG4a,IAAS,QAAS,CACnB,MAAA7c,GAAO,MAAMoM,GAAK,YAAY,EAC9BmR,GAAWC,GAAUxd,EAAI,EACzByd,GAAQF,GAAS,OAAOA,GAAS,WAAW,CAAC,CAAC,EAIxCnE,EAHCsE,GAAW,cAAcD,GAAO,CAAE,OAAQ,EAAG,IAAK,GAAO,EAGrD,QAAeE,IACzB,MAAM,QAAQA,EAAG,EACfA,GAAI,IAAYC,IAAA,CACjB,GAAA,CAACA,GAAa,OAAA,KAClB,MAAMX,GAAM,OAAOW,EAAI,EAAE,KAAK,EACvB,OAAAX,GAAI,WAAW,IAAI,EAAI,CAAE,QAASA,GAAK,QAAS,CAAA,EAAM,IAAA,CAC9D,EAAE,OAAO,OAAO,EALe,CAAC,CAMlC,CAAA,CAKC,MAAAY,GAAiB,CAAC,GAAG,IAAI,IAC7BzE,EACG,OAAe/c,IAAAA,IAAQA,GAAK,SAAWuf,EAAgBvf,GAAK,OAAO,CAAC,EACpE,IAAIA,IAAQA,GAAK,OAAO,CAAA,CAC5B,EAAE,IAAIsd,KAAS,CAAE,QAASA,GAAM,QAAS,CAAA,EAAI,EAI1C,GAFI,QAAA,IAAI,mBAAoBkE,EAAc,EAE1CA,GAAe,SAAW,EAAG,CAC/B/iB,GAAM,MAAM,kCAAkC,EAC9C,MAAA,CAGakgB,EAAA,CAAE,mBAAoB6C,GAAgB,EAC/C/iB,GAAA,QACHoB,EAAAA,KAAA,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,YAAU2hB,GAAe,OAAO,YAAA,EAAU,QAC/C,OAAA,CAAK,UAAU,6BAA6B,SAAkC,oCAAA,CAAA,CAAA,CACjF,CAAA,CACF,QACOvjB,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EACtCQ,GAAA,MAAM,oBAAoB+hB,CAAI,iCAAiC,CAAA,CAEzE,EAEAC,EAAM,MAAM,CACd,EAEMgB,EAAa,IAAM,CAEvB,MAAMC,EAAgB,IACnB7hB,OAAA,MAAA,CAAI,UAAU,+CACZ,SAAA,CAAAoX,IAAgB,QACf5b,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACb,MAAMsmB,EAAe/E,GAAM,UAAe7Q,IAAAA,GAAE,KAAOkL,CAAW,EAC9D6G,EAAelB,GAAM+E,EAAe,CAAC,EAAE,EAAE,CAC3C,EACA,UAAU,8KACX,SAAA,MAAA,CAED,EAED1K,IAAgB,WACf5b,EAAA,IAAC,SAAA,CACC,QAASumB,EACT,UAAU,0GACX,SAAA,UAAA,CAED,EAED3K,IAAgB,WACf5b,EAAA,IAAC,SAAA,CACC,QAASmkB,EACT,UAAU,0GACX,SAAA,mBAAA,CAAA,CAED,EAEJ,EAGF,OAAQvI,EAAa,CACnB,IAAK,OAED,OAACpX,EAAA,KAAA,MAAI,CAAA,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAoD,EAClEA,EAAAA,IAAA,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,EACnEA,EAAAA,IAAA,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAuD,EACrEA,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wDAAwD,EACtEA,EAAAA,IAAA,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGCA,EAAAA,IAAA,MAAI,CAAA,UAAU,sFAAsF,EACpGA,EAAAA,IAAA,MAAI,CAAA,UAAU,uFAAuF,EACrGA,EAAAA,IAAA,MAAI,CAAA,UAAU,yFAAyF,EACvGA,EAAAA,IAAA,MAAI,CAAA,UAAU,0FAA0F,EAGxGwE,EAAAA,KAAA,MAAI,CAAA,UAAU,yDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,OAAC,KAAA,CAAG,UAAU,2DAA2D,SAEzE,wBAAA,EACCA,EAAAA,KAAA,IAAE,CAAA,UAAU,2CAA2C,SAAA,CAAA,8CACVqQ,EAAS,KAAO,YAAA,CAC9D,CAAA,CAAA,EACF,EAECrQ,EAAAA,KAAA,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACEsjB,EAAA,CAAE,KAAM,SAAU,EACjCb,EAAe,QAAQ,CACzB,EACA,UAAWhG,GACT,oCACA,2CACA5H,EAAS,OAAS,SACd,mBACA,sCACN,EAEA,SAACrQ,EAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,OAACwe,GAAW,CAAA,KAAM,GAAI,UAAU,iBAAiB,SAChD,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,8CAA8C,SAAO,UAAA,QAClE,IAAA,CAAE,UAAU,2CAA2C,SAExD,4CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAEAhjB,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACEsjB,EAAA,CAAE,KAAM,UAAW,EAClCb,EAAe,QAAQ,CACzB,EACA,UAAWhG,GACT,0BACA,2CACA5H,EAAS,OAAS,UACd,mBACA,sCACN,EAEA,SAACrQ,EAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,OAACwe,GAAW,CAAA,KAAM,GAAI,UAAU,iBAAiB,SAChD,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,8CAA8C,SAAQ,WAAA,QACnE,IAAA,CAAE,UAAU,2CAA2C,SAExD,qCAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EACF,EACCqD,EAAc,CAAA,CACjB,CAAA,CAAA,EACF,EAEJ,IAAK,SAED,OAAC7hB,EAAA,KAAA,MAAI,CAAA,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAoD,EAClEA,EAAAA,IAAA,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,EACnEA,EAAAA,IAAA,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAuD,EACrEA,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wDAAwD,EACtEA,EAAAA,IAAA,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGCA,EAAAA,IAAA,MAAI,CAAA,UAAU,sFAAsF,EACpGA,EAAAA,IAAA,MAAI,CAAA,UAAU,uFAAuF,EACrGA,EAAAA,IAAA,MAAI,CAAA,UAAU,yFAAyF,EACvGA,EAAAA,IAAA,MAAI,CAAA,UAAU,0FAA0F,EAGxGwE,EAAAA,KAAA,MAAI,CAAA,UAAU,yDACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,kEAAkE,SAEnF,oBAAA,EACAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO6U,EAAS,KAChB,SAAWrN,GAAM8b,EAAe,CAAE,KAAM9b,EAAE,OAAO,MAAO,EACxD,UAAU,8MACV,YAAY,mBAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,kEAAkE,SAEnF,WAAA,EACAxH,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO6U,EAAS,OAChB,SAAWrN,GAAM8b,EAAe,CAAE,OAAQ9b,EAAE,OAAO,MAAM,YAAY,EAAG,EACxE,UAAU,8MACV,YAAY,OAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,kEAAkE,SAEnF,cAAA,EACAxH,EAAA,IAAC,WAAA,CACC,MAAO6U,EAAS,YAChB,SAAWrN,GAAM8b,EAAe,CAAE,YAAa9b,EAAE,OAAO,MAAO,EAC/D,UAAU,mNACV,YAAY,6BAAA,CAAA,CACd,EACF,EAEChD,EAAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,kEAAkE,SAEnF,UAAA,EACAxE,EAAA,IAAC,QAAA,CACC,KAAK,MACL,MAAO6U,EAAS,QAChB,SAAWrN,GAAM8b,EAAe,CAAE,QAAS9b,EAAE,OAAO,MAAO,EAC3D,UAAU,8MACV,YAAY,UAAA,CAAA,CACd,EACF,SACC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,kEAAkE,SAEnF,WAAA,EACAhD,EAAA,KAAC,SAAA,CACC,MAAOqQ,EAAS,SAChB,SAAWrN,GAAM8b,EAAe,CAAE,SAAU9b,EAAE,OAAO,MAAO,EAC5D,UAAU,8MAEV,SAAA,OAAC,SAAA,CAAO,MAAM,GAAG,SAAe,kBAAA,QAC/B,SAAA,CAAO,MAAM,MAAM,SAAG,MAAA,QACtB,SAAA,CAAO,MAAM,eAAe,SAAY,eAAA,QACxC,SAAA,CAAO,MAAM,SAAS,SAAM,SAAA,QAC5B,SAAA,CAAO,MAAM,QAAQ,SAAK,QAAA,QAC1B,SAAA,CAAO,MAAM,cAAc,SAAW,cAAA,QACtC,SAAA,CAAO,MAAM,SAAS,SAAM,QAAA,CAAA,CAAA,CAAA,CAAA,CAC/B,CACF,CAAA,CAAA,EACF,EAGChD,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,OAAC,KAAA,CAAG,UAAU,uDAAuD,SAErE,eAAA,EAECA,EAAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,sDAAsD,SAEvE,mBAAA,EACCA,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,OAAC,OAAA,CAAK,UAAU,yDAAyD,SAAC,IAAA,EAC1ExE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO6U,EAAS,QAAQ,QACxB,SAAWrN,GAAM8b,EAAe,CAC9B,QAAS,CAAE,GAAGzO,EAAS,QAAS,QAASrN,EAAE,OAAO,KAAM,CAAA,CACzD,EACD,UAAU,mNACV,YAAY,UAAA,CAAA,CACd,CACF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,sDAAsD,SAEvE,iBAAA,EACAxH,EAAA,IAAC,QAAA,CACC,KAAK,MACL,MAAO6U,EAAS,QAAQ,QACxB,SAAWrN,GAAM8b,EAAe,CAC9B,QAAS,CAAE,GAAGzO,EAAS,QAAS,QAASrN,EAAE,OAAO,KAAM,CAAA,CACzD,EACD,UAAU,8MACV,YAAY,wBAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,sDAAsD,SAEvE,iBAAA,EACChD,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,OAAC,OAAA,CAAK,UAAU,yDAAyD,SAAK,QAAA,EAC9ExE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO6U,EAAS,QAAQ,SACxB,SAAWrN,GAAM8b,EAAe,CAC9B,QAAS,CAAE,GAAGzO,EAAS,QAAS,SAAUrN,EAAE,OAAO,KAAM,CAAA,CAC1D,EACD,UAAU,oNACV,YAAY,WAAA,CAAA,CACd,CACF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,sDAAsD,SAEvE,cAAA,EACAxH,EAAA,IAAC,QAAA,CACC,KAAK,MACL,MAAO6U,EAAS,QAAQ,IACxB,SAAWrN,GAAM8b,EAAe,CAC9B,QAAS,CAAE,GAAGzO,EAAS,QAAS,IAAKrN,EAAE,OAAO,KAAM,CAAA,CACrD,EACD,UAAU,8MACV,YAAY,2BAAA,CAAA,CACd,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACC6e,EAAc,CAAA,CACjB,CAAA,CAAA,EACF,EAEJ,IAAK,UAED,OAAC7hB,EAAA,KAAA,MAAI,CAAA,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAoD,EAClEA,EAAAA,IAAA,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,EACnEA,EAAAA,IAAA,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAuD,EACrEA,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wDAAwD,EACtEA,EAAAA,IAAA,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGCA,EAAAA,IAAA,MAAI,CAAA,UAAU,sFAAsF,EACpGA,EAAAA,IAAA,MAAI,CAAA,UAAU,uFAAuF,EACrGA,EAAAA,IAAA,MAAI,CAAA,UAAU,yFAAyF,EACvGA,EAAAA,IAAA,MAAI,CAAA,UAAU,0FAA0F,EAGxGwE,EAAAA,KAAA,MAAI,CAAA,UAAU,yDACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,sBACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,UAAWyc,GACT,mGACA5H,EAAS,WAAa,mBAAqB,sCAC7C,EAEC,SAASA,EAAA,WACRA,EAAS,cAAgB,QACvB7U,EAAA,IAAC,QAAA,CACC,IAAK6U,EAAS,WACd,UAAU,6BACV,SAAQ,EAAA,CAAA,EAGV7U,EAAA,IAAC,MAAA,CACC,IAAK6U,EAAS,WACd,IAAI,UACJ,UAAU,4BAAA,GAIbrQ,EAAA,KAAA,MAAI,CAAA,UAAU,cACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iCACb,SAAA,OAAC2b,GAAW,CAAA,KAAM,GAAI,UAAU,gBAAgB,QAC/CqG,GAAA,CAAQ,KAAM,GAAI,UAAU,eAAgB,CAAA,CAAA,EAC/C,QACC,IAAA,CAAE,UAAU,wBAAwB,SAErC,0CAAA,QACC,IAAA,CAAE,UAAU,6BAA6B,SAE1C,6CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,EACAxmB,EAAA,IAAC,QAAA,CACC,KAAK,OACL,SAAU6jB,EACV,OAAO,oBACP,UAAU,yDAAA,CAAA,CACZ,CAAA,CACF,CAAA,CACF,EAEChP,EAAS,YACP7U,MAAA,MAAA,CAAI,UAAU,cACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsjB,EAAe,CAC5B,QAAS,KACT,WAAY,KACZ,YAAa,IAAA,CACd,EACD,UAAU,0CACX,SAAA,aAAA,CAAA,EAGH,EAED+C,EAAc,CAAA,CACjB,CAAA,CAAA,EACF,EAEJ,IAAK,aAED,OAAC7hB,EAAA,KAAA,MAAI,CAAA,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAoD,EAClEA,EAAAA,IAAA,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,EACnEA,EAAAA,IAAA,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAuD,EACrEA,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wDAAwD,EACtEA,EAAAA,IAAA,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGCA,EAAAA,IAAA,MAAI,CAAA,UAAU,sFAAsF,EACpGA,EAAAA,IAAA,MAAI,CAAA,UAAU,uFAAuF,EACrGA,EAAAA,IAAA,MAAI,CAAA,UAAU,yFAAyF,EACvGA,EAAAA,IAAA,MAAI,CAAA,UAAU,0FAA0F,EAGxGwE,EAAAA,KAAA,MAAI,CAAA,UAAU,yDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,uDAAuD,SAErE,oBAAA,QACC,IAAA,CAAE,UAAU,2CAA2C,SAExD,uCAAA,CAAA,CAAA,EACF,EACAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsjB,EAAe,CAC5B,WAAY,CAAC,GAAGzO,EAAS,WAAY,CAAE,WAAY,GAAI,MAAO,EAAI,CAAA,CAAA,CACnE,EACD,UAAU,wFACX,SAAA,eAAA,CAAA,CAED,EACF,EAECA,EAAS,WAAW,SAAW,EAC7B7U,EAAAA,IAAA,MAAA,CAAI,UAAU,0FACb,eAAC,IAAA,CAAE,UAAU,wBAAwB,SAErC,0BAAA,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,YACZ,SAAA6U,EAAS,WAAW,IAAI,CAAC4R,EAAMvc,KAC9B1F,OAAC,MAAgB,CAAA,UAAU,yBACzB,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,SACb,SAAAA,EAAA,IAAC,QAAA,CACC,YAAY,iBACZ,MAAOymB,EAAK,WACZ,SAAWjf,IAAM,CACf,MAAMkf,EAAW,CAAC,GAAG7R,EAAS,UAAU,EACxC6R,EAASxc,EAAK,EAAE,WAAa1C,GAAE,OAAO,MACvB8b,EAAA,CAAE,WAAYoD,EAAU,CACzC,EACA,UAAU,uNAAA,CAAA,EAEd,EACC1mB,EAAAA,IAAA,MAAI,CAAA,UAAU,SACb,SAAAA,EAAA,IAAC,QAAA,CACC,YAAY,QACZ,MAAOymB,EAAK,MACZ,SAAWjf,IAAM,CACf,MAAMkf,EAAW,CAAC,GAAG7R,EAAS,UAAU,EACxC6R,EAASxc,EAAK,EAAE,MAAQ1C,GAAE,OAAO,MAClB8b,EAAA,CAAE,WAAYoD,EAAU,CACzC,EACA,UAAU,uNAAA,CAAA,EAEd,EACA1mB,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACP,MAAA0mB,GAAW7R,EAAS,WAAW,OAAO,CAACtG,EAAGC,KAAMA,KAAMtE,EAAK,EAClDoZ,EAAA,CAAE,WAAYoD,GAAU,CACzC,EACA,UAAU,yEAEV,SAAC1mB,EAAAA,IAAAkgB,GAAI,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACjB,GAjCQhW,EAkCV,CACD,EACH,EAEDmc,EAAc,CAAA,CACjB,CAAA,CAAA,EACF,EAEJ,IAAK,UAED,OAAC7hB,EAAA,KAAA,MAAI,CAAA,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAoD,EAClEA,EAAAA,IAAA,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,EACnEA,EAAAA,IAAA,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAuD,EACrEA,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wDAAwD,EACtEA,EAAAA,IAAA,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGCA,EAAAA,IAAA,MAAI,CAAA,UAAU,sFAAsF,EACpGA,EAAAA,IAAA,MAAI,CAAA,UAAU,uFAAuF,EACrGA,EAAAA,IAAA,MAAI,CAAA,UAAU,yFAAyF,EACvGA,EAAAA,IAAA,MAAI,CAAA,UAAU,0FAA0F,EAGxGwE,EAAAA,KAAA,MAAI,CAAA,UAAU,yDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,OAAC,QAAA,CAAM,UAAU,kEAAkE,SAEnF,qBAAA,EACCye,EAAqB,CAAA,EACxB,EAECpO,EAAS,eAAiB,UACxBrQ,EAAA,KAAA,MAAA,CAAI,UAAU,mDACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,oEAAoE,SAErF,yBAAA,EACAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO6U,EAAS,mBAChB,SAAWrN,GAAM8b,EAAe,CAAE,mBAAoB9b,EAAE,OAAO,MAAO,EACtE,UAAU,8MACV,YAAY,+BACZ,SAAQ,EAAA,CAAA,CACV,EACF,SACC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,oEAAoE,SAErF,wBAAA,EACAxH,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO6U,EAAS,kBAChB,SAAWrN,GAAM8b,EAAe,CAAE,kBAAmB9b,EAAE,OAAO,MAAO,EACrE,UAAU,8MACV,YAAY,qBACZ,SAAQ,EAAA,CAAA,CACV,CACF,CAAA,CAAA,EACF,EAGDhD,EAAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,oEAAoE,SAErF,eAAA,EACCxE,EAAAA,IAAA,MAAI,CAAA,UAAU,WACb,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,uBACL,MAAO6U,EAAS,UAChB,SAAWrN,GAAM8b,EAAe,CAAE,UAAW9b,EAAE,OAAO,MAAO,EAC7D,UAAU,oNACV,YAAY,OACZ,SAAQ,EAAA,CAAA,CAEZ,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,oEAAoE,SAErF,kBAAA,EACAxH,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO6U,EAAS,kBAChB,SAAWrN,GAAM8b,EAAe,CAAE,kBAAmB9b,EAAE,OAAO,MAAO,EACrE,UAAU,8MACV,YAAY,6CAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,oEAAoE,SAErF,2BAAA,EACAxH,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO6U,EAAS,gBAChB,SAAWrN,GAAM8b,EAAe,CAAE,gBAAiB9b,EAAE,OAAO,MAAO,EACnE,UAAU,8MACV,YAAY,0BAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,oEAAoE,SAErF,eAAA,EACAxH,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO6U,EAAS,UAChB,SAAWrN,GAAM8b,EAAe,CAAE,UAAW9b,EAAE,OAAO,MAAO,EAC7D,UAAU,8MACV,YAAY,mBACZ,SAAQ,EAAA,CAAA,CACV,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,oEAAoE,SAErF,mBAAA,EACAxH,EAAA,IAAC,QAAA,CACC,KAAK,SACL,IAAI,IACJ,MAAO6U,EAAS,aAChB,SAAWrN,GAAM8b,EAAe,CAAE,aAAc9b,EAAE,OAAO,MAAO,EAChE,YAAY,uBACZ,UAAW,8KACTqN,EAAS,gBAAkB,8DAAgE,EAC7F,GACA,SAAUA,EAAS,gBACnB,SAAQ,EAAA,CAAA,CACV,EACF,SAEC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,oEAAoE,SAErF,iBAAA,EACA7U,EAAA,IAAC,QAAA,CACC,KAAK,iBACL,MAAO6U,EAAS,YAChB,SAAWrN,GAAM8b,EAAe,CAAE,YAAa9b,EAAE,OAAO,MAAO,EAC/D,UAAU,8MACV,SAAQ,EAAA,CAAA,CACV,CACF,CAAA,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,OACb,SAAChD,EAAA,KAAA,QAAA,CAAM,UAAU,8BACf,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAAS6U,EAAS,gBAClB,SAAWrN,GAAMmf,EAAsBnf,EAAE,OAAO,OAAO,EACvD,UAAU,qEAAA,CACZ,QACC,OAAA,CAAK,UAAU,2CAA2C,SAE3D,oCAAA,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAECqN,EAAS,iBACPrQ,OAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,OAAC,KAAA,CAAG,UAAU,uDAAuD,SAErE,mBAAA,EACAA,EAAA,KAAC,SAAA,CACC,QAAS,IAAMoiB,GAAoB,EAAI,EACvC,UAAU,wFAEV,SAAA,CAAApiB,OAAC,OAAM,CAAA,SAAA,CAAAqQ,EAAS,mBAAmB,OAAO,YAAA,EAAU,EACnD7U,EAAAA,IAAA6mB,GAAS,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CAAA,CACtB,EACF,EAGCriB,EAAAA,KAAA,MAAI,CAAA,UAAU,aACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,YAAY,+BACZ,MAAO0iB,EACP,SAAWlb,GAAMmb,EAAcnb,EAAE,OAAO,KAAK,EAC7C,UAAU,yNAAA,CACZ,EACAxH,EAAA,IAAC,SAAA,CACC,QAAS8mB,GACT,UAAU,sFACX,SAAA,KAAA,CAAA,CAED,EACF,EAGCtiB,EAAAA,KAAA,MAAI,CAAA,UAAU,aACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,QAAS,IAAM0gB,EAAiB,KAAK,EACrC,UAAU,wMAEV,SAAA,CAACllB,EAAAA,IAAA+mB,GAAA,CAAU,KAAM,GAAI,EAAE,YAAA,CAAA,CAEzB,EACAviB,EAAA,KAAC,SAAA,CACC,QAAS,IAAM0gB,EAAiB,OAAO,EACvC,UAAU,wMAEV,SAAA,CAACllB,EAAAA,IAAAgnB,GAAA,CAAY,KAAM,GAAI,EAAE,cAAA,CAAA,CAE3B,EACAxiB,EAAA,KAAC,SAAA,CACC,QAAS,IAAM0gB,EAAiB,MAAM,EACtC,UAAU,wMAEV,SAAA,CAACllB,EAAAA,IAAAinB,GAAA,CAAW,KAAM,GAAI,EAAE,aAAA,CAAA,CAAA,CAE1B,CACF,CAAA,CAAA,EACF,EAGDziB,EAAAA,KAAA,MAAI,CAAA,UAAU,OACb,SAAA,OAAC,QAAA,CAAM,UAAU,oEAAoE,SAErF,kBAAA,EACCA,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,iBACL,MAAO6U,EAAS,YAChB,SAAWrN,GAAM8b,EAAe,CAAE,YAAa9b,EAAE,OAAO,MAAO,EAC/D,UAAW,+MACTqN,EAAS,aAAe,gCAAkC,EAC5D,GACA,SAAUA,EAAS,aACnB,SAAU,CAACA,EAAS,YAAA,CACtB,EACCrQ,EAAAA,KAAA,QAAM,CAAA,UAAU,0CACf,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAAS6U,EAAS,aAClB,SAAWrN,GAAM8b,EAAe,CAAE,aAAc9b,EAAE,OAAO,QAAS,EAClE,UAAU,cAAA,CACZ,EACCxH,EAAAA,IAAA,MAAI,CAAA,UAAU,0fAA0f,QACxgB,OAAA,CAAK,UAAU,4DAA4D,SAAa,eAAA,CAAA,CAAA,CAC3F,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACCqmB,EAAc,CAAA,CACjB,CAAA,CAAA,EACF,CAAA,CAGR,EA+EME,EAAoB,IAAM,CAC9B,GAAI3K,IAAgB,UACLuI,EAAA,MACR,CACL,MAAMmC,EAAe/E,GAAM,UAAe7Q,GAAAA,EAAE,KAAOkL,CAAW,EAC9D6G,EAAelB,GAAM+E,EAAe,CAAC,EAAE,EAAE,CAAA,CAE7C,EAEM7B,EAAmBrZ,GAAY,CACnC,GAAI,CAACyJ,EAAS,cAAgBA,EAAS,eAAiB,SAEtD,OAAIzJ,IAAY,IACP,6CAEF,6CAGH,MAAA8b,EAAiB5G,GAAgBlV,CAAO,EAC9C,GAAI,CAAC8b,EACH,eAAQ,KAAK,iDAAiD,EACvD,6CAGT,OAAQrS,EAAS,aAAc,CAC7B,IAAK,OACH,OAAOqS,EAAe,KACxB,IAAK,OACH,OAAOA,EAAe,KACxB,IAAK,SACH,OAAOrS,EAAS,oBAAsB,6CACxC,QACS,MAAA,4CAAA,CAEb,EAmGMsS,EAAsB,IACzB3iB,OAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAACogB,IAAS,KAAM,GAAI,UAAU,0CAAA,CAA2C,EAC3E,QACC,KAAA,CAAG,UAAU,2DAA2D,SAEzE,sBAAA,QACC,IAAA,CAAE,UAAU,wCAAwC,SAErD,yDAAA,EACApgB,EAAA,IAAC,SAAA,CACC,QAASuiB,EACT,UAAU,kGACX,SAAA,gBAAA,CAAA,CAED,EACF,EAIFziB,EAAAA,UAAU,IAAM,EACK,SAAY,CAC7B,GAAI,OAAO,SAAU,CACbsL,MAAAA,EAAU,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACrDgS,EAAA,SAAShS,EAAS,EAAE,CAAC,CAAA,CAE3C,GACW,EAGX,OAAO,UAAU,GAAG,eAAiBA,GAAY,CAC7BgS,EAAA,SAAShS,EAAS,EAAE,CAAC,CAAA,CACxC,CACH,EAAG,EAAE,EAGL,KAAM,CAACgc,EAAkBR,EAAmB,EAAIhnB,EAAAA,SAAS,EAAK,EAExDynB,GAAuBnd,GAAU,CAC/B,MAAAod,EAAezS,EAAS,mBAAmB,OAAO,CAACtG,GAAGC,KAAMA,KAAMtE,CAAK,EAC9DoZ,EAAA,CAAE,mBAAoBgE,EAAc,CACrD,EAGMR,GAAoBtf,GAAM,CAC9BA,EAAE,gBAAgB,EACd0c,EAAgBxB,CAAU,GACbY,EAAA,CACb,mBAAoB,CAAC,GAAGzO,EAAS,mBAAoB,CAAE,QAAS6N,EAAY,QAAS,CAAG,CAAA,CAAA,CACzF,EACDC,EAAc,EAAE,GAEhBvf,GAAM,MAAM,wBAAwB,CAExC,EAEMmkB,EAAyB3D,GAAY,CACzCrG,EAAqBjW,IAAA,CACnB,GAAGA,EACH,mBAAoBsc,EAAQ,kBAAA,EAC5B,CACJ,EAG8ChkB,EAAAA,SAAS,EAAK,EAC5D,KAAM,CAAC8kB,EAAc8C,CAAe,EAAI5nB,EAAAA,SAAS,EAAE,EAEnDE,EAAAA,UAAU,IAAM,CACV+U,EAAS,iBACX2S,EAAgB,SAAS,CAC3B,EACC,CAAC3S,EAAS,eAAe,CAAC,EAEvB,MAAA8R,EAAyBc,GAAY,CACrCA,GACanE,EAAA,CACb,gBAAiBmE,EACjB,aAAc,SAAA,CACf,EAEDrkB,GAAM,sMAAuM,CAC3M,SAAU,IACV,GAAI,gBAAA,CACL,IAEckgB,EAAA,CACb,gBAAiBmE,EACjB,aAAc,EAAA,CACf,EAEDrkB,GAAM,QAAQ,gBAAgB,EAElC,EAGAtD,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMmgB,EAAe,IAAM,CACX5B,EAAA,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,CACH,EAEO,cAAA,iBAAiB,SAAU4B,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAChE,EAAG,EAAE,EA0EDzb,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAAvO,OAAC6X,GAAO,CAAA,KAAMX,EAAQ,QAAAC,EAAkB,UAAU,oBAChD,SAAA,OAAC,MAAI,CAAA,UAAU,qCAAqC,cAAY,OAAO,QAEtE,MAAA,CAAI,UAAU,8DACb,eAACU,GAAO,MAAP,CAAa,UAAU,gGACtB,SAAC7X,EAAA,KAAA,MAAA,CAAI,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAoD,EAClEA,EAAAA,IAAA,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,EACnEA,EAAAA,IAAA,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAuD,EACrEA,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wDAAwD,EACtEA,EAAAA,IAAA,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGCA,EAAAA,IAAA,MAAI,CAAA,UAAU,sFAAsF,EACpGA,EAAAA,IAAA,MAAI,CAAA,UAAU,uFAAuF,EACrGA,EAAAA,IAAA,MAAI,CAAA,UAAU,yFAAyF,EACvGA,EAAAA,IAAA,MAAI,CAAA,UAAU,0FAA0F,EAGxGA,EAAAA,IAAA,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,EAGChK,EAAAA,KAAA,MAAI,CAAA,UAAU,+CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,EAAA,IAACqc,GAAO,MAAP,CAAa,UAAU,sDAAsD,SAE9E,wBAAA,EACCrc,EAAAA,IAAA,SAAO,CAAA,QAAS2b,EAAS,UAAU,oCAClC,SAAC3b,EAAA,IAAAkgB,GAAA,CAAI,KAAM,EAAI,CAAA,CACjB,CAAA,CAAA,EACF,EAEEhD,EAGE1Y,EAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAA/S,MAAC,MAAI,CAAA,UAAU,OACb,SAAAA,MAAC,OAAI,UAAU,uBACZ,SAAMuhB,GAAA,IAAI,CAACtF,EAAM/R,WACf,MAAA,CAAkB,UAAU,oBAC3B,SAAA,CAAAlK,MAAC,OAAI,UAAWyc,GACd,4EACAb,IAAgBK,EAAK,IAEjBsF,GAAM,UAAe7Q,IAAAA,GAAE,KAAOkL,CAAW,EAAI1R,EAD7C,0BAGA,6CAAA,EAEH,WAAQ,EACX,EACCA,IAAUqX,GAAM,OAAS,GACvBvhB,EAAAA,IAAA,OAAI,UAAWyc,GACd,oBACA8E,GAAM,UAAe7Q,IAAAA,GAAE,KAAOkL,CAAW,EAAI1R,EACzC,eACA,+BAAA,CACH,CAAA,CAAA,CAAA,EAjBG+R,EAAK,EAmBf,CACD,CAAA,CACH,EACF,EAGCmK,EAAW,CAAA,CACd,CAAA,EAhCUe,GAgCV,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAAA,EACF,EACAnnB,EAAA,IAACyhB,GAAA,CACC,OAAQ2F,EACR,QAAS,IAAMR,GAAoB,EAAK,EACxC,UAAW/R,EAAS,mBACpB,gBAAiBwS,GACjB,gBAAiBE,CAAA,CACnB,EACCvJ,GACChe,EAAA,IAACqgB,GAAA,CACC,MAAOjC,EAAW,MAClB,OAAQA,EAAW,OACnB,eAAgB,IAChB,QAAS,GACT,QAAS,GACT,iBAAkB,GAClB,iBAAkB,GAClB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,SAAS,EAC9D,MAAO,CACL,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,OACR,OAAQ,MACR,cAAe,MAAA,CACjB,CACF,EAEFpe,EAAA,IAACyb,GAAA,CACC,OAAQiC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1BE,EAAgB,IAAI,CACtB,EACA,YAAaD,EACb,eAAgB/I,EAAS,KACzB,MAAOiJ,CAAA,CACT,EACA9d,EAAA,IAAC2c,GAAA,CACC,OAAQuB,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,OAAStB,GAAW,CACV,QAAA,IAAI,2BAA4BA,CAAM,CAAA,CAEhD,CAAA,CACF,EACF,CAEJ,CCplFA,MAAM6K,GAAY,CAChB,CACE,SAAU,uCACV,OAAQ,8RACR,KAAM,0DACR,EACA,CACE,SAAU,8BACV,OAAQ,qPACR,KAAM,mDACR,EACA,CACE,SAAU,4BACV,OAAQ,yLACV,EACA,CACE,SAAU,8CACV,OAAQ,8RACV,EACA,CACE,SAAU,iCACV,OAAQ,sMACR,KAAM,uCAAA,CAEV,EAEMC,GAAU,CACd,CACE,SAAU,8DACV,OAAQ,4TACR,KAAM,0DACR,EACA,CACE,SAAU,0CACV,OAAQ,yOACV,EACA,CACE,SAAU,uCACV,OAAQ,mPACV,EACA,CACE,SAAU,sCACV,OAAQ,6NACR,KAAM,mEACR,EACA,CACE,SAAU,wCACV,OAAQ,wMACR,KAAM,yCACR,EACA,CACE,SAAU,kDACV,OAAQ,sOACV,EACA,CACE,SAAU,8CACV,OAAQ,yRACV,EACA,CACE,SAAU,oDACV,OAAQ,yMACR,KAAM,oDACR,EACA,CACE,SAAU,+BACV,OAAQ,4NACV,EACA,CACE,SAAU,wCACV,OAAQ,8MAAA,CAEZ,EAEA,SAAwBC,GAAI,CAAE,OAAAlM,EAAQ,QAAAC,GAAW,CAC/C,OAEInX,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAA/S,EAAA,IAAC,SAAA,CACC,QAAS,IAAM2b,EAAQ,EAAI,EAC3B,UAAU,+FAEV,SAAA3b,EAAAA,IAAC6nB,GAAa,CAAA,KAAM,EAAI,CAAA,CAAA,CAC1B,SAECxL,GAAO,CAAA,KAAMX,EAAQ,QAAAC,EAAkB,UAAU,gBAChD,SAAA,CAAA3b,EAAA,IAAC,MAAI,CAAA,UAAU,4BAA4B,cAAY,OAAO,EAE9DA,EAAAA,IAAC,OAAI,UAAU,qDACb,gBAACqc,GAAO,MAAP,CAAa,UAAU,uDAEtB,SAAA,CAAC7X,EAAAA,KAAA,MAAA,CAAI,UAAU,sCACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,4CAA6C,CAAA,EAC5DA,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,EAC5DA,EAAAA,IAAC,MAAI,CAAA,UAAU,sEAAuE,CAAA,EACtFA,EAAAA,IAAC,MAAI,CAAA,UAAU,sEAAuE,CAAA,CAAA,EACxF,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,uCACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,6CAA8C,CAAA,EAC7DA,EAAAA,IAAC,MAAI,CAAA,UAAU,6CAA8C,CAAA,EAC7DA,EAAAA,IAAC,MAAI,CAAA,UAAU,uEAAwE,CAAA,EACvFA,EAAAA,IAAC,MAAI,CAAA,UAAU,qEAAsE,CAAA,CAAA,EACvF,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,+CAAgD,CAAA,EAC/DA,EAAAA,IAAC,MAAI,CAAA,UAAU,+CAAgD,CAAA,EAC/DA,EAAAA,IAAC,MAAI,CAAA,UAAU,yEAA0E,CAAA,EACzFA,EAAAA,IAAC,MAAI,CAAA,UAAU,yEAA0E,CAAA,CAAA,EAC3F,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,gDAAiD,CAAA,EAChEA,EAAAA,IAAC,MAAI,CAAA,UAAU,gDAAiD,CAAA,EAChEA,EAAAA,IAAC,MAAI,CAAA,UAAU,0EAA2E,CAAA,EAC1FA,EAAAA,IAAC,MAAI,CAAA,UAAU,wEAAyE,CAAA,CAAA,EAC1F,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,oCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,EAGAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,EAAA,IAACqc,GAAO,MAAP,CAAa,UAAU,mCAAmC,SAE3D,6BAAA,EACCrc,EAAA,IAAA,SAAA,CAAO,QAAS,IAAM2b,EAAQ,EAAK,EAAG,UAAU,oCAC/C,SAAA3b,EAAAA,IAACkgB,GAAI,CAAA,KAAM,GAAI,CACjB,CAAA,CAAA,EACF,EAEA1b,EAAAA,KAACsjB,GAAI,MAAJ,CACC,SAAA,CAAAtjB,EAAA,KAACsjB,GAAI,KAAJ,CAAS,UAAU,kDAClB,SAAA,CAAA9nB,EAAA,IAAC8nB,GAAI,CAAA,UAAW,CAAC,CAAE,SAAAC,CACjB,IAAA;AAAA,uBACGA,EACC,iCACA,mDACH,GACD,SAEF,SAAA,QACCD,GAAI,CAAA,UAAW,CAAC,CAAE,SAAAC,CACjB,IAAA;AAAA,uBACGA,EACC,iCACA,mDACH,GACD,SAEF,MAAA,CAAA,CAAA,EACF,EAEAvjB,EAAA,KAAC,MAAA,CACC,UAAU,wCACV,MAAO,CACL,UAAW,qBACX,eAAgB,OAChB,eAAgB,iBAClB,EAEA,SAAA,CAACxE,EAAAA,IAAA,QAAA,CAAM,IAAG,GAAE,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAkBV,EAEFwE,EAAAA,KAACsjB,GAAI,OAAJ,CACC,SAAA,CAAA9nB,MAAC8nB,GAAI,MAAJ,CACC,SAAA9nB,EAAAA,IAAC,OAAI,UAAU,YACZ,SAAU0nB,GAAA,IAAI,CAACM,EAAK9d,IAClB1F,EAAAA,KAAA,MAAA,CAAgB,UAAU,mEACzB,SAAA,CAAAxE,EAAA,IAAC,KAAG,CAAA,UAAU,iDAAkD,SAAAgoB,EAAI,SAAS,EAC7ExjB,EAAAA,KAAC,IAAE,CAAA,UAAU,2CACV,SAAA,CAAIwjB,EAAA,OACJA,EAAI,MACFhoB,EAAA,IAAA,IAAA,CAAE,KAAMgoB,EAAI,KAAM,OAAO,SAAS,IAAI,sBAAsB,UAAU,sCAAsC,SAE7G,WAAA,CAAA,CAAA,CAEJ,CAAA,CATQ,CAAA,EAAA9d,CAUV,CACD,CACH,CAAA,EACF,QACC4d,GAAI,MAAJ,CACC,SAAA9nB,EAAAA,IAAC,OAAI,UAAU,YACZ,SAAQ2nB,GAAA,IAAI,CAACK,EAAK9d,IAChB1F,EAAAA,KAAA,MAAA,CAAgB,UAAU,mEACzB,SAAA,CAAAxE,EAAA,IAAC,KAAG,CAAA,UAAU,iDAAkD,SAAAgoB,EAAI,SAAS,EAC7ExjB,EAAAA,KAAC,IAAE,CAAA,UAAU,2CACV,SAAA,CAAIwjB,EAAA,OACJA,EAAI,MACFhoB,EAAA,IAAA,IAAA,CAAE,KAAMgoB,EAAI,KAAM,OAAO,SAAS,IAAI,sBAAsB,UAAU,sCAAsC,SAE7G,WAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,GATQ9d,CAUV,CACD,CAAA,CACH,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,CC9OA,MAAM+d,GAAwB1oB,EAAAA,cAAc,EAE5B,SAAA2oB,GAAuB,CAAE,SAAAzoB,GAAY,CACnD,KAAM,CAAC0oB,EAASC,CAAU,EAAIxoB,EAAAA,SAAS,IAAI,EAGzC,OAAAI,EAAA,IAACioB,GAAsB,SAAtB,CAA+B,MAAO,CAAE,QAAAE,EAAS,WAAAC,GAC/C,SAAA3oB,EACH,CAEJ,CCZA,MAAM4oB,GAAY,CAChB,EAAG,uBACH,SAAU,+BACV,IAAK,0BACL,MAAO,iCACP,IAAK,kCACL,KAAM,0CACN,WAAY,qDACd,EAEaC,GAAiB,CAACld,EAAS+Z,EAAO,KAAMplB,IAAU,CAC7D,MAAMwoB,EAAUF,GAAUjd,CAAO,GAAKid,GAAU,CAAC,EAEjD,OAAQlD,EAAI,CACV,IAAK,KACH,MAAO,GAAGoD,CAAO,OAAOxoB,CAAK,GAC/B,IAAK,UACH,MAAO,GAAGwoB,CAAO,YAAYxoB,CAAK,GACpC,IAAK,QACH,MAAO,GAAGwoB,CAAO,UAAUxoB,CAAK,GAClC,IAAK,MACH,OAAOwoB,EACT,QACE,MAAO,GAAGA,CAAO,OAAOxoB,CAAK,EACnC,CACA,ECdMyoB,GAAwB,GAAK,IAE5B,MAAMC,EAAc,CACzB,aAAc,CACZ,KAAK,YAAc,IAAI,IACvB,KAAK,gBAAkB,EACvB,KAAK,eAAiB,EACtB,KAAK,qBAAsB,EAC3B,KAAK,kBAAmB,CAC5B,CAEE,MAAM,mBAAoB,CACxB,GAAI,CACF,MAAM7gB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAC3D,KAAK,eAAiB,MAAMxX,EAAS,eAAgB,EAGrDA,EAAS,GAAG,QAAU8gB,GAAgB,CAChCA,EAAc,KAAK,iBACrB,KAAK,eAAiBA,EACtB,KAAK,gBAAiB,EAEhC,CAAO,CACF,OAAQ9lB,EAAO,CACd,QAAQ,KAAK,kCAAmCA,CAAK,CAC3D,CACA,CAEE,iBAAkB,CAChB,KAAK,YAAY,MAAO,EACxB,KAAK,gBAAkB,EACvB,aAAa,WAAW,aAAa,CACzC,CAEE,sBAAuB,CACrB,GAAI,CACF,MAAM+lB,EAAS,aAAa,QAAQ,aAAa,EACjD,GAAIA,EAAQ,CACV,KAAM,CAAE,QAAAC,EAAS,UAAA/Y,EAAW,UAAAgZ,CAAW,EAAG,KAAK,MAAMF,CAAM,EAEvD,KAAK,MAAQ9Y,EAAY2Y,IAAyBK,IAAc,KAAK,iBACvE,KAAK,YAAc,IAAI,IAAI,OAAO,QAAQD,CAAO,CAAC,EAClD,KAAK,gBAAkB/Y,EAEjC,CACK,OAAQjN,EAAO,CACd,QAAQ,KAAK,8BAA+BA,CAAK,CACvD,CACA,CAEE,oBAAqB,CACnB,GAAI,CACF,MAAMgmB,EAAU,OAAO,YAAY,KAAK,WAAW,EACnD,aAAa,QAAQ,cAAe,KAAK,UAAU,CACjD,QAAAA,EACA,UAAW,KAAK,IAAK,EACrB,UAAW,KAAK,cACxB,CAAO,CAAC,CACH,OAAQhmB,EAAO,CACd,QAAQ,KAAK,6BAA8BA,CAAK,CACtD,CACA,CAEE,aAAaiJ,EAAc,CAKzB,MAJoB,CAClBid,GAAkB,KAAK,YAAa,EACpCA,GAAkB,KAAK,YAAW,CACnC,EACkB,SAASjd,EAAa,YAAW,CAAE,CAC1D,CAEE,cAAckd,EAAUC,EAAeC,EAAeC,EAAgBC,EAAgB,CAEpF,MAAMC,EAAW,OAAOC,GAAmBN,EAAS,CAAC,EAAGG,CAAc,CAAC,EACjEI,EAAW,OAAOD,GAAmBN,EAAS,CAAC,EAAGI,CAAc,CAAC,EAGvE,OAAI,KAAK,aAAaH,CAAa,EAC1BI,EAAWE,EAGhB,KAAK,aAAaL,CAAa,EAC1BK,EAAWF,EAGb,CACX,CAEE,MAAM,eAAeG,EAAaC,EAAcN,EAAgBC,EAAgB,CAC9E,GAAI,CAEF,MAAMM,EAAWF,EAAY,YAAa,EACpCG,EAAa,KAAK,YAAY,IAAID,CAAQ,EAC1C/b,EAAM,KAAK,IAAK,EAEtB,GAAIgc,GAAehc,EAAMgc,EAAW,UAAYlB,GAC9C,eAAQ,IAAI,wCAAyCe,CAAW,EACzDG,EAGT,MAAM9hB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAGrDuK,EAAe,MAAM/hB,EAAS,eAAgB,EAC9CgiB,EAAmB,MAAMhiB,EAAS,SAAS+hB,CAAY,EAGvD,CAACX,EAAeC,CAAa,EAAI,MAAM,QAAQ,IAAI,CACvDO,EAAa,OAAQ,EACrBA,EAAa,OAAM,CAC3B,CAAO,EAGKK,EAAe,KACfC,EAAeD,EACfE,EAAiBF,EAAe,EAChCG,EAAkBH,EAAe,GAGjCI,EAAaT,EAAa,QAAQ,KAAM,EAExC,CAACU,EAAcC,EAAgBC,EAAiBrB,CAAQ,EAAI,MAAM,QAAQ,IAAI,CAClFS,EAAa,YAAYS,EAAYN,EAAeG,EAAcH,CAAY,EAC9EH,EAAa,YAAYS,EAAYN,EAAeI,EAAgBJ,CAAY,EAChFH,EAAa,YAAYS,EAAYN,EAAeK,EAAiBL,CAAY,EACjFH,EAAa,YAAW,CAChC,CAAO,EAGKa,EAAc,KAAK,cACvBtB,EACAC,EACAC,EACAC,EACAC,CACD,EAGKmB,EAAmBpQ,GAAW,CAClC,IAAIqQ,EAAS,EACb,UAAWpQ,KAASD,EAAQ,CAC1B,IAAIsQ,EAAc,EAGlB,MAAMC,EAAY,OAAOpB,GAAmBlP,EAAM,KAAK,UAAW+O,CAAc,CAAC,EAC3EwB,EAAa,OAAOrB,GAAmBlP,EAAM,KAAK,WAAY+O,CAAc,CAAC,EAC7EyB,EAAY,OAAOtB,GAAmBlP,EAAM,KAAK,UAAWgP,CAAc,CAAC,EAC3EyB,EAAa,OAAOvB,GAAmBlP,EAAM,KAAK,WAAYgP,CAAc,CAAC,EAGnF,GAAI,KAAK,aAAaH,CAAa,EACjCwB,EAAcC,EAAYC,UAGnB,KAAK,aAAazB,CAAa,EACtCuB,EAAcG,EAAYC,UAGnBP,EAAc,EAErBG,GADqBC,EAAYC,GACJL,MAI7B,UAGFE,GAAUC,CACpB,CACQ,OAAOD,CACR,EAEKM,EAAa,CACjB,aAAcP,EAAgBJ,CAAY,EAC1C,eAAgBI,EAAgBH,CAAc,EAC9C,gBAAiBG,EAAgBF,CAAe,EAChD,cAAeF,EAAa,OAC5B,gBAAiBC,EAAe,OAChC,iBAAkBC,EAAgB,OAClC,UAAW1c,CACZ,EAGD,YAAK,YAAY,IAAI+b,EAAUoB,CAAU,EACzC,KAAK,mBAAoB,EAEzB,QAAQ,IAAI,wBAAyBtB,EAAasB,CAAU,EACrDA,CACR,OAAQjoB,EAAO,CACd,eAAQ,MAAM,kCAAmCA,CAAK,EAC/C,CACL,aAAc,EACd,eAAgB,EAChB,gBAAiB,EACjB,cAAe,EACf,gBAAiB,EACjB,iBAAkB,EAClB,UAAW,KAAK,IAAG,CACpB,CACP,CACA,CACA,CC9MO,MAAMkmB,GAAoB,CAC/B,QAAS,6CACT,OAAQ,6CAER,KAAM,6CACN,KAAM,6CACN,KAAM,4CACR,EAGMgC,GAAc,CAClB,sFACA,wFACA,+DACA,yDACA,mDACA,yDACA,uFACF,EAEMC,GAAa,CAEjB,mKACA,mKAEA,yJACA,sJACA,gKACA,gKAEA,6NACA,sLAEA,kGACA,+GACA,8GACA,+GACA,8GACF,EAEMC,GAAW,CACf,oDACA,oDACA,+GACA,+DACA,+DACA,0HACF,EAEMC,GAAY,CAChB,wEACA,iEACA,oDACA,mDACA,iDACA,yDACA,oEACA,sFACA,iFACF,EAEO,MAAMC,EAAe,CAC1B,YAAYtgB,EAAcE,EAAc,CACtC,KAAK,aAAeF,EACpB,KAAK,aAAeE,EAGpB,KAAK,QAAU,CACb,QAASge,GAAkB,QAC3B,IAAKgC,EACN,EAED,KAAK,OAAS,CACZ,QAAShC,GAAkB,OAC3B,IAAKiC,EACN,EAGD,KAAK,UAAY,IAAI,IACrB,KAAK,cAAgB,IAAI,IACzB,KAAK,gBAAkB,EACvB,KAAK,eAAiB,GAAK,GAAK,IAChC,KAAK,cAAgB,IAAItC,GAGzB,KAAK,qBAAsB,CAC/B,CAGE,sBAAuB,CACrB,GAAI,CACF,MAAM0C,EAAc,aAAa,QAAQ,kBAAkB,EAC3D,GAAIA,EAAa,CACf,KAAM,CAAE,MAAAC,EAAO,SAAAC,EAAU,UAAAxb,CAAW,EAAG,KAAK,MAAMsb,CAAW,EAEzD,KAAK,IAAK,EAAGtb,EAAY,GAAK,GAAK,MACrC,KAAK,UAAY,IAAI,IAAIub,CAAK,EAC9B,KAAK,cAAgB,IAAI,IAAIC,CAAQ,EACrC,KAAK,gBAAkBxb,EAEjC,CACK,OAAQjN,EAAO,CACd,QAAQ,KAAK,oCAAqCA,CAAK,CAC7D,CACA,CAEE,oBAAqB,CACnB,GAAI,CACF,MAAM0oB,EAAY,CAChB,MAAO,MAAM,KAAK,KAAK,UAAU,QAAO,CAAE,EAC1C,SAAU,MAAM,KAAK,KAAK,cAAc,QAAO,CAAE,EACjD,UAAW,KAAK,IAAG,CACpB,EACD,aAAa,QAAQ,mBAAoB,KAAK,UAAUA,CAAS,CAAC,CACnE,OAAQ1oB,EAAO,CACd,QAAQ,KAAK,iCAAkCA,CAAK,CAC1D,CACA,CAEE,YAAa,CACX,KAAK,UAAU,MAAO,EACtB,KAAK,cAAc,MAAO,EAC1B,KAAK,gBAAkB,EACvB,aAAa,WAAW,kBAAkB,CAC9C,CAEE,cAAe,CACb,OAAO,KAAK,IAAK,EAAG,KAAK,gBAAkB,KAAK,cACpD,CAGE,MAAM,SAASiJ,EAAc,CAC3B,GAAI,CAACA,EACH,cAAQ,MAAM,uCAAuC,EAC/C,IAAI,MAAM,0BAA0B,EAG5C,GAAI,CACF,QAAQ,IAAI,2BAA4BA,CAAY,EACpD,MAAMyT,EAAU,IAAI5T,EAClBod,GAAkB,QAClBgC,GACA,IAAI1L,GAAuB,OAAO,QAAQ,CAC3C,EAEKmM,EAAY,MAAMjM,EAAQ,eAAgB,EAChD,QAAQ,IAAI,eAAgBiM,EAAU,SAAQ,CAAE,EAChD,MAAMC,EAAQ,CAAE,EAEhB,QAAShd,EAAI,EAAGA,EAAI+c,EAAW/c,IAC7B,GAAI,CACF,MAAM+a,EAAc,MAAMjK,EAAQ,SAAS9Q,CAAC,EAC5C,QAAQ,IAAI,iBAAiBA,CAAC,IAAK+a,CAAW,EAE9C,MAAMkC,EAAO,IAAI/f,EACf6d,EACAyB,GACA,IAAI5L,GAAuB,OAAO,QAAQ,CAC3C,EAEK,CAACsM,EAAQC,EAAQ5C,CAAQ,EAAI,MAAM,QAAQ,IAAI,CACnD0C,EAAK,OAAQ,EACbA,EAAK,OAAQ,EACbA,EAAK,YAAW,CAC5B,CAAW,EAED,QAAQ,IAAI,QAAQjd,CAAC,WAAYkd,EAAQC,CAAM,GAE3CD,EAAO,gBAAkB7f,EAAa,YAAa,GACnD8f,EAAO,YAAW,IAAO9f,EAAa,YAAW,KACnD2f,EAAM,KAAK,CACT,QAASjC,EACT,OAAAmC,EACA,OAAAC,EACA,SAAA5C,CACd,CAAa,EACD,QAAQ,IAAI,uBAAwBQ,CAAW,EAElD,OAAQqC,EAAW,CAClB,QAAQ,MAAM,yBAAyBpd,CAAC,IAAKod,CAAS,EAEtD,QACV,CAGM,eAAQ,IAAI,eAAgBJ,EAAM,MAAM,EACjCA,CACR,OAAQ5oB,EAAO,CACd,cAAQ,MAAM,uBAAwBA,CAAK,EACrCA,CACZ,CACA,CAGE,MAAM,gBAAgBipB,EAAQC,EAAQ,CACpC,GAAI,CACF,MAAMlkB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAQ3D,OADoB,MANJ,IAAI1T,EAClBod,GAAkB,QAClBgC,GACAljB,CACD,EAEiC,QAAQikB,EAAQC,CAAM,IACjC,4CACxB,OAAQlpB,EAAO,CACd,cAAQ,MAAM,iCAAkCA,CAAK,EAC/CA,CACZ,CACA,CAGE,MAAM,WACJomB,EACAC,EACA8C,EACAC,EACA,CACA,GAAI,CACF,MAAMpkB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDD,EAAS,MAAMvX,EAAS,UAAW,EACnCsV,EAAU,MAAMiC,EAAO,WAAY,EAGnC8M,EAAcjD,EAAc,YAAW,IAAO,MAC9CkD,EAAcjD,EAAc,YAAW,IAAO,MAG9CkD,EAAeF,EAAcnD,GAAkB,KAAOE,EACtDoD,EAAeF,EAAcpD,GAAkB,KAAOG,EAGtD,CAACyC,EAAQC,CAAM,EAAIQ,EAAa,YAAW,EAAKC,EAAa,YAAW,EAC1E,CAACD,EAAcC,CAAY,EAC3B,CAACA,EAAcD,CAAY,EAGzB,CAACE,EAASC,CAAO,EAAIH,EAAa,YAAW,EAAKC,EAAa,YAAW,EAC5E,CAACL,EAAgBC,CAAc,EAC/B,CAACA,EAAgBD,CAAc,EAG7BzM,EAAU,IAAI5T,EAAgBod,GAAkB,QAASgC,GAAa3L,CAAM,EAC5EoN,EAAS,IAAI7gB,EAAgBod,GAAkB,OAAQiC,GAAY5L,CAAM,EAGzEqN,EAAkBP,EAA+D,KAAjD,IAAIvgB,EAAgBggB,EAAQT,GAAW9L,CAAM,EAC7EsN,EAAkBP,EAA+D,KAAjD,IAAIxgB,EAAgBigB,EAAQV,GAAW9L,CAAM,EAGnF,QAAQ,IAAI,4BAA4B,EACxC,MAAMuN,EAAe,MAAMpN,EAAQ,QAAQoM,EAAQC,CAAM,EAGzD,GAFA,QAAQ,IAAI,yBAA0Be,CAAY,EAE9CA,IAAiB,6CACnB,MAAM,IAAI,MAAM,qBAAqB,EAKvC,MAAMC,GADU,MAAM/kB,EAAS,WAAY,GAClB,SAAW,KAAO,KAGrCglB,EAAcC,GACdC,EAAmB,CAAE,EAG3B,GAAI,CAACb,GAAe,CAACC,EAAa,CAChC,KAAM,CAACa,EAAYC,CAAU,EAAI,MAAM,QAAQ,IAAI,CACjDR,EAAe,UAAUtP,EAAS4L,GAAkB,MAAM,EAC1D2D,EAAe,UAAUvP,EAAS4L,GAAkB,MAAM,CACpE,CAAS,EAGK,CAACmE,EAAMC,CAAI,EAAI,MAAM,QAAQ,IAAI,CACrCV,EAAe,QAAQ,YAAY1D,GAAkB,OAAQ8D,CAAW,EACxEH,EAAe,QAAQ,YAAY3D,GAAkB,OAAQ8D,CAAW,CAClF,CAAS,EAAE,MAAMplB,GAAK,CAAC,QAAS,OAAO,CAAC,EAE5BulB,EAAaV,IACf,QAAQ,IAAI,qBAAqB,EACjCjpB,EAAM,QAAQ,2BAA4B,CAAE,GAAI,UAAU,CAAE,EAC5D0pB,EAAiB,KACfN,EAAe,QAAQ1D,GAAkB,OAAQ8D,EAAa,CAC5D,SAAUK,EAAO,KAAO,KACxB,SAAAN,CACd,CAAa,EAAE,KAAKQ,GAAMA,EAAG,KAAM,CAAA,EAAE,KAAK,IAAM,CAClC/pB,EAAM,QAAQ,uBAAwB,CAAE,GAAI,UAAU,CAAE,CACtE,CAAa,EAAE,MAAMR,GAAS,CAChBQ,MAAAA,EAAM,MAAM,kCAAoCR,EAAM,QAAS,CAAE,GAAI,WAAY,EAC3EA,CACP,CAAA,CACF,GAGCoqB,EAAaV,IACf,QAAQ,IAAI,qBAAqB,EACjClpB,EAAM,QAAQ,4BAA6B,CAAE,GAAI,UAAU,CAAE,EAC7D0pB,EAAiB,KACfL,EAAe,QAAQ3D,GAAkB,OAAQ8D,EAAa,CAC5D,SAAUM,EAAO,KAAO,KACxB,SAAAP,CACd,CAAa,EAAE,KAAKQ,GAAMA,EAAG,KAAM,CAAA,EAAE,KAAK,IAAM,CAClC/pB,EAAM,QAAQ,wBAAyB,CAAE,GAAI,UAAU,CAAE,CACvE,CAAa,EAAE,MAAMR,GAAS,CAChBQ,MAAAA,EAAM,MAAM,mCAAqCR,EAAM,QAAS,CAAE,GAAI,WAAY,EAC5EA,CACP,CAAA,CACF,EAEX,SAAkBqpB,GAqBL,GAAI,CAACC,EAAa,CAEvB,MAAMc,EAAa,MAAMP,EAAe,UAAUvP,EAAS4L,GAAkB,MAAM,EAC7EoE,EAAO,MAAMT,EAAe,QAAQ,YAAY3D,GAAkB,OAAQ8D,CAAW,EACxF,MAAM,IAAM,OAAO,EAElBI,EAAaV,IACf,QAAQ,IAAI,qBAAqB,EACjClpB,EAAM,QAAQ,qBAAsB,CAAE,GAAI,UAAU,CAAE,EACtD0pB,EAAiB,KACfL,EAAe,QAAQ3D,GAAkB,OAAQ8D,EAAa,CAC5D,SAAUM,EAAO,KAAO,KACxB,SAAAP,CACd,CAAa,EAAE,KAAKQ,GAAMA,EAAG,KAAM,CAAA,EAAE,KAAK,IAAM,CAClC/pB,EAAM,QAAQ,iBAAkB,CAAE,GAAI,UAAU,CAAE,CAChE,CAAa,EAAE,MAAMR,GAAS,CAChBQ,MAAAA,EAAM,MAAM,4BAA8BR,EAAM,QAAS,CAAE,GAAI,WAAY,EACrEA,CACP,CAAA,CACF,EAEX,MA1C+B,CAEvB,MAAMmqB,EAAa,MAAMP,EAAe,UAAUtP,EAAS4L,GAAkB,MAAM,EAC7EmE,EAAO,MAAMT,EAAe,QAAQ,YAAY1D,GAAkB,OAAQ8D,CAAW,EACxF,MAAM,IAAM,OAAO,EAElBG,EAAaV,IACf,QAAQ,IAAI,qBAAqB,EACjCjpB,EAAM,QAAQ,qBAAsB,CAAE,GAAI,UAAU,CAAE,EACtD0pB,EAAiB,KACfN,EAAe,QAAQ1D,GAAkB,OAAQ8D,EAAa,CAC5D,SAAUK,EAAO,KAAO,KACxB,SAAAN,CACd,CAAa,EAAE,KAAKQ,GAAMA,EAAG,KAAM,CAAA,EAAE,KAAK,IAAM,CAClC/pB,EAAM,QAAQ,iBAAkB,CAAE,GAAI,UAAU,CAAE,CAChE,CAAa,EAAE,MAAMR,GAAS,CAChBQ,MAAAA,EAAM,MAAM,4BAA8BR,EAAM,QAAS,CAAE,GAAI,WAAY,EACrEA,CACP,CAAA,CACF,EAEX,CAwBM,GAAIkqB,EAAiB,OAAS,EAAG,CAC/B,MAAM,QAAQ,IAAIA,CAAgB,EAClC,QAAQ,IAAI,qBAAqB,EAGjC,MAAMM,EAAkB,MAAM,QAAQ,IAAI,CACvCnB,EAA4EW,EAA9DJ,EAAe,UAAUtP,EAAS4L,GAAkB,MAAM,EACxEoD,EAA4EU,EAA9DH,EAAe,UAAUvP,EAAS4L,GAAkB,MAAM,CACnF,CAAS,EAED,GAAIsE,EAAgB,CAAC,EAAIf,GAAWe,EAAgB,CAAC,EAAId,EACvD,MAAM,IAAI,MAAM,4CAA4C,CAEtE,CAGM,QAAQ,IAAI,kBAAkB,EAC9BlpB,EAAM,QAAQ,6BAA8B,CAAE,GAAI,aAAa,CAAE,EAGjE,MAAMiqB,EAAgB,MAAM/N,EAAQ,WAAW,YAAYoM,EAAQC,CAAM,EACtE,MAAM,IAAM,QAAQ,EAEjB2B,EAAe,MAAMhO,EAAQ,WAAWoM,EAAQC,EAAQ,CAC5D,SAAU0B,EAAgB,KAAO,KACjC,SAAAV,CACR,CAAO,EAED,QAAQ,IAAI,gCAAiCW,EAAa,IAAI,EAC9D,MAAMC,EAAoB,MAAMD,EAAa,KAAM,EACnD,QAAQ,IAAI,mCAAmC,EAC/ClqB,EAAM,QAAQ,6BAA8B,CAAE,GAAI,aAAa,CAAE,EAGjE,MAAMoqB,EAAmBD,EAAkB,KAAK,KAAK3N,GAAO,CAC1D,GAAI,CAKF,OAJkBN,EAAQ,UAAU,SAAS,CAC3C,OAAQM,EAAI,OACZ,KAAMA,EAAI,IACtB,CAAW,EACgB,OAAS,aAC3B,MAAW,CACV,MAAO,EACjB,CACA,CAAO,EAED,GAAI,CAAC4N,EACH,MAAM,IAAI,MAAM,qDAAqD,EAOvE,MAAMjE,EAJYjK,EAAQ,UAAU,SAAS,CAC3C,OAAQkO,EAAiB,OACzB,KAAMA,EAAiB,IAC/B,CAAO,EAC6B,KAAK,CAAC,EACpC,QAAQ,IAAI,wBAAyBjE,CAAW,EAGhD,MAAM,IAAI,QAAQkE,GAAW,WAAWA,EAAS,GAAI,CAAC,EAGtD,MAAMC,EAAcrB,EAAU,IAAO,KAC/BsB,EAAcrB,EAAU,IAAO,KAE/BsB,EAAW,OAAO,KAAK,MAAM,KAAK,IAAG,EAAK,GAAI,EAAI,GAAK,EAAE,EAG/D,IAAIC,EAEJ,GADAzqB,EAAM,QAAQ,8BAA+B,CAAE,GAAI,eAAe,CAAE,EAChE6oB,GAAeC,EAAa,CAE9B,MAAMrgB,EAAeogB,EAAcN,EAASD,EACtCoC,EAAY7B,EAAcI,EAAUC,EACpCyB,EAAc9B,EAAcK,EAAUD,EACtC2B,EAAe/B,EAAcyB,EAAaC,EAC1CM,EAAiBhC,EAAc0B,EAAaD,EAElD,QAAQ,IAAI,oCAAqC,CAC/C,MAAO7hB,EACP,UAAWiiB,EAAU,SAAU,EAC/B,YAAaC,EAAY,SAAU,EACnC,aAAcC,EAAa,SAAU,EACrC,eAAgBC,EAAe,SAAQ,CACjD,CAAS,EAEDJ,EAAiB,MAAMtB,EAAO,gBAC5B1gB,EACAkiB,EACAE,EACAD,EACA9Q,EACA0Q,EACA,CACE,MAAOE,EACP,SAAU,IACV,SAAAnB,CACZ,CACS,CACT,MAEQkB,EAAiB,MAAMtB,EAAO,aAC5Bb,EACAC,EACAU,EACAC,EACAoB,EACAC,EACAzQ,EACA0Q,EACA,CACE,SAAU,IACV,SAAAjB,CACZ,CACS,EAGH,QAAQ,IAAI,kCAAmCkB,EAAe,IAAI,EAClE,MAAMK,EAAsB,MAAML,EAAe,KAAM,EACvD,eAAQ,IAAI,qCAAqC,EACjDzqB,EAAM,QAAQ,wCAAyC,CAAE,GAAI,eAAe,CAAE,EAEvE,CACL,YAAAmmB,EACA,kBAAAgE,EACA,oBAAAW,CACD,CACF,OAAQtrB,EAAO,CAEd,MADA,QAAQ,MAAM,0BAA2BA,CAAK,EAC1CA,EAAM,QAAQ,SAAS,uBAAuB,GAChDQ,EAAM,MAAM,6DAA6D,EACnE,IAAI,MAAM,6DAA6D,GACpER,EAAM,QAAQ,SAAS,uBAAuB,GACvDQ,EAAM,MAAM,6DAA6D,EACnE,IAAI,MAAM,6DAA6D,GACpER,EAAM,QAAQ,SAAS,sBAAsB,GACtDQ,EAAM,MAAM,kEAAkE,EACxE,IAAI,MAAM,kEAAkE,IAEpFA,EAAM,MAAMR,EAAM,OAAO,EACnBA,EACZ,CACA,CAGE,MAAM,yBACJurB,EACAC,EACArqB,EACA2W,EACAkT,EAAW,OAAO,KAAK,MAAM,KAAK,IAAG,EAAK,GAAI,EAAI,GAAK,EAAE,EACzD,CACA,GAAI,CAEF,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,qBAAqB,CAAE,EAG/D,MAAMzO,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAS,EAAG,MAAMxc,GAAS,CAEvD,MADA,QAAQ,MAAM,wBAAyBA,CAAK,EACxCA,EAAM,QAAQ,SAAS,QAAQ,EAC3B,IAAI,MAAM,wEAAwE,EAEpFA,CACd,CAAO,EAGK2pB,EAAS,IAAI7gB,EACjBod,GAAkB,OAClBiC,GACA5L,CACD,EAEKkP,EAAgB,IAAI3iB,EACxB3H,EAAK,CAAC,EACNknB,GACA9L,CACD,EAGKmP,EAAU,MAAMD,EAAc,UAAU3T,CAAE,EAChD,GAAI4T,EAAUH,EACZ,MAAM,IAAI,MAAM,yCAAyC9E,GAAmB8E,EAAU,MAAME,EAAc,SAAQ,CAAE,CAAC,gBAAgBhF,GAAmBiF,EAAS,MAAMD,EAAc,SAAQ,CAAE,CAAC,EAAE,EAIpM,MAAME,EAAmB,MAAMF,EAAc,UAAU3T,EAAIoO,GAAkB,MAAM,EAKnF,GAJA,QAAQ,IAAI,qBAAsByF,EAAiB,SAAQ,CAAE,EAC7D,QAAQ,IAAI,mBAAoBJ,EAAS,SAAQ,CAAE,EAG/CI,EAAmBJ,EAAU,CAC/B,QAAQ,IAAI,6BAA6B,EACzC,GAAI,CAEEI,EAAmB,GAErB,MADgB,MAAMF,EAAc,QAAQvF,GAAkB,OAAQ,CAAC,GACzD,KAAM,EAItB,MADkB,MAAMuF,EAAc,QAAQvF,GAAkB,OAAQqF,CAAQ,GAChE,KAAM,EACtB,QAAQ,IAAI,gBAAgB,CAC7B,OAAQK,EAAc,CAErB,MADA,QAAQ,MAAM,yBAA0BA,CAAY,EAChDA,EAAa,QAAQ,SAAS,QAAQ,EAClC,IAAI,MAAM,wEAAwE,EAEpFA,CAChB,CACA,MACQ,QAAQ,IAAI,gDAAgD,EAK9D,GADuB,MAAMH,EAAc,UAAU3T,EAAIoO,GAAkB,MAAM,EAC5DqF,EACnB,MAAM,IAAI,MAAM,kCAAkC,EAGpD,QAAQ,IAAI,8BAA+B,CACzC,SAAUA,EAAS,SAAU,EAC7B,aAAcC,EAAa,SAAU,EACrC,KAAArqB,EACA,GAAA2W,EACA,SAAUkT,EAAS,SAAQ,CACnC,CAAO,EAGD,GAAI,CACF,MAAMT,EAAK,MAAMZ,EAAO,yBACtB4B,EACAC,EACArqB,EACA2W,EACAkT,EACA,CAAE,SAAU,GAAO,CACpB,EAED,QAAQ,IAAI,oBAAqBT,EAAG,IAAI,EACxC,MAAMzN,EAAU,MAAMyN,EAAG,KAAM,EAC/B,eAAQ,IAAI,gBAAiBzN,CAAO,EAE7BA,CACR,OAAQ+O,EAAW,CAElB,MADA,QAAQ,MAAM,wBAAyBA,CAAS,EAC5CA,EAAU,QAAQ,SAAS,QAAQ,EAC/B,IAAI,MAAM,wEAAwE,EAEpFA,CACd,CACK,OAAQ7rB,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACZ,CACA,CAGE,MAAM,aACJipB,EACAC,EACA4C,EACAC,EACAC,EACAC,EACAnU,EACAkT,EAAW,OAAO,KAAK,MAAM,KAAK,MAAQ,GAAI,EAAI,GAAK,EAAE,EACzD,CACA,GAAI,CACF,MAAMhmB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDD,EAAS,MAAMvX,EAAS,UAAW,EAInC+kB,GADU,MAAM/kB,EAAS,WAAY,GAClB,SAAW,KAAO,KAErC2kB,EAAS,IAAI7gB,EACjBod,GAAkB,OAClBiC,GACA5L,CACD,EAEK2P,EAAiB,IAAIpjB,EAAgBmgB,EAAQZ,GAAW9L,CAAM,EAC9D4P,EAAiB,IAAIrjB,EAAgBogB,EAAQb,GAAW9L,CAAM,EAG9D,CAAC6P,EAAWC,CAAS,EAAI,MAAM,QAAQ,IAAI,CAC/CH,EAAe,SAAU,EACzBC,EAAe,SAAQ,CAC/B,CAAO,EAED,QAAQ,IAAI,iBAAkB,CAC5B,OAAQ,CACN,QAASlD,EACT,SAAUmD,EACV,cAAe3F,GAAmBqF,EAAgBM,CAAS,CAC5D,EACD,OAAQ,CACN,QAASlD,EACT,SAAUmD,EACV,cAAe5F,GAAmBsF,EAAgBM,CAAS,CACrE,CACA,CAAO,EAGD,QAAQ,IAAI,uBAAuB,EACnC,MAAM5D,EAAW,MAAM,KAAK,YAAYQ,EAAQC,CAAM,EAEtD,IAAIoD,EAAeR,EACfS,EAAeR,EAEnB,GAAItD,EAAU,CAEZ,MAAMjC,EAAWiC,EAAS,SACpB/B,EAAW+B,EAAS,SAE1B,GAAIjC,EAAW,GAAKE,EAAW,EAO7B,GANA,QAAQ,IAAI,yBAA0B,CACpC,SAAUD,GAAmBD,EAAUiC,EAAS,OAAO,QAAQ,EAC/D,SAAUhC,GAAmBC,EAAU+B,EAAS,OAAO,QAAQ,EAC/D,MAAO,OAAO/B,CAAQ,EAAI,OAAOF,CAAQ,CACrD,CAAW,EAEGyC,EAAO,gBAAkBR,EAAS,OAAO,QAAQ,cAAe,CAClE,MAAM+D,EAAYV,EAAiBpF,EAAYF,EAC/C,QAAQ,IAAI,4CAA6C,CACvD,SAAUC,GAAmB+F,EAAUH,CAAS,EAChD,UAAW5F,GAAmBsF,EAAgBM,CAAS,CACrE,CAAa,EAEGG,EAAWT,GACbQ,EAAeR,EACfO,EAAgBP,EAAiBvF,EAAYE,EAC7C,QAAQ,IAAI,yCAAyC,IAErD6F,EAAeC,EACf,QAAQ,IAAI,6CAA6C,EAEvE,KAAiB,CACL,MAAMA,EAAYV,EAAiBtF,EAAYE,EAC/C,QAAQ,IAAI,4CAA6C,CACvD,SAAUD,GAAmB+F,EAAUH,CAAS,EAChD,UAAW5F,GAAmBsF,EAAgBM,CAAS,CACrE,CAAa,EAEGG,EAAWT,GACbQ,EAAeR,EACfO,EAAgBP,EAAiBrF,EAAYF,EAC7C,QAAQ,IAAI,yCAAyC,IAErD+F,EAAeC,EACf,QAAQ,IAAI,6CAA6C,EAEvE,CAEA,CAGM,KAAM,CAACC,EAAUC,CAAQ,EAAI,MAAM,QAAQ,IAAI,CAC7CR,EAAe,UAAUpU,CAAE,EAC3BqU,EAAe,UAAUrU,CAAE,CACnC,CAAO,EAOD,GALA,QAAQ,IAAI,kBAAmB,CAC7B,OAAQ2O,GAAmBgG,EAAUL,CAAS,EAC9C,OAAQ3F,GAAmBiG,EAAUL,CAAS,CACtD,CAAO,EAEGI,EAAWH,EACb,MAAM,IAAI,MAAM,+CAA+C7F,GAAmB6F,EAAcF,CAAS,CAAC,gBAAgB3F,GAAmBgG,EAAUL,CAAS,CAAC,EAAE,EAGrK,GAAIM,EAAWH,EACb,MAAM,IAAI,MAAM,+CAA+C9F,GAAmB8F,EAAcF,CAAS,CAAC,gBAAgB5F,GAAmBiG,EAAUL,CAAS,CAAC,EAAE,EAIrK,MAAMM,EAAoB,IACpBC,EAAmBN,EAAeK,EAAqB,KACvDE,EAAmBN,EAAeI,EAAqB,KAE7D,QAAQ,IAAI,iBAAkB,CAC5B,OAAQ,CACN,QAASlG,GAAmB6F,EAAcF,CAAS,EACnD,QAAS3F,GAAmBmG,EAAiBR,CAAS,CACvD,EACD,OAAQ,CACN,QAAS3F,GAAmB8F,EAAcF,CAAS,EACnD,QAAS5F,GAAmBoG,EAAiBR,CAAS,CAChE,CACA,CAAO,EAGD,QAAQ,IAAI,wBAAwB,EACpC,KAAM,CAACS,EAAYC,CAAU,EAAI,MAAM,QAAQ,IAAI,CACjDb,EAAe,UAAUpU,EAAIoO,GAAkB,MAAM,EACrDiG,EAAe,UAAUrU,EAAIoO,GAAkB,MAAM,CAC7D,CAAO,EAED,QAAQ,IAAI,sBAAuB,CACjC,OAAQO,GAAmBqG,EAAYV,CAAS,EAChD,OAAQ3F,GAAmBsG,EAAYV,CAAS,CACxD,CAAO,EAED,MAAMrC,EAAcC,GACdC,EAAmB,CAAE,EA0C3B,GAvCI4C,EAAaR,IACf,QAAQ,IAAI,sBAAsB,EAClC9rB,EAAM,QAAQ,2BAA4B,CAAE,GAAI,WAAW,CAAE,EAC7D0pB,EAAiB,KACfgC,EAAe,QAAQhG,GAAkB,OAAQ8D,EAAa,CAC5D,SAAU,IACV,SAAAD,CACD,CAAA,EACE,KAAKQ,GAAMA,EAAG,KAAM,CAAA,EACpB,KAAK,IAAM,CACV/pB,EAAM,QAAQ,uBAAwB,CAAE,GAAI,WAAW,CAAE,CAC1D,CAAA,EACA,MAAMR,GAAS,CACdQ,MAAAA,EAAM,MAAM,gCAAiC,CAAE,GAAI,WAAW,CAAE,EAC1DR,CACP,CAAA,CACJ,GAGC+sB,EAAaR,IACf,QAAQ,IAAI,sBAAsB,EAClC/rB,EAAM,QAAQ,4BAA6B,CAAE,GAAI,WAAW,CAAE,EAC9D0pB,EAAiB,KACfiC,EAAe,QAAQjG,GAAkB,OAAQ8D,EAAa,CAC5D,SAAU,IACV,SAAAD,CACD,CAAA,EACE,KAAKQ,GAAMA,EAAG,KAAM,CAAA,EACpB,KAAK,IAAM,CACV/pB,EAAM,QAAQ,wBAAyB,CAAE,GAAI,WAAW,CAAE,CAC3D,CAAA,EACA,MAAMR,GAAS,CACdQ,MAAAA,EAAM,MAAM,iCAAkC,CAAE,GAAI,WAAW,CAAE,EAC3DR,CACP,CAAA,CACJ,GAICkqB,EAAiB,OAAS,EAAG,CAC/B,MAAM,QAAQ,IAAIA,CAAgB,EAClC,QAAQ,IAAI,yBAAyB,EAGrC,KAAM,CAAC8C,EAAiBC,CAAe,EAAI,MAAM,QAAQ,IAAI,CAC3Df,EAAe,UAAUpU,EAAIoO,GAAkB,MAAM,EACrDiG,EAAe,UAAUrU,EAAIoO,GAAkB,MAAM,CAC/D,CAAS,EAOD,GALA,QAAQ,IAAI,oBAAqB,CAC/B,OAAQO,GAAmBuG,EAAiBZ,CAAS,EACrD,OAAQ3F,GAAmBwG,EAAiBZ,CAAS,CAC/D,CAAS,EAEGW,EAAkBV,GAAgBW,EAAkBV,EACtD,MAAM,IAAI,MAAM,4CAA4C,CAEtE,CAEM,QAAQ,IAAI,oCAAqC,CAC/C,OAAAtD,EACA,OAAAC,EACA,eAAgBzC,GAAmB6F,EAAcF,CAAS,EAC1D,eAAgB3F,GAAmB8F,EAAcF,CAAS,EAC1D,WAAY5F,GAAmBmG,EAAiBR,CAAS,EACzD,WAAY3F,GAAmBoG,EAAiBR,CAAS,CACjE,CAAO,EAGD,MAAM9B,EAAK,MAAMZ,EAAO,aACtBV,EACAC,EACAoD,EACAC,EACAK,EACAC,EACA/U,EACAkT,EACA,CACE,SAAU,IACV,SAAAjB,CACV,CACO,EAED,QAAQ,IAAI,6BAA8BQ,EAAG,IAAI,EACjD,MAAMzN,EAAU,MAAMyN,EAAG,KAAM,EAC/B,eAAQ,IAAI,yBAA0BzN,CAAO,EAEtCA,CACR,OAAQ9c,EAAO,CAId,GAHA,QAAQ,MAAM,0BAA2BA,CAAK,EAG1CA,EAAM,QAAQ,SAAS,uBAAuB,EAAG,CACnD,MAAMktB,EAAe,qHACrB1sB,MAAAA,EAAM,MAAM0sB,CAAY,EAClB,IAAI,MAAMA,CAAY,CAC7B,SAAUltB,EAAM,QAAQ,SAAS,uBAAuB,EAAG,CAC1D,MAAMktB,EAAe,sHACrB1sB,MAAAA,EAAM,MAAM0sB,CAAY,EAClB,IAAI,MAAMA,CAAY,CAC7B,SAAUltB,EAAM,QAAQ,SAAS,sBAAsB,EAAG,CACzD,MAAMktB,EAAe,mEACrB1sB,MAAAA,EAAM,MAAM0sB,CAAY,EAClB,IAAI,MAAMA,CAAY,CACpC,CAEM1sB,MAAAA,EAAM,MAAMR,EAAM,OAAO,EACnBA,CACZ,CACA,CAGE,MAAM,YAAYipB,EAAQC,EAAQ,CAChC,GAAI,CACF,MAAMlkB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAOrDmK,EAAc,MANJ,IAAI7d,EAClBod,GAAkB,QAClBgC,GACAljB,CACD,EAEiC,QAAQikB,EAAQC,CAAM,EACxD,GAAIvC,IAAgB,6CAClB,OAAO,KAGT,MAAMkC,EAAO,IAAI/f,EACf6d,EACAyB,GACApjB,CACD,EAGK,CAAC8jB,EAAQC,EAAQ5C,CAAQ,EAAI,MAAM,QAAQ,IAAI,CACnD0C,EAAK,OAAQ,EACbA,EAAK,OAAQ,EACbA,EAAK,YAAW,CACxB,CAAO,EAGKe,EAAiB,IAAI9gB,EAAgBggB,EAAQT,GAAWrjB,CAAQ,EAChE6kB,EAAiB,IAAI/gB,EAAgBigB,EAAQV,GAAWrjB,CAAQ,EAEhE,CACJmoB,EACA7G,EACA8G,EACA7G,CACR,EAAU,MAAM,QAAQ,IAAI,CACpBqD,EAAe,OAAQ,EACvBA,EAAe,SAAU,EACzBC,EAAe,OAAQ,EACvBA,EAAe,SAAQ,CAC/B,CAAO,EAED,MAAO,CACL,YAAAlD,EACA,OAAQ,CACN,QAASmC,EACT,OAAQqE,EACR,SAAU7G,CACX,EACD,OAAQ,CACN,QAASyC,EACT,OAAQqE,EACR,SAAU7G,CACX,EACD,SAAUJ,EAAS,CAAC,EACpB,SAAUA,EAAS,CAAC,CACrB,CACF,OAAQnmB,EAAO,CACd,cAAQ,MAAM,2BAA4BA,CAAK,EACzCA,CACZ,CACA,CAGE,MAAM,aAAaurB,EAAUpqB,EAAM,CACjC,GAAI,CACF,MAAM6D,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDmN,EAAS,IAAI7gB,EACjBod,GAAkB,OAClBiC,GACAnjB,CACD,EAGKqoB,EAAY,CAAC,GAAGlsB,CAAI,EACtBksB,EAAU,CAAC,EAAE,YAAW,IAAO,QACjCA,EAAU,CAAC,EAAInH,GAAkB,MAGnC,MAAMoH,EAAU,MAAM3D,EAAO,cAAc4B,EAAU8B,CAAS,EAC9D,OAAOC,EAAQA,EAAQ,OAAS,CAAC,CAClC,OAAQttB,EAAO,CACd,cAAQ,MAAM,4BAA6BA,CAAK,EAC1CA,CACZ,CACA,CAGE,MAAM,aAAaiJ,EAAc,CAC/B,GAAI,CACF,MAAMjE,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDiP,EAAgB,IAAI3iB,EAAgBG,EAAcof,GAAWrjB,CAAQ,EAGrE,CAACiO,EAAQsa,EAAMlkB,CAAQ,EAAI,MAAM,QAAQ,IAAI,CACjDoiB,EAAc,OAAM,EAAG,MAAM,IAAM,SAAS,EAC5CA,EAAc,KAAI,EAAG,MAAM,IAAM,eAAe,EAChDA,EAAc,SAAQ,EAAG,MAAM,IAAM,EAAE,CAC/C,CAAO,EAGD,OAAIxiB,EAAa,YAAa,IAAKid,GAAkB,KAAK,YAAW,EAC5D,CACL,OAAQ,OACR,KAAM,gBACN,SAAU,GACV,KAAM,UACP,EAGCjd,EAAa,YAAa,IAAKid,GAAkB,KAAK,YAAW,EAC5D,CACL,OAAQ,QACR,KAAM,YACN,SAAU,EACV,KAAM,WACP,EAGCjd,EAAa,YAAa,IAAKid,GAAkB,KAAK,YAAW,EAC5D,CACL,OAAQ,OACR,KAAM,WACN,SAAU,EACV,KAAM,WACP,EAGI,CACL,OAAQjT,GAAU,UAClB,KAAMsa,GAAQ,gBACd,SAAUlkB,GAAY,EACvB,CACF,OAAQrJ,EAAO,CACd,eAAQ,MAAM,4BAA6BA,CAAK,EAEzC,CACL,OAAQ,UACR,KAAM,gBACN,SAAU,EACX,CACP,CACA,CAGE,MAAM,qBAAqB2mB,EAAa,CACtC,GAAI,CACF,MAAM3hB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDoK,EAAe,IAAI9d,EAAgB6d,EAAayB,GAAUpjB,CAAQ,EAGlE,CAACohB,EAAeC,CAAa,EAAI,MAAM,QAAQ,IAAI,CACvDO,EAAa,OAAQ,EACrBA,EAAa,OAAM,CAC3B,CAAO,EAGKgD,EAAiB,IAAI9gB,EAAgBsd,EAAeiC,GAAWrjB,CAAQ,EACvE6kB,EAAiB,IAAI/gB,EAAgBud,EAAegC,GAAWrjB,CAAQ,EAGvE,CAACmoB,EAAcC,EAAc9G,EAAgBC,EAAgBJ,CAAQ,EAAI,MAAM,QAAQ,IAAI,CAC/FyD,EAAe,OAAQ,EACvBC,EAAe,OAAQ,EACvBD,EAAe,SAAU,EACzBC,EAAe,SAAU,EACzBjD,EAAa,YAAW,CAChC,CAAO,EAGKqB,EAAa,MAAM,KAAK,cAAc,eAC1CtB,EACAC,EACAN,EACAC,CACD,EAED,eAAQ,IAAI,qBAAsB0B,CAAU,EAErC,CACL,YAAAtB,EACA,OAAQ,CACN,QAASP,EACT,OAAQ+G,EACR,SAAU7G,CACX,EACD,OAAQ,CACN,QAASD,EACT,OAAQ+G,EACR,SAAU7G,CACX,EACD,SAAU,CACR,SAAUJ,EAAS,CAAC,EACpB,SAAUA,EAAS,CAAC,EACpB,mBAAoBA,EAAS,CAAC,CAC/B,EACD,QAAS8B,CACV,CACF,OAAQjoB,EAAO,CACd,cAAQ,MAAM,2BAA4BA,CAAK,EACzCA,CACZ,CACA,CAGE,MAAM,sBACJurB,EACAC,EACArqB,EACA2W,EACAkT,EAAW,OAAO,KAAK,MAAM,KAAK,IAAG,EAAK,GAAI,EAAI,GAAK,EAAE,EACzD,CACA,GAAI,CAEF,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,qBAAqB,CAAE,EAG/D,MAAMzO,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAS,EAAG,MAAMxc,GAAS,CAEvD,MADA,QAAQ,MAAM,wBAAyBA,CAAK,EACxCA,EAAM,QAAQ,SAAS,QAAQ,EAC3B,IAAI,MAAM,wEAAwE,EAEpFA,CACd,CAAO,EAGD,GAAImB,EAAK,CAAC,EAAE,YAAa,IAAK+kB,GAAkB,KAAK,cACnD,MAAM,IAAI,MAAM,yCAAyC,EAI3D,MAAMyD,EAAS,IAAI7gB,EACjBod,GAAkB,OAClBiC,GACA5L,CACD,EAED,QAAQ,IAAI,kCAAmC,CAC7C,SAAUgP,EAAS,SAAU,EAC7B,aAAcC,EAAa,SAAU,EACrC,KAAArqB,EACA,GAAA2W,EACA,SAAUkT,EAAS,SAAQ,CACnC,CAAO,EAGD,MAAMT,EAAK,MAAMZ,EAAO,sBACtB6B,EACArqB,EACA2W,EACAkT,EACA,CACE,MAAOO,EACP,SAAU,GACpB,CACO,EAED,QAAQ,IAAI,oBAAqBhB,EAAG,IAAI,EACxC,MAAMzN,EAAU,MAAMyN,EAAG,KAAM,EAC/B,eAAQ,IAAI,gBAAiBzN,CAAO,EAE7BA,CACR,OAAQ9c,EAAO,CACd,cAAQ,MAAM,iCAAkCA,CAAK,EAC/CA,CACZ,CACA,CAGE,MAAM,yBACJurB,EACAC,EACArqB,EACA2W,EACAkT,EAAW,OAAO,KAAK,MAAM,KAAK,MAAQ,GAAI,EAAI,GAAK,EAAE,EACzD,CACA,GAAI,CACF,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,qBAAqB,CAAE,EAE/D,MAAMhmB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDD,EAAS,MAAMvX,EAAS,UAAW,EAEnC2kB,EAAS,IAAI7gB,EACjBod,GAAkB,OAClBiC,GACA5L,CACD,EAEKkP,EAAgB,IAAI3iB,EACxB3H,EAAK,CAAC,EACNknB,GACA9L,CACD,EAIKwN,GADU,MAAM/kB,EAAS,WAAY,GAClB,SAAW,KAAO,KAI3C,OADyB,MAAMymB,EAAc,UAAU3T,EAAIoO,GAAkB,MAAM,EAC5DqF,GASrB,MARkB,MAAME,EAAc,QACpCvF,GAAkB,OAClBqF,EACA,CACE,SAAU,IACV,SAAAxB,CACZ,CACS,GACe,KAAM,EAgBR,MAZL,MAAMJ,EAAO,yBACtB4B,EACAC,EACArqB,EACA2W,EACAkT,EACA,CACE,SAAU,KACV,SAAAjB,CACV,CACO,GAEwB,KAAM,CAEhC,OAAQ/pB,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACZ,CACA,CAGE,MAAM,aACJipB,EACAC,EACA4C,EACAC,EACAC,EACAC,EACAnU,EACAkT,EAAW,OAAO,KAAK,MAAM,KAAK,MAAQ,GAAI,EAAI,GAAK,EAAE,EACzD,CACA,GAAI,CACF,MAAMhmB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDD,EAAS,MAAMvX,EAAS,UAAW,EAInC+kB,GADU,MAAM/kB,EAAS,WAAY,GAClB,SAAW,KAAO,KAErC2kB,EAAS,IAAI7gB,EACjBod,GAAkB,OAClBiC,GACA5L,CACD,EAEK2P,EAAiB,IAAIpjB,EAAgBmgB,EAAQZ,GAAW9L,CAAM,EAC9D4P,EAAiB,IAAIrjB,EAAgBogB,EAAQb,GAAW9L,CAAM,EAG9DiR,EAAiB,CACrB,SAAU,IACV,SAAAzD,CACD,EACK0D,EAAiB,CACrB,SAAU,IACV,SAAA1D,CACD,EAGK+C,EAAa,MAAMZ,EAAe,UAAUpU,EAAIoO,GAAkB,MAAM,EACxE6G,EAAa,MAAMZ,EAAe,UAAUrU,EAAIoO,GAAkB,MAAM,EAE9E,OAAI4G,EAAahB,GAMf,MALmB,MAAMI,EAAe,QACtChG,GAAkB,OAClB4F,EACA0B,CACD,GACgB,KAAM,EAGrBT,EAAahB,GAMf,MALmB,MAAMI,EAAe,QACtCjG,GAAkB,OAClB6F,EACA0B,CACD,GACgB,KAAM,EAmBT,MAfL,MAAM9D,EAAO,aACtBV,EACAC,EACA4C,EACAC,EACAC,EACAC,EACAnU,EACAkT,EACA,CACE,SAAU,KACV,SAAAjB,CACV,CACO,GAEwB,KAAM,CAEhC,OAAQ/pB,EAAO,CACd,cAAQ,MAAM,0BAA2BA,CAAK,EACxCA,CACZ,CACA,CAGE,MAAM,sBACJurB,EACAC,EACArqB,EACA2W,EACAkT,EAAW,OAAO,KAAK,MAAM,KAAK,IAAG,EAAK,GAAI,EAAI,GAAK,EAAE,EACzD,CACA,GAAI,CAEF,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,qBAAqB,CAAE,EAE/D,MAAMhmB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDD,EAAS,MAAMvX,EAAS,UAAW,EAGzC,GAAI7D,EAAKA,EAAK,OAAS,CAAC,EAAE,YAAW,IAAO+kB,GAAkB,KAAK,cACjE,MAAM,IAAI,MAAM,uCAAuC,EAIzD,MAAMyD,EAAS,IAAI7gB,EACjBod,GAAkB,OAClBiC,GACA5L,CACD,EAEKkP,EAAgB,IAAI3iB,EACxB3H,EAAK,CAAC,EACNknB,GACA9L,CACD,EAGwB,MAAMkP,EAAc,UAAU3T,EAAIoO,GAAkB,MAAM,EAC5DqF,IACrB,QAAQ,IAAI,6BAA6B,EAEzC,MADkB,MAAME,EAAc,QAAQvF,GAAkB,OAAQqF,CAAQ,GAChE,KAAM,EACtB,QAAQ,IAAI,gBAAgB,GAG9B,QAAQ,IAAI,2CAA4C,CACtD,SAAUA,EAAS,SAAU,EAC7B,aAAcC,EAAa,SAAU,EACrC,KAAArqB,EACA,GAAA2W,EACA,SAAUkT,EAAS,SAAQ,CACnC,CAAO,EAID,MAAMjB,GADU,MAAM/kB,EAAS,WAAY,GAClB,SAAW,KAAO,KAGrCulB,EAAK,MAAMZ,EAAO,sBACtB4B,EACAC,EACArqB,EACA2W,EACAkT,EACA,CACE,SAAU,KACV,SAAAjB,CACV,CACO,EAED,QAAQ,IAAI,oBAAqBQ,EAAG,IAAI,EACxC,MAAMzN,EAAU,MAAMyN,EAAG,KAAM,EAC/B,eAAQ,IAAI,gBAAiBzN,CAAO,EAE7BA,CACR,OAAQ9c,EAAO,CACd,cAAQ,MAAM,iCAAkCA,CAAK,EAC/CA,CACZ,CACA,CAGE,MAAM,aAAc,CAClB,GAAI,CAIF,GAHA,QAAQ,IAAI,gCAAgC,EAGxC,KAAK,aAAc,GAAI,KAAK,UAAU,KAAO,EAC/C,eAAQ,IAAI,4BAA4B,EACjC,MAAM,KAAK,KAAK,UAAU,OAAM,CAAE,EAG3C,MAAMgF,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDE,EAAU,IAAI5T,EAClBod,GAAkB,QAClBgC,GACAljB,CACD,EAEK2jB,EAAY,MAAMjM,EAAQ,eAAgB,EAChD,QAAQ,IAAI,eAAgBiM,EAAU,SAAQ,CAAE,EAGhD,MAAM+E,EAAY,GACZC,EAAU,CAAE,EAClB,QAAS/hB,EAAI,EAAGA,EAAI+c,EAAW/c,GAAK8hB,EAAW,CAC7C,MAAME,EAAQ,CAAE,EAChB,QAASC,EAAI,EAAGA,EAAIH,GAAa9hB,EAAIiiB,EAAIlF,EAAWkF,IAClDD,EAAM,KAAKlR,EAAQ,SAAS9Q,EAAIiiB,CAAC,CAAC,EAEpCF,EAAQ,KAAK,QAAQ,IAAIC,CAAK,CAAC,CACvC,CAIM,MAAMhF,GADU,MAAM,QAAQ,IAAI+E,CAAO,GACnB,KAAM,EAG5B,OAAA/E,EAAM,QAAQjhB,GAAW,CACvB,KAAK,UAAU,IAAIA,EAAQ,YAAW,EAAIA,CAAO,CACzD,CAAO,EAED,QAAQ,IAAI,eAAgBihB,EAAM,MAAM,EAGxC,KAAK,gBAAkB,KAAK,IAAK,EACjC,KAAK,mBAAoB,EAElBA,CACR,OAAQ5oB,EAAO,CAGd,GAFA,QAAQ,MAAM,2BAA4BA,CAAK,EAE3C,KAAK,UAAU,KAAO,EACxB,eAAQ,IAAI,qCAAqC,EAC1C,MAAM,KAAK,KAAK,UAAU,OAAM,CAAE,EAE3C,MAAMA,CACZ,CACA,CAGE,MAAM,kBAAkB8tB,EAAe,CACrC,MAAMC,EAAgBD,EAAc,OAClCnmB,GAAW,CAAC,KAAK,gBAAkB,CAAC,KAAK,cAAc,IAAIA,EAAQ,YAAa,CAAA,CACjF,EAED,GAAIomB,EAAc,SAAW,EAC3B,eAAQ,IAAI,kCAAkC,EACvCD,EAAc,IAAInmB,GACvB,KAAK,cAAc,IAAIA,EAAQ,YAAa,CAAA,CAC7C,EAGH,QAAQ,IAAI,oBAAoBomB,EAAc,MAAM,iBAAiB,EACrE,MAAML,EAAY,GACZM,EAAU,CAAE,EAGZL,EAAU,CAAE,EAClB,QAAS/hB,EAAI,EAAGA,EAAImiB,EAAc,OAAQniB,GAAK8hB,EAAW,CACxD,MAAME,EAAQG,EAAc,MAAMniB,EAAGA,EAAI8hB,CAAS,EAClDC,EAAQ,KAAK,QAAQ,IAAIC,EAAM,IAAIjmB,GAAW,KAAK,qBAAqBA,CAAO,CAAC,CAAC,CAAC,CACxF,CAEI,MAAMsmB,EAAe,MAAM,QAAQ,IAAIN,CAAO,EAC9C,OAAAK,EAAQ,KAAK,GAAGC,EAAa,KAAI,CAAE,EAGnCD,EAAQ,QAAQvF,GAAY,CACtBA,GACF,KAAK,cAAc,IAAIA,EAAS,YAAY,YAAa,EAAEA,CAAQ,CAE3E,CAAK,EAGD,KAAK,mBAAoB,EAElBqF,EAAc,IAAInmB,GACvB,KAAK,cAAc,IAAIA,EAAQ,YAAa,CAAA,GAAK,IAClD,CACL,CAGE,MAAM,0BAA0BshB,EAAQC,EAAQ4C,EAAgB,CAC9D,GAAI,CACF,MAAMrD,EAAW,MAAM,KAAK,YAAYQ,EAAQC,CAAM,EAEtD,GAAI,CAACT,EAEH,eAAQ,IAAI,mDAAmD,EACxD,CACL,QAASqD,EACT,QAASA,EACT,WAAY,IACZ,UAAW,GACX,eAAgB,GACjB,EAIH,KAAM,CAAE,SAAAtF,EAAU,SAAAE,CAAQ,EAAK+B,EACzByF,EAAiBjF,EAAO,YAAW,IAAOR,EAAS,OAAO,QAAQ,YAAa,EAG/EzjB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrD0P,EAAiB,IAAIpjB,EAAgBmgB,EAAQZ,GAAWrjB,CAAQ,EAChEmnB,EAAiB,IAAIrjB,EAAgBogB,EAAQb,GAAWrjB,CAAQ,EAChE,CAAConB,EAAWC,CAAS,EAAI,MAAM,QAAQ,IAAI,CAC/CH,EAAe,SAAU,EACzBC,EAAe,SAAQ,CAC/B,CAAO,EAGD,IAAIgC,EACAC,EACAC,EAEAH,GACFC,EAAkBrC,EAAiBpF,EAAYF,EAC/C4H,EAAa3H,GAAmBC,EAAU2F,CAAS,EAAI5F,GAAmBD,EAAU4F,CAAS,EAC7FiC,EAAiB5H,GAAmBD,EAAU4F,CAAS,EAAI3F,GAAmBC,EAAU2F,CAAS,IAEjG8B,EAAkBrC,EAAiBtF,EAAYE,EAC/C0H,EAAa3H,GAAmBD,EAAU6F,CAAS,EAAI5F,GAAmBC,EAAU0F,CAAS,EAC7FiC,EAAiB5H,GAAmBC,EAAU0F,CAAS,EAAI3F,GAAmBD,EAAU6F,CAAS,GAInG,MAAMiC,EAAmB7H,GAAmBqF,EAAgBM,CAAS,EAC/DmC,EAAmB9H,GAAmB0H,EAAgB9B,CAAS,EAErE,eAAQ,IAAI,gCAAiC,CAC3C,QAASiC,EACT,QAASC,EACT,WAAYH,EAAW,SAAU,EACjC,eAAgBC,EAAe,SAAU,EACzC,aAAc,CACZ,SAAU5H,GAAmBD,EAAUiC,EAAS,OAAO,QAAQ,EAC/D,SAAUhC,GAAmBC,EAAU+B,EAAS,OAAO,QAAQ,CACzE,CACA,CAAO,EAEM,CACL,QAASqD,EACT,QAASqC,EACT,WAAYC,EAAW,SAAU,EACjC,UAAW,GACX,eAAgBC,EAAe,SAAU,EACzC,eAAAH,CACD,CACF,OAAQluB,EAAO,CACd,cAAQ,MAAM,uCAAwCA,CAAK,EACrDA,CACZ,CACA,CAGE,0BACEwuB,EACAC,EACAnI,EACAC,EACA,CACA,GAAI,CAEF,MAAMmI,EAAmBjI,GAAmB+H,EAAclI,CAAc,EAClEqI,EAAmBlI,GAAmBgI,EAAclI,CAAc,EAGlEkB,EAAc,OAAOkH,CAAgB,EAAI,OAAOD,CAAgB,EAChEE,EAAc,OAAOF,CAAgB,EAAI,OAAOC,CAAgB,EAEtE,MAAO,CACL,YAAalH,EAAY,SAAU,EACnC,YAAamH,EAAY,SAAQ,CAClC,CACF,OAAQ5uB,EAAO,CACd,cAAQ,MAAM,wCAAyCA,CAAK,EACtDA,CACZ,CACA,CAGE,MAAM,gBACJipB,EACAC,EACA2F,EACA7C,EACAC,EACAnU,EACAkT,EAAW,OAAO,KAAK,MAAM,KAAK,MAAQ,GAAI,EAAI,GAAK,EAAE,EACzD,CACA,GAAI,CACF,MAAMhmB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDD,EAAS,MAAMvX,EAAS,UAAW,EAInC+kB,GADU,MAAM/kB,EAAS,WAAY,GAClB,SAAW,KAAO,KAwB3C,OADgB,MAdL,MAPI,IAAI8D,EACjBod,GAAkB,OAClBiC,GACA5L,CACD,EAGuB,gBACtB0M,EACAC,EACA2F,EACA7C,EACAC,EACAnU,EACAkT,EACA,CACE,SAAU,KACV,SAAAjB,CACV,CACO,GAEwB,KAAM,CAEhC,OAAQ/pB,EAAO,CACd,cAAQ,MAAM,4BAA6BA,CAAK,EAC1CA,CACZ,CACA,CAGE,MAAM,eAAe2mB,EAAa,CAChC,GAAI,CACF,MAAM3hB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDqM,EAAO,IAAI/f,EAAgB6d,EAAayB,GAAUpjB,CAAQ,EAG1D,CAACohB,EAAeC,CAAa,EAAI,MAAM,QAAQ,IAAI,CACvDwC,EAAK,OAAQ,EACbA,EAAK,OAAM,CACnB,CAAO,EAEKe,EAAiB,IAAI9gB,EAAgBsd,EAAeiC,GAAWrjB,CAAQ,EACvE6kB,EAAiB,IAAI/gB,EAAgBud,EAAegC,GAAWrjB,CAAQ,EACvE,CAAC8pB,EAAWC,CAAS,EAAI,MAAM,QAAQ,IAAI,CAC/CnF,EAAe,SAAU,EACzBC,EAAe,SAAQ,CAC/B,CAAO,EAGD,OAAO,MAAM,KAAK,cAAc,eAC9BlD,EACAkC,EACAiG,EACAC,CACD,CACF,OAAQ/uB,EAAO,CACd,eAAQ,MAAM,8BAA+BA,CAAK,EAC3C,CACL,aAAc,EACd,eAAgB,EAChB,gBAAiB,EACjB,cAAe,EACf,gBAAiB,EACjB,iBAAkB,EAClB,cAAe,CAChB,CACP,CACA,CACA,CC3nDO,MAAMgvB,GAAkB,CAE7B,SAAU,CACR,QAAS,6CACT,SAAU,6CACV,SAAU,4CACX,EAED,EAAG,CACD,QAAS,6CACT,SAAU,6CACV,SAAU,4CACX,EAED,IAAK,CACH,QAAS,6CACT,SAAU,6CACV,SAAU,4CACX,EAED,KAAM,CACJ,QAAS,6CACT,SAAU,6CACV,SAAU,4CACd,CACA,EAGaC,GAAc,CAEzB,SAAU,CACR,KAAM,6CACN,KAAM,4CACP,EAED,IAAK,CACH,KAAM,6CACN,KAAM,4CACP,EAED,KAAM,CACJ,KAAM,6CACN,KAAM,4CACV,CACA,EAGMC,GAAiB,CACrB,oDACA,wDACA,qDACA,6JACA,gJACF,EAEO,MAAMC,EAAiB,CAC5B,aAAc,CACZ,KAAK,SAAW,IAAI3S,GAAuB,OAAO,QAAQ,EAC1D,KAAK,QAAU,IAAI8L,GACnB,KAAK,QAAU,IACnB,CAEE,MAAM,MAAO,CACX,GAAI,CAAC,KAAK,QAAS,CACjB,MAAMlM,EAAU,MAAM,KAAK,SAAS,WAAY,EAChD,KAAK,QAAU,OAAOA,EAAQ,OAAO,CAC3C,CACA,CAEE,MAAM,eAAegT,EAAa,CAChC,GAAI,CAEF,MAAMC,EAAmB,IAAIxO,GAAuB,6BAA6B,EAC3EyO,EAAa,IAAIxmB,EACrBsmB,EACAF,GACAG,CACD,EACK,CAACE,CAAS,EAAI,MAAM,QAAQ,IAAI,CACpCD,EAAW,gBAAiB,CACpC,CAAO,EAED,OADc,OAAOC,EAAU,MAAM,EAAI,GAE1C,MAAe,CACd,OAAO,IACb,CACA,CAEE,MAAM,aAAc,CAClB,MAAM,KAAK,KAAM,EACjB,MAAMC,EAAQR,GAAgB,KAAK,OAAO,EAC1C,OAAKQ,GAAO,QAGL,KAAK,eAAeA,EAAM,OAAO,EAF/B,IAGb,CAEE,MAAM,cAAe,CACnB,MAAM,KAAK,KAAM,EACjB,MAAMA,EAAQR,GAAgB,KAAK,OAAO,EAC1C,OAAKQ,GAAO,SAGL,KAAK,eAAeA,EAAM,QAAQ,EAFhC,CAGb,CAEE,MAAM,cAAe,CACnB,MAAM,KAAK,KAAM,EACjB,MAAMA,EAAQR,GAAgB,KAAK,OAAO,EAC1C,OAAKQ,GAAO,SAGL,KAAK,eAAeA,EAAM,QAAQ,EAFhC,CAGb,CAEE,MAAM,uBAAuBvmB,EAAc,CACzC,MAAM,KAAK,KAAM,EACjB,MAAMwmB,EAAcR,GAAY,KAAK,OAAO,EAC5C,GAAI,CAACQ,EACH,OAAO,KAIT,GAAI,CACF,MAAMC,EAAW,MAAM,KAAK,QAAQ,YAAYzmB,EAAcwmB,EAAY,IAAI,EAC9E,GAAIC,GAAYA,EAAS,UAAYA,EAAS,SAAU,CACtD,KAAM,CAAE,SAAAlJ,EAAU,SAAAE,EAAU,OAAAoC,EAAQ,OAAAC,CAAQ,EAAG2G,EACzCC,EAAW1mB,EAAa,YAAa,IAAK6f,EAAO,QAAQ,YAAa,EAEtE8G,EAAeD,EAAWnJ,EAAWE,EACrCmJ,EAAcF,EAAWjJ,EAAWF,EAEpCsJ,EAAgBH,EAAW7G,EAAO,SAAWC,EAAO,SACpDgH,EAAeJ,EAAW5G,EAAO,SAAWD,EAAO,SAEnDkH,EAAyB,OAAOvJ,GAAmBmJ,EAAcE,CAAa,CAAC,EAGrF,OAF8B,OAAOrJ,GAAmBoJ,EAAaE,CAAY,CAAC,EAEnDC,CACvC,CACK,MAAe,CAEpB,CAGI,GAAI,CACF,MAAMC,EAAW,MAAM,KAAK,QAAQ,YAAYhnB,EAAcwmB,EAAY,IAAI,EAC9E,GAAIQ,GAAYA,EAAS,UAAYA,EAAS,SAAU,CACtD,KAAM,CAAE,SAAAzJ,EAAU,SAAAE,EAAU,OAAAoC,EAAQ,OAAAC,CAAQ,EAAGkH,EACzCN,EAAW1mB,EAAa,YAAa,IAAK6f,EAAO,QAAQ,YAAa,EAEtE8G,EAAeD,EAAWnJ,EAAWE,EACrCwJ,EAAcP,EAAWjJ,EAAWF,EAEpCsJ,EAAgBH,EAAW7G,EAAO,SAAWC,EAAO,SACpDoH,EAAeR,EAAW5G,EAAO,SAAWD,EAAO,SAEnDkH,EAAyB,OAAOvJ,GAAmBmJ,EAAcE,CAAa,CAAC,EAGrF,OAF8B,OAAOrJ,GAAmByJ,EAAaC,CAAY,CAAC,EAEnDH,CACvC,CACK,MAAe,CAEpB,CAEI,OAAO,IACX,CAEE,MAAM,kBAAkB/mB,EAAcG,EAAQC,EAAU,CACtD,GAAI,CAGF,GAFA,MAAM,KAAK,KAAM,EAEb,CAACJ,GAAgB,CAACG,GAAUC,IAAa,OAC3C,OAAO,KAGT,IAAI+mB,EAGJ,MAAMX,EAAcR,GAAY,KAAK,OAAO,EAC5C,GAAI,CAACQ,EACH,OAAO,KAGT,OAAOxmB,EAAa,YAAa,EAAA,CAC/B,IAAK,MACL,IAAK,6CACHmnB,EAAQ,MAAM,KAAK,YAAa,EAChC,MACF,KAAKX,EAAY,KAAK,YAAa,EACjCW,EAAQ,EACR,MACF,KAAKX,EAAY,KAAK,YAAa,EACjCW,EAAQ,EACR,MACF,QAEEA,EAAQ,MAAM,KAAK,uBAAuBnnB,CAAY,CAChE,CAEM,OAAKmnB,EAIoB,OAAO3J,GAAmBrd,EAAQC,CAAQ,CAAC,EAC1C+mB,EAJjB,IAKV,MAAe,CACd,OAAO,IACb,CACA,CACA,CCpNO,SAASC,IAAiB,CAC/B,KAAM,CAACtf,EAAQC,CAAS,EAAIhU,WAAS,CACnC,IAAK,KACL,KAAM,KACN,KAAM,IACV,CAAG,EAEDE,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMozB,EAAmB,IAAInB,GAC7B,IAAIoB,EAAU,GAEd,eAAeC,GAAe,CAC5B,GAAI,CACF,KAAM,CAACC,EAAUC,EAAWC,CAAS,EAAI,MAAM,QAAQ,IAAI,CACzDL,EAAiB,YAAa,EAC9BA,EAAiB,aAAc,EAC/BA,EAAiB,aAAY,CACvC,CAAS,EAEGC,GACFvf,EAAU,CACR,IAAKyf,EACL,KAAMC,EACN,KAAMC,CAClB,CAAW,CAEJ,OAAQ3wB,EAAO,CACd,QAAQ,MAAM,+BAAgCA,CAAK,CAC3D,CACA,CAGIwwB,EAAc,EACd,MAAMlf,EAAW,YAAYkf,EAAc,GAAK,EAEhD,MAAO,IAAM,CACXD,EAAU,GACV,cAAcjf,CAAQ,CACvB,CACF,EAAE,EAAE,EAsBE,CACL,OAAAP,EACA,kBAtBwB,MAAO7G,EAAOd,IAAW,CACjD,GAAI,CAEF,OADyB,IAAI+lB,GAAkB,EACvB,kBAAkBjlB,EAAM,QAASd,EAAQc,EAAM,QAAQ,CAChF,OAAQlK,EAAO,CACd,eAAQ,MAAM,+BAAgCA,CAAK,EAC5C,IACb,CACG,EAeC,UAbiB7C,GACbA,GAAU,KAAoC,MAC3C,IAAI,KAAK,aAAa,QAAS,CACpC,MAAO,WACP,SAAU,MACV,sBAAuB,EACvB,sBAAuB,CAC7B,CAAK,EAAE,OAAOA,CAAK,CAOhB,CACH,CCjEO,SAASyzB,IAAa,CAC3B,MAAM5oB,EAAeC,GAAiB,EAChC,CAAE,KAAMC,CAAc,EAAGC,GAAiB,EAOhD,OALgBxE,EAAAA,QAAQ,IAClB,CAACqE,GAAgB,CAACE,EAAqB,KACpC,IAAIogB,GAAetgB,EAAcE,CAAY,EACnD,CAACF,EAAcE,CAAY,CAAC,CAGjC,CCTA,MAAM2oB,GAAe,IAAM,CAEzB,MAAMC,EAAe,CAEnB,CAAE,KAAM1Q,GAAY,MAAO,EAAG,EAAG,IAAK,EAAG,IAAK,MAAO,GAAK,OAAQ,EAAK,EACvE,CAAE,KAAM2Q,GAAW,MAAO,GAAK,EAAG,IAAK,EAAG,IAAK,MAAO,IAAM,OAAQ,EAAK,EACzE,CAAE,KAAMC,GAAY,MAAO,GAAK,EAAG,GAAI,EAAG,IAAK,MAAO,GAAK,OAAQ,EAAK,EAGxE,CAAE,KAAM5Q,GAAY,MAAO,EAAG,EAAG,IAAK,EAAG,IAAK,MAAO,CAAI,EACzD,CAAE,KAAM2Q,GAAW,MAAO,GAAK,EAAG,IAAK,EAAG,IAAK,MAAO,GAAK,EAC3D,CAAE,KAAMC,GAAY,MAAO,GAAK,EAAG,GAAI,EAAG,IAAK,MAAO,EAAI,EAC1D,CAAE,KAAMC,GAAY,MAAO,IAAK,EAAG,IAAK,EAAG,IAAK,MAAO,CAAI,EAC3D,CAAE,KAAMC,GAAU,MAAO,IAAK,EAAG,IAAK,EAAG,IAAK,MAAO,GAAK,EAC1D,CAAE,KAAMC,GAAW,MAAO,EAAK,EAAG,IAAK,EAAG,IAAK,MAAO,CAAI,EAC1D,CAAE,KAAMC,GAAS,MAAO,IAAK,EAAG,GAAI,EAAG,IAAK,MAAO,EAAI,EAGvD,CAAE,KAAML,GAAW,MAAO,EAAG,EAAG,IAAK,EAAG,GAAI,MAAO,GAAK,OAAQ,EAAK,EACrE,CAAE,KAAMC,GAAY,MAAO,GAAK,EAAG,IAAK,EAAG,GAAI,MAAO,IAAM,OAAQ,EAAK,EACzE,CAAE,KAAM5Q,GAAY,MAAO,GAAK,EAAG,IAAK,EAAG,GAAI,MAAO,IAAM,OAAQ,EAAK,EACzE,CAAE,KAAM6Q,GAAY,MAAO,GAAK,EAAG,GAAI,EAAG,GAAI,MAAO,GAAK,OAAQ,EAAK,CACzE,EAGMI,EAAoB,CACxB,QAAS,CAAE,QAAS,EAAG,MAAO,GAAK,EACnC,QAAS,CACP,QAAS,CAAC,IAAM,GAAK,GAAI,EACzB,MAAO,CAAC,IAAM,EAAG,GAAI,EACrB,WAAY,CACV,SAAU,EACV,OAAQ,IACR,KAAM,WAAA,CACR,CAEJ,EAiBMC,EAAe,CACnB,QAAS,CAAE,OAAQ,EAAG,QAAS,EAAI,EACnC,QAAS,CACP,OAAQ,IACR,QAAS,CAAC,GAAK,GAAK,EAAG,EACvB,WAAY,CACV,SAAU,EACV,OAAQ,IACR,KAAM,QAAA,CACR,CAEJ,EAGMC,EAAqB,CACzB,QAAS,CAAE,QAAS,EAAG,MAAO,CAAE,EAChC,QAAUC,IAAY,CACpB,QAAS,CAAC,GAAK,GAAK,EAAG,EACvB,MAAOA,EAAO,MACd,WAAY,CACV,QAAS,CACP,SAAU,EACV,OAAQ,IACR,KAAM,WACR,EACA,MAAO,CACL,SAAU,GACV,MAAOA,EAAO,KAAA,CAChB,CAEJ,EACF,EAGMC,EAAqB,CACzB,QAAS,CACP,QAAS,EACT,MAAO,EACP,EAAG,IACH,KAAaD,EAAO,EACpB,OAAQ,CACV,EACA,QAAUA,IAAY,CACpB,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACvB,MAAO,CAAC,EAAGA,EAAO,MAAOA,EAAO,MAAQ,IAAKA,EAAO,MAAO,CAAC,EAC5D,OAAQ,CAAC,EAAG,IAAK,IAAK,IAAK,GAAG,EAC9B,EAAG,CACDA,EAAO,EACPA,EAAO,EAAI,GACXA,EAAO,EAAI,GACXA,EAAO,EAAI,GACXA,EAAO,CACT,EACA,EAAG,CAAC,IAAK,IAAK,EAAG,GAAI,EAAE,EACvB,WAAY,CACV,SAAU,EACV,MAAOA,EAAO,MACd,OAAQ,IACR,KAAM,CAAC,GAAK,EAAG,GAAK,CAAC,CAAA,CAEzB,EACF,EAGME,EAAmB,CACvB,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,QAAS,CACP,QAAS,CAAC,EAAG,GAAK,CAAC,EACnB,EAAG,CAAC,IAAK,EAAE,EACX,WAAY,CACV,SAAU,EACV,OAAQ,IACR,KAAM,WAAA,CACR,CAEJ,EAGE,OAAA9vB,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,0BACV,QAAQ,UACR,QAAQ,UAGR,SAAA,CAAAtO,EAAA,IAAC,MAAA,CAAI,UAAU,oFACb,MAAO,CACL,eAAgB,YAChB,gBAAiB,uHAAA,CACnB,CACF,EAGAA,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU2lB,EACV,UAAU,0GACV,MAAO,CACL,UAAW,mCACX,eAAgB,WAClB,EAGC,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC1lB,EAAGC,IACrBxO,EAAA,IAACsO,EAAO,IAAP,CAEC,SAAUgmB,EACV,UAAU,gDACV,MAAO,CACL,KAAM,GAAG,KAAK,OAAA,EAAW,GAAG,IAC5B,IAAK,GAAG,KAAK,OAAA,EAAW,GAAG,IAC3B,eAAgB,GAAG,KAAK,SAAW,CAAC,GAAA,CACtC,EAPK,iBAAiB9lB,CAAC,EAS1B,CAAA,CAAA,CACH,EAGAxO,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU2lB,EACV,UAAU,2GACV,MAAO,CACL,UAAW,mCACX,eAAgB,WAClB,EAGC,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC1lB,EAAGC,IACrBxO,EAAA,IAACsO,EAAO,IAAP,CAEC,SAAUgmB,EACV,UAAU,gDACV,MAAO,CACL,KAAM,GAAG,KAAK,OAAA,EAAW,GAAG,IAC5B,IAAK,GAAG,KAAK,OAAA,EAAW,GAAG,IAC3B,eAAgB,GAAG,KAAK,SAAW,CAAC,GAAA,CACtC,EAPK,kBAAkB9lB,CAAC,EAS3B,CAAA,CAAA,CACH,EAGAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,uEACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,8CAA+C,CAAA,EAC9DA,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CACP,mBAAoB,CAAC,UAAW,UAAU,EAC1C,WAAY,CAAE,SAAU,EAAG,OAAQ,IAAU,KAAM,QAAS,CAC9D,EACA,UAAU,gCACV,MAAO,CACL,gBAAiB,2HAAA,CACnB,CAAA,CACF,EACF,EAGAtO,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CACP,QAAS,CAAC,GAAK,GAAK,EAAG,EACvB,MAAO,CAAC,IAAM,KAAM,GAAI,CAC1B,EACA,WAAY,CAAE,SAAU,EAAG,OAAQ,GAAS,EAC5C,UAAU,4GAAA,CACZ,EAGAtO,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU4lB,EACV,UAAU,mEACV,MAAO,CACL,OAAQ,6CACV,EAEA,SAAAl0B,EAAAA,IAACu0B,GAAM,CAAA,UAAU,eAAgB,CAAA,CAAA,CACnC,EACAv0B,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU4lB,EACV,UAAU,oEACV,MAAO,CACL,OAAQ,6CACV,EAEA,SAAAl0B,EAAAA,IAACu0B,GAAM,CAAA,UAAU,eAAgB,CAAA,CAAA,CACnC,EAGCb,EAAa,OAAevf,GAAAA,EAAK,MAAM,EAAE,IAAI,CAACA,EAAMjK,IACnDlK,EAAA,IAACsO,EAAO,IAAP,CAEC,OAAQ6F,EACR,SAAUggB,EACV,UAAU,8DACV,MAAO,CACL,UAAW,aAAahgB,EAAK,CAAC,OAAOA,EAAK,CAAC,KAC7C,EAEA,SAAAnU,EAAA,IAAC,MAAI,CAAA,UAAU,2CACb,SAAAA,EAAA,IAACmU,EAAK,KAAL,CACC,UAAU,oBACV,MAAO,CACL,OAAQ,8CACR,MAAO,OACP,OAAQ,MAAA,CACV,CAAA,CAEJ,CAAA,CAAA,EAjBK,UAAUjK,CAAK,EAAA,CAmBvB,EAGAwpB,EAAa,OAAOvf,GAAQ,CAACA,EAAK,MAAM,EAAE,IAAI,CAACA,EAAMjK,IACpD1F,EAAA,KAAC8J,EAAO,IAAP,CAEC,OAAQ6F,EACR,SAAUkgB,EACV,UAAU,8DAGV,SAAA,CAAAr0B,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,yBACV,MAAO,CACL,WAAY,iDACZ,OAAQ,YACR,MAAO,OACP,OAAQ,MACR,UAAW,mBAAA,CACb,CACF,EACAtO,EAAAA,IAAC,MAAI,CAAA,UAAU,2CACb,SAAAA,EAAA,IAACmU,EAAK,KAAL,CACC,UAAU,iBACV,MAAO,CACL,OAAQ,+CACR,MAAO,OACP,OAAQ,MAAA,CACV,CAAA,CAEJ,CAAA,CAAA,CAAA,EAzBK,UAAUjK,CAAK,EAAA,CA2BvB,EAGD1F,EAAAA,KAAC,MAAI,CAAA,UAAU,qGACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,EAAG,OAAQ,GAAS,EAC5C,UAAU,mCAAA,CACZ,EACAtO,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,EAAG,OAAQ,IAAU,MAAO,EAAI,EACxD,UAAU,mCAAA,CACZ,EACAtO,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,EAAG,OAAQ,IAAU,MAAO,GAAI,EACxD,UAAU,mCAAA,CAAA,CACZ,CACF,CAAA,CAAA,CAAA,CACF,CAEJ,ECnTA,SAAwBkmB,IAAY,CAC5B,KAAA,CAAE,YAAA/b,CAAY,EAAIS,GAAe,EACjC,CAAE,OAAAvF,CAAO,EAAIsf,GAAe,EAC5BwB,EAAUjB,GAAW,EACrB,CAACkB,EAAWC,CAAY,EAAI/0B,WAAS,CACzC,UAAW,IACX,UAAW,IACX,QAAS,GAAA,CACV,EACK,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACg1B,EAAaC,CAAc,EAAIj1B,EAAAA,SAAS,EAAK,EAC9C,CAACk1B,EAAUC,CAAW,EAAIn1B,WAAS,IAAI,EACvC,CAACo1B,EAAQC,CAAS,EAAIr1B,EAAAA,SAAS,EAAK,EAE1CE,EAAAA,UAAU,IAAM,CACd,MAAMo1B,EAAgB,SAAY,CAChC,GAAKT,EAED,GAAA,CACFnzB,EAAW,EAAI,EAGT,MAAA8pB,EAAQ,MAAMqJ,EAAQ,YAAY,EAGxC,IAAIU,EAAiB,EACjBC,EAAiB,EACjBC,MAAoB,IAExB,UAAWC,KAAelK,EAAO,CAC/B,MAAMC,EAAW,MAAMoJ,EAAQ,qBAAqBa,CAAW,EAC/D,GAAI,CAACjK,EAAU,SAGf,MAAMkK,EAAclK,EAAS,UAAU,UAAY1X,EAAO,IACtD,OAAO,OAAO,YAAY0X,EAAS,SAAS,SAAUA,EAAS,OAAO,QAAQ,CAAC,EAAI1X,EAAO,IAC1F,EACE6hB,EAAcnK,EAAS,UAAU,UAAY1X,EAAO,IACtD,OAAO,OAAO,YAAY0X,EAAS,SAAS,SAAUA,EAAS,OAAO,QAAQ,CAAC,EAAI1X,EAAO,IAC1F,EAEJwhB,GAAkBI,EAAcC,EAGhC,MAAMjL,EAAS,MAAMkK,EAAQ,cAAca,EAAa,KAAK,EACzD/K,IACF6K,GAAkB7K,EAAS5W,EAAO,MAIpB,MAAM8gB,EAAQ,eAAea,CAAW,GAChD,QAAQG,GAAUJ,EAAc,IAAII,CAAM,CAAC,CAAA,CAGxCd,EAAA,CACX,UAAWS,EACX,UAAWD,EACX,QAASE,EAAc,IAAA,CACxB,QACMzyB,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,CAAA,QAChD,CACAtB,EAAW,EAAK,CAAA,CAEpB,EAEImzB,GAAW9gB,EAAO,KACNuhB,EAAA,CAEf,EAAA,CAACT,EAAS9gB,EAAO,GAAG,CAAC,EAExB7T,EAAAA,UAAU,IAAM,CACd,WAAW,IAAM,CACfi1B,EAAY,EAAE,EACd,WAAW,IAAM,CACfE,EAAU,EAAI,EACdJ,EAAe,EAAI,GAClB,GAAI,GACN,GAAG,CACR,EAAG,EAAE,EAEC,MAAAa,EAAa31B,GACV,IAAI,KAAK,aAAa,QAAS,CACpC,MAAO,WACP,SAAU,MACV,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,EAAE,OAAOA,CAAK,EAGX41B,EAAW,CACf,CACE,KAAMC,GACN,MAAO,iBACP,YAAa,kEACb,SAAU,6BACZ,EACA,CACE,KAAM9jB,GACN,MAAO,cACP,YAAa,mFACb,SAAU,2BACZ,EACA,CACE,KAAM+jB,GACN,MAAO,oBACP,YAAa,2EACb,SAAU,+BACZ,EACA,CACE,KAAMC,GACN,MAAO,eACP,YAAa,uFACb,SAAU,2BACZ,EACA,CACE,KAAMC,GACN,MAAO,kBACP,YAAa,0DACb,SAAU,+BACZ,EACA,CACE,KAAMC,GACN,MAAO,kBACP,YAAa,kEACb,SAAU,6BAAA,CAEd,EAES,SAAAC,EAAU,CAAE,WAAAvf,GAAc,CAC3B,MAAAwf,EAAQxf,EAAW,OAAS,MAC5Byf,EAAgB,eAAezf,EAAW,MAAM,GA4BhD0f,GAzBwBC,GAAc,CACtC,GAAA,CAACA,EAAkB,MAAA,UACjB,MAAAlG,EAAOkG,EAAU,YAAY,EACnC,OAAQlG,EAAM,CACZ,IAAK,UACL,IAAK,YACL,IAAK,aACI,MAAA,aACT,IAAK,UACI,MAAA,UACT,IAAK,MACL,IAAK,mBACI,MAAA,mBACT,IAAK,OACL,IAAK,WACI,MAAA,WACT,IAAK,QACL,IAAK,gBACI,MAAA,gBACT,QACS,OAAAA,CAAA,CAEb,GAGyCzZ,EAAW,WAAaA,EAAW,OAAO,EAE7E4R,EAAiB,CAAC+N,EAAW9rB,IAAY,CACrC,OAAA8rB,EAAU,YAAe,EAAA,CAC/B,IAAK,UACH,MAAO,sCAAsC9rB,CAAO,GACtD,IAAK,UACH,MAAO,iCAAiCA,CAAO,GACjD,IAAK,mBACH,MAAO,yCAAyCA,CAAO,GACzD,IAAK,WACH,MAAO,iDAAiDA,CAAO,GACjE,IAAK,aACH,MAAO,mDAAmDA,CAAO,GACnE,IAAK,gBACH,MAAO,6CAA6CA,CAAO,GAC7D,QACS,MAAA,GAAA,CAEb,EAGE,OAAA/F,EAAA,KAAC,MAAI,CAAA,UAAU,qGACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAAkS,EAAW,cAAgB,QACzB1W,EAAA,IAAA,MAAA,CAAI,UAAU,mFACb,SAAAA,EAAA,IAAC,QAAA,CACC,IAAK0W,EAAW,MAAQgD,GAAWhD,EAAW,QAAQ,EACtD,UAAU,6BACV,SAAQ,GACR,MAAK,GACL,KAAI,GACJ,YAAW,EAAA,GAEf,EAEA1W,EAAA,IAAC,MAAA,CACC,IAAK0W,EAAW,MAAQgD,GAAWhD,EAAW,QAAQ,EACtD,IAAKA,EAAW,KAChB,UAAU,uBACV,QAAUlP,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,oBAAA,CACjB,CACF,SAED,MACC,CAAA,SAAA,CAAChD,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,oDACb,SAAA,CAAWkS,EAAA,KAAK,KAAGA,EAAW,OAAO,GAAA,EACxC,EACCwf,EACCl2B,EAAA,IAACs2B,GAAA,CACC,UAAU,iBACV,KAAM,GACN,MAAM,gBAAA,CAAA,EAGRt2B,EAAA,IAAC41B,GAAA,CACC,UAAU,iBACV,KAAM,GACN,MAAM,oBAAA,CAAA,CACR,EAEJ,EACApxB,EAAAA,KAAC,MAAI,CAAA,UAAU,wBAAwB,SAAA,CAAA,MACjC4xB,CAAA,CACN,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA5xB,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wBACZ,SAAoBu2B,GAAA7f,EAAW,UAAW,CAAE,UAAW,EAAK,CAAC,CAChE,CAAA,EACCwf,EACC1xB,EAAA,KAACI,GAAA,CACC,GAAIuxB,EACJ,UAAU,+EACX,SAAA,CAAA,WACU,OAAOzf,EAAW,WAAW,EAAE,eAAe,EACtD1W,EAAA,IAAA,OAAA,CAAK,UAAU,gJAAgJ,SAEhK,iBAAA,CAAA,CAAA,CAAA,CAAA,EAGFwE,EAAA,KAAC,IAAA,CACC,KAAM8jB,EAAe8N,EAAa1f,EAAW,OAAO,EACpD,OAAO,SACP,IAAI,sBACJ,UAAU,gEACX,SAAA,CAAA,WACU,OAAOA,EAAW,WAAW,EAAE,eAAe,CAAA,CAAA,CAAA,CACzD,CAEJ,CAAA,CAAA,EACF,CAAA,CAKF,OAAAlS,EAAA,KAAC,OAAK,CAAA,UAAU,YACd,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAA,EAAA,KAAC,MAAA,CACC,UAAW,gCAAgCowB,EAAc,sCAAwC,qCAAqC,GAEtI,SAAA,CAAC50B,EAAA,IAAA,KAAA,CAAG,UAAU,wDAAwD,SAEtE,2BAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,qDAAqD,SAGlE,mKAAA,CAAA,CAAA,CAAA,CACF,EACAA,EAAA,IAAC,MAAA,CACC,UAAW,YAAYg1B,EAAS,QAAU,QAAQ,yCAClD,MAAO,CACL,KAAM,GAAGF,CAAQ,IACjB,UAAW,oBACb,EAEA,eAACrB,GAAa,CAAA,CAAA,CAAA,CAAA,CAChB,EACF,EAEAzzB,EAAAA,IAAC,OAAI,UAAU,+EACZ,WAAS,IAAI,CAACw2B,EAAStsB,IACtB1F,EAAA,KAAC,MAAA,CAEC,UAAU,6CAEV,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAW,sCAAsCw2B,EAAQ,QAAQ,qEAAsE,EAC5IhyB,EAAAA,KAAC,MAAI,CAAA,UAAU,gKACb,SAAA,CAAAxE,EAAAA,IAACw2B,EAAQ,KAAR,CAAa,UAAU,+BAAgC,CAAA,EACvDx2B,EAAA,IAAA,KAAA,CAAG,UAAU,2DACX,WAAQ,MACX,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,mCACV,WAAQ,WACX,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EAZKkK,CAcR,CAAA,EACH,EAEA1F,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,wDAAwD,SAEtE,yBAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAA+1B,GAAA,CAAQ,UAAU,wBAAyB,CAAA,EAC3C/1B,EAAA,IAAA,KAAA,CAAG,UAAU,sDAAsD,SAEpE,uBAAA,CAAA,CAAA,EACF,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAwC,SAErD,4DAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAxE,EAAA,IAAC,IAAA,CAAE,KAAK,oCAAoC,OAAO,SAAS,IAAI,sBAC7D,UAAU,wGAAwG,SAAA,oBAAA,CAErH,EACAA,EAAA,IAAC,IAAA,CAAE,KAAK,kCAAkC,OAAO,SAAS,IAAI,sBAC3D,UAAU,gKAAgK,SAAA,SAAA,CAE7K,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,+FAA+F,SAE/G,kBAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,wFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAAqS,GAAA,CAAQ,UAAU,wBAAyB,CAAA,EAC3CrS,EAAA,IAAA,KAAA,CAAG,UAAU,sDAAsD,SAEpE,kBAAA,CAAA,CAAA,EACF,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAwC,SAErD,mDAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAxE,EAAA,IAAC,IAAA,CAAE,KAAK,sBAAsB,OAAO,SAAS,IAAI,sBAC/C,UAAU,gKAAgK,SAAA,SAAA,CAE7K,EACAA,EAAA,IAAC,IAAA,CAAE,KAAK,kCAAkC,OAAO,SAAS,IAAI,sBAC3D,UAAU,4KAA4K,SAAA,UAAA,CAEzL,EACAA,EAAA,IAAC,IAAA,CAAE,KAAK,uBAAuB,OAAO,SAAS,IAAI,sBAChD,UAAU,4KAA4K,SAAA,SAAA,CAEzL,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,+FAA+F,SAE/G,kBAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAAy2B,GAAA,CAAW,UAAU,wBAAyB,CAAA,EAC9Cz2B,EAAA,IAAA,KAAA,CAAG,UAAU,sDAAsD,SAEpE,oBAAA,CAAA,CAAA,EACF,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,YACZ,WAAY,SAAW,EACrBA,EAAA,IAAA,IAAA,CAAE,UAAU,2CAA2C,SAExD,wBAAA,CAAA,QAEC,MAAI,CAAA,UAAU,YACZ,SAAAyY,EAAY,MAAM,EAAG,CAAC,EAAE,IAAK/B,GAC3B1W,EAAA,IAAAi2B,EAAA,CAAqC,WAAAvf,CAAtB,EAAAA,EAAW,SAAmC,CAC/D,EACH,CAEJ,CAAA,CAAA,EACF,EAEAlS,EAAAA,KAAC,MAAI,CAAA,UAAU,wFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAA02B,GAAA,CAAY,UAAU,wBAAyB,CAAA,EAC/C12B,EAAA,IAAA,KAAA,CAAG,UAAU,sDAAsD,SAEpE,iBAAA,CAAA,CAAA,EACF,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAwC,SAErD,sDAAA,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,kIACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,uDAAuD,SAAQ,WAAA,EAC9EA,EAAA,IAAA,OAAA,CAAK,UAAU,yBAAyB,SAAM,QAAA,CAAA,CAAA,EACjD,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACxE,EAAA,IAAA,SAAA,CAAO,UAAU,qIAAqI,SAAE,KAAA,EACxJA,EAAA,IAAA,SAAA,CAAO,UAAU,oDAAoD,SAAG,MAAA,EACxEA,EAAA,IAAA,SAAA,CAAO,UAAU,qIAAqI,SAAE,IAAA,CAAA,CAAA,CAC3J,CAAA,CAAA,EACF,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,mBACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAxE,EAAA,IAAC,OACC,CAAA,SAAAwE,EAAA,KAAC,iBAAe,CAAA,GAAG,WAAW,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,OACvD,SAAA,CAAAxE,MAAC,QAAK,OAAO,KAAK,UAAU,UAAU,YAAY,MAAM,QACvD,OAAK,CAAA,OAAO,OAAO,UAAU,UAAU,YAAY,GAAI,CAAA,CAAA,CAAA,CAC1D,CACF,CAAA,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,sEACF,KAAK,iBACL,UAAU,6BAAA,CACZ,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,oDACF,KAAK,OACL,OAAO,UACP,YAAY,IACZ,UAAU,6BAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,0FACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,SAAK,OAAA,CAAA,EACXA,EAAAA,IAAC,QAAK,SAAK,OAAA,CAAA,EACXA,EAAAA,IAAC,QAAK,SAAK,OAAA,CAAA,CAAA,CACb,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,2CAA2C,SAAU,aAAA,EACpEA,EAAAA,IAAC,OAAI,UAAU,oDACZ,WAAU,aAAe01B,EAAUhB,EAAU,SAAS,CACzD,CAAA,CAAA,EACF,EACAlwB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,2CAA2C,SAAS,YAAA,EACnEA,EAAAA,IAAC,OAAI,UAAU,oDACZ,WAAU,aAAe01B,EAAUhB,EAAU,SAAS,CACzD,CAAA,CAAA,EACF,EACAlwB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,2CAA2C,SAAO,UAAA,EACjEA,EAAAA,IAAC,OAAI,UAAU,oDACZ,WAAU,aAAe00B,EAAU,QAAQ,eAAA,CAC9C,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,CC/dA,SAAwBiC,GAAe,CAAE,SAAAl3B,EAAU,UAAAm3B,EAAY,GAAI,YAAAC,EAAc,IAAS,CAEtF,OAAAryB,EAAA,KAAC,MAAI,CAAA,UAAU,WACZ,SAAA,CAAA,CAACqyB,GAGEryB,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAC/S,EAAAA,IAAA,MAAA,CAAI,UAAU,wEAAyE,CAAA,EACxFA,EAAAA,IAAC,MAAI,CAAA,UAAU,yEAA0E,CAAA,EACzFA,EAAAA,IAAC,MAAI,CAAA,UAAU,2EAA4E,CAAA,EAC3FA,EAAAA,IAAC,MAAI,CAAA,UAAU,4EAA6E,CAAA,EAG5FA,EAAAA,IAAC,MAAI,CAAA,UAAU,qFAAsF,CAAA,EACrGA,EAAAA,IAAC,MAAI,CAAA,UAAU,sFAAuF,CAAA,EACtGA,EAAAA,IAAC,MAAI,CAAA,UAAU,wFAAyF,CAAA,EACxGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yFAA0F,CAAA,CAAA,EAC3G,QAID,MAAI,CAAA,UAAW,6CAA6C42B,CAAS,GACnE,SAAAn3B,CACH,CAAA,CAAA,EACF,CAEJ,CCVA,MAAMq3B,GAAiB,CACrB,IAAO,CAAE,KAAMC,GAAc,MAAO,gBAAiB,EACrD,OAAU,CAAE,KAAMC,GAAW,MAAO,eAAgB,EACpD,YAAe,CAAE,KAAMC,GAAU,MAAO,aAAc,EACtD,MAAS,CAAE,KAAMC,GAAS,MAAO,OAAQ,EACzC,MAAS,CAAE,KAAMC,GAAa,MAAO,eAAgB,EACrD,aAAgB,CAAE,KAAMC,GAAa,MAAO,cAAe,EAC3D,OAAU,CAAE,KAAMJ,GAAW,MAAO,QAAS,EAC7C,MAAS,CAAE,KAAM5lB,GAAQ,MAAO,OAAQ,CAC1C,EAGM6iB,GAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,KAAM,CACJ,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAGMoD,GAAe,CACnB,OAAQ,CACN,QAAS,EACT,EAAG,EACL,EACA,KAAM,CACJ,QAAS,EACT,EAAG,EACH,WAAY,CACV,KAAM,SACN,OAAQ,EAAA,CACV,CAEJ,EAGMC,GAAiB,GAEvB,SAAwBC,IAAkB,CACxC,KAAM,CAACvf,EAAawf,CAAc,EAAI53B,EAAAA,SAAS,CAAA,CAAE,EAC3C,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACmW,EAAS0hB,CAAU,EAAI73B,WAAS,CACrC,QAAS,MACT,KAAM,MACN,OAAQ,QAAA,CACT,EACK,CAAC83B,EAAYC,CAAa,EAAI/3B,EAAAA,SAAS,CAAA,CAAE,EACzC,CAACgG,EAAaC,CAAc,EAAIjG,EAAAA,SAAS,CAAC,EAC1Cg4B,EAAkBC,SAAO,IAAI,EAGnC/3B,EAAAA,UAAU,IAAM,EACU,SAAY,CAC9B,GAAA,CACFwB,EAAW,EAAI,EACT,MAAAw2B,EAAqB,MAAMhiB,GAAkB,CACjD,QAASC,EAAQ,QACjB,KAAMA,EAAQ,IAAA,CACf,EACDyhB,EAAeM,CAAkB,OACnB,CACd10B,EAAM,MAAM,4BAA4B,CAAA,QACxC,CACA9B,EAAW,EAAK,CAAA,CAEpB,GAEgB,GACf,CAACyU,EAAQ,QAASA,EAAQ,IAAI,CAAC,EAG5B,MAAAgiB,EAAsBxxB,EAAAA,QAAQ,IAC3ByR,EACJ,OAAqBxV,GAEhBuT,EAAQ,UAAY,MAClBA,EAAQ,UAAY,mBACfvT,EAAW,UAAY,IACrBuT,EAAQ,UAAY,WACtBvT,EAAW,UAAY,KACrBuT,EAAQ,UAAY,UACtBvT,EAAW,UAAY,WAAaA,EAAW,UAAY,SACzDuT,EAAQ,UAAY,UACtBvT,EAAW,UAAY,WAAaA,EAAW,UAAY,IACzDuT,EAAQ,UAAY,aACtBvT,EAAW,UAAY,cAAgBA,EAAW,UAAY,WAC5DuT,EAAQ,UAAY,gBACtBvT,EAAW,UAAY,iBAAmBA,EAAW,UAAY,MAEnE,GAIL,EAAAuT,EAAQ,OAAS,OAASvT,EAAW,OAASuT,EAAQ,KAG3D,EACA,KAAK,CAACrM,EAAGC,IAAM,CACd,OAAQoM,EAAQ,OAAQ,CACtB,IAAK,SACI,OAAA,IAAI,KAAKpM,EAAE,SAAS,EAAI,IAAI,KAAKD,EAAE,SAAS,EACrD,IAAK,SACI,OAAA,IAAI,KAAKA,EAAE,SAAS,EAAI,IAAI,KAAKC,EAAE,SAAS,EACrD,IAAK,OACH,OAAOD,EAAE,KAAK,cAAcC,EAAE,IAAI,EACpC,QACS,MAAA,EAAA,CACX,CACD,EACF,CAACqO,EAAajC,CAAO,CAAC,EAGzBjW,EAAAA,UAAU,IAAM,EACU,SAAY,CAClC,UAAW0C,KAAcu1B,EACnB,GAAAv1B,GAAY,WAAW,QACrB,GAAA,CACF,MAAMw1B,EAAkB,MAAMtgB,GAA4BlV,EAAW,UAAU,OAAO,EAClFw1B,GAAiB,MACnBL,EAAuBrwB,IAAA,CACrB,GAAGA,EACH,CAAC9E,EAAW,UAAU,QAAQ,YAAY,CAAC,EAAGw1B,EAAgB,IAAA,EAC9D,OAEU,CAAA,CAKtB,GAEgB,CAAA,EACf,CAACD,CAAmB,CAAC,EAGxB,MAAME,EAAiB,IAAM,CAC3B,KAAM,CAACC,EAAqBC,CAAsB,EAAIv4B,EAAAA,SAAS,EAAK,EAC9D,CAACw4B,EAAkBC,CAAmB,EAAIz4B,EAAAA,SAAS,EAAK,EACxD,CAAC04B,EAAkBC,CAAmB,EAAI34B,EAAAA,SAAS,EAAK,EAExD44B,EAAoBC,GAAgB,CACpCb,EAAgB,SAClB,aAAaA,EAAgB,OAAO,EAEtCa,EAAY,EAAI,CAClB,EAEMC,EAAoBD,GAAgB,CACxBb,EAAA,QAAU,WAAW,IAAM,CACzCa,EAAY,EAAK,GAChB,GAAG,CACR,EAEME,EAAW,CACf,CAAE,MAAO,MAAO,MAAO,cAAe,EACtC,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,mBAAoB,MAAO,kBAAmB,EACvD,CAAE,MAAO,WAAY,MAAO,kBAAmB,EAC/C,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,aAAc,MAAO,YAAa,EAC3C,CAAE,MAAO,gBAAiB,MAAO,eAAgB,CACnD,EAEMC,EAAQ,CACZ,CAAE,MAAO,MAAO,MAAO,WAAY,EACnC,CAAE,MAAO,SAAU,MAAO,QAAS,EACnC,CAAE,MAAO,UAAW,MAAO,SAAU,CACvC,EAEMC,EAAc,CAClB,CAAE,MAAO,SAAU,MAAO,cAAe,EACzC,CAAE,MAAO,SAAU,MAAO,cAAe,EACzC,CAAE,MAAO,OAAQ,MAAO,UAAW,CACrC,EAGE,OAAAr0B,EAAA,KAAC,MAAI,CAAA,UAAU,mCAEb,SAAA,CAAAA,EAAA,KAAC,MAAA,CACC,UAAU,WACV,aAAc,IAAMg0B,EAAiBL,CAAsB,EAC3D,aAAc,IAAMO,EAAiBP,CAAsB,EAE3D,SAAA,CAAA3zB,EAAA,KAAC,SAAA,CACC,KAAK,SACL,UAAU,2PAEV,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAM,WAAS,KAAK84B,GAAKA,EAAE,QAAU/iB,EAAQ,OAAO,GAAG,KAAM,CAAA,EAC9D/V,EAAA,IAAC,MAAA,CACC,UAAW,8CAA8Ck4B,EAAsB,aAAe,EAAE,GAChG,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAl4B,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EACCk4B,GACCl4B,EAAA,IAAC,MAAA,CACC,UAAU,2HACV,aAAc,IAAM,aAAa43B,EAAgB,OAAO,EACxD,aAAc,IAAMc,EAAiBP,CAAsB,EAE1D,SAAAQ,EAAS,IACR3Z,GAAAhf,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM,CACby3B,MAAiB,CAAE,GAAGsB,EAAG,QAAS/Z,EAAQ,OAAQ,EAClDmZ,EAAuB,EAAK,CAC9B,EACA,UAAW,0IACTpiB,EAAQ,UAAYiJ,EAAQ,MAAQ,iCAAmC,+BACzE,GAEC,SAAQA,EAAA,KAAA,EATJA,EAAQ,KAWhB,CAAA,CAAA,CAAA,CACH,CAAA,CAEJ,EAGAxa,EAAA,KAAC,MAAA,CACC,UAAU,WACV,aAAc,IAAMg0B,EAAiBH,CAAmB,EACxD,aAAc,IAAMK,EAAiBL,CAAmB,EAExD,SAAA,CAAA7zB,EAAA,KAAC,SAAA,CACC,KAAK,SACL,UAAU,2PAEV,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAM,WAAM,KAAKojB,GAAKA,EAAE,QAAUrN,EAAQ,IAAI,GAAG,KAAM,CAAA,EACxD/V,EAAA,IAAC,MAAA,CACC,UAAW,8CAA8Co4B,EAAmB,aAAe,EAAE,GAC7F,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAp4B,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EACCo4B,GACCp4B,EAAA,IAAC,MAAA,CACC,UAAU,2HACV,aAAc,IAAM,aAAa43B,EAAgB,OAAO,EACxD,aAAc,IAAMc,EAAiBL,CAAmB,EAEvD,SAAAO,EAAM,IACLzT,GAAAnlB,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM,CACby3B,MAAiB,CAAE,GAAGsB,EAAG,KAAM5T,EAAK,OAAQ,EAC5CkT,EAAoB,EAAK,CAC3B,EACA,UAAW,0IACTtiB,EAAQ,OAASoP,EAAK,MAAQ,iCAAmC,+BACnE,GAEC,SAAKA,EAAA,KAAA,EATDA,EAAK,KAWb,CAAA,CAAA,CAAA,CACH,CAAA,CAEJ,EAGA3gB,EAAA,KAAC,MAAA,CACC,UAAU,WACV,aAAc,IAAMg0B,EAAiBD,CAAmB,EACxD,aAAc,IAAMG,EAAiBH,CAAmB,EAExD,SAAA,CAAA/zB,EAAA,KAAC,SAAA,CACC,KAAK,SACL,UAAU,2PAEV,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAM,WAAY,KAAK0Q,GAAKA,EAAE,QAAUqF,EAAQ,MAAM,GAAG,KAAM,CAAA,EAChE/V,EAAA,IAAC,MAAA,CACC,UAAW,8CAA8Cs4B,EAAmB,aAAe,EAAE,GAC7F,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAt4B,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EACCs4B,GACCt4B,EAAA,IAAC,MAAA,CACC,UAAU,2HACV,aAAc,IAAM,aAAa43B,EAAgB,OAAO,EACxD,aAAc,IAAMc,EAAiBH,CAAmB,EAEvD,SAAAM,EAAY,IACXG,GAAAh5B,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM,CACby3B,MAAiB,CAAE,GAAGsB,EAAG,OAAQC,EAAO,OAAQ,EAChDT,EAAoB,EAAK,CAC3B,EACA,UAAW,0IACTxiB,EAAQ,SAAWijB,EAAO,MAAQ,iCAAmC,+BACvE,GAEC,SAAOA,EAAA,KAAA,EATHA,EAAO,KAWf,CAAA,CAAA,CAAA,CACH,CAAA,CAAA,CAEJ,EACJ,CAEF,EAEMC,EAAiBz2B,GAAe,CAC9B,MAAAkL,EAAM,KAAK,IAAI,EACfwrB,EAAc,IAAI,KAAK12B,EAAW,WAAW,EAC7C22B,EAAc,IAAI,KAAK32B,EAAW,aAAe,KAAK,MAAQ,KAAQ,EACtE42B,EAAYF,EAAcxrB,EAI5B,OAHiByrB,EAAczrB,GAGf,GAAM,CAAClL,EAAW,cAAgBA,EAAW,aAAeA,EAAW,UAClF,CACL,MAAO,QACP,MAAO,6BACP,KAAM0d,EACR,EAIEkZ,EAAY,EACVA,EAAY,KACP,CACL,MAAO,aAAa,KAAK,KAAKA,EAAY,GAAK,CAAC,IAChD,MAAO,mCACP,KAAMC,EACR,EAEK,CACL,MAAO,cACP,MAAO,+BACP,KAAMA,EACR,EAIK,CACL,MAAO,OACP,MAAO,iCACP,KAAMC,EACR,CACF,EAEMC,EAAmBC,GAAa,CAC9B,MAAAC,GAAeD,GAAY,SAAS,YAAY,EAChDE,EAAW5C,GAAe2C,CAAW,GAAK3C,GAAe,MAG7D,OAAAtyB,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,2FACb,SAAAA,EAAAA,IAAC05B,EAAS,KAAT,CAAc,UAAU,2CAAA,CAA4C,CACvE,CAAA,EAEC15B,EAAA,IAAA,MAAA,CAAI,UAAU,kMACZ,YAAY,OACf,CAAA,CAAA,EACF,CAEJ,EAGM25B,EAAsBn3B,GAAe,CACzC,MAAMqJ,EAAerJ,GAAY,WAAW,SAAS,YAAY,EAIjE,GAHsB,CAACqJ,GAAgBA,IAAiB,6CAItD,OAAIrJ,GAAY,UAAY,cAAgBA,GAAY,UAAY,iBAC1D,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,UAAU,EAEzDA,GAAY,UAAY,gBAClB,MAAI,CAAA,IAAI,eAAe,IAAI,MAAM,UAAU,UAAU,EAE3DA,GAAY,UAAY,iBAAmBA,GAAY,UAAY,YAC7D,MAAI,CAAA,IAAI,aAAa,IAAI,MAAM,UAAU,UAAU,EAEtDxC,EAAA,IAACgjB,GAAW,CAAA,UAAU,wBAAyB,CAAA,EAIxD,GAAInX,IAAiB,6CACnB,aAAQ,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,UAAU,EAIvD,MAAA+tB,EAAUlC,EAAW7rB,CAAY,EACvC,OAAI+tB,EAEA55B,EAAA,IAAC,MAAA,CACC,IAAK45B,EACL,IAAI,QACJ,UAAU,uBACV,QAAUpyB,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,oBAAA,CACjB,CACF,QAKI,MAAI,CAAA,IAAI,qBAAqB,IAAI,QAAQ,UAAU,uBAAuB,CACpF,EAGMqyB,EAAe,IACnB75B,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,UAAU,WAEV,SAAA9J,EAAA,KAAC,MAAI,CAAA,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mDAAoD,CAAA,EACnEA,EAAAA,IAAC,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAqD,CAAA,EACpEA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,sDAAuD,CAAA,EACtEA,EAAAA,IAAC,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAwD,CAAA,EACvEA,EAAAA,IAAC,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,qFAAsF,CAAA,EACrGA,EAAAA,IAAC,MAAI,CAAA,UAAU,sFAAuF,CAAA,EACtGA,EAAAA,IAAC,MAAI,CAAA,UAAU,wFAAyF,CAAA,EACxGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yFAA0F,CAAA,EAGzGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,EAGAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,qDAEb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,6DAA8D,CAAA,EAG7EA,EAAAA,IAAC,OAAI,UAAU,6BACb,eAAC,MAAI,CAAA,UAAU,mEAAmE,CACpF,CAAA,EAGAA,EAAAA,IAAC,OAAI,UAAU,8BACb,eAAC,MAAI,CAAA,UAAU,mEAAmE,CACpF,CAAA,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,MAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mEAAoE,CAAA,EACnFA,EAAAA,IAAC,MAAI,CAAA,UAAU,+DAAgE,CAAA,CAAA,EACjF,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,+DAAgE,CAAA,EAC/EA,EAAAA,IAAC,MAAI,CAAA,UAAU,gEAAiE,CAAA,CAAA,EAClF,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,4DAA6D,CAAA,EAC5EA,EAAAA,IAAC,MAAI,CAAA,UAAU,4DAA6D,CAAA,CAAA,CAC9E,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAII85B,EAAuBvzB,EAAAA,QAAQ,IAAM,CACnC,MAAAwzB,GAAcn0B,EAAc,GAAK0xB,GACjC0C,EAAWD,EAAazC,GACvB,OAAAS,EAAoB,MAAMgC,EAAYC,CAAQ,CAAA,EACpD,CAACjC,EAAqBnyB,CAAW,CAAC,EAE/Bq0B,EAAa,KAAK,KAAKlC,EAAoB,OAAST,EAAc,EAGlE4C,EAAqB,IACxB11B,OAAA,MAAA,CAAI,UAAU,uFACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,0BACb,SAACwE,EAAA,KAAA,OAAA,CAAK,UAAU,2CAA2C,SAAA,CAAA,YAC9CoB,EAAc,GAAK0xB,GAAkB,EAAE,OAAK,KAAK,IAAI1xB,EAAc0xB,GAAgBS,EAAoB,MAAM,EAAE,OAAKA,EAAoB,OAAO,cAAA,CAAA,CAC5J,CACF,CAAA,EAEAvzB,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM6F,EAAes0B,GAAK,KAAK,IAAI,EAAGA,EAAI,CAAC,CAAC,EACrD,SAAUv0B,IAAgB,EAC1B,UAAU;AAAA,oGAGV,SAAA5F,EAAAA,IAACo6B,GAAgB,CAAA,UAAU,0CAA2C,CAAA,CAAA,CACxE,QAEC,MAAI,CAAA,UAAU,0BACZ,SAAA,MAAM,KAAK,CAAE,OAAQH,CAAW,EAAG,CAAC1rB,EAAGC,IAAMA,EAAI,CAAC,EAAE,IACnD6rB,GAAAr6B,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM6F,EAAew0B,CAAI,EAClC,UAAW;AAAA;AAAA,kBAEPz0B,IAAgBy0B,EACd,6BACA,2EACJ;AAAA,gBAGD,SAAAA,CAAA,EAVIA,CAYR,CAAA,EACH,EAEAr6B,EAAA,IAAC,SAAA,CACC,QAAS,IAAM6F,EAAes0B,GAAK,KAAK,IAAIF,EAAYE,EAAI,CAAC,CAAC,EAC9D,SAAUv0B,IAAgBq0B,EAC1B,UAAU;AAAA,oGAGV,SAAAj6B,EAAAA,IAACs6B,GAAiB,CAAA,UAAU,0CAA2C,CAAA,CAAA,CAAA,CACzE,CACF,CAAA,CAAA,EACF,EAIA,OAAA91B,EAAA,KAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,8CACb,SAAAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAC5B,UAAU,8EAEV,SAAA,CAACtO,EAAA,IAAA,KAAA,CAAG,UAAU,mDAAmD,SAAW,cAAA,QAC3Ei4B,EAAe,CAAA,CAAA,CAAA,CAAA,CAAA,EAEpB,QAEC,MAAI,CAAA,UAAU,uFACb,SAACzzB,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU2lB,GACV,QAAQ,SACR,QAAQ,OACR,UAAU,2EAET,SAAA5yB,EACC,MAAM,KAAK,CAAE,OAAQi2B,EAAe,CAAC,EAAE,IAAI,CAAC/oB,EAAGrE,IAC7ClK,EAAA,IAAC65B,KAAkB3vB,CAAO,CAC3B,EAED4vB,EAAqB,IAAKt3B,GAAe,CACjC,MAAA+3B,EAAStB,EAAcz2B,CAAU,EAGrC,OAAAxC,EAAA,IAACsO,EAAO,IAAP,CAEC,SAAU+oB,GACV,WAAY,CACV,MAAO,KACP,WAAY,CAAE,SAAU,EAAI,CAC9B,EACA,SAAU,CAAE,MAAO,GAAK,EAExB,SAAAr3B,EAAA,IAAC4E,GAAA,CACC,GAAI,eAAepC,EAAW,MAAM,GACpC,UAAU,QAEV,SAAAgC,EAAA,KAAC,MAAI,CAAA,UAAU,WAEb,SAAA,CAAAA,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,0CACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,MAAO,EAAI,EAEzB,SAAA,CAACtO,EAAAA,IAAA,MAAA,CAAI,UAAU,mDAAoD,CAAA,EACnEA,EAAAA,IAAC,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,CAAA,CACrE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAqD,CAAA,EACpEA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,sDAAuD,CAAA,EACtEA,EAAAA,IAAC,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAwD,CAAA,EACvEA,EAAAA,IAAC,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,qFAAsF,CAAA,EACrGA,EAAAA,IAAC,MAAI,CAAA,UAAU,sFAAuF,CAAA,EACtGA,EAAAA,IAAC,MAAI,CAAA,UAAU,wFAAyF,CAAA,EACxGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yFAA0F,CAAA,EAGzGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,EAGAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,qDAEb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,4CACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,SAAU,EAAI,EAE3B,SAAA9L,EAAW,cAAgB,QAC1BxC,EAAA,IAAC,QAAA,CACC,IAAKwC,EAAW,WAChB,UAAU,6BACV,SAAQ,GACR,MAAK,GACL,KAAI,GACJ,YAAW,EAAA,CAAA,EAGbxC,EAAA,IAAC,MAAA,CACC,IAAKwC,EAAW,WAChB,IAAKA,EAAW,KAChB,UAAU,4BAAA,CAAA,CACZ,CAEJ,EAGAxC,EAAA,IAAC,MAAI,CAAA,UAAU,6BACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,+EACZ,SAAAwC,EAAW,MAAQ,QACtB,CAAA,EACF,EAGAxC,EAAA,IAAC,MAAI,CAAA,UAAU,8BACb,SAAAwE,EAAAA,KAAC,OAAI,UAAW,wEAAwE+1B,EAAO,KAAK,GAClG,SAAA,CAAAv6B,EAAAA,IAACu6B,EAAO,KAAP,CAAY,KAAM,EAAI,CAAA,EACvBv6B,EAAAA,IAAC,OAAM,CAAA,SAAAu6B,EAAO,KAAM,CAAA,CAAA,CAAA,CACtB,CACF,CAAA,EAGA/1B,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,2BACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,MAAO,EAAI,EAEzB,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sDACb,SAAA,CAAAxE,EAAA,IAAC,KAAG,CAAA,UAAU,qFACX,SAAAwC,EAAW,KACd,EACCA,EAAW,iBACTgC,OAAA,MAAA,CAAI,UAAU,2FACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,KAAK,MAAM,aAAW,QAAQ,UAAU,cAAc,SAAE,IAAA,CAAA,EAC7DA,EAAA,IAAA,OAAA,CAAK,UAAU,yCAAyC,SAAc,gBAAA,CAAA,CAAA,CACzE,CAAA,CAAA,EAEJ,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,oDACV,WAAW,WACd,CAAA,CAAA,EACF,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAA+0B,EAAgB/2B,EAAW,QAAQ,EACpCgC,EAAAA,KAAC,MAAI,CAAA,UAAU,4HACZ,SAAA,CAAAm1B,EAAmBn3B,CAAU,EAC7BxC,EAAA,IAAA,OAAA,CAAK,UAAU,oDACb,WAAW,SACd,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,gGACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,+CAA+C,SAAM,SAAA,QACpE,OAAK,CAAA,UAAU,oDACb,SAAAwC,EAAW,WAAa,CAC3B,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACC,MAAI,CAAA,UAAU,gGACb,SAACgC,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,+CAA+C,SAAM,SAAA,QACpE,OAAK,CAAA,UAAU,oDACb,SAAAwC,EAAW,aAAe,CAC7B,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAvJKA,EAAW,MAwJlB,CAEH,CAAA,CAAA,CAEL,EAGC,CAACnB,GAAW02B,EAAoB,OAAST,UACvC4C,EAAmB,CAAA,CAAA,CAAA,CAAA,CAExB,CACF,CAAA,CAAA,EACF,CAEJ,CChvBO,MAAMrjB,GAAiB,MAAOC,EAAmB0jB,EAAa,KAAO,CACtE,GAAA,CACF,MAAMl4B,EAAIC,GACR6S,GACA3S,GAAM,oBAAqB,KAAMqU,CAAiB,EAClDjQ,GAAQ,YAAa,MAAM,EAC3BkQ,GAAeyjB,CAAU,CAC3B,EAGO,OADe,MAAM73B,GAAQL,CAAC,GAChB,KAAK,IAAWP,GAAA,CAC7B,MAAAuG,EAAOvG,EAAI,KAAK,EACf,MAAA,CACL,GAAIA,EAAI,GACR,GAAGuG,EACH,QAASA,EAAK,QAAQ,SAAW,EAAA,QAAQ,UAAW,EAAE,EACtD,UAAWA,EAAK,WAAW,OAAO,CACpC,CAAA,CACD,OACa,CACd,MAAO,CAAC,CAAA,CAEZ,EAqJamyB,GAAmB,CAAC3jB,EAAmBR,IAAa,CAC3D,GAAA,CACF,MAAMhU,EAAIC,GACR6S,GACA3S,GAAM,oBAAqB,KAAMqU,CAAiB,EAClDjQ,GAAQ,YAAa,MAAM,EAC3BkQ,GAAe,EAAE,CACnB,EAEO,OAAAR,GAAWjU,EAAIkU,GAAa,CACjC,MAAMsB,EAAQtB,EAAS,KAAK,IAAWzU,GAAA,CAC/B,MAAAuG,EAAOvG,EAAI,KAAK,EACf,MAAA,CACL,GAAIA,EAAI,GACR,GAAGuG,EACH,QAASA,EAAK,SAAS,SAAc,GAAA,IACrC,UAAWA,EAAK,WAAW,OAAO,CACpC,CAAA,CACD,EAEDgO,EAASwB,CAAK,CAAA,CACf,OACa,CACd,OAAAxB,EAAS,CAAA,CAAE,EACJ,IAAM,CAAC,CAAA,CAElB,EC5MA,SAAwBokB,IAAc,CACpC,KAAM,CAAC5iB,EAAO6iB,CAAQ,EAAI/6B,EAAAA,SAAS,CAAA,CAAE,EAC/B,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACoG,EAAaC,CAAc,EAAIrG,EAAAA,SAAS,EAAK,EAC9C,CAACkG,EAASC,CAAU,EAAInG,EAAAA,SAAS,EAAI,EACrC,CAAE,OAAAiW,CAAO,EAAI+kB,GAAU,EACvB,CAACp4B,EAAYq4B,CAAa,EAAIj7B,EAAAA,SAAS,IAAI,EAC3C,CAAC83B,EAAYC,CAAa,EAAI/3B,EAAAA,SAAS,CAAA,CAAE,EACzC,CAACk7B,EAAcC,CAAe,EAAIn7B,EAAAA,SAAS,EAAE,EAC7Co7B,EAAYnD,SAAO,IAAI,EAGvBoD,EAAiBC,cAAaC,GAAY,CAC/BA,EAAQ,CAAC,EACb,gBAAkB,CAACn1B,GAAeF,GAC5Bs1B,EAAA,CACjB,EACC,CAACp1B,EAAaF,CAAO,CAAC,EAGzBhG,EAAAA,UAAU,IAAM,CACd,MAAMk5B,EAAS,CACb,KAAM,KACN,WAAY,OACZ,UAAW,CACb,EACMqC,EAAW,IAAI,qBAAqBJ,EAAgBjC,CAAM,EAChE,OAAIgC,EAAU,SAAkBK,EAAA,QAAQL,EAAU,OAAO,EAElD,IAAM,CACPA,EAAU,SAAkBK,EAAA,UAAUL,EAAU,OAAO,CAC7D,CAAA,EACC,CAACC,CAAc,CAAC,EAEnBn7B,EAAAA,UAAU,IAAM,EACS,SAAY,CAC7B,GAAA,CACI,MAAAyV,EAAiB,MAAMK,GAAcC,CAAM,EAGjD,GAFAglB,EAActlB,CAAc,EAExBA,GAAgB,gBAAiB,CAEnC,MAAM+lB,EAAc,MAAMzkB,GAAetB,EAAe,gBAAiBulB,CAAY,EAGjF,GAAAvlB,EAAe,WAAW,QAAS,CAC/B,MAAA1J,EAAe0J,EAAe,UAAU,QACxCyiB,EAAkB,MAAMtgB,GAA4B7L,CAAY,EAElEmsB,GAAiB,MACnBL,EAAuBrwB,IAAA,CACrB,GAAGA,EACH,CAACuE,CAAY,EAAGmsB,EAAgB,IAAA,EAChC,CACJ,CAGO2C,EAAAW,EAAY,IAAanjB,IAAA,CAChC,GAAGA,EACH,YAAa5C,EAAe,YAC5B,UAAWA,EAAe,KAC1B,QAAS4C,EAAK,SACd,CAAC,EACH7W,EAAW,EAAK,EAGhB,MAAMK,EAAc84B,GAAiBllB,EAAe,gBAAkBgmB,GAAiB,CACrFZ,EAAsBa,GAAA,CAEd,MAAAC,EAAc,IAAI,IAAID,EAAU,IAASE,GAAAA,EAAE,EAAE,CAAC,EAE7C,MAAA,CAAC,GADSH,EAAa,OAAOG,GAAK,CAACD,EAAY,IAAIC,EAAE,EAAE,CAAC,EAC3C,GAAGF,CAAS,EAAE,MAAM,EAAGV,CAAY,CAAA,CACzD,CAAA,CACF,EAED,MAAO,IAAMn5B,EAAY,CAAA,OAEb,CACdL,EAAW,EAAK,CAAA,CAEpB,GAEe,CAAA,EACd,CAACuU,EAAQilB,CAAY,CAAC,EAEzB,MAAMM,EAAiB,SAAY,CACjC,GAAI,GAAC54B,GAAY,iBAAmBwD,GAAe,CAACF,GAEpD,CAAAG,EAAe,EAAI,EACf,GAAA,CACF,MAAM01B,EAAWb,EAAe,GAC1Bc,EAAY,MAAM/kB,GAAerU,EAAW,gBAAiBm5B,CAAQ,EAEvEC,EAAU,SAAW9jB,EAAM,OAC7B/R,EAAW,EAAK,GAEP40B,EAAAiB,EAAU,IAAazjB,IAAA,CAC9B,GAAGA,EACH,YAAa3V,EAAW,YACxB,UAAWA,EAAW,KACtB,QAAS2V,EAAK,SACd,CAAC,EACH4iB,EAAgBY,CAAQ,QAEZ,CACdv4B,EAAM,MAAM,2BAA2B,CAAA,QACvC,CACA6C,EAAe,EAAK,CAAA,EAExB,EAEM41B,EAAe97B,GAAU,CACzB,GAAA,CACE,GAAA,CAACA,EAAc,MAAA,IAGf,GAAAyC,GAAY,WAAW,OAAS,UAChCA,GAAY,WAAW,OAAS,QAChCA,GAAY,WAAW,OAAS,OAClC,OAAO,WAAWzC,CAAK,EAAE,eAAe,QAAS,CAC/C,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,EAIC,IAAA+7B,EACA,GAAA,OAAO/7B,GAAU,SAAU,CAC7B,MAAMg8B,EAAah8B,EAAM,QAAQ,KAAM,EAAE,EACrC,GAAA,CACW+7B,EAAA5vB,GAAkB6vB,EAAY,KAAK,CAAA,MAC1C,CACOD,EAAAtc,GAAkBuc,CAAU,CAAA,CAC3C,MAEaD,EAAA,OAAO/7B,EAAM,UAAU,EAGhC,MAAAi8B,EAAWrY,GAAmBmY,CAAU,EACxCG,EAAa,WAAWD,CAAQ,EAElC,OAAA,MAAMC,CAAU,EAAU,IAEvBA,EAAW,eAAe,QAAS,CACxC,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,OACa,CACP,MAAA,GAAA,CAEX,EAEMC,EAAe/jB,GAAS,CACtB,MAAAgkB,EAAWziB,GAAWvB,EAAK,KAAK,EAElC,OAAAA,EAAK,cAAgB,QAErBnY,EAAAA,IAAC,MAAI,CAAA,UAAU,yDACb,SAAAA,EAAA,IAAC,QAAA,CACC,IAAKm8B,EACL,UAAU,6BACV,SAAQ,GACR,MAAK,GACL,KAAI,GACJ,YAAW,EAAA,CAAA,EAEf,EAKFn8B,EAAAA,IAAC,MAAI,CAAA,UAAU,yDACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAKm8B,EACL,IAAI,MACJ,UAAU,6BACV,QAAU30B,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,kBAAA,CACjB,CAAA,EAEJ,CAEJ,EAEM40B,EAAmBjkB,GAAS,CAChC,MAAMkkB,EAAclkB,EAAK,UAAY,UACjC,0BACAA,EAAK,UAAY,oBAAsBA,EAAK,UAAY,IACtD,kCACAA,EAAK,UAAY,WACf,0CACAA,EAAK,UAAY,cAAgBA,EAAK,UAAY,WAChD,sDACAA,EAAK,UAAY,iBAAmBA,EAAK,UAAY,MACnD,sCACA,+BAGV,OAAAnY,EAAAA,IAAC,MAAI,CAAA,UAAU,gDACb,SAAAA,EAAA,IAAC,IAAA,CACC,KAAM,GAAGq8B,CAAW,UAAUlkB,EAAK,iBAAiB,GACpD,OAAO,SACP,IAAI,sBACJ,UAAU,yCACX,SAAA,UAAA,CAAA,EAGH,CAEJ,EAEMmkB,EAAsBnkB,GAAS,CACnC,MAAMkkB,EAAclkB,EAAK,UAAY,UACjC,0BACAA,EAAK,UAAY,oBAAsBA,EAAK,UAAY,IACtD,kCACAA,EAAK,UAAY,WACf,0CACAA,EAAK,UAAY,cAAgBA,EAAK,UAAY,WAChD,sDACAA,EAAK,UAAY,iBAAmBA,EAAK,UAAY,MACnD,sCACA,+BAGV,OAAAnY,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAAC,IAAA,CACC,KAAM,GAAGq8B,CAAW,OAAOlkB,EAAK,IAAI,GACpC,OAAO,SACP,IAAI,sBACJ,UAAU,yCAET,SAAAA,EAAK,UAAYoe,GAAoBpe,EAAK,UAAW,CAAE,UAAW,EAAK,CAAC,EAAI,UAAA,CAAA,EAEjF,CAEJ,EAEMwhB,EAAsBxhB,GAAS,CACnC,MAAMtM,EAAesM,GAAM,cAAc,SAAS,YAAY,EAI9D,MAHsB,CAACtM,GAAgBA,IAAiB,6CAIlDsM,EAAK,UAAY,cAAgBA,EAAK,UAAY,iBAC5C,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,UAAU,EAEzDA,EAAK,UAAY,gBACX,MAAI,CAAA,IAAI,eAAe,IAAI,MAAM,UAAU,UAAU,EAE3DA,EAAK,UAAY,iBAAmBA,EAAK,UAAY,YAC/C,MAAI,CAAA,IAAI,aAAa,IAAI,MAAM,UAAU,UAAU,EAEtDnY,EAAA,IAACgjB,GAAW,CAAA,UAAU,wBAAyB,CAAA,EAIpDnX,IAAiB,mDACX,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,UAAU,EAIzDA,GAAgB6rB,EAAW7rB,CAAY,EAEvC7L,EAAA,IAAC,MAAA,CACC,IAAK03B,EAAW7rB,CAAY,EAC5B,IAAKsM,EAAK,aAAa,QAAU,QACjC,UAAU,uBACV,QAAU3Q,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,oBAAA,CACjB,CACF,EAKA2Q,EAAK,cAAc,OAAS,eACtB,MAAI,CAAA,IAAI,qBAAqB,IAAI,QAAQ,UAAU,uBAAuB,EAG7EnY,EAAA,IAACgjB,GAAW,CAAA,UAAU,wBAAyB,CAAA,CACxD,EAyBA,OAtBAljB,EAAAA,UAAU,IAAM,EACU,SAAY,CAClC,UAAWqY,KAAQL,EACb,GAAAK,GAAM,cAAc,SAAW,CAACuf,EAAWvf,EAAK,aAAa,QAAQ,YAAY,CAAC,EAChF,GAAA,CACF,MAAM6f,EAAkB,MAAMtgB,GAA4BS,EAAK,aAAa,OAAO,EAC/E6f,GAAiB,MACnBL,EAAuBrwB,IAAA,CACrB,GAAGA,EACH,CAAC6Q,EAAK,aAAa,QAAQ,YAAY,CAAC,EAAG6f,EAAgB,IAAA,EAC3D,QAEGp1B,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,CAAA,CAIzD,GAEgB,CAAA,EACf,CAACkV,CAAK,CAAC,EAENzW,EACMrB,EAAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAU,aAAA,EAG7C8X,EAAM,aAKR,MAAI,CAAA,UAAU,wFACb,SAAC9X,EAAA,IAAA,MAAA,CAAI,UAAU,YACb,SAAAwE,EAAA,KAAC,MAAA,CACC,UAAU,kBACV,MAAO,CACL,OAAQ,QACR,aAAc,MACd,eAAgB,OAChB,eAAgB,sBAChB,aAAc,OAChB,EACA,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAaJ,SAAA,CAAMsT,EAAA,IAAKK,GACVnY,EAAA,IAAC,MAAA,CAEC,UAAU,2KAEV,SAAAwE,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAA03B,EAAY/jB,CAAI,SAChB,MACC,CAAA,SAAA,CAAAnY,EAAAA,IAAC,OAAI,UAAU,0BACb,SAACwE,EAAA,KAAA,OAAA,CAAK,UAAU,4CACb,SAAA,CAAK2T,EAAA,SAAS,KAAGA,EAAK,WAAa,OAAA,CAAA,CACtC,CACF,CAAA,EACA3T,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mEACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,SAAE,IAAA,CAAA,EACRwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACH,UAAA,UAAU,UAAU2T,EAAK,aAAa,EAChD/U,EAAM,QAAQ,iBAAiB,CACjC,EACA,UAAU,iEAET,SAAA,CAAK+U,EAAA,cAAc,MAAM,EAAG,CAAC,EAAE,MAAIA,EAAK,cAAc,MAAM,EAAE,EAC/DnY,EAAAA,IAAC0c,GAAO,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CAAA,CACpB,EACF,EACC0f,EAAgBjkB,CAAI,CAAA,CACvB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACA3T,EAAAA,KAAC,MAAI,CAAA,UAAU,gCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACZ,SAAA,CAAAm1B,EAAmBxhB,CAAI,QACvB,OAAK,CAAA,UAAU,cAAe,SAAY0jB,EAAA1jB,EAAK,KAAK,CAAE,CAAA,CAAA,EACzD,EACCmkB,EAAmBnkB,CAAI,CAAA,CAC1B,CAAA,CAAA,CACF,CAAA,CAAA,EArCKA,EAAK,EAAA,CAuCb,EAGDnY,EAAA,IAAC,MAAA,CACC,IAAKg7B,EACL,UAAU,gBACV,cAAY,MAAA,CACd,EAGCh1B,SACE,MAAI,CAAA,UAAU,2BACb,SAAChG,EAAAA,IAAA,MAAA,CAAI,UAAU,+DAAgE,CAAA,CACjF,CAAA,CAAA,CAAA,GAGN,CACF,CAAA,EAtFQA,EAAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAY,eAAA,CAwFtD,CCnZA,MAAMu8B,GAAkB,mCAOlBC,GAAe,CACnB,SAAY,wCACZ,QAAW,wCACX,QAAW,4CACX,OAAU,2CACV,SAAY,wCACZ,SAAY,wCACZ,SAAY,6CACZ,mBAAoB,qCACtB,EAGMC,GAAmB,CACvB,WAAc,+CACd,SAAY,+BACZ,mBAAoB,kCACpB,gBAAiB,gCACnB,EAEMC,GAAiBnyB,GAAY,CACjC,GAAI,CAACA,GAAW,OAAOA,GAAY,SAAiB,MAAA,kBAEpD,MAAMoyB,EAAmBpyB,EAAQ,WAAW,IAAI,EAAIA,EAAU,KAAKA,CAAO,GAC1E,MAAO,GAAGoyB,EAAiB,UAAU,EAAG,CAAC,CAAC,MAAMA,EAAiB,UAAUA,EAAiB,OAAS,CAAC,CAAC,EACzG,EAEMC,GAAgB1yB,GAAU,CAC9B,OAAQA,EAAO,CACb,IAAK,GACH,aAAQ2yB,GAAA,CAAQ,UAAU,kBAAkB,KAAM,GAAI,EACxD,IAAK,GACH,aAAQC,GAAA,CAAY,UAAU,gBAAgB,KAAM,GAAI,EAC1D,IAAK,GACH,aAAQA,GAAA,CAAY,UAAU,iBAAiB,KAAM,GAAI,EAC3D,QACS,OAAA,IAAA,CAEb,EAEMC,GAAgB,CAAC,CAAE,OAAAC,EAAQ,QAAAC,EAAS,KAAA9X,KACpC6X,GAAUC,GAAWA,EAAQ,OAE5Bj9B,EAAAA,IAAA,MAAI,CAAA,UAAU,qDACZ,SAAAmlB,IAAS,MACRnlB,EAAAA,IAAC,IAAE,CAAA,UAAU,yBAA0B,SAAA,GAAGi9B,EAAQ,CAAC,EAAE,IAAI,KAAKA,EAAQ,CAAC,EAAE,KAAK,OAAQ,CAAA,EACpF9X,IAAS,MACV3gB,EAAAA,KAAA,MAAI,CAAA,UAAU,UACb,SAAA,CAAAxE,EAAAA,IAAC,KAAE,UAAU,aAAc,WAAQ,CAAC,EAAE,QAAQ,MAAM,EACnDwE,EAAAA,KAAA,IAAE,CAAA,UAAU,iBAAkB,SAAA,CAAAy4B,EAAQ,CAAC,EAAE,MAAM,UAAA,CAAQ,CAAA,CAAA,CAC1D,CAAA,EAECj9B,EAAAA,IAAA,IAAA,CAAE,UAAU,yBAA0B,SAAG,GAAAi9B,EAAQ,CAAC,EAAE,KAAK,OAAA,CAAQ,EAEtE,EAGG,KAGe,SAAAC,GAAW,CAAE,WAAA16B,GAAc,CACjD,KAAM,CAAC26B,EAASC,CAAU,EAAIx9B,EAAAA,SAAS,CAAA,CAAE,EACnC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,IAAI,EAGvC,GAAI4C,GAAY,UAAY,iBAAmBA,GAAY,UAAY,mBAElE,MAAI,CAAA,UAAU,+HACb,SAACgC,EAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,OAAC,KAAA,CAAG,UAAU,yDAAyD,SAAW,cAAA,QACjF,IAAA,CAAE,UAAU,mCAAmC,SAA8D,gEAAA,CAAA,CAAA,CAAA,CAChH,CAAA,CACF,EAIJ1E,EAAAA,UAAU,IAAM,CACd,MAAMw9B,EAAW,SAAY,CACvB,GAAA,CACE,GAAA,CAAC96B,GAAY,gBACT,MAAA,IAAI,MAAM,+BAA+B,EAIjD,GAAIA,EAAW,UAAY,KAAOA,EAAW,UAAY,KAAM,CACvD,MAAA+6B,EAAoB/6B,EAAW,eAAe,EACpD,MAAA,CAIF,GAAIA,EAAW,UAAY,cAAgBA,EAAW,UAAY,WAAY,CACtE,MAAAg7B,EAAsBh7B,EAAW,eAAe,EACtD,MAAA,CAIF,GAAIA,EAAW,UAAY,iBAAmBA,EAAW,UAAY,MAAO,CACpE,MAAAi7B,EAAiBj7B,EAAW,eAAe,EACjD,MAAA,CASF,MAAMk7B,EAAal7B,EAAW,UAAY,UAAY,UAAY,UAE5D+lB,EAAUiU,GAAakB,CAAU,EACvC,GAAI,CAACnV,EACH,MAAM,IAAI,MAAM,wBAAwB/lB,EAAW,OAAO,EAAE,EAG9D,MAAMm7B,EAAkBn7B,EAAW,gBAC3B,QAAA,IAAI,0BAA2Bm7B,CAAe,EAEtD,MAAMC,EAAa,GAAGrV,CAAO,GAAGgU,EAAe,2CAA2CoB,CAAe,0BACnG7pB,EAAW,MAAM,MAAM8pB,CAAU,EAEnC,GAAA,CAAC9pB,EAAS,GAAI,CACV,MAAA+pB,EAAY,MAAM/pB,EAAS,KAAK,EACtC,MAAM,IAAI,MAAM,sBAAsBA,EAAS,MAAM,MAAM+pB,CAAS,EAAE,CAAA,CAGlE,MAAAv1B,EAAO,MAAMwL,EAAS,KAAK,EAE7B,GAAA,CAACxL,GAAM,eACH,MAAA,IAAI,MAAM,0CAA0C,EAG5D,MAAMw1B,EAAcx1B,EAAK,eACtB,OAAgBy1B,GAAAA,GAAS,OAAOA,GAAU,UAAYA,EAAM,YAAY,EACxE,IAAcA,IAAA,CACb,cAAeA,EAAM,aACrB,SAAU,MAAM,QAAQA,EAAM,aAAa,EACvCA,EAAM,cAAc,OAAO,CAACn1B,EAAKkE,IAAUlE,EAAM,OAAOkE,EAAM,SAAW,CAAC,EAAG,CAAC,EAC9E,CAAA,EACJ,EACD,OAAO2oB,GAAUA,EAAO,SAAW,CAAC,EACpC,KAAK,CAAC/rB,EAAGC,IAAMA,EAAE,SAAWD,EAAE,QAAQ,EAEzC0zB,EAAWU,CAAW,EACtBT,EAAS,IAAI,QACNz6B,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7Cy6B,EAASz6B,EAAM,OAAO,EACtBQ,EAAM,MAAM,+BAA+BR,EAAM,OAAO,EAAE,CAAA,QAC1D,CACAtB,EAAW,EAAK,CAAA,CAEpB,EAGM08B,EAAoB,MAAOL,EAAiB/1B,IAAa,CACvD,MAAAq2B,EAAkB,CAAC,mFAAmF,EAGtG/jB,EAAS,MAFQ,IAAIxO,EAAgBiyB,EAAiBM,EAAiBr2B,CAAQ,EAEjD,YAAY,WAAY,EAAG,QAAQ,EAGjEs2B,MAAkB,IACxB,UAAW/jB,KAASD,EAAQ,CAC1B,KAAM,CAAE,GAAAQ,EAAI,QAAAiG,CAAQ,EAAIxG,EAAM,KAC9B+jB,EAAY,IAAIvd,EAAQ,SAAS,EAAGjG,CAAE,CAAA,CAIlC,MAAAyjB,MAAiB,IACZ,UAAAJ,KAASG,EAAY,SAC9B,GAAIH,IAAU,6CAA8C,CAC1D,MAAMK,EAAeD,EAAW,IAAIJ,CAAK,GAAK,EACnCI,EAAA,IAAIJ,EAAOK,EAAe,CAAC,CAAA,CAKnC,OAAA,MAAM,KAAKD,EAAW,QAAQ,CAAC,EACnC,IAAI,CAAC,CAAC5zB,EAASgN,CAAQ,KAAO,CAC7B,cAAehN,EACf,SAAAgN,GACA,EACD,OACCke,GAAAA,EAAO,SAAW,GAClBA,EAAO,gBAAkB,4CAAA,EAE1B,KAAK,CAAC/rB,EAAGC,IAAMA,EAAE,SAAWD,EAAE,QAAQ,CAC3C,EAGM20B,EAAqB,MAAOV,EAAiB/1B,IAAa,CAC9D,MAAM02B,EAAmB,CACvB,sHACA,0HACF,EAEMC,EAAkB,IAAI7yB,EAAgBiyB,EAAiBW,EAAkB12B,CAAQ,EAGjF42B,MAAe,IAGfC,EAAe,MAAMF,EAAgB,YAAY,iBAAkB,EAAG,QAAQ,EAEpF,UAAWpkB,KAASskB,EAAc,CAChC,KAAM,CAAE,KAAAhkB,EAAM,GAAAC,EAAI,MAAA3a,GAAUoa,EAAM,KAElC,GAAIM,IAAS,6CAA8C,CACzD,MAAMikB,EAAcF,EAAS,IAAI/jB,CAAI,GAAK,EACjC+jB,EAAA,IAAI/jB,EAAM,KAAK,IAAI,EAAGikB,EAAc,OAAO3+B,CAAK,CAAC,CAAC,CAAA,CAG7D,GAAI2a,IAAO,6CAA8C,CACvD,MAAMikB,EAAYH,EAAS,IAAI9jB,CAAE,GAAK,EACtC8jB,EAAS,IAAI9jB,EAAIikB,EAAY,OAAO5+B,CAAK,CAAC,CAAA,CAC5C,CAIF,MAAM6+B,EAAc,MAAML,EAAgB,YAAY,gBAAiB,EAAG,QAAQ,EAElF,UAAWpkB,KAASykB,EAAa,CAC/B,KAAM,CAAE,KAAAnkB,EAAM,GAAAC,EAAI,OAAAmkB,GAAW1kB,EAAM,KAEnC,QAAS3L,EAAI,EAAGA,EAAIqwB,EAAO,OAAQrwB,IAAK,CACtC,GAAIiM,IAAS,6CAA8C,CACzD,MAAMikB,EAAcF,EAAS,IAAI/jB,CAAI,GAAK,EACjC+jB,EAAA,IAAI/jB,EAAM,KAAK,IAAI,EAAGikB,EAAc,OAAOG,EAAOrwB,CAAC,CAAC,CAAC,CAAC,CAAA,CAGjE,GAAIkM,IAAO,6CAA8C,CACvD,MAAMikB,EAAYH,EAAS,IAAI9jB,CAAE,GAAK,EACtC8jB,EAAS,IAAI9jB,EAAIikB,EAAY,OAAOE,EAAOrwB,CAAC,CAAC,CAAC,CAAA,CAChD,CACF,CAIK,OAAA,MAAM,KAAKgwB,EAAS,QAAQ,CAAC,EACjC,IAAI,CAAC,CAACj0B,EAASgN,CAAQ,KAAO,CAC7B,cAAehN,EACf,SAAAgN,GACA,EACD,OACCke,GAAAA,EAAO,SAAW,GAClBA,EAAO,gBAAkB,4CAAA,EAE1B,KAAK,CAAC/rB,EAAGC,IAAMA,EAAE,SAAWD,EAAE,QAAQ,CAC3C,EAGM6zB,EAAsB,MAAOI,GAAoB,CACjD,GAAA,CAEI,MAAA/1B,EAAW,IAAI6b,GACnBjhB,EAAW,UAAY,IACnB,+BACA,8BACN,EAGMs8B,EAAYt8B,EAAW,MAAM,YAAY,EAAE,QAAQ,IAAK,EAAE,IAAM,WACrDA,EAAW,WAAW,cAAc,QAAQ,IAAK,EAAE,IAAM,WACzDA,EAAW,cAAc,YAAc,EAAA,QAAQ,IAAK,EAAE,IAAM,UAEzE,IAAAs7B,EACAgB,EACYhB,EAAA,MAAMO,EAAmBV,EAAiB/1B,CAAQ,EAElDk2B,EAAA,MAAME,EAAkBL,EAAiB/1B,CAAQ,EAGjEw1B,EAAWU,CAAW,EACtBT,EAAS,IAAI,QACNz6B,EAAO,CACN,QAAA,MAAM,kCAAmCA,CAAK,EACtDy6B,EAASz6B,EAAM,OAAO,EACtBQ,EAAM,MAAM,2BAA2BR,EAAM,OAAO,EAAE,CAAA,CAE1D,EAGM46B,EAAwB,MAAOG,GAAoB,CACnD,GAAA,CAEF,MAAM/1B,EAAW,IAAI6b,GAAuBgZ,GAAiB,UAAU,EAGjEqC,EAAYt8B,EAAW,MAAM,YAAY,EAAE,QAAQ,IAAK,EAAE,IAAM,WACrDA,EAAW,WAAW,cAAc,QAAQ,IAAK,EAAE,IAAM,WACzDA,EAAW,cAAc,YAAc,EAAA,QAAQ,IAAK,EAAE,IAAM,UAEzE,IAAAs7B,EACAgB,EACYhB,EAAA,MAAMO,EAAmBV,EAAiB/1B,CAAQ,EAElDk2B,EAAA,MAAME,EAAkBL,EAAiB/1B,CAAQ,EAGjEw1B,EAAWU,CAAW,EACtBT,EAAS,IAAI,QACNz6B,EAAO,CACN,QAAA,MAAM,oCAAqCA,CAAK,EACxDy6B,EAASz6B,EAAM,OAAO,EACtBQ,EAAM,MAAM,2BAA2BR,EAAM,OAAO,EAAE,CAAA,CAE1D,EAGM66B,EAAmB,MAAOE,GAAoB,CAC9C,GAAA,CAEF,MAAM/1B,EAAW,IAAI6b,GAAuBgZ,GAAiB,eAAe,CAAC,EAGvEqC,EAAYt8B,EAAW,MAAM,YAAY,EAAE,QAAQ,IAAK,EAAE,IAAM,WACrDA,EAAW,WAAW,cAAc,QAAQ,IAAK,EAAE,IAAM,WACzDA,EAAW,cAAc,YAAc,EAAA,QAAQ,IAAK,EAAE,IAAM,UAEzE,IAAAs7B,EACAgB,EACYhB,EAAA,MAAMO,EAAmBV,EAAiB/1B,CAAQ,EAElDk2B,EAAA,MAAME,EAAkBL,EAAiB/1B,CAAQ,EAGjEw1B,EAAWU,CAAW,EACtBT,EAAS,IAAI,QACNz6B,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,EACnDy6B,EAASz6B,EAAM,OAAO,EACtBQ,EAAM,MAAM,2BAA2BR,EAAM,OAAO,EAAE,CAAA,CAE1D,EAEIJ,GACO86B,EAAA,CACX,EACC,CAAC96B,CAAU,CAAC,EAET,MAAAu8B,EAAoBjB,GAAgB,CACtBA,EAAY,OAAO,CAACl1B,EAAKo2B,IAAMp2B,EAAMo2B,EAAE,SAAU,CAAC,EAC9D,MAAAC,EAAU,KAAK,IAAI,GAAGnB,EAAY,IAAIkB,GAAKA,EAAE,QAAQ,CAAC,EAoCtDE,GAjCuBC,GAAQ,CACnC,GAAIA,GAAO,EACF,MAAA,CACL,CAAE,IAAK,EAAG,IAAK,EAAG,MAAO,OAAQ,EACjC,CAAE,IAAK,EAAG,IAAK,EAAG,MAAO,UAAW,EACpC,CAAE,IAAK,EAAG,IAAK,EAAG,MAAO,UAAW,CACtC,EACF,GAAWA,GAAO,GACT,MAAA,CACL,CAAE,IAAK,EAAG,IAAK,EAAG,MAAO,UAAW,EACpC,CAAE,IAAK,EAAG,IAAK,EAAG,MAAO,UAAW,EACpC,CAAE,IAAK,EAAG,IAAK,GAAI,MAAO,WAAY,CACxC,EACF,GAAWA,GAAO,GACT,MAAA,CACL,CAAE,IAAK,EAAG,IAAK,EAAG,MAAO,UAAW,EACpC,CAAE,IAAK,EAAG,IAAK,GAAI,MAAO,WAAY,EACtC,CAAE,IAAK,GAAI,IAAK,GAAI,MAAO,YAAa,CAC1C,EACK,CACL,MAAMljB,EAAO,KAAK,KAAKkjB,EAAM,CAAC,EACvB,MAAA,CACL,CAAE,IAAK,EAAG,IAAKljB,EAAM,MAAO,KAAKA,CAAI,OAAQ,EAC7C,CAAE,IAAKA,EAAO,EAAG,IAAKA,EAAO,EAAG,MAAO,GAAGA,EAAO,CAAC,IAAIA,EAAO,CAAC,OAAQ,EACtE,CAAE,IAAKA,EAAO,EAAI,EAAG,IAAKA,EAAO,EAAG,MAAO,GAAGA,EAAO,EAAI,CAAC,IAAIA,EAAO,CAAC,OAAQ,EAC9E,CAAE,IAAKA,EAAO,EAAI,EAAG,IAAAkjB,EAAU,MAAO,GAAGljB,EAAO,EAAI,CAAC,QAAS,CAChE,CAAA,CAEJ,GAEmCgjB,CAAO,EAGV,IAAcG,IAAA,CAC5C,KAAMA,EAAM,MACZ,MAAOA,EAAM,MACb,MAAOtB,EAAY,UACjBkB,EAAE,UAAYI,EAAM,KAAOJ,EAAE,UAAYI,EAAM,GAAA,EAC/C,MAAA,EACF,EAAE,OAAYC,GAAAA,EAAE,MAAQ,CAAC,EAGrBC,EAAYxB,EAAY,MAAM,EAAG,EAAE,EAAE,IAAUkB,IAAA,CACnD,KAAMtC,GAAcsC,EAAE,aAAa,EACnC,MAAOA,EAAE,QAAA,EACT,EAGIO,EAAiBzB,EAAY,IAAI,CAACkB,EAAGxwB,KAAO,CAChD,KAAMA,EACN,MAAOsvB,EAAY,MAAM,EAAGtvB,EAAI,CAAC,EAAE,OAAO,CAAC5F,EAAKo2B,IAAMp2B,EAAMo2B,EAAE,SAAU,CAAC,CAAA,EACzE,EAEF,MAAO,CAAE,iBAAAE,EAAkB,UAAAI,EAAW,eAAAC,CAAe,CACvD,EAEA,GAAIl+B,EAEA,OAACrB,MAAA,OAAI,UAAU,yCACb,SAACA,EAAA,IAAA,MAAI,CAAA,UAAU,gEAAgE,EACjF,EAIJ,GAAI4C,EAEA,OAAC4B,EAAA,KAAA,MAAI,CAAA,UAAU,oBACb,SAAA,OAAC,MAAA,CAAI,UAAU,sCAAsC,SAA0B,6BAAA,QAC9E,MAAA,CAAI,UAAU,2CAA4C,SAAM5B,CAAA,CAAA,CAAA,EACnE,EAIJ,KAAM,CAAE,iBAAAs8B,EAAkB,UAAAI,EAAW,eAAAC,CAAe,EAAIR,EAAiB5B,CAAO,EAC1EqC,EAAgBrC,EAAQ,OAAO,CAACv0B,EAAK6sB,IAAW7sB,EAAM6sB,EAAO,SAAU,CAAC,EAG5E,OAACjxB,EAAA,KAAA,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wFACb,SAAA,OAAC,KAAA,CAAG,UAAU,gDAAgD,SAAc,iBAAA,EAC3ExE,EAAA,IAAA,IAAA,CAAE,UAAU,wDAAyD,WAAQ,OAAO,EACpFA,EAAAA,IAAA,OAAI,UAAU,OACb,SAACA,EAAA,IAAAy/B,GAAoB,CAAA,MAAM,OAAO,OAAO,OACvC,SAAAj7B,EAAA,KAACk7B,GAAA,CACC,KAAMR,EACN,QAAS,GACT,OAAQ,CAAE,IAAK,EAAG,MAAO,EAAG,OAAQ,EAAG,KAAM,CAAE,EAE/C,SAAA,CAAAl/B,EAAA,IAAC2/B,GAAA,CACC,QAAQ,OACR,KAAM,EAAA,CACR,EACA3/B,EAAA,IAAC4/B,GAAA,CACC,QAAkBC,GAAC7/B,MAAA+8B,IAAe,GAAG8C,EAAO,KAAK,MAAM,EACvD,OAAQ,CAAE,KAAM,wBAAyB,CAAA,CAC3C,EACA7/B,EAAA,IAAC8/B,GAAA,CACC,QAAQ,QACR,KAAK,UACL,OAAQ,CAAC,EAAG,EAAG,EAAG,CAAC,CAAA,CAAA,CACrB,CAAA,CACF,CAAA,CACF,CAAA,CACF,QACC,IAAA,CAAE,UAAU,4DAA4D,SAAgC,kCAAA,CAAA,CAAA,EAC3G,EAECt7B,EAAAA,KAAA,MAAI,CAAA,UAAU,wFACb,SAAA,OAAC,KAAA,CAAG,UAAU,gDAAgD,SAAW,cAAA,EACxEA,EAAAA,KAAA,IAAE,CAAA,UAAU,wDACV,SAAA,CAAAg7B,EAAgB,GACbrC,EAAQ,MAAM,EAAG,EAAE,EAAE,OAAO,CAACv0B,EAAKo2B,IAAMp2B,EAAMo2B,EAAE,SAAU,CAAC,EAAIQ,EAAiB,KAAK,QAAQ,CAAC,EAC9F,IAAI,GAAA,EACV,QACC,MAAI,CAAA,UAAU,OACb,SAACx/B,EAAA,IAAAy/B,GAAoB,CAAA,MAAM,OAAO,OAAO,OACvC,SAACj7B,EAAAA,KAAAu7B,GACC,CAAA,SAAA,CAAA//B,EAAA,IAACggC,GAAA,CACC,KAAMV,EACN,QAAQ,QACR,QAAQ,OACR,GAAG,MACH,GAAG,MACH,YAAa,GACb,YAAa,GAEZ,SAAUA,EAAA,IAAI,CAACW,EAAO/1B,IACpBlK,EAAA,IAAAkgC,GAAA,CAAiB,KAAM,kBAAkB,GAAMh2B,EAAQ,CAAE,IAAA,EAA/CA,CAAqD,CACjE,CAAA,CACH,EACClK,EAAAA,IAAA4/B,GAAQ,CAAA,QAAkBC,GAAA7/B,EAAAA,IAAC+8B,IAAe,GAAG8C,EAAO,KAAK,KAAM,CAAA,CAAI,CAAA,CAAA,CACtE,CAAA,CACF,CAAA,EACF,QACC,IAAA,CAAE,UAAU,4DAA4D,SAA2B,6BAAA,CAAA,CAAA,EACtG,EAECr7B,EAAAA,KAAA,MAAI,CAAA,UAAU,wFACb,SAAA,OAAC,KAAA,CAAG,UAAU,gDAAgD,SAAe,kBAAA,QAC5E,IAAA,CAAE,UAAU,wDACV,SAAQ24B,EAAA,OAAS,GAAKqC,EAAgBrC,EAAQ,QAAQ,QAAQ,CAAC,EAAI,IACtE,QACC,MAAA,CAAI,UAAU,OACb,eAACsC,GAAA,CAAoB,MAAM,OAAO,OAAO,OACvC,SAACj7B,EAAA,KAAA27B,GAAA,CAAU,KAAMZ,EACf,SAAA,OAAC,OACC,CAAA,SAAA/6B,EAAA,KAAC,iBAAe,CAAA,GAAG,cAAc,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IACvD,SAAA,CAAAxE,MAAC,QAAK,OAAO,KAAK,UAAU,UAAU,YAAa,GAAI,QACtD,OAAK,CAAA,OAAO,MAAM,UAAU,UAAU,YAAa,CAAE,CAAA,CAAA,CAAA,CACxD,CAAA,CACF,EACCA,EAAAA,IAAA4/B,IAAQ,QAASC,GAAU7/B,MAAA+8B,GAAe,CAAA,GAAG8C,CAAO,CAAA,EAAI,EACzD7/B,EAAAA,IAACogC,IAAK,KAAK,WAAW,QAAQ,QAAQ,OAAO,UAAU,KAAK,mBAAoB,CAAA,CAAA,CAClF,CAAA,CACF,CAAA,EACF,QACC,IAAA,CAAE,UAAU,4DAA4D,SAA2B,6BAAA,CAAA,CAAA,CACtG,CAAA,CAAA,EACF,EAGC57B,EAAAA,KAAA,MAAI,CAAA,UAAU,wFACb,SAAA,OAAC,KAAA,CAAG,UAAU,gDAAgD,SAAW,cAAA,QACxE,MAAA,CAAI,UAAU,YACZ,SAAQ24B,EAAA,SAAW,EAClBn9B,EAAAA,IAAC,MAAI,CAAA,UAAU,+CAA+C,SAAA,qBAE9D,CAAA,EAEAA,EAAA,IAAC,MAAA,CACC,UAAU,kBACV,MAAO,CACL,UAAWm9B,EAAQ,OAAS,EAAI,QAAU,OAC1C,aAAcA,EAAQ,OAAS,EAAI,MAAQ,IAC3C,eAAgB,OAChB,eAAgB,qBAClB,EACA,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAaJ,SAAQA,EAAA,IAAI,CAAC1H,EAAQvrB,IACpB1F,EAAA,KAAC,MAAA,CAEC,UAAU,sIAEV,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uCACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,mCAAmC,SAAA,CAAA,IAAE0F,EAAQ,CAAA,EAAE,EAC9D0yB,GAAa1yB,CAAK,CAAA,EACrB,EACC1F,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,MAAC,QAAK,UAAU,4CACb,SAAc08B,GAAAjH,EAAO,aAAa,EACrC,EACAz1B,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACH,UAAA,UAAU,UAAUy1B,EAAO,aAAa,EAClDryB,EAAM,QAAQ,iBAAiB,CACjC,EACA,UAAU,uDAEV,SAACpD,EAAAA,IAAA0c,GAAO,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACpB,CACF,CAAA,CAAA,EACF,EACClY,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,mCAAoC,SAAA,CAAOixB,EAAA,SAAS,OAAA,EAAK,EACxEjxB,EAAAA,KAAA,OAAK,CAAA,UAAU,iCACX,SAAA,EAAAixB,EAAO,SAAW+J,EAAiB,KAAK,QAAQ,CAAC,EAAE,GAAA,CACxD,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EA5BK/J,EAAO,aA8Bf,CAAA,CAAA,CAAA,CAGP,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,CChlBO,MAAM4K,GAAkB91B,GACxBA,EACE,GAAGA,EAAQ,MAAM,EAAG,CAAC,CAAC,MAAMA,EAAQ,MAAM,EAAE,CAAC,GAD/B,GCqBV+1B,GAAc,MAAO,CAAE,KAAArvB,EAAM,OAAAsvB,EAAQ,kBAAAzpB,EAAmB,QAAA0pB,EAAU,QAAW,CACxF,GAAI,CACF,MAAMC,EAAcj+B,GAAW9B,GAAI,cAAeoW,EAAmB,UAAU,EAEzE4pB,EAAc,CAClB,KAAMzvB,EAAK,KAAM,EACjB,OAAQsvB,EAAO,YAAa,EAC5B,UAAWnqB,GAAiB,CAC7B,EAGD,OAAIoqB,GACFE,EAAY,QAAU,CACpB,UAAWF,EAAQ,UACnB,KAAMA,EAAQ,KAAK,UAAU,EAAG,GAAG,EACnC,OAAQA,EAAQ,OAAO,YAAW,CACnC,EACDE,EAAY,SAAWF,EAAQ,UAAYA,EAAQ,UACnDE,EAAY,SAAW,GACvBA,EAAY,YAAcF,EAAQ,YAAcA,EAAQ,YAAc,EAAI,IAG1EE,EAAY,QAAU,KACtBA,EAAY,SAAW,KACvBA,EAAY,SAAW,GACvBA,EAAY,YAAc,MAG5B,MAAM/qB,GAAO8qB,EAAaC,CAAW,EAC9B,EACR,OAAQ99B,EAAO,CACd,eAAQ,MAAM,yBAA0BA,CAAK,EACtC,EACX,CACA,EAEa+9B,GAAsB,CAAC7pB,EAAmBR,IAAa,CAClE,MAAMmqB,EAAcj+B,GAAW9B,GAAI,cAAeoW,EAAmB,UAAU,EAEzExU,EAAIC,GACRk+B,EACA55B,GAAQ,YAAa,MAAM,EAC3BE,GAAM,GAAG,CACV,EAED,OAAOwP,GAAWjU,EAAIkU,GAAa,CACjC,MAAMoqB,EAAW,CAAE,EACnBpqB,EAAS,QAASzU,GAAQ,CACxB,MAAMuG,EAAOvG,EAAI,KAAM,EACvB6+B,EAAS,KAAK,CACZ,GAAI7+B,EAAI,GACR,GAAGuG,EACH,UAAWA,EAAK,qBAAqBu4B,GAAYv4B,EAAK,UAAU,OAAQ,EAAG,IAAI,IACvF,CAAO,CACP,CAAK,EAGD,MAAMw4B,EAAiBF,EAAS,KAAK,CAACl3B,EAAGC,IAAM,CAE7C,MAAMo3B,EAAcr3B,EAAE,UAAYC,EAAE,UACpC,OAAIo3B,IAAgB,EAAUA,EAG1Br3B,EAAE,WAAaC,EAAE,GAAW,EAC5BA,EAAE,WAAaD,EAAE,GAAW,GAEzB,CACb,CAAK,EAED4M,EAASwqB,CAAc,CAC3B,CAAG,CACH,EAEaE,GAAoB,MAAOlqB,EAAmBmqB,IAAe,CACxE,GAAI,CAEF,MAAMC,EAAgBn/B,GAAIrB,GAAI,cAAeoW,EAAmB,aAAc,aAAa,EAE3F,aAAM9T,GAAOk+B,EAAe,CAC1B,UAAWD,EACX,UAAW7qB,GAAe,CAChC,CAAK,EAEM,EACR,OAAQxT,EAAO,CACd,cAAQ,MAAM,+BAAgCA,CAAK,EAC7CA,CACV,CACA,EAGau+B,GAAkB,MAAOrqB,GAAsB,CAC1D,GAAI,CACF,MAAMoqB,EAAgBn/B,GAAIrB,GAAI,cAAeoW,EAAmB,aAAc,aAAa,EACrFsqB,EAAU,MAAMn/B,GAAOi/B,CAAa,EAE1C,OAAIE,EAAQ,SACHA,EAAQ,OAAO,WAAa,CAAE,EAEhC,CAAE,CACV,OAAQx+B,EAAO,CACd,eAAQ,MAAM,8BAA+BA,CAAK,EAC3C,CAAE,CACb,CACA,EAEay+B,GAAgB,MAAOvqB,EAAmBwqB,IAAc,CACnE,GAAI,CACF,MAAMC,EAAax/B,GAAIrB,GAAI,cAAeoW,EAAmB,WAAYwqB,CAAS,EAClF,aAAME,GAAUD,CAAU,EACnB,EACR,OAAQ3+B,EAAO,CACd,cAAQ,MAAM,0BAA2BA,CAAK,EACxCA,CACV,CACA,ECvIM6+B,GAAkBC,GAAS,CAC/B,MAAMC,EAAOD,EAAK,YAAc,EAAA,MAAM,EAAG,EAAE,EACrCE,EAAM,SAASD,EAAM,EAAE,EAAI,IAC1B,MAAA,CACL,QAAS,OAAOC,CAAG,cACnB,UAAW,QAAQA,EAAM,IAAM,GAAG,cAClC,OAAQ,QAAQA,EAAM,KAAO,GAAG,cAChC,UAAW,QAAQA,EAAM,KAAO,GAAG,cACnC,WAAY,SACd,CACF,EAEMC,GAAgB,CAAC,CAAE,QAAAt3B,EAAS,KAAAu3B,EAAO,MAAS,CAC1C,MAAAC,EAASN,GAAel3B,CAAO,EAG/By3B,EAAW,MAAM,KAAK,CAAE,OAAQ,CAAE,EAAG,CAACzzB,EAAGC,IAC7C,SAASjE,EAAQ,MAAM,EAAIiE,EAAI,EAAG,EAAIA,EAAI,CAAC,EAAG,EAAE,CAClD,EAGMyzB,EAAe/3B,GAAU,CAC7B,MAAMg4B,EAASF,EAAS,CAAC,EAAI,KAAQ,KAAK,GAAK,KACzCG,EAAS,GAAMH,EAAS,CAAC,EAAI,GAC7BI,EAAI,GAAK,KAAK,IAAIF,EAAQh4B,CAAK,EAAIi4B,EACnCE,EAAI,GAAK,KAAK,IAAIH,EAAQh4B,CAAK,EAAIi4B,EAClC,MAAA,CAAE,EAAAC,EAAG,EAAAC,CAAE,CAChB,EAGMC,EAAS,MAAM,KAAK,CAAE,OAAQ,CAAE,EAAG,CAAC/zB,EAAGC,IAAMyzB,EAAYzzB,EAAI,KAAK,GAAK,CAAC,CAAC,EAG7E,OAAAhK,EAAA,KAAC,MAAA,CACC,MAAOs9B,EACP,OAAQA,EACR,QAAQ,YACR,KAAK,OACL,MAAM,6BAGN,SAAA,CAAC9hC,EAAAA,IAAA,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,KAAM+hC,EAAO,UAAY,CAAA,EAGxD/hC,EAAA,IAAC,OAAA,CACC,EAAG;AAAA,cACGsiC,EAAO,CAAC,EAAE,CAAC,IAAIA,EAAO,CAAC,EAAE,CAAC;AAAA,cAC1BA,EAAO,CAAC,EAAE,CAAC,IAAIA,EAAO,CAAC,EAAE,CAAC;AAAA,cAC1BA,EAAO,CAAC,EAAE,CAAC,IAAIA,EAAO,CAAC,EAAE,CAAC;AAAA,cAC1BA,EAAO,CAAC,EAAE,CAAC,IAAIA,EAAO,CAAC,EAAE,CAAC;AAAA,cAC1BA,EAAO,CAAC,EAAE,CAAC,IAAIA,EAAO,CAAC,EAAE,CAAC;AAAA,cAC1BA,EAAO,CAAC,EAAE,CAAC,IAAIA,EAAO,CAAC,EAAE,CAAC;AAAA;AAAA,UAGhC,KAAMP,EAAO,QACb,QAAQ,KAAA,CACV,EAGCO,EAAO,IAAI,CAACC,EAAO/zB,IAClBxO,EAAA,IAAC,SAAA,CAEC,GAAIuiC,EAAM,EACV,GAAIA,EAAM,EACV,EAAG,EAAKP,EAASxzB,CAAC,EAAI,EACtB,KAAMA,EAAI,EAAIuzB,EAAO,UAAYA,EAAO,OACxC,QAAQ,KAAA,EALHvzB,CAAA,CAOR,EAGDxO,EAAA,IAAC,OAAA,CACC,EAAG;AAAA,cACG,GAAKgiC,EAAS,CAAC,EAAI,EAAE,IAAI,GAAKA,EAAS,CAAC,EAAI,EAAE;AAAA,iBACxC,GAAKA,EAAS,CAAC,EAAI,EAAE;AAAA,cAC3B,GAAKA,EAAS,CAAC,EAAI,EAAE,IAAI,GAAKA,EAAS,CAAC,EAAI,EAAE;AAAA,UAEpD,OAAQD,EAAO,UACf,YAAY,IACZ,KAAK,MAAA,CACP,EAGA/hC,EAAA,IAAC,SAAA,CACC,GAAG,KACH,GAAG,KACH,EAAG,EAAKgiC,EAAS,CAAC,EAAI,EACtB,KAAMD,EAAO,UACb,QAAQ,KAAA,CACV,EAGC,MAAM,KAAK,CAAE,OAAQ,CAAA,CAAG,EAAE,IAAI,CAACxzB,EAAGC,IACjCxO,EAAA,IAAC,OAAA,CAEC,GAAI,GAAK,KAAK,IAAIgiC,EAASxzB,CAAC,EAAI,KAAK,GAAK,EAAE,EAAI,GAChD,GAAI,GAAK,KAAK,IAAIwzB,EAASxzB,CAAC,EAAI,KAAK,GAAK,EAAE,EAAI,GAChD,GAAI,GAAK,KAAK,KAAKwzB,EAASxzB,CAAC,EAAI,GAAK,KAAK,GAAK,EAAE,EAAI,GACtD,GAAI,GAAK,KAAK,KAAKwzB,EAASxzB,CAAC,EAAI,GAAK,KAAK,GAAK,EAAE,EAAI,GACtD,OAAQuzB,EAAO,OACf,YAAY,MACZ,QAAQ,KAAA,EAPHvzB,CASR,CAAA,CAAA,CAAA,CACH,CAEJ,EC3FMg0B,GAAc,CAClB,KAAM,CACJ,GAAI,eACJ,OAAQ,cACR,cAAe,CACb,KAAM,6BACN,SAAU,2BACZ,EACA,MAAO,CACL,GAAI,cACJ,KAAM,aACN,YAAa,eACf,EACA,QAAS,CACP,GAAI,iBACJ,KAAM,gBACR,EACA,KAAM,gBACN,KAAM,iBACN,YAAa,aACf,EACA,MAAO,CACL,GAAI,cACJ,OAAQ,WACR,cAAe,CACb,KAAM,6BACN,SAAU,2BACZ,EACA,MAAO,CACL,GAAI,cACJ,KAAM,gBACN,YAAa,eACf,EACA,QAAS,CACP,GAAI,iBACJ,KAAM,eACR,EACA,KAAM,eACR,EACA,SAAU,CACR,GAAI,6DACJ,OAAQ,cACR,cAAe,CACb,KAAM,4BACN,SAAU,2BACZ,EACA,MAAO,CACL,GAAI,iBACJ,KAAM,gBACN,YAAa,eACf,EACA,QAAS,CACP,GAAI,iBACJ,KAAM,eACR,EACA,KAAM,kBACR,EACA,OAAQ,CACN,GAAI,4DACJ,OAAQ,cACR,cAAe,CACb,KAAM,8BACN,SAAU,2BACZ,EACA,MAAO,CACL,GAAI,gBACJ,KAAM,aACN,YAAa,eACf,EACA,QAAS,CACP,GAAI,mBACJ,KAAM,iBACR,EACA,KAAM,qBACN,KAAM,kBACN,YAAa,aACf,EACA,OAAQ,CACN,GAAI,8DACJ,OAAQ,cACR,cAAe,CACb,KAAM,6BACN,SAAU,2BACZ,EACA,MAAO,CACL,GAAI,kBACJ,KAAM,iBACN,YAAa,eACf,EACA,QAAS,CACP,GAAI,kBACJ,KAAM,gBACR,EACA,KAAM,mBACR,EACA,MAAO,CACL,GAAI,8DACJ,OAAQ,kBACR,cAAe,CACb,KAAM,8BACN,SAAU,6BACZ,EACA,MAAO,CACL,GAAI,kBACJ,KAAM,iBACN,YAAa,mBACf,EACA,QAAS,CACP,GAAI,kBACJ,KAAM,gBACR,EACA,KAAM,mBACR,EACA,MAAO,CACL,GAAI,2DACJ,OAAQ,cACR,cAAe,CACb,KAAM,4BACN,SAAU,2BACZ,EACA,MAAO,CACL,GAAI,iBACJ,KAAM,gBACN,YAAa,eACf,EACA,QAAS,CACP,GAAI,iBACJ,KAAM,eACR,EACA,KAAM,kBACR,EACA,OAAQ,CACN,GAAI,iEACJ,OAAQ,cACR,cAAe,CACb,KAAM,8BACN,SAAU,6BACZ,EACA,MAAO,CACL,GAAI,mBACJ,KAAM,kBACN,YAAa,eACf,EACA,QAAS,CACP,GAAI,mBACJ,KAAM,iBACR,EACA,KAAM,oBACR,EACA,OAAQ,CACN,GAAI,8CACJ,OAAQ,cACR,cAAe,CACb,KAAM,6BACN,SAAU,uDACZ,EACA,MAAO,CACL,GAAI,cACJ,KAAM,iBACN,YAAa,mBACf,EACA,QAAS,CACP,GAAI,iBACJ,KAAM,gBACR,EACA,KAAM,mBAAA,CAEV,EAGMC,GAAe,CAAC,CAAE,QAAAjC,EAAS,QAAA7kB,CAC/B,IAAAnX,OAAC,MAAI,CAAA,UAAU,sEACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,sCAAuC,CAAA,EACtDwE,EAAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAA0iC,GAAA,CAAmB,UAAU,wBAAyB,CAAA,EACvDl+B,EAAAA,KAAC,OAAK,CAAA,UAAU,6BAA6B,SAAA,CAAA,eAC9B67B,GAAeG,EAAQ,MAAM,CAAA,CAC5C,CAAA,CAAA,EACF,EACCxgC,EAAA,IAAA,MAAA,CAAI,UAAU,+CACZ,WAAQ,IACX,CAAA,CAAA,EACF,EACAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,0CAEV,SAAA3b,EAAAA,IAAC2iC,GAAU,CAAA,UAAU,2CAA4C,CAAA,CAAA,CAAA,CACnE,EACF,EAIIC,GAAgB,CAAC,CAAE,QAAAC,EAAS,YAAAC,EAAa,iBAAAC,EAAkB,QAAAC,EAAS,aAAAC,EAAc,SAAAC,EAAU,UAAAC,EAAW,iBAAAC,EAAkB,QAAA74B,CAAA,IAAc,CAC3I,MAAM84B,EAAW,CAACR,EAAQ,aAAeA,EAAQ,YAAc,EAEzDS,EAAmBhC,GAAc,CACrC,MAAMiC,EAAU,SAAS,eAAe,WAAWjC,CAAS,EAAE,EAC1DiC,IACFA,EAAQ,eAAe,CAAE,SAAU,SAAU,MAAO,SAAU,EACtDA,EAAA,UAAU,IAAI,mBAAmB,EACzC,WAAW,IAAMA,EAAQ,UAAU,OAAO,mBAAmB,EAAG,GAAI,EAExE,EAGMC,EAAOX,EAAQ,KAAK,MAAM,sCAAsC,GAAK,CAAC,EAG1E,OAAAr+B,OAAC,OAAI,UAAU,iBAAiB,GAAI,WAAWq+B,EAAQ,EAAE,GACtD,SAAA,CAAAA,EAAQ,SACPr+B,EAAA,KAAC,SAAA,CACC,QAAS,IAAM8+B,EAAgBT,EAAQ,QAAQ,SAAS,EACxD,UAAU;AAAA,gFAGV,SAAA,CAAC7iC,EAAAA,IAAA,MAAA,CAAI,UAAU,sCAAuC,CAAA,EACtDwE,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kCACb,SAAA,CAACxE,EAAAA,IAAA0iC,GAAA,CAAmB,UAAU,wBAAyB,CAAA,EACvD1iC,MAAC,QAAK,UAAU,6BACb,YAAe6iC,EAAQ,QAAQ,MAAM,CACxC,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,iCACZ,SAAAA,EAAQ,QAAQ,IACnB,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAGF7iC,MAAC,OAAI,UAAW;AAAA;AAAA,UAEZ8iC,EAAc,cAAgB,eAAe;AAAA;AAAA,QAG/C,SAAA9iC,EAAAA,IAAC,OAAI,UAAW;AAAA;AAAA,YAEZ8iC,EAAc,YAAc,aAAa;AAAA,UAE3C,SAAAt+B,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAA,OAAC,OAAI,UAAW;AAAA;AAAA,gBAEZs+B,EAAc,gBAAkB,eAAe;AAAA,gBAC/CC,EACE,8DACAD,EACEI,EAASD,CAAY,EAAE,cAAc,KACrCC,EAASD,CAAY,EAAE,cAAc,QAC3C;AAAA,cAEA,SAAA,CAAAjjC,MAAC,OAAI,UAAU,mCACZ,SAAuByjC,GAAAZ,EAAQ,IAAI,EACtC,EAGCW,EAAK,IAAI,CAACvf,EAAK/Z,IACdlK,EAAA,IAAC0jC,GAAA,CAEC,IAAAzf,EACA,aAAAgf,EACA,SAAAC,CAAA,EAHKh5B,CAKR,CAAA,CAAA,EACH,EAEA1F,EAAAA,KAAC,MAAI,CAAA,UAAU;AAAA,0DAEZ,SAAA,CACC6+B,GAAArjC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMgjC,EAAQH,CAAO,EAC9B,UAAU,uDACV,MAAM,QAEN,SAAA7iC,EAAAA,IAAC0iC,GAAmB,CAAA,UAAU,4BAA6B,CAAA,CAAA,CAC7D,EAIDS,EAAU54B,CAAO,IAAMu4B,GAAe,CAACA,IACtC9iC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMojC,EAAiB,SAAUP,EAAQ,OAAQA,EAAQ,EAAE,EACpE,UAAU,+CACV,MAAM,iBAEN,SAAA7iC,EAAAA,IAAC2jC,GAAQ,CAAA,UAAU,aAAc,CAAA,CAAA,CACnC,EAIDR,EAAU54B,CAAO,GAAK,CAACu4B,GACtB9iC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMojC,EAAiB,MAAOP,EAAQ,MAAM,EACrD,UAAU,+CACV,MAAM,WAEN,SAAA7iC,EAAAA,IAAC4jC,GAAM,CAAA,UAAU,aAAc,CAAA,CAAA,CAAA,CACjC,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAGCf,EAAQ,UAAY,CAACA,EAAQ,SAC3B7iC,EAAA,IAAA,MAAA,CAAI,UAAU,uCACZ,SACE,SAAA,UAAY07B,EAAE,WAAamH,EAAQ,UAAYnH,EAAE,KAAOmH,EAAQ,EAAE,EAClE,IACCgB,GAAA7jC,EAAA,IAAC4iC,GAAA,CAEC,QAASiB,EACT,YAAaA,EAAc,OAAO,YAAY,IAAMt5B,GAAS,YAAY,EACzE,iBAAkB44B,EAAUU,EAAc,MAAM,EAChD,QAAS,YACT,aAAAZ,EACA,SAAAC,EACA,UAAAC,EACA,iBAAAC,EACA,QAAA74B,CAAA,EATKs5B,EAAc,EAAA,CAWtB,CACL,CAAA,CAAA,EAEJ,CAEJ,EAGMC,GAAU,CAAC,CAAE,KAAAC,EAAM,QAAApoB,EAAS,gBAAAqoB,EAAiB,QAAAC,KAC5CF,QAGF,MAAI,CAAA,UAAU,kEACb,SAACv/B,EAAA,KAAA,MAAA,CAAI,UAAU,gDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,+BAA+B,SAAY,eAAA,EACzDA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,mDAEV,SAAA3b,EAAAA,IAAC2iC,GAAU,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CACjC,EACF,QAEC,MAAI,CAAA,UAAU,iDACZ,SAAgBqB,EAAA,SAAW,EACzBhkC,MAAA,IAAA,CAAE,UAAU,iCAAiC,SAAA,iBAAA,CAAe,EAE7DgkC,EAAgB,OACbx/B,EAAAA,KAAA,MAAA,CAAkB,UAAU,kEAC3B,SAAA,CAAAxE,MAAC,OAAK,CAAA,UAAU,gBAAiB,SAAAqgC,GAAe91B,CAAO,EAAE,EACzDvK,EAAA,IAAC,SAAA,CACC,QAAS,IAAMikC,EAAQ15B,CAAO,EAC9B,UAAU,6FACX,SAAA,OAAA,CAAA,CAED,CAPQ,EAAAA,CAQV,CACD,CAEL,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAjCgB,KAsCdk5B,GAA0BxyB,GAAS,CAEvC,MAAMizB,EAAa,uCAMnB,OAHsBC,GAAU,SAASlzB,CAAI,EAGxB,MAAMizB,CAAU,EAAE,IAAI,CAACE,EAAM51B,IAC5C41B,EAAK,MAAMF,CAAU,EAErBlkC,EAAA,IAAC,IAAA,CAEC,KAAMokC,EACN,OAAO,SACP,IAAI,sBACJ,UAAU,2CACV,QAAU58B,GAAMA,EAAE,gBAAgB,EAEjC,SAAA48B,CAAA,EAPI51B,CAQP,EAGG41B,CACR,CACH,EAGMV,GAAc,CAAC,CAAE,IAAAzf,EAAK,aAAAgf,EAAc,SAAAC,KAAe,CACnD,GAAA,CACI,MAAAmB,EAAS,IAAI,IAAIpgB,CAAG,EACpBF,EAAU,8BAA8B,KAAKsgB,EAAO,QAAQ,EAC5DC,EAAYD,EAAO,WAAa,eAAiBA,EAAO,WAAa,QACrE3gC,EAAQw/B,EAASD,CAAY,EAEnC,GAAIqB,EAAW,CAEP,MAAAC,EAAUtgB,EAAI,MAAM,GAAG,EAAE,MAAM,MAAM,GAAG,EAAE,CAAC,EAE/C,OAAAjkB,EAAAA,IAAC,MAAI,CAAA,UAAW,mCAAmC0D,EAAM,WAAW,GAClE,SAAA1D,EAAA,IAAC,MAAI,CAAA,UAAU,uBACb,SAAAA,EAAA,IAAC,SAAA,CACC,IAAK,oDAAoDukC,CAAO,2BAChE,UAAU,gCACV,gBAAe,EAAA,GAEnB,CACF,CAAA,CAAA,CAIJ,OAAIxgB,EAEAvf,EAAA,KAAC,IAAA,CACC,KAAMyf,EACN,OAAO,SACP,IAAI,sBACJ,UAAW,yCAAyCvgB,EAAM,WAAW,uCACrE,QAAU8D,GAAMA,EAAE,gBAAgB,EAElC,SAAA,CAACxH,EAAAA,IAAA,MAAA,CAAI,UAAU,8BACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAKikB,EACL,IAAI,UACJ,UAAU,iEACV,QAAUzc,GAAMA,EAAE,OAAO,cAAc,cAAc,MAAM,QAAU,MAAA,CAAA,EAEzE,EACAhD,EAAAA,KAAC,MAAI,CAAA,UAAU,uDACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK,6CAA6CqkC,EAAO,QAAQ,GACjE,IAAI,GACJ,UAAU,SAAA,CACZ,EACArkC,EAAAA,IAAC,OAAK,CAAA,UAAW,WAAW0D,EAAM,IAAI,GAAI,SAAQ,GAC/C,SAAA2gC,EAAO,QACV,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAKFrkC,EAAA,IAAC,IAAA,CACC,KAAMikB,EACN,OAAO,SACP,IAAI,sBACJ,UAAW,yCAAyCvgB,EAAM,WAAW,uCACrE,QAAU8D,GAAMA,EAAE,gBAAgB,EAElC,SAAAhD,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK,6CAA6CqkC,EAAO,QAAQ,GACjE,IAAI,GACJ,UAAU,SAAA,CACZ,EACArkC,EAAAA,IAAC,OAAK,CAAA,UAAW,WAAW0D,EAAM,IAAI,GAAI,SAAQ,GAC/C,SAAA2gC,EAAO,QACV,CAAA,CAAA,CACF,CAAA,CAAA,CACF,OAEY,CACP,OAAA,IAAA,CAEX,EAEMG,GAAO,CAAC,CAAE,WAAAhiC,KAAiB,CAC/B,KAAM,CAACo+B,EAAU6D,CAAW,EAAI7kC,EAAAA,SAAS,CAAA,CAAE,EACrC,CAAC8kC,EAAYC,CAAa,EAAI/kC,EAAAA,SAAS,EAAE,EACzC,CAACglC,EAAiBC,CAAkB,EAAIjlC,EAAAA,SAAS,EAAK,EACtD,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C,CAAE,QAAA2K,CAAQ,EAAIE,GAAW,EACzBu6B,EAAiBnN,SAAO,IAAI,EAC5BoN,EAAmBpN,SAAO,IAAI,EAC9BqN,EAAcrN,SAAO,IAAI,EACzB,CAACoL,EAAckC,CAAe,EAAIvlC,EAAAA,SAAS,MAAM,EACjD,CAACwlC,EAAYC,CAAa,EAAIzlC,EAAAA,SAAS,IAAI,EAC3C0lC,EAAiBzN,SAAO,IAAI,EAC5B,CAAC0N,EAAeC,CAAgB,EAAI5lC,EAAAA,SAAS,EAAI,EACjD,CAACokC,EAAiByB,CAAkB,EAAI7lC,EAAAA,SAAS,CAAA,CAAE,EACnD,CAAC8lC,EAAaC,CAAc,EAAI/lC,EAAAA,SAAS,EAAK,EAG9CgmC,EAAiBhiC,GAAM,QAAQ,IAC/B,CAACpB,GAAY,SAAW,CAACA,GAAY,eAChC,MAEDA,EAAW,SAAWA,EAAW,iBAAiB,YAAY,EACrE,CAACA,GAAY,QAASA,GAAY,cAAc,CAAC,EAG9C2gC,EAAYv/B,GAAM,YAAaiiC,GAC/B,CAACD,GAAkB,CAACC,EAAsB,GACvCD,IAAmBC,EAAc,YAAY,EACnD,CAACD,CAAc,CAAC,EAGnB9lC,EAAAA,UAAU,IAAM,CACV,GAAA,CAAC0C,GAAY,gBAAiB,OAElC,MAAMb,EAAcg/B,GAAoBn+B,EAAW,gBAAkBsjC,GAAgB,CACnFrB,EAAYqB,CAAW,CAAA,CACxB,EAED,MAAO,IAAMnkC,EAAY,CAAA,EACxB,CAACa,GAAY,eAAe,CAAC,EAGhC,MAAMujC,EAAiB,IAAM,CAC3Bf,EAAe,SAAS,eAAe,CAAE,SAAU,SAAU,CAC/D,EAEAllC,EAAAA,UAAU,IAAM,CACCimC,EAAA,CAAA,EACd,CAACnF,CAAQ,CAAC,EAGPoF,MAAAA,EAAenD,GAAY,CACjBwC,EAAA,CACZ,UAAWxC,EAAQ,GACnB,KAAMA,EAAQ,KACd,OAAQA,EAAQ,OAChB,SAAUA,EAAQ,UAAYA,EAAQ,GACtC,YAAaA,EAAQ,aAAe,CAAA,CACrC,EACDqC,EAAY,SAAS,MAAM,CAC7B,EAGM/gB,EAAe,MAAO3c,GAAM,CAEhC,GADAA,EAAE,eAAe,EACb,GAACk9B,EAAW,KAAU,GAAAI,GAAa,CAACS,GAGpC,IAAAvB,EAAgB,KAAa/hB,GAAAA,EAAK,gBAAkB1X,GAAS,YAAY,CAAC,EAAG,CAC/EnH,EAAM,MAAM,qCAAqC,EACjD,MAAA,CAGF2hC,EAAa,EAAI,EACb,GAAA,CACF,MAAMzE,GAAY,CAChB,KAAMoE,EACN,OAAQn6B,EACR,kBAAmB/H,EAAW,gBAC9B,QAAS4iC,CAAA,CACV,EACCT,EAAc,EAAE,EAClBU,EAAc,IAAI,EAClBH,EAAY,SAAS,MAAM,QACpBtiC,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7CQ,EAAM,MAAM,wBAAwB,CAAA,CAEtC2hC,EAAa,EAAK,EAClB,WAAW,IAAM,CACfG,EAAY,SAAS,MAAM,GAC1B,GAAG,EACR,EAGMe,EAAgBC,GAAgB,CAChCxB,EAAW,OAAS,GAAK,KACbC,EAAAr9B,GAAQA,EAAO4+B,EAAY,KAAK,CAElD,EAGMt2B,EAAmBC,GACnB,CAACA,GAAa,EAAEA,aAAqB,MAAc,GAEhD,IAAI,KAAK,eAAe,QAAS,CACtC,KAAM,UACN,OAAQ,UACR,OAAQ,EAAA,CACT,EAAE,OAAOA,CAAS,EAIfs2B,EAAa,IAAM,CACvB,MAAMC,EAAWlB,EAAY,QACzBkB,IACFA,EAAS,MAAM,OAAS,OACxBA,EAAS,MAAM,OAAS,KAAK,IAAIA,EAAS,aAAc,GAAG,EAAI,KAEnE,EAGMC,EAAiBzF,GACdA,EAAS,OAAO,CAAC0F,EAAQzD,EAAS34B,IAAU,CAC3C,MAAAq8B,EAAc3F,EAAS12B,EAAQ,CAAC,EAChCs8B,EAAeD,GAAeA,EAAY,OAAO,gBAAkB1D,EAAQ,OAAO,YAAY,EAC9F4D,GAAqBF,IACxB1D,EAAQ,UAAY0D,EAAY,YAAc,IAAO,IAAM,EAE9D,OAAIC,GAAgBC,IAEAH,EAAOA,EAAO,OAAS,CAAC,EAChC,SAAS,KAAKzD,CAAO,EACxByD,IAGPA,EAAO,KAAK,CACV,GAAIzD,EAAQ,GACZ,OAAQA,EAAQ,OAChB,SAAU,CAACA,CAAO,CAAA,CACnB,EACMyD,EAEX,EAAG,EAAE,EAIDI,EAAgB,IACnBliC,OAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,UAAU,8FACV,MAAM,eAEN,SAAA,CAACxE,EAAAA,IAAA2mC,GAAA,CAAsB,UAAU,wBAAyB,CAAA,EACzD3mC,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAK,OAAA,CAAA,CAAA,CAAA,CAC/C,QAGC,MAAI,CAAA,UAAU,+HACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,gGACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,6BAA6B,SAAY,eAAA,EACvDA,EAAAA,IAAA,MAAA,CAAI,UAAU,yBACZ,SAAO,OAAA,QAAQwiC,EAAW,EAAE,IAAI,CAAC,CAACoE,EAAWljC,CAAK,IACjD1D,EAAA,IAAC,SAAA,CAEC,QAAUwH,GAAM,CACdA,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB29B,EAAgByB,CAAS,CAC3B,EACA,UAAW;AAAA;AAAA,oBAEP3D,IAAiB2D,EACf,2DACA,0CACJ;AAAA,oBACEljC,EAAM,EAAE;AAAA,kBAEZ,MAAOkjC,EAAU,OAAO,CAAC,EAAE,cAAgBA,EAAU,MAAM,CAAC,CAAA,EAdvDA,CAAA,CAgBR,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAII1D,EAAY0D,GACTpE,GAAYoE,CAAS,GAAKpE,GAAY,KAI/C1iC,EAAAA,UAAU,IAAM,CACR,MAAA+mC,EAAsB1sB,GAAU,CAChCmrB,EAAe,SAAW,CAACA,EAAe,QAAQ,SAASnrB,EAAM,MAAM,GACzE0qB,EAAmB,EAAK,CAE5B,EAES,gBAAA,iBAAiB,YAAagC,CAAkB,EAClD,IAAM,CACF,SAAA,oBAAoB,YAAaA,CAAkB,CAC9D,CACF,EAAG,EAAE,EA8BL,MAAMzD,EAAmB,MAAO0D,EAAQC,EAAazF,EAAY,OAAS,CACpE,GAAA,CACF,OAAQwF,EAAQ,CACd,IAAK,MACH,MAAME,EAAgB,CAAC,GAAGhD,EAAiB+C,EAAY,aAAa,EAC9D,MAAA/F,GAAkBx+B,EAAW,gBAAiBwkC,CAAa,EAEjE5jC,EAAM,QAAQ,QAAQi9B,GAAe0G,CAAW,CAAC,sBAAsB,EACvE,MAEF,IAAK,SACCzF,IACI,MAAAD,GAAc7+B,EAAW,gBAAiB8+B,CAAS,EACzDl+B,EAAM,QAAQ,iBAAiB,GAEjC,KAAA,QAEGR,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EAC3CQ,EAAM,MAAM,qCAAqC,CAAA,CAErD,EAGAtD,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAI0C,GAAY,gBAAiB,EAER,SAAY,CAC7B,GAAA,CACF,MAAMy+B,EAAa,MAAME,GAAgB3+B,EAAW,eAAe,EACnEijC,EAAmBxE,CAAU,QACtBr+B,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,CAAA,CAEtD,GAEe,EAGf,MAAMjB,EAAc4U,GAClBxU,GAAIrB,GAAI,cAAe8B,EAAW,gBAAiB,aAAc,aAAa,EAC7ET,GAAQ,CACHA,EAAI,SACN0jC,EAAmB1jC,EAAI,OAAO,WAAa,CAAA,CAAE,EAE7C0jC,EAAmB,CAAA,CAAE,CACvB,CAEJ,EAEA,MAAO,IAAM9jC,EAAY,CAAA,CAC3B,EACC,CAACa,GAAY,eAAe,CAAC,EAG9BgC,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAW,kFAAkF40B,EAASD,CAAY,EAAE,EAAE,GAGtH,SAAA,CAAAz+B,EAAAA,KAAC,OAAI,UAAW,qDAAqD0+B,EAASD,CAAY,EAAE,MAAM,GAChG,SAAA,CAACjjC,EAAA,IAAA,KAAA,CAAG,UAAU,wCAAwC,SAAe,kBAAA,EACrEwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,IAAA,CAAE,UAAU,kCAAkC,SAE/C,wBAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,0BAEZ,SAAA,CAAA2+B,EAAU54B,CAAO,GACfvK,MAAA,MAAA,CAAI,UAAU,0BAEb,SAAAwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAMmhC,EAAe,EAAI,EAClC,UAAU,iEACV,MAAM,sBAEN,SAAA,CAAC3lC,EAAAA,IAAA4jC,GAAA,CAAM,UAAU,0CAA2C,CAAA,EAC3DI,EAAgB,OAAS,GACxBhkC,EAAAA,IAAC,QAAK,UAAU;AAAA,4FAEb,WAAgB,MACnB,CAAA,CAAA,CAAA,CAAA,EAGN,QAED0mC,EAAc,CAAA,CAAA,CAAA,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGAliC,EAAA,KAAC,MAAA,CACC,IAAKygC,EACL,UAAU;AAAA,4BAGV,SAAA,CAAAjlC,MAACinC,IACE,SAAcrG,EAAAA,CAAQ,EAAE,IAAKsG,GAAU,CACtC,MAAMpE,EAAcoE,EAAM,OAAO,YAAY,IAAM38B,GAAS,YAAY,EAClEw4B,EAAmBI,EAAU+D,EAAM,MAAM,EAG/C,OAAAlnC,EAAA,IAACsO,EAAO,IAAP,CAEG,QAAS,CAAE,QAAS,EAAG,EAAGw0B,EAAc,GAAK,GAAI,EACnD,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,CAAE,EACjB,UAAW,eAAeA,EAAc,cAAgB,eAAe,GAEvE,SAAAt+B,EAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,MAAC,OAAI,UAAW;AAAA;AAAA,sBAEZ8iC,EAAc,UAAY,EAAE;AAAA,oBAE9B,SAAAt+B,OAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC6hC,GAAc,CAAA,QAASqF,EAAM,OAAQ,KAAM,GAAI,EAC/CnE,GACCv+B,EAAA,KAAC,MAAI,CAAA,UAAU,gCACb,SAAA,CAAAxE,EAAA,IAAC68B,GAAA,CACC,UAAU,qCAAA,CACZ,EACA78B,EAAA,IAAC,OAAA,CAAK,UAAU;AAAA;AAAA,0GAGf,SAAA,SAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,gCACZ,SAAA,CAAM0iC,EAAA,SAAS,IAAI,CAACrE,EAAS34B,IAC3B1F,EAAA,KAAA,MAAA,CAAqB,UAAU,gBAC9B,SAAA,CAAAxE,EAAA,IAAC4iC,GAAA,CACC,QAAAC,EACA,YAAAC,EACA,iBAAAC,EACA,QAASiD,EACT,aAAA/C,EACA,SAAAC,EACA,UAAAC,EACA,iBAAAC,EACA,QAAA74B,CAAA,CACF,EAGCs4B,EAAQ,UAAY,CAACA,EAAQ,SAC3B7iC,EAAA,IAAA,MAAA,CAAI,UAAU,uCACZ,SAAA4gC,EACE,OAAYlF,GAAAA,EAAE,WAAamH,EAAQ,UAAYnH,EAAE,KAAOmH,EAAQ,EAAE,EAClE,IACCgB,GAAA7jC,EAAA,IAAC4iC,GAAA,CAEC,QAASiB,EACT,YAAaA,EAAc,OAAO,YAAY,IAAMt5B,GAAS,YAAY,EACzE,iBAAkB44B,EAAUU,EAAc,MAAM,EAChD,QAASmC,EACT,aAAA/C,EACA,SAAAC,EACA,UAAAC,EACA,iBAAAC,EACA,QAAA74B,CAAA,EATKs5B,EAAc,EAAA,CAWtB,CACL,CAAA,CAAA,GAhCMhB,EAAQ,EAkC1B,CACO,EAGDr+B,OAAC,OAAI,UAAW;AAAA;AAAA,wBAEZs+B,EAAc,cAAgB,eAAe;AAAA,sBAE/C,SAAA,CAAA9iC,EAAAA,IAAC,OAAI,UAAU,0BACZ,UAAC+iC,GACA/iC,EAAA,IAAC,QAAK,UAAW;AAAA;AAAA,8BAEbkjC,EAASD,CAAY,EAAE,QAAQ,EAAE;AAAA,8BACjCC,EAASD,CAAY,EAAE,QAAQ,IAAI;AAAA,4BAEpC,SAAe5C,GAAA6G,EAAM,MAAM,CACxC,CAAA,EAEM,QACC,OAAK,CAAA,UAAWhE,EAASD,CAAY,EAAE,KACrC,SAAArzB,EAAgBs3B,EAAM,SAASA,EAAM,SAAS,OAAS,CAAC,EAAE,SAAS,CAC5E,CAAA,CAAA,CACI,CAAA,CAAA,CACF,CAAA,CAAA,CACJ,CAAA,CAAA,EAxFOA,EAAM,EAyFf,CAED,CAAA,EACH,EACAlnC,EAAAA,IAAC,MAAI,CAAA,IAAKglC,CAAgB,CAAA,CAAA,CAAA,CAC5B,EAGAxgC,EAAA,KAAC,OAAA,CACC,SAAU2f,EACV,UAAW;AAAA;AAAA;AAAA,YAGP+e,EAASD,CAAY,EAAE,MAAM;AAAA,YAC7BmC,EAAa,YAAc,MAAM;AAAA;AAAA;AAAA,UAKpC,SAAA,CACCA,GAAAplC,EAAA,IAACyiC,GAAA,CACC,QAAS2C,EACT,QAAS,IAAMC,EAAc,IAAI,CAAA,CACnC,EAGF7gC,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAA,EAAA,KAAC,MAAI,CAAA,IAAK8gC,EAAgB,UAAU,WACpC,SAAA,CAAAtlC,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAM6kC,EAAmB,CAACD,CAAe,EAChD,UAAW;AAAA;AAAA,kBAEP1B,EAASD,CAAY,EAAE,MAAM,IAAI;AAAA;AAAA,gBAGrC,SAAU6B,EAEZ,SAAA9kC,EAAAA,IAACmnC,GAAQ,CAAA,UAAU,SAAU,CAAA,CAAA,CAC/B,EAGEnnC,EAAAA,IAACinC,IACE,SACCrC,GAAA5kC,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,EAAG,EAC1B,UAAU,mCAEV,SAAAtO,EAAA,IAAC,MAAI,CAAA,UAAU,0DACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,WACV,QAAUwH,GAAMA,EAAE,gBAAgB,EAElC,SAAAxH,EAAA,IAAConC,GAAA,CACC,aAAAnB,EACA,MAAM,OACN,MAAO,IACP,OAAQ,IACR,eAAgB,GAChB,kBAAkB,kBAClB,cAAe,CACb,YAAa,EACf,EACA,kBAAiB,GACjB,WAAY,CAAC,iBAAkB,iBAAkB,aAAc,gBAAiB,aAAc,UAAW,UAAW,OAAO,EAC3H,MAAO,CACL,iBAAkB,UAClB,gCAAiC,UACjC,uBAAwB,UACxB,4BAA6B,UAC7B,sBAAuB,SACvB,kCAAmC,YACnC,wBAAyB,MACzB,8BAA+B,cAC/B,8BAA+B,2BAC/B,oCAAqC,0BAAA,CACvC,CAAA,CACF,CAAA,CAEJ,CAAA,CAAA,CAAA,CAGN,CAAA,CAAA,EACF,EAEAjmC,EAAA,IAAC,WAAA,CACC,IAAKklC,EACL,KAAK,IACL,MAAOR,EACP,SAAWl9B,GAAM,CACfm9B,EAAcn9B,EAAE,OAAO,MAAM,MAAM,EAAG,GAAG,CAAC,EAC/B2+B,EAAA,CACb,EACA,UAAY3+B,GAAM,CACZA,EAAE,MAAQ,SAAW,CAACA,EAAE,WAC1BA,EAAE,eAAe,EACjB2c,EAAa3c,CAAC,EAElB,EACA,UAAS,GACT,QAAUA,GAAMA,EAAE,OAAO,OAAO,EAChC,YAAas9B,EAAY,aAAe,oBACxC,UAAW;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKP5B,EAASD,CAAY,EAAE,MAAM,EAAE;AAAA,gBAC/BC,EAASD,CAAY,EAAE,MAAM,IAAI;AAAA,4BACrBC,EAASD,CAAY,EAAE,MAAM,WAAW;AAAA,cAExD,SAAU6B,CAAA,CACZ,EAEA9kC,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAW;AAAA;AAAA,gBAEPkjC,EAASD,CAAY,EAAE,MAAM,IAAI;AAAA;AAAA;AAAA,cAIrC,SAAU,CAACyB,EAAW,KAAA,GAAUI,EAEhC,SAAA9kC,EAAAA,IAACqnC,GAAa,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CACpC,EACF,EAEA7iC,OAAC,OAAI,UAAW;AAAA;AAAA,YAEZ0+B,EAASD,CAAY,EAAE,IAAI;AAAA,UAE1B,SAAA,CAAWyB,EAAA,OAAO,MAAA,CACrB,CAAA,CAAA,CAAA,CACJ,EAGA1kC,EAAA,IAAC8jC,GAAA,CACC,KAAM4B,EACN,QAAS,IAAMC,EAAe,EAAK,EACnC,gBAAA3B,EACA,QAAS,MAAOz5B,GAAY,CACtB,GAAA,CACF,MAAMy8B,EAAgBhD,EAAgB,OAAOt6B,GAAKA,IAAMa,CAAO,EACzD,MAAAy2B,GAAkBx+B,EAAW,gBAAiBwkC,CAAa,EACjEvB,EAAmBuB,CAAa,EAChC5jC,EAAM,QAAQ,4BAA4B,QACnCR,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5CQ,EAAM,MAAM,sBAAsB,CAAA,CACpC,CACF,CAAA,CACF,CAAA,CACF,CAEJ,EC1iCMkkC,GAAc,CAClB,CAAE,MAAO,MAAO,MAAO,KAAM,EAC7B,CAAE,MAAO,KAAM,MAAO,IAAK,EAC3B,CAAE,MAAO,MAAO,MAAO,KAAM,EAC7B,CAAE,MAAO,MAAO,MAAO,KAAM,CAC/B,EAGMC,GAAc,CAClB,sHACA,0HACF,EAGM9K,GAAmB,CACvB,WAAc,+CACd,SAAY,+BACZ,mBAAoB,kCACpB,gBAAiB,uBACnB,EAGM+K,GAAc,CAACxoB,EAAS5T,IACxBA,IAAY,IACP,IAAIqY,GAAuB,iCAAiC,EAC1DrY,IAAY,KACd,IAAIqY,GAAuB,8BAA8B,EACvDzE,IAAY,cAAgB5T,IAAY,WAC1C,IAAIqY,GAAuBgZ,GAAiB,UAAU,EACpDzd,IAAY,iBAAmB5T,IAAY,MAC7C,IAAIqY,GAAuBgZ,GAAiB,eAAe,CAAC,EAE9D,IAAIrd,GAAuB,OAAO,QAAQ,EAI7CkJ,GAAiB,CAACtJ,EAAS5T,IAC3BA,IAAY,IACP,kCACEA,IAAY,KACd,0CACE4T,IAAY,cAAgB5T,IAAY,WAC1C,sDACE4T,IAAY,iBAAmB5T,IAAY,MAC7C,sCACE4T,IAAY,WAAa5T,IAAY,IACvC,iCAEF,+BAGHq8B,GAAsB,MAAOl9B,EAASyU,EAAS5T,IAAY,CAC3D,GAAA,CAEI,MAAAxD,EAAW4/B,GAAYxoB,EAAS5T,CAAO,EAGvCK,EAAW,IAAIC,EAAgBnB,EAASg9B,GAAa3/B,CAAQ,EAG7D+hB,EAAe,MAAM/hB,EAAS,eAAe,EAC7C8/B,EAAY,KAAK,IAAI,EAAG/d,EAAe,GAAK,EAElD,QAAQ,IAAI,4BAA6B,CACvC,QAAA3K,EACA,QAAA5T,EACA,QAAAb,EACA,UAAAm9B,EACA,aAAA/d,CAAA,CACD,EAGK,MAAAge,EAAel8B,EAAS,QAAQ,eAAe,EAC/Cm8B,EAAcn8B,EAAS,QAAQ,cAAc,EAE7C,CAACgzB,EAAcG,CAAW,EAAI,MAAM,QAAQ,IAAI,CACpDnzB,EAAS,YAAYk8B,EAAcD,CAAS,EAC5Cj8B,EAAS,YAAYm8B,EAAaF,CAAS,CAAA,CAC5C,EAGKG,EAAkBpJ,EAAa,IAActkB,IAAA,CACjD,UAAW,KACX,KAAM,WACN,MAAOA,EAAM,KAAK,MAAM,SAAS,EACjC,YAAaA,EAAM,WAAA,EACnB,EAGI2tB,EAAiBlJ,EAAY,QAAiBzkB,GAC3CA,EAAM,KAAK,OAAO,IAAI,CAACpa,EAAOmK,KAAW,CAC9C,UAAW,KACX,KAAM,WACN,MAAOnK,EAAM,SAAS,EACtB,YAAaoa,EAAM,WAAA,EACnB,CACH,EAGK4tB,EAAe,CAAC,GAAGF,EAAiB,GAAGC,CAAc,EAGrDE,EAAe,CAAC,GAAG,IAAI,IAAID,EAAa,IAAS3kB,GAAAA,EAAE,WAAW,CAAC,CAAC,EAChE6kB,EAAY,MAAM,QAAQ,IAC9BD,EAAa,IAAItf,GAAe9gB,EAAS,SAAS8gB,CAAW,CAAC,CAChE,EACMwf,EAAkB,OAAO,YAC7BD,EAAU,IAAa5tB,GAAA,CAACA,EAAM,OAAQA,EAAM,UAAY,GAAI,CAAC,CAC/D,EAGO,OAAA0tB,EAAa,IAAiBztB,IAAA,CACnC,GAAGA,EACH,UAAW,IAAI,KAAK4tB,EAAgB5tB,EAAS,WAAW,CAAC,CAAA,EACzD,QACK1X,EAAO,CACN,cAAA,MAAM,kCAAmCA,CAAK,EAChDA,CAAA,CAEV,EAmFMulC,GAAsB,MAAO59B,EAASyU,EAAS5T,IAAY,CAC3D,GAAA,CACI,MAAAmd,EAAUD,GAAetJ,EAAS5T,CAAO,EACvC,QAAA,IAAI,wBAAyBmd,CAAO,EAGtC,MAAAoU,EAAmBpyB,GAAS,YAAY,EAGxC69B,EAAgB,kBAAkBzL,CAAgB,GACxD,QAAQ,IAAI,4BAA6B,GAAGpU,CAAO,GAAG6f,CAAa,EAAE,EAErE,MAAMpoB,GADgB,MAAMjM,GAAM,IAAI,GAAGwU,CAAO,GAAG6f,CAAa,EAAE,GAClC,KAE5B,GAAApoB,EAAU,OAAS,WAGd,MAAA,CAAE,UADS,MAAMynB,GAAoBl9B,EAASyU,EAAS5T,CAAO,EACjD,UAAA4U,CAAU,EAI1B,MAAAqoB,EAAoB,kBAAkB1L,CAAgB,aAC5D,eAAQ,IAAI,2BAA4B,GAAGpU,CAAO,GAAG8f,CAAiB,EAAE,EAIjE,CAAE,WAHiB,MAAMt0B,GAAM,IAAI,GAAGwU,CAAO,GAAG8f,CAAiB,EAAE,GACtC,KAAK,OAAS,CAAC,EAE/B,UAAAroB,CAAU,QACvBpd,EAAO,CACd,eAAQ,MAAM,kBAAkBoc,CAAO,SAAUpc,CAAK,EAC/C,CAAE,UAAW,GAAI,UAAW,IAAK,CAAA,CAE5C,EAGMi5B,GAAc,CAAC97B,EAAOuoC,IAAc,CACpC,GAAA,CACF,GAAI,CAACvoC,GAASA,IAAU,IAAY,MAAA,IAGhC,GAAAuoC,GAAW,OAAS,UACpBA,GAAW,OAAS,QACpBA,GAAW,OAAS,OAAQ,CACxBC,MAAAA,EAAW,OAAOxoC,CAAK,EAC7B,OAAO,MAAMwoC,CAAQ,EAAI,IAAMA,EAAS,eAAe,QAAS,CAC9D,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,CAAA,CAIG,MAAAA,EAAW,OAAOxoC,GAAU,SAAWA,EAAM,QAAQ,WAAY,EAAE,EAAIA,EAC7E,MAAI,CAACwoC,GAAY,MAAM,OAAOA,CAAQ,CAAC,EAAU,IAE9B,WAAWA,CAAQ,EACpB,eAAe,QAAS,CACxC,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,QACM3lC,EAAO,CACd,eAAQ,MAAM,0BAA2BA,EAAO,OAAO7C,EAAOA,CAAK,EAC5D,GAAA,CAEX,EAGMyoC,GAAoB,CAAClgC,EAAMmgC,EAAWjmC,IAAe,CACnD,MAAAkL,MAAU,KACZ,IAAAg7B,EAEJ,OAAQD,EAAW,CACjB,IAAK,MACSC,EAAAC,GAASj7B,EAAK,EAAE,EAC5B,MACF,IAAK,KACSg7B,EAAAE,GAAQl7B,EAAK,CAAC,EAC1B,MACF,IAAK,MACSg7B,EAAAE,GAAQl7B,EAAK,EAAE,EAC3B,MACF,QACcg7B,EAAA,IAAI,KAAK,CAAC,CAAA,CAIpB,MAAAG,MAAkB,IAKd,OAFQ,MAAM,QAAQvgC,CAAI,EAAIA,EAAO,CAAC,GAEtC,QAAgB3D,GAAA,CACxB,MAAMmkC,EAAOC,GAAW,IAAI,KAAKpkC,EAAK,SAAS,CAAC,EAChD,IAAI4lB,EAAS,EACTyR,EAAW,EAEX,GAAA,CAUE,GATAr3B,EAAK,OAAS,YAEP4lB,EAAA,OAAO5lB,EAAK,KAAK,EAC1Bq3B,EAAWzR,GAAU/nB,GAAY,UAAY,OAAOA,EAAW,SAAS,EAAI,IACnEmC,EAAK,OAAO,OAAS,YACrB4lB,EAAA,EACTyR,EAAWx5B,GAAY,UAAY,OAAOA,EAAW,SAAS,EAAI,GAGhEwmC,GAAiBF,EAAM,CAAE,MAAOJ,EAAW,IAAKh7B,CAAA,CAAK,EAAG,CAC1D,MAAMu7B,EAAWJ,EAAY,IAAIC,EAAK,QAAS,CAAA,GAAK,CAClD,OAAQ,EACR,aAAc,EACd,UAAW,CACb,EACYD,EAAA,IAAIC,EAAK,UAAW,CAC9B,OAAQG,EAAS,OAAS1e,EAC1B,aAAc0e,EAAS,aAAe,EACtC,UAAWA,EAAS,UAAYjN,CAAA,CACjC,CAAA,QAEIp5B,EAAO,CACN,QAAA,MAAM,6BAA8BA,EAAO+B,CAAI,CAAA,CACzD,CACD,EAEM,MAAM,KAAKkkC,EAAY,QAAQ,CAAC,EACpC,IAAI,CAAC,CAACh5B,EAAWvH,CAAI,KAAO,CAC3B,KAAM,IAAI,KAAKuH,CAAS,EACxB,OAAQvH,EAAK,OACb,aAAcA,EAAK,aACnB,UAAWuzB,GAAYvzB,EAAK,UAAW9F,GAAY,SAAS,CAAA,EAC5D,EACD,KAAK,CAACkH,EAAGC,IAAMD,EAAE,KAAOC,EAAE,IAAI,CACnC,EAEMozB,GAAgB,CAAC,CAAE,OAAAC,EAAQ,QAAAC,EAAS,MAAAiM,EAAO,WAAA1mC,EAAY,UAAA2mC,KAAgB,CACvE,GAAAnM,GAAUC,GAAWA,EAAQ,OAAQ,CACvC,MAAMmM,EAAkB,IAAM,CAC5B,MAAMv9B,EAAerJ,GAAY,WAAW,SAAS,YAAY,EAGjE,OAAIqJ,IAAiB,mDACX,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,4BAA4B,EAGzD,CAACA,GAAgBA,IAAiB,6CAElDrJ,GAAY,UAAY,cAAgBA,GAAY,UAAY,iBAC1D,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,4BAA4B,EAE3EA,GAAY,UAAY,gBAClB,MAAI,CAAA,IAAI,eAAe,IAAI,MAAM,UAAU,4BAA4B,EAE7EA,GAAY,UAAY,iBAAmBA,GAAY,UAAY,YAC7D,MAAI,CAAA,IAAI,aAAa,IAAI,MAAM,UAAU,4BAA4B,EAEvExC,EAAA,IAAAgjB,GAAW,CAAA,UAAU,cAAc,EAIzCxgB,GAAY,WAAW,OAAS,UAAY2mC,EAE5CnpC,EAAA,IAAC,MAAA,CACC,IAAKmpC,EACL,IAAI,QACJ,UAAU,yCACV,QAAU3hC,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,kBAAA,CACjB,CACF,EAIIxH,EAAA,IAAAgjB,GAAW,CAAA,UAAU,cAAc,CAC7C,EAEMqmB,EAAiB,IAAM,CAC3B,MAAMx9B,EAAerJ,GAAY,WAAW,SAAS,YAAY,EAGjE,OAAIqJ,IAAiB,6CACZ,OAGa,CAACA,GAAgBA,IAAiB,6CAElDrJ,GAAY,UAAY,cAAgBA,GAAY,UAAY,WAC3D,OAELA,GAAY,UAAY,UACnB,MAELA,GAAY,UAAY,iBAAmBA,GAAY,UAAY,MAC9D,MAEF,MAGFA,GAAY,WAAW,OAAS,SAAWA,EAAW,UAAU,OAAS,KAClF,EAGE,OAAAgC,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,+DAEV,SAAA,CAACtO,EAAAA,IAAA,IAAA,CAAE,UAAU,8BACV,SAAAspC,GAAO,IAAI,KAAKJ,CAAK,EAAG,cAAc,EACzC,EACC1kC,EAAAA,KAAA,IAAE,CAAA,UAAU,yBAAyB,SAAA,CAAA,WAC3By4B,EAAQ,CAAC,EAAE,MAAM,eAAe,EAAE,OAAA,EAC7C,EACCz4B,EAAAA,KAAA,IAAE,CAAA,UAAU,0CACV,SAAA,CAAgB4kC,EAAA,EAChBnM,EAAQ,CAAC,EAAE,QAAQ,UAAU,IAAEoM,EAAe,CAAA,EACjD,EACC7kC,EAAAA,KAAA,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,iBACpBy4B,EAAQ,CAAC,EAAE,QAAQ,YAAA,CACpC,CAAA,CAAA,CAAA,CACF,CAAA,CAGG,OAAA,IACT,EAEA,SAAwBsM,GAAc,CAAE,gBAAA5L,EAAiB,QAAA3e,GAAW,CAClE,KAAM,CAAC6L,EAAY2e,CAAa,EAAI5pC,EAAAA,SAAS,CAAA,CAAE,EACzC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,IAAI,EACjC,CAAC6oC,EAAWgB,CAAY,EAAI7pC,EAAAA,SAAS,KAAK,EAC7BqzB,GAAe,EAC5B,KAAA,CAAE,OAAApd,CAAO,EAAI+kB,GAAU,EACvB,CAACp4B,EAAYq4B,CAAa,EAAIj7B,EAAAA,SAAS,IAAI,EAC3C,CAACupC,EAAWO,CAAY,EAAI9pC,EAAAA,SAAS,IAAI,EAE/CE,EAAAA,UAAU,IAAM,CA6CV69B,GAAmB9nB,IA5CN,SAAY,CACvB,GAAA,CACFvU,EAAW,EAAI,EACf+7B,EAAS,IAAI,EAGP,MAAA9nB,EAAiB,MAAMK,GAAcC,CAAM,EACjDglB,EAActlB,CAAc,EAG5B,MAAMnK,EAAUmK,GAAgB,QAEhC,QAAQ,IAAI,2BAA4B,CACtC,QAAAyJ,EACA,QAAA5T,EACA,gBAAAuyB,CAAA,CACD,EAGK,KAAA,CAAE,UAAAgM,EAAW,UAAA3pB,CAAU,EAAI,MAAMmoB,GAAoBxK,EAAiB3e,EAAS5T,CAAO,EAGxF,GAAAu+B,GAAaA,EAAU,OAAS,EAAG,CACrC,MAAMC,EAAgBpB,GAAkBmB,EAAWlB,EAAWlzB,CAAc,EAC5Ei0B,EAAcI,CAAa,CAAA,MAE3BJ,EAAc,CAAA,CAAE,EAId,GAAAj0B,GAAgB,WAAW,QAAS,CACtC,MAAMyiB,EAAkB,MAAMtgB,GAA4BnC,EAAe,UAAU,OAAO,EACtFyiB,GAAiB,MACnB0R,EAAa1R,EAAgB,IAAI,CACnC,QAEKp1B,EAAO,CACN,QAAA,MAAM,gCAAiCA,CAAK,EACpDy6B,EAASz6B,EAAM,OAAO,CAAA,QACtB,CACAtB,EAAW,EAAK,CAAA,CAEpB,GAGW,GAEV,CAACq8B,EAAiB3e,EAASypB,EAAW5yB,CAAM,CAAC,EAEhD,MAAMuzB,EAAkB,IAAM,CAC5B,MAAMv9B,EAAerJ,GAAY,WAAW,SAAS,YAAY,EAGjE,OAAIqJ,IAAiB,mDACX,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,4BAA4B,EAGzD,CAACA,GAAgBA,IAAiB,6CAElDrJ,GAAY,UAAY,cAAgBA,GAAY,UAAY,iBAC1D,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,4BAA4B,EAE3EA,GAAY,UAAY,gBAClB,MAAI,CAAA,IAAI,eAAe,IAAI,MAAM,UAAU,4BAA4B,EAE7EA,GAAY,UAAY,iBAAmBA,GAAY,UAAY,YAC7D,MAAI,CAAA,IAAI,aAAa,IAAI,MAAM,UAAU,4BAA4B,EAEvExC,EAAA,IAAAgjB,GAAW,CAAA,UAAU,cAAc,EAIzCxgB,GAAY,WAAW,OAAS,UAAY2mC,EAE5CnpC,EAAA,IAAC,MAAA,CACC,IAAKmpC,EACL,IAAI,QACJ,UAAU,yCACV,QAAU3hC,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,kBAAA,CACjB,CACF,EAIIxH,EAAA,IAAAgjB,GAAW,CAAA,UAAU,cAAc,CAC7C,EAGM6mB,EAAchf,EAAW,OAAO,CAACjiB,EAAK8yB,IAAM9yB,EAAM8yB,EAAE,OAAQ,CAAC,EAC7DoO,EAAiBjf,EAAW,OAAO,CAACjiB,EAAK8yB,IAAM9yB,EAAM,OAAO8yB,EAAE,UAAU,QAAQ,KAAM,EAAE,CAAC,EAAG,CAAC,EAC7FqO,EAAoBlf,EAAW,OAAO,CAACjiB,EAAK8yB,IAAM9yB,EAAM8yB,EAAE,aAAc,CAAC,EACzEsO,EAAYD,EAAoB,EAAIF,EAAcE,EAAoB,EAG5E,OAAI/qB,IAAY,iBAAmBxc,GAAY,UAAY,YAEtD,MAAI,CAAA,UAAU,+HACb,SAACgC,EAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,OAAC,KAAA,CAAG,UAAU,yDAAyD,SAAW,cAAA,QACjF,IAAA,CAAE,UAAU,mCAAmC,SAAuD,yDAAA,CAAA,CAAA,CAAA,CACzG,CAAA,CACF,EAIAnD,EAECrB,MAAA,OAAI,UAAU,yCACb,SAACA,EAAA,IAAA,MAAI,CAAA,UAAU,gEAAgE,EACjF,EAKDwE,EAAA,KAAA,MAAI,CAAA,UAAU,YAEb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,6BACZ,SAAAsnC,GAAY,IACXlI,GAAAp/B,EAAA,IAACsO,EAAO,OAAP,CAEC,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EACxB,QAAS,IAAMm7B,EAAarK,EAAM,KAAK,EACvC,UAAW,kDACTqJ,IAAcrJ,EAAM,MAChB,sCACA,0GACN,GAEC,SAAMA,EAAA,KAAA,EAVFA,EAAM,KAYd,CAAA,EACH,EAGC56B,EAAAA,KAAA,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,wFAEV,SAAA,OAAC,KAAA,CAAG,UAAU,gDAAgD,SAAU,aAAA,EACvE9J,EAAAA,KAAA,IAAE,CAAA,UAAU,qEACV,SAAA,CAAgB4kC,EAAA,EAChB5mC,GAAY,WAAaqnC,GACrBA,EAAc,OAAOrnC,EAAW,SAAS,GAAG,QAAQ,CAAC,EACtD,QAAA,CAEN,CAAA,CAAA,CAAA,CACF,EACAgC,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,wFAEV,SAAA,OAAC,KAAA,CAAG,UAAU,gDAAgD,SAAY,eAAA,EACzE9J,EAAAA,KAAA,IAAE,CAAA,UAAU,mDACV,SAAA,CAAAqlC,EAAY,eAAe,EAAE,OAAA,CAChC,CAAA,CAAA,CAAA,CACF,EACArlC,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EACzB,UAAU,wFAEV,SAAA,CAAC9J,EAAAA,KAAA,KAAA,CAAG,UAAU,gDACV,SAAA,EAAM,IAAA,CACN,MAAMqH,EAAerJ,GAAY,WAAW,SAAS,YAAY,EAC7D,OAAAqJ,IAAiB,6CAAqD,OAEpD,CAACA,GAAgBA,IAAiB,6CAElDrJ,GAAY,UAAY,cAAgBA,GAAY,UAAY,WAAmB,OACnFA,GAAY,UAAY,UAAkB,MAC1CA,GAAY,UAAY,iBAAmBA,GAAY,UAAY,MAAc,MAC9E,MAGFA,GAAY,WAAW,OAAS,SAAWA,EAAW,UAAU,OAAS,KAAA,GAC/E,EAAE,SAAA,EACP,EACCgC,EAAAA,KAAA,IAAE,CAAA,UAAU,qEACV,SAAA,CAAgB4kC,EAAA,EAChBU,EAAe,QAAQ,CAAC,CAAA,CAC3B,CAAA,CAAA,CAAA,CACF,EACAtlC,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EACzB,UAAU,wFAEV,SAAA,OAAC,KAAA,CAAG,UAAU,gDAAgD,SAAY,eAAA,QACzE,IAAE,CAAA,UAAU,mDACV,SAAAy7B,EAAkB,gBACrB,CAAA,CAAA,CAAA,CACF,EACAvlC,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EACzB,UAAU,wFAEV,SAAA,OAAC,KAAA,CAAG,UAAU,gDAAgD,SAAoB,uBAAA,EACjF9J,EAAAA,KAAA,IAAE,CAAA,UAAU,mDACV,SAAA,CAAAwlC,EAAU,QAAQ,CAAC,EAAE,OAAA,CACxB,CAAA,CAAA,CAAA,CAAA,CACF,EACF,EAGAxlC,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EACzB,UAAU,wFAEV,SAAA,OAAC,KAAA,CAAG,UAAU,iDAAiD,SAAM,SAAA,QACpE,MAAA,CAAI,UAAU,YACb,eAACmxB,GAAA,CAAoB,MAAM,OAAO,OAAO,OACvC,SAACj7B,EAAA,KAAA27B,GAAA,CAAU,KAAMtV,EACf,SAAA,OAAC,OACC,CAAA,SAAArmB,EAAA,KAAC,iBAAe,CAAA,GAAG,iBAAiB,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAC1D,SAAA,CAAAxE,MAAC,QAAK,OAAO,KAAK,UAAU,UAAU,YAAa,GAAK,QACvD,OAAK,CAAA,OAAO,OAAO,UAAU,UAAU,YAAa,CAAG,CAAA,CAAA,CAAA,CAC1D,CAAA,CACF,QACCiqC,GAAA,CAAc,gBAAgB,MAAM,OAAO,UAAU,EACtDjqC,EAAA,IAAC2/B,GAAA,CACC,QAAQ,OACR,cAAuBmJ,GAAAQ,GAAOR,EAAML,IAAc,MAAQ,QAAU,QAAQ,EAC5E,OAAO,UACP,KAAM,CAAE,KAAM,SAAU,CAAA,CAC1B,EACAzoC,EAAA,IAACkqC,GAAA,CACC,OAAO,UACP,cAAwBnqC,GAAA,GAAGA,CAAK,QAChC,KAAM,CAAE,KAAM,SAAU,CAAA,CAC1B,QACC6/B,GAAQ,CAAA,cAAU7C,GAAc,CAAA,WAAAv6B,EAAwB,UAAA2mC,CAAsB,CAAA,EAAI,EACnFnpC,EAAA,IAACogC,GAAA,CACC,KAAK,WACL,QAAQ,SACR,OAAO,UACP,YAAa,EACb,KAAK,uBACL,kBAAmB,IACnB,eAAgB,CAAA,CAAA,CAClB,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAECvV,EAAW,SAAW,GACrB7qB,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,UAAU,oBAEV,eAAC,MAAA,CAAI,UAAU,mCAAmC,SAAwB,0BAAA,CAAA,CAAA,CAAA,CAC5E,EAEJ,CAEJ,CCvsBA,MAAM67B,GAAO,CACX,CAAE,GAAI,SAAU,MAAO,iBAAkB,EACzC,CAAE,GAAI,UAAW,MAAO,gBAAiB,EACzC,CAAE,GAAI,OAAQ,MAAO,SAAU,EAC/B,CAAE,GAAI,SAAU,MAAO,WAAY,CACrC,EAsCMhvB,GAAQ,SAAS,cAAc,OAAO,EAC5CA,GAAM,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA2BpB,SAAS,KAAK,YAAYA,EAAK,EAEP,SAAAivB,GAAc,CAAE,WAAA5nC,GAAc,CACpD,KAAM,CAAC6nC,EAAWC,CAAY,EAAI1qC,EAAAA,SAAS,QAAQ,EAGnD,OAAI4C,GAAY,kBACd,OAAO,eAAiBA,GAIxBgC,EAAA,KAAC,MAAI,CAAA,UAAU,SAEb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,iDACZ,SAAAmqC,GAAK,IACJI,GAAA/lC,EAAA,KAAC,MAAiB,CAAA,UAAU,iBAC1B,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,QAAS,IAAM8lC,EAAaC,EAAI,EAAE,EAClC,UAAW;AAAA;AAAA;AAAA,kBAGPF,IAAcE,EAAI,GAChB,iCACA,yGACJ;AAAA;AAAA,gBAKD,SAAA,CAAAF,IAAcE,EAAI,IAChBvqC,EAAAA,IAAA,MAAA,CAAI,UAAU,2DAA2D,EAI3EA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAiB,WAAI,MAAM,EAG3CA,MAAC,OAAI,UAAW;AAAA;AAAA;AAAA,kBAGZqqC,IAAcE,EAAI,GAAK,eAAiB,4CAA4C;AAAA,eACrF,CAAA,CAAA,CAAA,CACL,EAGCA,EAAI,YACF/lC,OAAA,MAAA,CAAI,UAAU,oKAAoK,SAAA,CAAA,cAEjLxE,EAAAA,IAAC,MAAI,CAAA,UAAU,4FAA6F,CAAA,CAAA,CAC9G,CAAA,CAlCM,CAAA,EAAAuqC,EAAI,EAoCd,CACD,EACH,EAGA/lC,EAAAA,KAAC,MAAI,CAAA,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mDAAoD,CAAA,EACnEA,EAAAA,IAAC,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAqD,CAAA,EACpEA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,sDAAuD,CAAA,EACtEA,EAAAA,IAAC,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAwD,CAAA,EACvEA,EAAAA,IAAC,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,qFAAsF,CAAA,EACrGA,EAAAA,IAAC,MAAI,CAAA,UAAU,sFAAuF,CAAA,EACtGA,EAAAA,IAAC,MAAI,CAAA,UAAU,wFAAyF,CAAA,EACxGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yFAA0F,CAAA,EAGzGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,QAGC,MAAI,CAAA,UAAU,sDACb,SAAChK,EAAA,KAAA,MAAA,CAAI,UAAU,6BACZ,SAAA,CAAc6lC,IAAA,gBAAa3P,GAAY,CAAA,CAAA,EACvC2P,IAAc,WAAcrqC,EAAAA,IAAAk9B,GAAA,CAAW,WAAA16B,CAAwB,CAAA,EAC/D6nC,IAAc,QAAUrqC,EAAA,IAACwkC,GAAA,CACxB,WAAY,CACV,GAAGhiC,EACH,QAASA,EAAW,SAAWA,EAAW,eAC1C,gBAAiBA,EAAW,eAAA,CAC9B,CACF,EACC6nC,IAAc,UAAarqC,MAAAupC,GAAA,CAAc,gBAAiB/mC,GAAY,gBAAiB,QAASA,GAAY,OAAS,CAAA,CAAA,CAAA,CACxH,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,CCvKA,MAAM0hB,GAAmB3Z,GAChB,sBAAsB,KAAKA,CAAO,EAG3C,SAASigC,GAAe,CAAE,WAAAC,GAAc,CACtC,KAAM,CAACC,EAAUC,CAAW,EAAI/qC,EAAA,SAASgrC,GAAmB,EAE5D,SAASA,GAAoB,CACrB,MAAAC,EAAa,CAAC,IAAI,KAAKJ,CAAU,EAAI,KAAK,KAChD,IAAIC,EAAW,CAAC,EAEhB,OAAIG,EAAa,IACfH,EAAW,CACT,KAAM,KAAK,MAAMG,GAAc,IAAO,GAAK,GAAK,GAAG,EACnD,MAAO,KAAK,MAAOA,GAAc,IAAO,GAAK,IAAO,EAAE,EACtD,QAAS,KAAK,MAAOA,EAAa,IAAO,GAAM,EAAE,EACjD,QAAS,KAAK,MAAOA,EAAa,IAAQ,EAAE,CAC9C,GAGKH,CAAA,CAWT,OARA5qC,EAAAA,UAAU,IAAM,CACR,MAAAgrC,EAAQ,YAAY,IAAM,CAC9BH,EAAYC,GAAmB,GAC9B,GAAI,EAEA,MAAA,IAAM,cAAcE,CAAK,CAAA,EAC/B,CAACL,CAAU,CAAC,EAEX,OAAO,KAAKC,CAAQ,EAAE,SAAW,EAC5B,WAIN,MAAI,CAAA,UAAU,qCACZ,SAAA,OAAO,QAAQA,CAAQ,EAAE,IAAI,CAAC,CAACK,EAAKhrC,CAAK,IACvCyE,EAAAA,KAAA,MAAA,CAAc,UAAU,0FACvB,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mCACZ,SAAA,OAAOD,CAAK,EAAE,SAAS,EAAG,GAAG,CAChC,CAAA,EACCC,EAAA,IAAA,MAAA,CAAI,UAAU,sDAAuD,SAAI+qC,CAAA,CAAA,CAAA,GAJlEA,CAKV,CACD,EACH,CAEJ,CAGA,SAASC,GAAiB,CAAE,QAAAC,EAAS,aAAAC,GAAgB,CACnD,KAAM,CAACR,EAAUC,CAAW,EAAI/qC,EAAA,SAASgrC,GAAmB,EAE5D,SAASA,GAAoB,CAC3B,GAAIM,EAAqB,OAAA,KACzB,MAAMx9B,EAAM,IAAI,KAAK,EAAE,QAAQ,EAEzBm9B,EADM,IAAI,KAAKI,CAAO,EAAE,QAAQ,EACbv9B,EAErB,OAAAm9B,GAAc,EAAU,KAErB,CACL,KAAM,KAAK,MAAMA,GAAc,IAAO,GAAK,GAAK,GAAG,EACnD,MAAO,KAAK,MAAOA,GAAc,IAAO,GAAK,IAAO,EAAE,EACtD,QAAS,KAAK,MAAOA,EAAa,IAAO,GAAM,EAAE,EACjD,QAAS,KAAK,MAAOA,EAAa,IAAQ,EAAE,CAC9C,CAAA,CAaE,OAVJ/qC,EAAAA,UAAU,IAAM,CACd,GAAIorC,EAAc,OAEZ,MAAAJ,EAAQ,YAAY,IAAM,CAC9BH,EAAYC,GAAmB,GAC9B,GAAI,EAEA,MAAA,IAAM,cAAcE,CAAK,CAAA,EAC/B,CAACG,EAASC,CAAY,CAAC,EAEtBA,GAAgB,CAACR,EAAiB,KAGpClmC,EAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAAAA,EAAA,IAAC,MAAG,UAAU,oDAAoD,wBAAY,CAChF,CAAA,QACC,MAAI,CAAA,UAAU,qCACZ,SAAA,OAAO,QAAQ0qC,CAAQ,EAAE,IAAI,CAAC,CAACK,EAAKhrC,CAAK,IACvCyE,EAAAA,KAAA,MAAA,CAAc,UAAU,0FACvB,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mCACZ,SAAA,OAAOD,CAAK,EAAE,SAAS,EAAG,GAAG,CAChC,CAAA,EACCC,EAAA,IAAA,MAAA,CAAI,UAAU,sDAAuD,SAAI+qC,CAAA,CAAA,CAAA,CAJlE,EAAAA,CAKV,CACD,CACH,CAAA,CAAA,EACF,CAEJ,CAEA,SAASI,GAAoB,CAAE,iBAAAC,EAAkB,aAAA1mB,GAAgB,CAC/D,MAAM2mB,EAAY3mB,EAAe0mB,EAG/B,OAAA5mC,EAAA,KAAC,MAAI,CAAA,UAAU,4DAA4D,SAAA,CAAA,gBAC3D6mC,EAAU,YAAUA,IAAc,EAAI,IAAM,EAAA,EAC5D,CAEJ,CAGA,MAAMjwB,GAAQ,CACZ,UAAW,IACRpb,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAAO,MAAO,CAAE,UAAW,2BAC3E,EAAA,SAAAwE,EAAAA,KAAC,KAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAAA,IAAC,OAAK,CAAA,EAAE,6BAA6B,cAAc,QAAQ,MAAO,CAAE,UAAW,kCAAsC,CAAA,CAAA,EACpHA,EAAAA,IAAA,OAAA,CAAK,EAAE,sEAAsE,cAAc,QAAQ,MAAO,CAAE,UAAW,mCAAoC,eAAgB,MAAA,CAAU,CAAA,CAAA,CAAA,CACxL,CACF,CAAA,EAEF,kBAAmB,IAChBA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGA,EAAAA,IAAA,OAAA,CAAK,EAAE,4BAA4B,cAAc,QAAQ,eAAe,QAAQ,MAAO,CAAE,UAAW,gCAAoC,CAAA,CAAA,EACxIA,EAAAA,IAAA,OAAA,CAAK,EAAE,UAAU,cAAc,QAAQ,MAAO,CAAE,UAAW,iCAAkC,eAAgB,MAAA,CAAU,CAAA,CAAA,CAAA,CAC1H,CACF,CAAA,EAEF,QAAS,IACNA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAAA,IAAC,OAAK,CAAA,EAAE,0BAA0B,cAAc,QAAQ,MAAO,CAAE,UAAW,8BAAkC,CAAA,CAAA,EAC7GA,EAAAA,IAAA,OAAA,CAAK,EAAE,WAAW,cAAc,QAAQ,MAAO,CAAE,UAAW,+BAAgC,eAAgB,MAAU,CAAA,CAAA,EACtHA,EAAAA,IAAA,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,MAAO,CAAE,UAAW,2BAAA,CAA+B,CAAA,CAAA,CAAA,CACnF,CACF,CAAA,EAEF,UAAW,IACRA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,oCAAoC,QAChI,OAAK,CAAA,EAAE,gBAAgB,cAAc,QAAQ,eAAe,QAAQ,UAAU,2CAA2C,MAAO,CAAE,gBAAiB,GAAI,iBAAkB,GAAM,CAAA,CAAA,CAAA,CAClL,CACF,CAAA,EAEF,MAAO,IACJA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAE,CAAA,YAAa,IAAK,OAAO,eAAe,MAAO,CAAE,UAAW,wBAC7D,EAAA,SAAA,CAAAA,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,eAAe,QAC3G,OAAK,CAAA,EAAE,UAAU,cAAc,QAAQ,UAAU,eAAe,QAChE,OAAK,CAAA,EAAE,aAAa,cAAc,QAAQ,UAAU,cAAe,CAAA,CAAA,CAAA,CACtE,CACF,CAAA,CAEJ,EAGMyb,GAAgB,CAAC,CAAE,OAAAC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,MAAAhZ,KAAY,CACjE,MAAMmZ,EAAQ,CACZ,CAAE,IAAK,YAAa,MAAO,wBAAyB,KAAMX,GAAM,SAAU,EAC1E,CAAE,IAAK,YAAa,MAAO,iBAAkB,KAAMA,GAAM,iBAAkB,EAC3E,CAAE,IAAK,UAAW,MAAO,cAAe,KAAMA,GAAM,OAAQ,EAC5D,CAAE,IAAK,YAAa,MAAO,oBAAqB,KAAMA,GAAM,SAAU,CACxE,EAEMY,EAAmBD,EAAM,UAAkBE,GAAAA,EAAK,MAAQL,CAAW,EACnEyF,EAAU,EAAQze,EAGlBsZ,EAAsBtZ,GACtBA,GAAO,SAAS,sBAAsB,EACjC,8CAELA,GAAO,SAAS,oBAAoB,EAC/B,kDAEFA,GAAO,QAAQ,kCAAmC,EAAE,GAAK,oBAGlE,OACG5C,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,gHACtB,SAAA,CAAArc,MAACqc,GAAO,MAAP,CAAa,UAAU,yDACrB,SAAAgF,EAAU,oBAAsB,cACnC,EACArhB,MAAC,OAAI,UAAU,YACZ,WAAM,IAAI,CAACic,EAAM/R,IAAU,CAC1B,MAAMoS,EAAOL,EAAK,KACZnY,EAAWoG,IAAU8R,EACrBO,EAAc,CAAC8E,GAAWnX,EAAQ8R,EAClCQ,EAAc6E,GAAWnX,IAAU8R,EAGvC,OAAAxX,EAAA,KAAC,MAAA,CAEC,UAAWiY,GACT,2DACA,CACE,iCAAkC3Y,GAAY,CAAC0Y,EAC/C,iBAAkBD,EAClB,6BAA8BC,EAC9B,gBAAiB,CAAC1Y,GAAY,CAACyY,GAAe,CAACC,CAAA,CAEnD,EAEA,SAAA,CAAAxc,EAAA,IAACsc,EAAK,EAAA,EACNtc,EAAA,IAAC,MAAI,CAAA,UAAU,SACb,SAAAA,EAAAA,IAAC,QAAK,UAAU,4CAA6C,SAAKic,EAAA,KAAA,CAAM,CAC1E,CAAA,EACCM,SACE,MAAI,CAAA,UAAU,yBAAyB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAChF,SAACvc,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CACxF,CAAA,CAAA,CAAA,EAlBGic,EAAK,GAoBZ,CAEH,CAAA,EACH,EACCoF,GACC7c,EAAA,KAAC,MAAI,CAAA,UAAU,6DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACb5W,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,QAC7D,IAAE,CAAA,UAAU,4BACV,SAAAkc,EAAmBtZ,CAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACA5C,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,iLACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAEDC,IAAgB,aACf5b,EAAA,IAAC,MAAI,CAAA,UAAU,mBACb,SAAAA,EAAAA,IAAC,IAAE,CAAA,UAAU,6BAA6B,SAAA,0BAAA,CAAwB,CACpE,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAGM2c,GAAkB,CAAC,CAAE,OAAAjB,EAAQ,QAAAC,EAAS,OAAAiB,KAAa,CACvD,KAAM,CAACC,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAACmd,EAAeC,CAAgB,EAAIpd,EAAAA,SAAS,CAAC,EAEpD,OACGI,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,gHACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CAAa,UAAU,qEAAqE,SAE7F,+BAAA,EACCrc,EAAA,IAAA,MAAA,CAAI,UAAU,iCACZ,SAAC,CAAA,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKmR,GACpBnR,EAAA,IAAC,SAAA,CAEC,aAAc,IAAMgd,EAAiB7L,CAAI,EACzC,aAAc,IAAM6L,EAAiB,CAAC,EACtC,QAAS,IAAM,CACbF,EAAU3L,CAAI,EACdyL,EAAOzL,CAAI,EACX,WAAWwK,EAAS,GAAG,CACzB,EACA,UAAU,2CAEV,SAAA3b,EAAA,IAAC,MAAA,CACC,UAAW,WACTmR,IAAS4L,GAAiBF,GACtB,iBACA,kCACN,qBACA,KAAK,eACL,QAAQ,YAER,SAAA7c,EAAAA,IAAC,OAAK,CAAA,EAAE,0VAA2V,CAAA,CAAA,CAAA,CACrW,EApBKmR,CAsBR,CAAA,EACH,EACA3M,EAAAA,KAAC,MAAI,CAAA,UAAU,uDACZ,SAAA,CAAAuY,IAAkB,GAAK,kBACvBA,IAAkB,GAAK,YACvBA,IAAkB,GAAK,OACvBA,IAAkB,GAAK,QACvBA,IAAkB,GAAK,YAAA,CAC1B,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAEA,SAAwBuuB,IAAiB,CACjC,KAAA,CAAE,OAAAz1B,CAAO,EAAI+kB,GAAU,EACvBvY,EAAWC,GAAY,EACvB,CAACipB,EAAYC,CAAa,EAAI5rC,EAAAA,SAAS,CAAC,EACxC,CAAC4C,EAAYq4B,CAAa,EAAIj7B,EAAAA,SAAS,IAAI,EAC3C,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAC6rC,EAAiBC,CAAkB,EAAI9rC,EAAAA,SAAS,EAAE,EACrBA,EAAAA,SAAS,IAAI,EACjD,KAAM,CAACsd,EAASyuB,CAAU,EAAI/rC,EAAAA,SAAS,IAAI,EACLA,EAAAA,SAAS,CAAC,EAChD,KAAM,CAACgsC,EAAWC,CAAY,EAAIjsC,EAAAA,SAAS,CAAC,EACtC,CAACwrC,EAAkBU,CAAmB,EAAIlsC,EAAAA,SAAS,CAAC,EACpD,CAACmsC,EAAaC,CAAc,EAAIpsC,EAAAA,SAAS,CAAC,EAC1C,CAACgI,EAAUqkC,CAAW,EAAIrsC,EAAAA,SAAS,IAAI,EACvC,CAACssC,EAAkBC,CAAmB,EAAIvsC,EAAAA,SAAS,EAAK,EACxD,CAACwsC,EAAeC,CAAgB,EAAIzsC,EAAAA,SAAS,EAAK,EAClD,CAAC0sC,EAAgBC,CAAiB,EAAI3sC,EAAAA,SAAS,IAAI,EACnD,CAAC4sC,EAAkBC,CAAmB,EAAI7sC,EAAAA,SAAS,IAAI,EACvD,CAAC83B,EAAYC,CAAa,EAAI/3B,EAAAA,SAAS,CAAA,CAAE,EACzC,CAACud,EAAgBC,CAAiB,EAAIxd,EAAAA,SAAS,IAAI,EACnD,CAAC8d,EAAmBC,CAAoB,EAAI/d,EAAAA,SAAS,EAAK,EAC1D,CAACge,EAAcC,CAAe,EAAIje,EAAAA,SAAS,IAAI,EAC/C,CAACke,EAAeC,CAAgB,EAAIne,EAAAA,SAAS,IAAI,EACjD,CAACoe,EAAcC,CAAe,EAAIre,EAAAA,SAAS,EAAK,EAChD,CAACse,EAAiBC,CAAkB,EAAIve,EAAAA,SAAS,EAAK,EACtD,CAACwe,GAAYC,EAAa,EAAIze,WAAS,CAC3C,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,EAGDE,EAAAA,UAAU,IAAM,EACK,SAAY,CAC7B,GAAI,OAAO,SAAU,CACb,MAAAsL,GAAU,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACjEshC,GAAgB,SAASthC,GAAS,EAAE,EAClC,QAAA,IAAI,oBAAqBshC,EAAa,EACtC,QAAA,IAAI,mBAAoBlqC,GAAY,OAAO,EACnD4a,EAAkBsvB,EAAa,CAAA,CAEnC,GACW,EAGL,MAAAC,GAAsBvhC,IAAY,CACpBgS,EAAA,SAAShS,GAAS,EAAE,CAAC,CACzC,EACO,cAAA,UAAU,GAAG,eAAgBuhC,EAAkB,EAE/C,IAAM,CACJ,OAAA,UAAU,eAAe,eAAgBA,EAAkB,CACpE,CACF,EAAG,EAAE,EAGL7sC,EAAAA,UAAU,IAAM,CACV0C,GAAY,iBAAmB0a,GACR,SAAY,CAC/B,GAAA,CACF,MAAMtV,GAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrD3T,GAAW,IAAIC,EACnBlJ,EAAW,gBACXA,EAAW,OAAS,UAAYyS,GAAiB,eAAiBA,GAAiB,cACnFrN,EACF,EAGIpF,GAAAA,EAAW,OAAS,UAAW,CACjC,KAAM,CAACupC,GAAaa,EAAU,EAAI,MAAM,QAAQ,IAAI,CAClDnhC,GAAS,YAAY,EACrBA,GAAS,gBAAgByR,CAAO,CAAA,CACjC,EACc8uB,EAAA,OAAOD,EAAW,CAAC,EACdD,EAAA,OAAOc,EAAU,CAAC,CAAA,KACjC,CAEL,MAAMC,GAAUrqC,EAAW,UAAY,oBAAsBA,EAAW,UAAY,WAChF,CAAE,SAAU,GAAQ,EACpBA,EAAW,UAAY,gBACrB,CAAE,SAAU,GAAA,EACZ,CAAC,EAED,CAACupC,GAAaa,EAAU,EAAI,MAAM,QAAQ,IAAI,CAClDnhC,GAAS,YAAYohC,EAAO,EAC5BphC,GAAS,gBAAgByR,EAAS2vB,EAAO,CAAA,CAC1C,EACcb,EAAA,OAAOD,EAAW,CAAC,EACdD,EAAA,OAAOc,EAAU,CAAC,CAAA,QAEjChqC,GAAO,CACN,QAAA,MAAM,+BAAgCA,EAAK,EAEnDkpC,EAAoB,CAAC,CAAA,CAEzB,GAEiB,EAGjBA,EAAoB,CAAC,CAEtB,EAAA,CAAC5uB,EAAS1a,GAAY,eAAe,CAAC,EAGzC1C,EAAAA,UAAU,IAAM,CACTod,GACH4uB,EAAoB,CAAC,CACvB,EACC,CAAC5uB,CAAO,CAAC,EAGZ,MAAM4vB,GAAWlB,EAAY,EAAKG,EAAcH,EAAa,IAAM,EAGnE9rC,EAAAA,UAAU,IAAM,EACa,SAAY,CACjC,GAAA,CACI,MAAAwI,GAAO,MAAMsN,GAAcC,CAAM,EACvC,GAAI,CAACvN,GAAM,CACTlF,GAAM,MAAM,sBAAsB,EAClCif,EAAS,GAAG,EACZ,MAAA,CAEFwY,EAAcvyB,EAAI,EAClBhH,EAAW,EAAK,QACTsB,GAAO,CACN,QAAA,MAAM,4BAA6BA,EAAK,EAChDQ,GAAM,MAAM,+BAA+B,CAAA,CAE/C,GAEmB,CAAA,EAClB,CAACyS,EAAQwM,CAAQ,CAAC,EAGrBviB,EAAAA,UAAU,IAAM,EACO,SAAY,CAC/B,GAAI,OAAO,SAAU,CAGb,MAAAyK,GAAU,MADD,MADE,IAAI6U,GAAuB,OAAO,QAAQ,EAC7B,UAAU,GACX,WAAW,EACxCusB,EAAWphC,EAAO,CAAA,CAEtB,GAEa,CACf,EAAG,EAAE,EAGLzK,EAAAA,UAAU,IAAM,CACd,GAAI,CAAC+V,EAAQ,OAEb,MAAMlU,EAAc0U,GAAsBR,EAASvN,IAAS,CAC1DuyB,EAAcvyB,EAAI,EACH0jC,EAAA1jC,GAAK,aAAe,CAAC,CAAA,CACrC,EAED,MAAO,IAAM3G,EAAY,CAAA,EACxB,CAACkU,CAAM,CAAC,EAGX/V,EAAAA,UAAU,IAAM,CAEd,GAAI,CAAC0C,EAAY,CACfqpC,EAAa,CAAC,EACd,MAAA,CAIErpC,GAAAA,EAAW,UAAY,oBAAsBA,EAAW,UAAY,YAAcA,EAAW,UAAY,aAAc,CACzHqpC,EAAa,OAAOrpC,EAAW,SAAS,GAAK,CAAC,EAC9C,MAAA,CAIEA,EAAW,iBACQ,SAAY,CAC3B,GAAA,CACF,MAAMoF,GAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAQrD2tB,GAAS,MAPE,IAAIrhC,EACnBlJ,EAAW,gBACXA,EAAW,OAAS,UAAYyS,GAAiB,eAAiBA,GAAiB,cACnFrN,EACF,EAG8B,OAAO,EACrCikC,EAAa,OAAOkB,GAAO,SAAS,GAAK,CAAC,OAC5B,CAEdlB,EAAa,OAAOrpC,EAAW,SAAS,GAAK,CAAC,CAAA,CAElD,GAEa,EAGbqpC,EAAa,OAAOrpC,EAAW,SAAS,GAAK,CAAC,CAChD,EACC,CAACA,CAAU,CAAC,EAGf1C,EAAAA,UAAU,IAAM,CACd,GAAI,OAAO,SAAU,CACnB,MAAM8H,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAC3D6sB,EAAYrkC,CAAQ,CAAA,CAExB,EAAG,EAAE,EAGL9H,EAAAA,UAAU,IAAM,EACgB,SAAY,CACpC0C,GAAAA,GAAY,iBAAmB,OAAO,SACpC,GAAA,CAEF,MAAMwqC,GAAexqC,EAAW,UAE5BwqC,IAAgBA,GAAa,OAAS,SACpBP,EAAA,CAClB,QAASO,GAAa,QACtB,OAAQA,GAAa,QAAUxqC,EAAW,mBAAqB,QAC/D,SAAU,GACV,SAAU,EAAA,CACX,EAGmBiqC,EAAA,CAClB,QAASQ,GACT,OAAQzqC,EAAW,UAAY,UAAY,MACpCA,EAAW,UAAY,aAAe,OAAS,MACtD,SAAU,GACV,SAAU,EAAA,CACX,OAEW,CAAA,CAIpB,GAEsB,GACrB,CAACA,GAAY,gBAAiBA,GAAY,OAAO,CAAC,EAErD1C,EAAAA,UAAU,IAAM,EACS,SAAY,CAC7B0C,GAAAA,GAAY,WAAW,QACrB,GAAA,CACF,MAAMw1B,GAAkB,MAAMtgB,GAA4BlV,EAAW,UAAU,OAAO,EAC9E,QAAA,IAAI,2BAA4Bw1B,EAAe,EAEnDA,IAAiB,MACnBL,EAAuBrwB,KAAA,CACrB,GAAGA,GACH,CAAC9E,EAAW,UAAU,QAAQ,YAAY,CAAC,EAAGw1B,GAAgB,IAAA,EAC9D,QAEGp1B,GAAO,CACN,QAAA,MAAM,6BAA8BA,EAAK,CAAA,CAGvD,GAEe,CACd,EAAA,CAACJ,GAAY,WAAW,OAAO,CAAC,EAEnC,MAAMm3B,EAAqB,IAAM,CAC/B,MAAM9tB,EAAerJ,GAAY,WAAW,SAAS,YAAY,EAIjE,GAHsB,CAACqJ,GAAgBA,IAAiB,6CAItD,OAAIrJ,GAAY,UAAY,cAAgBA,GAAY,UAAY,iBAC1D,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,UAAU,EAEzDA,GAAY,UAAY,gBAClB,MAAI,CAAA,IAAI,eAAe,IAAI,MAAM,UAAU,UAAU,EAE3DA,GAAY,UAAY,iBAAmBA,GAAY,UAAY,YAC7D,MAAI,CAAA,IAAI,aAAa,IAAI,MAAM,UAAU,UAAU,EAGzDA,GAAY,UAAY,oBAAsBA,GAAY,UAAY,WACjExC,EAAA,IAACgjB,GAAW,CAAA,UAAU,wBAAyB,CAAA,EAEjDhjB,EAAA,IAACgjB,GAAW,CAAA,UAAU,wBAAyB,CAAA,EAIxD,GAAInX,IAAiB,6CACnB,aAAQ,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,UAAU,EAIvD,MAAA+tB,GAAUlC,EAAW7rB,CAAY,EACvC,OAAI+tB,GAEA55B,EAAA,IAAC,MAAA,CACC,IAAK45B,GACL,IAAKp3B,EAAW,UAAU,QAAU,QACpC,UAAU,uBACV,QAAUgF,IAAM,CACdA,GAAE,OAAO,QAAU,KACnBA,GAAE,OAAO,IAAM,oBAAA,CACjB,CACF,QAKI,MAAI,CAAA,IAAI,qBAAqB,IAAI,QAAQ,UAAU,uBAAuB,CACpF,EAeI,GAZJ1H,EAAAA,UAAU,IAAM,CACd,MAAMmgB,EAAe,IAAM,CACX5B,GAAA,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,CACH,EAEO,cAAA,iBAAiB,SAAU4B,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAChE,EAAG,EAAE,EAED5e,GAAW,CAACmB,EAEZ,OAAAgC,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,KAAM,CAAE,QAAS,CAAE,EACnB,WAAY,CAAE,SAAU,EAAI,EAC5B,UAAU,0BAGV,SAAA,CAAAtO,EAAAA,IAAC,OAAI,UAAU,4HACb,eAAC,MAAI,CAAA,UAAU,oFAAoF,CACrG,CAAA,QAEC,MAAI,CAAA,UAAU,8DACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,wCAEb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,WACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,wFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,iEAAkE,CAAA,EACjFwE,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mEAAoE,CAAA,EACnFA,EAAAA,IAAC,MAAI,CAAA,UAAU,8DAA+D,CAAA,CAAA,CAChF,CAAA,CAAA,EACF,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,+DAAgE,CAAA,EAC/EA,EAAAA,IAAC,MAAI,CAAA,UAAU,8DAA+D,CAAA,EAC9EA,EAAAA,IAAC,MAAI,CAAA,UAAU,8DAA+D,CAAA,CAAA,EAChF,EACAA,MAAC,OAAI,UAAU,wCACZ,UAAC,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACvBxO,MAAC,OAAY,UAAU,4DAAA,EAAbwO,CAA0E,CACrF,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QAGC,MAAI,CAAA,UAAU,WACb,SAAChK,EAAA,KAAA,MAAA,CAAI,UAAU,wFACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wEAAyE,CAAA,EACxFA,EAAAA,IAAC,MAAI,CAAA,UAAU,wEAAyE,CAAA,EACxFwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,+DAAgE,CAAA,EAC/EA,EAAAA,IAAC,MAAI,CAAA,UAAU,8DAA+D,CAAA,EAC9EA,EAAAA,IAAC,MAAI,CAAA,UAAU,oEAAqE,CAAA,CAAA,CACtF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,EAIJ,MAAMktC,EAAa,SAAY,CACzB,GAAA,CACF,GAAI,CAAChwB,EAAS,CACZW,EAAgB,OAAO,EACvBF,EAAqB,EAAI,EACzBI,EAAiB,kCAAkC,EACnD,MAAA,CAGFF,EAAgB,WAAW,EAC3BF,EAAqB,EAAI,EACzBI,EAAiB,IAAI,EAGrBF,EAAgB,WAAW,EAErB,MAAAsvB,GAAY,MADI,MAAM,MAAM3qC,EAAW,UAAU,GACjB,KAAK,EACrCke,GAAc,IAAI,KAAK,CAACysB,EAAS,EAAG,cAAe,CAAE,KAAM,YAAa,EAExE,CAAE,YAAAj2B,EAAY,EAAI,MAAMuJ,GAC5B,CACE,GAAGje,EACH,KAAMA,EAAW,KACjB,YAAaA,EAAW,YACxB,WAAYA,EAAW,YAAc,CAAC,EACtC,QAASA,EAAW,QACpB,iBAAkBA,EAAW,gBAC/B,EACAke,EACF,EAGM0sB,GAAWl2B,GAAY,QAAQ,UAAW,EAAE,EAAE,KAAK,EAEnDiI,GAAS,MAAMvX,EAAS,UAAU,EAGpC,IAAAylC,GACA,GAAA,CACE7qC,EAAW,WAAW,OAAS,SAEjC6qC,GAAe,OAAO,KAAK,MAAM,OAAO7qC,EAAW,SAAS,EAAI,KAAK,IAAI,GAAIA,EAAW,UAAU,UAAY,EAAE,CAAC,CAAC,EAGlH6qC,GAAe7tB,GAAkBhd,EAAW,UAAU,UAAU,OAEpD,CACd6qC,GAAe,OAAO,CAAC,CAAA,CAInB,MAAAC,GAAYD,GAAe,OAAO9B,CAAU,EAElD1tB,EAAgB,SAAS,EAEnB,MAAAmH,GAAc,IAAItZ,EACtBlJ,EAAW,gBACXA,EAAW,OAAS,UAAYyS,GAAiB,eAAiBA,GAAiB,cACnFkK,EACF,EAGI,IAAAgO,GACA3qB,EAAW,OAAS,UAClBA,EAAW,WAAW,OAAS,UAIjC,MADkB,MADI,IAAIkJ,EAAgBlJ,EAAW,UAAU,QAAS,CAAC,yEAAyE,EAAG2c,EAAM,EACrH,QAAQ3c,EAAW,gBAAiB8qC,EAAS,GACnE,KAAK,EAGrBngB,GAAK,MAAMnI,GAAY,KAAK,EAAGumB,EAAY6B,EAAQ,GAGnDjgB,GAAK,MAAMnI,GAAY,KAAK,EAAGumB,EAAY6B,GAAU,CACnD,MAAOE,EAAA,CACR,EAGC9qC,EAAW,WAAW,OAAS,UAIjC,MADkB,MADI,IAAIkJ,EAAgBlJ,EAAW,UAAU,QAAS,CAAC,yEAAyE,EAAG2c,EAAM,EACrH,QAAQ3c,EAAW,gBAAiB8qC,EAAS,GACnE,KAAK,EAGrBngB,GAAK,MAAMnI,GAAY,KAAKumB,EAAY6B,EAAQ,GAGhDjgB,GAAK,MAAMnI,GAAY,KAAKumB,EAAY6B,GAAU,CAChD,MAAOE,GACP,SAAU9qC,EAAW,UAAY,WAAa,IAAU+oC,EAAa,IAASA,CAAA,CAC/E,EAIC,MAAA7rB,GAAU,MAAMyN,GAAG,KAAK,EAGxB,CAACogB,GAAUC,EAAa,EAAI,MAAM,QAAQ,IAAI,CAClDxoB,GAAY,YAAY,EACxBA,GAAY,gBAAgB9H,CAAO,CAAA,CACpC,EAEc8uB,EAAA,OAAOuB,EAAQ,CAAC,EACXzB,EAAA,OAAO0B,EAAa,CAAC,EACzC,MAAMv3B,GAAuBJ,EAAQ,OAAO03B,EAAQ,CAAC,EAGrD,IAAIE,GAAiB,IACjBC,GAAqB,IAErB,GAAA,CACF,GAAIlrC,EAAW,UAAW,CACxBkrC,GAAqB,WAAWlrC,EAAW,SAAS,EAAE,QAAQ,CAAC,EACzD,MAAAw5B,GAAWrY,GAAmB2pB,EAAS,EAC7CG,GAAiB,WAAWzR,EAAQ,EAAE,QAAQ,CAAC,CAAA,OAEnC,CAAA,CAKV,MAAAhd,GAAU,MAAMpX,EAAS,WAAW,EACpCuV,GAAiB,OAAO6B,GAAQ,OAAO,EAG7C,MAAMhI,GAAa,CACjB,kBAAmBxU,EAAW,gBAC9B,cAAe0a,EACf,QAAS1a,EAAW,OAAS,UAAY,IAAM,OAAO+qC,EAAQ,EAC9D,SAAU,OAAOhC,CAAU,EAC3B,KAAM7rB,GAAQ,KACd,MAAOld,EAAW,WAClB,MAAOirC,GACP,KAAMjrC,EAAW,KACjB,KAAMA,EAAW,KACjB,OAAQA,EAAW,OACnB,YAAaA,EAAW,aAAe,QACvC,QAAS2a,KAAmB,IAAM,mBAC1BA,KAAmB,KAAO,WAC1BA,KAAmB,IAAM,UACzBA,KAAmB,WAAa,aAChCA,KAAmB,MAAQ,gBAAkB,UACrD,UAAWuwB,GACX,aAAclrC,EAAW,WAAa,IAAA,CACvC,EAGDqb,EAAgB,WAAW,EAC3BI,EAAgB,EAAI,EAGpB,WAAW,IAAM,CACfN,EAAqB,EAAK,EAC1BE,EAAgB,IAAI,EACpBE,EAAiB,IAAI,EAGrB,WAAW,IAAM,CACfI,EAAmB,EAAI,GACtB,GAAI,EAGP,WAAW,IAAM,CACfF,EAAgB,EAAK,GACpB,GAAK,GACP,GAAI,QAEArb,EAAO,CACN,QAAA,MAAM,iBAAkBA,CAAK,EACrCib,EAAgB,OAAO,EACNE,EAAAnb,EAAM,SAAW,oBAAoB,CAAA,CAG1D,EAGM8K,EAAM,KAAK,IAAI,EACfwrB,EAAc,IAAI,KAAK12B,EAAW,WAAW,EAC7CmrC,EAASjgC,GAAOwrB,EAEhB0U,EAAmB,SAAY,CAC/B,GAAA,CAAC1pB,GAAgBunB,CAAe,EAAG,CACrCroC,GAAM,MAAM,wBAAwB,EACpC,MAAA,CAGE,GAAA,CAEI,MAAAyqC,EAAqBrrC,EAAW,oBAAsB,CAAC,EACvDsrC,GAAerC,EAAgB,YAAY,EAE3CsC,GAAaF,EAAmB,KAAa5rB,IAAA,CAC7C,GAAA,CAACA,GAAa,MAAA,GAClB,MAAM+rB,GAAiB,OAAO/rB,IAAS,SAAWA,GAAK,QAAUA,GAC1D,OAAA+rB,IAAkBA,GAAe,YAAA,IAAkBF,EAAA,CAC3D,EAEK1B,GAAgB,CAAC,CAAC2B,GAClBE,GAAYF,IAAc,OAAOA,IAAe,SAAWA,GAAW,QAAU,EAalFvrC,GAXJ2pC,EAAoB,EAAI,EACxBE,EAAiBD,EAAa,EAC9BG,EAAkBwB,EAAU,EAExB3B,GACIhpC,GAAA,QAAQ,0CAA0C6qC,EAAS,OAAO,EAExE7qC,GAAM,MAAM,4BAA4B,EAItCZ,EAAW,iBAAmBoF,EAAU,CACpC,MAAA6D,GAAW,IAAIC,EACnBlJ,EAAW,gBACXA,EAAW,OAAS,UAAYyS,GAAiB,eAAiBA,GAAiB,cACnFrN,CACF,EAEI,GAAA,CAEF,KAAM,CAACsmC,GAAkBC,EAAY,EAAI,MAAM,QAAQ,IAAI,CACzD1iC,GAAS,UAAUggC,CAAe,EAClChgC,GAAS,mBAAmBggC,CAAe,CAAA,CAC5C,EAED,QAAQ,IAAI,6BAA8B,CACxC,cAAeyC,GACf,UAAWC,GAAa,SAAS,CAAA,CAClC,EAEGD,KAAqB9B,IACvB,QAAQ,KAAK,sDAAsD,EAEjE+B,GAAa,SAAA,IAAeF,GAAU,YACxC,QAAQ,KAAK,0DAA0D,QAElErrC,GAAO,CACN,QAAA,KAAK,mCAAoCA,EAAK,CAAA,CACxD,QAEKA,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EAChDQ,GAAM,MAAM,iCAAiC,CAAA,CAEjD,EAGMgrC,GAAc,IACb5rC,GAAY,UAGfgC,EAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,mCAAmC,SAAK,QAAA,EACxDwE,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAmBm1B,EAAA,QACnB,OAAK,CAAA,UAAU,kDACb,SAAAn3B,EAAW,SACd,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAXiC,KAgB/B6rC,GAAmB,IAAM,CACvB3gC,MAAAA,EAAM,KAAK,IAAI,EACfwrB,GAAc,IAAI,KAAK12B,EAAW,WAAW,EAC7C22B,GAAc32B,EAAW,YAAc,IAAI,KAAKA,EAAW,WAAW,EAAI,KAC1E8rC,GAAc,CAAC9rC,EAAW,cAAgB22B,IAAezrB,GAAOyrB,GAChEoV,GAAkB7gC,EAAMwrB,GAGxBsV,GAAkBhsC,EAAW,UAAY,oBAAsBA,EAAW,UAAY,IAAM,IAC3EA,EAAW,UAAY,WAAa,KACpCA,EAAW,UAAY,UAAY,SACnCA,EAAW,UAAY,cAAgBA,EAAW,UAAY,WAAa,WAC3EA,EAAW,UAAY,iBAAmBA,EAAW,UAAY,MAAQ,MACzEA,EAAW,UAAY,UAAY,IAAM,KAE1DisC,GAAiBtxB,GAAkBA,IAAmBqxB,GAGtDE,GAAqBlsC,EAAW,UAAY,oBAAsBA,EAAW,UAAY,IAAM,mBAC5EA,EAAW,UAAY,WAAa,mBACpCA,EAAW,UAAY,UAAY,UACnCA,EAAW,UAAY,cAAgBA,EAAW,UAAY,WAAa,aAC3EA,EAAW,UAAY,iBAAmBA,EAAW,UAAY,MAAQ,gBACzEA,EAAW,UAAY,UAAY,UAAY,kBAGtE,OAAAgC,EAAA,KAAC,MAAI,CAAA,UAAU,sBAEZ,SAAA,CACC+pC,IAAA/pC,EAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAAAA,EAAA,IAAC,MAAG,UAAU,oDAAoD,6BAAiB,CACrF,CAAA,EACAA,EAAAA,IAACwqC,GAAe,CAAA,WAAYtR,EAAa,CAAA,CAAA,EAC3C,EAID,CAAC12B,EAAW,cAAgBmrC,GAAU,CAACW,IACtCtuC,EAAA,IAACgrC,GAAA,CACC,QAASxoC,EAAW,YACpB,aAAcA,EAAW,YAAA,CAC3B,EAGFgC,EAAAA,KAAC,MAAI,CAAA,UAAU,4HACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMwrC,EAAc,KAAK,IAAI,EAAGD,EAAa,CAAC,CAAC,EACxD,UAAU,sKACV,SAAU,CAACoC,GAAUpC,GAAc,GACjC/oC,EAAW,kBAAoB,CAAC0pC,GAAoB,CAACE,GAGvD,SAAApsC,EAAAA,IAAC2uC,GAAQ,CAAA,KAAM,EAAI,CAAA,CAAA,CACrB,EACC3uC,EAAA,IAAA,OAAA,CAAK,UAAU,4EACb,SACHurC,EAAA,EACAvrC,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CAIb,MAAMqrC,IAHa7oC,EAAW,iBAAmB8pC,EAC5CA,EAAe,SAAW,EAC3B9pC,EAAW,cACgB4oC,EAC/BI,EAAc,KAAK,IAAIH,GAAWE,EAAa,CAAC,CAAC,CACnD,EACA,UAAU,sKACV,SAAU,CAACoC,IACTnrC,EAAW,gBACT,CAAC0pC,GACD,CAACE,GACDhB,IAAqBkB,GAAgB,SAAW,IAChDf,IAAee,GAAgB,SAAW,GAAKlB,EAE/CA,GAAoB5oC,EAAW,cAC/B+oC,GAAc/oC,EAAW,aAAe4oC,GAI5C,SAAAprC,EAAAA,IAAC4uC,GAAO,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACpB,EACF,EAEC1xB,GACCld,EAAA,IAACmrC,GAAA,CACC,iBAAAC,EACA,aAAc5oC,EAAW,gBAAmB8pC,GAAgB,SAAW,EAAK9pC,EAAW,YAAA,CACzF,EAGFxC,EAAA,IAAC,SAAA,CACC,QAASktC,EACT,SACEqB,IACAD,IACAG,KACCjsC,EAAW,gBACV,CAAC0pC,GACD,CAACE,GACDhB,IAAqBkB,GAAgB,SAAW,GAEhDlB,GAAoB5oC,EAAW,eAEjC+oC,IAAe,EAEjB,UAAW,eACTgD,IACAD,GADkB,iCAElBG,GAAiB,+CACjBjsC,EAAW,kBAAoB,CAAC0pC,GAAoB,CAACE,GACjD,8DACA,4CACN,kGAEC,SAAClvB,EACDqxB,GAAkB,uBAClBD,GAAc,gBACdG,GAAiB,aAAaC,EAAkB,WAChDlsC,EAAW,iBAAmB,CAAC0pC,EAAmB,yBAClD1pC,EAAW,iBAAmB,CAAC4pC,EAAgB,kBAC/C,WANW,gBAMX,CAAA,CAEH,EACF,CAEJ,EAGE,OAAA5nC,EAAA,KAAC,MAAI,CAAA,UAAU,8DAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gIACZ,SAAA,CAAAhC,EAAW,cAAgB,QAC1BxC,EAAA,IAAC,QAAA,CACC,IAAKwC,EAAW,YAAckX,GAAWlX,EAAW,YAAY,EAChE,UAAU,wDACV,SAAQ,GACR,MAAK,GACL,KAAI,GACJ,YAAW,EAAA,CAAA,EAGbxC,EAAA,IAAC,MAAA,CACC,IAAKwC,EAAW,YAAckX,GAAWlX,EAAW,YAAY,EAChE,IAAKA,EAAW,KAChB,UAAU,uDAAA,CACZ,EAEFxC,EAAAA,IAAC,MAAI,CAAA,UAAU,mFAAoF,CAAA,CAAA,EACrG,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,oEACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mDAAoD,CAAA,EACnEA,EAAAA,IAAC,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAqD,CAAA,EACpEA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,sDAAuD,CAAA,EACtEA,EAAAA,IAAC,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAwD,CAAA,EACvEA,EAAAA,IAAC,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,qFAAsF,CAAA,EACrGA,EAAAA,IAAC,MAAI,CAAA,UAAU,sFAAuF,CAAA,EACtGA,EAAAA,IAAC,MAAI,CAAA,UAAU,wFAAyF,CAAA,EACxGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yFAA0F,CAAA,EAGzGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,EAGAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,+CAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBAEb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,SACZ,SAAAwC,EAAW,cAAgB,QAC1BxC,EAAAA,IAAC,MAAI,CAAA,UAAU,4EACb,SAAAA,EAAA,IAAC,QAAA,CACC,IAAKwC,EAAW,YAAckX,GAAWlX,EAAW,YAAY,EAChE,UAAU,6BACV,SAAQ,GACR,YAAW,EAAA,GAEf,EAEAxC,EAAA,IAAC,MAAA,CACC,IAAKwC,EAAW,YAAckX,GAAWlX,EAAW,YAAY,EAChE,IAAKA,EAAW,KAChB,UAAU,wEAAA,CAAA,EAGhB,EAGAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC,KAAG,CAAA,UAAU,wDACX,SAAAwC,EAAW,KACd,EACAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,gEACb,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAM,SAAAwC,EAAW,MAAO,CAAA,EACzBxC,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACH,UAAA,UAAU,UAAUwC,EAAW,MAAM,EAC/CY,GAAM,QAAQ,gBAAgB,CAChC,EACA,UAAU,yCAEV,SAAApD,EAAAA,IAAC0c,GAAO,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACpB,EACF,QACC,IAAE,CAAA,UAAU,mDACV,SAAAla,EAAW,WACd,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,0DACb,SAACgC,EAAA,KAAA,MAAA,CAAI,UAAU,aACZ,SAAA,CAAAhC,EAAW,SACVxC,EAAA,IAAC,IAAA,CACC,KAAMwC,EAAW,QACjB,OAAO,SACP,IAAI,sBACJ,UAAU,uDAEV,SAAAxC,EAAAA,IAAC6uC,GAAQ,CAAA,KAAM,EAAI,CAAA,CAAA,CACrB,EAEDrsC,EAAW,SAAS,SACnBxC,EAAA,IAAC,IAAA,CACC,KAAM,uBAAuBwC,EAAW,QAAQ,OAAO,GACvD,OAAO,SACP,IAAI,sBACJ,UAAU,uDAEV,SAAAxC,EAAAA,IAAC2S,GAAU,CAAA,KAAM,EAAI,CAAA,CAAA,CACvB,EAEDnQ,EAAW,SAAS,SACnBxC,EAAA,IAAC,IAAA,CACC,KAAMwC,EAAW,QAAQ,QACzB,OAAO,SACP,IAAI,sBACJ,UAAU,uDAEV,SAAAxC,EAAAA,IAAC4S,GAAU,CAAA,KAAM,EAAI,CAAA,CAAA,CACvB,EAEDpQ,EAAW,SAAS,UACnBxC,EAAA,IAAC,IAAA,CACC,KAAMwC,EAAW,QAAQ,SACzB,OAAO,SACP,IAAI,sBACJ,UAAU,uDAEV,SAAAxC,EAAAA,IAAC0S,GAAW,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACxB,CAAA,CAEJ,CACF,CAAA,EAGA1S,EAAAA,IAAC,MAAI,CAAA,UAAU,wCACZ,SAAAwC,EAAW,YAAY,IAAI,CAACue,EAAM7W,KACjC1F,EAAA,KAAC,MAAA,CAEC,UAAU,4FAEV,SAAA,CAAAxE,EAAA,IAAC,IAAE,CAAA,UAAU,+BAAgC,SAAA+gB,EAAK,WAAW,EAC5D/gB,EAAA,IAAA,IAAA,CAAE,UAAU,qCACV,SAAO,OAAA+gB,EAAK,OAAU,SAAWA,EAAK,MAAM,SAAS,EAAIA,EAAK,KACjE,CAAA,CAAA,CAAA,EANK7W,EAAA,CAQR,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGA1F,EAAAA,KAAC,MAAI,CAAA,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mDAAoD,CAAA,EACnEA,EAAAA,IAAC,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAqD,CAAA,EACpEA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,sDAAuD,CAAA,EACtEA,EAAAA,IAAC,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAwD,CAAA,EACvEA,EAAAA,IAAC,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,qFAAsF,CAAA,EACrGA,EAAAA,IAAC,MAAI,CAAA,UAAU,sFAAuF,CAAA,EACtGA,EAAAA,IAAC,MAAI,CAAA,UAAU,wFAAyF,CAAA,EACxGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yFAA0F,CAAA,EAGzGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,EAGAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,+CACZ,SAAA,CAAY4pC,GAAA,EAGZ5rC,EAAW,iBACTgC,OAAA,MAAA,CAAI,UAAU,+FACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,8CAA8C,SAAiB,oBAAA,EAC5EksC,GAAoBE,GACnBpsC,EAAAA,IAAC,OAAK,CAAA,UAAU,gEAAgE,SAEhF,aAAA,CAAA,CAAA,EAEJ,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,YAAY,4BACZ,MAAOyrC,EACP,SAAWjkC,GAAMkkC,EAAmBlkC,EAAE,OAAO,KAAK,EAClD,UAAU,oLAAA,CACZ,EACAxH,EAAA,IAAC,SAAA,CACC,QAAS4tC,EACT,SAAU,CAACnC,GAAmB,CAACvnB,GAAgBunB,CAAe,EAC9D,UAAW,gEACTA,GAAmBvnB,GAAgBunB,CAAe,EAC9C,6CACA,+DACN,GACD,SAAA,OAAA,CAAA,CAED,EACF,EACCS,GACClsC,EAAA,IAAC,MAAI,CAAA,UAAW,uBACdosC,EACI,6CACA,wCACN,GACG,SAAAA,EACE5nC,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2CACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,OAAO,SAAC,IAAA,EAAO,wBAAA,EAEjC,EACCssC,GAAkB,OAAOA,GAAmB,UAC1C9nC,EAAAA,KAAA,MAAA,CAAI,UAAU,2CAA2C,SAAA,CAAA,sBACpC8nC,EAAe,QAAQ,kCAAA,CAC7C,CAAA,CAAA,CAEJ,CAAA,EAEA9nC,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,OAAO,SAAC,IAAA,EAAO,4BAAA,CAAA,CAEjC,CAEJ,CAAA,CAAA,EAEJ,EAGDquC,GAAiB,EAGlB7pC,EAAAA,KAAC,MAAI,CAAA,UAAU,qDACZ,SAAA,CAAAhC,EAAW,gBACTgC,OAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAxE,EAAA,IAAC,IAAA,CACC,KAAM,GACJwC,EAAW,UAAY,UACnB,0BACAA,EAAW,UAAY,oBAAsBA,EAAW,UAAY,IAClE,kCACAA,EAAW,UAAY,WACnB,0CACAA,EAAW,UAAY,cAAgBA,EAAW,UAAY,WAC1D,sDACAA,EAAW,UAAY,iBAAmBA,EAAW,UAAY,MAC7D,sCACA,8BACpB,YAAYA,EAAW,cAAc,GACrC,OAAO,SACP,IAAI,sBACJ,UAAU,4GACX,SAAA,iBAAA,CAED,QACC,MAAI,CAAA,UAAU,kMACZ,SAAAA,EAAW,cACd,CAAA,CAAA,EACF,EAGFgC,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAxE,EAAA,IAAC,IAAA,CACC,KAAM,GACJwC,EAAW,UAAY,UACnB,0BACAA,EAAW,UAAY,oBAAsBA,EAAW,UAAY,IAClE,kCACAA,EAAW,UAAY,WACnB,0CACAA,EAAW,UAAY,cAAgBA,EAAW,UAAY,WAC1D,sDACAA,EAAW,UAAY,iBAAmBA,EAAW,UAAY,MAC7D,sCACA,8BACpB,YAAYA,EAAW,eAAe,GACtC,OAAO,SACP,IAAI,sBACJ,UAAU,4GACX,SAAA,kBAAA,CAED,QACC,MAAI,CAAA,UAAU,kMACZ,SAAAA,EAAW,eACd,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAACgC,EAAAA,KAAA,MAAA,CAAI,UAAU,qEACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,SAAQ,UAAA,CAAA,SACb,OAAM,CAAA,SAAA,CAAA+rC,EAAY,IAAEH,EAAU,SAAA,CAAO,CAAA,CAAA,EACxC,EACA5rC,EAAAA,IAAC,MAAI,CAAA,UAAU,iEACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,kDACV,MAAO,CAAE,MAAO,GAAG,KAAK,IAAI8sC,GAAU,GAAG,CAAC,GAAI,CAAA,CAAA,CAElD,CAAA,CAAA,EACF,EAGAtoC,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0FACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,gDAAgD,SAAc,iBAAA,EAC5EA,EAAA,IAAA,MAAA,CAAI,UAAU,oDACZ,SAAAwC,EAAW,gBACTxC,EAAAA,IAAA,OAAA,CAAK,UAAU,2CAA2C,SAA8C,iDAAA,EAEzGwC,EAAW,YAEf,CAAA,CAAA,EACF,EACAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,0FACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,gDAAgD,SAAY,eAAA,EAC1EA,EAAA,IAAA,MAAA,CAAI,UAAU,kDAAmD,SAAU4rC,CAAA,CAAA,CAAA,CAC9E,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGApnC,EAAAA,KAAC,MAAI,CAAA,UAAU,QACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,wDAAwD,SAEtE,uBAAA,QACC22B,GACC,CAAA,SAAA32B,EAAAA,IAACoqC,GAAc,CAAA,WAAY5nC,EAAY,CACzC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECwb,GACChe,EAAA,IAACqgB,GAAA,CACC,MAAOjC,GAAW,MAClB,OAAQA,GAAW,OACnB,eAAgB,IAChB,QAAS,GACT,QAAS,GACT,iBAAkB,GAClB,iBAAkB,GAClB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,SAAS,EAC9D,MAAO,CACL,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,OACR,OAAQ,MACR,cAAe,MAAA,CACjB,CACF,EAGFpe,EAAA,IAACyb,GAAA,CACC,OAAQiC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1BE,EAAgB,IAAI,CACtB,EACA,YAAaD,EACb,MAAOE,CAAA,CACT,EAEA9d,EAAA,IAAC2c,GAAA,CACC,OAAQuB,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,OAAStB,GAAW,CACV,QAAA,IAAI,iCAAkCA,CAAM,CAAA,CAEtD,CAAA,CACF,EACF,CAEJ,CC9gDA,MAAMiyB,GAAiB,IACjBC,OAAoB,IAGpBC,GAAsB,CAACzkC,EAASa,IAAY,CAChD,MAAMqe,EAAW,GAAGlf,CAAO,IAAIa,CAAO,GAChCse,EAAaqlB,GAAc,IAAItlB,CAAQ,EAE7C,GAAIC,EAAY,CACR,KAAA,CAAE,UAAA7Z,EAAW,KAAAvH,CAAA,EAASohB,EAC5B,GAAI,KAAK,MAAQ7Z,EAAYi/B,GACpB,OAAAxmC,EAETymC,GAAc,OAAOtlB,CAAQ,CAAA,CAIzB,MAAAwlB,EAAa,aAAa,QAAQxlB,CAAQ,EAChD,GAAIwlB,EACE,GAAA,CACF,KAAM,CAAE,UAAAp/B,EAAW,KAAAvH,CAAA,EAAS,KAAK,MAAM2mC,CAAU,EACjD,GAAI,KAAK,MAAQp/B,EAAYi/B,GACpB,OAAAxmC,EAET,aAAa,WAAWmhB,CAAQ,OAClB,CACd,aAAa,WAAWA,CAAQ,CAAA,CAI7B,OAAA,IACT,EAGMylB,GAAkB,CAAC3kC,EAASa,EAAS+jC,IAAe,CACxD,MAAM1lB,EAAW,GAAGlf,CAAO,IAAIa,CAAO,GAChCkgB,EAAY,CAChB,UAAW,KAAK,IAAI,EACpB,KAAM6jB,CACR,EAGcJ,GAAA,IAAItlB,EAAU6B,CAAS,EAGjC,GAAA,CACF,aAAa,QAAQ7B,EAAU,KAAK,UAAU6B,CAAS,CAAC,QACjD1oB,EAAO,CACN,QAAA,MAAM,gCAAiCA,CAAK,CAAA,CAExD,EAGMqxB,GAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,KAAM,CACJ,QAAS,EACT,WAAY,CACV,gBAAiB,GAAA,CACnB,CAEJ,EAEMoD,GAAe,CACnB,OAAQ,CACN,QAAS,EACT,EAAG,GACL,EACA,KAAM,CACJ,QAAS,EACT,EAAG,EACH,WAAY,CACV,KAAM,SACN,OAAQ,EAAA,CACV,CAEJ,EAEA,SAAwB+X,IAAc,CACZxvC,EAAAA,SAAS,CAAE,CAAA,EACnC,KAAM,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAE,QAASsd,EAAS,YAAA1S,CAAA,EAAgBC,GAAW,EAC/C,CAAE,MAAAC,CAAM,EAAIC,GAAW,EACvB,CAACwkC,EAAYE,CAAa,EAAIzvC,EAAAA,SAAS,CAAA,CAAE,EACzC,CAAC0vC,EAAiBC,CAAkB,EAAI3vC,EAAAA,SAAS,KAAK,EACpCi4B,EAAAA,OAAO,IAAI,EAC7B,KAAA,CAAE,iBAAAtV,CAAiB,EAAIC,GAAgB,EACvC,CAAC0V,EAAqBC,CAAsB,EAAIv4B,EAAAA,SAAS,EAAK,EAG9D4vC,EAAgB,IAAM,CAC1B,MAAM7W,EAAW,CACf,CAAE,GAAI,MAAO,MAAO,cAAe,EACnC,CAAE,GAAI,UAAW,MAAO,SAAU,EAClC,CAAE,GAAI,mBAAoB,MAAO,kBAAmB,EACpD,CAAE,GAAI,WAAY,MAAO,kBAAmB,EAC5C,CAAE,GAAI,UAAW,MAAO,SAAU,EAClC,CAAE,GAAI,aAAc,MAAO,YAAa,EACxC,CAAE,GAAI,gBAAiB,MAAO,eAAgB,CAChD,EAEM8W,EAAgB,CACpB,IAAKN,EAAW,OAChB,QAASA,EAAW,OAAYzlC,GAAAA,EAAE,UAAY,WAAaA,EAAE,UAAY,QAAQ,EAAE,OACnF,mBAAoBylC,EAAW,OAAYzlC,GAAAA,EAAE,UAAY,oBAAsBA,EAAE,UAAY,GAAG,EAAE,OAClG,SAAUylC,EAAW,OAAYzlC,GAAAA,EAAE,UAAY,YAAcA,EAAE,UAAY,IAAI,EAAE,OACjF,QAASylC,EAAW,OAAYzlC,GAAAA,EAAE,UAAY,WAAaA,EAAE,UAAY,GAAG,EAAE,OAC9E,WAAYylC,EAAW,OAAYzlC,GAAAA,EAAE,UAAY,cAAgBA,EAAE,UAAY,UAAU,EAAE,OAC3F,gBAAiBylC,EAAW,OAAYzlC,GAAAA,EAAE,UAAY,iBAAmBA,EAAE,UAAY,KAAK,EAAE,MAChG,EAGE,OAAAlF,EAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAM2zB,EAAuB,CAACD,CAAmB,EAC1D,UAAU,+LAEV,SAAA,CAAA1zB,OAAC,OAAM,CAAA,SAAA,CAAAm0B,EAAS,KAAKG,GAAKA,EAAE,KAAOwW,CAAe,GAAG,MAAM,KAAGG,EAAcH,CAAe,EAAE,GAAA,EAAC,EAC9FtvC,EAAA,IAAC,MAAA,CACC,UAAW,8CAA8Ck4B,EAAsB,aAAe,EAAE,GAChG,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAl4B,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EAECk4B,GACEl4B,EAAA,IAAA,MAAA,CAAI,UAAU,wHACZ,SAAA24B,EAAS,IACR3Z,GAAAxa,EAAA,KAAC,SAAA,CAEC,QAAS,IAAM,CACb+qC,EAAmBvwB,EAAQ,EAAE,EAC7BmZ,EAAuB,EAAK,CAC9B,EACA,UAAW,0IACTmX,IAAoBtwB,EAAQ,GAAK,iCAAmC,+BACtE,GAEC,SAAA,CAAQA,EAAA,MAAM,KAAGywB,EAAczwB,EAAQ,EAAE,EAAE,GAAA,CAAA,EATvCA,EAAQ,EAAA,CAWhB,CACH,CAAA,CAAA,EAEJ,CAEJ,EAGM0wB,EAAqBnpC,EAAAA,QAAQ,IAC1B4oC,EAAW,OAAmBQ,GAC/BL,IAAoB,MAAc,GAC/BK,EAAS,UAAYL,GACpBA,IAAoB,WAAaK,EAAS,UAAY,UACtDL,IAAoB,oBAAsBK,EAAS,UAAY,KAC/DL,IAAoB,YAAcK,EAAS,UAAY,MACvDL,IAAoB,WAAaK,EAAS,UAAY,KACtDL,IAAoB,cAAgBK,EAAS,UAAY,YACzDL,IAAoB,iBAAmBK,EAAS,UAAY,KACrE,EACA,CAACR,EAAYG,CAAe,CAAC,EAEhCxvC,EAAAA,UAAU,IAAM,CACd,MAAM8vC,EAAc,SAAY,CAC9B,GAAI,CAAC1yB,EAAS,CACZmyB,EAAc,CAAA,CAAE,EAChB/tC,EAAW,EAAK,EAChB,MAAA,CAGE,GAAA,CAEF,MAAMuuC,EAAmBb,GAAoB9xB,EAASxS,GAAO,EAAE,EAC/D,GAAImlC,EAAkB,CACpBR,EAAcQ,CAAgB,EAC9BvuC,EAAW,EAAK,EAGFwuC,EAAA,EACd,MAAA,CAGF,MAAMA,EAAc,OACN,CACdxuC,EAAW,EAAK,EAChB8B,EAAM,MAAM,uBAAuB,CAAA,CAEvC,EAEM0sC,EAAgB,SAAY,CAC5B,GAAA,CAEI,KAAA,CACJr3B,EACAkxB,EACAoG,EACA/3B,EACAg4B,CAAA,EACE,MAAM,QAAQ,IAAI,CACpBr5B,GAA4BuG,CAAO,EACnCvC,GAA4BuC,CAAO,EACnChC,GAA0BgC,CAAO,EACjCtG,GAAuBsG,CAAO,EAC9BpH,GAAkB,CAAA,CACnB,EAGKm6B,EAAkBx3B,EAAY,OAAO,CAACy3B,EAAKpjC,KAC/CojC,EAAIpjC,EAAM,QAAQ,YAAa,CAAA,EAAI,CACjC,KAAMA,EAAM,KACZ,OAAQA,EAAM,OACd,KAAMA,EAAM,KACZ,SAAUA,EAAM,UAAY,EAC9B,EACOojC,GACN,EAAE,EAGCC,EAA0B,MAAM,QAAQ,IAAIxG,EAAU,IAAI,MAAMxc,GAAM,CAC1E,IAAIijB,EAAeH,EAAgB9iB,EAAG,aAAa,aAAa,EAEhE,GAAI,CAACijB,EAAc,CACjB,MAAMC,EAAiB,MAAM14B,GAAgBwV,EAAG,YAAY,EACxDkjB,IACaD,EAAA,CACb,KAAMC,EAAe,KACrB,OAAQA,EAAe,OACvB,KAAMA,EAAe,KACrB,SAAUA,EAAe,UAAY,EACvC,EACF,CAGFD,EAAeA,GAAgB,CAC7B,KAAM,gBACN,OAAQ,QACR,SAAU,EACZ,EAEA,MAAME,EAAkBjnB,GAAmB8D,EAAG,OAAQijB,EAAa,QAAQ,EAG3E,IAAIpxB,EAAU,UACV5T,EAAU+hB,EAAG,QAEjB,OAAI/hB,IAAY,KAAO+hB,EAAG,UAAY,WAC1BnO,EAAA,UACA5T,EAAA,KACDA,IAAY,KAAO+hB,EAAG,UAAY,oBACjCnO,EAAA,mBACA5T,EAAA,KACDA,IAAY,MAAQ+hB,EAAG,UAAY,YAClCnO,EAAA,WACA5T,EAAA,MACDA,IAAY,YAAc+hB,EAAG,UAAY,cACxCnO,EAAA,aACA5T,EAAA,YACDA,IAAY,OAAS+hB,EAAG,UAAY,iBACnCnO,EAAA,gBACA5T,EAAA,QACDA,IAAY,UAAY+hB,EAAG,UAAY,aACtCnO,EAAA,UACA5T,EAAA,UAGL,CACL,GAAI+hB,EAAG,gBACP,aAAc,oBACd,UAAWA,EAAG,UACd,MAAOijB,EAAa,KACpB,MAAOjjB,EAAG,OAAS,OACf,QAAQmjB,CAAe,IAAIF,EAAa,MAAM,GAC9C,YAAYE,CAAe,IAAIF,EAAa,MAAM,GACtD,SAAUjjB,EAAG,OAAS,OAClB,MAAMA,EAAG,UAAU,MAAM,EAAG,CAAC,CAAC,MAAMA,EAAG,UAAU,MAAM,EAAE,CAAC,GAC1D,QAAQA,EAAG,YAAY,MAAM,EAAG,CAAC,CAAC,MAAMA,EAAG,YAAY,MAAM,EAAE,CAAC,GACpE,QAASA,EAAG,aACZ,QAAAnO,EACA,QAAA5T,EACA,gBAAiB+hB,EAAG,gBACpB,OAAQmjB,EACR,YAAaF,EAAa,OAC1B,YAAajjB,EAAG,YAChB,UAAWA,EAAG,SAChB,CAAA,CACD,CAAC,EAGIojB,EAA4B93B,EAAY,IAAa3L,GAAA,CAEzD,IAAIkS,EAAU,UACV5T,EAAU0B,EAAM,QAEhB,OAAA1B,IAAY,KAAO0B,EAAM,WAAW,cAAc,SAAS,SAAS,GAC5DkS,EAAA,UACA5T,EAAA,KACDA,IAAY,KACX4T,EAAA,mBACA5T,EAAA,KACDA,IAAY,MACX4T,EAAA,WACA5T,EAAA,MACDA,IAAY,YACX4T,EAAA,aACA5T,EAAA,YACDA,IAAY,WACX4T,EAAA,UACA5T,EAAA,UAGL,CACL,GAAI0B,EAAM,QACV,aAAc,iBACd,UAAWA,EAAM,UACjB,MAAOA,EAAM,KACb,MAAO,WAAWA,EAAM,IAAI,GAC5B,SAAU,iBACV,QAASA,EAAM,QACf,QAAAkS,EACA,QAAA5T,CACF,CAAA,CACD,EAGKolC,MAA2B,IAAI,CACnC,GAAG/3B,EAAY,OAAS2K,EAAE,QAAQ,aAAa,EAC/C,GAAGumB,EAAU,OAASvmB,EAAE,aAAa,YAAa,CAAA,CAAA,CACnD,EAGKqtB,EAAiB,IAAI,IACzBz4B,EAAY,IAAkBxV,GAAA,CAACA,EAAW,gBAAgB,YAAe,EAAAA,CAAU,CAAC,CACtF,EAGMkuC,EAAwBX,EAAe,IAAU5iB,GAAA,CACrD,MAAM3qB,EAAaiuC,EAAe,IAAItjB,EAAG,gBAAgB,aAAa,EAClE,IAAAnO,EAAUxc,GAAY,SAAW,UACjC4I,EAAU5I,GAAY,QAG1B,OAAIA,GAAY,UAAY,KAAO2qB,EAAG,UAAY,KACtCnO,EAAA,UACA5T,EAAA,KACD5I,GAAY,UAAY,KAAO2qB,EAAG,UAAY,KAC7CnO,EAAA,mBACA5T,EAAA,KACD5I,GAAY,UAAY,MAAQ2qB,EAAG,UAAY,MAC9CnO,EAAA,WACA5T,EAAA,MACD5I,GAAY,UAAY,YAAc2qB,EAAG,UAAY,YACpDnO,EAAA,aACA5T,EAAA,YACD5I,GAAY,UAAY,OAAS2qB,EAAG,UAAY,OAC/CnO,EAAA,gBACA5T,EAAA,QACD5I,GAAY,UAAY,UAAY2qB,EAAG,UAAY,YAClDnO,EAAA,UACA5T,EAAA,UAGL,CACL,GAAI,GAAG+hB,EAAG,eAAe,IAAIA,EAAG,OAAO,GACvC,aAAc,eACd,UAAWA,EAAG,UACd,MAAO3qB,GAAY,YAAc,mBACjC,MAAO2qB,EAAG,OAAS,OACf,QAAQ3qB,GAAY,MAAQ,KAAK,KAAK2qB,EAAG,OAAO,GAChD,YAAY3qB,GAAY,MAAQ,KAAK,KAAK2qB,EAAG,OAAO,GACxD,SAAUA,EAAG,OAAS,OAClB,MAAMA,EAAG,UAAU,MAAM,EAAG,CAAC,CAAC,MAAMA,EAAG,UAAU,MAAM,EAAE,CAAC,GAC1D,QAAQA,EAAG,YAAY,MAAM,EAAG,CAAC,CAAC,MAAMA,EAAG,YAAY,MAAM,EAAE,CAAC,GACpE,QAASA,EAAG,gBACZ,QAAAnO,EACA,QAAA5T,EACA,OAAQ5I,GAAY,OACpB,YAAaA,GAAY,YACzB,QAAS2qB,EAAG,QACZ,OAAQA,EAAG,OACX,gBAAiBA,EAAG,eACtB,CAAA,CACD,EAGKwjB,EAAwB34B,EAAY,IAAmBxV,IAAA,CAC3D,GAAIA,EAAW,gBACf,aAAc,eACd,UAAWA,EAAW,UACtB,MAAOA,EAAW,WAClB,MAAO,WAAWA,EAAW,IAAI,GACjC,SAAU,iBACV,QAASA,EAAW,gBACpB,QAASA,EAAW,QACpB,QAASA,EAAW,QACpB,OAAQA,EAAW,MAAA,EACnB,EAGIouC,GAAY,MAAM,QAAQ,IAC9BZ,EAAmB,IAAI,MAAOxtC,IACd,MAAMqU,GAAerU,EAAW,eAAe,GAE1D,OAAe2V,GAAAA,EAAK,eAAe,YAAkB,IAAA+E,EAAQ,YAAY,CAAC,EAC1E,QAAgB/E,GAAA,CAEX,IAAA6G,EAAUxc,EAAW,SAAW,UAChC4I,EAAU5I,EAAW,QAErB4I,IAAY,KAAO4T,IAAY,WACvBA,EAAA,UACA5T,EAAA,KACDA,IAAY,KAAO4T,IAAY,oBAC9BA,EAAA,mBACA5T,EAAA,KACDA,IAAY,MAAQ4T,IAAY,YAC/BA,EAAA,WACA5T,EAAA,MACDA,IAAY,YAAc4T,IAAY,cACrCA,EAAA,aACA5T,EAAA,aACDA,IAAY,UAAY4T,IAAY,aACnCA,EAAA,UACA5T,EAAA,UAIZ,MAAMmM,EAAW,SAASY,EAAK,UAAY,GAAG,EAC9C,OAAIZ,EAAW,EACN,MAAMA,CAAQ,EAAE,OAAO,IAAI,CAAChJ,EAAGrE,KAAW,CAC/C,GAAI,GAAGiO,EAAK,IAAM,GAAG3V,EAAW,eAAe,IAAI2V,EAAK,OAAO,EAAE,IAAIjO,CAAK,GAC1E,aAAc,WACd,UAAWiO,EAAK,UAChB,MAAOA,EAAK,OAAS3V,EAAW,WAChC,MAAO,UAAUA,EAAW,IAAI,KAAK,SAAS2V,EAAK,OAAO,EAAIjO,CAAK,GACnE,SAAU,aAAa,SAASiO,EAAK,OAAO,EAAIjO,CAAK,GACrD,QAAS1H,EAAW,gBACpB,QAAAwc,EACA,QAAA5T,EACA,OAAQ5I,EAAW,OACnB,YAAaA,EAAW,YACxB,gBAAiB2V,EAAK,KACtB,SAAAZ,EACA,QAAS,OAAO,SAASY,EAAK,OAAO,EAAIjO,CAAK,CAAA,EAC9C,EAIG,CAAC,CACN,GAAIiO,EAAK,IAAM,GAAG3V,EAAW,eAAe,IAAI2V,EAAK,OAAO,GAC5D,aAAc,WACd,UAAWA,EAAK,UAChB,MAAOA,EAAK,OAAS3V,EAAW,WAChC,MAAO,UAAUA,EAAW,IAAI,KAAK2V,EAAK,OAAO,GACjD,SAAU,aAAaA,EAAK,OAAO,GACnC,QAAS3V,EAAW,gBACpB,QAAAwc,EACA,QAAA5T,EACA,OAAQ5I,EAAW,OACnB,YAAaA,EAAW,YACxB,gBAAiB2V,EAAK,KACtB,SAAU,EACV,QAASA,EAAK,OAAA,CACf,CAAA,CACF,CACJ,IACA,KAAK,EAGF04B,MAAyB,IAEzBnB,EAAqB,CACzB,GAAGa,EACH,GAAGJ,EACH,GAAGO,EACH,GAAGC,EACH,GAAGC,CAAA,EAGJ,OAAmBjB,GAAA,CACd,GAAA,CAACA,EAAS,gBAAwB,MAAA,GAGtC,MAAMv1B,EAAQu1B,EAAS,eAAiB,WACpC,GAAGA,EAAS,eAAe,IAAIA,EAAS,YAAY,IAAIA,EAAS,OAAO,GACxE,GAAGA,EAAS,eAAe,IAAIA,EAAS,YAAY,GAEpD,OAAAkB,EAAmB,IAAIz2B,CAAK,EACvB,IAGTy2B,EAAmB,IAAIz2B,CAAK,EACrB,GACR,CAAA,EACA,KAAK,CAAC1Q,EAAGC,IAAM,CACR,MAAAsP,EAAQvP,EAAE,qBAAqB,KACnCA,EAAE,UAAU,QAAQ,EACpB,OAAOA,EAAE,WAAc,SACrBA,EAAE,UACF,OAAOA,EAAE,WAAc,SACrB,IAAI,KAAKA,EAAE,SAAS,EAAE,QACtB,EAAA,EAQN,OAPcC,EAAE,qBAAqB,KACnCA,EAAE,UAAU,QAAQ,EACpB,OAAOA,EAAE,WAAc,SACrBA,EAAE,UACF,OAAOA,EAAE,WAAc,SACrB,IAAI,KAAKA,EAAE,SAAS,EAAE,QACtB,EAAA,GACSsP,CAAA,CAChB,EAGei2B,GAAAhyB,EAASxS,GAAO,GAAIglC,CAAkB,EAEtDL,EAAcK,CAAkB,EAChCpuC,EAAW,EAAK,OACF,CACdA,EAAW,EAAK,EAChB8B,EAAM,MAAM,6BAA6B,CAAA,CAE7C,EAEYwsC,EAAA,CAAA,EACX,CAAC1yB,EAASxS,CAAK,CAAC,EAEb,MAAAwxB,EAAeyT,GAAa,CAC1B,MAAAxT,EAAWziB,GAAWi2B,EAAS,KAAK,EAEtC,OAAAA,EAAS,cAAgB,QAEzB3vC,EAAAA,IAAC,MAAI,CAAA,UAAU,4EACb,SAAAA,EAAA,IAAC,QAAA,CACC,IAAKm8B,EACL,UAAU,6BACV,SAAQ,GACR,MAAK,GACL,KAAI,GACJ,YAAW,EAAA,CAAA,EAEf,EAKFn8B,EAAAA,IAAC,MAAI,CAAA,UAAU,4EACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAKm8B,EACL,IAAKwT,EAAS,MACd,UAAU,6BACV,QAAUnoC,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,kBAAA,CACjB,CAAA,EAEJ,CAEJ,EA8BMspC,EAAwB,CAAC9xB,EAAS5T,IAAY,CAElD,GAAIA,EACF,OAAQA,EAAS,CACf,IAAK,KACI,MAAA,mBACT,IAAK,MACI,MAAA,mBACT,IAAK,KACI,MAAA,UACT,IAAK,YACI,MAAA,aACT,IAAK,OACI,MAAA,gBACT,IAAK,UACI,MAAA,UACT,QACS,MAAA,iBAAA,CAKb,OAAQ4T,EAAS,CACf,IAAK,mBACI,MAAA,mBACT,IAAK,WACI,MAAA,mBACT,IAAK,UACI,MAAA,UACT,IAAK,aACI,MAAA,aACT,IAAK,gBACI,MAAA,gBACT,QACS,MAAA,SAAA,CAEb,EAEM+xB,EAAsBpB,GAAa,CAUjC,MAAA9/B,GARgBA,GAChBA,aAAqB,KAAaA,EAClC,OAAOA,GAAc,SAAiB,IAAI,KAAKA,CAAS,EACxDA,GAAW,QAAgB,IAAI,KAAKA,EAAU,QAAU,GAAI,EAC5D,OAAOA,GAAc,SAAiB,IAAI,KAAKA,CAAS,MACjD,MAGkB8/B,EAAS,SAAS,EAC3CqB,EAAgBrB,EAAS,eAAiB,gBAAkBA,EAAS,eAAiB,WACjEA,EAAS,aAGpC,MAAMsB,EAAc,IAAM,CACxB,OAAQtB,EAAS,aAAc,CAC7B,IAAK,iBACI,MAAA,mCACT,IAAK,oBACI,MAAA,+BACT,IAAK,eACI,MAAA,+BACT,IAAK,WACI,MAAA,iCACT,QACS,MAAA,8BAAA,CAEb,EAGMuB,EAAa,IAAM,CACvB,OAAQvB,EAAS,aAAc,CAC7B,IAAK,iBACI,MAAA,iBACT,IAAK,oBACI,MAAA,iBACT,IAAK,eACI,MAAA,iBACT,IAAK,WACI,MAAA,WACT,QACS,MAAA,aAAA,CAEb,EAGE,OAAA3vC,EAAA,IAACsO,EAAO,IAAP,CAEC,SAAU+oB,GACV,WAAY,CACV,MAAO,KACP,WAAY,CAAE,SAAU,EAAI,CAC9B,EACA,UAAU,uJAEV,SAAA7yB,EAAA,KAAC,MAAI,CAAA,UAAU,0BAEb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,SAAU,EAAI,EAE3B,WAAYqhC,CAAQ,CAAA,CACvB,EAGAnrC,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,iBACV,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,GAAK,MAAO,EAAI,EAExC,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CACCwsC,EAAAhxC,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,SAAS,eAAe2vC,EAAS,MAAM,EAAE,EACxD,UAAU,8HAET,SAASA,EAAA,KAAA,CAAA,EAGX3vC,EAAA,IAAA,KAAA,CAAG,UAAU,6DACX,WAAS,MACZ,EAEFA,MAAC,QAAK,UAAW,kCAAkCixC,GAAa,GAC7D,YACH,CAAA,CAAA,EACF,EACAjxC,EAAAA,IAAC,OAAK,CAAA,UAAU,gDACb,SAAAu2B,GAAoB1mB,EAAW,CAAE,UAAW,EAAM,CAAA,CACrD,CAAA,CAAA,EACF,EAEArL,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,2CACb,SAAA2vC,EAAS,SACZ,EAECA,EAAS,SACPnrC,OAAA,OAAA,CAAK,UAAU,2CAA2C,SAAA,CAAA,MACrDssC,EAAsBnB,EAAS,QAASA,EAAS,OAAO,CAAA,EAC9D,EAIDA,EAAS,iBACRnrC,EAAA,KAAC,IAAA,CACC,KAAM2sC,GAAwBxB,EAAS,QAAS,KAAMA,EAAS,eAAe,EAC9E,OAAO,SACP,IAAI,sBACJ,UAAU,0GAEV,SAAA,CAAA3vC,EAAAA,IAAC,QAAK,SAAgB,kBAAA,CAAA,EACtBA,EAAA,IAAC0c,GAAA,CACC,KAAM,GACN,UAAU,sBACV,QAAUlV,GAAM,CACdA,EAAE,eAAe,EACP,UAAA,UAAU,UAAUmoC,EAAS,eAAe,EACtDvsC,EAAM,QAAQ,0BAA0B,CAAA,CAC1C,CAAA,CACF,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAjFKusC,EAAS,EAkFhB,CAEJ,EAEA,OAAKnlC,EA8BDnJ,EAEArB,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,UAAU,6EAEV,SAAA9J,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,mCACV,QAAS,CAAE,MAAO,EAAI,EACtB,QAAS,CAAE,MAAO,CAAE,EACpB,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oFAAqF,CAAA,EACpGA,EAAAA,IAAC,MAAI,CAAA,UAAU,oHAAqH,CAAA,CAAA,EACtI,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,mCAAmC,SAAkB,oBAAA,CAAA,CAAA,CAAA,CAAA,CACvE,CACF,QAKD,MAAI,CAAA,UAAU,wEACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,2CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+DACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,GAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAC5B,UAAU,kDACX,SAAA,kBAAA,CAED,QACCkhC,EAAc,CAAA,CAAA,CAAA,EACjB,EAGAhrC,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAC5B,UAAU,oDAGV,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mDAAoD,CAAA,EACnEA,EAAAA,IAAC,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAqD,CAAA,EACpEA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,sDAAuD,CAAA,EACtEA,EAAAA,IAAC,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAwD,CAAA,EACvEA,EAAAA,IAAC,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,qFAAsF,CAAA,EACrGA,EAAAA,IAAC,MAAI,CAAA,UAAU,sFAAuF,CAAA,EACtGA,EAAAA,IAAC,MAAI,CAAA,UAAU,wFAAyF,CAAA,EACxGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yFAA0F,CAAA,EAGzGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,QAGC,MAAI,CAAA,UAAU,iFACb,SAACxO,MAAA,MAAA,CAAI,UAAU,4DACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU2lB,GACV,QAAQ,SACR,QAAQ,OACR,UAAU,YAET,SAAAyb,EAAmB,OAAS,EAC3BA,EAAmB,IAAgBC,GAAAoB,EAAmBpB,CAAQ,CAAC,EAE/D3vC,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,MAAO,EAAI,EACzB,UAAU,+CACX,SAAA,mBAAA,CAAA,CAED,GAGN,CACF,CAAA,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,QAtIG,MAAI,CAAA,UAAU,0DACb,SAAC9J,EAAA,KAAA,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAxE,EAAA,IAAC,MAAI,CAAA,UAAU,+EACb,SAAAwE,EAAA,KAAC,MAAI,CAAA,UAAU,2BAA2B,KAAK,OAAO,QAAQ,YAAY,OAAO,eAC/E,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,EAAE,oCAAqC,CAAA,EAC5GA,EAAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,EAAE,oBAAqB,CAAA,CAAA,CAAA,CAC9F,CACF,CAAA,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,wDAAwD,SAEtE,sBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,6DAA6D,SAE1E,8IAAA,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS+d,EACT,UAAU,wIAEV,SAAA,CAAAviB,EAAAA,IAAC,OAAI,UAAU,UAAU,KAAK,OAAO,QAAQ,YAAY,OAAO,eAC9D,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,iBAAiB,CACxF,CAAA,EAAM,gBAAA,CAAA,CAAA,CAER,CAAA,CACF,CACF,CAAA,CAgHN,CC34BA,MAAM8uC,GAAiB,IACjBsC,OAAe,IAGfC,GAAgB,CAAC9mC,EAASa,IAAY,CAC1C,MAAMqe,EAAW,GAAGlf,CAAO,IAAIa,CAAO,GAChCse,EAAa0nB,GAAS,IAAI3nB,CAAQ,EAExC,GAAIC,EAAY,CACR,KAAA,CAAE,UAAA7Z,EAAW,KAAAvH,CAAA,EAASohB,EAC5B,GAAI,KAAK,MAAQ7Z,EAAYi/B,GAC3B,eAAQ,IAAI,mBAAmB,EAExBxmC,EAAK,IAAYyQ,IAAA,CACtB,GAAGA,EACH,QAASA,EAAI,UACVA,EAAI,UAAY,SAAW,UAC3BA,EAAI,UAAY,KAAO,WACvBA,EAAI,UAAY,WAAa,aAC7BA,EAAI,UAAY,MAAQ,gBAAkB,UAAA,EAC7C,EAGJq4B,GAAS,OAAO3nB,CAAQ,CAAA,CAI1B,MAAMwlB,EAAa,aAAa,QAAQ,QAAQxlB,CAAQ,EAAE,EAC1D,GAAIwlB,EACE,GAAA,CACF,KAAM,CAAE,UAAAp/B,EAAW,KAAAvH,CAAA,EAAS,KAAK,MAAM2mC,CAAU,EACjD,GAAI,KAAK,MAAQp/B,EAAYi/B,GAC3B,eAAQ,IAAI,gCAAgC,EAErCxmC,EAAK,IAAYyQ,IAAA,CACtB,GAAGA,EACH,QAASA,EAAI,UACVA,EAAI,UAAY,SAAW,UAC3BA,EAAI,UAAY,KAAO,WACvBA,EAAI,UAAY,WAAa,aAC7BA,EAAI,UAAY,MAAQ,gBAAkB,UAAA,EAC7C,EAGS,aAAA,WAAW,QAAQ0Q,CAAQ,EAAE,QACnC7mB,EAAO,CACN,QAAA,MAAM,oCAAqCA,CAAK,CAAA,CAIrD,OAAA,IACT,EAGM0uC,GAAY,CAAC/mC,EAASa,EAASmmC,IAAS,CAC5C,MAAM9nB,EAAW,GAAGlf,CAAO,IAAIa,CAAO,GAChCkgB,EAAY,CAChB,UAAW,KAAK,IAAI,EACpB,KAAMimB,CACR,EAGSH,GAAA,IAAI3nB,EAAU6B,CAAS,EAG5B,GAAA,CACF,aAAa,QAAQ,QAAQ7B,CAAQ,GAAI,KAAK,UAAU6B,CAAS,CAAC,QAC3D1oB,EAAO,CACN,QAAA,MAAM,gCAAiCA,CAAK,CAAA,CAExD,EAGM4uC,GAAsB,MAAOjnC,EAASa,IAAY,CAClD,GAAA,CACE,IAAAmd,EACJ,GAAInd,IAAY,IACJmd,EAAA,0CACDnd,IAAY,KACXmd,EAAA,kDACDnd,IAAY,IACXmd,EAAA,yCACDnd,IAAY,WACXmd,EAAA,8DACDnd,IAAY,MACXmd,EAAA,8CACDnd,IAAY,SACXmd,EAAA,yCAEV,OAAO,CAAC,EAGV,QAAQ,IAAI,iCAAkC,CAAE,QAAAA,EAAS,QAAAhe,EAAS,QAAAa,EAAS,EAI3E,MAAMqmC,GADW,MAAM19B,GAAM,IAAI,GAAGwU,CAAO,qBAAqBhe,CAAO,wCAAwC,GACpF,KAAK,OAAS,CAAC,EAsDnC,OAnDe,MAAM,QAAQ,IAAIknC,EAAU,IAAI,MAAO14B,GAAQ,CAC/D,GAAA,CAaI,MAAA24B,IAXoB,MAAM39B,GAAM,IACpC,GAAGwU,CAAO,kBAAkBxP,EAAI,MAAM,OAAO,aAAc,CACzD,OAAQ,CACN,KAAMA,EAAI,MAAM,KAChB,OAAQxO,EACR,SAAUwO,EAAI,EAAA,CAChB,CAEJ,GAEoC,KAAK,OAAS,CAAC,GAClB,CAAC,EAM5BS,GAHmB,MAAMzF,GAAM,IACnC,GAAGwU,CAAO,kBAAkBxP,EAAI,MAAM,OAAO,cAAcA,EAAI,EAAE,WACnE,GACkC,KAE3B,MAAA,CACL,gBAAiBA,EAAI,MAAM,QAC3B,QAASA,EAAI,GACb,KAAMA,EAAI,MAAM,KAChB,KAAMS,EAAS,MAAQ,GAAGT,EAAI,MAAM,IAAI,KAAKA,EAAI,EAAE,GACnD,OAAQA,EAAI,MAAM,OAClB,eAAgBA,EAAI,MAAM,KAC1B,YAAaS,EAAS,YACtB,MAAOA,EAAS,MAChB,QAAST,EAAI,OAAS,IACtB,QAAA3N,EACA,QAASA,IAAY,IAAM,UACnBA,IAAY,KAAO,WACnBA,IAAY,IAAM,mBAClBA,IAAY,WAAa,aACzBA,IAAY,MAAQ,gBAAkB,UAC9C,SAAUsmC,GAAgB,WAAa,KAAK,IAAI,EAChD,MAAOA,GAAgB,OAAS,IAChC,UAAW,CACT,QAAS,6CACT,KAAM,QAAA,CAEV,QACO9uC,EAAO,CACN,eAAA,MAAM,wBAAyBA,CAAK,EACrC,IAAA,CACT,CACD,CAAC,GAEmB,OAAO,OAAO,QAC5BA,EAAO,CACN,eAAA,MAAM,kCAAmCA,CAAK,EAC/C,CAAC,CAAA,CAEZ,EAGMqxB,GAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,KAAM,CACJ,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMoD,GAAe,CACnB,OAAQ,CACN,QAAS,EACT,EAAG,EACL,EACA,KAAM,CACJ,QAAS,EACT,EAAG,EACH,WAAY,CACV,KAAM,SACN,OAAQ,EAAA,CACV,CAEJ,EAGMwC,GAAe,IACnB75B,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,UAAU,WAEV,SAAA9J,EAAA,KAAC,MAAI,CAAA,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mDAAoD,CAAA,EACnEA,EAAAA,IAAC,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAqD,CAAA,EACpEA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,sDAAuD,CAAA,EACtEA,EAAAA,IAAC,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAwD,CAAA,EACvEA,EAAAA,IAAC,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,qFAAsF,CAAA,EACrGA,EAAAA,IAAC,MAAI,CAAA,UAAU,sFAAuF,CAAA,EACtGA,EAAAA,IAAC,MAAI,CAAA,UAAU,wFAAyF,CAAA,EACxGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yFAA0F,CAAA,EAGzGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,EAGAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,qDAEb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,6DAA8D,CAAA,EAG7EA,EAAAA,IAAC,OAAI,UAAU,6BACb,eAAC,MAAI,CAAA,UAAU,mEAAmE,CACpF,CAAA,EAGAA,EAAAA,IAAC,OAAI,UAAU,8BACb,eAAC,MAAI,CAAA,UAAU,mEAAmE,CACpF,CAAA,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,MAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mEAAoE,CAAA,EACnFA,EAAAA,IAAC,MAAI,CAAA,UAAU,+DAAgE,CAAA,CAAA,EACjF,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,+DAAgE,CAAA,EAC/EA,EAAAA,IAAC,MAAI,CAAA,UAAU,gEAAiE,CAAA,CAAA,EAClF,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,4DAA6D,CAAA,EAC5EA,EAAAA,IAAC,MAAI,CAAA,UAAU,4DAA6D,CAAA,CAAA,CAC9E,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAGF,SAAwB2xC,IAAc,CACpC,KAAM,CAACJ,EAAMK,CAAO,EAAIhyC,EAAAA,SAAS,CAAA,CAAE,EAC7B,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAE,QAASsd,EAAS,YAAA1S,CAAA,EAAgBC,GAAW,EAC/C,CAAE,MAAAC,CAAM,EAAIC,GAAW,EACvB,CAAE,iBAAA4X,CAAiB,EAAIC,GAAgB,EACvC,CAACkV,EAAYC,CAAa,EAAI/3B,EAAAA,SAAS,CAAA,CAAE,EACzC,CAACmW,EAAS0hB,CAAU,EAAI73B,WAAS,CACrC,KAAM,MACN,QAAS,KAAA,CACV,EACKg4B,EAAkBC,SAAO,IAAI,EAG7Bga,EAAetrC,EAAAA,QAAQ,IACpBgrC,EAAK,OAAcx4B,GAAA,CAExB,GAAIhD,EAAQ,OAAS,OAASgD,EAAI,OAAShD,EAAQ,KAAa,MAAA,GAG5D,GAAAA,EAAQ,UAAY,MAAO,CACvB,MAAA+7B,EAAY,SAAS/7B,EAAQ,OAAO,EACnC,OAAAgD,EAAI,UAAY+4B,GACfA,IAAc,UAAY/4B,EAAI,UAAY,WAC1C+4B,IAAc,KAAO/4B,EAAI,UAAY,oBACrC+4B,IAAc,MAAQ/4B,EAAI,UAAY,YACtC+4B,IAAc,KAAO/4B,EAAI,UAAY,WACrC+4B,IAAc,YAAc/4B,EAAI,UAAY,YAAA,CAG/C,MAAA,EAAA,CACR,EACA,CAACw4B,EAAMx7B,CAAO,CAAC,EAuBlBjW,EAAAA,UAAU,IAAM,CACd,MAAMiyC,EAAW,SAAY,CAC3B,GAAI,CAAC70B,EAAS,CACZ00B,EAAQ,CAAA,CAAE,EACVtwC,EAAW,EAAK,EAChB,MAAA,CAGE,GAAA,CAEF,MAAM0wC,EAAaX,GAAcn0B,EAASxS,GAAO,EAAE,EACnD,GAAIsnC,EAAY,CACdJ,EAAQI,CAAU,EAClB1wC,EAAW,EAAK,EAGFwuC,EAAA,EACd,MAAA,CAGF,MAAMA,EAAc,QACbltC,EAAO,CACN,QAAA,MAAM,sBAAuBA,CAAK,EAC1CtB,EAAW,EAAK,CAAA,CAEpB,EAEMwuC,EAAgB,SAAY,CAC5B,GAAA,CAEI,MAAA73B,EAAY,MAAML,GAAasF,CAAO,EAGtC+0B,EAAkB,CACtB,IACA,KACA,IACA,WACA,QACF,EAoBMC,GAjBY,MAAM,QAAQ,IAC9BD,EAAgB,IAAI,MAAO7mC,GAAY,CACjC,GAAA,CACM,eAAA,IAAI,2BAA2BA,CAAO,EAAE,GACnC,MAAMomC,GAAoBt0B,EAAS9R,CAAO,GAC3C,IAAY2N,IAAA,CACtB,GAAGA,EACH,SAAU,GAAGA,EAAI,eAAe,IAAIA,EAAI,OAAO,IAAIA,EAAI,IAAI,IAAI3N,CAAO,EAAA,EACtE,QACKxI,EAAO,CACd,eAAQ,MAAM,iCAAiCwI,CAAO,IAAKxI,CAAK,EACzD,CAAC,CAAA,CAEX,CAAA,CACH,GAG0B,KAAK,EAGzBuvC,EAAmB,IAAI,IAC3BD,EAAQ,IAAWn5B,GAAA,CAAC,GAAGA,EAAI,eAAe,IAAIA,EAAI,OAAO,GAAIA,CAAG,CAAC,CACnE,EAGMq5B,EAAgBn6B,EAAU,IAAWc,GAAA,CACnC,MAAAs5B,EAAiBF,EAAiB,IAAI,GAAGp5B,EAAI,eAAe,IAAIA,EAAI,OAAO,EAAE,EAE5E,MAAA,CACL,GAAGA,EACH,GAAGs5B,EACH,QAASA,GAAgB,SAAWt5B,EAAI,SAAW,IACnD,SAAU,GAAGA,EAAI,eAAe,IAAIA,EAAI,OAAO,IAAIA,EAAI,IAAI,IAAIA,EAAI,SAAWs5B,GAAgB,OAAO,GACrG,QAASt5B,EAAI,SAAWs5B,GAAgB,UACrCt5B,EAAI,UAAY,IAAM,UACtBA,EAAI,UAAY,KAAO,WACvBA,EAAI,UAAY,IAAM,mBACtBA,EAAI,UAAY,WAAa,aAAe,UACjD,CAAA,CACD,EAGKu5B,EAAkB,IAAI,IAC1Br6B,EAAU,IAAWc,GAAA,GAAGA,EAAI,eAAe,IAAIA,EAAI,OAAO,EAAE,CAC9D,EAEMw5B,EAAoBL,EAAQ,OAChCn5B,GAAO,CAACu5B,EAAgB,IAAI,GAAGv5B,EAAI,eAAe,IAAIA,EAAI,OAAO,EAAE,CACrE,EAGMy5B,EAAY,CAAC,GAAGJ,EAAe,GAAGG,CAAiB,EAAE,KAAK,CAAC7oC,EAAGC,IAAM,CACxE,MAAM8oC,EAAQ,IAAI,KAAK/oC,EAAE,UAAY,CAAC,EAEtC,OADc,IAAI,KAAKC,EAAE,UAAY,CAAC,EACvB8oC,CAAA,CAChB,EAGSnB,GAAAp0B,EAASxS,GAAO,GAAI8nC,CAAS,EACvCZ,EAAQY,CAAS,EACjBlxC,EAAW,EAAK,EAGV,MAAAkvC,EAAuB,CAAC,GAAG,IAAI,IACnCgC,EACG,OAAcz5B,GAAAA,EAAI,WAAW,OAAO,EACpC,IAAWA,GAAAA,EAAI,UAAU,QAAQ,YAAa,CAAA,CAAA,CAClD,EAEK25B,EAAQ,CAAC,EACf,MAAM,QAAQ,IACZlC,EAAqB,IAAI,MAAO3kC,GAAiB,CAC3C,GAAA,CACI,MAAAmsB,EAAkB,MAAMtgB,GAA4B7L,CAAY,EAClEmsB,GAAiB,OACb0a,EAAA7mC,CAAY,EAAImsB,EAAgB,YAEjCp1B,EAAO,CACd,QAAQ,MAAM,gCAAgCiJ,CAAY,IAAKjJ,CAAK,CAAA,CAEvE,CAAA,CACH,EAEA+0B,EAAc+a,CAAK,QACZ9vC,EAAO,CACN,QAAA,MAAM,gCAAiCA,CAAK,EACpDtB,EAAW,EAAK,CAAA,CAEpB,EAESywC,EAAA,CAAA,EACR,CAAC70B,EAASxS,CAAK,CAAC,EAGnB5K,EAAAA,UAAU,IAAM,EACU,SAAY,CAClC,UAAWiZ,KAAOw4B,EACZ,GAAAx4B,GAAK,WAAW,SAAW,CAAC2e,EAAW3e,EAAI,UAAU,QAAQ,YAAY,CAAC,EACxE,GAAA,CACF,MAAMif,EAAkB,MAAMtgB,GAA4BqB,EAAI,UAAU,OAAO,EAC3Eif,GAAiB,MACnBL,EAAuBrwB,IAAA,CACrB,GAAGA,EACH,CAACyR,EAAI,UAAU,QAAQ,YAAY,CAAC,EAAGif,EAAgB,IAAA,EACvD,QAEGp1B,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,CAAA,CAIzD,GAEgB,CAAA,EACf,CAAC2uC,CAAI,CAAC,EAEH,MAAAoB,EAAkB,CAAC3f,EAAOja,IAAQ,CAClC,GAAA,CAACia,EAAc,MAAA,IACf,GAAA,CAGF,MAAM4f,EADe75B,GAAK,WAAW,SAAS,YAAY,IACrB,8CAAgDA,EAAI,UAAY,aAG/FxB,EAAW,SAASwB,EAAI,UAAY,GAAG,EAC7C,IAAI85B,EAAkB7f,EAEtB,GAAIzb,EAAW,EAET,GAAA,CAAC,MAAMyb,CAAK,EACd6f,EAAkB,OAAO,OAAO7f,CAAK,EAAIzb,CAAQ,MAC5C,CAEL,MAAMwkB,EAAa/I,EAAM,SAAW,EAAA,QAAQ,KAAM,EAAE,EAChD,GAAA,CACF,MAAM8I,EAAa5vB,GAAkB6vB,EAAY,KAAK,EAChD+W,EAAgBnvB,GAAmBmY,CAAU,EACnD+W,EAAkB,OAAO,OAAOC,CAAa,EAAIv7B,CAAQ,CAAA,MACnD,CACA,MAAAu7B,EAAgBnvB,GAAmBoY,CAAU,EACnD8W,EAAkB,OAAO,OAAOC,CAAa,EAAIv7B,CAAQ,CAAA,CAC3D,CAKJ,GAAIq7B,GACA75B,GAAK,WAAW,OAAS,UACzBA,GAAK,WAAW,OAAS,QACzBA,GAAK,WAAW,OAAS,OAC3B,OAAO,WAAW85B,CAAe,EAAE,eAAe,QAAS,CACzD,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,EAIC,IAAA/W,EACA,GAAA,OAAO+W,GAAoB,SAAU,CACvC,MAAM9W,EAAa8W,EAAgB,QAAQ,KAAM,EAAE,EAC/C,GAAA,CACW/W,EAAA5vB,GAAkB6vB,EAAY,KAAK,CAAA,MAC1C,CACOD,EAAAtc,GAAkBuc,CAAU,CAAA,CAC3C,MAEaD,EAAA,OAAO+W,EAAgB,UAAU,EAG1C,MAAA7W,EAAWrY,GAAmBmY,CAAU,EACxCG,EAAa,WAAWD,CAAQ,EAElC,OAAA,MAAMC,CAAU,EAAU,IAEvBA,EAAW,eAAe,QAAS,CACxC,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,QACMr5B,EAAO,CACN,eAAA,MAAM,0BAA2BA,CAAK,EACvCowB,GAAO,YAAc,GAAA,CAEhC,EAGMiF,EAAiB,IAAM,CAC3B,KAAM,CAACC,EAAqBC,CAAsB,EAAIv4B,EAAAA,SAAS,EAAK,EAC9D,CAACw4B,EAAkBC,CAAmB,EAAIz4B,EAAAA,SAAS,EAAK,EAExD44B,EAAoBC,GAAgB,CACpCb,EAAgB,SAClB,aAAaA,EAAgB,OAAO,EAEtCa,EAAY,EAAI,CAClB,EAEMC,EAAoBD,GAAgB,CACxBb,EAAA,QAAU,WAAW,IAAM,CACzCa,EAAY,EAAK,GAChB,GAAG,CACR,EAEMsa,EAAY,CAChB,IAAKxB,EAAK,OACV,OAAQA,EAAK,UAAcx4B,EAAI,OAAS,QAAQ,EAAE,OAClD,QAASw4B,EAAK,UAAcx4B,EAAI,OAAS,SAAS,EAAE,MACtD,EAEMi6B,EAAe,CACnB,IAAKzB,EAAK,OACV,SAAUA,EAAK,OAAcx4B,GAAAA,EAAI,UAAY,WAAaA,EAAI,UAAY,QAAQ,EAAE,OACpF,IAAKw4B,EAAK,OAAcx4B,GAAAA,EAAI,UAAY,oBAAsBA,EAAI,UAAY,GAAG,EAAE,OACnF,KAAMw4B,EAAK,OAAcx4B,GAAAA,EAAI,UAAY,YAAcA,EAAI,UAAY,IAAI,EAAE,OAC7E,IAAKw4B,EAAK,OAAcx4B,GAAAA,EAAI,UAAY,WAAaA,EAAI,UAAY,GAAG,EAAE,OAC1E,WAAYw4B,EAAK,OAAcx4B,GAAAA,EAAI,UAAY,cAAgBA,EAAI,UAAY,UAAU,EAAE,OAC3F,MAAOw4B,EAAK,OAAcx4B,GAAAA,EAAI,UAAY,iBAAmBA,EAAI,UAAY,KAAK,EAAE,MACtF,EAEM6f,EAAQ,CACZ,CAAE,MAAO,MAAO,MAAO,cAAcma,EAAU,GAAG,GAAI,EACtD,CAAE,MAAO,SAAU,MAAO,WAAWA,EAAU,MAAM,GAAI,EACzD,CAAE,MAAO,UAAW,MAAO,YAAYA,EAAU,OAAO,GAAI,CAC9D,EAYME,EAAiB,CACrB,CAAE,GAAI,MAAO,MAAO,iBAAiBD,EAAa,GAAG,GAAI,EACzD,CAAE,GAAI,WAAY,MAAO,YAAYA,EAAa,QAAQ,CAAC,GAAI,EAC/D,CAAE,GAAI,MAAO,MAAO,qBAAqBA,EAAa,GAAG,CAAC,GAAI,EAC9D,CAAE,GAAI,OAAQ,MAAO,qBAAqBA,EAAa,IAAI,CAAC,GAAI,EAChE,CAAE,GAAI,MAAO,MAAO,YAAYA,EAAa,GAAG,CAAC,GAAI,EACrD,CAAE,GAAI,aAAc,MAAO,eAAeA,EAAa,UAAU,CAAC,GAAI,EACtE,CAAE,GAAI,QAAS,MAAO,kBAAkBA,EAAa,KAAK,CAAC,GAAI,CACjE,EAGE,OAAAxuC,EAAA,KAAC,MAAI,CAAA,UAAU,aAEb,SAAA,CAAAA,EAAA,KAAC,MAAA,CACC,UAAU,WACV,aAAc,IAAMg0B,EAAiBH,CAAmB,EACxD,aAAc,IAAMK,EAAiBL,CAAmB,EAExD,SAAA,CAAA7zB,EAAA,KAAC,SAAA,CACC,KAAK,SACL,UAAU,mQAEV,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAM,WAAM,KAAKojB,GAAKA,EAAE,QAAUrN,EAAQ,IAAI,GAAG,KAAM,CAAA,EACxD/V,EAAA,IAAC,MAAA,CACC,UAAW,8CAA8Co4B,EAAmB,aAAe,EAAE,GAC7F,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAp4B,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EACCo4B,GACCp4B,EAAA,IAAC,MAAA,CACC,UAAU,2HACV,aAAc,IAAM,aAAa43B,EAAgB,OAAO,EACxD,aAAc,IAAMc,EAAiBL,CAAmB,EAEvD,SAAAO,EAAM,IACLzT,GAAAnlB,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM,CACby3B,MAAiB,CAAE,GAAGsB,EAAG,KAAM5T,EAAK,OAAQ,EAC5CkT,EAAoB,EAAK,CAC3B,EACA,UAAW,kJACTtiB,EAAQ,OAASoP,EAAK,MAAQ,iCAAmC,+BACnE,GAEC,SAAKA,EAAA,KAAA,EATDA,EAAK,KAWb,CAAA,CAAA,CAAA,CACH,CAAA,CAEJ,EAGA3gB,EAAA,KAAC,MAAA,CACC,UAAU,WACV,aAAc,IAAMg0B,EAAiBL,CAAsB,EAC3D,aAAc,IAAMO,EAAiBP,CAAsB,EAE3D,SAAA,CAAA3zB,EAAA,KAAC,SAAA,CACC,KAAK,SACL,UAAU,mQAEV,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAM,WAAe,KAAK84B,GAAKA,EAAE,KAAO/iB,EAAQ,OAAO,GAAG,KAAM,CAAA,EACjE/V,EAAA,IAAC,MAAA,CACC,UAAW,8CAA8Ck4B,EAAsB,aAAe,EAAE,GAChG,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAl4B,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EACCk4B,GACCl4B,EAAA,IAAC,MAAA,CACC,UAAU,2HACV,aAAc,IAAM,aAAa43B,EAAgB,OAAO,EACxD,aAAc,IAAMc,EAAiBP,CAAsB,EAE1D,SAAA8a,EAAe,IACdj0B,GAAAhf,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM,CACby3B,MAAiB,CAAE,GAAGsB,EAAG,QAAS/Z,EAAQ,IAAK,EAC/CmZ,EAAuB,EAAK,CAC9B,EACA,UAAW,kJACTpiB,EAAQ,UAAYiJ,EAAQ,GAAK,iCAAmC,+BACtE,GAEC,SAAQA,EAAA,KAAA,EATJA,EAAQ,EAWhB,CAAA,CAAA,CAAA,CACH,CAAA,CAAA,CAEJ,EACF,CAEJ,EAGM2a,EAAsB5gB,GAAQ,CAClC,MAAMlN,EAAekN,GAAK,WAAW,SAAS,YAAY,EAI1D,MAHsB,CAAClN,GAAgBA,IAAiB,6CAIlDkN,GAAK,UAAY,cAAgBA,GAAK,UAAY,iBAC5C,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,UAAU,EAEzDA,GAAK,UAAY,WAAaA,GAAK,UAAY,UACzC,MAAI,CAAA,IAAI,eAAe,IAAI,MAAM,UAAU,UAAU,EAE3DA,GAAK,UAAY,iBAAmBA,GAAK,UAAY,YAC/C,MAAI,CAAA,IAAI,aAAa,IAAI,MAAM,UAAU,UAAU,EAEtD/Y,EAAA,IAACgjB,GAAW,CAAA,UAAU,wBAAyB,CAAA,EAIpDnX,IAAiB,mDACX,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,UAAU,EAIzDA,GAAgB6rB,EAAW7rB,CAAY,EAEvC7L,EAAA,IAAC,MAAA,CACC,IAAK03B,EAAW7rB,CAAY,EAC5B,IAAKkN,EAAI,UAAU,QAAU,QAC7B,UAAU,uBACV,QAAUvR,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,oBAAA,CACjB,CACF,EAKAuR,EAAI,WAAW,OAAS,eAClB,MAAI,CAAA,IAAI,qBAAqB,IAAI,QAAQ,UAAU,uBAAuB,EAG7E/Y,EAAA,IAACgjB,GAAW,CAAA,UAAU,wBAAyB,CAAA,CACxD,EAEMkwB,EAAiBn6B,GAAQ,CAC7B,MAAMojB,EAAWziB,GAAWX,EAAI,OAASA,EAAI,UAAU,EACjDo6B,EAAcp6B,EAAI,MAAM,QAAQ,OAAQ,EAAE,EAG9C,OAAA/Y,EAAA,IAACsO,EAAO,IAAP,CAEC,SAAU+oB,GACV,WAAY,CACV,MAAO,KACP,WAAY,CAAE,SAAU,EAAI,CAC9B,EACA,SAAU,CAAE,MAAO,GAAK,EACxB,UAAU,QAEV,SAAA7yB,EAAA,KAAC,MAAI,CAAA,UAAU,WAEb,SAAA,CAAAA,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,0CACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,MAAO,EAAI,EAEzB,SAAA,CAACtO,EAAAA,IAAA,MAAA,CAAI,UAAU,mDAAoD,CAAA,EACnEA,EAAAA,IAAC,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,CAAA,CACrE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAqD,CAAA,EACpEA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,sDAAuD,CAAA,EACtEA,EAAAA,IAAC,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAwD,CAAA,EACvEA,EAAAA,IAAC,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,qFAAsF,CAAA,EACrGA,EAAAA,IAAC,MAAI,CAAA,UAAU,sFAAuF,CAAA,EACtGA,EAAAA,IAAC,MAAI,CAAA,UAAU,wFAAyF,CAAA,EACxGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yFAA0F,CAAA,EAGzGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,EAGAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,qDAEb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,4CACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,SAAU,EAAI,EAE3B,SAAAyK,EAAI,cAAgB,QACnB/Y,EAAA,IAAC,QAAA,CACC,IAAKm8B,EACL,UAAU,6BACV,SAAQ,GACR,MAAK,GACL,KAAI,GACJ,YAAW,EAAA,CAAA,EAGbn8B,EAAA,IAAC,MAAA,CACC,IAAKm8B,EACL,IAAKgX,EACL,UAAU,6BACV,QAAU3rC,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,kBAAA,CACjB,CAAA,CACF,CAEJ,EAGAhD,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,2BACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,MAAO,EAAI,EAEzB,SAAA,CAAAtO,MAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,MAAI,CAAA,UAAU,sDACb,SAAAA,EAAA,IAAC,KAAG,CAAA,UAAU,qFACX,SAAAmzC,CAAA,CACH,CACF,CAAA,EACF,EAEA3uC,EAAAA,KAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,SAAO,SAAA,CAAA,EACZA,EAAAA,IAAA,OAAA,CAAM,SAAoBu2B,GAAA,IAAI,KAAKxd,EAAI,QAAQ,EAAG,CAAE,UAAW,EAAM,CAAA,CAAE,CAAA,CAAA,EAC1E,EACCA,EAAI,OACFvU,OAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,SAAW,aAAA,CAAA,EACjBwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAAm1B,EAAmB5gB,CAAG,EACvBvU,EAAAA,KAAC,OAAK,CAAA,UAAU,cACb,SAAA,CAAgBmuC,EAAA55B,EAAI,MAAOA,CAAG,EAAE,KAAG,IAAM,CACxC,MAAMlN,EAAekN,GAAK,WAAW,SAAS,YAAY,EACtD,OAAAlN,IAAiB,6CAAqD,OAEpD,CAACA,GAAgBA,IAAiB,6CAElDkN,EAAI,UAAY,cAAgBA,EAAI,UAAY,WAAmB,OACnEA,EAAI,UAAY,WAAaA,EAAI,UAAY,IAAY,MACtD,MAGFA,GAAK,WAAW,OAAS,SAAWA,EAAI,UAAU,OAAS,KACjE,GAAA,CAAA,CACL,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEFvU,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,SAAW,aAAA,CAAA,EACjBA,EAAA,IAAC4E,GAAA,CACC,GAAI,eAAemU,EAAI,MAAM,GAC7B,UAAU,iCAET,SAAIA,EAAA,cAAA,CAAA,CACP,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,CACF,EACF,EAGCA,EAAI,OAAS,WAAaA,EAAI,QAAU,GACtC/Y,EAAAA,IAAA,MAAA,CAAI,UAAU,+BACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,uEAAuE,SAAA,CAAA,IAClFuU,EAAI,OAAA,CAAA,CACR,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EAjJKA,EAAI,QAkJX,CAEJ,EAGA,OAAKvO,EA8BDnJ,QAEC,MAAI,CAAA,UAAU,4CACb,SAACmD,EAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,+FACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAC5B,UAAU,kCAEV,SAAA,CAACtO,EAAAA,IAAA,MAAA,CAAI,UAAU,6DAA8D,CAAA,EAC7EA,EAAAA,IAAC,MAAI,CAAA,UAAU,qDAAsD,CAAA,CAAA,CAAA,CACvE,EAEAA,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EACzB,UAAU,gBAEV,SAAA9J,EAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,6DAA8D,CAAA,EAC7EA,EAAAA,IAAC,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,CAC/E,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,EAECA,EAAAA,IAAA,MAAA,CAAI,UAAU,+DAA+D,MAAO,CACnF,OAAQ,sBACR,eAAgB,OAChB,eAAgB,WAAW,SAAS,gBAAgB,UAAU,SAAS,MAAM,EAAI,UAAY,SAAS,EAEtG,EAAA,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU2lB,GACV,QAAQ,SACR,QAAQ,OACR,UAAU,qFAET,SAAM,MAAA,KAAK,CAAE,OAAQ,GAAI,EAAE,IAAI,CAAC1lB,EAAGrE,IACjClK,EAAAA,IAAA65B,GAAA,CAAA,EAAkB3vB,CAAO,CAC3B,CAAA,CAAA,CAEL,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QAKD,MAAI,CAAA,UAAU,4CACb,SAAC1F,EAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,+FACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAC5B,UAAU,kCAEV,SAAA,CAACtO,EAAA,IAAA,KAAA,CAAG,UAAU,kDAAkD,SAAO,UAAA,EACvEA,EAAAA,IAAC,MAAI,CAAA,UAAU,qDAAsD,CAAA,CAAA,CAAA,CACvE,EAEAA,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EACzB,UAAU,gBAEV,eAAC2pB,EAAe,CAAA,CAAA,CAAA,CAAA,CAClB,CAAA,CACF,CACF,CAAA,EAECj4B,EAAAA,IAAA,MAAA,CAAI,UAAU,+DAA+D,MAAO,CACnF,OAAQ,sBACR,eAAgB,OAChB,eAAgB,WAAW,SAAS,gBAAgB,UAAU,SAAS,MAAM,EAAI,UAAY,SAAS,EAEtG,EAAA,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU2lB,GACV,QAAQ,SACR,QAAQ,OACR,UAAU,qFAET,WAAa,OAAS,EACrB4d,EAAa,IAAIqB,CAAa,EAE9B1uC,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,MAAO,EAAI,EACzB,UAAU,kCAEV,SAAA,CAACtO,EAAA,IAAA,KAAA,CAAG,UAAU,yDAAyD,SAEvE,gBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,mCAAmC,SAEhD,kCAAA,CAAA,CAAA,CAAA,CAAA,CACF,CAAA,CAGN,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QAxIG,MAAI,CAAA,UAAU,0DACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAxE,EAAA,IAAC,MAAI,CAAA,UAAU,+EACb,SAAAwE,EAAA,KAAC,MAAI,CAAA,UAAU,2BAA2B,KAAK,OAAO,QAAQ,YAAY,OAAO,eAC/E,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,EAAE,oCAAqC,CAAA,EAC5GA,EAAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,EAAE,oBAAqB,CAAA,CAAA,CAAA,CAC9F,CACF,CAAA,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,wDAAwD,SAEtE,sBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,6DAA6D,SAE1E,gHAAA,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS+d,EACT,UAAU,wIAEV,SAAA,CAAAviB,EAAAA,IAAC,OAAI,UAAU,UAAU,KAAK,OAAO,QAAQ,YAAY,OAAO,eAC9D,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,iBAAiB,CACxF,CAAA,EAAM,gBAAA,CAAA,CAAA,CAER,CAAA,CACF,CACF,CAAA,CAkHN,CCxhCA,MAAMozC,GAAgB,CACpB,CACE,QAAS,MACT,OAAQ,MACR,KAAM,WACN,SAAU,GACV,KAAM,UACR,EACA,CACE,QAAStqB,GAAkB,KAC3B,OAAQ,OACR,KAAM,mBACN,SAAU,GACV,KAAM,UACR,EACA,CACE,QAASA,GAAkB,KAC3B,OAAQ,OACR,KAAM,WACN,SAAU,EACV,KAAM,WACR,EACA,CACE,QAASA,GAAkB,KAC3B,OAAQ,OACR,KAAM,YACN,SAAU,EACV,KAAM,WAAA,CAEV,EAGMuqB,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBxB,SAASC,GAAS,CAAE,MAAAxmC,EAAO,YAAAi6B,EAAa,SAAAwM,EAAU,WAAAC,GAAc,CAC9D,KAAM,CAACllB,EAASmlB,CAAU,EAAI7zC,EAAAA,SAAS,GAAG,EAE1CE,EAAAA,UAAU,IAAM,EACO,SAAY,CAC3B,GAAA,GAACinC,GAAe,CAACj6B,GAEjB,GAAA,CACF,MAAMlF,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAC3D,IAAIs0B,EAAYznC,EAEZ,GAAAa,EAAM,UAAY,MACP4mC,EAAA,MAAM9rC,EAAS,WAAWm/B,CAAW,EACvC96B,EAAA,OACN,CACC,MAAAR,EAAW,IAAIC,EACnBoB,EAAM,QACN,CAAC,qDAAsD,0CAA0C,EACjGlF,CACF,EAGI,GAAA,CACSqE,EAAA,MAAMR,EAAS,SAAS,CAAA,MAC7B,CACKQ,EAAA,EAAA,CAIb,MAAM3D,EAAOmD,EAAS,UAAU,mBAAmB,YAAa,CAACs7B,CAAW,CAAC,EACvE4M,EAAS,MAAM/rC,EAAS,KAAK,CACjC,GAAIkF,EAAM,QACV,KAAAxE,CAAA,CACD,EACYorC,EAAAE,GAAgBD,CAAM,CAAA,CAGrC,MAAME,EAAY,OAAOxqB,GAAmBqqB,EAAYznC,CAAQ,CAAC,EAC3D6nC,EAAiB,IAAI,KAAK,aAAa,QAAS,CACpD,sBAAuB,EACvB,sBAAuBhnC,EAAM,SAAW,OAAS,EAAI,CAAA,CACtD,EAAE,OAAO+mC,CAAS,EAEnBJ,EAAWK,CAAc,QAClBlxC,EAAO,CACd,QAAQ,MAAM,8BAA8BkK,EAAM,MAAM,IAAKlK,CAAK,EAClE6wC,EAAW,GAAG,CAAA,CAElB,GAEa,CAAA,EACZ,CAAC3mC,EAAOi6B,CAAW,CAAC,EAEvB,MAAMgN,EAAkB,IAAM,CAE5B,MAAMC,EAAcZ,GAAc,QAAUhwB,EAAE,UAAYtW,EAAM,OAAO,EACvE,GAAIknC,EACK,OAAAh0C,MAAC,OAAI,IAAKg0C,EAAY,KAAM,IAAKA,EAAY,OAAQ,UAAU,sBAAuB,CAAA,EAIzF,MAAApa,EAAU9sB,EAAM,OAASA,EAAM,SAAW4M,GAAW5M,EAAM,QAAQ,EAAI,MAC7E,OAAI8sB,EAEA55B,EAAA,IAAC,MAAA,CACC,IAAK45B,EACL,IAAK9sB,EAAM,OACX,UAAU,uBACV,QAAUtF,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,oBAAA,CACjB,CACF,EAMFxH,EAAA,IAAC,MAAA,CACC,IAAI,qBACJ,IAAK8M,EAAM,QAAU,UACrB,UAAU,sBAAA,CACZ,CAEJ,EAGE,OAAAtI,EAAA,KAAC,SAAA,CACC,QAAS,IAAM+uC,EAASzmC,CAAK,EAC7B,UAAW,uHACT0mC,EAAa,0CAA4C,EAC3D,GAEA,SAAA,CAAChvC,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAgBuvC,EAAA,EACjBvvC,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,4CACZ,SAAA8M,EAAM,QAAU,UACnB,QACC,MAAI,CAAA,UAAU,2CACZ,SAAAA,EAAM,MAAQ,eACjB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACC9M,EAAA,IAAA,MAAA,CAAI,UAAU,mDACZ,SACHsuB,CAAA,CAAA,CAAA,CAAA,CACF,CAEJ,CAEA,SAAwB2lB,GAAoB,CAAE,OAAAv4B,EAAQ,QAAAC,EAAS,SAAA43B,EAAU,qBAAAW,GAAwB,CAC/F,KAAM,CAAE,QAASnN,CAAY,EAAIt8B,GAAW,EAC5B+oB,GAAW,EAC3B,KAAM,CAAC2gB,EAAaC,CAAc,EAAIx0C,EAAAA,SAAS,EAAE,EAC3C,CAACy0C,EAAaC,CAAc,EAAI10C,EAAAA,SAAS,IAAI,EAC7C,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,EAAE,EAC/B,CAAC20C,EAAgBC,CAAiB,EAAI50C,EAAAA,SAAS,CAAC,EAChD,CAAC60C,EAAgBC,CAAiB,EAAI90C,EAAAA,SAAS,CAAA,CAAE,EACjD,CAAC+0C,EAAmBC,CAAoB,EAAIh1C,EAAAA,SAAS,CAAA,CAAE,EAG7DE,EAAAA,UAAU,IAAM,EACc,SAAY,CAClC,GAAA,GAAC4b,GAAU,CAACqrB,GAEZ,GAAA,CACFhC,EAAa,EAAI,EACX,MAAA8P,EAAS,MAAMv8B,GAAuB,EACpC,QAAA,IAAI,2BAA4Bu8B,CAAM,EAExC,MAAAC,EAAkBD,EAAO,IAAc/nC,IAAA,CAC3C,QAASA,EAAM,QACf,OAAQA,EAAM,OACd,KAAMA,EAAM,KACZ,SAAUA,EAAM,UAAY,GAC5B,KAAMA,EAAM,KACZ,SAAUA,EAAM,SAChB,YAAaA,EAAM,YACnB,SAAU,EAAA,EACV,EAEF4nC,EAAkBI,CAAe,EAGjC,MAAMltC,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAGrD21B,EAAoB,MAAOjoC,GAAU,CACrC,GAAA,CACE,GAAAA,EAAM,UAAY,MAAO,CAC3B,MAAMwhB,EAAU,MAAM1mB,EAAS,WAAWm/B,CAAW,EAC/CiO,EAAmB3rB,GAAmBiF,EAAS,EAAE,EAChD,MAAA,CACL,GAAGxhB,EACH,iBAAAkoC,CACF,CAAA,CAKE,GADS,MAAMptC,EAAS,QAAQkF,EAAM,OAAO,IACpC,KAAa,OAAA,KAEpB,MAAArB,EAAW,IAAIC,EACnBoB,EAAM,QACN,CACE,qDACA,2CACA,0CACA,uCACF,EACAlF,CACF,EAGM,CAAC0mB,EAASriB,CAAQ,EAAI,MAAM,QAAQ,IAAI,CAC5CR,EAAS,UAAUs7B,CAAW,EAC9Bt7B,EAAS,SAAA,EAAW,MAAM,IAAM,EAAE,CAAA,CACnC,EAGKupC,EAAmB3rB,GAAmBiF,EAASriB,CAAQ,EAGtD,MAAA,CACL,GAAGa,EACH,iBAAAkoC,CACF,QACOpyC,EAAO,CACd,eAAQ,MAAM,wBAAwBkK,EAAM,MAAM,IAAKlK,CAAK,EACrD,CACL,GAAGkK,EACH,iBAAkB,GACpB,CAAA,CAEJ,EAMMmoC,GAJqB,MAAM,QAAQ,IACvC,CAAC,GAAG7B,GAAe,GAAG0B,CAAe,EAAE,IAAIC,CAAiB,CAC9D,GAEuC,OAAOjoC,GAASA,IAAU,IAAI,EAC7D,QAAA,IAAI,4BAA6BmoC,CAAW,EACpDL,EAAqBK,CAAW,QACzBryC,EAAO,CACN,QAAA,MAAM,kCAAmCA,CAAK,CAAA,QACtD,CACAmiC,EAAa,EAAK,CAAA,CAEtB,GAEoB,CAAA,EACnB,CAACrpB,EAAQqrB,CAAW,CAAC,EAGxBjnC,EAAAA,UAAU,IAAM,CACV4b,IACF04B,EAAe,EAAE,EACjBE,EAAe,IAAI,EACnBjX,EAAS,EAAE,EACOmX,EAAAltC,GAAQA,EAAO,CAAC,EACpC,EACC,CAACoU,CAAM,CAAC,EAGX5b,EAAAA,UAAU,IAAM,CAiFR,MAAAo1C,EAAY,WAhFQ,SAAY,CAEpC,GAAI,CAACf,GAAeA,EAAY,OAAS,GAAI,CAC3CG,EAAe,IAAI,EACnBjX,EAAS,EAAE,EACX,MAAA,CAIF,GAAI,CAAC7xB,GAAiB2oC,CAAW,EAAG,CAClCG,EAAe,IAAI,EACfH,EAAY,WAAW,IAAI,GAC7B9W,EAAS,uBAAuB,EAElC,MAAA,CAGF0H,EAAa,EAAI,EACjB1H,EAAS,EAAE,EAEP,GAAA,CAEI,MAAArF,EAAkB,MAAMtgB,GAA4By8B,CAAW,EAErE,GAAInc,EAAiB,CACX,QAAA,IAAI,kCAAmCA,CAAe,EAC/Csc,EAAA,CACb,QAASH,EACT,OAAQnc,EAAgB,OACxB,KAAMA,EAAgB,KACtB,SAAUA,EAAgB,UAAY,GACtC,KAAMA,EAAgB,KACtB,SAAUA,EAAgB,SAC1B,YAAaA,EAAgB,YAC7B,SAAU,EAAA,CACX,EACDqF,EAAS,EAAE,EACX0H,EAAa,EAAK,EAClB,MAAA,CAIF,MAAMn9B,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDiP,EAAgB,IAAI3iB,EACxByoC,EACA,CACE,0CACA,wCACA,0CACF,EACAvsC,CACF,EAEM,CAACiO,EAAQsa,EAAMlkB,CAAQ,EAAI,MAAM,QAAQ,IAAI,CACjDoiB,EAAc,OAAO,EACrBA,EAAc,KAAK,EACnBA,EAAc,SAAS,CAAA,CACxB,EAEcimB,EAAA,CACb,QAASH,EACT,OAAAt+B,EACA,KAAAsa,EACA,SAAAlkB,EACA,KAAM,KACN,SAAU,KACV,YAAa,KACb,SAAU,EAAA,CACX,EACDoxB,EAAS,EAAE,QACJz6B,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EAC3Cy6B,EAAS,0EAA0E,EACnFiX,EAAe,IAAI,CAAA,QACnB,CACAvP,EAAa,EAAK,CAAA,CAEtB,EAGgD,GAAG,EAC5C,MAAA,IAAM,aAAamQ,CAAS,CAAA,EAClC,CAACf,CAAW,CAAC,EAGV,MAAAgB,EAAiB5uC,EAAAA,QAAQ,IAAM,CAC7B,MAAA6uC,EAAcjB,EAAY,YAAY,EAC5C,OAAOQ,EAAkB,OAAO7nC,GAC9BA,EAAM,QAAQ,cAAc,SAASsoC,CAAW,GAChDtoC,EAAM,MAAM,cAAc,SAASsoC,CAAW,GAC9CtoC,EAAM,SAAS,YAAY,EAAE,SAASsoC,CAAW,CACnD,CAAA,EACC,CAACjB,EAAaQ,CAAiB,CAAC,EAE7BU,EAAoB,MAAOvoC,GAAU,CACrC,GAAA,CACE,IAAAwoC,EACA,GAAAxoC,EAAM,SAAW,MACNwoC,EAAA,CACX,GAAGxoC,EACH,QAASgc,GAAkB,IAC7B,MACK,CAEL,MAAMkP,EAAkB,MAAMtgB,GAA4B5K,EAAM,OAAO,EACnEkrB,EACWsd,EAAA,CACX,GAAGxoC,EACH,OAAQA,EAAM,QAAUkrB,EAAgB,OACxC,KAAMlrB,EAAM,MAAQkrB,EAAgB,KACpC,SAAUlrB,EAAM,UAAYkrB,EAAgB,UAAY,GACxD,KAAMlrB,EAAM,MAAQkrB,EAAgB,KACpC,SAAUlrB,EAAM,UAAYkrB,EAAgB,SAC5C,YAAalrB,EAAM,aAAekrB,EAAgB,YAClD,SAAU,EACZ,EAGasd,EAAA,CACX,GAAGxoC,EACH,SAAUA,EAAM,UAAY,GAC5B,SAAU,EACZ,CACF,CAGFymC,EAAS+B,CAAU,EACX35B,EAAA,QACD/Y,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAClDy6B,EAAS,mCAAmC,CAAA,CAEhD,EAkEA,cACGhhB,GAAO,CAAA,KAAMX,EAAQ,QAAAC,EAAkB,UAAU,gBAChD,SAAA,CAAA3b,EAAAA,IAAC,SAAO,SAAgBqzC,EAAA,CAAA,EACvBrzC,EAAA,IAAA,MAAA,CAAI,UAAU,6CAA6C,cAAY,OAAO,EAE/EA,EAAAA,IAAC,OAAI,UAAU,qDACb,gBAACqc,GAAO,MAAP,CAAa,UAAU,mHACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CAAa,UAAU,yDAAyD,SAEjF,eAAA,EAGA7X,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,uEACb,eAACu1C,GAAS,CAAA,UAAU,gBAAgB,CACtC,CAAA,EACAv1C,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOm0C,EACP,SAAW3sC,GAAM4sC,EAAe5sC,EAAE,OAAO,KAAK,EAC9C,YAAY,kCACZ,UAAU,2NAAA,CACZ,EACC5E,GACC5C,EAAA,IAAC,IAAE,CAAA,UAAU,4BAA6B,SAAM4C,CAAA,CAAA,CAAA,EAEpD,EAGC5C,MAAA,MAAA,CAAI,UAAU,yDACZ,WACEA,EAAA,IAAA,MAAA,CAAI,UAAU,wCACb,eAAC,MAAI,CAAA,UAAU,+DAAgE,CAAA,CACjF,CAAA,EAIEwE,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,4DAA4D,SAE1E,cAAA,QACC,MAAI,CAAA,UAAU,YACZ,SAAem1C,EAAA,IAAKroC,GACnB9M,EAAA,IAACszC,GAAA,CAEC,MAAAxmC,EACA,YAAAi6B,EACA,SAAUsO,EACV,WAAYnB,KAA0BpnC,EAAM,SAAW,MAAQgc,GAAkB,KAAOhc,EAAM,QAAA,EAJzF,GAAGA,EAAM,OAAO,IAAIynC,CAAc,EAAA,CAM1C,CACH,CAAA,CAAA,EACF,EAGCF,GAAe,CAACzxC,GACd4B,EAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,4DAA4D,SAE1E,eAAA,EACAA,EAAA,IAACszC,GAAA,CACC,MAAOe,EACP,YAAAtN,EACA,SAAUsO,EACV,WAAYnB,IAAyBG,EAAY,OAAA,CAAA,CACnD,EACF,EAIDc,EAAe,SAAW,GAAK,CAACd,GAAe,CAACzxC,GAC9C5C,MAAA,MAAA,CAAI,UAAU,oDAAoD,SAEnE,8BAAA,CAAA,CAAA,CAAA,CAEJ,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ,CCvjBO,MAAMirB,GAAY,CAEvB,CACE,SAAY,GACZ,OAAU,CAAE,EACZ,KAAQ,OACR,QAAW,CAAC,CAAE,KAAQ,GAAI,KAAQ,QAAQ,CAAE,EAC5C,KAAQ,UACT,EACD,CACE,SAAY,GACZ,OAAU,CAAE,EACZ,KAAQ,SACR,QAAW,CAAC,CAAE,KAAQ,GAAI,KAAQ,QAAQ,CAAE,EAC5C,KAAQ,UACT,EACD,CACE,SAAY,GACZ,OAAU,CAAE,EACZ,KAAQ,WACR,QAAW,CAAC,CAAE,KAAQ,GAAI,KAAQ,OAAO,CAAE,EAC3C,KAAQ,UACT,EACD,CACE,SAAY,GACZ,OAAU,CAAE,EACZ,KAAQ,cACR,QAAW,CAAC,CAAE,KAAQ,GAAI,KAAQ,SAAS,CAAE,EAC7C,KAAQ,UACT,EACD,CACE,SAAY,GACZ,OAAU,CAAC,CAAE,KAAQ,SAAU,KAAQ,SAAS,CAAE,EAClD,KAAQ,YACR,QAAW,CAAC,CAAE,KAAQ,UAAW,KAAQ,SAAS,CAAE,EACpD,KAAQ,UACT,EACD,CACE,SAAY,GACZ,OAAU,CACR,CAAE,KAAQ,SAAU,KAAQ,SAAW,EACvC,CAAE,KAAQ,WAAY,KAAQ,SAAS,CACxC,EACD,KAAQ,YACR,QAAW,CAAC,CAAE,KAAQ,GAAI,KAAQ,SAAS,CAAE,EAC7C,KAAQ,UACT,EAED,CACE,SAAY,GACZ,OAAU,CACR,CAAE,KAAQ,MAAO,KAAQ,SAAW,EACpC,CAAE,KAAQ,SAAU,KAAQ,SAAS,CACtC,EACD,KAAQ,WACR,QAAW,CAAC,CAAE,KAAQ,GAAI,KAAQ,MAAM,CAAE,EAC1C,KAAQ,UACT,EACD,CACE,SAAY,GACZ,OAAU,CACR,CAAE,KAAQ,WAAY,KAAQ,SAAW,EACzC,CAAE,KAAQ,SAAU,KAAQ,SAAS,CACtC,EACD,KAAQ,UACR,QAAW,CAAC,CAAE,KAAQ,GAAI,KAAQ,MAAM,CAAE,EAC1C,KAAQ,UACT,EACD,CACE,SAAY,GACZ,OAAU,CACR,CAAE,KAAQ,QAAS,KAAQ,SAAW,EACtC,CAAE,KAAQ,MAAO,KAAQ,SAAW,EACpC,CAAE,KAAQ,SAAU,KAAQ,SAAS,CACtC,EACD,KAAQ,eACR,QAAW,CAAC,CAAE,KAAQ,GAAI,KAAQ,MAAM,CAAE,EAC1C,KAAQ,UACT,EAED,CACE,UAAa,GACb,OAAU,CACR,CAAE,QAAW,GAAM,KAAQ,QAAS,KAAQ,SAAW,EACvD,CAAE,QAAW,GAAM,KAAQ,UAAW,KAAQ,SAAW,EACzD,CAAE,QAAW,GAAO,KAAQ,QAAS,KAAQ,SAAS,CACvD,EACD,KAAQ,WACR,KAAQ,OACT,EACD,CACE,UAAa,GACb,OAAU,CACR,CAAE,QAAW,GAAM,KAAQ,OAAQ,KAAQ,SAAW,EACtD,CAAE,QAAW,GAAM,KAAQ,KAAM,KAAQ,SAAW,EACpD,CAAE,QAAW,GAAO,KAAQ,QAAS,KAAQ,SAAS,CACvD,EACD,KAAQ,WACR,KAAQ,OACZ,CACA,EC1FA,SAAwBuqB,IAAY,CAC5B,KAAA,CAAE,QAAAjrC,CAAQ,EAAIE,GAAW,EACzBgqB,EAAUjB,GAAW,EAGrB,CAACiiB,EAAWC,CAAY,EAAI91C,EAAAA,SAAS,IAAI,EACzC,CAAC+1C,EAASC,CAAU,EAAIh2C,EAAAA,SAAS,IAAI,EACrC,CAACi2C,EAAYC,CAAa,EAAIl2C,EAAAA,SAAS,EAAE,EACzC,CAACm2C,EAAUC,CAAW,EAAIp2C,EAAAA,SAAS,EAAE,EACrC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACq2C,EAAOC,CAAQ,EAAIt2C,EAAAA,SAAS,IAAI,EACjC,CAACu2C,EAAoBC,CAAqB,EAAIx2C,EAAAA,SAAS,EAAK,EAC5D,CAACy2C,EAAkBC,CAAmB,EAAI12C,EAAAA,SAAS,EAAK,EACxD,CAAC22C,EAAkBC,CAAmB,EAAI52C,EAAAA,SAAS,GAAG,EACtD,CAAC62C,EAAgBC,CAAiB,EAAI92C,EAAAA,SAAS,GAAG,EAClD,CAAC+2C,EAAUC,CAAW,EAAIh3C,EAAAA,SAAS,CAAG,EACtC,CAACi3C,EAAgBC,CAAiB,EAAIl3C,EAAAA,SAAS,EAAE,EACjD,CAACm3C,EAAoBC,CAAqB,EAAIp3C,EAAAA,SAAS,EAAK,EAC5D,CAAC20C,EAAgBC,CAAiB,EAAI50C,EAAAA,SAAS,CAAC,EAChD,CAACq3C,EAAiBC,CAAkB,EAAIt3C,EAAAA,SAAS,EAAK,EACtD,CAACu3C,EAAcC,CAAe,EAAIx3C,EAAAA,SAAS,IAAI,EAC/C,CAACy3C,EAAaC,CAAc,EAAI13C,EAAAA,SAAS,IAAI,EAC7C,CAAC23C,EAAcC,CAAe,EAAI53C,EAAAA,SAAS,IAAI,EAG/C63C,EAAwBvc,EAAAA,YAAY,IAAM,CAC9C,GAAI,CAAC2a,GAAc,CAACE,GAAY,CAACN,GAAa,CAACE,EAAS,CACtDyB,EAAgB,IAAI,EACpBI,EAAgB,IAAI,EACpB,MAAA,CAGE,GAAA,CAEI,MAAAE,EAAoB,OAAO7B,CAAU,EAErC8B,EADkB,OAAO5B,CAAQ,EACR2B,EAGzBh5B,EAAMg5B,EAAoB,KAEhCN,EAAgB14B,CAAG,EACnB84B,EAAgBG,CAAI,EAGpBL,EAAe,YAAY,QACpB10C,EAAO,CACN,QAAA,MAAM,mCAAoCA,CAAK,CAAA,GAExD,CAACizC,EAAYE,EAAUN,EAAWE,CAAO,CAAC,EAG7C71C,EAAAA,UAAU,IAAM,CACQ23C,EAAA,CACrB,EAAA,CAACA,EAAuB5B,EAAYE,CAAQ,CAAC,EAGhDj2C,EAAAA,UAAU,IAAM,CACd,eAAe83C,GAAW,CACpB,GAAA,CAACnjB,GAAW,CAACghB,GAAa,CAACE,GAAW,CAACE,GAAcA,IAAe,IAAK,CAC3EG,EAAY,EAAE,EACdE,EAAS,IAAI,EACb,MAAA,CAGE,GAAA,CACF,MAAM7qB,EAAW,MAAMoJ,EAAQ,YAAYghB,EAAU,QAASE,EAAQ,OAAO,EAGzE,GAFI,QAAA,IAAI,aAActqB,CAAQ,EAE9B,CAACA,GAAU,OAAQ,CACrB,QAAQ,IAAI,wCAAwC,EACpD2qB,EAAY,EAAE,EACdE,EAAS,0BAA0B,EACnC,MAAA,CAGF,MAAM/nB,EAAWjiB,GAAkB2pC,EAAYJ,EAAU,QAAQ,EAC3D1xC,EAAO,CAAC0xC,EAAU,QAASE,EAAQ,OAAO,EAC1CkC,EAAY,MAAMpjB,EAAQ,aAAatG,EAAUpqB,CAAI,EACrDusC,GAAkBjnB,GAAmBwuB,EAAWlC,EAAQ,QAAQ,EACtEK,EAAY1F,EAAe,EAE3B4F,EAAS,GAAGT,EAAU,MAAM,MAAME,EAAQ,MAAM,EAAE,QAC3C/yC,EAAO,CACN,QAAA,MAAM,qBAAsBA,CAAK,EACzCozC,EAAY,EAAE,EACLE,EAAA,WAAatzC,EAAM,QAAU,sBAAsB,CAAA,CAC9D,CAGOg1C,EAAA,GACR,CAACnjB,EAASghB,EAAWE,EAASE,CAAU,CAAC,EA8D5C,MAAMiC,EAAiB,SAAY,CACjC,GAAI,GAACvtC,GAAW,CAACkrC,GAAa,CAACE,GAE3B,GAAA,CACF,MAAM/tC,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAGvD,GAAAq2B,EAAU,SAAW,MAAO,CAC9B,MAAMsC,EAAa,MAAMnwC,EAAS,WAAW2C,CAAO,EAChCisC,EAAA7yB,GAAmBo0B,CAAU,CAAC,CAAA,KAC7C,CAEL,MAAMrZ,EAAc,MADM,IAAIhzB,EAAgB+pC,EAAU,QAASxqB,GAAWrjB,CAAQ,EACxC,UAAU2C,CAAO,EAC7DisC,EAAoBntB,GAAmBqV,EAAa+W,EAAU,QAAQ,CAAC,CAAA,CAGrE,GAAAE,EAAQ,SAAW,MAAO,CAC5B,MAAMoC,EAAa,MAAMnwC,EAAS,WAAW2C,CAAO,EAClCmsC,EAAA/yB,GAAmBo0B,CAAU,CAAC,CAAA,KAC3C,CAEL,MAAMpZ,EAAY,MADM,IAAIjzB,EAAgBiqC,EAAQ,QAAS1qB,GAAWrjB,CAAQ,EACxC,UAAU2C,CAAO,EACzDmsC,EAAkBrtB,GAAmBsV,EAAWgX,EAAQ,QAAQ,CAAC,CAAA,QAE5D/yC,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,CAAA,CAEnD,EAGA9C,EAAAA,UAAU,IAAM,CACCg4C,EAAA,GACd,CAACvtC,EAASkrC,EAAWE,EAASpB,CAAc,CAAC,EAGhD,MAAMyD,EAAa,SAAY,CAC7B,GAAI,CAACztC,EAAS,CACZnH,EAAM,MAAM,4BAA4B,EACxC,MAAA,CAGF,GAAI,CAACqyC,GAAa,CAACE,GAAW,CAACE,EAAY,CACzCzyC,EAAM,MAAM,2BAA2B,EACvC,MAAA,CAGF9B,EAAW,EAAI,EACX,GAAA,CAEI,MAAA6d,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAGlC+O,EAAWjiB,GAAkB2pC,EAAYJ,EAAU,QAAQ,EAG3DwC,EAAkB/rC,GAAkB6pC,EAAUJ,EAAQ,QAAQ,EAG9DuC,EAAqB,OAAO,KAAK,OAAO,IAAMvB,GAAY,GAAG,CAAC,EAC9DvoB,GAAgB6pB,EAAkBC,EAAsB,OAExDn0C,GAAO,CAAC0xC,EAAU,QAASE,EAAQ,OAAO,EAC1C/nB,EAAW,OAAO,KAAK,MAAM,KAAK,MAAQ,GAAI,EAAI,GAAK,EAAE,EAGzDrB,GAAS,IAAI7gB,EACjBod,GAAkB,OAClB,CACE,mKACA,yJACA,+JACF,EACA3J,CACF,EAEA,QAAQ,IAAI,mBAAoB,CAC9B,SAAUgP,EAAS,SAAS,EAC5B,aAAcC,GAAa,SAAS,EACpC,KAAArqB,GACA,GAAIwG,EACJ,SAAUqjB,EAAS,SAAS,CAAA,CAC7B,EAEG,IAAAT,GACA,GAAAsoB,EAAU,SAAW,MACvBtoB,GAAK,MAAMZ,GAAO,sBAChB6B,GACArqB,GACAwG,EACAqjB,EACA,CAAE,MAAOO,EAAU,SAAU,GAAO,CACtC,UACSwnB,EAAQ,SAAW,MAC5BxoB,GAAK,MAAMZ,GAAO,sBAChB4B,EACAC,GACArqB,GACAwG,EACAqjB,EACA,CAAE,SAAU,GAAO,CACrB,MACK,CAGD,GAAA6nB,EAAU,SAAW,MAAO,CACxB,MAAApnB,GAAgB,IAAI3iB,EACxB+pC,EAAU,QACV,CACE,4EACA,oFACF,EACAt2B,CACF,EAEkB,MAAMkP,GAAc,UAAU9jB,EAASue,GAAkB,MAAM,EACjEqF,IACd,QAAQ,IAAI,qBAAqB,EAEjC,MADkB,MAAME,GAAc,QAAQvF,GAAkB,OAAQqF,CAAQ,GAChE,KAAK,EACrB,QAAQ,IAAI,iBAAiB,EAC/B,CAGFhB,GAAK,MAAMZ,GAAO,yBAChB4B,EACAC,GACArqB,GACAwG,EACAqjB,EACA,CAAE,SAAU,GAAO,CACrB,CAAA,CAGM,QAAA,IAAI,yBAA0BT,GAAG,IAAI,EACvC,MAAAzN,GAAU,MAAMyN,GAAG,KAAK,EACtB,QAAA,IAAI,gBAAiBzN,EAAO,EAGpC,MAAMo4B,EAAe,EAErB10C,EAAM,QAAQ,kBAAkB,EAChC0yC,EAAc,EAAE,EAChBE,EAAY,EAAE,EAGIxB,EAAAltC,IAAQA,GAAO,CAAC,QAC3B1E,EAAO,CACN,QAAA,MAAM,cAAeA,CAAK,EAG9BA,EAAM,QAAQ,SAAS,cAAc,EACvCQ,EAAM,MAAM,+BAA+B,EAClCR,EAAM,QAAQ,SAAS,4BAA4B,EAC5DQ,EAAM,MAAM,6CAA6C,EAChDR,EAAM,QAAQ,SAAS,wBAAwB,EACxDQ,EAAM,MAAM,uCAAuC,EAC1CR,EAAM,QAAQ,SAAS,eAAe,EAC/CQ,EAAM,MAAM,sBAAsB,EAE5BA,EAAA,MAAMR,EAAM,QAAU,uBAAuB,CACrD,QACA,CACAtB,EAAW,EAAK,CAAA,CAEpB,EAEM62C,EAAwB,MAAOrrC,GAAU,CACzC,GAAAA,EAAM,SAAW,MAEN4oC,EAAA,CACX,GAAG5oC,EACH,QAASgc,GAAkB,KAC3B,SAAU,EAAA,CACX,MACI,CAEL,MAAMsvB,EAAY,MAAM3jB,EAAQ,aAAa3nB,EAAM,OAAO,EAC7C4oC,EAAA,CACX,GAAG5oC,EACH,GAAGsrC,EACH,KAAMtrC,EAAM,MAAQsrC,EAAU,KAC9B,OAAQtrC,EAAM,QAAUsrC,EAAU,OAClC,KAAMtrC,EAAM,MAAQsrC,EAAU,KAC9B,SAAUtrC,EAAM,UAAYsrC,EAAU,QAAA,CACvC,CAAA,CAEHhC,EAAsB,EAAK,CAC7B,EAEMiC,GAAsB,MAAOvrC,GAAU,CACvC,GAAAA,EAAM,SAAW,MAER8oC,EAAA,CACT,GAAG9oC,EACH,QAASgc,GAAkB,KAC3B,SAAU,EAAA,CACX,MACI,CAEL,MAAMsvB,EAAY,MAAM3jB,EAAQ,aAAa3nB,EAAM,OAAO,EAC/C8oC,EAAA,CACT,GAAG9oC,EACH,GAAGsrC,EACH,KAAMtrC,EAAM,MAAQsrC,EAAU,KAC9B,OAAQtrC,EAAM,QAAUsrC,EAAU,OAClC,KAAMtrC,EAAM,MAAQsrC,EAAU,KAC9B,SAAUtrC,EAAM,UAAYsrC,EAAU,QAAA,CACvC,CAAA,CAEH9B,EAAoB,EAAK,CAC3B,EAGAx2C,EAAAA,UAAU,IAAM,CACd,eAAew4C,GAAkB,CAC3B,GAAA,GAAC7C,GAAa,CAACE,GAEf,GAAA,CAEI,MAAA3sB,EAAgBysB,EAAU,QAAQ,YAAY,EAC9CxsB,EAAgB0sB,EAAQ,QAAQ,YAAY,EAG5C7hC,EAAW,MAAMC,GAAM,IAC3B,mFAAmFiV,CAAa,IAAIC,CAAa,oBACnH,EAGA,IAAIoB,EAAcvW,EAAS,KAAKkV,CAAa,GAAG,IAC5CwI,GAAc1d,EAAS,KAAKmV,CAAa,GAAG,IAY5C,GATAwsB,EAAU,QAAQ,YAAA,IAAkB3sB,GAAkB,KAAK,gBAE/CuB,GADM,MAAMtW,GAAM,IAAI,8EAA8E,GACxF,KAAK,SAAS,KAEtC4hC,EAAQ,QAAQ,YAAA,IAAkB7sB,GAAkB,KAAK,gBAE7C0I,IADM,MAAMzd,GAAM,IAAI,8EAA8E,GACxF,KAAK,SAAS,KAGtC,CAACsW,GAAe,CAACmH,GAAa,CAChC,QAAQ,IAAI,mCAAmC,EAC/C,MAAA,CAGF,MAAM+mB,GAAQluB,EAAcmH,GACpB,QAAA,IAAI,eAAgB+mB,EAAK,EAEjC,qBAA8BjxC,IAAA,CAC5B,GAAGA,EACH,WAAYixC,EAAA,EACZ,QACK31C,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7C,qBAA8B0E,IAAA,CAC5B,GAAGA,EACH,MAAO,8BAAA,EACP,CAAA,CACJ,CAGE2uC,IAAU,4BACIqC,EAAA,CAEjB,EAAA,CAAC7C,EAAWE,EAASM,CAAK,CAAC,EA0K9Bn2C,EAAAA,UAAU,IAAM,CACVy0C,EAAiB,GAEJuD,EAAA,CAEjB,EACC,CAACvD,CAAc,CAAC,EAGnB,MAAMiE,GAAe,CAAC,CAAE,MAAA1rC,KAAY,CAClC,KAAM,CAAE,QAAAvC,CAAQ,EAAIE,GAAW,EACzB,CAAC6jB,EAASmlB,CAAU,EAAI7vC,GAAM,SAAS,IAAI,EAC3C,CAACkhC,EAAWC,EAAY,EAAInhC,GAAM,SAAS,EAAI,EAC/C,CAAChB,GAAOy6B,CAAQ,EAAIz5B,GAAM,SAAS,IAAI,EAsD7C,GApDAA,GAAM,UAAU,IAAM,EACC,SAAY,CAC3B,GAAA,GAAC2G,GAAW,CAACuC,GAEb,GAAA,CACFi4B,GAAa,EAAI,EACjB1H,EAAS,IAAI,EACb,MAAMz1B,GAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAEvD,IAAAs0B,GACAznC,GAEA,GAAAa,EAAM,SAAW,MACN4mC,GAAA,MAAM9rC,GAAS,WAAW2C,CAAO,EACnC0B,GAAA,OACN,CACC,MAAAR,GAAW,IAAIC,EACnBoB,EAAM,QACN,CACE,qDACA,0CACF,EACAlF,EACF,EAEA,CAAC8rC,GAAYznC,EAAQ,EAAI,MAAM,QAAQ,IAAI,CACzCR,GAAS,UAAUlB,CAAO,EAC1BkB,GAAS,SAAS,CAAA,CACnB,CAAA,CAGH,QAAQ,IAAI,eAAeqB,EAAM,MAAM,IAAK,CAC1C,IAAK4mC,GAAW,SAAS,EACzB,SAAAznC,GACA,UAAWod,GAAmBqqB,GAAYznC,EAAQ,CAAA,CACnD,EAEUwnC,EAAA,CACT,MAAOC,GACP,SAAAznC,EAAA,CACD,QACMwsC,GAAK,CACJ,QAAA,MAAM,0BAA2BA,EAAG,EAC5Cpb,EAASob,GAAI,OAAO,CAAA,QACpB,CACA1T,GAAa,EAAK,CAAA,CAEtB,GAEa,CAAA,EACZ,CAACj4B,EAAOvC,CAAO,CAAC,EAEf3H,GAEA,OAAA4B,EAAA,KAAC,MAAI,CAAA,UAAU,4BAA4B,SAAA,CAAA,UACjC5B,EAAA,EACV,EAIJ,GAAIkiC,EACF,OACG9kC,EAAAA,IAAA,MAAA,CAAI,UAAU,gDAAgD,SAE/D,qBAAA,EAIE,MAAA04C,GAAiBpqB,IAAY,CAC7B,GAAA,CAACA,IAAS,MAAc,MAAA,IAEtB,MAAAulB,GAAY,OAAOxqB,GAAmBiF,GAAQ,MAAOA,GAAQ,QAAQ,CAAC,EAErE,OAAA,IAAI,KAAK,aAAa,QAAS,CACpC,sBAAuB,EACvB,sBAAuBxhB,EAAM,SAAW,OAAS,EAAI,EACrD,YAAa,EAAA,CACd,EAAE,OAAO+mC,EAAS,CACrB,EAGE,OAAArvC,EAAA,KAAC,MAAI,CAAA,UAAU,gDAAgD,SAAA,CAAA,YACnDk0C,GAAcpqB,CAAO,EAAE,IAAExhB,EAAM,MAAA,EAC3C,CAEJ,EAEM6rC,GAAwB54C,GAAU,CAClCA,IAAU,SACZi3C,EAAsB,EAAI,GAEdJ,EAAA,WAAW72C,CAAK,CAAC,EAC7Bi3C,EAAsB,EAAK,EAC3BF,EAAkB,EAAE,EAExB,EAEM8B,EAA8BpxC,GAAM,CAClC,MAAAzH,EAAQyH,EAAE,OAAO,OACnBzH,IAAU,IAAO,cAAc,KAAKA,CAAK,GAAK,WAAWA,CAAK,GAAK,OACrE+2C,EAAkB/2C,CAAK,EACnBA,IAAU,IACA62C,EAAA,WAAW72C,CAAK,CAAC,EAGnC,EAEA,OAEIyE,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,6BAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4GAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,OAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO61C,EACP,SAAWruC,GAAM,CACT,MAAAzH,EAAQyH,EAAE,OAAO,OACnBzH,IAAU,IAAM,cAAc,KAAKA,CAAK,IAC1C+1C,EAAc/1C,CAAK,CAEvB,EACA,YAAY,MACZ,UAAU,+OAAA,CACZ,EACAC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMo2C,EAAsB,EAAI,EACzC,UAAU,8PAET,SACCX,EAAAjxC,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKy1C,EAAU,KAAM,IAAKA,EAAU,OAAQ,UAAU,SAAU,CAAA,EACrEz1C,EAAAA,IAAC,OAAM,CAAA,SAAAy1C,EAAU,MAAO,CAAA,CAAA,CAAA,CAC1B,EAEA,cAAA,CAAA,CAEJ,EACF,EACCA,GAAaz1C,EAAAA,IAACw4C,GAAa,CAAA,MAAO/C,CAAW,CAAA,CAAA,EAChD,EAGAz1C,EAAAA,IAAC,MAAI,CAAA,UAAU,2BACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACb,MAAM64C,EAAYpD,EACZqD,EAAajD,EACnBH,EAAaC,CAAO,EACpBG,EAAcC,CAAQ,EACtBH,EAAWiD,CAAS,EACpB7C,EAAY8C,CAAU,CACxB,EACA,UAAU,qHAEV,SAAA94C,EAAAA,IAAC+4C,GAAc,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,EAE7B,EAGAv0C,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,KAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO+1C,EACP,SAAQ,GACR,YAAY,MACZ,UAAU,+OAAA,CACZ,EACA/1C,EAAA,IAAC,SAAA,CACC,QAAS,IAAMs2C,EAAoB,EAAI,EACvC,UAAU,8PAET,SACCX,EAAAnxC,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAK21C,EAAQ,KAAM,IAAKA,EAAQ,OAAQ,UAAU,SAAU,CAAA,EACjE31C,EAAAA,IAAC,OAAM,CAAA,SAAA21C,EAAQ,MAAO,CAAA,CAAA,CAAA,CACxB,EAEA,cAAA,CAAA,CAEJ,EACF,EACCA,GAAW31C,EAAAA,IAACw4C,GAAa,CAAA,MAAO7C,CAAS,CAAA,CAAA,EAC5C,EAGAnxC,EAAAA,KAAC,MAAI,CAAA,UAAU,+FAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAU,aAAA,QACzC,OAAK,CAAA,UAAU,4BAA4B,MAAM,sFAAsF,SAAC,GAAA,CAAA,CAAA,EAC3I,QACC,OAAK,CAAA,UAAU,gBACb,SAAA61C,EAAa,IAAI,OAAOA,CAAU,EAAI,MAAO,QAAQ,CAAC,CAAC,IAAIJ,GAAW,MAAM,GAAK,IACpF,CAAA,CAAA,EACF,EACAjxC,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAY,eAAA,QAC3C,OAAK,CAAA,UAAU,4BAA4B,MAAM,gDAAgD,SAAC,GAAA,CAAA,CAAA,EACrG,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAiB,YAAe,YAAa,CAAA,CAAA,CAC/D,CAAA,CAAA,EACF,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,EAGpEwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAM0yC,EAAmB,CAACD,CAAe,EAClD,UAAU,qFAET,SAAA,CAAAA,EAAkB,eAAiB,eACpCj3C,EAAA,IAAC,MAAA,CACC,UAAW,gCAAgCi3C,EAAkB,aAAe,EAAE,GAC9E,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAj3C,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EAGCi3C,GACCzyC,EAAA,KAAC,MAAI,CAAA,UAAU,+DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAe,kBAAA,EAC/CwE,EAAAA,KAAC,OAAK,CAAA,UAAU,gBAAiB,SAAA,CAAAuxC,EAAS,IAAEJ,GAAS,MAAA,CAAO,CAAA,CAAA,EAC9D,EAEAnxC,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,gBAAgB,SAAA,CAAA,oCAAkCmyC,EAAS,IAAA,EAAE,EAC7EnyC,EAAAA,KAAC,OAAK,CAAA,UAAU,gBACb,SAAA,CAAAuxC,GAAY,OAAOA,GAAY,EAAIY,EAAS,IAAI,EAAE,QAAQ,CAAC,EAAE,IAAEhB,GAAS,MAAA,CAC3E,CAAA,CAAA,EACF,EAEAnxC,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAK,QAAA,EACpCA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAiB,YAAS,IAAK,CAAA,CAAA,EACjD,EAECu3C,GACC/yC,EAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAI,OAAA,EACpCwE,EAAAA,KAAC,OAAK,CAAA,UAAU,gBAAgB,SAAA,CAAA,KAC3BixC,GAAW,OAAO,MAAI8B,EAAa,QAAQ,CAAC,EAAE,IAAE5B,GAAS,MAAA,CAC9D,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,4GACb,SAACnxC,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,uDAAuD,SAEvE,qBAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACZ,SAAA,CAAA,CAAC,GAAK,EAAK,CAAG,EAAE,IAAKzE,GACpByE,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMm0C,GAAqB54C,EAAM,UAAU,EACpD,UAAW;AAAA,wBACP42C,IAAa52C,GAAS,CAACg3C,EACrB,oEACA,qFACJ,+CAED,SAAA,CAAAh3C,EAAM,GAAA,CAAA,EARFA,CAAA,CAUR,EACDC,EAAA,IAAC,SAAA,CACC,QAAS,IAAM24C,GAAqB,QAAQ,EAC5C,UAAW;AAAA,sBACP5B,EACE,oEACA,qFACJ,+CACH,SAAA,QAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAECA,GACCvyC,EAAA,KAAC,MAAI,CAAA,UAAU,sHACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO62C,EACP,SAAU+B,EACV,YAAY,mBACZ,UAAU,iIAAA,CACZ,EACC54C,EAAA,IAAA,OAAA,CAAK,UAAU,wCAAwC,SAAC,GAAA,CAAA,CAAA,CAC3D,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,EAGAA,EAAA,IAAC,SAAA,CACC,QAASg4C,EACT,SAAU32C,GAAW,CAACo0C,GAAa,CAACE,GAAW,CAACE,GAAc,CAACE,EAC/D,UAAW;AAAA;AAAA,cAEP10C,GAAW,CAACo0C,GAAa,CAACE,GAAW,CAACE,GAAc,CAACE,EACnD,kDACA,mDACJ;AAAA,YAGD,WAAU,cAAgB,MAAA,CAAA,CAC7B,EACF,EAGA/1C,EAAA,IAACi0C,GAAA,CACC,OAAQkC,EACR,QAAS,IAAMC,EAAsB,EAAK,EAC1C,SAAU+B,EACV,qBAAsB1C,GAAW,OAAA,CACnC,EACAz1C,EAAA,IAACi0C,GAAA,CACC,OAAQoC,EACR,QAAS,IAAMC,EAAoB,EAAK,EACxC,SAAU+B,GACV,qBAAsB1C,GAAS,OAAA,CAAA,CACjC,EACF,CAEJ,CC97BO,MAAM7sB,GAAoB,CAE/B,MAAO,CACL,OAAQ,6CACR,QAAS,6CACT,KAAM,6CACN,KAAM,4CACP,EAED,KAAM,CACJ,OAAQ,6CACR,QAAS,6CACT,KAAM,6CACN,KAAM,4CACP,EAED,IAAK,CACH,OAAQ,6CACR,QAAS,6CACT,KAAM,6CACN,KAAM,4CACV,CACA,EAGMmC,GAAY,CAChB,wEACA,kFACA,iEACA,oDACA,mDACA,gDACF,EAGMF,GAAa,CAEjB,qDACA,kDAGA,6NACA,kNAGA,sLACA,oLACA,gPACA,8OACA,+LACA,yPAGA,mKACA,mKACA,yJACA,gKACA,gKACA,sJAGA,gKACA,sJACA,6JAGA,kGACA,+GACA,8GACA,+GACA,8GACF,EAGMD,GAAc,CAClB,mFACA,iFACA,0DACA,yDACA,mDACA,wDACF,EAGME,GAAW,CACf,oDACA,oDACA,8GACF,EAGMguB,GAAW,CACf,sCACA,mCACA,2DACA,uEACF,EAGapnB,GAAkB,CAC7B,UAAW,6CACX,WAAY,4CACd,EAGMqnB,GAA2B,CAC/B,iJACA,mDACF,EAEO,MAAMC,EAAuB,CAClC,aAAc,CACZ,KAAK,SAAW,KAChB,KAAK,OAAS,KACd,KAAK,OAAS,KACd,KAAK,QAAU,KAGf,KAAK,UAAY,IAAI,IACrB,KAAK,cAAgB,IAAI,IACzB,KAAK,gBAAkB,EACvB,KAAK,eAAiB,GAAK,GAAK,IAGhC,KAAK,qBAAsB,CAC/B,CAGE,sBAAuB,CACrB,GAAI,CACF,MAAM/tB,EAAc,aAAa,QAAQ,mBAAmB,EAC5D,GAAIA,EAAa,CACf,KAAM,CAAE,MAAAC,EAAO,SAAAC,EAAU,UAAAxb,CAAW,EAAG,KAAK,MAAMsb,CAAW,EACzD,KAAK,IAAK,EAAGtb,EAAY,GAAK,GAAK,MACrC,KAAK,UAAY,IAAI,IAAIub,CAAK,EAC9B,KAAK,cAAgB,IAAI,IAAIC,CAAQ,EACrC,KAAK,gBAAkBxb,EAEjC,CACK,MAAe,CAEpB,CACA,CAEE,oBAAqB,CACnB,GAAI,CACF,MAAMyb,EAAY,CAChB,MAAO,MAAM,KAAK,KAAK,UAAU,QAAO,CAAE,EAC1C,SAAU,MAAM,KAAK,KAAK,cAAc,QAAO,CAAE,EACjD,UAAW,KAAK,IAAG,CACpB,EACD,aAAa,QAAQ,oBAAqB,KAAK,UAAUA,CAAS,CAAC,CACpE,MAAe,CAEpB,CACA,CAEE,YAAa,CACX,KAAK,UAAU,MAAO,EACtB,KAAK,cAAc,MAAO,EAC1B,KAAK,gBAAkB,EACvB,aAAa,WAAW,mBAAmB,CAC/C,CAEE,cAAe,CACb,OAAO,KAAK,IAAK,EAAG,KAAK,gBAAkB,KAAK,cACpD,CAEE,MAAM,MAAO,CACX,GAAI,CAAC,OAAO,SAAU,MAAM,IAAI,MAAM,wBAAwB,EAE9D,KAAK,SAAW,IAAIlM,GAAuB,OAAO,QAAQ,EAC1D,KAAK,OAAS,MAAM,KAAK,SAAS,UAAW,EAC7C,MAAMJ,EAAU,MAAM,KAAK,SAAS,WAAY,EAChD,KAAK,QAAU,OAAOA,EAAQ,OAAO,EAGrC,MAAM0C,EAAYoH,GAAkB,KAAK,OAAO,EAChD,GAAI,CAACpH,EAAW,MAAM,IAAI,MAAM,qBAAqB,EAErD,KAAK,OAAS,IAAIhW,EAAgBgW,EAAU,OAAQqJ,GAAY,KAAK,MAAM,CAC/E,CAGE,MAAM,aAAalf,EAAcG,EAAQ,CACvC,GAAI,CACF,MAAMc,EAAQ,IAAIpB,EAAgBG,EAAcof,GAAW,KAAK,MAAM,EAChE/N,EAAU,MAAM,KAAK,OAAO,WAAY,EACxC9R,EAAU,MAAM,KAAK,OAAO,SAAS,WAAY,EAAC,KAAK4T,GAAWA,EAAQ,OAAO,EACjF0C,EAAYoH,GAAkB1d,CAAO,EAE3C,GAAI,CAACsW,EACH,MAAM,IAAI,MAAM,uBAAuB,EAGvB,MAAM5U,EAAM,UAAUoQ,EAASwE,EAAU,MAAM,EAEjD1V,GAEd,MADW,MAAMc,EAAM,QAAQ4U,EAAU,OAAQmL,EAAiB,GACzD,KAAM,CAElB,OAAQjqB,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,aAAaiJ,EAAc,CAC/B,GAAI,CAEF,GAAIA,IAAiB,MACnB,MAAO,CACL,OAAQ,MACR,KAAM,WACN,SAAU,EACX,EAIH,MAAMjE,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDtS,EAAQ,IAAIpB,EAChBG,EACA,CACE,0CACA,wCACA,0CACD,EACDjE,CACD,EAEK,CAACiO,EAAQsa,EAAMlkB,CAAQ,EAAI,MAAM,QAAQ,IAAI,CACjDa,EAAM,OAAM,EAAG,MAAM,IAAM,SAAS,EACpCA,EAAM,KAAI,EAAG,MAAM,IAAM,eAAe,EACxCA,EAAM,SAAQ,EAAG,MAAM,IAAM,EAAE,CACvC,CAAO,EAED,MAAO,CACL,OAAA+I,EACA,KAAAsa,EACA,SAAAlkB,EACA,QAASJ,CACV,CACF,OAAQjJ,EAAO,CACd,eAAQ,MAAM,yBAA0BA,CAAK,EACtC,CACL,OAAQ,UACR,KAAM,gBACN,SAAU,GACV,QAASiJ,CACV,CACP,CACA,CAGE,0BAA0BwgB,EAASC,EAASoF,EAAWC,EAAW,CAChE,GAAI,CAEF,MAAMwnB,EAAiB,OAAO9vB,GAAmBgD,EAASqF,CAAS,CAAC,EAC9D0nB,EAAiB,OAAO/vB,GAAmBiD,EAASqF,CAAS,CAAC,EAG9DtH,EAAc+uB,EAAiBD,EAC/B3nB,EAAc2nB,EAAiBC,EAErC,MAAO,CACL,YAAa/uB,EAAY,QAAQ,CAAC,EAClC,YAAamH,EAAY,QAAQ,CAAC,CACnC,CACF,OAAQ5uB,EAAO,CACd,eAAQ,MAAM,wCAAyCA,CAAK,EACrD,CACL,YAAa,IACb,YAAa,GACd,CACP,CACA,CAGE,MAAM,WAAWomB,EAAeC,EAAeoD,EAASC,EAAS,CAC/D,GAAI,CACG,KAAK,QAAQ,MAAM,KAAK,KAAM,EAEnC,MAAMpP,EAAU,MAAM,KAAK,OAAO,WAAY,EACxC9R,EAAU,MAAM,KAAK,OAAO,SAAS,WAAY,EAAC,KAAK4T,GAAWA,EAAQ,OAAO,EACjF0C,EAAYoH,GAAkB1d,CAAO,EAE3C,GAAI,CAACsW,EACH,MAAM,IAAI,MAAM,uBAAuB,EAGzC,MAAMkM,EAAW,KAAK,MAAM,KAAK,IAAG,EAAK,GAAI,EAAI,GAAK,GAEhDyrB,EAAerwB,EAAc,YAAa,IAAKtH,EAAU,KAAK,YAAa,EAC3E43B,EAAerwB,EAAc,YAAa,IAAKvH,EAAU,KAAK,YAAa,EAC3E63B,EAAYF,GAAgBC,EAE5Bj6B,EAAiB,MAAM,KAAK,OAAO,QAAS,EAC5CC,EAAU,IAAI5T,EAAgB2T,EAAgByL,GAAa,KAAK,MAAM,EAEtE4B,EAAe,MAAMpN,EAAQ,QAAQ0J,EAAeC,CAAa,EACjEuwB,EAAY9sB,IAAiB,6CAEnC,GAAI6sB,EAAW,CACb,MAAM1tC,EAAewtC,EAAepwB,EAAgBD,EAC9C8E,EAAYurB,EAAehtB,EAAUC,EACrCyB,EAAcsrB,EAAe/sB,EAAUD,EAEzCmtB,GAEF,MADqB,MAAMl6B,EAAQ,WAAWoC,EAAU,KAAM7V,CAAY,GACvD,KAAM,EAG3B,MAAM,KAAK,aAAaA,EAAckiB,CAAW,EAEjD,MAAME,EAAkBF,EAAc,KAAQ,MACxCC,EAAgBF,EAAY,KAAQ,MAiB1C,MAAO,CACL,QAHc,MAbL,MAAM,KAAK,OAAO,gBAC3BjiB,EACAkiB,EACAE,EACAD,EACA9Q,EACA0Q,EACA,CACE,MAAOE,EACP,SAAU2rB,GAAiB,GAAO,CAC9C,CACS,GAEwB,KAAM,EAI7B,UAAW,CACT,aAAc,OAAO3rB,CAAS,EAAI,OAAOC,CAAW,GAAG,QAAQ,CAAC,EAChE,aAAc,OAAOA,CAAW,EAAI,OAAOD,CAAS,GAAG,QAAQ,CAAC,CAC5E,CACS,CACT,KAAa,CACL,IAAI4rB,EAAkB,OAAOrtB,CAAO,EAChCstB,EAAkB,OAAOrtB,CAAO,EAEpC,GAAKktB,EAoBH,MADqB,MAAMl6B,EAAQ,WAAW0J,EAAeC,CAAa,GACvD,KAAM,MApBX,CACd,MAAMO,EAAe,IAAI9d,EAAgBghB,EAAc1B,GAAU,KAAK,QAAQ,EACxE,CAAC5B,EAAUE,CAAQ,EAAI,MAAME,EAAa,YAAa,EACvDowB,EAAe,MAAMpwB,EAAa,OAAQ,EAOhD,GALIR,EAAc,YAAW,IAAO4wB,EAAa,YAAW,IAC1D,CAACF,EAAiBC,CAAe,EAAI,CAACA,EAAiBD,CAAe,EACtE,CAAC1wB,EAAeC,CAAa,EAAI,CAACA,EAAeD,CAAa,GAG5DI,EAAW,IAAME,EAAW,GAC9B,GAAI,CAEFqwB,EADc,MAAM,KAAK,OAAO,MAAMD,EAAiBtwB,EAAUE,CAAQ,CAE1E,MAAe,CACd,MAAM,IAAI,MAAM,wDAAwD,CACtF,CAEA,CAKQ,KAAM,CAACkD,EAAgBC,CAAc,EAAI,MAAM,QAAQ,IAAI,CACzD,IAAI/gB,EAAgBsd,EAAeiC,GAAW,KAAK,QAAQ,EAC3D,IAAIvf,EAAgBud,EAAegC,GAAW,KAAK,QAAQ,CACrE,CAAS,EAEK,CAACyG,EAAWC,CAAS,EAAI,MAAM,QAAQ,IAAI,CAC/CnF,EAAe,SAAU,EACzBC,EAAe,SAAQ,CACjC,CAAS,EAEKotB,EAAY,KAAK,0BAA0BH,EAAiBC,EAAiBjoB,EAAWC,CAAS,EAEvG,MAAM,QAAQ,IAAI,CAChB,KAAK,aAAa3I,EAAe0wB,CAAe,EAChD,KAAK,aAAazwB,EAAe0wB,CAAe,CAC1D,CAAS,EAED,MAAM/qB,EAAc8qB,EAAkB,KAAQ,MACxC7qB,EAAc8qB,EAAkB,KAAQ,MAkB9C,MAAO,CACL,QAHc,MAdL,MAAM,KAAK,OAAO,aAC3B3wB,EACAC,EACAywB,EACAC,EACA/qB,EACAC,EACA3R,EACA0Q,EACA,CACE,SAAU6rB,GAAiB,GAAO,CAC9C,CACS,GAEwB,KAAM,EAI7B,UAAAI,CACD,CACT,CACK,OAAQj3C,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,gBAAgBiJ,EAAciuC,EAAaC,EAAWC,EAAQ,CAClE,GAAI,CACG,KAAK,QAAQ,MAAM,KAAK,KAAM,EAEnC,MAAM5uC,EAAU,MAAM,KAAK,OAAO,SAAS,WAAY,EAAC,KAAK4T,GAAWA,EAAQ,OAAO,EACjF0C,EAAYoH,GAAkB1d,CAAO,EAE3C,GAAI,CAACsW,EACH,MAAM,IAAI,MAAM,uBAAuB,EAGzC,MAAMkM,EAAW,OAAO,KAAK,MAAM,KAAK,IAAG,EAAK,GAAI,EAAI,GAAK,EAAE,EAG/D,MAAM,KAAK,aAAa/hB,EAAciuC,CAAW,EAGjD,MAAMG,EAAkBH,EAAc,KAAQ,MACxCI,EAAgBH,EAAY,KAAQ,MAGpCI,EAAqBtuC,EAAa,YAAa,IAAK6V,EAAU,KAAK,YAAa,EAClFA,EAAU,KACV7V,EAeJ,OAbW,MAAM,KAAK,OAAO,gBAC3BsuC,EACAL,EACAG,EACAC,EACAF,EACApsB,EACA,CACE,MAAOmsB,EACP,SAAUN,GAAiB,GAAO,CAC5C,CACO,CAGF,OAAQ72C,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,aAAaomB,EAAeC,EAAeoD,EAASC,EAASpP,EAAS,CAC1E,GAAI,CACG,KAAK,QAAQ,MAAM,KAAK,KAAM,EAEnC,MAAM0Q,EAAW,OAAO,KAAK,MAAM,KAAK,IAAG,EAAK,GAAI,EAAI,GAAK,EAAE,EAG/D,MAAM,QAAQ,IAAI,CAChB,KAAK,aAAa5E,EAAeqD,CAAO,EACxC,KAAK,aAAapD,EAAeqD,CAAO,CAChD,CAAO,EAGD,MAAMoB,EAAcrB,EAAU,KAAQ,MAChCsB,EAAcrB,EAAU,KAAQ,MAGhC0tB,EAAS98B,GAAW,MAAM,KAAK,OAAO,WAAY,EAgBxD,OAdW,MAAM,KAAK,OAAO,aAC3B8L,EACAC,EACAoD,EACAC,EACAoB,EACAC,EACAqsB,EACApsB,EACA,CACE,SAAU6rB,GAAiB,GAAO,CAC5C,CACO,CAGF,OAAQ72C,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,gBAAgBipB,EAAQC,EAAQ,CACpC,GAAI,CAMF,GALK,KAAK,QAAQ,MAAM,KAAK,KAAM,EAEnB,MAAM,KAAK,SAAS,WAAU,EAAG,KAAKgN,GAAK,OAAOA,EAAE,OAAO,CAAC,IAG5D,MAAO,CACrB,MAAMzZ,EAAiByJ,GAAkB,KAAK,EAAE,QAG1CsxB,EAAcr1B,GAAgB,gBAAe,EAAG,OACpD,CAAC,UAAW,SAAS,EACrB,CAAC8G,EAAQC,CAAM,CACzB,EAAU,MAAM,CAAC,EAUT,OARoB,MAAM,OAAO,SAAS,QAAQ,CAChD,OAAQ,WACR,OAAQ,CAAC,CACP,GAAIzM,EACJ,KAAM,aAAe+6B,CACjC,EAAa,QAAQ,CACrB,CAAS,IAEsB,oEAC/B,CAGM,MAAM/6B,EAAiB,MAAM,KAAK,OAAO,QAAS,EAQlD,OADoB,MANJ,IAAI3T,EAClB2T,EACAyL,GACA,KAAK,QACN,EAEiC,QAAQe,EAAQC,CAAM,IACjC,4CACxB,OAAQlpB,EAAO,CACd,eAAQ,MAAM,8BAA+BA,CAAK,EAC3C,EACb,CACA,CAGE,YAAYoJ,EAAQC,EAAW,GAAI,CACjC,GAAI,CAEF,MAAMouC,EAAahxB,GAAmBrd,EAAQC,CAAQ,EAEhDquC,EAAgB,OAAOD,CAAU,EAAE,QAAQ,CAAC,EAElD,OAAOnuC,GAAkBouC,EAAeruC,CAAQ,CACjD,OAAQrJ,EAAO,CACd,eAAQ,MAAM,yBAA0BA,CAAK,EACtCoJ,CACb,CACA,CAGE,MAAM,KAAKypC,EAAWE,EAASxnB,EAAUC,EAAcrqB,EAAM6pB,EAAU,CACrE,GAAI,CACG,KAAK,QAAQ,MAAM,KAAK,KAAM,EAEnC,MAAM1Q,EAAU,MAAM,KAAK,OAAO,WAAY,EACxCq9B,EAAe9E,EAAU,SAAW,OAASA,EAAU,SAAW,MAClE+E,EAAa7E,EAAQ,SAAW,OAASA,EAAQ,SAAW,MAE7D4E,GACH,MAAM,KAAK,aAAa9E,EAAU,QAAStnB,CAAQ,EAGrD,MAAMssB,EAAqB,GAE3B,IAAIttB,EAEJ,OAAIotB,EAEFptB,EAAK,MAAM,KAAK,OAAO,sBACrBstB,EACA12C,EACAmZ,EACA0Q,EACA,CACE,MAAOO,EACP,SAAUsrB,GAAiB,GAAO,CAC9C,CACS,EACQe,EAETrtB,EAAK,MAAM,KAAK,OAAO,sBACrBgB,EACAssB,EACA12C,EACAmZ,EACA0Q,EACA,CACE,SAAU6rB,GAAiB,GAAO,CAC9C,CACS,EAGDtsB,EAAK,MAAM,KAAK,OAAO,yBACrBgB,EACAssB,EACA12C,EACAmZ,EACA0Q,EACA,CACE,SAAU6rB,GAAiB,GAAO,CAC9C,CACS,EAGItsB,CACR,OAAQvqB,EAAO,CACd,MAAIA,EAAM,KACF,IAAI,MAAM,uBAAyBA,EAAM,IAAI,EAE/CA,CACZ,CACA,CAGE,MAAM,aAAaurB,EAAUpqB,EAAM,CACjC,GAAI,CAGF,GAFK,KAAK,QAAQ,MAAM,KAAK,KAAM,EAE/B,CAACoqB,GAAY,CAACpqB,GAAQA,EAAK,OAAS,EACtC,MAAO,IAGT,MAAMmsB,EAAU,MAAM,KAAK,OAAO,cAAc/B,EAAUpqB,CAAI,EAC9D,OAAOmsB,EAAQA,EAAQ,OAAS,CAAC,CAClC,OAAQttB,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,YAAY6yC,EAAWE,EAAS3pC,EAAQ,CAC5C,GAAI,CAGF,GAFK,KAAK,QAAQ,MAAM,KAAK,KAAM,EAE/B,CAACypC,GAAa,CAACE,GAAW,CAAC3pC,EAC7B,MAAO,CAAE,MAAO,KAAM,SAAU,GAAK,EAGvC,MAAMZ,EAAU,MAAM,KAAK,SAAS,WAAY,EAAC,KAAK4T,GAAWA,EAAQ,OAAO,EAC1E0C,EAAYoH,GAAkB1d,CAAO,EAE3C,GAAI,CAACsW,EACH,MAAM,IAAI,MAAM,uBAAuB,EAIzC,MAAMg5B,EAAcjF,EAAU,SAAW,OAASA,EAAU,SAAW,MAAQ/zB,EAAU,KAAO+zB,EAAU,QACpGkF,EAAYhF,EAAQ,SAAW,OAASA,EAAQ,SAAW,MAAQj0B,EAAU,KAAOi0B,EAAQ,QAG5FxnB,EAAWjiB,GACfF,EACAypC,EAAU,SAAW,OAASA,EAAU,SAAW,MAAQ,GAAKA,EAAU,QAC3E,EAGKhsB,EAAW,GAAGixB,CAAW,IAAIC,CAAS,IAAI3uC,CAAM,GACtD,GAAI,KAAK,YAAc,KAAK,WAAWyd,CAAQ,GAAK,KAAK,IAAK,EAAG,KAAK,WAAWA,CAAQ,EAAE,UAAY,IACrG,OAAO,KAAK,WAAWA,CAAQ,EAAE,MAInC,MAAMmxB,EAAqB,CACzBl5B,EAAU,KACVA,EAAU,KACVA,EAAU,IAClB,EAAQ,OAAOO,GAAQA,GAAQA,IAASy4B,GAAez4B,IAAS04B,CAAS,EAG7DE,EAAgB,CAAE,EAGpBH,IAAgBC,GAClBE,EAAc,KACZ,KAAK,SAAS,CAACH,EAAaC,CAAS,EAAGxsB,CAAQ,EAC7C,KAAKwlB,IAAW,CAAE,GAAGA,EAAQ,KAAM,CAAC+G,EAAaC,CAAS,GAAI,EAC9D,MAAM,IAAM,IAAI,CACpB,EAIH,UAAWG,KAAgBF,EACzBC,EAAc,KACZ,KAAK,SAAS,CAACH,EAAaI,EAAcH,CAAS,EAAGxsB,CAAQ,EAC3D,KAAKwlB,IAAW,CAAE,GAAGA,EAAQ,KAAM,CAAC+G,EAAaI,EAAcH,CAAS,GAAI,EAC5E,MAAM,IAAM,IAAI,CACpB,EAIH,GAAIvvC,IAAY,MACd,QAASoD,EAAI,EAAGA,EAAIosC,EAAmB,OAAQpsC,IAC7C,QAASiiB,EAAIjiB,EAAI,EAAGiiB,EAAImqB,EAAmB,OAAQnqB,IAAK,CACtD,MAAM1sB,EAAO,CAAC22C,EAAaE,EAAmBpsC,CAAC,EAAGosC,EAAmBnqB,CAAC,EAAGkqB,CAAS,EAClFE,EAAc,KACZ,KAAK,SAAS92C,EAAMoqB,CAAQ,EACzB,KAAKwlB,IAAW,CAAE,GAAGA,EAAQ,KAAA5vC,CAAI,EAAG,EACpC,MAAM,IAAM,IAAI,CACpB,CACb,CAKM,MAAMg3C,GAAU,MAAM,QAAQ,IAAIF,CAAa,GAAG,OAAO,OAAO,EAGhE,IAAIG,EAAY,KACZC,EAAY/uC,GAAkB,IAAKypC,EAAQ,QAAQ,EAEvD,UAAWM,KAAS8E,EACd9E,EAAM,UAAYgF,IACpBA,EAAYhF,EAAM,UAClB+E,EAAY/E,GAIhB,GAAI,CAAC+E,EACH,MAAO,CAAE,MAAO,KAAM,SAAU,IAAK,MAAO,sBAAwB,EAgBtE,MAAMrH,EAAS,CACb,MAbmBqH,EAAU,KAAK,IAAI/4B,GAClCA,IAASP,EAAU,KACd+zB,EAAU,SAAW,OAASE,EAAQ,SAAW,MAAQ,UACzDF,EAAU,SAAW,OAASE,EAAQ,SAAW,MAAQ,QAE9D1zB,IAASy4B,EAAoBjF,EAAU,OACvCxzB,IAAS04B,EAAkBhF,EAAQ,OACnC1zB,IAASP,EAAU,KAAa,OAChCO,IAASP,EAAU,KAAa,OAC7B,SACR,EAGqB,KAAK,KAAK,EAC9B,SAAU2H,GAAmB2xB,EAAU,UAAWrF,EAAQ,QAAQ,EAClE,KAAMqF,EAAU,IACjB,EAGD,OAAK,KAAK,aAAY,KAAK,WAAa,CAAE,GAC1C,KAAK,WAAWvxB,CAAQ,EAAI,CAC1B,MAAOkqB,EACP,UAAW,KAAK,IAAG,CACpB,EAEMA,CACR,OAAQ/wC,EAAO,CACd,cAAQ,MAAM,wBAAyBA,CAAK,EACtCA,CACZ,CACA,CAGE,MAAM,SAASmB,EAAMoqB,EAAU,CAC7B,GAAIpqB,EAAK,OAAS,EAAG,OAAO,KAG5B,GAAI,MAAM,KAAK,SAAS,WAAY,EAAC,KAAK,GAAK,EAAE,OAAO,IAAM,MAC5D,GAAI,CAEF,MAAMm3C,EAAoBn2B,GAAgB,gBAAe,EAAG,OAC1D,CAAC,UAAW,WAAW,EACvB,CAACoJ,EAAUpqB,CAAI,CACzB,EAAU,MAAM,CAAC,EAEHo3C,EAAa,MAAM,OAAO,SAAS,QAAQ,CAC/C,OAAQ,WACR,OAAQ,CAAC,CACP,GAAIryB,GAAkB,KAAK,EAAE,OAC7B,KAAM,aAAeoyB,CACjC,EAAa,QAAQ,CACrB,CAAS,EAEKhrB,EAAUnL,GAAgB,kBAAkB,OAAO,CAAC,WAAW,EAAGo2B,CAAU,EAAE,CAAC,EACrF,MAAO,CAAE,UAAWjrB,EAAQA,EAAQ,OAAS,CAAC,CAAG,CAClD,MAAe,CACd,MAAM,IAAI,MAAM,iCAAiC,CACzD,CAII,GAAI,CACF,MAAMA,EAAU,MAAM,KAAK,OAAO,cAAc/B,EAAUpqB,CAAI,EAC9D,MAAO,CAAE,UAAWmsB,EAAQA,EAAQ,OAAS,CAAC,CAAG,CAClD,MAAe,CACd,MAAM,IAAI,MAAM,iCAAiC,CACvD,CACA,CAGE,MAAM,gBAAgBrkB,EAAck7B,EAAa,CAC/C,GAAI,CAIF,GAHK,KAAK,UAAU,MAAM,KAAK,KAAM,EAGjCl7B,IAAiB,MAAO,CAC1B,MAAMyiB,EAAU,MAAM,KAAK,SAAS,WAAWyY,CAAW,EAC1D,OAAOpjB,GAAmB2K,CAAO,CACzC,CAGM,MAAMxhB,EAAQ,IAAIpB,EAChBG,EACAof,GACA,KAAK,QACN,EAEK,CAACqD,EAASriB,CAAQ,EAAI,MAAM,QAAQ,IAAI,CAC5Ca,EAAM,UAAUi6B,CAAW,EAC3Bj6B,EAAM,SAAQ,CACtB,CAAO,EAED,OAAOuc,GAAmBiF,EAASriB,CAAQ,CAC5C,OAAQrJ,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,QAAQoJ,EAAQ,CACpB,GAAI,CACG,KAAK,QAAQ,MAAM,KAAK,KAAM,EAEnC,MAAMZ,EAAU,MAAM,KAAK,SAAS,WAAY,EAAC,KAAK4T,GAAWA,EAAQ,OAAO,EAC1E0C,EAAYoH,GAAkB1d,CAAO,EAE3C,GAAI,CAACsW,EACH,MAAM,IAAI,MAAM,uBAAuB,EAgBzC,OALW,MAPE,IAAIhW,EACfgW,EAAU,KACVs3B,GACA,KAAK,MACN,EAGqB,QAAQ,CAC5B,MAAOhtC,EACP,SAAUytC,GAAiB,GAAM,CACzC,CAAO,CAGF,OAAQ72C,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,WAAWoJ,EAAQ,CACvB,GAAI,CACG,KAAK,QAAQ,MAAM,KAAK,KAAM,EAEnC,MAAMZ,EAAU,MAAM,KAAK,SAAS,WAAY,EAAC,KAAK4T,GAAWA,EAAQ,OAAO,EAC1E0C,EAAYoH,GAAkB1d,CAAO,EAE3C,GAAI,CAACsW,EACH,MAAM,IAAI,MAAM,uBAAuB,EAazC,OAFW,MAPE,IAAIhW,EACfgW,EAAU,KACVs3B,GACA,KAAK,MACN,EAGqB,SAAShtC,CAAM,CAGtC,OAAQpJ,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,eAAe2H,EAAS,CAC5B,GAAI,CACG,KAAK,UAAU,MAAM,KAAK,KAAM,EAErC,MAAMa,EAAU,MAAM,KAAK,SAAS,WAAY,EAAC,KAAK4T,GAAWA,EAAQ,OAAO,EAC1E0C,EAAYoH,GAAkB1d,CAAO,EAE3C,GAAI,CAACsW,EACH,MAAM,IAAI,MAAM,uBAAuB,EAUzC,OADgB,MANH,IAAIhW,EACfgW,EAAU,KACVs3B,GACA,KAAK,QACN,EAE0B,UAAUzuC,CAAO,CAE7C,OAAQ3H,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,aAAamkC,EAAa,CAC9B,GAAI,CACG,KAAK,UAAU,MAAM,KAAK,KAAM,EAGrC,MAAMznB,EAAU,IAAI5T,EAClB,UAAU,QACVof,GACA,KAAK,QACN,EAGKS,EAAY,MAAMjM,EAAQ,eAAgB,EAG1C87B,EAAgB,MAAM,QAAQ,IAClC,MAAM,KAAK,CAAE,OAAQ,OAAO7vB,CAAS,GAAK,CAAChd,EAAGC,IAAM8Q,EAAQ,SAAS9Q,CAAC,CAAC,CACxE,EA2CD,OAxCkB,MAAM,QAAQ,IAC9B4sC,EAAc,IAAI,MAAO7xB,GAAgB,CACvC,GAAI,CACF,MAAMkC,EAAO,IAAI/f,EACf6d,EACA,CACE,qDACA,2CACA,0CACD,EACD,KAAK,QACN,EAGK+E,EAAU,MAAM7C,EAAK,UAAUsb,CAAW,EAGhD,GAAIzY,EAAU,EAAG,CACf,KAAM,CAAC5C,EAAQC,CAAM,EAAI,MAAM,QAAQ,IAAI,CACzCF,EAAK,OAAQ,EACbA,EAAK,OAAM,CAC3B,CAAe,EAED,MAAO,CACL,YAAAlC,EACA,OAAAmC,EACA,OAAAC,EACA,QAAA2C,CACD,CACf,CACY,OAAO,IACR,MAAa,CACZ,OAAO,IACnB,CACS,CAAA,CACF,GAG4B,OAAO+sB,GAAQA,IAAS,IAAI,EAEvC,IAAIA,GAAQA,EAAK,WAAW,CAC/C,OAAQz4C,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,YAAYomB,EAAeC,EAAe,CAC9C,GAAI,CACF,MAAMQ,EAAW,GAAGT,CAAa,IAAIC,CAAa,GAGlD,GAAI,KAAK,gBAAkB,KAAK,cAAc,IAAIQ,CAAQ,EACxD,OAAO,KAAK,cAAc,IAAIA,CAAQ,EAGnC,KAAK,UAAU,MAAM,KAAK,KAAM,EAGrC,MAAMpK,EAAiB,MAAM,KAAK,OAAO,QAAS,EAI5CkK,EAAc,MAHJ,IAAI7d,EAAgB2T,EAAgByL,GAAa,KAAK,QAAQ,EAG5C,QAAQ9B,EAAeC,CAAa,EACtE,GAAIM,IAAgB,6CAClB,OAAO,KAIT,MAAMkC,EAAO,IAAI/f,EAAgB6d,EAAayB,GAAU,KAAK,QAAQ,EAC/D,CAACU,EAAQC,EAAQ5C,CAAQ,EAAI,MAAM,QAAQ,IAAI,CACnD0C,EAAK,OAAQ,EACbA,EAAK,OAAQ,EACbA,EAAK,YAAW,CACxB,CAAO,EAGK,CAAC6vB,EAAYC,CAAU,EAAI,MAAM,QAAQ,IAAI,CACjDvyB,IAAkB,MAAQ,CAAE,OAAQ,MAAO,KAAM,WAAY,SAAU,EAAI,EAAG,KAAK,aAAa0C,CAAM,EACtGzC,IAAkB,MAAQ,CAAE,OAAQ,MAAO,KAAM,WAAY,SAAU,EAAE,EAAK,KAAK,aAAa0C,CAAM,CAC9G,CAAO,EAEKN,EAAW,CACf,OAAQ,CAAE,QAASrC,EAAe,GAAGsyB,CAAY,EACjD,OAAQ,CAAE,QAASryB,EAAe,GAAGsyB,CAAY,EACjD,SAAU,CACR,SAAUxyB,EAAS,CAAC,EACpB,SAAUA,EAAS,CAAC,EACpB,mBAAoBA,EAAS,CAAC,CAC/B,EACD,YAAAQ,CACD,EAGD,YAAK,cAAc,IAAIE,EAAU4B,CAAQ,EACzC,KAAK,mBAAoB,EAElBA,CACR,OAAQzoB,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,qBAAqB2mB,EAAa,CACtC,GAAI,CACG,KAAK,UAAU,MAAM,KAAK,KAAM,EAGrC,MAAMkC,EAAO,IAAI/f,EACf6d,EACA,CACE,2CACA,2CACA,sGACA,qDACA,0CACD,EACD,KAAK,QACN,EAGK,CAACP,EAAeC,EAAeF,CAAQ,EAAI,MAAM,QAAQ,IAAI,CACjE0C,EAAK,OAAQ,EACbA,EAAK,OAAQ,EACbA,EAAK,YAAW,CACxB,CAAO,EAGK,CAAC6vB,EAAYC,CAAU,EAAI,MAAM,QAAQ,IAAI,CACjD,KAAK,aAAavyB,CAAa,EAC/B,KAAK,aAAaC,CAAa,CACvC,CAAO,EAED,MAAO,CACL,OAAQ,CAAE,GAAGqyB,EAAY,QAAStyB,CAAe,EACjD,OAAQ,CAAE,GAAGuyB,EAAY,QAAStyB,CAAe,EACjD,SAAU,CACR,SAAUF,EAAS,CAAC,EACpB,SAAUA,EAAS,CAAC,EACpB,mBAAoBA,EAAS,CAAC,CAC/B,EACD,YAAAQ,CACD,CACF,OAAQ3mB,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,sBAAsBgJ,EAAa,CACvC,GAAI,CACF,IAAIomB,EAOJ,GANIpmB,IAAgB,OAASA,IAAgB,OAC3ComB,EAAcJ,GAAgB,SAAS,EAC9BhmB,IAAgB,SACzBomB,EAAcJ,GAAgB,UAAU,GAGtC,CAACI,EAAa,OAAO,KAEzB,MAAMwpB,EAAO,IAAI9vC,EACfsmB,EACAinB,GACA,KAAK,QACN,EAEK,CAACjmB,EAAO/mB,CAAQ,EAAI,MAAM,QAAQ,IAAI,CAC1CuvC,EAAK,gBAAe,EAAG,KAAKlzC,GAAQA,EAAK,MAAM,EAC/CkzC,EAAK,SAAQ,CACrB,CAAO,EAED,OAAO,OAAOnyB,GAAmB2J,EAAO/mB,CAAQ,CAAC,CAClD,OAAQrJ,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,iBAAiBiJ,EAAc4vC,EAAoB,UAAU,KAAM,CACvE,GAAI,CAOF,MAAMlyB,EAAc,MANJ,IAAI7d,EAClB,UAAU,QACVof,GACA,KAAK,QACN,EAEiC,QAAQjf,EAAc4vC,CAAiB,EACzE,GAAIlyB,IAAgB,6CAClB,OAAO,KAGT,MAAMkC,EAAO,IAAI/f,EACf6d,EACAyB,GACA,KAAK,QACN,EAEK,CAACjC,EAAU2C,CAAM,EAAI,MAAM,QAAQ,IAAI,CAC3CD,EAAK,YAAa,EAClBA,EAAK,OAAM,CACnB,CAAO,EAEK,CAACrC,EAAUE,CAAQ,EAAIP,EACvBwJ,EAAW1mB,EAAa,YAAW,IAAO6f,EAAO,YAAa,EAG9D2C,EAAgB,IAAI3iB,EACxBG,EACAof,GACA,KAAK,QACN,EACKywB,EAAqB,IAAIhwC,EAC7B+vC,EACAxwB,GACA,KAAK,QACN,EACK,CAACyH,EAAeipB,CAAkB,EAAI,MAAM,QAAQ,IAAI,CAC5DttB,EAAc,SAAU,EACxBqtB,EAAmB,SAAQ,CACnC,CAAO,EAGD,OAAInpB,EACK,OAAOlJ,GAAmBC,EAAUqyB,CAAkB,CAAC,EACvD,OAAOtyB,GAAmBD,EAAUsJ,CAAa,CAAC,EAElD,OAAOrJ,GAAmBD,EAAUuyB,CAAkB,CAAC,EACvD,OAAOtyB,GAAmBC,EAAUoJ,CAAa,CAAC,CAE5D,OAAQ9vB,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,SAASiJ,EAAc,CAC3B,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,0BAA0B,EAG5C,GAAI,CACF,GAAI,KAAK,gBAAkB,KAAK,UAAU,IAAIA,CAAY,EACxD,OAAO,KAAK,UAAU,IAAIA,CAAY,EAGnC,KAAK,UAAU,MAAM,KAAK,KAAM,EAErC,MAAMT,EAAU,MAAM,KAAK,SAAS,WAAY,EAAC,KAAK4T,GAAWA,EAAQ,OAAO,EAC1E0C,EAAYoH,GAAkB1d,CAAO,EAE3C,GAAI,CAACsW,EACH,MAAM,IAAI,MAAM,uBAAuB,EAGzC,MAAMpC,EAAU,IAAI5T,EAClBgW,EAAU,QACVoJ,GACA,KAAK,QACN,EAEKS,EAAY,MAAMjM,EAAQ,eAAgB,EAC1CynB,EAAc,MAAM,KAAK,OAAO,WAAY,EAE5C6U,EAAc,IAAI,IAClBpwB,EAAQ,CAAE,EAEV8E,EAAY,GACZurB,EAAkB,KAAK,IAAI,OAAOtwB,CAAS,EAAG,GAAG,EAEvD,QAAS/c,EAAI,EAAGA,EAAIqtC,EAAiBrtC,GAAK8hB,EAAW,CACnD,MAAMwrB,EAAmB,KAAK,IAAIxrB,EAAWurB,EAAkBrtC,CAAC,EAC1DgiB,EAAQ,MAAM,KAAK,CAAE,OAAQsrB,CAAkB,EAAE,CAACvtC,EAAGkiB,IAAMjiB,EAAIiiB,CAAC,EAEhE2qB,EAAgB,MAAM,QAAQ,IAClC5qB,EAAM,IAAItmB,GAASoV,EAAQ,SAASpV,CAAK,CAAC,CAC3C,EAUK6xC,EARgBX,EAAc,IAAIn5B,GACtC,IAAIvW,EACFuW,EACA,CAAC,GAAG+I,GAAU,oDAAoD,EAClE,KAAK,QACjB,CACS,EAEsC,IAAI,MAAOS,EAAMuwB,IAAQ,CAC9D,GAAI,CACF,MAAMzyB,EAAc6xB,EAAcY,CAAG,EACrC,GAAIJ,EAAY,IAAIryB,CAAW,EAAG,OAAO,KAEzC,KAAM,CAAC+E,EAAStF,EAAeC,EAAeF,CAAQ,EAAI,MAAM,QAAQ,IAAI,CAC1E0C,EAAK,UAAUsb,CAAW,EAC1Btb,EAAK,OAAQ,EACbA,EAAK,OAAQ,EACbA,EAAK,YAAW,CAC9B,CAAa,EAED,GAAIzC,EAAc,gBAAkBnd,EAAa,YAAa,GAC1Dod,EAAc,YAAW,IAAOpd,EAAa,YAAW,EAAI,CAE9D,KAAM,CAACyvC,EAAYC,CAAU,EAAI,MAAM,QAAQ,IAAI,CACjD,KAAK,aAAavyB,CAAa,EAC/B,KAAK,aAAaC,CAAa,CAC/C,CAAe,EAED,MAAO,CACL,QAASM,EACT,OAAQ,CAAE,QAASP,EAAe,GAAGsyB,CAAY,EACjD,OAAQ,CAAE,QAASryB,EAAe,GAAGsyB,CAAY,EACjD,SAAAxyB,EACA,MAAOuF,EAAU,CAClB,CACf,CACY,OAAO,IACR,MAAe,CACd,OAAO,IACnB,CACA,CAAS,EAGK2tB,GADe,MAAM,QAAQ,IAAIF,CAAgB,GACrB,OAAOpI,GAAUA,IAAW,IAAI,EAElE,UAAWA,KAAUsI,EACdL,EAAY,IAAIjI,EAAO,OAAO,IACjCiI,EAAY,IAAIjI,EAAO,OAAO,EAC9BnoB,EAAM,KAAKmoB,CAAM,GAIrB,GAAInoB,EAAM,QAAU,GAAI,KAChC,CAEM,OAAAA,EAAM,KAAK,CAAC9hB,EAAGC,IACTD,EAAE,QAAUC,EAAE,MAAc,EACzBD,EAAE,MAAQ,GAAK,CACvB,EAED,KAAK,UAAU,IAAImC,EAAc2f,CAAK,EACtC,KAAK,gBAAkB,KAAK,IAAK,EACjC,KAAK,mBAAoB,EAElBA,CACR,OAAQ5oB,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,gBAAgBiJ,EAAck7B,EAAa,CAC/C,GAAI,CAIF,GAHK,KAAK,UAAU,MAAM,KAAK,KAAM,EAGjCl7B,IAAiB,MAAO,CAC1B,MAAMyiB,EAAU,MAAM,KAAK,SAAS,WAAWyY,CAAW,EAC1D,OAAOpjB,GAAmB2K,CAAO,CACzC,CAGM,MAAMxhB,EAAQ,IAAIpB,EAChBG,EACAof,GACA,KAAK,QACN,EAEK,CAACqD,EAASriB,CAAQ,EAAI,MAAM,QAAQ,IAAI,CAC5Ca,EAAM,UAAUi6B,CAAW,EAC3Bj6B,EAAM,SAAQ,CACtB,CAAO,EAED,OAAOuc,GAAmBiF,EAASriB,CAAQ,CAC5C,OAAQrJ,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,YAAYomB,EAAeC,EAAe,CAC9C,GAAI,CACF,MAAMQ,EAAW,GAAGT,CAAa,IAAIC,CAAa,GAGlD,GAAI,KAAK,gBAAkB,KAAK,cAAc,IAAIQ,CAAQ,EACxD,OAAO,KAAK,cAAc,IAAIA,CAAQ,EAGnC,KAAK,UAAU,MAAM,KAAK,KAAM,EAGrC,MAAMpK,EAAiB,MAAM,KAAK,OAAO,QAAS,EAI5CkK,EAAc,MAHJ,IAAI7d,EAAgB2T,EAAgByL,GAAa,KAAK,QAAQ,EAG5C,QAAQ9B,EAAeC,CAAa,EACtE,GAAIM,IAAgB,6CAClB,OAAO,KAIT,MAAMkC,EAAO,IAAI/f,EAAgB6d,EAAayB,GAAU,KAAK,QAAQ,EAC/D,CAACU,EAAQC,EAAQ5C,CAAQ,EAAI,MAAM,QAAQ,IAAI,CACnD0C,EAAK,OAAQ,EACbA,EAAK,OAAQ,EACbA,EAAK,YAAW,CACxB,CAAO,EAGK,CAAC6vB,EAAYC,CAAU,EAAI,MAAM,QAAQ,IAAI,CACjDvyB,IAAkB,MAAQ,CAAE,OAAQ,MAAO,KAAM,WAAY,SAAU,EAAI,EAAG,KAAK,aAAa0C,CAAM,EACtGzC,IAAkB,MAAQ,CAAE,OAAQ,MAAO,KAAM,WAAY,SAAU,EAAE,EAAK,KAAK,aAAa0C,CAAM,CAC9G,CAAO,EAEKN,EAAW,CACf,OAAQ,CAAE,QAASrC,EAAe,GAAGsyB,CAAY,EACjD,OAAQ,CAAE,QAASryB,EAAe,GAAGsyB,CAAY,EACjD,SAAU,CACR,SAAUxyB,EAAS,CAAC,EACpB,SAAUA,EAAS,CAAC,EACpB,mBAAoBA,EAAS,CAAC,CAC/B,EACD,YAAAQ,CACD,EAGD,YAAK,cAAc,IAAIE,EAAU4B,CAAQ,EACzC,KAAK,mBAAoB,EAElBA,CACR,OAAQzoB,EAAO,CACd,MAAMA,CACZ,CACA,CAGE,MAAM,gBAAgBipB,EAAQC,EAAQ2F,EAAW7C,EAAYC,EAAYnU,EAAI,CAC3E,GAAI,CACG,KAAK,QAAQ,MAAM,KAAK,KAAM,EAEnC,MAAMkT,EAAW,OAAO,KAAK,MAAM,KAAK,IAAG,EAAK,GAAI,EAAI,GAAK,EAAE,EAGzDsuB,EAAerwB,EAAO,YAAa,IAAK,UAAU,KAAK,YAAa,EACpEswB,EAAerwB,EAAO,YAAa,IAAK,UAAU,KAAK,YAAa,EAE1E,IAAIqB,EACJ,GAAI+uB,GAAgBC,EAAc,CAEhC,MAAMrvC,EAAQovC,EAAepwB,EAASD,EAChCouB,EAAiBiC,EAAertB,EAAaD,EAC7CsrB,EAAegC,EAAettB,EAAaC,EAEjD1B,EAAK,MAAM,KAAK,OAAO,mBACrBrgB,EACA2kB,EACAwoB,EACAC,EACAx/B,EACAkT,EACA,CACE,SAAU6rB,GAAiB,GAAO,CAC9C,CACS,CACT,MAEQtsB,EAAK,MAAM,KAAK,OAAO,gBACrBtB,EACAC,EACA2F,EACA7C,EACAC,EACAnU,EACAkT,EACA,CACE,SAAU6rB,GAAiB,GAAO,CAC9C,CACS,EAGH,OAAOtsB,CACR,OAAQvqB,EAAO,CACd,MAAMA,CACZ,CACA,CAEE,MAAM,mDAAmDurB,EAAUC,EAAcrqB,EAAM2W,EAAIkT,EAAU,CACnG,OAAK,KAAK,QAAQ,MAAM,KAAK,KAAM,EAC5B,KAAK,OAAO,mDACjBO,EACAC,EACArqB,EACA2W,EACAkT,CACD,CACL,CAEE,MAAM,mDAAmDQ,EAAcrqB,EAAM2W,EAAIkT,EAAUif,EAAS,CAClG,OAAK,KAAK,QAAQ,MAAM,KAAK,KAAM,EAC5B,KAAK,OAAO,mDACjBze,EACArqB,EACA2W,EACAkT,EACAif,CACD,CACL,CAEE,MAAM,sBAAsB1e,EAAUC,EAAcrqB,EAAM2W,EAAIkT,EAAU,CACtE,OAAK,KAAK,QAAQ,MAAM,KAAK,KAAM,EAC5B,KAAK,OAAO,sBACjBO,EACAC,EACArqB,EACA2W,EACAkT,CACD,CACL,CAEE,MAAM,sBAAsBQ,EAAcrqB,EAAM2W,EAAIkT,EAAUif,EAAS,CACrE,OAAK,KAAK,QAAQ,MAAM,KAAK,KAAM,EAC5B,KAAK,OAAO,sBACjBze,EACArqB,EACA2W,EACAkT,EACAif,CACD,CACL,CAEE,MAAM,sDAAsD1e,EAAUC,EAAcrqB,EAAM2W,EAAIkT,EAAU,CACtG,OAAK,KAAK,QAAQ,MAAM,KAAK,KAAM,EAC5B,KAAK,OAAO,sDACjBO,EACAC,EACArqB,EACA2W,EACAkT,EACA,CACE,SAAU6rB,GAAiB,GAAO,CAC1C,CACK,CACL,CACA,CCl8CO,SAAS2C,IAAc,CAC5B,MAAMxxC,EAAeC,GAAiB,EAChC,CAAE,KAAMC,CAAc,EAAGC,GAAiB,EAOhD,OALiBxE,EAAAA,QAAQ,IACnB,CAACqE,GAAgB,CAACE,EAAqB,KACpC,IAAIouC,GAAuBtuC,EAAcE,CAAY,EAC3D,CAACF,EAAcE,CAAY,CAAC,CAGjC,CCTO,MAAMsoC,GAAgB,CAC3B,CACE,QAAS,MACT,OAAQ,MACR,KAAM,WACN,SAAU,GACV,KAAM,gBACP,EACD,CACE,QAAStqB,GAAkB,KAC3B,OAAQ,OACR,KAAM,mBACN,SAAU,GACV,KAAM,gBACP,EACD,CACE,QAASA,GAAkB,KAC3B,OAAQ,OACR,KAAM,WACN,SAAU,EACV,KAAM,iBACP,EACD,CACE,QAASA,GAAkB,KAC3B,OAAQ,OACR,KAAM,aACN,SAAU,EACV,KAAM,iBACV,CACA,EAGauzB,GAAe,CAC1B,CACE,OAAQ,MACR,KAAM,QACN,SAAU,GACV,KAAM,aACN,SAAU,EACX,EACD,CACE,QAAS,6CACT,OAAQ,SACR,KAAM,gBACN,SAAU,GACV,KAAM,YACP,EACD,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,OACN,SAAU,GACV,KAAM,WACP,EACD,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,gBACN,SAAU,GACV,KAAM,UACV,CACA,EAGaC,GAAkBlxC,GAAY,CACzC,OAAQA,EAAO,CACb,IAAK,OACH,OAAOixC,GACT,IAAK,MACH,MAAO,CACL,CACE,QAAS,MACT,OAAQ,MACR,KAAM,WACN,SAAU,GACV,KAAM,gBACP,EACD,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,mBACN,SAAU,GACV,KAAM,gBACP,EACD,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,WACN,SAAU,EACV,KAAM,iBACP,EACD,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,aACN,SAAU,EACV,KAAM,iBAChB,CACO,EACH,QACE,OAAOjJ,GAAc,OAAOtmC,GAAS,CAACA,EAAM,SAAWA,EAAM,UAAY1B,CAAO,CACtF,CACA,EAEamxC,GAAmB,MAAOzvC,EAAO1B,IAAY,CAExD,GAAI,CAAC0B,EACH,MAAO,CACL,QAAS,GACT,OAAQ,UACR,KAAM,gBACN,SAAU,GACV,KAAM,qBACN,SAAU,EACX,EAIH,MAAMjB,EAAe,OAAOiB,GAAU,SAAWA,EAAQA,EAAM,QAC/D,GAAI,CAACjB,EACH,MAAO,CACL,QAAS,GACT,OAAQ,UACR,KAAM,gBACN,SAAU,GACV,KAAM,qBACN,SAAU,EACX,EAKH,MAAMmoC,EADcsI,GAAelxC,CAAO,EACV,KAAKgY,GAC/B,CAACA,EAAE,SAAW,CAACvX,EAAqB,GACjCuX,EAAE,QAAQ,YAAW,IAAOvX,EAAa,YAAa,CAC9D,EAED,GAAImoC,EACF,MAAO,CACL,GAAGlnC,EACH,GAAGknC,EACH,SAAU,EACX,EAIH,GAAI,CACF,MAAMhc,EAAkB,MAAMtgB,GAA4B7L,CAAY,EACtE,GAAImsB,EACF,MAAO,CACL,GAAGlrB,EACH,KAAMkrB,EAAgB,KACtB,OAAQA,EAAgB,QAAU,cAClC,SAAUA,EAAgB,UAAY,GACtC,KAAMA,EAAgB,KACtB,SAAUA,EAAgB,SAC1B,YAAaA,EAAgB,YAC7B,SAAU,EACX,CAEJ,OAAQp1B,EAAO,CACd,QAAQ,MAAM,sCAAuCA,CAAK,CAC9D,CAGE,MAAO,CACL,GAAGkK,EACH,KAAMA,EAAM,MAAQ,cACpB,OAAQA,EAAM,QAAU,QACxB,SAAUA,EAAM,UAAY,GAC5B,KAAMA,EAAM,MAAQ,qBACpB,SAAU,EACX,CACH,EAEa0vC,GAAe,CAAC1vC,EAAO1B,IAAY,CAC9C,GAAI,CAAC0B,EAAO,OAAO2vC,GAA0B,IAAI,EAIjD,MAAMzI,EADcsI,GAAelxC,CAAO,EACV,KAAKgY,GAC/B,CAACA,EAAE,SAAW,CAACtW,EAAM,QAAgB,GAClCsW,EAAE,QAAQ,YAAa,IAAKtW,EAAM,QAAQ,YAAa,CAC/D,EAED,GAAIknC,EACF,OAAOA,EAAY,KAIrB,GAAIlnC,EAAM,MAAQA,EAAM,SAAU,CAChC,MAAM8sB,EAAU9sB,EAAM,MAAQ4M,GAAW5M,EAAM,QAAQ,EACvD,GAAI,CAAC8sB,EAAQ,SAAS,mBAAmB,EACvC,OAAOA,CAEb,CAGE,OAAO6iB,GAA0B3vC,EAAM,QAAU,IAAI,CACvD,EAGM2vC,GAA6B5mC,GAAW,CAC5C,MAAM6mC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,MAAQ,GACfA,EAAO,OAAS,GAChB,MAAMC,EAAMD,EAAO,WAAW,IAAI,EAGlC,OAAAC,EAAI,UAAY,UAChBA,EAAI,UAAW,EACfA,EAAI,IAAI,GAAI,GAAI,GAAI,EAAG,KAAK,GAAK,CAAC,EAClCA,EAAI,KAAM,EAGVA,EAAI,UAAY,UAChBA,EAAI,KAAO,kBACXA,EAAI,UAAY,SAChBA,EAAI,aAAe,SACnBA,EAAI,SAAS9mC,EAAO,MAAM,EAAG,CAAC,EAAE,YAAW,EAAI,GAAI,EAAE,EAE9C6mC,EAAO,UAAU,WAAW,CACrC,ECvMMtJ,GAAgB,CAEpB,MAAO,CACL,CACE,OAAQ,MACR,KAAM,QACN,SAAU,GACV,KAAM,aACN,SAAU,EACZ,EACA,CACE,QAAS,6CACT,OAAQ,SACR,KAAM,gBACN,SAAU,GACV,KAAM,YACR,EACA,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,gBACN,SAAU,GACV,KAAM,UAAA,CAEV,EAEA,KAAM,CACJ,CACE,QAAS,MACT,OAAQ,MACR,KAAM,WACN,SAAU,GACV,KAAM,UACR,EACA,CACE,QAAStqB,GAAkB,IAAI,EAAE,KACjC,OAAQ,OACR,KAAM,mBACN,SAAU,GACV,KAAM,UACR,EACA,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,WACN,SAAU,EACV,KAAM,WACR,EACA,CACE,QAASA,GAAkB,IAAI,EAAE,KACjC,OAAQ,OACR,KAAM,YACN,SAAU,EACV,KAAM,WAAA,CAEV,EAEA,IAAK,CACH,CACE,QAAS,MACT,OAAQ,MACR,KAAM,WACN,SAAU,GACV,KAAM,UACR,EACA,CACE,QAASA,GAAkB,GAAG,EAAE,KAChC,OAAQ,OACR,KAAM,mBACN,SAAU,GACV,KAAM,UACR,EACA,CACE,QAASA,GAAkB,GAAG,EAAE,KAChC,OAAQ,OACR,KAAM,OACN,SAAU,EACV,KAAM,WAAA,CACR,CAEJ,EAGMuqB,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA8MlBuJ,OAAmB,IACnB9N,GAAiB,IAGjB+N,GAAkB,CACtB,KAAM,2DACN,IAAK,kDACP,EAEA,SAAwB5I,GAAoB,CAAE,OAAAv4B,EAAQ,QAAAC,EAAS,SAAA43B,EAAU,qBAAAW,GAAwB,CAC/F,KAAM,CAAE,QAASnN,CAAY,EAAIt8B,GAAW,EACtC,CAAC0pC,EAAaC,CAAc,EAAIx0C,EAAAA,SAAS,EAAE,EACXA,EAAAA,SAAS,IAAI,EACnD,KAAM,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,EAAE,EAC/B,CAAC20C,EAAgBC,CAAiB,EAAI50C,EAAAA,SAAS,CAAC,EAChD,CAACk9C,EAAeC,CAAgB,EAAIn9C,EAAAA,SAAS,CAAA,CAAE,EACTA,EAAAA,SAAS,CAAE,CAAA,EACvD,KAAM,CAAC+0C,EAAmBC,CAAoB,EAAIh1C,EAAAA,SAAS,CAAA,CAAE,EACvD,CAACud,EAAgBC,CAAiB,EAAIxd,EAAAA,SAAS,IAAI,EAEnDo9C,EAAyB,SAAY,CACzCjY,EAAa,EAAI,EACjB1H,EAAS,EAAE,EAEP,GAAA,CAEE,GAAA,CAAC,OAAO,SAAU,CACpB,QAAQ,KAAK,4BAA4B,EACzCA,EAAS,4CAA4C,EACrD0H,EAAa,EAAK,EAClB,MAAA,CAIF,IAAIkY,EAAU,EACd,KAAO,CAAC,OAAO,SAAS,SAAWA,EAAU,IAC3C,MAAM,IAAI,QAAQxvB,GAAW,WAAWA,EAAS,GAAG,CAAC,EACrDwvB,IAGE,GAAA,CAAC,OAAO,SAAS,QACb,MAAA,IAAI,MAAM,mCAAmC,EAI/C,MAAAC,EAAa,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,aAAe,CAAA,EAAE,MAAazE,GAAA,CAC/E,cAAA,MAAM,yBAA0BA,CAAG,EACrC,IAAI,MAAM,mCAAmC,CAAA,CACpD,EAEKrtC,EAAU,SAAS8xC,EAAY,EAAE,EAC/B,QAAA,IAAI,oBAAqB9xC,CAAO,EACxCgS,EAAkBhS,CAAO,EAGzB,MAAMqe,EAAW,GAAGsd,CAAW,IAAI37B,CAAO,GACpCse,EAAakzB,GAAa,IAAInzB,CAAQ,EAC5C,GAAIC,GAAc,KAAK,IAAQ,EAAAA,EAAW,UAAYolB,GAAgB,CAC5D,QAAA,IAAI,yBAA0BplB,CAAU,EAChDqzB,EAAiBrzB,EAAW,QAAQ,EACpCkrB,EAAqBlrB,EAAW,iBAAiB,EACjDqb,EAAa,EAAK,EAClB,MAAA,CAIE,IAAAoY,EAAYb,GAAelxC,CAAO,EACtC,MAAMgyC,EAAc,CAAC,EAGjB,GAAAhyC,IAAY,MAAQA,IAAY,IAC9B,GAAA,CACI,MAAAiyC,EAAgBR,GAAgBzxC,CAAO,EAC7C,QAAQ,IAAI,mCAAoC,GAAGiyC,CAAa,IAAItW,CAAW,iBAAiB,EAEhG,MAAMjzB,EAAW,MAAM,MACrB,GAAGupC,CAAa,IAAItW,CAAW,kBAC/B,CACE,QAAS,CACP,OAAU,kBAAA,CACZ,CAEJ,EAGA,GADQ,QAAA,IAAI,8BAA+BjzB,EAAS,MAAM,EACtDA,EAAS,GAAI,CACT,MAAAxL,EAAO,MAAMwL,EAAS,KAAK,EACzB,QAAA,IAAI,0BAA2BxL,CAAI,EAErC,MAAAg1C,EAAmBh1C,EACtB,OAAe3D,IAAA,CACR,MAAA44C,GAAe54C,GAAK,OAAO,OAAS,UACvB6G,GAAiB7G,GAAK,OAAO,OAAO,GACpC,CAACA,GAAK,OAAO,QAAQ,SAAS,IAAI,GAClC,CAACA,GAAK,OAAO,QAAQ,SAAS,QAAQ,EAGnD64C,GAAWj4B,GAAQ,CACnB,GAAA,CAACA,EAAY,MAAA,GACX,MAAAk4B,EAAWl4B,EAAI,YAAY,EAC1B,OAAAk4B,EAAS,SAAS,MAAM,GACxBA,EAAS,SAAS,KAAK,GACvBA,EAAS,SAAS,WAAW,CACtC,EAEMC,EAAiB,CAACF,GAAQ74C,GAAK,OAAO,MAAM,GAAK,CAAC64C,GAAQ74C,GAAK,OAAO,IAAI,EAG1Eg5C,EAAcR,EAAU,KAAK/5B,GACjCA,EAAE,SAAS,gBAAkBze,GAAK,OAAO,SAAS,YAAY,CAChE,EAEO,OAAA44C,IAAgBG,GAAkB,CAACC,CAAA,CAC3C,EACA,IAAah5C,KAAA,CACZ,QAASA,GAAK,MAAM,QACpB,OAAQA,GAAK,MAAM,QAAU,UAC7B,KAAMA,GAAK,MAAM,MAAQ,gBACzB,SAAU,SAASA,GAAK,MAAM,UAAY,IAAI,EAC9C,KAAMA,GAAK,MAAM,UAAY,qBAC7B,QAASA,GAAK,OAAS,GAAA,EACvB,EAEI,QAAA,IAAI,+BAAgC24C,CAAgB,EAC5DH,EAAY,CAAC,GAAGA,EAAW,GAAGG,CAAgB,CAAA,QAEzC7E,EAAK,CACJ,QAAA,KAAK,oCAAqCA,CAAG,CAAA,CAKrD,GAAA,CACF,QAAQ,IAAI,kCAAkC,EAC9C,MAAMmF,EAAgB,MAAM,OAAO,SAAS,QAAQ,CAClD,OAAQ,iBACR,OAAQ,CAAC7W,EAAa,QAAQ,CAAA,CAC/B,EACO,QAAA,IAAI,sBAAuB6W,CAAa,EAC1C,MAAAC,EAAgB,OAAOD,CAAa,EACpCE,EAAe1yC,IAAY,MAAQ,MAAQ,MAC3C4pC,EAAmBrxB,GAAmBk6B,CAAa,EACzD,QAAQ,IAAI,4BAA6B,CAAE,OAAQC,EAAc,QAAS9I,EAAkB,EAE5FoI,EAAYU,CAAY,EAAI,CAC1B,IAAKD,EAAc,SAAS,EAC5B,UAAW7I,CACb,QACOyD,EAAK,CACJ,QAAA,MAAM,iCAAkCA,CAAG,EAC7C,MAAAqF,EAAe1yC,IAAY,MAAQ,MAAQ,MACjDgyC,EAAYU,CAAY,EAAI,CAAE,IAAK,IAAK,UAAW,GAAI,CAAA,CAIjD,QAAA,IAAI,wDAAyDX,CAAS,EAC9E,MAAMY,EAAgBZ,EACnB,OAAOrwC,GAAS,CAACA,EAAM,UAAYA,EAAM,SAAWA,EAAM,UAAY,KAAK,EAC3E,IAAI,MAAOA,GAAU,CAChB,GAAA,CACM,QAAA,IAAI,8BAA+BA,CAAK,EAShD,MAAMkxC,EADoB,aALbj5B,GAAgB,gBAAA,EAAkB,OAC7C,CAAC,SAAS,EACV,CAACgiB,CAAW,CAAA,EACZ,MAAM,CAAC,EAKT,QAAQ,IAAI,6BAA8B,CACxC,GAAIj6B,EAAM,QACV,KAAMkxC,CAAA,CACP,EAED,MAAMrK,GAAS,MAAM,OAAO,SAAS,QAAQ,CAC3C,OAAQ,WACR,OAAQ,CAAC,CACP,GAAI7mC,EAAM,QACV,KAAMkxC,CAAA,EACL,QAAQ,CAAA,CACZ,EAEO,QAAA,IAAI,sBAAuBrK,EAAM,EACnC,MAAArlB,GAAU,OAAOqlB,IAAU,GAAG,EAC9BE,GAAYxqB,GAAmBiF,GAASxhB,EAAM,UAAY,EAAE,EAElE,eAAQ,IAAI,yBAA0B,CACpC,MAAOA,EAAM,OACb,QAASwhB,GAAQ,SAAS,EAC1B,UAAAulB,EAAA,CACD,EAEM,CACL,MAAA/mC,EACA,QAASwhB,GAAQ,SAAS,EAC1B,UAAAulB,EACF,QACO4E,EAAK,CACZ,eAAQ,MAAM,oCAAoC3rC,EAAM,MAAM,IAAK2rC,CAAG,EAC/D,CACL,MAAA3rC,EACA,QAAS,IACT,UAAW,GACb,CAAA,CACF,CACD,EAEH,QAAQ,IAAI,mCAAmC,EAC/C,MAAMmxC,EAAe,MAAM,QAAQ,IAAIF,CAAa,EAC5C,QAAA,IAAI,+BAAgCE,CAAY,EAGxDA,EAAa,QAAQ,CAAC,CAAE,MAAAnxC,EAAO,QAAAwhB,EAAS,UAAAulB,KAAgB,CAC1CuJ,EAAAtwC,EAAM,OAAO,EAAI,CAC3B,IAAKwhB,EACL,UAAAulB,CACF,CAAA,CACD,EAGK,MAAAqK,EAAqBf,EAAU,IAAarwC,GAAA,CAC5C,IAAAwhB,EACJ,OAAIxhB,EAAM,UAAYA,EAAM,UAAY,MAEtCwhB,EAAU8uB,EAAYhyC,IAAY,MAAQ,MAAQ,KAAK,GAAG,WAAa,IAC9D0B,EAAM,SAAW,QAAU1B,IAAY,KAEhDkjB,EAAU8uB,EAAYt0B,GAAkB,IAAI,EAAE,IAAI,GAAG,WAAa,IAGlEwF,EAAU8uB,EAAYtwC,EAAM,OAAO,GAAG,WAAa,IAGrD,QAAQ,IAAI,yBAA0B,CACpC,MAAOA,EAAM,OACb,SAAUA,EAAM,SAChB,QAASA,EAAM,QACf,QAAAwhB,CAAA,CACD,EAEM,CACL,GAAGxhB,EACH,QAAAwhB,CACF,CAAA,CACD,EAED,QAAQ,IAAI,kBAAmB,CAC7B,YAAA8uB,EACA,mBAAAc,CAAA,CACD,EAGDtB,GAAa,IAAInzB,EAAU,CACzB,UAAW,KAAK,IAAI,EACpB,SAAU2zB,EACV,kBAAmBc,CAAA,CACpB,EAEDnB,EAAiBK,CAAW,EAC5BxI,EAAqBsJ,CAAkB,QAChCt7C,EAAO,CACN,QAAA,MAAM,mCAAoCA,CAAK,EACvDy6B,EAAS,2CAA2C,CAAA,QACpD,CACA0H,EAAa,EAAK,CAAA,CAEtB,EAGAjlC,EAAAA,UAAU,IAAM,CACd,MAAMq+C,EAAa,SAAY,CAEzB,GAAA,CAAC,OAAO,UAAU,QAAS,CAC7B,QAAQ,KAAK,6BAA6B,EAC1C,MAAA,CAGE,GAAA,CACI,MAAAC,EAAa,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACpEC,EAAiB,SAASD,EAAY,EAAE,EAC9ChhC,EAAkBihC,CAAc,QACzBz7C,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,CAAA,CAElD,EAUM07C,EAAmB,YAAY,IAAM,CACrC,OAAO,UAAU,UACRH,EAAA,EACX,cAAcG,CAAgB,IAE/B,GAAI,EAGP,MAAO,IAAM,CACX,cAAcA,CAAgB,CAChC,CACF,EAAG,EAAE,EAGLx+C,EAAAA,UAAU,IAAM,CACSk9C,EAAA,GACtB,CAACthC,EAAQqrB,EAAawN,EAAgBJ,CAAW,CAAC,EAG/C,MAAAgB,EAAiB5uC,EAAAA,QAAQ,IAAM,CAC/B,GAAA,CAACouC,EAAmB,MAAO,CAAC,EAG5B,GAAAnpC,GAAiB2oC,CAAW,EAAG,CACjC,MAAMrnC,EAAQ6nC,EAAkB,QAC9BvxB,EAAE,SAAS,YAAY,IAAM+wB,EAAY,YAAY,CACvD,EACA,OAAOrnC,EAAQ,CAACA,CAAK,EAAI,CAAC,CAAA,CAGtB,MAAAsoC,EAAcjB,EAAY,YAAY,EACrC,OAAAQ,EAAkB,OAAgB7nC,GAClCA,EAEHA,EAAM,QAAQ,YAAA,EAAc,SAASsoC,CAAW,GAChDtoC,EAAM,MAAM,cAAc,SAASsoC,CAAW,GAC9CtoC,EAAM,SAAS,YAAY,EAAE,SAASsoC,CAAW,EAJhC,EAMpB,CAAA,EACA,CAACjB,EAAaQ,CAAiB,CAAC,EAGnC70C,EAAAA,UAAU,IAAM,EACe,SAAY,CACvC,GAAI,GAAC0L,GAAiB2oC,CAAW,GAAK,CAAC,OAAO,UAE1C,GAAA,CACF,MAAMvsC,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAI3D,GAHgB,MAAMxX,EAAS,aAAa,KAAUkxB,GAAA,OAAOA,EAAE,OAAO,CAAC,IAGvD,MAAO,CACT,MAAAzK,EAAgB,IAAI3iB,EAC9ByoC,EACA,CACE,0CACA,wCACA,2CACA,oDACF,EACMvsC,CACF,EAEA,CAACiO,EAAQsa,EAAMlkB,EAAUqiB,CAAO,EAAI,MAAM,QAAQ,IAAI,CAC1D,OAAO,SAAS,QAAQ,CACtB,OAAQ,WACR,OAAQ,CAAC,CACP,GAAI6lB,EACJ,KAAM9lB,EAAc,UAAU,mBAAmB,QAAQ,CAAA,EACxD,QAAQ,CACZ,CAAA,EAAE,KAAa/lB,GAAA+lB,EAAc,UAAU,qBAAqB,SAAU/lB,CAAI,EAAE,CAAC,CAAC,EAC/E,OAAO,SAAS,QAAQ,CACtB,OAAQ,WACR,OAAQ,CAAC,CACP,GAAI6rC,EACJ,KAAM9lB,EAAc,UAAU,mBAAmB,MAAM,CAAA,EACtD,QAAQ,CACZ,CAAA,EAAE,KAAa/lB,GAAA+lB,EAAc,UAAU,qBAAqB,OAAQ/lB,CAAI,EAAE,CAAC,CAAC,EAC7E,OAAO,SAAS,QAAQ,CACtB,OAAQ,WACR,OAAQ,CAAC,CACP,GAAI6rC,EACJ,KAAM9lB,EAAc,UAAU,mBAAmB,UAAU,CAAA,EAC1D,QAAQ,CACZ,CAAA,EAAE,KAAa/lB,GAAA+lB,EAAc,UAAU,qBAAqB,WAAY/lB,CAAI,EAAE,CAAC,CAAC,EACjF,OAAO,SAAS,QAAQ,CACtB,OAAQ,WACR,OAAQ,CAAC,CACP,GAAI6rC,EACJ,KAAM9lB,EAAc,UAAU,mBAAmB,YAAa,CAAC0Y,CAAW,CAAC,CAAA,EAC1E,QAAQ,CAAA,CACZ,EAAE,KAAaz+B,GAAA+lB,EAAc,UAAU,qBAAqB,YAAa/lB,CAAI,EAAE,CAAC,CAAC,CAAA,CACnF,EAEK+rC,EAAc,CAClB,QAASF,EACT,OAAAt+B,EACA,KAAAsa,EACA,SAAAlkB,EACA,QAASod,GAAmBiF,EAASriB,CAAQ,CAC/C,EAEqB2oC,EAAA,CAACP,CAAW,CAAC,EACjB0I,EAAA,CACf,CAAC5I,CAAW,EAAG,CACb,IAAK7lB,EAAQ,SAAS,EACtB,UAAWjF,GAAmBiF,EAASriB,CAAQ,CAAA,CACjD,CACD,CAAA,KACI,CACC,MAAAoiB,EAAgB,IAAI3iB,EACxByoC,EACA,CACE,0CACA,wCACA,2CACA,oDACF,EACAvsC,CACF,EAEM,CAACiO,EAAQsa,EAAMlkB,EAAUqiB,CAAO,EAAI,MAAM,QAAQ,IAAI,CAC1DD,EAAc,OAAA,EAAS,MAAM,IAAM,SAAS,EAC5CA,EAAc,KAAA,EAAO,MAAM,IAAM,eAAe,EAChDA,EAAc,SAAA,EAAW,MAAM,IAAM,EAAE,EACvCA,EAAc,UAAU0Y,CAAW,EAAE,MAAM,IAAM,GAAG,CAAA,CACrD,EAEKsN,EAAc,CAClB,QAASF,EACT,OAAAt+B,EACA,KAAAsa,EACA,SAAAlkB,EACA,QAASod,GAAmBiF,EAASriB,CAAQ,CAC/C,EAEqB2oC,EAAA,CAACP,CAAW,CAAC,EACjB0I,EAAA,CACf,CAAC5I,CAAW,EAAG,CACb,IAAK7lB,EAAQ,SAAS,EACtB,UAAWjF,GAAmBiF,EAASriB,CAAQ,CAAA,CACjD,CACD,CAAA,CAGHoxB,EAAS,EAAE,QACJob,EAAK,CACJ,QAAA,MAAM,+BAAgCA,CAAG,EACjDpb,EAAS,wEAAwE,CAAA,CAErF,GAEqB,CAAA,EACpB,CAAC8W,EAAapN,CAAW,CAAC,EAE7B,MAAMuM,EAAW,CAAC,CAAE,MAAAxmC,EAAO,SAAAymC,EAAU,WAAAC,KAAiB,CACpD,MAAM+K,EAAezxC,EAAM,SACzBgwC,EAAc,KAAQ,WAAa,IACnCA,EAAchwC,EAAM,OAAO,GAAG,WAAa,IACvC0xC,EAAiB1xC,EAAM,SAC3B,CAACgwC,EAAc,IACf,CAACA,EAAchwC,EAAM,OAAO,EAG5B,OAAAtI,EAAA,KAAC8J,EAAO,OAAP,CACC,QAAS,IAAMilC,EAASzmC,CAAK,EAC7B,UAAW,uHACT0mC,EAAa,0CAA4C,EAC3D,GACA,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,GAAI,EAC3B,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAExB,SAAA,CAAChvC,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAAuvC,EAAgBjnC,CAAK,EACtBtI,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,wDACZ,SAAA8M,EAAM,QAAU,UACnB,QACC,MAAI,CAAA,UAAU,2CACZ,SAAAA,EAAM,MAAQ,eACjB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACA9M,EAAAA,IAAC,OAAI,UAAU,aACb,eAAC,MAAI,CAAA,UAAU,wDACZ,SACCw+C,EAAAx+C,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,gDACV,QAAS,CAAE,QAAS,CAAC,GAAK,EAAG,EAAG,CAAE,EAClC,WAAY,CAAE,SAAU,IAAK,OAAQ,GAAS,CAAA,CAAA,EAGhDiwC,CAEJ,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAEJ,EAEME,EAAsB3xC,GAAA,CAC1B,MAAMwhB,EAAUxhB,EAAM,SACpBgwC,EAAc,KAAQ,WAAa,IACnCA,EAAchwC,EAAM,OAAO,GAAG,WAAa,IACtC,OAAA,WAAWwhB,CAAO,EAAI,CAC/B,EAGMylB,EAAmBjnC,GAAU,CAE3B,MAAAknC,EAAcZ,GAAcj2B,CAAc,GAAG,KAAUiG,GAAAA,EAAE,UAAYtW,EAAM,OAAO,EACxF,GAAIknC,GAAa,KAEb,OAAAxvC,EAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKg0C,EAAY,KAAM,IAAKA,EAAY,OAAQ,UAAU,sBAAuB,CAAA,EACtFh0C,EAAA,IAAC,MAAA,CACC,IAAKmd,IAAmB,MAAQ,aAAe,qBAC/C,IAAI,aACJ,UAAU,oEAAA,CAAA,CACZ,EACF,EAKE,MAAAyc,EAAU9sB,EAAM,OAASA,EAAM,SAAW4M,GAAW5M,EAAM,QAAQ,EAAI,MAC7E,OAAI8sB,GAAW,CAACA,EAAQ,SAAS,mBAAmB,EAEhD55B,EAAAA,IAAC,MAAI,CAAA,UAAU,mBACf,SAAAA,EAAA,IAAC,MAAA,CACC,IAAK45B,EACL,IAAK9sB,EAAM,OACX,UAAU,uBACV,QAAUtF,GAAM,CACdA,EAAE,OAAO,QAAU,KACfA,EAAA,OAAO,cAAc,UAAY;AAAA;AAAA,mEAEkBsF,EAAM,QAAQ,MAAM,EAAG,CAAC,EAAE,eAAiB,IAAI;AAAA;AAAA,2BAEvFqQ,IAAmB,MAAQ,aAAe,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,eAAA,CAM7E,CAAA,EAEJ,EAMF3Y,EAAA,KAAC,MAAI,CAAA,UAAU,8EACb,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,UAAU,mCAAoC,SAAM8M,EAAA,QAAQ,MAAM,EAAG,CAAC,EAAE,YAAY,GAAK,IAAK,CAAA,EACpG9M,EAAA,IAAC,MAAA,CACC,IAAKmd,IAAmB,MAAQ,aAAe,qBAC/C,IAAI,aACJ,UAAU,oEAAA,CAAA,CACZ,EACF,CAEJ,EAEMk4B,EAAoB,MAAOvoC,GAAU,CACrC,GAAA,CACF,GAAI,CAACA,EAAO,CACV,QAAQ,MAAM,wCAAwC,EACtDuwB,EAAS,yBAAyB,EAClC,MAAA,CAGE,IAAAiY,EAGJ,GAAIxoC,EAAM,UAAYA,EAAM,SAAW,MACxBwoC,EAAA,CACX,GAAGxoC,EACH,QAAS,MACT,SAAU,GACV,SAAU,EACZ,UAGOA,EAAM,SAAW,MAAO,CAC/B,GAAI,CAACqQ,GAAkB,CAAC2L,GAAkB3L,CAAc,GAAG,KAAM,CAC/D,QAAQ,MAAM,yCAAyC,EACvDkgB,EAAS,4CAA4C,EACrD,MAAA,CAEWiY,EAAA,CACX,GAAGxoC,EACH,QAASgc,GAAkB3L,CAAc,EAAE,IAC7C,CAAA,SAGO3R,GAAiB2oC,CAAW,EAC/B,GAAA,CACF,MAAMvsC,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDiP,EAAgB,IAAI3iB,EACxByoC,EACA,CACE,0CACA,wCACA,0CACF,EACAvsC,CACF,EAEM,CAACiO,EAAQsa,EAAMlkB,CAAQ,EAAI,MAAM,QAAQ,IAAI,CACjDoiB,EAAc,OAAA,EAAS,MAAM,IAAM,SAAS,EAC5CA,EAAc,KAAA,EAAO,MAAM,IAAM,eAAe,EAChDA,EAAc,SAAA,EAAW,MAAM,IAAM,EAAE,CAAA,CACxC,EAEYinB,EAAA,CACX,QAASnB,EACT,OAAAt+B,EACA,KAAAsa,EACA,SAAAlkB,EACA,SAAU,EACZ,QACOwsC,EAAK,CACJ,QAAA,MAAM,oCAAqCA,CAAG,EACtDpb,EAAS,0CAA0C,EACnD,MAAA,KAIC,CACC,GAAA,CAACvwB,EAAM,QAAS,CACV,QAAA,MAAM,wBAAyBA,CAAK,EAC5CuwB,EAAS,iCAAiC,EAC1C,MAAA,CAEWiY,EAAA,CACX,GAAGxoC,EACH,SAAUA,EAAM,UAAY,GAC5B,SAAU,EACZ,CAAA,CAIE,GAAA,CAACwoC,EAAW,SAAYA,EAAW,UAAY,OAAS,CAAC9pC,GAAiB8pC,EAAW,OAAO,EAAI,CAC1F,QAAA,MAAM,+BAAgCA,CAAU,EACxDjY,EAAS,uBAAuB,EAChC,MAAA,CAGFkW,EAAS+B,CAAU,EACX35B,EAAA,QACD/Y,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EACzCy6B,EAAA,0BAA4Bz6B,EAAM,OAAO,CAAA,CAEtD,EAGM87C,EAAkB,CACtB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CAAE,QAAS,CAAE,CACxB,EAEMC,EAAgB,CACpB,OAAQ,CAAE,QAAS,EAAG,MAAO,IAAM,EAAG,EAAG,EACzC,QAAS,CACP,QAAS,EACT,MAAO,EACP,EAAG,EACH,WAAY,CACV,KAAM,SACN,SAAU,EAAA,CAEd,EACA,KAAM,CACJ,QAAS,EACT,MAAO,IACP,EAAG,GACH,WAAY,CACV,SAAU,EAAA,CACZ,CAEJ,EAEMC,EAAwB,CAC5B,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,GAAA,CACnB,CAEJ,EAGE,OAAA5+C,EAAA,IAACinC,IACE,SACCvrB,GAAAlX,EAAAA,KAAC6X,IAAO,KAAMX,EAAQ,QAAAC,EAAkB,UAAU,gBAChD,SAAA,CAAA3b,EAAAA,IAAC,SAAO,SAAgBqzC,EAAA,CAAA,EAExBrzC,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,6CACV,cAAY,OACZ,SAAUowC,EACV,QAAQ,SACR,QAAQ,UACR,KAAK,QAAA,CACP,EAEA1+C,EAAAA,IAAC,MAAI,CAAA,UAAU,qDACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,SAAUqwC,EACV,QAAQ,SACR,QAAQ,UACR,KAAK,OAEL,SAACn6C,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,qHACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CAAa,UAAU,yDAAyD,SAEjF,eAAA,EAGA7X,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,gBACV,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EAEzB,SAAA,CAAAtO,EAAAA,IAAC,OAAI,UAAU,uEACb,eAACu1C,GAAS,CAAA,UAAU,gBAAgB,CACtC,CAAA,EACAv1C,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOm0C,EACP,SAAW3sC,GAAM4sC,EAAe5sC,EAAE,OAAO,KAAK,EAC9C,YAAY,kCACZ,UAAU,2NAAA,CACZ,EACAxH,EAAAA,IAACinC,IACE,SACCrkC,GAAA5C,EAAA,IAACsO,EAAO,EAAP,CACC,UAAU,4BACV,QAAS,CAAE,QAAS,EAAG,OAAQ,CAAE,EACjC,QAAS,CAAE,QAAS,EAAG,OAAQ,MAAO,EACtC,KAAM,CAAE,QAAS,EAAG,OAAQ,CAAE,EAE7B,SAAA1L,CAAA,CAAA,CAGP,CAAA,CAAA,CAAA,CACF,EAGA5C,EAAAA,IAAC,OAAI,UAAU,kEACb,eAACinC,GAAgB,CAAA,KAAK,OACnB,SACCnC,EAAA9kC,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,YACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,KAAM,CAAE,QAAS,CAAE,EAEjB,SAAA9J,EAAA,KAAC8J,EAAO,IAAP,CACD,UAAU,uFACR,QAAS,CAAE,QAAS,CAAC,GAAK,EAAG,EAAG,CAAE,EAClC,WAAY,CAAE,SAAU,IAAK,OAAQ,GAAS,EAE9C,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACf,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mDAAoD,CAAA,EACjEwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACf,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,+CAAgD,CAAA,EAC/DA,EAAAA,IAAC,MAAI,CAAA,UAAU,+CAAgD,CAAA,CAAA,CAC/D,CAAA,CAAA,EACF,EACFA,EAAAA,IAAC,MAAI,CAAA,UAAU,+CAAgD,CAAA,CAAA,CAAA,CAAA,CAC/D,CAAA,EAGJA,EAAA,IAACsO,EAAO,IAAP,CACC,SAAUswC,EACV,QAAQ,SACR,QAAQ,UACR,UAAU,gBAET,SAAApzC,GAAiB2oC,CAAW,EAE3Bn0C,EAAAA,IAACsO,EAAO,IAAP,CAAW,UAAU,YACnB,SAAA6mC,EAAe,IAAKroC,GACnB9M,EAAA,IAACszC,EAAA,CAEC,MAAAxmC,EACA,SAAUuoC,EACV,WAAYnB,IAAyBpnC,EAAM,OAAA,EAHtCA,EAAM,SAAWA,EAAM,MAAA,CAK/B,CACH,CAAA,EAKEtI,OAAAuO,EAAAA,SAAA,CAAA,SAAA,CAAAvO,EAAA,KAAC8J,EAAO,IAAP,CAAW,UAAU,OACxB,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAAg0B,GAAA,CAAQ,UAAU,wBAAyB,CAAA,EAC3Ch0B,EAAA,IAAA,KAAA,CAAG,UAAU,oDAAoD,SAElE,aAAA,CAAA,CAAA,EACF,EACCA,EAAAA,IAAAsO,EAAO,IAAP,CAAW,UAAU,YACjB,SACE6mC,EAAA,OAAOsJ,CAAU,EACjB,IAAK3xC,GACJ9M,EAAA,IAACszC,EAAA,CAEC,MAAAxmC,EACA,SAAUuoC,EACR,WAAYnB,IAAyBpnC,EAAM,OAAA,EAHtCA,EAAM,SAAWA,EAAM,MAAA,CAKjC,CACP,CAAA,CAAA,EACF,EAGA9M,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,qDACV,QAAS,CAAE,OAAQ,CAAE,EACrB,QAAS,CAAE,OAAQ,CAAE,CAAA,CACvB,EAGI9J,EAAAA,KAAC8J,EAAO,IAAP,CACH,SAAA,CAACtO,EAAA,IAAA,KAAA,CAAG,UAAU,4DAA4D,SAE1E,eAAA,QACCsO,EAAO,IAAP,CAAW,UAAU,YACjB,SACE6mC,EAAA,OAAgBroC,GAAA,CAAC2xC,EAAW3xC,CAAK,CAAC,EAClC,IAAKA,GACJ9M,EAAA,IAACszC,EAAA,CAEC,MAAAxmC,EACA,SAAUuoC,EACR,WAAYnB,IAAyBpnC,EAAM,OAAA,EAHtCA,EAAM,SAAWA,EAAM,MAAA,CAKjC,CACP,CAAA,CAAA,CACF,CAAA,CAAA,CACE,CAAA,CAAA,GAIR,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAEJ,CCrpCA,SAAwB+xC,GAAc,CAAE,OAAAnjC,EAAQ,QAAAC,EAAS,SAAA43B,EAAU,qBAAAW,EAAsB,aAAA4K,GAAgB,CAErG,OAAA9+C,EAAA,IAACi0C,GAAA,CACC,OAAAv4B,EACA,QAAAC,EACA,SAAA43B,EACA,qBAAAW,EACA,aAAA4K,CAAA,CACF,CAEJ,CCGA,MAAM7qB,GAAoB,CACxB,OAAQ,CAAE,QAAS,EAAG,EAAG,EAAG,EAC5B,QAAS,CACP,QAAS,EACT,EAAG,EACH,WAAY,CACV,SAAU,GACV,KAAM,iBACN,gBAAiB,EAAA,CAErB,EACA,KAAM,CACJ,QAAS,EACT,EAAG,IACH,WAAY,CACV,SAAU,EAAA,CACZ,CAEJ,EAEMoD,GAAe,CACnB,OAAQ,CAAE,QAAS,EAAG,EAAG,GAAI,EAC7B,QAAS,CACP,QAAS,EACT,EAAG,EACH,WAAY,CAAE,SAAU,EAAI,CAAA,CAEhC,EAEM0nB,GAAiB,CACrB,MAAO,CACL,MAAO,KACP,WAAY,CAAE,SAAU,EAAI,CAC9B,EACA,IAAK,CACH,MAAO,GAAA,CAEX,EAwBM3jC,GAAQ,CACZ,UAAW,IACRpb,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CAAK,UAAU,oCACd,EAAE,sHAAA,CACJ,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,2EACF,cAAc,KAAA,CAChB,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,8CACF,cAAc,QACd,UAAU,mDAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,EAEF,SAAU,IACPA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAAAA,EAAA,IAAC,OAAA,CAAK,UAAU,gCAAgC,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,OAAO,eACpH,EAAE,mDACF,gBAAgB,KAChB,iBAAiB,KACjB,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,oBACd,KAAK,KACL,GAAG,IACH,IAAI,OACJ,KAAK,QAAA,CAAA,CACP,CAAA,EAEJ,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAE1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CACC,EAAE,2EACF,cAAc,KAAA,CAChB,EAGAA,EAAA,IAAC,OAAA,CACC,UAAU,+DACV,cAAc,QACd,eAAe,QACf,EAAE,kCAEF,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,UACd,OAAO,UACP,IAAI,OACJ,YAAY,YAAA,CAAA,CACd,CACF,EAGAA,EAAA,IAAC,OAAA,CACC,UAAU,8DACV,cAAc,QACd,eAAe,QACf,EAAE,yCAEF,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,UACd,OAAO,UACP,IAAI,OACJ,YAAY,YAAA,CAAA,CACd,CACF,EAGAA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,IAAI,EAAE,MAAM,UAAU,gDACvC,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,UACd,OAAO,QACP,IAAI,OACJ,YAAY,YAAA,CAAA,EAEhB,EACAA,EAAAA,IAAC,UAAO,GAAG,IAAI,GAAG,KAAK,EAAE,MAAM,UAAU,sDACvC,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,UACd,OAAO,QACP,IAAI,OACJ,YAAY,YAAA,CAAA,CAEhB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,0EAA2E,CAAA,EACnFA,EAAA,IAAC,OAAA,CAAK,cAAc,QAAQ,UAAU,kDACpC,EAAE,aAAA,CAAA,CAAc,CAAA,CACpB,CACF,CAAA,EAEF,UAAW,IACTA,EAAAA,IAAC,MAAI,CAAA,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAAAwE,EAAA,KAAC,IACC,CAAA,SAAA,CAAAxE,EAAA,IAAC,OAAA,CAAK,UAAU,kCAAkC,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,OAAO,eACtH,EAAE,iBAAiB,gBAAgB,KAAK,iBAAiB,KACzD,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,oBACd,KAAK,KACL,GAAG,IACH,IAAI,OACJ,KAAK,QAAA,CAAA,CACP,CACF,QACC,OAAK,CAAA,KAAK,eAAe,YAAY,MAAM,EAAE,0EAA2E,CAAA,CAAA,CAAA,CAC3H,CACF,CAAA,EAEF,MAAO,IACJA,EAAAA,IAAA,MAAA,CAAI,UAAU,uBAAuB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAC9E,SAACA,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,mDAAoD,CAAA,CAC3H,CAAA,CAEJ,EAGMg/C,GAAY,CAChB,UAAW,IACRh/C,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CAAK,UAAU,oCACd,EAAE,sHAAA,CACJ,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,2EACF,cAAc,KAAA,CAChB,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,8CACF,cAAc,QACd,UAAU,mDAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAE1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CAAK,UAAU,gCACd,cAAc,QACd,eAAe,QACf,EAAE,+BACF,gBAAgB,KAChB,iBAAiB,KAEjB,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,oBACd,KAAK,KACL,GAAG,IACH,IAAI,KACJ,KAAK,QAAA,CAAA,CACP,CACF,EAEAA,EAAA,IAAC,OAAA,CACC,UAAU,kDACV,cAAc,QACd,EAAE,+BACF,gBAAgB,KAAA,CAClB,EAEAA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,UAAU,0CACtC,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,IACd,OAAO,QACP,IAAI,KACJ,YAAY,YAAA,CAAA,CAEhB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAE1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CACC,UAAU,4DACV,cAAc,QACd,eAAe,QACf,EAAE,+BAEF,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,IACd,OAAO,4DACP,IAAI,OACJ,YAAY,YAAA,CAAA,CACd,CACF,EAEAwE,EAAAA,KAAC,IAAE,CAAA,UAAU,0CACX,SAAA,CAAAxE,MAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,MAAM,QAC/B,SAAO,CAAA,GAAG,KAAK,GAAG,KAAK,EAAE,MAAM,QAC/B,SAAO,CAAA,GAAG,KAAK,GAAG,KAAK,EAAE,MAAM,EAChCA,EAAA,IAAC,UAAA,CACC,cAAc,UACd,OAAO,QACP,IAAI,KACJ,YAAY,YAAA,CAAA,CACd,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,0EAA2E,CAAA,EACnFA,EAAA,IAAC,OAAA,CAAK,cAAc,QAAQ,UAAU,kDACpC,EAAE,aAAA,CAAA,CAAc,CAAA,CACpB,CACF,CAAA,EAEF,UAAW,IACTA,EAAAA,IAAC,MAAI,CAAA,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAAAwE,EAAA,KAAC,IACC,CAAA,SAAA,CAAAxE,EAAA,IAAC,OAAA,CAAK,UAAU,kCAAkC,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,OAAO,eACtH,EAAE,iBAAiB,gBAAgB,KAAK,iBAAiB,KACzD,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,oBACd,KAAK,KACL,GAAG,IACH,IAAI,OACJ,KAAK,QAAA,CAAA,CACP,CACF,QACC,OAAK,CAAA,KAAK,eAAe,YAAY,MAAM,EAAE,0EAA2E,CAAA,CAAA,CAAA,CAC3H,CACF,CAAA,CAEJ,EAGMi/C,GAAoB,CAAC,CAAE,OAAAvjC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,QAAAsjC,EAAS,SAAAC,EAAU,MAAAv8C,KAAY,CACxF,MAAMmZ,EAAQ,CACZ,CAAE,GAAI,YAAa,MAAO,YAAa,KAAO/b,EAAAA,IAAAob,GAAM,UAAN,CAAA,CAAgB,CAAG,EACjE,CAAE,GAAI,WAAY,MAAO,iBAAkB,KAAOpb,EAAAA,IAAAob,GAAM,SAAN,CAAA,CAAe,CAAG,EACpE,CAAE,GAAI,WAAY,MAAO,WAAY,KAAOpb,EAAAA,IAAAob,GAAM,SAAN,CAAA,CAAe,CAAG,EAC9D,CAAE,GAAI,aAAc,MAAO,aAAc,KAAOpb,EAAAA,IAAAob,GAAM,WAAN,CAAA,CAAiB,CAAG,EACpE,CAAE,GAAI,YAAa,MAAO,YAAa,KAAOpb,MAAAob,GAAM,UAAN,EAAgB,CAAG,CACnE,EAEMiG,EAAU,EAAQze,EAGlBsZ,EAAsBtZ,GACtBA,GAAO,SAAS,eAAe,EAC1B,8CAELA,GAAO,SAAS,cAAc,EACzB,iCAELA,GAAO,SAAS,4BAA4B,EACvC,+CAELA,GAAO,SAAS,wBAAwB,EACnC,yCAEFA,GAAO,QAAQ,kCAAmC,EAAE,GAAK,oBAGlE,OACG5C,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAA7X,EAAA,KAAC6X,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEAET,SAAA,CAAAgF,EAAU,wBAA0B,kBACpC,CAACA,GAAW69B,GAAWC,GACrB36C,EAAAA,KAAA,MAAA,CAAI,UAAU,8DACZ,SAAA,CAAQ06C,EAAA,OAAO,MAAIC,EAAS,MAAA,CAC/B,CAAA,CAAA,CAAA,CAEJ,EAEAn/C,MAAC,OAAI,UAAU,YACZ,WAAM,IAAI,CAACic,EAAM/R,IAAU,CACpB,MAAApG,EAAW8X,IAAgBK,EAAK,GAChCM,EAAc,CAAC8E,GAAWtF,EAAM,UAAerL,GAAAA,EAAE,KAAOkL,CAAW,EAAI1R,EACvEsS,EAAc6E,GAAWzF,IAAgBK,EAAK,GAGlD,OAAAzX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,GAAY,CAAC0Y,EAAc,iCAC3BD,EAAc,iBACdC,EAAc,6BACd,eACF,GAEC,SAAA,CAAKP,EAAA,KACNzX,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CAA6C,SAAAic,EAAK,MAAM,EACvEnY,GAAY,CAACud,GACX7c,EAAA,KAAA,IAAA,CAAE,UAAU,gDACV,SAAA,CAAAyX,EAAK,KAAO,aAAe,2BAC3BA,EAAK,KAAO,YAAc,aAAaijC,GAAS,MAAM,GACtDjjC,EAAK,KAAO,YAAc,YAAYijC,GAAS,MAAM,QAAQC,GAAU,MAAM,GAC7EljC,EAAK,KAAO,cAAgB,8BAC5BA,EAAK,KAAO,aAAe,wBAAwBijC,GAAS,MAAM,QAAQC,GAAU,MAAM,GAAA,CAC7F,CAAA,CAAA,EAEJ,EACC5iC,SACE,MAAI,CAAA,UAAU,yBAAyB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAChF,SAACvc,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CACxF,CAAA,CAAA,CAAA,EAxBGic,EAAK,EA0BZ,CAEH,CAAA,EACH,EAECoF,GACC7c,EAAA,KAAC,MAAI,CAAA,UAAU,6DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACb5W,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,QAC7D,IAAE,CAAA,UAAU,4BACV,SAAAkc,EAAmBtZ,CAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACA5C,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,iLACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAGDC,IAAgB,aACd5b,MAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,uGACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAGMyjC,GAAoB,CAAC,CAAE,OAAA1jC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,UAAA65B,EAAW,QAAAE,EAAS,MAAA/yC,KAAY,CACzF,MAAMgF,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrD,CAAChU,EAAS0X,CAAU,EAAIljB,EAAAA,SAAS,IAAI,EAE3CE,EAAAA,UAAU,IAAM,EACK,SAAY,CACvB,MAAAkf,EAAU,MAAMpX,EAAS,WAAW,EAC/Bkb,EAAA,OAAO9D,EAAQ,OAAO,CAAC,CACpC,GACW,CAAA,EACV,CAACpX,CAAQ,CAAC,EAEb,MAAMy3C,EAAa5J,GAAW,UAAYrqC,IAAY,MAAQ,MAAQ,OAChE2Q,EAAQ,CACZ,CAAE,GAAI,YAAa,MAAO,YAAa,KAAO/b,EAAAA,IAAAg/C,GAAU,UAAV,CAAA,CAAoB,CAAG,EACrE,CAAE,GAAI,WAAY,MAAOK,EAAa,WAAa,aAAc,KAAMA,EAAcr/C,EAAA,IAAAg/C,GAAU,SAAV,EAAmB,QAAMA,GAAU,WAAV,CAAA,CAAqB,CAAG,EACtI,CAAE,GAAI,aAAc,MAAO,aAAc,KAAOh/C,EAAAA,IAAAg/C,GAAU,WAAV,CAAA,CAAqB,CAAG,EACxE,CAAE,GAAI,YAAa,MAAO,YAAa,KAAOh/C,MAAAg/C,GAAU,UAAV,EAAoB,CAAG,CACvE,EAEM39B,EAAU,EAAQze,EAElBsZ,EAAsBtZ,GACrBA,EACDA,EAAM,SAAS,eAAe,EAAU,8CACxCA,EAAM,SAAS,oBAAoB,EAAU,0CAC1CA,EAHY,GAMf08C,EAAmB,IACnBl0C,IAAY,MACPi0C,EAAa,gBAAkB,gBAEjCA,EAAa,cAAgB,cAGtC,OACGr/C,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEAET,SAAAgF,EAAU,+BAAkCg+B,EAAa,YAAYC,GAAkB,GAAK,cAAcA,EAAA,CAAkB,EAAA,CAC/H,QAEC,MAAI,CAAA,UAAU,YACZ,SAAMvjC,EAAA,IAAKE,GAAS,CACb,MAAAnY,EAAW8X,IAAgBK,EAAK,GAChCM,EAAc,CAAC8E,GAAWtF,EAAM,aAAerL,EAAE,KAAOkL,CAAW,EAAIG,EAAM,UAAUrL,GAAKA,EAAE,KAAOuL,EAAK,EAAE,EAC5GO,EAAc6E,GAAWzF,IAAgBK,EAAK,GAGlD,OAAAzX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,GAAY,CAAC0Y,EAAc,iCAC3BD,EAAc,iBACdC,EAAc,6BACd,eACF,GAEC,SAAA,CAAKP,EAAA,KACNzX,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CAA6C,SAAAic,EAAK,MAAM,EACvEnY,GAAY,CAACud,GACX7c,EAAA,KAAA,IAAA,CAAE,UAAU,gDACV,SAAA,CAAAyX,EAAK,KAAO,aAAe,2BAC3BA,EAAK,KAAO,aAAeojC,EACxB,cAAcj0C,IAAY,MAAQ,gBAAkB,aAAa,MACjE,cAAcA,IAAY,MAAQ,gBAAkB,aAAa,OACpE6Q,EAAK,KAAO,cAAgB,8BAC5BA,EAAK,KAAO,cAAgBojC,EACzB,wBAAwBj0C,IAAY,MAAQ,gBAAkB,aAAa,IAC3E,0BAA0BA,IAAY,MAAQ,gBAAkB,aAAa,IAAA,CACnF,CAAA,CAAA,EAEJ,EACCmR,SACE,MAAI,CAAA,UAAU,yBAAyB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAChF,SAACvc,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CACxF,CAAA,CAAA,CAAA,EA3BGic,EAAK,EA6BZ,CAEH,CAAA,EACH,EAECoF,GACC7c,EAAA,KAAC,MAAI,CAAA,UAAU,6DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACb5W,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,QAC7D,IAAE,CAAA,UAAU,4BACV,SAAAkc,EAAmBtZ,CAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACA5C,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,iLACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAGDC,IAAgB,aACd5b,MAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,uGACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAGMgB,GAAkB,CAAC,CAAE,OAAAjB,EAAQ,QAAAC,EAAS,OAAAiB,KAAa,CACvD,KAAM,CAACC,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAAC2/C,EAAOC,CAAQ,EAAI5/C,EAAAA,SAAS,CAAC,EAEpC,OACGI,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,qBAAqB,QAAAV,EAC9C,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,+EACX,SAAA,2BAAA,CAED,EAEA7X,EAAAA,KAAC,MAAI,CAAA,UAAU,uCACb,SAAA,CAAAxE,EAAAA,IAAC,MAAI,CAAA,UAAU,8BACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGrE,IAAU,CAC/B,MAAMu1C,EAAYv1C,EAAQ,EAExB,OAAAlK,EAAA,IAAC,SAAA,CAEC,UAAU,0DACV,QAAS,IAAM8c,EAAU2iC,CAAS,EAClC,aAAc,IAAMD,EAASC,CAAS,EACtC,aAAc,IAAMD,EAAS,CAAC,EAE9B,SAAAx/C,EAAA,IAACoR,GAAA,CACC,KAAM,GACN,UAAW,sBACRmuC,GAAS1iC,IAAW4iC,EACjB,iBACA,kCACN,EAAA,CAAA,CACF,EAbKA,CAcP,CAEH,CAAA,EACH,EAECz/C,EAAA,IAAA,IAAA,CAAE,UAAU,2CACV,aAAW,EAAI,kBAAoB,cAAc6c,CAAM,QAAQA,IAAW,EAAI,IAAM,EAAE,GACzF,EAEArY,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACT6c,EAAS,IACXD,EAAOC,CAAM,EACLlB,EAAA,EAEZ,EACA,UAAW,sDACTkB,EAAS,EACL,6CACA,kFACN,GACD,SAAA,eAAA,CAED,EACA7c,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,yJACX,SAAA,MAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAGM+jC,GAAsB,CAAC,IAAK,KAAM,KAAK,EAUvCC,GAAqBv0C,GACpBA,EACAs0C,GAAoB,SAASt0C,CAAO,EAGlC,KAFE,qDAFY,6BAQjBw0C,GAAa,CACjB,sCACA,6CACA,qDACA,2EACF,EAEA,SAAwBpK,IAAY,CAClC,KAAM,CAAE,QAAAjrC,EAAS,YAAAC,CAAY,EAAIC,GAAW,EACtCgqB,EAAU2nB,GAAY,EACtB,CAAC3G,EAAWC,CAAY,EAAI91C,EAAAA,SAAS,IAAI,EACzC,CAAC+1C,EAASC,CAAU,EAAIh2C,EAAAA,SAAS,IAAI,EACrC,CAACi2C,EAAYC,CAAa,EAAIl2C,EAAAA,SAAS,EAAE,EACzC,CAACm2C,EAAUC,CAAW,EAAIp2C,EAAAA,SAAS,EAAE,EACrC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACq2C,EAAOC,CAAQ,EAAIt2C,EAAAA,SAAS,IAAI,EACjC,CAACigD,EAAmBC,CAAoB,EAAIlgD,EAAAA,SAAS,EAAK,EAC1D,CAACmgD,EAAYC,CAAa,EAAIpgD,EAAAA,SAAS,IAAI,EAC3C,CAACq3C,EAAiBC,CAAkB,EAAIt3C,EAAAA,SAAS,EAAK,EACpBA,EAAAA,SAAS,IAAI,EACfA,EAAAA,SAAS,IAAI,EACnD,KAAM,CAAC23C,EAAcC,CAAe,EAAI53C,EAAAA,SAAS,IAAI,EAC/C,CAAC+2C,EAAUC,CAAW,EAAIh3C,EAAAA,SAAS,CAAG,EACtC,CAACi3C,EAAgBC,CAAiB,EAAIl3C,EAAAA,SAAS,EAAE,EACjD,CAACm3C,EAAoBC,CAAqB,EAAIp3C,EAAAA,SAAS,EAAK,EAC5D,CAACqgD,EAAYC,CAAa,EAAItgD,EAAAA,SAAS,IAAI,EAC3C,CAAC8d,EAAmBC,CAAoB,EAAI/d,EAAAA,SAAS,EAAK,EAC1D,CAACugD,EAAUC,CAAW,EAAIxgD,EAAAA,SAAS,IAAI,EACvC,CAACoe,EAAcC,CAAe,EAAIre,EAAAA,SAAS,EAAK,EAChD,CAACwe,EAAYC,CAAa,EAAIze,WAAS,CAC3C,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,EACK,CAACse,EAAiBC,CAAkB,EAAIve,EAAAA,SAAS,EAAK,EACtD,CAAC6uB,EAAW4xB,EAAY,EAAIzgD,EAAAA,SAAS,IAAI,EACzC,CAACud,GAAgBC,EAAiB,EAAIxd,EAAAA,SAAS,IAAI,EACnD,CAAC0gD,EAAcC,CAAe,EAAI3gD,EAAAA,SAAS,IAAI,EAC/C,CAAC4gD,EAAcC,CAAe,EAAI7gD,EAAAA,SAAS,EAAK,EAGtDE,EAAAA,UAAU,MACgB,SAAY,CAC9B,GAAC,OAAO,SACR,GAAA,CACI,MAAAs+C,GAAa,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACpEhzC,GAAU,SAASgzC,GAAY,EAAE,EAIvC,GAHAhhC,GAAkBhS,EAAO,EAGrBA,KAAY,MAAO,CACf,MAAA0kB,GAAe6vB,GAAkBv0C,EAAO,EAC9Cm1C,EAAgBzwB,EAAY,CAAA,MAE5BywB,EAAgB,IAAI,QAEf39C,GAAO,CACN,QAAA,MAAM,4BAA6BA,EAAK,CAAA,CAEpD,GAEgB,EAEZ,OAAO,UACT,OAAO,SAAS,GAAG,eAAiBwI,IAAY,CACxC,MAAAizC,GAAiB,SAASjzC,GAAS,EAAE,EAI3C,GAHAgS,GAAkBihC,EAAc,EAG5BA,KAAmB,MAAO,CACtB,MAAAvuB,GAAe6vB,GAAkBtB,EAAc,EACrDkC,EAAgBzwB,EAAY,CAAA,MAE5BywB,EAAgB,IAAI,CACtB,CACD,EAGI,IAAM,CACP,OAAO,UACF,OAAA,SAAS,eAAe,eAAgB,IAAM,CAAA,CAAE,CAE3D,GACC,EAAE,EAGLzgD,EAAAA,UAAU,IAAM,CACd,MAAMmgB,GAAe,IAAM,CACX5B,EAAA,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,CACH,EAEO,cAAA,iBAAiB,SAAU4B,EAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,EAAY,CAChE,EAAG,EAAE,EAGLngB,EAAAA,UAAU,IAAM,CACd,GAAIke,EAAc,CACV,MAAA8sB,GAAQ,WAAW,IAAM,CAC7B7sB,EAAgB,EAAK,GACpB,GAAI,EAEA,MAAA,IAAM,aAAa6sB,EAAK,CAAA,CACjC,EACC,CAAC9sB,CAAY,CAAC,EAGjB,MAAMw6B,EAAe,CAAC,CAAE,MAAA1rC,MAAY,CAClC,KAAM,CAAE,QAASi6B,EAAY,EAAIt8B,GAAW,EACtC,CAAC6jB,GAASmlB,EAAU,EAAI7zC,EAAAA,SAAS,GAAG,EACpC,CAACklC,GAAWC,EAAY,EAAInlC,EAAAA,SAAS,EAAK,EAwC5C,OAtCJE,EAAAA,UAAU,IAAM,EACO,SAAY,CAC3B,GAAA,GAACinC,IAAe,CAACj6B,IAEjB,GAAA,CAIF,GAHAi4B,GAAa,EAAI,EAGbj4B,GAAM,UAAYA,GAAM,SAAW,MAAO,CAC5C,MAAMwhB,GAAU,MAAM,OAAO,SAAS,QAAQ,CAC5C,OAAQ,iBACR,OAAQ,CAACyY,GAAa,QAAQ,CAAA,CAC/B,EACKiO,GAAmBrxB,GAAmB,OAAO2K,EAAO,CAAC,EAC3DmlB,GAAWuB,EAAgB,EAC3B,MAAA,CAIF,MAAMptC,GAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAMrDkP,GAAU,MALM,IAAI5iB,EACxBoB,GAAM,QACN,CAAC,oDAAoD,EACrDlF,EACF,EACoC,UAAUm/B,EAAW,EACzD0M,GAAWpqB,GAAmBiF,GAASxhB,GAAM,UAAY,EAAE,CAAC,QACrDlK,GAAO,CACN,QAAA,MAAM,0BAA2BA,EAAK,EAC9C6wC,GAAW,GAAG,CAAA,QACd,CACA1O,GAAa,EAAK,CAAA,CAEtB,GAEa,CAAA,EACZ,CAACj4B,GAAOi6B,EAAW,CAAC,EAElBj6B,GAGHtI,EAAA,KAAC,MAAI,CAAA,UAAU,gDAAgD,SAAA,CAAA,YACnDsgC,GAAY,aAAe,OAAOxW,EAAO,EAAE,eAAe,OAAW,CAC7E,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,EAAE,IAAExhB,GAAM,MAAA,EACb,EARiB,IAUrB,EAGAhN,EAAAA,UAAU,IAAM,EACM,SAAY,CAC9B,GAAI,CAAC21C,GAAa,CAACE,GAAW,CAACE,EAAY,CACzCG,EAAY,EAAE,EACdE,EAAS,IAAI,EACbgK,EAAc,IAAI,EAClB,MAAA,CAIF,GAAIQ,KAAyB,CAC3B1K,EAAYH,CAAU,EACtBK,EAAS,IAAI,EACbgK,EAAc,IAAI,EAClB,MAAA,CAGFO,EAAgB,EAAI,EAChB,GAAA,CACI,KAAA,CAAE,MAAOE,GAAU,SAAUC,GAAa,KAAA78C,EAAK,EAAI,MAAM0wB,EAAQ,YACrEghB,EACAE,EACAE,CACF,EAEA,GAAI,CAAC8K,IAAY,CAACC,IAAeA,KAAgB,IAAK,CACpD5K,EAAY,EAAE,EACdE,EAAS,IAAI,EACbgK,EAAc,sBAAsB,EACpC,MAAA,CAGFhK,EAASyK,EAAQ,EACjB3K,EAAY4K,EAAW,EACvBV,EAAc,IAAI,OACJ,CACdlK,EAAY,EAAE,EACdE,EAAS,IAAI,EACbgK,EAAc,qBAAqB,CAAA,QACnC,CACAO,EAAgB,EAAK,CAAA,CAEzB,GAEY,GACX,CAAChL,EAAWE,EAASE,EAAYphB,CAAO,CAAC,EAEtC,MAAA4gB,EAAqBvoC,IAAU,CAC/BizC,IAAe,OACjBrK,EAAa5oC,EAAK,EAElB8oC,EAAW9oC,EAAK,EAElBgzC,EAAqB,EAAK,CAC5B,EAEM9H,GAAa,SAAY,CAC7B,GAAI,CAACztC,EAAS,CACZnH,EAAM,MAAM,4BAA4B,EACxC,MAAA,CAGF,GAAI,CAACqyC,GAAa,CAACE,GAAW,CAACE,EAAY,CACzCzyC,EAAM,MAAM,2BAA2B,EACvC,MAAA,CAGF,GAAI68C,EAAY,CACdtiC,EAAqB,EAAI,EACzByiC,EAAY,WAAW,EACvBC,GAAa,kFAAkF,EAC/F,MAAA,CAGF/+C,EAAW,EAAI,EACfqc,EAAqB,EAAI,EACzByiC,EAAY,WAAW,EACvBC,GAAa,IAAI,EAEb,GAAA,CAEI,MAAAlhC,GAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAGlCyhC,GAAY,MAAMpsB,EAAQ,YAAYghB,EAAWE,EAASE,CAAU,EAC1E,GAAI,CAACgL,IAAa,CAACA,GAAU,KACrB,MAAA,IAAI,MAAM,sBAAsB,EAIxC,MAAM1yB,GAAWjiB,GAAkB2pC,EAAYJ,EAAU,QAAQ,EAG3DwC,GAAkB/rC,GAAkB6pC,EAAUJ,EAAQ,QAAQ,EAG9DuC,GAAqB,OAAO,KAAK,OAAO,IAAMvB,GAAY,GAAG,CAAC,EAC9DvoB,GAAgB6pB,GAAkBC,GAAsB,OAE9D,IAAI4I,GAAkBrL,EAGtB,MAAM8E,GAAe9E,EAAU,SAAW,OAASA,EAAU,SAAW,MAClE+E,GAAa7E,EAAQ,SAAW,OAASA,EAAQ,SAAW,MAE9D4E,IAAgBsG,GAAU,KAAK,CAAC,IAAM/3B,GAAkB3L,EAAc,GAAG,MACvD,MAAMsX,EAAQ,eAAelqB,CAAO,EACtC4jB,KAChBiyB,EAAY,UAAU,EAChB,MAAA3rB,EAAQ,QAAQtG,EAAQ,EAEZ2yB,GAAA,CAChB,GAAGrL,EACH,OAAQ,OACR,QAAS3sB,GAAkB3L,EAAc,EAAE,KAC3C,SAAU,EACZ,GAIE,MAAAyQ,GAAW,OAAO,KAAK,MAAM,KAAK,MAAQ,GAAI,EAAI,GAAK,EAAE,EAG/D,GAAK2sB,GA8GE,CAEL6F,EAAY,UAAU,EAGhB,MAAA/xB,GAAgB,IAAI3iB,EACxBiqC,EAAQ,QACR,CACE,4CACA,iDACA,gDACF,EACAx2B,EACF,EAEA,IAAI4hC,GAAU,GACV,GAAA,CACF,KAAM,CAACC,GAASC,GAAcC,EAAY,EAAI,MAAM,QAAQ,IAAI,CAC9D7yB,GAAc,QAAA,EAAU,MAAM,IAAM,CAAC,EACrCA,GAAc,aAAA,EAAe,MAAM,IAAM,CAAC,EAC1CA,GAAc,aAAA,EAAe,MAAM,IAAM,CAAC,CAAA,CAC3C,EACD0yB,GAAWC,GAAU,GAAKC,GAAe,GAAKC,GAAe,OAC/C,CACJH,GAAA,EAAA,CAGRA,GAQF,MAPW,MAAMtsB,EAAQ,mDACvBrG,GACAyyB,GAAU,KACVt2C,EACAqjB,GACA,CAAE,MAAOO,EAAS,CACpB,GACS,KAAK,EASd,MAPW,MAAMsG,EAAQ,sBACvBrG,GACAyyB,GAAU,KACVt2C,EACAqjB,GACA,CAAE,MAAOO,EAAS,CACpB,GACS,KAAK,CAChB,KA3JiB,CACjBiyB,EAAY,UAAU,EAGhB,MAAAe,GAAgBr4B,GAAkB3L,EAAc,GAAG,OACzD,GAAI,CAACgkC,GACG,MAAA,IAAI,MAAM,4CAA4C,EAGxD,MAAA9yB,GAAgB,IAAI3iB,EACxBo1C,GAAgB,QAChB,CACE,4EACA,qFACA,qDACA,4CACA,iDACA,gDACF,EACA3hC,EACF,EAEkB,MAAMkP,GAAc,UAAU9jB,EAAS42C,EAAa,EACtDhzB,KACd,QAAQ,IAAI,qBAAqB,EAEjC,MADkB,MAAME,GAAc,QAAQ8yB,GAAehzB,EAAQ,GACrD,KAAK,GAIvB,IAAIizB,GAAmB,GACnBC,GAAiB,GAEjB,GAAA,CACF,KAAM,CAACL,GAASC,GAAcC,EAAY,EAAI,MAAM,QAAQ,IAAI,CAC9D7yB,GAAc,QAAA,EAAU,MAAM,IAAM,CAAC,EACrCA,GAAc,aAAA,EAAe,MAAM,IAAM,CAAC,EAC1CA,GAAc,aAAA,EAAe,MAAM,IAAM,CAAC,CAAA,CAC3C,EACD+yB,GAAoBJ,GAAU,GAAKC,GAAe,GAAKC,GAAe,OACxD,CACKE,GAAA,EAAA,CAIf,MAAAE,GAAkB,IAAI51C,EAC1BiqC,EAAQ,QACR,CACE,4CACA,iDACA,gDACF,EACAx2B,EACF,EAEI,GAAA,CACF,KAAM,CAAC6hC,GAASC,GAAcC,EAAY,EAAI,MAAM,QAAQ,IAAI,CAC9DI,GAAgB,QAAA,EAAU,MAAM,IAAM,CAAC,EACvCA,GAAgB,aAAA,EAAe,MAAM,IAAM,CAAC,EAC5CA,GAAgB,aAAA,EAAe,MAAM,IAAM,CAAC,CAAA,CAC7C,EACDD,GAAkBL,GAAU,GAAKC,GAAe,GAAKC,GAAe,OACtD,CACGG,GAAA,EAAA,CAGnBjB,EAAY,UAAU,EAGlBgB,IAAoBC,GAClB7G,GAQF,MAPW,MAAM/lB,EAAQ,mDACvBtG,GACAC,GACAyyB,GAAU,KACVt2C,EACAqjB,EACF,GACS,KAAK,EASd,MAPW,MAAM6G,EAAQ,sDACvBtG,GACAC,GACAyyB,GAAU,KACVt2C,EACAqjB,EACF,GACS,KAAK,EAGZ4sB,GAQF,MAPW,MAAM/lB,EAAQ,sBACvBtG,GACAC,GACAyyB,GAAU,KACVt2C,EACAqjB,EACF,GACS,KAAK,EASd,MAPW,MAAM6G,EAAQ,yBACvBtG,GACAC,GACAyyB,GAAU,KACVt2C,EACAqjB,EACF,GACS,KAAK,CAElB,CAmDFkoB,EAAc,EAAE,EAEhBsK,EAAY,WAAW,EAGvB,WAAW,IAAM,CACfziC,EAAqB,EAAK,EAC1ByiC,EAAY,IAAI,EAChBniC,EAAgB,EAAI,EAEpB,WAAW,IAAM,CACfE,EAAmB,EAAI,GACtB,GAAI,EAEP,WAAW,IAAM,CACf23B,EAAc,EAAE,EAChBE,EAAY,EAAE,EACd/3B,EAAgB,EAAK,GACpB,GAAK,GACP,GAAI,QAEArb,GAAO,CACN,QAAA,MAAM,cAAeA,EAAK,EAClC,IAAIktB,GAAe,wBAGfltB,GAAM,OAAS,iBACFktB,GAAA,0DACNltB,GAAM,OAAS,0BACTktB,GAAA,oDACNltB,GAAM,SACfktB,GAAeltB,GAAM,QAGvBy9C,GAAavwB,EAAY,EACzBswB,EAAY,OAAO,CAAA,QACnB,CACA9+C,EAAW,EAAK,CAAA,CAEpB,EAEMq3C,GAAwB54C,IAAU,CAClCA,KAAU,SACZi3C,EAAsB,EAAI,GAEdJ,EAAA,WAAW72C,EAAK,CAAC,EAC7Bi3C,EAAsB,EAAK,EAC3BF,EAAkB,EAAE,EAExB,EAEM8B,EAA8BpxC,IAAM,CAClC,MAAAzH,GAAQyH,GAAE,OAAO,OACnBzH,KAAU,IAAO,cAAc,KAAKA,EAAK,GAAK,WAAWA,EAAK,GAAK,OACrE+2C,EAAkB/2C,EAAK,EACnBA,KAAU,IACA62C,EAAA,WAAW72C,EAAK,CAAC,EAGnC,EAGMwhD,GAAmB,SAAY,CACnC,GAAI,CAACh3C,EAAS,CACZnH,EAAM,MAAM,4BAA4B,EACxC,MAAA,CAGF,GAAI,CAACqyC,GAAa,CAACE,GAAW,CAACE,EAAY,CACzCzyC,EAAM,MAAM,2BAA2B,EACvC,MAAA,CAGF9B,EAAW,EAAI,EACfqc,EAAqB,EAAI,EACzByiC,EAAY,WAAW,EACvBC,GAAa,IAAI,EAEb,GAAA,CACF,MAAMz4C,GAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDD,GAAS,MAAMvX,GAAS,UAAU,EAClCwD,GAAU,MAAMxD,GAAS,aAAa,KAAUkxB,IAAA,OAAOA,GAAE,OAAO,CAAC,EACjE0oB,GAAet1C,GAAkB2pC,EAAY,EAAE,EAErD,GAAIzqC,KAAY,MAAO,CAEf,MAAAq2C,GAAiB,IAAI/1C,EACzB,6CACAk0C,GACAzgC,EACF,EAEI,GAAAs2B,EAAU,SAAW,MAAO,CAE9B2K,EAAY,UAAU,EACtB,MAAMjzB,GAAK,MAAMs0B,GAAe,QAAQ,CAAE,MAAOD,GAAc,EAC/DpB,EAAY,YAAY,EACxB,MAAMjzB,GAAG,KAAK,CAAA,KACT,CAELizB,EAAY,YAAY,EACxB,MAAMjzB,GAAK,MAAMs0B,GAAe,SAASD,EAAY,EACrDpB,EAAY,YAAY,EACxB,MAAMjzB,GAAG,KAAK,CAAA,CAChB,SAGIsoB,EAAU,SAAW,MAAO,CAE9B2K,EAAY,UAAU,EACtB,MAAMjzB,GAAK,MAAMsH,EAAQ,QAAQ+sB,EAAY,EAC7CpB,EAAY,YAAY,EACxB,MAAMjzB,GAAG,KAAK,CAAA,KACT,CAELizB,EAAY,YAAY,EACxB,MAAMjzB,GAAK,MAAMsH,EAAQ,WAAW+sB,EAAY,EAChDpB,EAAY,YAAY,EACxB,MAAMjzB,GAAG,KAAK,CAAA,CAIlBizB,EAAY,WAAW,EAGvB,WAAW,IAAM,CACfziC,EAAqB,EAAK,EAC1ByiC,EAAY,IAAI,EAChBniC,EAAgB,EAAI,EAEpB,WAAW,IAAM,CACfE,EAAmB,EAAI,GACtB,GAAI,EAEP,WAAW,IAAM,CACf23B,EAAc,EAAE,EAChBE,EAAY,EAAE,EACd/3B,EAAgB,EAAK,GACpB,GAAK,GACP,GAAI,QAEArb,GAAO,CACN,QAAA,MAAM,qBAAsBA,EAAK,EAC5By9C,GAAAz9C,GAAM,SAAW,uCAAuC,EACrEw9C,EAAY,OAAO,CAAA,QACnB,CACA9+C,EAAW,EAAK,CAAA,CAEpB,EAGMo/C,GAAwB,IACxBvjC,KAAmB,MACbs4B,GAAW,SAAW,OAASE,GAAS,SAAW,UACnDF,GAAW,SAAW,UAAYE,GAAS,SAAW,MAExDF,GAAW,SAAW,OAASE,GAAS,SAAW,QACnDF,GAAW,SAAW,QAAUE,GAAS,SAAW,MAIxD+L,GAAsB,IAAM,CAChC,GAAIrgD,EAAgB,MAAA,gBACpB,GAAIm/C,EAAqB,MAAA,wBACzB,GAAI,CAAC/K,GAAa,CAACE,EAAgB,MAAA,gBAC/B,GAAA,CAACE,EAAmB,MAAA,eACxB,GAAIoK,GAAc,CAACS,GAAsB,EAAU,MAAA,qBACnD,GAAIvjC,KAAmB,MAAO,CAC5B,GAAIs4B,GAAW,SAAW,OAASE,GAAS,SAAW,SAAiB,MAAA,qBACxE,GAAIF,GAAW,SAAW,UAAYE,GAAS,SAAW,MAAc,MAAA,sBAAA,CAE1E,OAAIF,GAAW,SAAW,OAASE,GAAS,SAAW,OAAe,mBAClEF,GAAW,SAAW,QAAUE,GAAS,SAAW,MAAc,qBAC/D,MACT,EAGMx6B,GAAQ,SAAS,cAAc,OAAO,EAC5CA,GAAM,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAmBX,SAAA,KAAK,YAAYA,EAAK,EAEzB,MAAAwmC,GAAgB9kC,IAAW,CACvB,QAAA,IAAI,cAAeA,EAAM,CAEnC,EAGE,OAAArY,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,6BACV,SAAU2lB,GACV,QAAQ,SACR,QAAQ,UACR,KAAK,OAGJ,SAAA,CACCjW,GAAAhe,EAAA,IAACqgB,GAAA,CACC,MAAOjC,EAAW,MAClB,OAAQA,EAAW,OACnB,eAAgB,IAChB,QAAS,GACT,QAAS,GACT,iBAAkB,GAClB,iBAAkB,GAClB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,SAAS,EAC9D,MAAO,CACL,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,OACR,OAAQ,MACR,cAAe,MAAA,CACjB,CACF,EAIFpe,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,4GACV,SAAU+oB,GAET,SACCipB,EAAA97C,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,mBACV,SAAU+oB,GAEV,SAAA,CAAAr3B,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,OACV,WAAY,CAAE,MAAO,GAAI,EACzB,WAAY,CAAE,KAAM,SAAU,UAAW,IAAK,QAAS,EAAG,EAE1D,eAAC,MAAI,CAAA,IAAI,YAAY,IAAI,OAAO,UAAU,wBAAyB,CAAA,CAAA,CACrE,EACAtO,EAAA,IAACsO,EAAO,GAAP,CACC,UAAU,2DACV,SAAU+oB,GAET,SAAAipB,CAAA,CACH,EACCtgD,EAAA,IAAA,IAAA,CAAE,UAAU,mCAAmC,SAEhD,6DAAA,CAAA,CAAA,CAAA,CAAA,EAGFA,EAAAA,IAACinC,GAAgB,CAAA,KAAK,OACpB,SAAAziC,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,YACV,SAAU2lB,GACV,QAAQ,SACR,QAAQ,UACR,KAAK,OAGL,SAAA,CAAAzvB,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,YACV,SAAU+oB,GAEV,SAAA,CAACr3B,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,OAAA,EACAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,WACV,WAAY,CAAE,MAAO,IAAK,EAC1B,WAAY,CAAE,KAAM,SAAU,UAAW,GAAI,EAE7C,SAAA,CAAAtO,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO61C,EACP,SAAWruC,IAAM,CACT,MAAAzH,GAAQyH,GAAE,OAAO,OACnBzH,KAAU,IAAM,cAAc,KAAKA,EAAK,IAC1C+1C,EAAc/1C,EAAK,CAEvB,EACA,YAAY,MACZ,UAAU,+OAAA,CACZ,EACAC,EAAA,IAACsO,EAAO,OAAP,CACC,QAAS,IAAM,CACb0xC,EAAc,MAAM,EACpBF,EAAqB,EAAI,CAC3B,EACA,UAAU,8PACV,SAAUf,GACV,WAAW,QACX,SAAS,MAER,SACCtJ,EAAAjxC,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa/G,CAAS,EAAG,IAAKA,EAAU,OAAQ,UAAU,SAAU,CAAA,EAC9Ez1C,EAAAA,IAAC,OAAM,CAAA,SAAAy1C,EAAU,MAAO,CAAA,CAAA,CAAA,CAC1B,EAEA,cAAA,CAAA,CAEJ,CAAA,CACF,EACCA,GAAaz1C,EAAAA,IAACw4C,EAAa,CAAA,MAAO/C,CAAW,CAAA,CAAA,CAAA,CAChD,EAGAz1C,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,2BACV,SAAU+oB,GAEV,SAAAr3B,EAAA,IAACsO,EAAO,OAAP,CACC,QAAS,IAAM,CACb,MAAMuqC,GAAYpD,EACZqD,GAAajD,EACnBH,EAAaC,CAAO,EACpBG,EAAcC,CAAQ,EACtBH,EAAWiD,EAAS,EACpB7C,EAAY8C,EAAU,CACxB,EACA,UAAU,qHACV,WAAY,CAAE,OAAQ,GAAI,EAC1B,WAAY,CAAE,KAAM,SAAU,UAAW,IAAK,QAAS,EAAG,EAE1D,SAAA94C,EAAAA,IAAC+4C,GAAc,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CAC3B,CACF,EAGAv0C,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,YACV,SAAU+oB,GAEV,SAAA,CAACr3B,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,KAAA,EACAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,WACV,WAAY,CAAE,MAAO,IAAK,EAC1B,WAAY,CAAE,KAAM,SAAU,UAAW,GAAI,EAE7C,SAAA,CAAAtO,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO+1C,EACP,SAAQ,GACR,YAAY,MACZ,UAAU,+OAAA,CACZ,EACA/1C,EAAA,IAACsO,EAAO,OAAP,CACC,QAAS,IAAM,CACb0xC,EAAc,IAAI,EAClBF,EAAqB,EAAI,CAC3B,EACA,UAAU,8PACV,SAAUf,GACV,WAAW,QACX,SAAS,MAER,SACCpJ,EAAAnxC,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa7G,CAAO,EAAG,IAAKA,EAAQ,OAAQ,UAAU,SAAU,CAAA,EAC1E31C,EAAAA,IAAC,OAAM,CAAA,SAAA21C,EAAQ,MAAO,CAAA,CAAA,CAAA,CACxB,EAEA,cAAA,CAAA,CAEJ,CAAA,CACF,EACCA,GAAW31C,EAAAA,IAACw4C,EAAa,CAAA,MAAO7C,CAAS,CAAA,CAAA,CAAA,CAC5C,QAGC1O,GACC,CAAA,SAAAziC,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,+FACV,SAAU+oB,GACV,QAAQ,SACR,QAAQ,UACR,KAAK,OAGL,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAU,aAAA,QACzC,OAAK,CAAA,UAAU,4BAA4B,MAAM,sFAAsF,SAAC,GAAA,CAAA,CAAA,EAC3I,QACC,OAAK,CAAA,UAAU,gBACb,SAAA61C,EAAa,IAAI,OAAOA,CAAU,EAAI,MAAO,QAAQ,CAAC,CAAC,IAAIJ,GAAW,MAAM,GAAK,IACpF,CAAA,CAAA,EACF,EACAjxC,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAY,eAAA,QAC3C,OAAK,CAAA,UAAU,4BAA4B,MAAM,gDAAgD,SAAC,GAAA,CAAA,CAAA,EACrG,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAyB,2BAAA,CAAA,CAAA,CAC3D,CAAA,CAAA,EACF,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,EAGpEwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAM0yC,EAAmB,CAACD,CAAe,EAClD,UAAU,qFAET,SAAA,CAAAA,EAAkB,eAAiB,eACpCj3C,EAAA,IAAC,MAAA,CACC,UAAW,gCAAgCi3C,EAAkB,aAAe,EAAE,GAC9E,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAj3C,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EAGCi3C,GACCzyC,EAAA,KAAC,MAAI,CAAA,UAAU,+DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAe,kBAAA,EAC/CwE,EAAAA,KAAC,OAAK,CAAA,UAAU,gBAAiB,SAAA,CAAAuxC,EAAS,IAAEJ,GAAS,MAAA,CAAO,CAAA,CAAA,EAC9D,EAEAnxC,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,gBAAgB,SAAA,CAAA,oCAAkCmyC,EAAS,IAAA,EAAE,EAC7EnyC,EAAAA,KAAC,OAAK,CAAA,UAAU,gBACb,SAAA,CAAAuxC,GAAY,OAAOA,GAAY,EAAIY,EAAS,IAAI,EAAE,QAAQ,CAAC,EAAE,IAAEhB,GAAS,MAAA,CAC3E,CAAA,CAAA,EACF,EAEAnxC,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAK,QAAA,EACpCA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAiB,YAAS,IAAK,CAAA,CAAA,EACjD,EAECu3C,GACC/yC,EAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAI,OAAA,EACpCwE,EAAAA,KAAC,OAAK,CAAA,UAAU,gBAAgB,SAAA,CAAA,KAC3BixC,GAAW,OAAO,MAAI8B,EAAa,QAAQ,CAAC,EAAE,IAAE5B,GAAS,MAAA,CAC9D,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CAAA,CAGN,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ,EAGA31C,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,4GACV,SAAU+oB,GAEV,SAAA7yB,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,uDAAuD,SAEvE,qBAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACZ,SAAA,CAAA,CAAC,GAAK,EAAK,CAAG,EAAE,IAAKzE,IACpByE,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMm0C,GAAqB54C,GAAM,UAAU,EACpD,UAAW;AAAA,sBACP42C,IAAa52C,IAAS,CAACg3C,EACrB,oEACA,qFACJ,+CAED,SAAA,CAAAh3C,GAAM,GAAA,CAAA,EARFA,EAAA,CAUR,EACDC,EAAA,IAAC,SAAA,CACC,QAAS,IAAM24C,GAAqB,QAAQ,EAC5C,UAAW;AAAA,oBACP5B,EACE,oEACA,qFACJ,+CACH,SAAA,QAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAECA,GACCvyC,EAAA,KAAC,MAAI,CAAA,UAAU,sHACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO62C,EACP,SAAU+B,EACV,YAAY,mBACZ,UAAU,iIAAA,CACZ,EACC54C,EAAA,IAAA,OAAA,CAAK,UAAU,wCAAwC,SAAC,GAAA,CAAA,CAAA,CAC3D,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,EAGAA,EAAA,IAACsO,EAAO,OAAP,CACC,QAASoyC,KAA0Ba,GAAmBvJ,GACtD,SAAU32C,GAAW,CAACo0C,GAAa,CAACE,GAAW,CAACE,GAAe,CAACE,GAAY,CAAC2K,GAAsB,EACnG,UAAW;AAAA;AAAA,YAEPr/C,GAAW,CAACo0C,GAAa,CAACE,GAAW,CAACE,GAAe,CAACE,GAAY,CAAC2K,GAAsB,EACvF,mFACA,8DACJ;AAAA,UAEF,SAAU3B,GACV,WAAW,QACX,SAAS,MAER,SAAoB2C,GAAA,CAAA,CACvB,EAGA1hD,EAAA,IAAC6+C,GAAA,CACC,OAAQgB,EACR,QAAS,IAAMC,EAAqB,EAAK,EACzC,SAAUzK,EACV,aAAc0K,IAAe,OAASpK,EAAUF,CAAA,CAClD,EAECiL,GACC,EAAA1gD,EAAA,IAACo/C,GAAA,CACC,OAAQ1hC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1ByiC,EAAY,IAAI,EAChBC,GAAa,IAAI,CACnB,EACA,YAAaF,EACb,UAAA1K,EACA,QAAAE,EACA,MAAOlnB,CAAA,CAAA,EAGTzuB,EAAA,IAACi/C,GAAA,CACC,OAAQvhC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1ByiC,EAAY,IAAI,CAClB,EACA,YAAaD,EACb,QAAS1K,EACT,SAAUE,EACV,MAAOlnB,CAAA,CACT,EAIFzuB,EAAA,IAAC2c,GAAA,CACC,OAAQuB,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,OAAQwjC,EAAA,CAAA,CACV,CAAA,CACF,CAEJ,CCjuDA,MAAMC,GAAuB,CAC3B,WAAY,6CACZ,OAAQ,6CACR,KAAM,6CACN,KAAM,4CACR,EAGM32B,GAAY,CAChB,4EACA,qFACA,oEACA,oDACA,mDACA,gDACF,EAGM42B,GAAa,CACjB,0LACA,+PACF,EAGMC,GAAkB,CACtB,4JACA,gOACA,4JACA,gOACA,8EACA,mDACA,kFACA,mDACA,wCACA,sHACA,+FACF,EAwBM1mC,GAAQ,CACZ,UAAW,IACRpb,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CAAK,UAAU,oCACd,EAAE,sHAAA,CACJ,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,2EACF,cAAc,KAAA,CAChB,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,8CACF,cAAc,QACd,UAAU,mDAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,EAEF,SAAU,IACPA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAAAA,EAAA,IAAC,OAAA,CAAK,UAAU,gCAAgC,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,OAAO,eACpH,EAAE,mDACF,gBAAgB,KAChB,iBAAiB,KACjB,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,oBACd,KAAK,KACL,GAAG,IACH,IAAI,OACJ,KAAK,QAAA,CAAA,CACP,CAAA,EAEJ,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAE1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CACC,EAAE,2EACF,cAAc,KAAA,CAChB,EAGAA,EAAA,IAAC,OAAA,CACC,UAAU,+DACV,cAAc,QACd,eAAe,QACf,EAAE,kCAEF,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,UACd,OAAO,UACP,IAAI,OACJ,YAAY,YAAA,CAAA,CACd,CACF,EAGAA,EAAA,IAAC,OAAA,CACC,UAAU,8DACV,cAAc,QACd,eAAe,QACf,EAAE,yCAEF,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,UACd,OAAO,UACP,IAAI,OACJ,YAAY,YAAA,CAAA,CACd,CACF,EAGAA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,IAAI,EAAE,MAAM,UAAU,gDACvC,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,UACd,OAAO,QACP,IAAI,OACJ,YAAY,YAAA,CAAA,EAEhB,EACAA,EAAAA,IAAC,UAAO,GAAG,IAAI,GAAG,KAAK,EAAE,MAAM,UAAU,sDACvC,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,UACd,OAAO,QACP,IAAI,OACJ,YAAY,YAAA,CAAA,CAEhB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,0EAA2E,CAAA,EACnFA,EAAA,IAAC,OAAA,CAAK,cAAc,QAAQ,UAAU,kDACpC,EAAE,aAAA,CAAA,CAAc,CAAA,CACpB,CACF,CAAA,EAEF,UAAW,IACTA,EAAAA,IAAC,MAAI,CAAA,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAAAwE,EAAA,KAAC,IACC,CAAA,SAAA,CAAAxE,EAAA,IAAC,OAAA,CAAK,UAAU,kCAAkC,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,OAAO,eACtH,EAAE,iBAAiB,gBAAgB,KAAK,iBAAiB,KACzD,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,oBACd,KAAK,KACL,GAAG,IACH,IAAI,OACJ,KAAK,QAAA,CAAA,CACP,CACF,QACC,OAAK,CAAA,KAAK,eAAe,YAAY,MAAM,EAAE,0EAA2E,CAAA,CAAA,CAAA,CAC3H,CACF,CAAA,EAEF,MAAO,IACJA,EAAAA,IAAA,MAAA,CAAI,UAAU,uBAAuB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAC9E,SAACA,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,mDAAoD,CAAA,CAC3H,CAAA,CAEJ,EAGMg/C,GAAY,CAChB,UAAW,IACRh/C,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CAAK,UAAU,oCACd,EAAE,sHAAA,CACJ,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,2EACF,cAAc,KAAA,CAChB,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,8CACF,cAAc,QACd,UAAU,mDAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAE1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CAAK,UAAU,gCACd,cAAc,QACd,eAAe,QACf,EAAE,+BACF,gBAAgB,KAChB,iBAAiB,KAEjB,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,oBACd,KAAK,KACL,GAAG,IACH,IAAI,KACJ,KAAK,QAAA,CAAA,CACP,CACF,EAEAA,EAAA,IAAC,OAAA,CACC,UAAU,kDACV,cAAc,QACd,EAAE,+BACF,gBAAgB,KAAA,CAClB,EAEAA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,UAAU,0CACtC,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,IACd,OAAO,QACP,IAAI,KACJ,YAAY,YAAA,CAAA,CAEhB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAE1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CACC,UAAU,4DACV,cAAc,QACd,eAAe,QACf,EAAE,+BAEF,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,IACd,OAAO,4DACP,IAAI,OACJ,YAAY,YAAA,CAAA,CACd,CACF,EAEAwE,EAAAA,KAAC,IAAE,CAAA,UAAU,0CACX,SAAA,CAAAxE,MAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,MAAM,QAC/B,SAAO,CAAA,GAAG,KAAK,GAAG,KAAK,EAAE,MAAM,QAC/B,SAAO,CAAA,GAAG,KAAK,GAAG,KAAK,EAAE,MAAM,EAChCA,EAAA,IAAC,UAAA,CACC,cAAc,UACd,OAAO,QACP,IAAI,KACJ,YAAY,YAAA,CAAA,CACd,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,0EAA2E,CAAA,EACnFA,EAAA,IAAC,OAAA,CAAK,cAAc,QAAQ,UAAU,kDACpC,EAAE,aAAA,CAAA,CAAc,CAAA,CACpB,CACF,CAAA,CAEJ,EAGM+hD,GAAY,CAChB,OAAQ,IACR,IAAK,IACL,OAAQ,IACR,KAAM,GACR,EAGMvJ,GAAe,CAAC,CAAE,MAAA1rC,KAAY,CAClC,KAAM,CAAE,QAASi6B,CAAY,EAAIt8B,GAAW,EACtCgqB,EAAU2nB,GAAY,EACtB,CAAC9tB,EAASmlB,CAAU,EAAI7zC,EAAAA,SAAS,GAAG,EACpC,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAwB5C,OAtBJE,EAAAA,UAAU,IAAM,EACO,SAAY,CAC/B,GAAI,GAACinC,GAAe,CAACj6B,GAAS,CAAC2nB,GAE3B,GAAA,CACFsQ,EAAa,EAAI,EACXzW,MAAAA,EAAU,MAAMmG,EAAQ,gBAC5B3nB,EAAM,SAAW,MAAQ,MAAQA,EAAM,QACvCi6B,CACF,EACA0M,EAAWnlB,CAAO,QACX1rB,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9C6wC,EAAW,GAAG,CAAA,QACd,CACA1O,EAAa,EAAK,CAAA,CAEtB,GAEa,CACZ,EAAA,CAACj4B,EAAOi6B,EAAatS,CAAO,CAAC,EAE3B3nB,EAGHtI,EAAA,KAAC,MAAI,CAAA,UAAU,gDAAgD,SAAA,CAAA,YACnDsgC,EAAY,aAAexW,EAAQ,IAAExhB,EAAM,MAAA,EACvD,EALiB,IAOrB,EAGA,SAASk1C,GAAWj+C,EAAMk+C,EAAM,CAC9B,GAAIl+C,EAAK,SAAWk+C,EAAK,OAAS,EAC1B,MAAA,IAAI,MAAM,+BAA+B,EAGjD,IAAIC,EAAU,KACd,QAAS1zC,EAAI,EAAGA,EAAIyzC,EAAK,OAAQzzC,IAEpB0zC,GAAAn+C,EAAKyK,CAAC,EAAE,MAAM,CAAC,EAAE,SAAS,GAAI,GAAG,EAEjC0zC,GAAAD,EAAKzzC,CAAC,EAAE,SAAS,EAAE,EAAE,SAAS,EAAG,GAAG,EAGtC,OAAA0zC,GAAAn+C,EAAKA,EAAK,OAAS,CAAC,EAAE,MAAM,CAAC,EAAE,SAAS,GAAI,GAAG,EACnDm+C,CACT,CAGA,MAAMjD,GAAoB,CAAC,CAAE,OAAAvjC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,QAAAsjC,EAAS,SAAAC,EAAU,MAAAv8C,KAAY,CACxF,MAAMmZ,EAAQ,CACZ,CAAE,GAAI,YAAa,MAAO,YAAa,KAAO/b,EAAAA,IAAAob,GAAM,UAAN,CAAA,CAAgB,CAAG,EACjE,CAAE,GAAI,WAAY,MAAO,iBAAkB,KAAOpb,EAAAA,IAAAob,GAAM,SAAN,CAAA,CAAe,CAAG,EACpE,CAAE,GAAI,WAAY,MAAO,WAAY,KAAOpb,EAAAA,IAAAob,GAAM,SAAN,CAAA,CAAe,CAAG,EAC9D,CAAE,GAAI,aAAc,MAAO,aAAc,KAAOpb,EAAAA,IAAAob,GAAM,WAAN,CAAA,CAAiB,CAAG,EACpE,CAAE,GAAI,YAAa,MAAO,YAAa,KAAOpb,MAAAob,GAAM,UAAN,EAAgB,CAAG,CACnE,EAEMiG,EAAU,EAAQze,EAGlBsZ,EAAsBtZ,GACtBA,GAAO,SAAS,eAAe,EAC1B,8CAELA,GAAO,SAAS,cAAc,EACzB,iCAELA,GAAO,SAAS,4BAA4B,EACvC,+CAELA,GAAO,SAAS,wBAAwB,EACnC,yCAEFA,GAAO,QAAQ,kCAAmC,EAAE,GAAK,oBAGlE,OACG5C,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAA7X,EAAA,KAAC6X,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEAET,SAAA,CAAAgF,EAAU,wBAA0B,kBACpC,CAACA,GAAW69B,GAAWC,GACrB36C,EAAAA,KAAA,MAAA,CAAI,UAAU,8DACZ,SAAA,CAAQ06C,EAAA,OAAO,MAAIC,EAAS,MAAA,CAC/B,CAAA,CAAA,CAAA,CAEJ,EAEAn/C,MAAC,OAAI,UAAU,YACZ,WAAM,IAAI,CAACic,EAAM/R,IAAU,CACpB,MAAApG,EAAW8X,IAAgBK,EAAK,GAChCM,EAAc,CAAC8E,GAAWtF,EAAM,UAAerL,GAAAA,EAAE,KAAOkL,CAAW,EAAI1R,EACvEsS,EAAc6E,GAAWzF,IAAgBK,EAAK,GAGlD,OAAAzX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,GAAY,CAAC0Y,EAAc,iCAC3BD,EAAc,iBACdC,EAAc,6BACd,eACF,GAEC,SAAA,CAAKP,EAAA,KACNzX,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CAA6C,SAAAic,EAAK,MAAM,EACvEnY,GAAY,CAACud,GACX7c,EAAA,KAAA,IAAA,CAAE,UAAU,gDACV,SAAA,CAAAyX,EAAK,KAAO,aAAe,2BAC3BA,EAAK,KAAO,YAAc,aAAaijC,GAAS,MAAM,GACtDjjC,EAAK,KAAO,YAAc,YAAYijC,GAAS,MAAM,QAAQC,GAAU,MAAM,GAC7EljC,EAAK,KAAO,cAAgB,8BAC5BA,EAAK,KAAO,aAAe,wBAAwBijC,GAAS,MAAM,QAAQC,GAAU,MAAM,GAAA,CAC7F,CAAA,CAAA,EAEJ,EACC5iC,SACE,MAAI,CAAA,UAAU,yBAAyB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAChF,SAACvc,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CACxF,CAAA,CAAA,CAAA,EAxBGic,EAAK,EA0BZ,CAEH,CAAA,EACH,EAECoF,GACC7c,EAAA,KAAC,MAAI,CAAA,UAAU,6DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACb5W,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,QAC7D,IAAE,CAAA,UAAU,4BACV,SAAAkc,EAAmBtZ,CAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACA5C,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,iLACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAGDC,IAAgB,aACd5b,MAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,uGACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAGMyjC,GAAoB,CAAC,CAAE,OAAA1jC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,UAAA65B,EAAW,QAAAE,EAAS,MAAA/yC,KAAY,CACnF,MAAAy8C,EAAa5J,GAAW,SAAW,MACnC15B,EAAQ,CACZ,CAAE,GAAI,YAAa,MAAO,YAAa,KAAO/b,EAAAA,IAAAg/C,GAAU,UAAV,CAAA,CAAoB,CAAG,EACrE,CAAE,GAAI,WAAY,MAAOK,EAAa,eAAiB,kBAAmB,KAAMA,EAAcr/C,EAAA,IAAAg/C,GAAU,SAAV,EAAmB,QAAMA,GAAU,WAAV,CAAA,CAAqB,CAAG,EAC/I,CAAE,GAAI,aAAc,MAAO,aAAc,KAAOh/C,EAAAA,IAAAg/C,GAAU,WAAV,CAAA,CAAqB,CAAG,EACxE,CAAE,GAAI,YAAa,MAAO,YAAa,KAAOh/C,MAAAob,GAAM,UAAN,EAAgB,CAAG,CACnE,EAEMiG,EAAU,EAAQze,EAGlBsZ,EAAsBtZ,GACtBA,GAAO,SAAS,eAAe,EAC1B,8CAELA,GAAO,SAAS,cAAc,EACzB,gBAAgBy8C,EAAa,MAAQ,MAAM,YAE7Cz8C,GAAO,QAAQ,kCAAmC,EAAE,GAAK,oBAGlE,OACG5C,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEAET,SAAAgF,EAAU,+BAAkCg+B,EAAa,eAAiB,iBAAA,CAC7E,EAEAr/C,MAAC,OAAI,UAAU,YACZ,WAAM,IAAI,CAACic,EAAM/R,IAAU,CACpB,MAAApG,EAAW8X,IAAgBK,EAAK,GAChCM,EAAc,CAAC8E,GAAWtF,EAAM,UAAerL,GAAAA,EAAE,KAAOkL,CAAW,EAAI1R,EACvEsS,EAAc6E,GAAWzF,IAAgBK,EAAK,GAGlD,OAAAzX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,GAAY,CAAC0Y,EAAc,iCAC3BD,EAAc,iBACdC,EAAc,6BACd,eACF,GAEC,SAAA,CAAKP,EAAA,KACNzX,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CAA6C,SAAAic,EAAK,MAAM,EACvEnY,GAAY,CAACud,GACX7c,EAAA,KAAA,IAAA,CAAE,UAAU,gDACV,SAAA,CAAAyX,EAAK,KAAO,aAAe,2BAC3BA,EAAK,KAAO,aAAeojC,EACxB,4BACA,6BACHpjC,EAAK,KAAO,cAAgB,8BAC5BA,EAAK,KAAO,cAAgBojC,EACzB,oCACA,sCAAA,CACN,CAAA,CAAA,EAEJ,EACC9iC,SACE,MAAI,CAAA,UAAU,yBAAyB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAChF,SAACvc,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CACxF,CAAA,CAAA,CAAA,EA3BGic,EAAK,EA6BZ,CAEH,CAAA,EACH,EAECoF,GACC7c,EAAA,KAAC,MAAI,CAAA,UAAU,6DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACb5W,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,QAC7D,IAAE,CAAA,UAAU,4BACV,SAAAkc,EAAmBtZ,CAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACA5C,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,iLACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAGDC,IAAgB,aACd5b,MAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,uGACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAEA,SAAwB65B,IAAY,CAC5B,KAAA,CAAE,QAAAjrC,CAAQ,EAAIE,GAAW,EACzB,CAAE,MAAAC,CAAM,EAAIC,GAAW,EAGvBw3C,EAActqB,SAAO,IAAI,EACzBuqB,EAAoBvqB,SAAO,IAAI,EAGrC/3B,EAAAA,UAAU,IAAM,CACV,OAAO,WACTqiD,EAAY,QAAU,IAAI/iC,GAAuB,OAAO,QAAQ,EAC9CgjC,EAAA,QAAU,IAAI12C,EAC9Bk2C,GAAqB,OACrBC,GACAM,EAAY,OACd,EAEJ,EAAG,EAAE,EAGL,KAAM,CAAC1M,EAAWC,CAAY,EAAI91C,EAAAA,SAAS,IAAI,EACzC,CAAC+1C,EAASC,CAAU,EAAIh2C,EAAAA,SAAS,IAAI,EACrC,CAACi2C,EAAYC,CAAa,EAAIl2C,EAAAA,SAAS,EAAE,EACzC,CAACm2C,EAAUC,CAAW,EAAIp2C,EAAAA,SAAS,EAAE,EAGrC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACigD,EAAmBC,CAAoB,EAAIlgD,EAAAA,SAAS,EAAK,EAC1D,CAACmgD,EAAYC,CAAa,EAAIpgD,EAAAA,SAAS,MAAM,EAC7C,CAACoe,EAAcC,CAAe,EAAIre,EAAAA,SAAS,EAAK,EAChD,CAAC8d,EAAmBC,CAAoB,EAAI/d,EAAAA,SAAS,EAAK,EAC1D,CAACse,EAAiBC,CAAkB,EAAIve,EAAAA,SAAS,EAAK,EACtD,CAACugD,EAAUC,CAAW,EAAIxgD,EAAAA,SAAS,IAAI,EACvC,CAAC6uB,EAAW4xB,CAAY,EAAIzgD,EAAAA,SAAS,IAAI,EACzC,CAACwe,EAAYC,CAAa,EAAIze,WAAS,CAC3C,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,EACK,CAACq3C,EAAiBC,CAAkB,EAAIt3C,EAAAA,SAAS,EAAK,EACtD,CAAC+2C,EAAUC,CAAW,EAAIh3C,EAAAA,SAAS,EAAG,EACtC,CAACm3C,EAAoBC,CAAqB,EAAIp3C,EAAAA,SAAS,EAAK,EAC5D,CAACihD,EAAWwB,CAAY,EAAIziD,EAAAA,SAAS,IAAI,EACzC,CAAC0iD,EAAaC,CAAc,EAAI3iD,EAAAA,SAAS,IAAI,EAC7C,CAACqgD,EAAYC,CAAa,EAAItgD,EAAAA,SAAS,IAAI,EAC3C,CAAC4gD,GAAcC,EAAe,EAAI7gD,EAAAA,SAAS,EAAK,EAGtDE,EAAAA,UAAU,IAAM,CACd,MAAMmgB,GAAe,IAAM,CACX5B,EAAA,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,CACH,EAEO,cAAA,iBAAiB,SAAU4B,EAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,EAAY,CAChE,EAAG,EAAE,EAGC,MAAAuiC,GAAkB3qB,SAAO,IAAI,EAGbqD,EAAAA,YAAY,MAAOunB,GAAcC,GAAYv0B,KAAa,CAC1E,GAAA,CAACi0B,EAAkB,QAAgB,OAAA,KAGvC,MAAMO,GAAaX,GACjB,CAACS,GAAa,QAASC,GAAW,OAAO,EACzC,CAACX,GAAU,MAAM,CACnB,EAEI,GAAA,CACI,KAAA,CAACa,EAAW,EAAI,MAAMR,EAAkB,QAAQ,gBAAgBO,GAAYx0B,EAAQ,EACnF,MAAA,CACL,KAAM,CAACs0B,GAAa,QAASC,GAAW,OAAO,EAC/C,KAAM,CAACX,GAAU,MAAM,EACvB,MAAOa,GACP,cAAe,EACjB,OACc,CAEd,GAAIF,GAAW,QAAQ,YAAA,IAAkBd,GAAqB,KAAK,cAC7D,GAAA,CAEF,MAAMiB,GAAab,GACjB,CAACS,GAAa,QAASb,GAAqB,IAAI,EAChD,CAACG,GAAU,MAAM,CACnB,EACM,CAACe,EAAS,EAAI,MAAMV,EAAkB,QAAQ,gBAAgBS,GAAY10B,EAAQ,EAGlF40B,GAAaf,GACjB,CAACJ,GAAqB,KAAMA,GAAqB,IAAI,EACrD,CAACG,GAAU,MAAM,CACnB,EACM,CAACiB,EAAU,EAAI,MAAMZ,EAAkB,QAAQ,gBAAgBW,GAAYD,EAAS,EAEnF,MAAA,CACL,KAAM,CAACL,GAAa,QAASb,GAAqB,KAAMA,GAAqB,IAAI,EACjF,KAAM,CAACG,GAAU,OAAQA,GAAU,MAAM,EACzC,MAAOiB,GACP,cAAe,EACjB,QACOpgD,GAAO,CACN,eAAA,MAAM,gCAAiCA,EAAK,EAC7C,IAAA,CAGJ,OAAA,IAAA,CACT,EACC,CAAE,CAAA,EAGC,MAAA89C,EAAwBxlB,EAAAA,YAAY,IAChCua,GAAW,SAAW,OAASE,GAAS,SAAW,QACnDF,GAAW,SAAW,QAAUE,GAAS,SAAW,MAC3D,CAACF,GAAW,OAAQE,GAAS,MAAM,CAAC,EAGjCiC,EAAW1c,EAAAA,YAAY,SAAY,CACnC,GAAA,GAACua,GAAa,CAACE,GAAW,CAACE,GAAc,CAACnrC,GAAO,IAAM,CAAC03C,EAAkB,SAE1E,GAAA,CACF3B,GAAgB,EAAI,EACpBP,EAAc,IAAI,EACdsC,GAAgB,SAClBA,GAAgB,QAAQ,MAAM,EAEhBA,GAAA,QAAU,IAAI,gBAE9B,MAAMr0B,GAAWjiB,GAAkB2pC,EAAYJ,EAAU,QAAQ,EAG3DwN,GAAqBxN,EAAU,SAAW,MAAQmM,GAAqB,KAAOnM,EAAU,QACxFyN,GAAmBvN,EAAQ,SAAW,MAAQiM,GAAqB,KAAOjM,EAAQ,QAGlFwN,GAAe,CAEnB,CAAE,KAAM,CAACF,GAAoBC,EAAgB,EAAG,KAAM,CAAC,GAAI,CAAE,EAC7D,CAAE,KAAM,CAACD,GAAoBC,EAAgB,EAAG,KAAM,CAAC,GAAG,CAAE,EAC5D,CAAE,KAAM,CAACD,GAAoBC,EAAgB,EAAG,KAAM,CAAC,GAAK,CAAE,CAChE,EAGKC,GAAa,CAAC,EAAE,KAAK,SAASvB,GAAqB,IAAI,GAC7CuB,GAAA,KACX,CACE,KAAM,CAACF,GAAoBrB,GAAqB,KAAMsB,EAAgB,EACtE,KAAM,CAAC,IAAM,GAAI,CACnB,EACA,CACE,KAAM,CAACD,GAAoBrB,GAAqB,KAAMsB,EAAgB,EACtE,KAAM,CAAC,IAAK,GAAG,CACjB,EACA,CACE,KAAM,CAACD,GAAoBrB,GAAqB,KAAMsB,EAAgB,EACtE,KAAM,CAAC,IAAM,GAAG,CAClB,EACA,CACE,KAAM,CAACD,GAAoBrB,GAAqB,KAAMsB,EAAgB,EACtE,KAAM,CAAC,IAAK,GAAI,CAAA,CAEpB,EAGF,IAAIE,GAAgB,GAChBC,GAAW,KAEf,UAAWpN,MAASkN,GACd,GAAA,CACF,MAAMp/C,GAAOi+C,GAAW/L,GAAM,KAAMA,GAAM,IAAI,EACxC,CAACqN,EAAe,EAAI,MAAMlB,EAAkB,QAAQ,gBAAgB,WACxEr+C,GACAoqB,EACF,EAEIm1B,GAAkBF,KACJA,GAAAE,GACLrN,GAAAA,SAEC,CACd,QAAA,CAIA,GAAAmN,KAAkB,IAAM,CAACC,GAAU,CACrCrN,EAAY,EAAE,EACdqM,EAAa,IAAI,EAEbxM,GAAcA,EAAW,OAAS,GACpC,WAAW,IAAM,CACV2K,IACHN,EAAc,oBAAoB,GAEnC,GAAG,EAER,MAAA,CAGF,MAAM5P,GAAkBjnB,GAAmB+5B,GAAezN,EAAQ,QAAQ,EAC1EK,EAAY1F,EAAe,EAC3B4P,EAAc,IAAI,EAGlB,MAAMjK,GAAQ,CACZ,KAAMoN,GAAS,KAAK,IAAI,CAAC94C,GAASL,MAEzB,CACL,OAFaK,GAAQ,YAAkB,IAAAq3C,GAAqB,KAAK,YAAY,EAE5D,OACTr3C,GAAQ,gBAAkBkrC,EAAU,SAAS,YAAY,EAAIA,EAAU,OACvElrC,GAAQ,gBAAkBorC,EAAQ,SAAS,YAAY,EAAIA,EAAQ,OAAS,SACtF,EACD,EACD,eAAgBrF,GAChB,YAAa,EACb,KAAM+S,GAAS,IACjB,EAGI1N,EAAQ,SAAW,OACrBM,GAAM,KAAK,KAAK,CAAE,OAAQ,MAAO,EAG/BR,EAAU,SAAW,OACvBQ,GAAM,KAAK,QAAQ,CAAE,OAAQ,MAAO,EAsBhC,MAAAsN,GAAS,MAlBc,SAAY,CACnC,GAAA,CACF,MAAMC,GAAmBt3C,GAAkB,IAAKupC,EAAU,QAAQ,EAC5D1xC,GAAOi+C,GAAWqB,GAAS,KAAMA,GAAS,IAAI,EAC9C,CAACI,EAAiB,EAAI,MAAMrB,EAAkB,QAAQ,gBAAgB,WAC1Er+C,GACAy/C,EACF,EAEME,GAAkBv1B,GAAWs1B,GAAqBD,GAClDD,IAAWG,GAAiBN,IAAiB,OAAUM,GACtD,OAAA,OAAOH,EAAM,EAAI,UACjB3gD,GAAO,CACN,eAAA,MAAM,kCAAmCA,EAAK,EAC/C,CAAA,CAEX,GAE0C,EAC1CqzC,GAAM,YAAcsN,GACpBlB,EAAapM,EAAK,EAClBsM,EAAegB,EAAM,QAEd3gD,GAAO,CACV,GAAAA,GAAM,OAAS,aAAc,OACzB,QAAA,MAAM,uBAAwBA,EAAK,EAEvCizC,GAAcA,EAAW,OAAS,GACpC,WAAW,IAAM,CACV2K,IACHN,EAAc,qBAAqB,GAEpC,GAAG,CACR,QACA,CACAO,GAAgB,EAAK,CAAA,CACvB,EACC,CAAChL,EAAWE,EAASE,EAAYnrC,GAAO,EAAE,CAAC,EAG9C5K,EAAAA,UAAU,IAAM,CACV21C,GAAaE,GAAWE,EACtB6K,KAEF1K,EAAYH,CAAU,EACtBwM,EAAa,IAAI,EACjBnC,EAAc,IAAI,EAClBqC,EAAe,IAAI,GAEV3K,EAAA,GAGX5B,EAAY,EAAE,EACduM,EAAe,IAAI,EACrB,EACC,CAAC9M,EAAWE,EAASE,EAAY+B,EAAU8I,CAAqB,CAAC,EAG9D,MAAAiD,EAAuB,MAAO72C,GAAOd,KAAW,CAChD,GAAA,CAACc,IAASA,GAAM,SAAW,OAAS,CAACq1C,EAAY,QAAgB,MAAA,GAEjE,GAAA,CACF,MAAMhjC,GAAS,MAAMgjC,EAAY,QAAQ,UAAU,EAC7C9zB,GAAgB,IAAI3iB,EAAgBoB,GAAM,QAASme,GAAW9L,EAAM,EAEpE,CAACykC,EAAe,EAAI,MAAM,QAAQ,IAAI,CAC1Cv1B,GAAc,UAAU9jB,EAASq3C,GAAqB,UAAU,CAAA,CACjE,EAED,GAAIgC,GAAkB53C,GAAQ,CAC5B,MAAM4gB,GAAcC,GAKpB,MAJkB,MAAMwB,GAAc,QACpCuzB,GAAqB,WACrBh1B,EACF,GACgB,KAAK,CAAA,CAEhB,MAAA,SACAhqB,GAAO,CACN,eAAA,MAAM,iCAAkCA,EAAK,EAC9C,EAAA,CAEX,EAGMo1C,EAAa,SAAY,CAC7B,GAAI,CAACztC,GAAW,CAACkrC,GAAa,CAACE,GAAW,CAACE,GAAc,CAACnrC,GAAO,IAAM,CAACy3C,EAAY,QAAS,CAC3F/+C,EAAM,MAAM,2BAA2B,EACvC,MAAA,CAGF9B,EAAW,EAAI,EACfqc,EAAqB,EAAI,EACzByiC,EAAY,WAAW,EACvBC,EAAa,IAAI,EAEb,GAAA,CACF,MAAMlhC,GAAS,MAAMgjC,EAAY,QAAQ,UAAU,EAC7Ch0B,GAAWjiB,GAAkB2pC,EAAYJ,EAAU,QAAQ,EAGjE,GAAIiL,IAAyB,CACrB,MAAAmD,GAAe,IAAIn4C,EACvBk2C,GAAqB,KACrB,CACE,sCACA,sCACA,2EACF,EACAziC,EACF,EAEAihC,EAAY,UAAU,EAClB,IAAAjzB,GAEAsoB,EAAU,SAAW,OAASE,EAAQ,SAAW,OAE9CxoB,GAAA,MAAM02B,GAAa,QAAQ,CAC9B,MAAO11B,EAAA,CACR,EAGIhB,GAAA,MAAM02B,GAAa,SAAS11B,EAAQ,EAG3CiyB,EAAY,YAAY,EACxB,MAAMjzB,GAAG,KAAK,EACdizB,EAAY,WAAW,EAGvB,WAAW,IAAM,CACfziC,EAAqB,EAAK,EAC1ByiC,EAAY,IAAI,EAEhB,WAAW,IAAM,CACfniC,EAAgB,EAAI,EAEpB,WAAW,IAAM,CACfE,EAAmB,EAAI,GACtB,GAAI,EAEP,WAAW,IAAM,CACf23B,EAAc,EAAE,EAChBE,EAAY,EAAE,EACd/3B,EAAgB,EAAK,GACpB,GAAK,GACP,GAAG,GACL,GAAI,EAEP,MAAA,CAIE,GAAA,CAACyiC,IAAyB,CAExB,GAAAjL,EAAU,SAAW,QACvB2K,EAAY,UAAU,EAElB,CADa,MAAMuD,EAAqBlO,EAAWtnB,EAAQ,GAChD,CACbkyB,EAAa,yBAAyB,EACtCD,EAAY,OAAO,EACnB,MAAA,CAKJ,MAAM0D,GAAiB53C,GAAkB6pC,EAAUJ,EAAQ,QAAQ,EAC7DuC,GAAqB,OAAO,KAAK,OAAO,IAAMvB,GAAY,GAAG,CAAC,EAC9DvoB,GAAgB01B,GAAiB5L,GAAsB,OAE7DkI,EAAY,UAAU,EAChB,MAAA7zB,GAAS,IAAI7gB,EACjBk2C,GAAqB,WACrBE,GACA3iC,EACF,EAEMyO,GAAW,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,EAAI,KAE7C,IAAAT,GACJ,GAAIsoB,EAAU,SAAW,OAASE,EAAQ,SAAW,MAAO,CAE1D,MAAMsN,GAAqBxN,EAAU,SAAW,MAAQmM,GAAqB,KAAOnM,EAAU,QACxFyN,GAAmBvN,EAAQ,SAAW,MAAQiM,GAAqB,KAAOjM,EAAQ,QAElF5xC,GAAOi+C,GACX,CAACiB,GAAoBC,EAAgB,EACrC,CAACnB,GAAU,MAAM,CACnB,EAeMgC,GAZc,MAAMx3B,GAAO,WAAW,YAC1C,CACE,KAAAxoB,GACA,UAAW4xC,EAAQ,SAAW,MAAQiM,GAAqB,WAAar3C,EACxE,SAAAqjB,GACA,SAAAO,GACA,iBAAkBC,EACpB,EACA,CAAE,MAAOqnB,EAAU,SAAW,MAAQtnB,GAAW,CAAE,CACrD,EAG+B,KAAO,KAElC,GAAAwnB,EAAQ,SAAW,MAAO,CAE5B,MAAMqO,GAAWz3B,GAAO,UAAU,mBAAmB,aAAc,CAAC,MAAM,CAAC,EACrE03B,GAAa13B,GAAO,UAAU,mBAAmB,cAAe,CAAC6B,GAAc7jB,CAAO,CAAC,EACvF25C,GAAa33B,GAAO,UAAU,mBAAmB,WAAW,EAElEY,GAAK,MAAMZ,GAAO,UAChB,CAACy3B,GAAUC,GAAYC,EAAU,EACjC,CACE,MAAOzO,EAAU,SAAW,MAAQtnB,GAAW,EAC/C,SAAA41B,EAAA,CAEJ,CAAA,MAEA52B,GAAK,MAAMZ,GAAO,WAChB,CACE,KAAAxoB,GACA,UAAWwG,EACX,SAAAqjB,GACA,SAAAO,GACA,iBAAkBC,EACpB,EACA,CACE,MAAOqnB,EAAU,SAAW,MAAQtnB,GAAW,EAC/C,SAAA41B,EAAA,CAEJ,CACF,KACK,CAEL,MAAMhgD,GAAOi+C,GACXnB,EAAU,KAAK,IACb/zC,IAAAA,GAAM,SAAW,OAAS80C,GAAqB,KAC/C90C,GAAM,SAAW2oC,EAAU,OAASA,EAAU,QAC9CE,EAAQ,OACV,EACAkL,EAAU,IACZ,EAYMkD,GATc,MAAMx3B,GAAO,WAAW,YAAY,CACtD,KAAAxoB,GACA,UAAWwG,EACX,SAAAqjB,GACA,SAAAO,GACA,iBAAkBC,EAAA,CACnB,EAG8B,KAAO,KAEtCjB,GAAK,MAAMZ,GAAO,WAChB,CACE,KAAAxoB,GACA,UAAWwG,EACX,SAAAqjB,GACA,SAAAO,GACA,iBAAkBC,EACpB,EACA,CAAE,SAAA21B,EAAS,CACb,CAAA,CAGF3D,EAAY,YAAY,EACxB,MAAMjzB,GAAG,KAAK,EACdizB,EAAY,WAAW,EAGvB,WAAW,IAAM,CACfziC,EAAqB,EAAK,EAC1ByiC,EAAY,IAAI,EAEhB,WAAW,IAAM,CACfniC,EAAgB,EAAI,EAEpB,WAAW,IAAM,CACfE,EAAmB,EAAI,GACtB,GAAI,EAEP,WAAW,IAAM,CACf23B,EAAc,EAAE,EAChBE,EAAY,EAAE,EACd/3B,EAAgB,EAAK,GACpB,GAAK,GACP,GAAG,GACL,GAAI,CAAA,QAGFrb,GAAO,CACN,QAAA,MAAM,cAAeA,EAAK,EAClC,IAAIktB,GAAe,wBAGfltB,GAAM,OAAS,iBACFktB,GAAA,0DACNltB,GAAM,OAAS,0BACTktB,GAAA,oDACNltB,GAAM,SACfktB,GAAeltB,GAAM,QAGvBy9C,EAAavwB,EAAY,EACzBswB,EAAY,OAAO,CAAA,QACnB,CACA9+C,EAAW,EAAK,CAAA,CAEpB,EAEMq3C,EAAwB54C,IAAU,CAClCA,KAAU,SACZi3C,EAAsB,EAAI,GAE1BA,EAAsB,EAAK,EACfJ,EAAA,WAAW72C,EAAK,CAAC,EAEjC,EAGM2hD,EAAsB,IACrBn3C,EACDlJ,EAAgB,gBAChB,CAACo0C,GAAa,CAACE,EAAgB,gBAC9BE,EACD2K,IAAgB,CAACE,EAAsB,EAAU,wBACjDT,GAAc,CAACS,EAA2B,GAAA,CAACF,GAAqB,qBAChE/K,EAAU,SAAW,OAASE,GAAS,SAAW,OAAe,WACjEF,EAAU,SAAW,QAAUE,GAAS,SAAW,MAAc,cAC9D,OALiB,eAHH,iBAsBjBx6B,GAAQ,SAAS,cAAc,OAAO,EAC5CA,GAAM,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAmBX,SAAA,KAAK,YAAYA,EAAK,EAEzB,MAAAwmC,GAAgB9kC,IAAW,CAE/BsB,EAAmB,EAAK,CAC1B,EAEMk3B,EAAqBvoC,IAAU,CAC/BizC,IAAe,OACjBrK,EAAa5oC,EAAK,EAElB8oC,EAAW9oC,EAAK,EAElBgzC,EAAqB,EAAK,CAC5B,EAMMyB,GAAmB,SAAY,CACnC,GAAI,CAACh3C,GAAW,CAACkrC,GAAa,CAACI,EAAY,CACzCzyC,EAAM,MAAM,2BAA2B,EACvC,MAAA,CAGF9B,EAAW,EAAI,EACfqc,EAAqB,EAAI,EACzByiC,EAAY,WAAW,EACvBC,EAAa,IAAI,EAEb,GAAA,CACF,QAAQ,IAAI,kCAAmC,CAC7C,UAAW5K,EAAU,OACrB,QAASE,GAAS,OAClB,OAAQE,EACR,QAAAtrC,CAAA,CACD,EAIK,MAAA4U,GAAS,MADEgjC,EAAY,SAAW,IAAI/iC,GAAuB,OAAO,QAAQ,GACpD,UAAU,EACxC,QAAQ,IAAI,cAAe,MAAMD,GAAO,YAAY,EAEpD,MAAMnT,GAASE,GAAkB2pC,EAAY,EAAE,EAC/C,QAAQ,IAAI,iBAAkB7pC,GAAO,SAAA,CAAU,EAEzC,MAAA63C,GAAe,IAAIn4C,EACvBk2C,GAAqB,KACrB,CACE,sCACA,sCACA,4EACA,6DACF,EACAziC,EACF,EAGI,GAAAs2B,EAAU,SAAW,OAAQ,CAC/B,MAAMnnB,GAAU,MAAMu1B,GAAa,UAAUt5C,CAAO,EAEpD,GADA,QAAQ,IAAI,wBAAyB+jB,GAAQ,SAAA,CAAU,EACnDA,GAAUtiB,GACZ,MAAM,IAAI,MAAM,wCAAwCqd,GAAmBrd,GAAQ,EAAE,CAAC,gBAAgBqd,GAAmBiF,GAAS,EAAE,CAAC,EAAE,CACzI,CAGF8xB,EAAY,UAAU,EAClB,IAAAjzB,GACAsoB,EAAU,SAAW,OAASE,GAAS,SAAW,QACpD,QAAQ,IAAI,yBAAyB,EACrCxoB,GAAK,MAAM02B,GAAa,QAAQ,CAAE,MAAO73C,GAAQ,GACxCypC,EAAU,SAAW,QAAUE,GAAS,SAAW,QAC5D,QAAQ,IAAI,2BAA2B,EAClCxoB,GAAA,MAAM02B,GAAa,SAAS73C,EAAM,GAGjC,QAAA,IAAI,oBAAqBmhB,GAAG,IAAI,EACxCizB,EAAY,YAAY,EAElB,MAAA1gC,GAAU,MAAMyN,GAAG,KAAK,EACtB,QAAA,IAAI,yBAA0BzN,EAAO,EAC7C0gC,EAAY,WAAW,EAGvB,WAAW,IAAM,CACfziC,EAAqB,EAAK,EAC1ByiC,EAAY,IAAI,EAEhB,WAAW,IAAM,CACfniC,EAAgB,EAAI,EAEpB,WAAW,IAAM,CACfE,EAAmB,EAAI,GACtB,GAAI,EAEP,WAAW,IAAM,CACf23B,EAAc,EAAE,EAChBE,EAAY,EAAE,EACd/3B,EAAgB,EAAK,GACpB,GAAK,GACP,GAAG,GACL,GAAI,QAEArb,GAAO,CACN,QAAA,MAAM,qBAAsBA,EAAK,EACzC,MAAMktB,GAAeltB,GAAM,QAAUA,GAAM,SAAW,wBACtD,QAAQ,MAAM,iBAAkB,CAC9B,KAAMA,GAAM,KACZ,QAASA,GAAM,QACf,OAAQA,GAAM,OACd,KAAMA,GAAM,IAAA,CACb,EACDy9C,EAAavwB,EAAY,EACzBswB,EAAY,OAAO,EACnBh9C,EAAM,MAAM0sB,EAAY,CAAA,QACxB,CACAxuB,EAAW,EAAK,CAAA,CAEpB,EAGM2yB,GAAoB,CACxB,OAAQ,CAAE,QAAS,EAAG,EAAG,EAAG,EAC5B,QAAS,CACP,QAAS,EACT,EAAG,EACH,WAAY,CACV,SAAU,GACV,KAAM,iBACN,gBAAiB,EAAA,CAErB,EACA,KAAM,CACJ,QAAS,EACT,EAAG,IACH,WAAY,CACV,SAAU,EAAA,CACZ,CAEJ,EAEMoD,GAAe,CACnB,OAAQ,CAAE,QAAS,EAAG,EAAG,GAAI,EAC7B,QAAS,CACP,QAAS,EACT,EAAG,EACH,WAAY,CAAE,SAAU,EAAI,CAAA,CAEhC,EAEM0nB,GAAiB,CACrB,MAAO,CACL,MAAO,KACP,WAAY,CAAE,SAAU,EAAI,CAC9B,EACA,IAAK,CACH,MAAO,GAAA,CAEX,EAEMoF,GAAqB,CACzB,MAAO,CACL,MAAO,IACP,OAAQ,IACR,WAAY,CAAE,SAAU,EAAI,CAC9B,EACA,IAAK,CAAE,MAAO,GAAK,CACrB,EAGE,OAAA3/C,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,6BACV,SAAU2lB,GACV,QAAQ,SACR,QAAQ,UACR,KAAK,OAGJ,SAAA,CACCjW,GAAAhe,EAAA,IAACqgB,GAAA,CACC,MAAOjC,EAAW,MAClB,OAAQA,EAAW,OACnB,eAAgB,IAChB,QAAS,GACT,QAAS,GACT,iBAAkB,GAClB,iBAAkB,GAClB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,SAAS,EAC9D,MAAO,CACL,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,OACR,OAAQ,MACR,cAAe,MAAA,CACjB,CACF,EAIFpe,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,0GACV,SAAU+oB,GAEV,SAACr3B,EAAAA,IAAAinC,GAAA,CAAgB,KAAK,OACnB,SAAC18B,EAqCA/F,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,YACV,SAAU2lB,GACV,QAAQ,SACR,QAAQ,UACR,KAAK,OAGL,SAAA,CAAAzvB,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,YACV,SAAU+oB,GAEV,SAAA,CAACr3B,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,OAAA,EACAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,WACV,WAAY,CAAE,MAAO,IAAK,EAC1B,WAAY,CAAE,KAAM,SAAU,UAAW,GAAI,EAE7C,SAAA,CAAAtO,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO61C,EACP,SAAWruC,IAAM,CACT,MAAAzH,GAAQyH,GAAE,OAAO,OACnBzH,KAAU,IAAM,cAAc,KAAKA,EAAK,KAC1C+1C,EAAc/1C,EAAK,EACnBmgD,EAAc,IAAI,EAClBO,GAAgB,EAAI,EAExB,EACA,YAAY,MACZ,UAAU,+OAAA,CACZ,EACAzgD,EAAA,IAACsO,EAAO,OAAP,CACC,QAAS,IAAM,CACb0xC,EAAc,MAAM,EACpBF,EAAqB,EAAI,CAC3B,EACA,UAAU,8PACV,SAAUf,GACV,WAAW,QACX,SAAS,MAER,SACCtJ,EAAAjxC,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa/G,CAAS,EAAG,IAAKA,EAAU,OAAQ,UAAU,SAAU,CAAA,EAC9Ez1C,EAAAA,IAAC,OAAM,CAAA,SAAAy1C,EAAU,MAAO,CAAA,CAAA,CAAA,CAC1B,EAEA,cAAA,CAAA,CAEJ,CAAA,CACF,EACCA,GAAaz1C,EAAAA,IAACw4C,GAAa,CAAA,MAAO/C,CAAW,CAAA,CAAA,CAAA,CAChD,EAGAz1C,EAAAA,IAAC,MAAI,CAAA,UAAU,2BACb,SAAAA,EAAA,IAACsO,EAAO,OAAP,CACC,QAAS,IAAM,CACb,MAAMuqC,GAAYpD,EACZqD,GAAajD,EACnBH,EAAaC,CAAO,EACpBG,EAAcC,CAAQ,EACtBH,EAAWiD,EAAS,EACpB7C,EAAY8C,EAAU,CACxB,EACA,UAAU,qHACV,SAAUqL,GACV,WAAW,QACX,SAAS,MAET,SAAAnkD,EAAAA,IAAC+4C,GAAc,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,EAE7B,EAGAv0C,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,YACV,SAAU+oB,GAEV,SAAA,CAACr3B,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,KAAA,EACAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,WACV,WAAY,CAAE,MAAO,IAAK,EAC1B,WAAY,CAAE,KAAM,SAAU,UAAW,GAAI,EAE7C,SAAA,CAAAtO,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO+1C,EACP,SAAQ,GACR,YAAY,MACZ,UAAU,+OAAA,CACZ,EACA/1C,EAAA,IAACsO,EAAO,OAAP,CACC,QAAS,IAAM,CACb0xC,EAAc,IAAI,EAClBF,EAAqB,EAAI,CAC3B,EACA,UAAU,8PACV,SAAUf,GACV,WAAW,QACX,SAAS,MAER,SACCpJ,EAAAnxC,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa7G,CAAO,EAAG,IAAKA,EAAQ,OAAQ,UAAU,SAAU,CAAA,EAC1E31C,EAAAA,IAAC,OAAM,CAAA,SAAA21C,EAAQ,MAAO,CAAA,CAAA,CAAA,CACxB,EAEA,cAAA,CAAA,CAEJ,CAAA,CACF,EACCA,GAAW31C,EAAAA,IAACw4C,GAAa,CAAA,MAAO7C,CAAS,CAAA,CAAA,CAAA,CAC5C,QAGC1O,GACC,CAAA,SAAAziC,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,+FACV,SAAU+oB,GACV,QAAQ,SACR,QAAQ,UACR,KAAK,OAGL,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,gBAAgB,SAAA,CAAA,QAAMq8C,EAAYA,EAAU,KAAK,IAAYniC,KAAAA,GAAM,KAAO,QAAQ,CAAC,CAAC,EAAE,KAAK,MAAM,EAAI,KAAK,IAAA,EAAE,QAC3H,OAAK,CAAA,UAAU,4BAA4B,MAAM,+EAA+E,SAAC,GAAA,CAAA,CAAA,EACpI,EACA1e,EAAAA,IAAC,OAAK,CAAA,UAAU,gBACb,SAAA6gD,GAAahL,EACZ,IAAIA,GAAcgL,EAAU,KAAK,OAAO,CAACn3C,GAAGC,KAAMD,GAAIC,GAAG,CAAC,EAAI,MAAU,QAAQ,CAAC,CAAC,IAAI8rC,GAAW,MAAM,GACrG,IACN,CAAA,CAAA,EACF,EACAjxC,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAY,eAAA,QAC3C,OAAK,CAAA,UAAU,4BAA4B,MAAM,gDAAgD,SAAC,GAAA,CAAA,CAAA,EACrG,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAyB,2BAAA,CAAA,CAAA,CAC3D,CAAA,CAAA,EACF,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,EAGpEwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAM0yC,EAAmB,CAACD,CAAe,EAClD,UAAU,qFAET,SAAA,CAAAA,EAAkB,eAAiB,eACpCj3C,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,UACV,KAAK,OACL,OAAO,eACP,QAAQ,YACR,QAAS,CAAE,OAAQ2oC,EAAkB,IAAM,CAAE,EAC7C,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAAj3C,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EAGAA,EAAAA,IAACinC,IACE,SACCgQ,GAAAzyC,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,+DACV,QAAS,CAAE,OAAQ,EAAG,QAAS,CAAE,EACjC,QAAS,CAAE,OAAQ,OAAQ,QAAS,CAAE,EACtC,KAAM,CAAE,OAAQ,EAAG,QAAS,CAAE,EAC9B,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAe,kBAAA,EAC/CwE,EAAAA,KAAC,OAAK,CAAA,UAAU,gBACb,SAAA,CAAAk8C,EAAA,EAA0B7K,EAAaE,EAAS,IAAEJ,GAAS,MAAA,CAC9D,CAAA,CAAA,EACF,EAEC,CAAC+K,EAAsB,GAEpBl8C,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,gBAAgB,SAAA,CAAA,oCAAkCmyC,EAAS,IAAA,EAAE,EAC7EnyC,EAAAA,KAAC,OAAK,CAAA,UAAU,gBACb,SAAA,CAAAuxC,GAAY,OAAOA,GAAY,EAAIY,EAAS,IAAI,EAAE,QAAQ,CAAC,EAAE,IAAEhB,GAAS,MAAA,CAC3E,CAAA,CAAA,EACF,EAECkL,GACCr8C,EAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAK,QAAA,EACpCA,EAAA,IAAA,OAAA,CAAK,UAAU,gBACb,SAAU6gD,EAAA,KAAK,IAAI,CAAC/zC,GAAO5C,KACzB1F,EAAAA,KAAAZ,GAAM,SAAN,CACE,SAAA,CAAAsG,GAAQ,GAAK,MACb4C,GAAM,MAAA,CAFY,EAAA5C,EAGrB,CACD,CACH,CAAA,CAAA,EACF,EAGDo4C,IAAgB,MACd99C,OAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,gBAAgB,SAAY,eAAA,EAC5CwE,EAAAA,KAAC,OAAK,CAAA,UAAW,GACf89C,EAAc,GAAK,eACnBA,EAAc,EAAI,kBAClB,eACF,GACG,SAAA,CAAAA,EAAY,QAAQ,CAAC,EAAE,GAAA,CAC1B,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CAAA,CAIR,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CAAA,EA1QF99C,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,mBACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,KAAM,CAAE,QAAS,CAAE,EAEnB,SAAA,CAAAtO,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,OACV,WAAY,CAAE,MAAO,GAAI,EACzB,WAAY,CAAE,KAAM,SAAU,UAAW,IAAK,QAAS,EAAG,EAE1D,SAACtO,EAAA,IAAAogB,GAAA,CAAS,KAAM,GAAI,UAAU,0CAA2C,CAAA,CAAA,CAC3E,EACApgB,EAAA,IAACsO,EAAO,GAAP,CACC,UAAU,2DACV,SAAU+oB,GACX,SAAA,qBAAA,CAED,EACAr3B,EAAA,IAACsO,EAAO,EAAP,CACC,UAAU,wCACV,SAAU+oB,GACX,SAAA,qDAAA,CAED,EACAr3B,EAAA,IAACsO,EAAO,OAAP,CACC,QAAS,iBACT,UAAU,kGACV,SAAUywC,GACV,WAAW,QACX,SAAS,MACV,SAAA,gBAAA,CAAA,CAED,CAAA,CAAA,CA4ON,CAAA,CAAA,CACF,EAGA/+C,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,4GACV,SAAU+oB,GAEV,SAAA7yB,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,uDAAuD,SAEvE,qBAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACZ,SAAA,CAAA,CAAC,GAAK,EAAK,CAAG,EAAE,IAAKzE,IACpByE,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMm0C,EAAqB54C,GAAM,UAAU,EACpD,UAAW;AAAA,sBACP42C,IAAa52C,IAAS,CAACg3C,EACrB,oEACA,qFACJ,+CAED,SAAA,CAAAh3C,GAAM,GAAA,CAAA,EARFA,EAAA,CAUR,EACDC,EAAA,IAAC,SAAA,CACC,QAAS,IAAM24C,EAAqB,QAAQ,EAC5C,UAAW;AAAA,oBACP5B,EACE,oEACA,qFACJ,+CACH,SAAA,QAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAECA,GACCvyC,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO22C,EACP,SAAWnvC,IAAM,CACf,MAAMzH,GAAQ,WAAWyH,GAAE,OAAO,KAAK,EACnC,CAAC,MAAMzH,EAAK,GAAKA,IAAS,GAAKA,IAAS,KAC1C62C,EAAY72C,EAAK,CAErB,EACA,UAAU,wPACV,YAAY,UAAA,CACd,EACCC,EAAA,IAAA,OAAA,CAAK,UAAU,2CAA2C,SAAC,GAAA,CAAA,CAAA,CAC9D,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,EAGAA,EAAA,IAACsO,EAAO,OAAP,CACC,QAASoyC,IAA0Ba,GAAmBvJ,EACtD,SAAU32C,GAAW,CAACo0C,GAAa,CAACE,GAAW,CAACE,GAAe,CAACE,GAAY,CAAC2K,EAAsB,EACnG,UAAW;AAAA;AAAA,YAEPr/C,GAAW,CAACo0C,GAAa,CAACE,GAAW,CAACE,GAAe,CAACE,GAAY,CAAC2K,EAAsB,EACvF,mFACA,8DACJ;AAAA,UAEF,SAAU3B,GACV,WAAW,QACX,SAAS,MAER,SAAoB2C,EAAA,CAAA,CACvB,EAGCzB,GAAc,CAACS,EAAsB,SACnC,MAAI,CAAA,UAAU,wCACZ,SACHT,EAAA,EAIFjgD,EAAA,IAAC6+C,GAAA,CACC,OAAQgB,EACR,QAAS,IAAMC,EAAqB,EAAK,EACzC,SAAUzK,EACV,cAAe0K,IAAe,OAAStK,EAAYE,EACnD,aAAcoK,IAAe,OAASpK,EAAUF,CAAA,CAClD,EAGCiL,EACC,EAAA1gD,EAAA,IAACo/C,GAAA,CACC,OAAQ1hC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1ByiC,EAAY,IAAI,CAClB,EACA,YAAaD,EACb,UAAA1K,EACA,QAAAE,EACA,MAAOlnB,CAAA,CAAA,EAGTzuB,EAAA,IAACi/C,GAAA,CACC,OAAQvhC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1ByiC,EAAY,IAAI,CAClB,EACA,YAAaD,EACb,QAAS1K,EACT,SAAUE,EACV,MAAOlnB,CAAA,CACT,QAIDrS,GAAW,CAAA,OAAM,GAAC,KAAM8B,EAAiB,GAAInL,WAC5C,SAAAvO,EAAA,KAAC6X,GAAA,CACC,GAAG,MACH,UAAU,gBACV,QAAS,IAAM8B,EAAmB,EAAK,EAEvC,SAAA,CAAAne,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,uIACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,0EACX,SAAA,0BAAA,CAED,QAEC,MAAI,CAAA,UAAU,OACb,SAAArc,EAAA,IAAC,OAAI,UAAU,gCACZ,SAAC,CAAA,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAK6c,IACpB7c,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM2hD,GAAmB,EAClC,UAAU,2DAEV,SAAA3hD,EAAA,IAACoR,GAAA,CACC,KAAM,GACN,UAAWyL,IAAU,EAAI,kBAAoB,gBAAA,CAAA,CAC/C,EAPKA,EAAA,CASR,EACH,CACF,CAAA,EAEA7c,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMme,EAAmB,EAAK,EACvC,UAAU,iDACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CAEJ,CCr1DA,SAAwBimC,IAAe,CACrC,KAAM,CAAE,QAASlnC,EAAS,YAAA1S,CAAA,EAAgBC,GAAW,EAC/C,CAAE,KAAM8X,CAAiB,EAAI,aAAa,EAC1C,CAACpF,EAAgBC,CAAiB,EAAIxd,EAAAA,SAAS,IAAI,EACnD60B,EAAUjB,GAAW,EACrB,CAAC9H,EAAQ24B,CAAS,EAAIzkD,EAAAA,SAAS,IAAI,EACnC,CAAC+rB,EAAQ24B,CAAS,EAAI1kD,EAAAA,SAAS,IAAI,EACnC,CAACysB,EAASk4B,CAAU,EAAI3kD,EAAAA,SAAS,EAAE,EACnC,CAAC0sB,EAASk4B,CAAU,EAAI5kD,EAAAA,SAAS,EAAE,EACnC,CAAC8e,EAAK+lC,CAAM,EAAI7kD,EAAAA,SAAS,KAAK,EAC9B,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAAC8kD,EAAiBC,CAAkB,EAAI/kD,EAAAA,SAAS,EAAK,EACtD,CAACglD,EAAiBC,CAAkB,EAAIjlD,EAAAA,SAAS,EAAK,EACtD,CAACi6C,EAAWiL,CAAY,EAAIllD,EAAAA,SAAS,IAAI,EAG/CE,EAAAA,UAAU,IAAM,EACK,SAAY,CAC7B,GAAI,OAAO,SAAU,CACb,MAAAsL,EAAU,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACrDgS,EAAA,SAAShS,EAAS,EAAE,CAAC,CAAA,CAE3C,GACW,EAEX,OAAO,UAAU,GAAG,eAAiBA,GAAY,CAC7BgS,EAAA,SAAShS,EAAS,EAAE,CAAC,CAAA,CACxC,CACH,EAAG,EAAE,EAYC,MAAA25C,EAAqB,MAAOj4C,GAAU,CACtC,GAAAA,EAAM,SAAW,MACTu3C,EAAA,CACR,GAAGv3C,EACH,QAASgc,GAAkB,KAC3B,SAAU,EAAA,CACX,MACI,CAEL,MAAMkP,EAAkB,MAAMtgB,GAA4B5K,EAAM,OAAO,EACvE,GAAIkrB,EACQqsB,EAAA,CACR,GAAGv3C,EACH,KAAMkrB,EAAgB,KACtB,OAAQA,EAAgB,OACxB,SAAUA,EAAgB,UAAY,GACtC,KAAMA,EAAgB,KACtB,SAAUA,EAAgB,QAAA,CAC3B,MACI,CAEL,MAAMogB,EAAY,MAAM3jB,EAAQ,aAAa3nB,EAAM,OAAO,EAChDu3C,EAAA,CACR,GAAGv3C,EACH,GAAGsrC,EACH,KAAMtrC,EAAM,MAAQsrC,EAAU,KAC9B,OAAQtrC,EAAM,QAAUsrC,EAAU,MAAA,CACnC,CAAA,CACH,CAEFuM,EAAmB,EAAK,CAC1B,EAEMK,EAAqB,MAAOl4C,GAAU,CACtC,GAAAA,EAAM,SAAW,MACTw3C,EAAA,CACR,GAAGx3C,EACH,QAASgc,GAAkB,KAC3B,SAAU,EAAA,CACX,MACI,CAEL,MAAMkP,EAAkB,MAAMtgB,GAA4B5K,EAAM,OAAO,EACvE,GAAIkrB,EACQssB,EAAA,CACR,GAAGx3C,EACH,KAAMkrB,EAAgB,KACtB,OAAQA,EAAgB,OACxB,SAAUA,EAAgB,UAAY,GACtC,KAAMA,EAAgB,KACtB,SAAUA,EAAgB,QAAA,CAC3B,MACI,CAEL,MAAMogB,EAAY,MAAM3jB,EAAQ,aAAa3nB,EAAM,OAAO,EAChDw3C,EAAA,CACR,GAAGx3C,EACH,GAAGsrC,EACH,KAAMtrC,EAAM,MAAQsrC,EAAU,KAC9B,OAAQtrC,EAAM,QAAUsrC,EAAU,MAAA,CACnC,CAAA,CACH,CAEFyM,EAAmB,EAAK,CAC1B,EAGMI,EAAuBllD,GAAU,EACjCA,IAAU,IAAM,cAAc,KAAKA,CAAK,IAC1CwkD,EAAWxkD,CAAK,CAEpB,EAEMmlD,EAAuBnlD,GAAU,EACjCA,IAAU,IAAM,cAAc,KAAKA,CAAK,IAC1CykD,EAAWzkD,CAAK,CAEpB,EAGMolD,EAAmB,SAAY,CACnC,GAAI,CAAC36C,EAAa,CACC+X,EAAA,EACjB,MAAA,CAGE,GAAA,CAACmJ,GAAU,CAACC,EAAQ,CACtBvoB,EAAM,MAAM,2BAA2B,EACvC,MAAA,CAGE,GAAA,CAACipB,GAAW,CAACC,EAAS,CACxBlpB,EAAM,MAAM,2BAA2B,EACvC,MAAA,CAGF9B,EAAW,EAAI,EACX,GAAA,CAIF,GAFmB,MAAMmzB,EAAQ,gBAAgB/I,EAAO,QAASC,EAAO,OAAO,EAE/D,CACdvoB,EAAM,MAAM,yEAAyE,EACrF9B,EAAW,EAAK,EAChB,MAAA,CAIF,MAAM8jD,EAAgBl5C,GAAkBmgB,EAASX,EAAO,QAAQ,EAC1D25B,EAAgBn5C,GAAkBogB,EAASX,EAAO,QAAQ,EAGhEvoB,EAAM,QAAQ,wCAAyC,CAAE,GAAI,cAAe,EAEtE,MAAAuwC,EAAS,MAAMlf,EAAQ,WAC3B/I,EAAO,QACPC,EAAO,QACPy5B,EACAC,CACF,EAEQ,QAAA,IAAI,mBAAoB1R,EAAO,WAAW,EAClDvwC,EAAM,QAAQ,iDAAkD,CAAE,GAAI,cAAe,EAGrFmhD,EAAW,EAAE,EACbC,EAAW,EAAE,EACbH,EAAU,IAAI,EACdC,EAAU,IAAI,QACP1hD,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EACrCQ,EAAA,MACJR,EAAM,QAAQ,SAAS,cAAc,EACjC,uCACAA,EAAM,QAAQ,SAAS,OAAO,EAC9B,uCACAA,EAAM,QAAQ,SAAS,SAAS,EAChCA,EAAM,QACN,0BAA0BA,EAAM,OAAO,GAC3C,CAAE,GAAI,aAAc,CACtB,CAAA,QACA,CACAtB,EAAW,EAAK,CAAA,CAEpB,EAGAxB,OAAAA,EAAAA,UAAU,IAAM,CACd,eAAew4C,GAAkB,CAC3B,GAAA,GAAC5sB,GAAU,CAACC,GAEZ,GAAA,CAEF,cAAc,CAAC,EAGX,eACEU,EACSm4B,EAAA,qBAAqBn4B,EAAS,EAAI,CAAC,EACrCC,GACEi4B,EAAA,qBAAqBj4B,EAAS,EAAK,CAAC,SAG5C1pB,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7C,cAAc,CAAC,CAAA,CACjB,CAGc01C,EAAA,CAAA,EACf,CAAC5sB,EAAQC,CAAM,CAAC,EAGnB7rB,EAAAA,UAAU,IAAM,CACd,eAAewlD,GAAkB,CAC/B,GAAI,CAAC55B,GAAU,CAACC,GAAU,CAACU,GAAW,CAACC,EAAS,CAC9Cw4B,EAAa,IAAI,EACjB,MAAA,CAGE,GAAA,CACF,MAAMM,EAAgBl5C,GAAkBmgB,EAASX,EAAO,QAAQ,EAC1D25B,EAAgBn5C,GAAkBogB,EAASX,EAAO,QAAQ,EAE1DhY,EAAS8gB,EAAQ,0BACrB2wB,EACAC,EACA35B,EAAO,SACPC,EAAO,QACT,EAEam5B,EAAA,CACX,YAAanxC,EAAO,YACpB,YAAaA,EAAO,WAAA,CACrB,QACM/Q,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC/CkiD,EAAa,IAAI,CAAA,CACnB,CAGcQ,EAAA,GACf,CAAC55B,EAAQC,EAAQU,EAASC,CAAO,CAAC,EAoCnC9nB,EAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,4GACZ,SAACwK,EAqBEhG,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,UAAA,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,YACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM2kD,EAAmB,EAAI,EACtC,UAAU,+MAET,SACCj5B,EAAAlnB,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAK0rB,EAAO,KAAM,IAAKA,EAAO,OAAQ,UAAU,SAAU,CAAA,EAC/D1rB,EAAAA,IAAC,OAAM,CAAA,SAAA0rB,EAAO,MAAO,CAAA,CAAA,CAAA,CACvB,EAEA,cAAA,CAAA,EAGN,EACCA,GACC1rB,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOqsB,EACP,SAAW7kB,GAAMy9C,EAAoBz9C,EAAE,OAAO,KAAK,EACnD,YAAY,eACZ,UAAU,0IAAA,CAAA,CACZ,EAEJ,EAGAhD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,UAAA,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,YACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM6kD,EAAmB,EAAI,EACtC,UAAU,+MAET,SACCl5B,EAAAnnB,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAK2rB,EAAO,KAAM,IAAKA,EAAO,OAAQ,UAAU,SAAU,CAAA,EAC/D3rB,EAAAA,IAAC,OAAM,CAAA,SAAA2rB,EAAO,MAAO,CAAA,CAAA,CAAA,CACvB,EAEA,cAAA,CAAA,EAGN,EACCA,GACC3rB,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOssB,EACP,SAAW9kB,GAAM09C,EAAoB19C,EAAE,OAAO,KAAK,EACnD,YAAY,eACZ,UAAU,0IAAA,CAAA,CACZ,EAEJ,EAGCqyC,GAAanuB,GAAUC,GACrBnnB,EAAA,KAAA,MAAA,CAAI,UAAU,+FACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,yDAAyD,SAEvE,qBAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,mCAAmC,SAAA,CAAA,KAC9CknB,EAAO,OAAO,IAAA,EACnB,EACAlnB,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACb,SAAA,CAAO,OAAAq1C,EAAU,WAAW,EAAE,eAAe,OAAW,CAAE,sBAAuB,EAAG,EAAE,IAAEluB,EAAO,MAAA,CAClG,CAAA,CAAA,EACF,EACAnnB,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,mCAAmC,SAAA,CAAA,KAC9CmnB,EAAO,OAAO,IAAA,EACnB,EACAnnB,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACb,SAAA,CAAO,OAAAq1C,EAAU,WAAW,EAAE,eAAe,OAAW,CAAE,sBAAuB,EAAG,EAAE,IAAEnuB,EAAO,MAAA,CAClG,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAIFlnB,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,WAAA,EACCA,EAAAA,IAAA,MAAA,CAAI,UAAU,yBACZ,SAAC,CAAA,OAAQ,OAAQ,MAAO,GAAG,EAAE,IAAKulD,GACjC/gD,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMigD,EAAOc,CAAO,EAC7B,UAAW;AAAA;AAAA,wBAEP7mC,IAAQ6mC,EACN,0BACA,0GACJ;AAAA;AAAA,sBAID,SAAA,CAAAA,EAAQ,GAAA,CAAA,EAXJA,CAAA,CAaR,CACH,CAAA,CAAA,EACF,EAGA/gD,EAAAA,KAAC,MAAI,CAAA,UAAU,oGACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,4DAA4D,SAE1E,sBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,2CAA2C,SAGxD,kNAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EA/ICwE,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAACogB,IAAS,KAAM,GAAI,UAAU,0CAAA,CAA2C,CAC3E,CAAA,EACCpgB,EAAA,IAAA,KAAA,CAAG,UAAU,2DAA2D,SAEzE,sBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAwC,SAErD,wDAAA,EACAA,EAAA,IAAC,SAAA,CACC,QAASuiB,EACT,UAAU,kGACX,SAAA,gBAAA,CAAA,CAED,CAAA,CACF,CAiIJ,CAAA,EAGAviB,EAAA,IAAC,SAAA,CACC,QAASmlD,EACT,SAAU9jD,GAAW,CAACqqB,GAAU,CAACC,GAAU,CAACU,GAAW,CAACC,EACxD,UAAW;AAAA;AAAA,YAEPjrB,GAAW,CAACqqB,GAAU,CAACC,GAAU,CAACU,GAAW,CAACC,EAC5C,kDACA,mDACJ;AAAA,UAGD,WAAU,mBAAqB,aAAA,CAClC,EAGAtsB,EAAA,IAACi0C,GAAA,CACC,OAAQyQ,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,SAAUI,EACV,qBAAsBr5B,GAAQ,OAAA,CAChC,EACA1rB,EAAA,IAACi0C,GAAA,CACC,OAAQ2Q,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,SAAUG,EACV,qBAAsBr5B,GAAQ,OAAA,CAAA,CAChC,EACF,CAEJ,CCreA,MAAMxQ,GAAQ,SAAS,cAAc,OAAO,EAC5CA,GAAM,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoBpB,SAAS,KAAK,YAAYA,EAAK,EAYlB2N,GAAkB,KAclBA,GAAkB,KAS/B,MAAM1N,GAAQ,CACZ,UAAW,IACRpb,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAAO,MAAO,CAAE,UAAW,2BAC3E,EAAA,SAAAwE,EAAAA,KAAC,KAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAAA,IAAC,OAAK,CAAA,EAAE,6BAA6B,cAAc,QAAQ,MAAO,CAAE,UAAW,kCAAsC,CAAA,CAAA,EACpHA,EAAAA,IAAA,OAAA,CAAK,EAAE,sEAAsE,cAAc,QAAQ,MAAO,CAAE,UAAW,mCAAoC,eAAgB,MAAA,CAAU,CAAA,CAAA,CAAA,CACxL,CACF,CAAA,EAEF,SAAU,IACPA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAAAA,EAAA,IAAC,OAAA,CAAK,UAAU,gCAAgC,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,OAAO,eACpH,EAAE,mDACF,gBAAgB,KAChB,iBAAiB,KACjB,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,oBACd,KAAK,KACL,GAAG,IACH,IAAI,OACJ,KAAK,QAAA,CAAA,CACP,CAAA,EAEJ,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,MAAC,QAAK,UAAU,gBAAgB,EAAE,2EAA2E,cAAc,MAAM,QAChI,OAAK,CAAA,UAAU,oCAAoC,EAAE,8CAA8C,cAAc,QAAQ,EAC1HA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,UAAU,yCAA0C,CAAA,CAAA,CAAA,CACpF,CACF,CAAA,EAEF,OAAQ,IACLA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,iBAAiB,cAAc,QAAQ,eAAe,QAAQ,UAAU,iCAAkC,CAAA,EACjHA,EAAA,IAAA,OAAA,CAAK,EAAE,qCAAqC,UAAU,yCAA0C,CAAA,CAAA,CAAA,CACnG,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,0EAA2E,CAAA,EACnFA,EAAA,IAAC,OAAA,CAAK,cAAc,QAAQ,UAAU,kDACpC,EAAE,aAAA,CAAA,CAAc,CAAA,CACpB,CACF,CAAA,EAEF,UAAW,IACTA,EAAAA,IAAC,MAAI,CAAA,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAAAwE,EAAA,KAAC,IACC,CAAA,SAAA,CAAAxE,EAAA,IAAC,OAAA,CAAK,UAAU,kCAAkC,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,OAAO,eACtH,EAAE,iBAAiB,gBAAgB,KAAK,iBAAiB,KACzD,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,oBACd,KAAK,KACL,GAAG,IACH,IAAI,OACJ,KAAK,QAAA,CAAA,CACP,CACF,QACC,OAAK,CAAA,KAAK,eAAe,YAAY,MAAM,EAAE,0EAA2E,CAAA,CAAA,CAAA,CAC3H,CACF,CAAA,EAEF,MAAO,IACJA,EAAAA,IAAA,MAAA,CAAI,UAAU,uBAAuB,QAAQ,YAAY,KAAK,OAAO,OAAO,eAC3E,SAACA,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,EAAE,sIAAA,CAAuI,CAChN,CAAA,EAEF,KAAM,IACHA,EAAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,QAAQ,YAAY,KAAK,OAC9D,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,EAAE,uIAAuI,CAChN,CAAA,CAEJ,EAGMwlD,GAAoB,CAAC,CAAE,OAAA9pC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,OAAA8P,EAAQ,OAAAC,EAAQ,UAAA85B,EAAW,MAAA7iD,EAAO,WAAA8iD,EAAY,aAAApb,CAAA,IAAmB,CAC1H,MAAMvuB,EAAQ,CACZ,CAAE,GAAI,YAAa,MAAO,YAAa,KAAO/b,EAAAA,IAAAob,GAAM,UAAN,CAAA,CAAgB,CAAG,EACjE,CAAE,GAAI,WAAY,MAAO,iBAAkB,KAAOpb,EAAAA,IAAAob,GAAM,SAAN,CAAA,CAAe,CAAG,EACpE,GAAIqqC,EAAY,CAAC,CAAE,GAAI,WAAY,MAAO,gBAAiB,KAAMzlD,EAAAA,IAACob,GAAM,SAAN,CAAA,CAAe,CAAG,CAAC,EAAI,CAAC,EAC1F,CAAE,GAAI,SAAU,MAAO,mBAAoB,KAAOpb,EAAAA,IAAAob,GAAM,OAAN,CAAA,CAAa,CAAG,EAClE,CAAE,GAAI,aAAc,MAAO,aAAc,KAAOpb,EAAAA,IAAAob,GAAM,WAAN,CAAA,CAAiB,CAAG,EACpE,CAAE,GAAI,YAAa,MAAO,YAAa,KAAOpb,MAAAob,GAAM,UAAN,EAAgB,CAAG,CACnE,EAEMiG,EAAU,EAAQze,EAClB+iD,EAAiB/iD,IAAU,cAEjC,OACG5C,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEAET,SAAAspC,EAAiB,sBAAyBF,EAAY,oBAAsB,0BAAA,CAC/E,EAECE,GAAkBD,EACjB1lD,EAAA,IAAC4lD,GAAA,CACC,OAAAl6B,EACA,OAAAC,EACA,YAAa+5B,EAAW,QACxB,QAAA/pC,EACA,aAAA2uB,CAAA,CACF,QAEC,MAAI,CAAA,UAAU,YACZ,SAAMvuB,EAAA,IAAI,CAACE,EAAM/R,IAAU,CACpB,MAAApG,EAAW8X,IAAgBK,EAAK,GAChCM,EAAc,CAAC8E,GAAWtF,EAAM,UAAerL,GAAAA,EAAE,KAAOkL,CAAW,EAAI1R,EACvEsS,EAAc6E,GAAWzF,IAAgBK,EAAK,GAGlD,OAAAzX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,GAAY,CAAC0Y,EAAc,iCAC3BD,EAAc,iBACdC,EAAc,6BACd,eACF,GAEC,SAAA,CAAKP,EAAA,KACNzX,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CAA6C,SAAAic,EAAK,MAAM,EACvEnY,GAAY,CAACud,GACX7c,EAAA,KAAA,IAAA,CAAE,UAAU,gDACV,SAAA,CAAAyX,EAAK,KAAO,aAAe,2BAC3BA,EAAK,KAAO,YAAc,aAAayP,GAAQ,MAAM,QAAQC,GAAQ,MAAM,GAC3E1P,EAAK,KAAO,YAAc,iCAC1BA,EAAK,KAAO,UAAY,8BACxBA,EAAK,KAAO,cAAgB,8BAC5BA,EAAK,KAAO,aAAe,wBAAA,CAC9B,CAAA,CAAA,EAEJ,EACCM,SACE,MAAI,CAAA,UAAU,yBAAyB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAChF,SAACvc,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CACxF,CAAA,CAAA,CAAA,EAzBGic,EAAK,EA2BZ,CAAA,CAEH,CACH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAGMU,GAAkB,CAAC,CAAE,OAAAjB,EAAQ,QAAAC,EAAS,OAAAiB,KAAa,CACvD,KAAM,CAACC,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAAC2/C,EAAOC,CAAQ,EAAI5/C,EAAAA,SAAS,CAAC,EAEpC,OACGI,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,qBAAqB,QAAAV,EAC9C,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,+EACX,SAAA,oCAAA,CAED,EAEA7X,EAAAA,KAAC,MAAI,CAAA,UAAU,uCACb,SAAA,CAAAxE,EAAAA,IAAC,MAAI,CAAA,UAAU,8BACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGrE,IAAU,CAC/B,MAAMu1C,EAAYv1C,EAAQ,EAExB,OAAAlK,EAAA,IAAC,SAAA,CAEC,UAAU,0DACV,QAAS,IAAM8c,EAAU2iC,CAAS,EAClC,aAAc,IAAMD,EAASC,CAAS,EACtC,aAAc,IAAMD,EAAS,CAAC,EAE9B,SAAAx/C,EAAA,IAACoR,GAAA,CACC,KAAM,GACN,UAAW,sBACRmuC,GAAS1iC,IAAW4iC,EACjB,iBACA,kCACN,EAAA,CAAA,CACF,EAbKA,CAcP,CAEH,CAAA,EACH,EAECz/C,EAAA,IAAA,IAAA,CAAE,UAAU,2CACV,aAAW,EAAI,kBAAoB,cAAc6c,CAAM,QAAQA,IAAW,EAAI,IAAM,EAAE,GACzF,EAEArY,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACT6c,EAAS,IACXD,EAAOC,CAAM,EACLlB,EAAA,EAEZ,EACA,UAAW,sDACTkB,EAAS,EACL,6CACA,kFACN,GACD,SAAA,eAAA,CAED,EACA7c,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,yJACX,SAAA,MAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAEMiqC,GAAsB,CAAC,CAAE,OAAAl6B,EAAQ,OAAAC,EAAQ,YAAA2J,EAAa,QAAA3Z,EAAS,aAAA2uB,KAAmB,CACrEhoB,GAAY,EAE7B,MAAMujC,EAAqB,IAAM,CACvBlqC,EAAA,EAER2uB,EAAa,YAAa,CACxB,eAAgB,CAAE,OAAA5e,EAAQ,OAAAC,CAAO,EACjC,YAAA2J,CAAA,CACD,CACH,EAEMwwB,EAAoB,IAAM,CACpB,UAAA,UAAU,UAAUxwB,CAAW,EACzClyB,EAAM,QAAQ,oCAAqC,CACjD,MAAO,CACL,aAAc,OACd,WAAY,OACZ,MAAO,MAAA,CACT,CACD,CACH,EAEA,aACG,MAAI,CAAA,UAAU,YACb,SAACoB,EAAA,KAAA,MAAA,CAAI,UAAU,yGACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,8CAA8C,KAAK,OAAO,OAAO,eAAe,QAAQ,YACrG,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,4DAA4D,CACnI,CAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,oDAAoD,SAAmB,sBAAA,EACrFwE,EAAAA,KAAC,IAAE,CAAA,UAAU,gDAAgD,SAAA,CAAA,wBACrCknB,GAAQ,OAAO,IAAEC,GAAQ,OAAO,kBAAA,EACxD,QACC,MAAI,CAAA,UAAU,+FACb,SAACnnB,EAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,oDAAoD,SAAa,gBAAA,EACjFwE,EAAA,KAAC,SAAA,CACC,QAASshD,EACT,UAAU,4EACV,MAAOxwB,EAEN,SAAA,CAAYA,EAAA,MAAM,EAAG,CAAC,EAAE,MAAIA,EAAY,MAAM,EAAE,EAAE,kBAAA,CAAA,CAAA,CACrD,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACA9wB,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,oQACX,SAAA,QAAA,CAED,EACA3b,EAAA,IAAC,SAAA,CACC,QAAS6lD,EACT,UAAU,4NACX,SAAA,eAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAGMvN,GAAkB,MAAO5sB,EAAQC,EAAQU,EAASC,IAAY,CAClE,GAAI,CAACZ,GAAU,CAACC,GAAU,CAACU,GAAW,CAACC,EAC9B,OAAA,KAGL,GAAA,CAEK,OADO,WAAWA,CAAO,EAAI,WAAWD,CAAO,QAE/CzpB,EAAO,CACN,eAAA,MAAM,iCAAkCA,CAAK,EAC9C,IAAA,CAEX,EAGMqxB,GAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,KAAM,CACJ,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMoD,GAAe,CACnB,OAAQ,CACN,QAAS,EACT,EAAG,EACL,EACA,KAAM,CACJ,QAAS,EACT,EAAG,EACH,WAAY,CACV,KAAM,SACN,UAAW,IACX,QAAS,EAAA,CACX,CAEJ,EAEM0nB,GAAiB,CACrB,MAAO,CACL,MAAO,KACP,WAAY,CACV,KAAM,SACN,UAAW,IACX,QAAS,EAAA,CAEb,EACA,IAAK,CACH,MAAO,GAAA,CAEX,EAGMgH,GAAgB,CAAC,CAAE,eAAA5oC,KAAqB,CA8B5C,MAAM6oC,GA7BiB,IAAM,CAC3B,OAAQ7oC,EAAgB,CACtB,IAAK,MACI,MAAA,CACL,KAAM,mBACN,OAAQ,YACR,UAAW,oDACb,EACF,IAAK,KACI,MAAA,CACL,KAAM,mBACN,OAAQ,YACR,UAAW,iDACb,EACF,IAAK,OACI,MAAA,CACL,KAAM,gBACN,OAAQ,YACR,UAAW,uDACb,EACF,QACS,MAAA,CACL,KAAM,sBACN,OAAQ,cACR,UAAW,8CACb,CAAA,CAEN,GAEmC,EAEnC,cACG,MAAI,CAAA,UAAW,4CAA4C6oC,EAAY,SAAS,eAC/E,SAAA,CAACxhD,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAW,wBAAwBgmD,EAAY,SAAW,YAAc,aAAe,YAAY,EAAI,CAAA,EAC5GhmD,EAAAA,IAAC,OAAM,CAAA,SAAAgmD,EAAY,IAAK,CAAA,CAAA,EAC1B,EACCA,EAAY,SAAW,qBACrB,IAAE,CAAA,UAAU,eAAe,SAE5B,yFAAA,CAAA,CAAA,EAEJ,CAEJ,EAoBM/6B,GAAY,CAChB,qDACA,2CACA,0CACA,uCACF,EAGMutB,GAAe,CAAC,CAAE,MAAA1rC,KAAY,CAClC,KAAM,CAACwhB,EAASmlB,CAAU,EAAI7zC,EAAAA,SAAS,GAAG,EACpC,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C,CAAE,QAAA2K,CAAQ,EAAIE,GAAW,EAkE/B,OAhEA3K,EAAAA,UAAU,IAAM,CACd,eAAemmD,GAAa,CAC1B,GAAI,GAACn5C,GAAS,CAACvC,GAAW,CAAC,OAAO,UAE9B,GAAA,CACFw6B,EAAa,EAAI,EACjB,MAAMn9B,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDhU,EAAU,MAAMxD,EAAS,aAAa,KAAUkxB,GAAA,OAAOA,EAAE,OAAO,CAAC,EAGvE,GAAIhsB,EAAM,UAAYA,EAAM,SAAW,OAASA,EAAM,SAAW,MAAO,CACtE,MAAMwhB,EAAU,MAAM1mB,EAAS,WAAW2C,CAAO,EACtCkpC,EAAA9vB,GAAmB2K,CAAO,CAAC,EACtC,MAAA,CAIE,GAAA,CACI,MAAAD,EAAgB,IAAI3iB,EACxBoB,EAAM,QACNme,GACArjB,CACF,EAEM,CAAC8rC,EAAYznC,CAAQ,EAAI,MAAM,QAAQ,IAAI,CAC/CoiB,EAAc,UAAU9jB,CAAO,EAC/B8jB,EAAc,SAAS,CAAA,CACxB,EAEDolB,EAAWpqB,GAAmBqqB,EAAYznC,CAAQ,CAAC,QAC5CrJ,EAAO,CAGd,GAFQ,QAAA,MAAM,gCAAiCA,CAAK,EAEhDwI,IAAY,MAAO,CACrB,MAAM9C,EAAOyc,GAAgB,gBAAA,EAAkB,OAC7C,CAAC,SAAS,EACV,CAACxa,CAAO,CAAA,EACR,MAAM,CAAC,EAEHopC,EAAS,MAAM,OAAO,SAAS,QAAQ,CAC3C,OAAQ,WACR,OAAQ,CAAC,CACP,GAAI7mC,EAAM,QACV,KAAM,aAAexE,CAAA,EACpB,QAAQ,CAAA,CACZ,EAEKgmB,EAAU,OAAOqlB,CAAM,EAC7BF,EAAWpqB,GAAmBiF,EAASxhB,EAAM,UAAY,EAAE,CAAC,CAAA,KAEtD,OAAAlK,CACR,QAEKA,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9C6wC,EAAW,GAAG,CAAA,QACd,CACA1O,EAAa,EAAK,CAAA,CACpB,CAGSkhB,EAAA,CAAA,EACV,CAACn5C,EAAOvC,CAAO,CAAC,EAEf,CAACuC,GAAS,CAACvC,EAAgB,KAG7B/F,EAAA,KAAC,MAAI,CAAA,UAAU,4CACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,mCAAmC,SAAQ,WAAA,EAC1D8kC,QACE,MAAI,CAAA,UAAU,8DAA8D,EAE7EtgC,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACb,SAAA,CAAO,OAAA8pB,CAAO,EAAE,eAAe,OAAW,CACzC,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,EAAE,IAAExhB,EAAM,MAAA,CACb,CAAA,CAAA,EAEJ,CAEJ,EAEwB,SAAAs3C,GAAa,CAAE,aAAA9Z,GAAgB,CACrD,KAAM,CAAE,QAAS9/B,CAAY,EAAIC,GAAW,EAC3B6X,GAAY,EAC7B,KAAM,CAACnF,EAAgBC,CAAiB,EAAIxd,EAAAA,SAAS,IAAI,EACnD60B,EAAU2nB,GAAY,EACtB,CAAC1wB,EAAQ24B,CAAS,EAAIzkD,EAAAA,SAAS,IAAI,EACnC,CAAC+rB,EAAQ24B,CAAS,EAAI1kD,EAAAA,SAAS,IAAI,EACnC,CAACysB,EAASk4B,CAAU,EAAI3kD,EAAAA,SAAS,EAAE,EACnC,CAAC0sB,EAASk4B,CAAU,EAAI5kD,EAAAA,SAAS,EAAE,EACnBA,EAAAA,SAAS,KAAK,EACpC,KAAM,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAAC8kD,EAAiBC,CAAkB,EAAI/kD,EAAAA,SAAS,EAAK,EACtD,CAACglD,EAAiBC,CAAkB,EAAIjlD,EAAAA,SAAS,EAAK,EACtD,CAACi6C,EAAWiL,CAAY,EAAIllD,EAAAA,SAAS,IAAI,EACzC,CAACoxB,EAAYk1B,CAAa,EAAItmD,EAAAA,SAAS,IAAI,EAC3C,CAAC8d,EAAmBC,CAAoB,EAAI/d,EAAAA,SAAS,EAAK,EAC1D,CAACgc,EAAa6G,CAAc,EAAI7iB,EAAAA,SAAS,IAAI,EAC7C,CAAC6lD,EAAWU,CAAY,EAAIvmD,EAAAA,SAAS,EAAK,EAC1C,CAACoe,EAAcC,CAAe,EAAIre,EAAAA,SAAS,EAAK,EAChD,CAACse,EAAiBC,CAAkB,EAAIve,EAAAA,SAAS,EAAK,EACtD,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,IAAI,EACjC,CAAC8lD,EAAYU,CAAa,EAAIxmD,EAAAA,SAAS,IAAI,EAC3C,CAACwe,EAAYC,CAAa,EAAIze,WAAS,CAC3C,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,EAGDE,EAAAA,UAAU,IAAM,CACd,IAAIqzB,EAAU,GAEd,MAAMkzB,EAAa,SAAY,CAC7B,GAAI,GAAC,OAAO,UAAY,CAAClzB,GACrB,GAAA,CACI,MAAA/nB,EAAU,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACnE+nB,GACgB/V,EAAA,SAAShS,EAAS,EAAE,CAAC,QAElCxI,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,CAAA,CAEhD,EAEM+pC,EAAsBvhC,GAAY,CAClC+nB,GACgB/V,EAAA,SAAShS,EAAS,EAAE,CAAC,CAE3C,EAEW,OAAAi7C,EAAA,EAEP,OAAO,UACF,OAAA,SAAS,GAAG,eAAgB1Z,CAAkB,EAGhD,IAAM,CACDxZ,EAAA,GACN,OAAO,UACF,OAAA,SAAS,eAAe,eAAgBwZ,CAAkB,CAErE,CACF,EAAG,EAAE,EAGL,MAAM2Z,EAAiBnpC,IAAmB,MAAQA,IAAmB,KAAOA,IAAmB,MAGzF4nC,EAAqB,MAAOj4C,GAAU,CACtC,GAAA,CACF,GAAI,CAACw5C,EAAgB,CACnBljD,EAAM,MAAM,yEAAyE,EACrF,MAAA,CAGF,GAAI0J,EAAM,SAAW,QAAUqQ,IAAmB,MAAO,CACvD/Z,EAAM,MAAM,qFAAsF,CAChG,SAAU,IACV,MAAO,CACL,aAAc,OACd,WAAY,OACZ,MAAO,MAAA,CACT,CACD,EACD,MAAA,CAGE,IAAA+f,EACJ,GAAIrW,EAAM,SAAW,OAASA,EAAM,SAAW,MAC7BqW,EAAA,CACd,GAAGrW,EACH,QAASgc,GAAkB3L,CAAc,GAAG,KAC5C,SAAU,GACV,SAAU,EACZ,MAEI,IAAA,CACF,MAAM6a,EAAkB,MAAMtgB,GAA4B5K,EAAM,OAAO,EACvE,GAAIkrB,EACc7U,EAAA,CACd,GAAGrW,EACH,KAAMkrB,EAAgB,KACtB,OAAQA,EAAgB,OACxB,SAAUA,EAAgB,UAAY,GACtC,KAAMA,EAAgB,KACtB,SAAUA,EAAgB,QAC5B,MACK,CACL,MAAMogB,EAAY,MAAM3jB,EAAQ,aAAa3nB,EAAM,OAAO,EAC1CqW,EAAA,CACd,GAAGrW,EACH,GAAGsrC,EACH,KAAMtrC,EAAM,MAAQsrC,EAAU,KAC9B,OAAQtrC,EAAM,QAAUsrC,EAAU,OAClC,KAAMtrC,EAAM,MAAQ,wBACtB,CAAA,OAEY,CACd,MAAMsrC,EAAY,MAAM3jB,EAAQ,aAAa3nB,EAAM,OAAO,EAC1CqW,EAAA,CACd,GAAGrW,EACH,GAAGsrC,EACH,KAAMtrC,EAAM,MAAQsrC,EAAU,KAC9B,OAAQtrC,EAAM,QAAUsrC,EAAU,OAClC,KAAMtrC,EAAM,MAAQ,wBACtB,CAAA,CAQJ,GAJAu3C,EAAUlhC,CAAa,EACvBwhC,EAAmB,EAAK,EAGpBh5B,EAAQ,CACV,MAAM/jB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDC,EAAiByJ,GAAkB3L,CAAc,GAAG,QAE1D,GAAI,CAACkC,EACG,MAAA,IAAI,MAAM,+BAA+B,EAIjD,GAAIlC,IAAmB,MAAO,CAC5B,MAAMi9B,EAAcr1B,GAAgB,gBAAA,EAAkB,OACpD,CAAC,UAAW,SAAS,EACrB,CAAC5B,EAAc,QAASwI,EAAO,OAAO,CAAA,EACtC,MAAM,CAAC,EAEHpC,GAAc,MAAM,OAAO,SAAS,QAAQ,CAChD,OAAQ,WACR,OAAQ,CAAC,CACP,GAAIlK,EACJ,KAAM,aAAe+6B,CAAA,EACpB,QAAQ,CAAA,CACZ,EAEG,GAAA7wB,IAAeA,KAAgB,qEAAsE,CACvG,MAAMg9B,GAAgB,KAAOh9B,GAAY,MAAM,EAAE,EACnC68B,EAAA,CAAE,QAASG,GAAe,EACxClpB,EAAS,aAAa,EACtB1f,EAAqB,EAAI,EACzB8E,EAAe,WAAW,CAAA,MAE1B2jC,EAAc,IAAI,EAClB/oB,EAAS,IAAI,CACf,KACK,CAOL,MAAM/H,GAAc,MANI,IAAI5pB,EAC1B2T,EACA,CAAC,uFAAuF,EACxFzX,CACF,EAE0C,QAAQub,EAAc,QAASwI,EAAO,OAAO,EAEnF2J,IAAeA,KAAgB2X,IACnBmZ,EAAA,CAAE,QAAS9wB,GAAa,EACtC+H,EAAS,aAAa,EACtB1f,EAAqB,EAAI,EACzB8E,EAAe,WAAW,IAE1B2jC,EAAc,IAAI,EAClB/oB,EAAS,IAAI,EACf,CACF,QAEKz6B,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,EAAM,MAAM,qDAAqD,CAAA,CAErE,EAEM4hD,EAAqB,MAAOl4C,GAAU,CACtC,GAAA,CACF,GAAI,CAACw5C,EAAgB,CACnBljD,EAAM,MAAM,yEAAyE,EACrF,MAAA,CAIF,GAAI0J,EAAM,SAAW,QAAUqQ,IAAmB,MAAO,CACvD/Z,EAAM,MAAM,qFAAsF,CAChG,SAAU,IACV,MAAO,CACL,aAAc,OACd,WAAY,OACZ,MAAO,MAAA,CACT,CACD,EACD,MAAA,CAGE,IAAA+f,EACJ,GAAIrW,EAAM,SAAW,OAASA,EAAM,SAAW,MAC7BqW,EAAA,CACd,GAAGrW,EACH,QAASgc,GAAkB3L,CAAc,GAAG,KAC5C,SAAU,GACV,SAAU,EACZ,MAGI,IAAA,CACF,MAAM6a,EAAkB,MAAMtgB,GAA4B5K,EAAM,OAAO,EACvE,GAAIkrB,EACc7U,EAAA,CACd,GAAGrW,EACH,KAAMkrB,EAAgB,KACtB,OAAQA,EAAgB,OACxB,SAAUA,EAAgB,UAAY,GACtC,KAAMA,EAAgB,KACtB,SAAUA,EAAgB,QAC5B,MACK,CAEL,MAAMogB,EAAY,MAAM3jB,EAAQ,aAAa3nB,EAAM,OAAO,EAC1CqW,EAAA,CACd,GAAGrW,EACH,GAAGsrC,EACH,KAAMtrC,EAAM,MAAQsrC,EAAU,KAC9B,OAAQtrC,EAAM,QAAUsrC,EAAU,OAClC,KAAMtrC,EAAM,MAAQ,wBACtB,CAAA,QAEK05C,EAAe,CACd,QAAA,KAAK,mDAAoDA,CAAa,EAC9E,MAAMpO,EAAY,MAAM3jB,EAAQ,aAAa3nB,EAAM,OAAO,EAC1CqW,EAAA,CACd,GAAGrW,EACH,GAAGsrC,EACH,KAAMtrC,EAAM,MAAQsrC,EAAU,KAC9B,OAAQtrC,EAAM,QAAUsrC,EAAU,OAClC,KAAMtrC,EAAM,MAAQ,wBACtB,CAAA,CAQJ,GAJAw3C,EAAUnhC,CAAa,EACvB0hC,EAAmB,EAAK,EAGpBn5B,EAAQ,CACV,MAAM9jB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDC,EAAiByJ,GAAkB3L,CAAc,GAAG,QAE1D,GAAI,CAACkC,EACG,MAAA,IAAI,MAAM,+BAA+B,EASjD,MAAMiW,GAAc,MANI,IAAI5pB,EAC1B2T,EACA,CAAC,uFAAuF,EACxFzX,CACF,EAE0C,QAAQ8jB,EAAO,QAASvI,EAAc,OAAO,EAEnFmS,IAAeA,KAAgB2X,IACnBmZ,EAAA,CAAE,QAAS9wB,GAAa,EACtC+H,EAAS,aAAa,EACtB1f,EAAqB,EAAI,EACzB8E,EAAe,WAAW,IAE1B2jC,EAAc,IAAI,EAClB/oB,EAAS,IAAI,EACf,QAEKz6B,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,EAAM,MAAM,qDAAqD,CAAA,CAErE,EAGM6hD,GAAuBllD,GAAU,CAEjC,GADJwkD,EAAWxkD,CAAK,EACZA,GAAS2rB,GAAUC,EAAQ,CAE7B,MAAM86B,EAAoBn6B,GAAWvsB,EACxB+kD,EAAA,CACX,YAAa,WAAW2B,CAAiB,EAAI,WAAW1mD,CAAK,EAC7D,YAAa,WAAWA,CAAK,EAAI,WAAW0mD,CAAiB,CAAA,CAC9D,CAAA,CAEL,EAEMvB,GAAuBnlD,GAAU,CACrCykD,EAAWzkD,CAAK,EACZA,GAAS2rB,GAAUC,GAAUU,GAElBy4B,EAAA,CACX,YAAa,WAAW/kD,CAAK,EAAI,WAAWssB,CAAO,EACnD,YAAa,WAAWA,CAAO,EAAI,WAAWtsB,CAAK,CAAA,CACpD,CAEL,EAGAD,EAAAA,UAAU,IAAM,CACd,MAAMmgB,EAAe,IAAM,CACX5B,EAAA,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,CACH,EAEO,cAAA,iBAAiB,SAAU4B,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAChE,EAAG,EAAE,EAEC,MAAA0hC,GAAgB9kC,GAAW,CACvB,QAAA,IAAI,4BAA6BA,CAAM,CAEjD,EAGMsoC,EAAmB,SAAY,CACnC,GAAI,CAAC36C,EAAa,CACC,iBAAA,EACjB,MAAA,CAGF,GAAI,CAAC87C,EAAgB,CACnBljD,EAAM,MAAM,kEAAkE,EAC9E,MAAA,CAGE,GAAA,CAACsoB,GAAU,CAACC,EAAQ,CACtB0R,EAAS,2BAA2B,EACpC1f,EAAqB,EAAI,EACzB8E,EAAe,WAAW,EAC1B,MAAA,CAGE,GAAA,CAAC4J,GAAW,CAACC,EAAS,CACxB+Q,EAAS,2BAA2B,EACpC1f,EAAqB,EAAI,EACzB8E,EAAe,WAAW,EAC1B,MAAA,CAGFnhB,EAAW,EAAI,EACfqc,EAAqB,EAAI,EACzB8E,EAAe,WAAW,EAC1B4a,EAAS,IAAI,EAET,GAAA,CACF,MAAMz1B,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDC,EAAiByJ,GAAkB3L,CAAc,GAAG,QAE1D,GAAI,CAACkC,EACG,MAAA,IAAI,MAAM,+BAA+B,EAI7C,IAAAiW,EACJ,GAAInY,IAAmB,MAAO,CAKtB,MAAA7U,GAHmB,IAAIo+C,GAAiB,CAC5C,uFAAA,CACD,EAC6B,mBAAmB,UAAW,CAACh7B,EAAO,QAASC,EAAO,OAAO,CAAC,EACtFgoB,EAAS,MAAM/rC,EAAS,KAAK,CACjC,GAAIyX,EACJ,KAAA/W,EAAA,CACD,EACDgtB,EAAcqxB,GAAkBC,GAAiBjT,EAAQ,EAAE,CAAC,CAAA,MAO5Dre,EAAc,MALU,IAAI5pB,EAC1B2T,EACA,CAAC,uFAAuF,EACxFzX,CACF,EACoC,QAAQ8jB,EAAO,QAASC,EAAO,OAAO,EAGxE,GAAA2J,GAAeA,IAAgB2X,GAAoB,CACvCmZ,EAAA,CAAE,QAAS9wB,EAAa,EACtC+H,EAAS,aAAa,EACtB5a,EAAe,WAAW,EAC1BnhB,EAAW,EAAK,EAChB,MAAA,CAGF6kD,EAAa,EAAI,EACjB1jC,EAAe,UAAU,EAEzB,MAAM2iC,EAAgBl5C,GAAkBmgB,EAASX,EAAO,QAAQ,EAC1D25B,EAAgBn5C,GAAkBogB,EAASX,EAAO,QAAQ,EAGhE,GAAIxO,IAAmB,MAAO,CAEtB,MAAAgkC,GAAgBr4B,GAAkB3L,CAAc,EAAE,OAClD0pC,GAAkB,IAAIH,GAAiB,CAC3C,6NACA,iNAAA,CACD,EAEKvnC,EAAS,MAAMvX,EAAS,UAAU,EAClCgmB,GAAW,KAAK,MAAM,KAAK,MAAQ,GAAI,EAAI,GAAK,GAElD,GAAAlC,EAAO,UAAYC,EAAO,SAAU,CAEtC,MAAM9f,GAAe6f,EAAO,SAAWC,EAAO,QAAUD,EAAO,QACzDqC,GAAcrC,EAAO,SAAW25B,EAAgBD,EAChDt3B,GAAYpC,EAAO,SAAW05B,EAAgBC,EAG/C35B,EAAO,SAOAC,EAAO,UAMX,MALgB,IAAIjgB,EACxBigB,EAAO,QACP,CAAC,2EAA2E,EAC5ExM,CACF,EACoB,QAAQgiC,GAAekE,CAAa,EAPlD,MALgB,IAAI35C,EACxBggB,EAAO,QACP,CAAC,2EAA2E,EAC5EvM,CACF,EACoB,QAAQgiC,GAAeiE,CAAa,EAsB1D,MAZW,MAAMjmC,EAAO,gBAAgB,CACtC,GAAIgiC,GACJ,KAAM0F,GAAgB,mBAAmB,kBAAmB,CAC1Dh7C,GACAkiB,GACAA,GACAD,GACA,MAAM3O,EAAO,WAAW,EACxByO,EAAA,CACD,EACD,MAAOE,EAAA,CACR,GACQ,KAAK,CAAA,KACT,CAGC,MAAAtB,GAAiB,IAAI9gB,EACzBggB,EAAO,QACP,CAAC,2EAA2E,EAC5EvM,CACF,EACMsN,GAAiB,IAAI/gB,EACzBigB,EAAO,QACP,CAAC,2EAA2E,EAC5ExM,CACF,EAEM,MAAAqN,GAAe,QAAQ20B,GAAeiE,CAAa,EACnD,MAAA34B,GAAe,QAAQ00B,GAAekE,CAAa,EAezD,MAbW,MAAMlmC,EAAO,gBAAgB,CACtC,GAAIgiC,GACJ,KAAM0F,GAAgB,mBAAmB,eAAgB,CACvDn7B,EAAO,QACPC,EAAO,QACPy5B,EACAC,EACAD,EACAC,EACA,MAAMlmC,EAAO,WAAW,EACxByO,EACD,CAAA,CAAA,CACF,GACQ,KAAK,CAAA,CAChB,MAGA,MAAM6G,EAAQ,WACZ/I,EAAO,QACPC,EAAO,QACPy5B,EACAC,CACF,EAGF5iC,EAAe,WAAW,EAE1B,WAAW,IAAM,CACf9E,EAAqB,EAAK,EAC1B8E,EAAe,IAAI,EACnBxE,EAAgB,EAAI,EAEpB,WAAW,IAAM,CACfE,EAAmB,EAAI,GACtB,GAAI,EAEP,WAAW,IAAM,CACfomC,EAAW,EAAE,EACbC,EAAW,EAAE,EACbvmC,EAAgB,EAAK,GACpB,GAAK,GACP,GAAI,QACArb,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EAC3Cy6B,EAASz6B,EAAM,OAAO,CAAA,QACtB,CACAtB,EAAW,EAAK,CAAA,CAEpB,EAGAxB,OAAAA,EAAAA,UAAU,IAAM,EACW,SAAY,CAC/B,GAAA4rB,GAAUC,GAAUU,GAAWC,EAAS,CAC1C,MAAMisB,EAAQ,MAAMD,GAAgB5sB,EAAQC,EAAQU,EAASC,CAAO,EACpE45B,EAAc3N,CAAK,EAGNuM,EAAA,CACX,YAAa,WAAWx4B,CAAO,EAAI,WAAWD,CAAO,EACrD,YAAa,WAAWA,CAAO,EAAI,WAAWC,CAAO,CAAA,CACtD,CAAA,MAED45B,EAAc,IAAI,EAClBpB,EAAa,IAAI,CAErB,GAEiB,GAChB,CAACp5B,EAAQC,EAAQU,EAASC,CAAO,CAAC,EAGnC9nB,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU2lB,GACV,QAAQ,SACR,QAAQ,OACR,UAAU,6BAET,SAAA,CACCjW,GAAAhe,EAAA,IAACqgB,GAAA,CACC,MAAOjC,EAAW,MAClB,OAAQA,EAAW,OACnB,eAAgB,IAChB,QAAS,GACT,QAAS,GACT,iBAAkB,GAClB,iBAAkB,GAClB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,SAAS,EAC9D,MAAO,CACL,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,OACR,OAAQ,MACR,cAAe,MAAA,CACjB,CACF,EAGF5Z,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,4GAGV,SAAA,CAAAr3B,MAAC+lD,IAAc,eAAA5oC,EAAgC,EAE7C3S,EAmCAxK,EAAAA,IAACinC,GAAgB,CAAA,KAAK,OACpB,SAAAziC,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,YAGV,SAAA,CAAA7yB,OAAC8J,EAAO,IAAP,CAAW,SAAU+oB,GAAc,UAAU,YAC5C,SAAA,CAACr3B,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,UAAA,EACAA,EAAA,IAACsO,EAAO,OAAP,CACC,SAAUywC,GACV,WAAW,QACX,SAAS,MACT,QAAS,IAAM4F,EAAmB,EAAI,EACtC,UAAU,+MAET,SACCj5B,EAAAlnB,OAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAK0rB,EAAO,KAAM,IAAKA,EAAO,OAAQ,UAAU,SAAU,CAAA,EAC/D1rB,EAAAA,IAAC,OAAM,CAAA,SAAA0rB,EAAO,MAAO,CAAA,CAAA,EACvB,EACA1rB,EAAAA,IAACw4C,GAAa,CAAA,MAAO9sB,CAAQ,CAAA,CAAA,CAAA,CAC/B,EAEA,cAAA,CAEJ,EACCA,GACC1rB,EAAA,IAACsO,EAAO,MAAP,CACC,SAAU+oB,GACV,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAK,OACL,MAAOhL,EACP,SAAW7kB,GAAMy9C,GAAoBz9C,EAAE,OAAO,KAAK,EACnD,YAAY,eACZ,UAAU,0IAAA,CAAA,CACZ,EAEJ,SAGC8G,EAAO,IAAP,CAAW,SAAU+oB,GAAc,UAAU,YAC5C,SAAA,CAACr3B,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,UAAA,EACAA,EAAA,IAACsO,EAAO,OAAP,CACC,SAAUywC,GACV,WAAW,QACX,SAAS,MACT,QAAS,IAAM8F,EAAmB,EAAI,EACtC,UAAU,+MAET,SACCl5B,EAAAnnB,OAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAK2rB,EAAO,KAAM,IAAKA,EAAO,OAAQ,UAAU,SAAU,CAAA,EAC/D3rB,EAAAA,IAAC,OAAM,CAAA,SAAA2rB,EAAO,MAAO,CAAA,CAAA,EACvB,EACA3rB,EAAAA,IAACw4C,GAAa,CAAA,MAAO7sB,CAAQ,CAAA,CAAA,CAAA,CAC/B,EAEA,cAAA,CAEJ,EACCA,GACC3rB,EAAA,IAACsO,EAAO,MAAP,CACC,SAAU+oB,GACV,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAK,OACL,MAAO/K,EACP,SAAW9kB,GAAM09C,GAAoB19C,EAAE,OAAO,KAAK,EACnD,YAAY,eACZ,UAAU,0IAAA,CAAA,CACZ,EAEJ,EAGCqyC,GAAanuB,GAAUC,GAAUU,GAAWC,GAC3C9nB,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,GACV,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,kGAEV,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,uDAAuD,SAAc,iBAAA,EAClFA,EAAA,IAAA,IAAA,CAAE,UAAU,kDAAkD,SAE/D,qEAAA,CAAA,CAAA,EACF,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+EACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,2CAA2C,SAAA,CAAA,KAAGknB,EAAO,OAAO,IAAA,EAAE,EAC9ElnB,EAAAA,KAAC,OAAK,CAAA,UAAU,oDACb,SAAA,CAAUq1C,EAAA,YAAY,QAAQ,CAAC,EAAE,IAAEluB,EAAO,MAAA,CAC7C,CAAA,CAAA,EACF,EACAnnB,EAAAA,KAAC,MAAI,CAAA,UAAU,+EACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,2CAA2C,SAAA,CAAA,KAAGmnB,EAAO,OAAO,IAAA,EAAE,EAC9EnnB,EAAAA,KAAC,OAAK,CAAA,UAAU,oDACb,SAAA,CAAUq1C,EAAA,YAAY,QAAQ,CAAC,EAAE,IAAEnuB,EAAO,MAAA,CAC7C,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,SAIDpd,EAAO,IAAP,CAAW,SAAU+oB,GAAc,UAAU,iBAC5C,SAAA,CAACr3B,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,WAAA,EACAA,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,SAEV,SAACr3B,EAAA,IAAA,MAAA,CAAI,UAAU,2GAA2G,SAE1H,uBAAA,CAAA,CAAA,CAAA,CACF,EACF,EAGAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,oGAEV,SAAA,CAACr3B,EAAA,IAAA,KAAA,CAAG,UAAU,4DAA4D,SAE1E,sBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,2CAA2C,SAGxD,kNAAA,CAAA,CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EA/KAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,mBAEV,SAAA,CAAAr3B,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,OACV,QAAS,CAAE,OAAQ,GAAI,EACvB,WAAY,CAAE,SAAU,EAAG,OAAQ,IAAU,KAAM,QAAS,EAE5D,SAACtO,EAAA,IAAAogB,GAAA,CAAS,KAAM,GAAI,UAAU,0CAA2C,CAAA,CAAA,CAC3E,EACApgB,EAAA,IAACsO,EAAO,GAAP,CACC,SAAU+oB,GACV,UAAU,2DACX,SAAA,qBAAA,CAED,EACAr3B,EAAA,IAACsO,EAAO,EAAP,CACC,SAAU+oB,GACV,UAAU,wCACX,SAAA,uDAAA,CAED,EACAr3B,EAAA,IAACsO,EAAO,OAAP,CACC,SAAUywC,GACV,WAAW,QACX,SAAS,MACT,QAAS,iBACT,UAAU,kGACX,SAAA,gBAAA,CAAA,CAED,CAAA,CAAA,CAgJF,CAAA,CAEJ,EAGC,CAAC2G,GACA1lD,EAAA,IAACsO,EAAO,OAAP,CACC,SAAUywC,GACV,WAAW,QACX,SAAS,MACT,QAASoG,EACT,SAAU9jD,GAAW,CAACqqB,GAAU,CAACC,GAAU,CAACU,GAAW,CAACC,GAAW,CAACg6B,EACpE,UAAW;AAAA;AAAA,cAEPjlD,GAAW,CAACqqB,GAAU,CAACC,GAAU,CAACU,GAAW,CAACC,GAAW,CAACg6B,EACxD,kDACA,mDACJ;AAAA,YAGD,SAAUjlD,EAAA,mBAAsBilD,EAAgD,cAA/B,4BAA+B,CACnF,EAIFtmD,EAAA,IAACi0C,GAAA,CACC,OAAQyQ,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,SAAUI,EACV,qBAAsBr5B,GAAQ,QAC9B,eAAAvO,CAAA,CACF,EACAnd,EAAA,IAACi0C,GAAA,CACC,OAAQ2Q,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,SAAUG,EACV,qBAAsBr5B,GAAQ,QAC9B,eAAAxO,CAAA,CACF,EACAnd,EAAA,IAACwlD,GAAA,CACC,OAAQ9nC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1B8E,EAAe,IAAI,EACnB4a,EAAS,IAAI,CACf,EACA,YAAAzhB,EACA,OAAA8P,EACA,OAAAC,EACA,UAAA85B,EACA,MAAA7iD,EACA,WAAA8iD,EACA,aAAApb,CAAA,CACF,EACAtqC,EAAA,IAAC2c,GAAA,CACC,OAAQuB,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,OAAQwjC,EAAA,CAAA,CACV,CAAA,CACF,CAEJ,CCr7CA,MAAM12B,GAAY,CAChB,4EACA,oFACF,EAEM67B,GAA2B,6CAC3BC,GAAuB,CAAC,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,oBAAoB,KAAO,SAAS,CAAC,EAAE,gBAAkB,aAAa,KAAO,aAAa,EAAE,CAAC,UAAY,GAAM,OAAS,CAAC,CAAC,QAAU,GAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,QAAU,GAAK,aAAe,UAAU,KAAO,WAAW,KAAO,SAAS,EAAE,CAAC,QAAU,GAAK,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,WAAW,KAAO,OAAO,EAAE,CAAC,UAAY,GAAM,OAAS,CAAC,CAAC,QAAU,GAAK,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,QAAU,GAAK,aAAe,UAAU,KAAO,WAAW,KAAO,SAAS,EAAE,CAAC,QAAU,GAAM,aAAe,OAAO,KAAO,WAAW,KAAO,MAAM,CAAC,EAAE,KAAO,iBAAiB,KAAO,OAAO,EAAE,CAAC,UAAY,GAAM,OAAS,CAAC,CAAC,QAAU,GAAK,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,QAAU,GAAM,aAAe,UAAU,KAAO,YAAY,KAAO,SAAS,EAAE,CAAC,QAAU,GAAM,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,QAAU,GAAM,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,UAAU,KAAO,OAAO,EAAE,CAAC,UAAY,GAAM,OAAS,CAAC,CAAC,QAAU,GAAK,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,QAAU,GAAM,aAAe,UAAU,KAAO,YAAY,KAAO,SAAS,EAAE,CAAC,QAAU,GAAM,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,QAAU,GAAM,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,oBAAoB,KAAO,OAAO,EAAE,CAAC,UAAY,GAAM,OAAS,CAAC,CAAC,QAAU,GAAK,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,QAAU,GAAM,aAAe,UAAU,KAAO,YAAY,KAAO,SAAS,EAAE,CAAC,QAAU,GAAM,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,QAAU,GAAM,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,oBAAoB,KAAO,OAAO,EAAE,CAAC,UAAY,GAAM,OAAS,CAAC,CAAC,QAAU,GAAK,aAAe,UAAU,KAAO,OAAO,KAAO,SAAS,EAAE,CAAC,QAAU,GAAK,aAAe,UAAU,KAAO,KAAK,KAAO,SAAS,EAAE,CAAC,QAAU,GAAK,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,WAAW,KAAO,OAAO,EAAE,CAAC,OAAS,CAAE,EAAC,KAAO,mBAAmB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,SAAS,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAA,EAAG,KAAO,kBAAkB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,SAAS,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAE,EAAC,KAAO,QAAQ,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,SAAS,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,UAAU,QAAU,CAAE,EAAC,gBAAkB,aAAa,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,CAAC,EAAE,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,SAAS,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAE,EAAC,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,QAAQ,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,OAAO,QAAU,CAAE,EAAC,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,WAAa,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,SAAS,CAAC,EAAE,aAAe,mDAAmD,KAAO,SAAS,KAAO,OAAO,CAAC,EAAE,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,SAAS,EAAE,CAAC,aAAe,SAAS,KAAO,MAAM,KAAO,QAAQ,EAAE,CAAC,aAAe,UAAU,KAAO,eAAe,KAAO,SAAS,CAAC,EAAE,KAAO,qCAAqC,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,SAAS,CAAC,EAAE,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,WAAa,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAS,CAAC,EAAE,aAAe,6DAA6D,KAAO,SAAS,KAAO,OAAO,CAAC,EAAE,KAAO,oBAAoB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAE,EAAC,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,SAAS,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,SAAS,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,WAAa,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,iBAAiB,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,iBAAiB,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAS,CAAC,EAAE,aAAe,6DAA6D,KAAO,SAAS,KAAO,OAAO,CAAC,EAAE,KAAO,oBAAoB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAS,CAAC,EAAE,KAAO,mBAAmB,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,MAAM,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,WAAa,CAAC,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,SAAS,EAAE,CAAC,aAAe,SAAS,KAAO,MAAM,KAAO,QAAQ,EAAE,CAAC,aAAe,QAAQ,KAAO,YAAY,KAAO,OAAO,EAAE,CAAC,aAAe,QAAQ,KAAO,YAAY,KAAO,OAAO,EAAE,CAAC,aAAe,UAAU,KAAO,iBAAiB,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,iBAAiB,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,aAAa,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAS,CAAC,EAAE,aAAe,gDAAgD,KAAO,SAAS,KAAO,OAAO,CAAC,EAAE,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,SAAS,CAAC,EAAE,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAA,EAAG,KAAO,OAAO,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,QAAQ,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,SAAS,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAS,EAAE,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,OAAO,EAAE,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,SAAS,CAAC,EAAE,KAAO,SAAS,QAAU,CAAA,EAAG,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,QAAQ,KAAO,QAAQ,EAAE,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,SAAS,EAAE,CAAC,aAAe,SAAS,KAAO,MAAM,KAAO,QAAQ,EAAE,CAAC,aAAe,QAAQ,KAAO,YAAY,KAAO,OAAO,EAAE,CAAC,aAAe,QAAQ,KAAO,YAAY,KAAO,OAAO,EAAE,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,2BAA2B,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,2BAA2B,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,SAAS,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAA,EAAG,KAAO,YAAY,QAAU,GAAG,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,mBAAmB,QAAU,CAAE,EAAC,gBAAkB,aAAa,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,EAAE,CAAC,aAAe,QAAQ,KAAO,QAAQ,KAAO,OAAO,CAAC,EAAE,KAAO,mBAAmB,QAAU,GAAG,gBAAkB,aAAa,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAS,EAAE,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,OAAO,EAAE,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,SAAS,CAAC,EAAE,KAAO,aAAa,QAAU,CAAE,EAAC,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,SAAS,EAAE,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,OAAO,EAAE,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,SAAS,CAAC,EAAE,KAAO,oBAAoB,QAAU,CAAE,EAAC,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,SAAS,KAAO,SAAS,EAAE,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,OAAO,EAAE,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,SAAS,CAAC,EAAE,KAAO,+BAA+B,QAAU,CAAA,EAAG,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAS,EAAE,CAAC,aAAe,QAAQ,KAAO,IAAI,KAAO,OAAO,EAAE,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,IAAI,KAAO,SAAS,CAAC,EAAE,KAAO,wBAAwB,QAAU,GAAG,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAS,EAAE,CAAC,aAAe,OAAO,KAAO,WAAW,KAAO,MAAM,CAAC,EAAE,KAAO,oBAAoB,QAAU,CAAE,EAAC,gBAAkB,aAAa,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,cAAc,KAAO,QAAQ,CAAC,EAAE,KAAO,oBAAoB,QAAU,CAAC,CAAC,aAAe,OAAO,KAAO,GAAG,KAAO,MAAM,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,SAAS,CAAC,EAAE,KAAO,aAAa,QAAU,CAAA,EAAG,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,OAAS,CAAA,EAAG,KAAO,SAAS,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,QAAQ,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,CAAC,EAAE,KAAO,eAAe,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,SAAS,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,QAAQ,KAAO,SAAS,CAAC,EAAE,KAAO,sBAAsB,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,SAAS,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,WAAW,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,QAAQ,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAA,EAAG,KAAO,cAAc,QAAU,CAAC,CAAC,aAAe,UAAU,KAAO,GAAG,KAAO,SAAS,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,OAAO,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,KAAK,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAS,CAAC,EAAE,KAAO,eAAe,QAAU,CAAE,EAAC,gBAAkB,aAAa,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,cAAc,KAAO,SAAS,EAAE,CAAC,aAAe,QAAQ,KAAO,OAAO,KAAO,OAAO,CAAC,EAAE,KAAO,wBAAwB,QAAU,CAAE,EAAC,gBAAkB,aAAa,KAAO,UAAU,EAAE,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,gBAAgB,KAAO,SAAS,EAAE,CAAC,aAAe,UAAU,KAAO,YAAY,KAAO,SAAS,CAAC,EAAE,KAAO,cAAc,QAAU,CAAE,EAAC,gBAAkB,UAAU,KAAO,UAAU,EAAE,CAAC,gBAAkB,UAAU,KAAO,SAAS,CAAC,EAGplcC,GAAY,CACvB,OAAQ,IACR,IAAK,IACL,OAAQ,IACR,KAAM,GACR,EAGaC,GAAgB,CAC3B,CAACD,GAAU,MAAM,EAAG,EACpB,CAACA,GAAU,GAAG,EAAG,GACjB,CAACA,GAAU,MAAM,EAAG,GACpB,CAACA,GAAU,IAAI,EAAG,GACpB,EAYME,GAAkB,8CAGlBC,GAAiB,CACrB,yMACA,uDACA,oDACA,mDACF,EAyCO,MAAMC,EAAkB,CAC7B,YAAYC,EAAkB,CAC5B,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,gCAAgC,EAI9CA,EAAiB,UACnB,KAAK,SAAWA,EAAiB,SACjC,KAAK,OAASA,GAGPA,EAAiB,WACxB,KAAK,SAAWA,EAChB,KAAK,OAASA,EAAiB,cAI/B,KAAK,SAAWA,EAChB,KAAK,OAAS,MAIhB,KAAK,SAAW,IAAI37C,EAClBo7C,GACAC,GACA,KAAK,QAAU,KAAK,QAC1B,CACG,CAGD,MAAM,oBAAoBl7C,EAAcy7C,EAAc,CACpD,GAAI,CAYF,OALkB,MANI,IAAI57C,EACxBG,EACAof,GACA,KAAK,QACb,EAE4C,UACpCq8B,EACAR,EACR,CAGK,OAAQlkD,EAAO,CACd,cAAQ,MAAM,kCAAmCA,CAAK,EAChDA,CACP,CACF,CAED,MAAM,aAAaiJ,EAAcG,EAAQ,CACvC,GAAI,CAAC,KAAK,OACR,MAAM,IAAI,MAAM,yCAAyC,EAG3D,GAAI,CAYF,OAAO,MALI,MANW,IAAIN,EACxBG,EACAof,GACA,KAAK,MACb,EAEqC,QAC7B67B,GACA96C,CACR,GAEsB,MACjB,OAAQpJ,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACP,CACF,CAGD,MAAM,qBAAqB2kD,EAAQ,CACjC,KAAM,CAAE,OAAA77B,EAAQ,OAAAC,EAAQ,eAAAI,EAAgB,eAAAC,EAAgB,aAAAs7B,CAAc,EAAGC,EAEzE,GAAI,CAEF,MAAMx6B,EAAa,MAAM,KAAK,oBAAoBrB,EAAQ47B,CAAY,EAChEt6B,EAAa,MAAM,KAAK,oBAAoBrB,EAAQ27B,CAAY,EAGhEE,EAAY/N,GAAiB1tB,EAAe,SAAU,CAAA,EACtD07B,EAAYhO,GAAiBztB,EAAe,SAAU,CAAA,EACtD07B,EAAejO,GAAiB1sB,EAAW,SAAU,CAAA,EACrD46B,EAAelO,GAAiBzsB,EAAW,SAAU,CAAA,EAGvD06B,EAAeF,GACjB,MAAM,KAAK,aAAa97B,EAAQmB,EAAiB,EAE/C86B,EAAeF,GACjB,MAAM,KAAK,aAAa97B,EAAQkB,EAAiB,CAEpD,OAAQjqB,EAAO,CACd,cAAQ,MAAM,kCAAmCA,CAAK,EAChDA,CACP,CACF,CAGD,MAAM,wBAAwB8oB,EAAQC,EAAQjN,EAAKkpC,EAAc,CAC/D,GAAI,CAAC,KAAK,OACR,MAAM,IAAI,MAAM,sCAAsC,EAGxD,GAAI,CAEF,IAAIC,EAAcn8B,EACdo8B,EAAcn8B,EACdo8B,EAAoBH,EAEpB,OAAOl8B,CAAM,EAAI,OAAOC,CAAM,IAChCk8B,EAAcl8B,EACdm8B,EAAcp8B,EAEVk8B,IACFG,EAAqB,IAAM,KAAQ,OAAOH,CAAY,IAMrDG,IACHA,EAAoBnU,GAAgB,+BAA+B,GAcrE,MAAMl0B,EAAU,MAVL,MAAM,KAAK,SAAS,mCAC7BmoC,EACAC,EACAppC,EACAqpC,EACA,CACE,SAAU,GACX,CACT,GAE+B,OAYnBC,EATStoC,EAAQ,KAAK,IAAIE,GAAO,CACrC,GAAI,CACF,OAAO,KAAK,SAAS,UAAU,SAASA,CAAG,CAC5C,MAAW,CACV,OAAO,IACR,CACT,CAAO,EAAE,OAAO,OAAO,EAGe,KAAKzF,GACnCA,EAAM,OAAS,eACfA,EAAM,OAAS,QACfA,EAAM,UAAU,OAAS,aACjC,EAEM,GAAI,CAAC6tC,EAAkB,CAGrB,MAAM1oC,EAAU,MAAM,KAAK,SAAS,QAAO,EAMrCgW,EAAc,MALI,IAAI5pB,EAC1B4T,EACA,CAAC,iEAAiE,EAClE,KAAK,QACf,EACkD,QAAQuoC,EAAaC,EAAappC,CAAG,EAE/E,GAAI4W,IAAgB,6CAClB,MAAM,IAAI,MAAM,+BAA+B,EAGjD,MAAO,CACL,KAAMA,EACN,OAAQuyB,EACR,OAAQC,EACR,IAAAppC,EACA,QAAAgB,CACV,CACO,CAED,MAAO,CACL,KAAMsoC,EAAiB,KAAK,KAC5B,OAAQH,EACR,OAAQC,EACR,IAAAppC,EACA,QAAAgB,CACR,CACK,OAAQ9c,EAAO,CACd,cAAQ,MAAM,uBAAwBA,CAAK,EACrCA,CACP,CACF,CAGD,MAAM,KAAK2kD,EAAQ,CACjB,GAAI,CAAC,KAAK,OACR,MAAM,IAAI,MAAM,gCAAgC,EAGlD,GAAI,CACF,KAAM,CACJ,OAAA77B,EACA,OAAAC,EACA,IAAAjN,EACA,UAAAupC,EACA,UAAAC,EACA,eAAAn8B,EACA,eAAAC,EACA,WAAA0B,EAAa,EACb,WAAAC,EAAa,EACb,UAAAw6B,EACA,SAAAv6B,EAAW,KAAK,MAAM,KAAK,IAAK,EAAG,GAAI,EAAI,IAC5C,EAAG25B,EAGJ,IAAIM,EAAcn8B,EACdo8B,EAAcn8B,EACdy8B,EAAsBr8B,EACtBs8B,EAAsBr8B,EACtBs8B,EAAkB56B,EAClB66B,EAAkB56B,EAClB66B,EAAiBP,EACjBQ,EAAiBP,EAEjB,OAAOx8B,CAAM,EAAI,OAAOC,CAAM,IAChCk8B,EAAcl8B,EACdm8B,EAAcp8B,EACd08B,EAAsBp8B,EACtBq8B,EAAsBt8B,EACtBu8B,EAAkB36B,EAClB46B,EAAkB76B,EAElB86B,EAAiB,CAACN,EAClBO,EAAiB,CAACR,GAIpB,MAAMS,EAAczB,GAAcvoC,CAAG,EACrC8pC,EAAiB,KAAK,MAAMA,EAAiBE,CAAW,EAAIA,EAC5DD,EAAiB,KAAK,MAAMA,EAAiBC,CAAW,EAAIA,EAG5D,MAAMC,EAAgB,MAAM,KAAK,OAAO,WAAU,EAClD,MAAM,KAAK,qBAAqB,CAC9B,OAAQd,EACR,OAAQC,EACR,eAAgBM,EAChB,eAAgBC,EAChB,aAAcM,CACtB,CAAO,EAGD,MAAMC,EAAa,CACjB,OAAQf,EACR,OAAQC,EACR,IAAAppC,EACA,UAAW8pC,EACX,UAAWC,EACX,eAAgBL,EAChB,eAAgBC,EAChB,WAAYC,EACZ,WAAYC,EACZ,UAAWJ,GAAaQ,EACxB,SAAA/6B,CACR,EAUYlO,EAAU,MAPL,MAAM,KAAK,SAAS,KAC7BkpC,EACA,CACE,SAAU,GACX,CACT,GAE+B,OAGnB1uC,EAASwF,EAAQ,KAAK,IAAIE,GAAO,CACrC,GAAI,CACF,OAAO,KAAK,SAAS,UAAU,SAASA,CAAG,CAC5C,MAAW,CACV,OAAO,IACR,CACT,CAAO,EAAE,OAAO,OAAO,EAGXipC,EAAgB3uC,EAAO,KAAKC,GAASA,EAAM,OAAS,UAAU,EAC9D2uC,EAAY5uC,EAAO,KAAKC,GAC5BA,EAAM,OAAS,qBACfA,EAAM,UAAU,OAAS,mBACjC,EAEM,GAAI,CAAC0uC,GAAiB,CAACC,EACrB,MAAM,IAAI,MAAM,kDAAkD,EAIpE,MAAO,CACL,QAASD,EAAc,KAAK,SAAWA,EAAc,KAAK,GAC1D,UAAWC,EAAU,KAAK,UAC1B,QAASA,EAAU,KAAK,QACxB,QAASA,EAAU,KAAK,QACxB,QAAAppC,CACR,CACK,OAAQ9c,EAAO,CACd,cAAQ,MAAM,0BAA2BA,CAAK,EACxCA,CACP,CACF,CAED,MAAM,kBAAkB2kD,EAAQ,CAC9B,GAAI,CAEF,aAAM,KAAK,qBAAqBA,CAAM,EAG/B,MADI,MAAM,KAAK,SAAS,kBAAkBA,CAAM,GACvC,MACjB,OAAQ3kD,EAAO,CACd,cAAQ,MAAM,8BAA+BA,CAAK,EAC5CA,CACP,CACF,CAED,MAAM,kBAAkB2kD,EAAQ,CAC9B,GAAI,CAEF,OAAO,MADI,MAAM,KAAK,SAAS,kBAAkBA,CAAM,GACvC,MACjB,OAAQ3kD,EAAO,CACd,cAAQ,MAAM,8BAA+BA,CAAK,EAC5CA,CACP,CACF,CAED,MAAM,QAAQ2kD,EAAQ,CACpB,GAAI,CAEF,OAAO,MADI,MAAM,KAAK,SAAS,QAAQA,CAAM,GAC7B,MACjB,OAAQ3kD,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACP,CACF,CAED,MAAM,KAAK+d,EAAS,CAClB,GAAI,CAEF,OAAO,MADI,MAAM,KAAK,SAAS,KAAKA,CAAO,GAC3B,MACjB,OAAQ/d,EAAO,CACd,cAAQ,MAAM,0BAA2BA,CAAK,EACxCA,CACP,CACF,CAGD,MAAM,YAAY+d,EAAS,CACzB,GAAI,CACF,MAAMmU,EAAW,MAAM,KAAK,SAAS,UAAUnU,CAAO,EACtD,MAAO,CACL,MAAOmU,EAAS,MAChB,SAAUA,EAAS,SACnB,OAAQA,EAAS,OACjB,OAAQA,EAAS,OACjB,IAAKA,EAAS,IACd,UAAWA,EAAS,UACpB,UAAWA,EAAS,UACpB,UAAWA,EAAS,UACpB,yBAA0BA,EAAS,yBACnC,yBAA0BA,EAAS,yBACnC,YAAaA,EAAS,YACtB,YAAaA,EAAS,WAC9B,CACK,OAAQlyB,EAAO,CACd,cAAQ,MAAM,0BAA2BA,CAAK,EACxCA,CACP,CACF,CAED,MAAM,qBAAqBm7B,EAAO,CAChC,GAAI,CACF,MAAMzP,EAAU,MAAM,KAAK,SAAS,UAAUyP,CAAK,EAC7CgrB,EAAY,CAAA,EAElB,QAASv6C,EAAI,EAAGA,EAAI8f,EAAS9f,IAAK,CAChC,MAAMmS,EAAU,MAAM,KAAK,SAAS,oBAAoBod,EAAOvvB,CAAC,EAC1DsmB,EAAW,MAAM,KAAK,YAAYnU,CAAO,EAC/CooC,EAAU,KAAK,CAAE,QAAApoC,EAAS,GAAGmU,CAAU,CAAA,CACxC,CAED,OAAOi0B,CACR,OAAQnmD,EAAO,CACd,cAAQ,MAAM,qCAAsCA,CAAK,EACnDA,CACP,CACF,CAGD,OAAO,iBAAiB,CACtB,OAAA8oB,EACA,OAAAC,EACA,IAAAjN,EACA,UAAAupC,EACA,UAAAC,EACA,eAAAn8B,EACA,eAAAC,EACA,WAAA0B,EACA,WAAAC,EACA,UAAAw6B,EACA,SAAAv6B,CACJ,EAAK,CACD,MAAO,CACL,OAAAlC,EACA,OAAAC,EACA,IAAAjN,EACA,UAAAupC,EACA,UAAAC,EACA,eAAAn8B,EACA,eAAAC,EACA,WAAY0B,GAAc,EAC1B,WAAYC,GAAc,EAC1B,UAAAw6B,EACA,SAAUv6B,GAAY,KAAK,MAAM,KAAK,IAAK,EAAG,GAAI,EAAI,IAC5D,CACG,CAGD,OAAO,8BAA8B,CACnC,QAAAjN,EACA,eAAAoL,EACA,eAAAC,EACA,WAAA0B,EACA,WAAAC,EACA,SAAAC,CACJ,EAAK,CACD,MAAO,CACL,QAAAjN,EACA,eAAAoL,EACA,eAAAC,EACA,WAAY0B,GAAc,EAC1B,WAAYC,GAAc,EAC1B,SAAUC,GAAY,KAAK,MAAM,KAAK,IAAK,EAAG,GAAI,EAAI,IAC5D,CACG,CAGD,OAAO,8BAA8B,CACnC,QAAAjN,EACA,UAAA8Q,EACA,WAAA/D,EACA,WAAAC,EACA,SAAAC,CACJ,EAAK,CACD,MAAO,CACL,QAAAjN,EACA,UAAA8Q,EACA,WAAY/D,GAAc,EAC1B,WAAYC,GAAc,EAC1B,SAAUC,GAAY,KAAK,MAAM,KAAK,IAAK,EAAG,GAAI,EAAI,IAC5D,CACG,CAGD,OAAO,oBAAoB,CACzB,QAAAjN,EACA,UAAAwnC,EACA,WAAAa,EACA,WAAAC,CACJ,EAAK,CACD,MAAO,CACL,QAAAtoC,EACA,UAAAwnC,EACA,WAAYa,GAAcE,OAC1B,WAAYD,GAAcC,MAChC,CACG,CAKD,OAAO,iBAAiBC,EAAMz3B,EAAWC,EAAW,CAElD,MADc,SAAUw3B,EACR,KAAOx3B,EAAYD,EACpC,CAGD,OAAO,iBAAiBsB,EAAOtB,EAAWC,EAAW,CACnD,MAAMy3B,EAAgBp2B,EAAS,KAAOrB,EAAYD,GAClD,OAAO,KAAK,MAAM,KAAK,IAAI03B,CAAa,EAAI,KAAK,IAAI,MAAM,CAAC,CAC7D,CAGD,OAAO,oBAAoBD,EAAME,EAAW,CAC1C,MAAMX,EAAczB,GAAcoC,CAAS,EAC3C,OAAO,KAAK,MAAMF,EAAOT,CAAW,EAAIA,CACzC,CAGD,OAAO,kBAAkBW,EAAW,CAClC,MAAO,CACL,UAAW,QACX,UAAW,MACjB,CACG,CAGD,OAAO,mBAAmB,CACxB,UAAAC,EACA,kBAAAC,EACA,kBAAAC,EACA,UAAA93B,EACA,UAAAC,EACA,UAAA03B,CACJ,EAAK,CACD,MAAMI,EAAaH,GAAa,EAAIC,EAAoB,KAClDG,EAAaJ,GAAa,EAAIE,EAAoB,KAExD,IAAIvB,EAAY,KAAK,iBAAiBwB,EAAY/3B,EAAWC,CAAS,EAClEu2B,EAAY,KAAK,iBAAiBwB,EAAYh4B,EAAWC,CAAS,EAGtE,OAAAs2B,EAAY,KAAK,oBAAoBA,EAAWoB,CAAS,EACzDnB,EAAY,KAAK,oBAAoBA,EAAWmB,CAAS,EAElD,CAAE,UAAApB,EAAW,UAAAC,EACrB,CAGD,OAAO,uBAAuBn8B,EAAgBC,EAAgB29B,EAAiB,CAC7E,MAAMC,EAAiB,EAAID,EAAkB,IAC7C,MAAO,CACL,WAAY,OAAO,KAAK,MAAM,OAAO59B,CAAc,EAAI69B,CAAc,CAAC,EACtE,WAAY,OAAO,KAAK,MAAM,OAAO59B,CAAc,EAAI49B,CAAc,CAAC,CAC5E,CACG,CAGD,MAAM,oBAAoB,CACxB,OAAAl+B,EACA,OAAAC,EACA,IAAAjN,EACA,eAAAqN,EACA,eAAAC,EACA,UAAAi8B,EACA,UAAAC,EACA,gBAAAyB,EAAkB,GAClB,UAAAxB,EACA,SAAAv6B,CACJ,EAAK,CACD,GAAI,CACF,KAAM,CAAE,WAAAF,EAAY,WAAAC,CAAY,EAAG,KAAK,YAAY,uBAClD5B,EACAC,EACA29B,CACR,EAgBM,OAde,KAAK,YAAY,iBAAiB,CAC/C,OAAAj+B,EACA,OAAAC,EACA,IAAAjN,EACA,UAAAupC,EACA,UAAAC,EACA,eAAAn8B,EACA,eAAAC,EACA,WAAA0B,EACA,WAAAC,EACA,UAAAw6B,EACA,SAAAv6B,CACR,CAAO,CAGF,OAAQhrB,EAAO,CACd,cAAQ,MAAM,kCAAmCA,CAAK,EAChDA,CACP,CACF,CAGD,MAAM,uBAAuB,CAC3B,QAAA+d,EACA,UAAA8Q,EACA,gBAAAk4B,EAAkB,GAClB,SAAA/7B,CACJ,EAAK,CACD,GAAI,CACF,MAAMkH,EAAW,MAAM,KAAK,YAAYnU,CAAO,EAGzCkpC,EAAkB/0B,EAAS,YAC3Bg1B,EAAkBh1B,EAAS,YAE3B,CAAE,WAAApH,EAAY,WAAAC,CAAY,EAAG,KAAK,YAAY,uBAClDk8B,EACAC,EACAH,CACR,EAUM,MAAO,CACL,OATa,KAAK,YAAY,8BAA8B,CAC5D,QAAAhpC,EACA,UAAA8Q,EACA,WAAA/D,EACA,WAAAC,EACA,SAAAC,CACR,CAAO,EAIC,gBAAiB,CACf,QAASi8B,EACT,QAASC,CACV,CACT,CACK,OAAQlnD,EAAO,CACd,cAAQ,MAAM,qCAAsCA,CAAK,EACnDA,CACP,CACF,CAGD,OAAO,sBAAsBkyB,EAAU,CACrC,MAAO,CACL,QAASA,EAAS,QAClB,aAAcA,EAAS,aACvB,aAAcA,EAAS,aACvB,IAAKA,EAAS,IAAM,IACpB,UAAWA,EAAS,UACpB,UAAWA,EAAS,UACpB,WAAY,KAAK,iBAAiBA,EAAS,UAAWA,EAAS,UAAWA,EAAS,SAAS,EAC5F,WAAY,KAAK,iBAAiBA,EAAS,UAAWA,EAAS,UAAWA,EAAS,SAAS,EAC5F,UAAWA,EAAS,UAAU,SAAU,EACxC,YAAaA,EAAS,YAAY,SAAU,EAC5C,YAAaA,EAAS,YAAY,SAAU,CAClD,CACG,CAGD,OAAO,mBAAoB,CACzB,MAAO,CACL,CAAE,MAAOkyB,GAAU,OAAQ,MAAO,QAAS,YAAa,4BAA8B,EACtF,CAAE,MAAOA,GAAU,IAAK,MAAO,QAAS,YAAa,uBAAyB,EAC9E,CAAE,MAAOA,GAAU,OAAQ,MAAO,OAAQ,YAAa,qBAAuB,EAC9E,CAAE,MAAOA,GAAU,KAAM,MAAO,KAAM,YAAa,yBAA2B,CACpF,CACG,CAGD,OAAO,sBAAuB,CAC5B,MAAO,CACL,CAAE,MAAO,aAAc,MAAO,OAAQ,YAAa,4CAA8C,EACjG,CAAE,MAAO,OAAQ,MAAO,OAAQ,kBAAmB,GAAI,kBAAmB,GAAI,YAAa,yBAA2B,EACtH,CAAE,MAAO,WAAY,MAAO,WAAY,kBAAmB,GAAI,kBAAmB,GAAI,YAAa,yBAA2B,EAC9H,CAAE,MAAO,OAAQ,MAAO,OAAQ,kBAAmB,GAAI,kBAAmB,GAAI,YAAa,yBAA2B,CAC5H,CACG,CAGD,MAAM,UAAU+C,EAAOld,EAAU,GAAI,CACnC,GAAI,CAAC,KAAK,OACR,MAAM,IAAI,MAAM,kCAAkC,EAGpD,GAAI,CAEF,MAAMmd,EAAgB,KAAK,SAAS,UAAU,mBAAmB,YAAa,CAACD,CAAK,CAAC,EAG/EE,EAAW,CACf,GAAI,KAAK,SAAS,QAClB,KAAMD,EACN,GAAGnd,EAEH,MAAOA,EAAQ,MAAQA,EAAQ,MAAQ,EAC/C,EAKYntB,EAAU,MAFL,MAAM,KAAK,OAAO,gBAAgBuqC,CAAQ,GAE5B,OAGnBr5B,EAAUlR,EAAQ,KAAK,IAAIE,GAAO,CACtC,GAAI,CACF,OAAO,KAAK,SAAS,UAAU,SAASA,CAAG,CAC5C,MAAW,CACV,OAAO,IACR,CACT,CAAO,EAAE,OAAO,OAAO,EAEjB,MAAO,CACL,QAAAF,EACA,QAAAkR,CACR,CACK,OAAQhuB,EAAO,CACd,cAAQ,MAAM,sBAAuBA,CAAK,EACpCA,CACP,CACF,CAGD,mBAAmBsnD,EAAc3C,EAAQ,CACvC,OAAO,KAAK,SAAS,UAAU,mBAAmB2C,EAAc3C,CAAM,CACvE,CAGD,MAAM,sBAAsBA,EAAQ,CAClC,GAAI,CACF,MAAM4C,EAAuB9gC,GAAmBk+B,EAAO,SAAU,EAAE,EACnE,eAAQ,IAAI,WAAY4C,EAAsB,YAAa5C,EAAO,QAAS,YAAaA,EAAO,QAAQ,EAKlF,CACnB,UAAW,OAAO,CAAC,EACnB,kBAAmB,OAAO,CAAC,EAC3B,wBAAyB,EACzB,YAAa,OAAO,CAAC,EACrB,mBAAoB,IACpB,UAAW,EACnB,CAIK,OAAQ3kD,EAAO,CACd,eAAQ,MAAM,uBAAwBA,CAAK,EAEpC,CACL,UAAW,OAAO,CAAC,EACnB,kBAAmB,OAAO,CAAC,EAC3B,wBAAyB,EACzB,YAAa,OAAO,CAAC,EACrB,mBAAoB,IACpB,UAAW,GACX,MAAOA,EAAM,OACrB,CACK,CACF,CAGD,MAAM,uBAAuB2kD,EAAQ,CACnC,GAAI,CACF,MAAM6C,EAAwB/gC,GAAmBk+B,EAAO,OAAQ,EAAE,EAClE,eAAQ,IAAI,8BAA+B6C,EAAuB,YAAa7C,EAAO,QAAQ,EAGzE,CACnB,SAAU,OAAO,CAAC,EAClB,kBAAmB,OAAO,CAAC,EAC3B,wBAAyB,EACzB,YAAa,OAAO,CAAC,EACrB,kBAAmB,IACnB,UAAW,EACnB,CAIK,OAAQ3kD,EAAO,CACd,eAAQ,MAAM,uBAAwBA,CAAK,EAEpC,CACL,SAAU,OAAO,CAAC,EAClB,kBAAmB,OAAO,CAAC,EAC3B,wBAAyB,EACzB,YAAa,OAAO,CAAC,EACrB,kBAAmB,IACnB,UAAW,GACX,MAAOA,EAAM,OACrB,CACK,CACF,CAGD,MAAM,YAAYomB,EAAeC,EAAevK,EAAK,CACnD,GAAI,CAWF,MAAM4W,EAAc,MATI,IAAI5pB,EAC1Bw7C,GACA,CACE,mGACD,EACD,KAAK,QACb,EAGgD,QAAQl+B,EAAeC,EAAevK,CAAG,EAGnF,GAAI4W,IAAgB2X,GAClB,MAAO,CACL,OAAQ,GACR,aAAc,GACd,KAAM,EACN,UAAW,GACX,OAAQjkB,EACR,OAAQC,EACR,YAAa,IACvB,EAIM,MAAMohC,EAAe,IAAI3+C,EACvB4pB,EACA6xB,GACA,KAAK,QACb,EAGY,CAACmD,EAAO74B,EAAWtF,EAAcC,CAAY,EAAI,MAAM,QAAQ,IAAI,CACvEi+B,EAAa,MAAO,EACpBA,EAAa,UAAW,EACxBA,EAAa,OAAQ,EACrBA,EAAa,OAAQ,CAC7B,CAAO,EAED,eAAQ,IAAI,aAAc,CACxB,QAAS/0B,EACT,aAAcg1B,EAAM,aAAa,SAAU,EAC3C,KAAMA,EAAM,KACZ,OAAQn+B,EACR,OAAQC,CAChB,CAAO,EAEM,CACL,OAAQ,GACR,aAAck+B,EAAM,aACpB,KAAMA,EAAM,KACZ,UAAA74B,EACA,OAAQtF,EACR,OAAQC,EACR,YAAAkJ,CACR,CACK,OAAQ1yB,EAAO,CACd,eAAQ,MAAM,2BAA4BA,CAAK,EACxC,CACL,OAAQ,GACR,aAAc,GACd,KAAM,EACN,UAAW,GACX,OAAQomB,EACR,OAAQC,EACR,YAAa,IACrB,CACK,CACF,CACH,CCh5BA,MAAMshC,GAAgBzhC,GAAkB,KAGlCi5B,GAAY,CAChB,OAAQ,IACR,IAAK,IACL,OAAQ,IACR,KAAM,GACR,EAGM3mC,GAAQ,CACZ,UAAW,IACRpb,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CAAK,UAAU,oCACd,EAAE,sHAAA,CACJ,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,2EACF,cAAc,KAAA,CAChB,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,8CACF,cAAc,QACd,UAAU,mDAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,EAEF,SAAU,IACPA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAAAA,EAAA,IAAC,OAAA,CAAK,UAAU,gCAAgC,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,OAAO,eACpH,EAAE,mDACF,gBAAgB,KAChB,iBAAiB,KACjB,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,oBACd,KAAK,KACL,GAAG,IACH,IAAI,OACJ,KAAK,QAAA,CAAA,CACP,CAAA,EAEJ,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,MAAC,QAAK,UAAU,gBAAgB,EAAE,2EAA2E,cAAc,MAAM,QAChI,OAAK,CAAA,UAAU,oCAAoC,EAAE,8CAA8C,cAAc,QAAQ,EAC1HA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,UAAU,yCAA0C,CAAA,CAAA,CAAA,CACpF,CACF,CAAA,EAEF,OAAQ,IACLA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,iBAAiB,cAAc,QAAQ,eAAe,QAAQ,UAAU,iCAAkC,CAAA,EACjHA,EAAA,IAAA,OAAA,CAAK,EAAE,qCAAqC,UAAU,yCAA0C,CAAA,CAAA,CAAA,CACnG,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,0EAA2E,CAAA,EACnFA,EAAA,IAAC,OAAA,CAAK,cAAc,QAAQ,UAAU,kDACpC,EAAE,aAAA,CAAA,CAAc,CAAA,CACpB,CACF,CAAA,EAEF,UAAW,IACTA,EAAAA,IAAC,MAAI,CAAA,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAAAwE,EAAA,KAAC,IACC,CAAA,SAAA,CAAAxE,EAAA,IAAC,OAAA,CAAK,UAAU,kCAAkC,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,OAAO,eACtH,EAAE,iBAAiB,gBAAgB,KAAK,iBAAiB,KACzD,SAAAA,EAAA,IAAC,UAAA,CACC,cAAc,oBACd,KAAK,KACL,GAAG,IACH,IAAI,OACJ,KAAK,QAAA,CAAA,CACP,CACF,QACC,OAAK,CAAA,KAAK,eAAe,YAAY,MAAM,EAAE,0EAA2E,CAAA,CAAA,CAAA,CAC3H,CACF,CAAA,EAEF,MAAO,IACJA,EAAAA,IAAA,MAAA,CAAI,UAAU,uBAAuB,QAAQ,YAAY,KAAK,OAAO,OAAO,eAC3E,SAACA,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,EAAE,sIAAuI,CAAA,CAChN,CAAA,CAEJ,EAWMwqD,GAAoB19C,GACjBA,GAAO,SAAW,MAAQ,OAASA,GAAO,OAGnD,SAAwBs3C,IAAe,CAC/B,KAAA,CAAE,QAAA75C,CAAQ,EAAIE,GAAW,EACzB,CAACihB,EAAQ24B,CAAS,EAAIzkD,EAAAA,SAAS,IAAI,EACnC,CAAC+rB,EAAQ24B,CAAS,EAAI1kD,EAAAA,SAAS,IAAI,EACnC,CAACysB,EAASk4B,CAAU,EAAI3kD,EAAAA,SAAS,EAAE,EACnC,CAAC0sB,EAASk4B,CAAU,EAAI5kD,EAAAA,SAAS,EAAE,EACnC,CAAC6qD,EAAiBC,CAAkB,EAAI9qD,EAAAA,SAASmiD,GAAU,MAAM,EACjE,CAAC1gD,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACoe,EAAcC,CAAe,EAAIre,EAAAA,SAAS,EAAK,EAChD,CAACigD,EAAmBC,CAAoB,EAAIlgD,EAAAA,SAAS,EAAK,EAC1D,CAACmgD,EAAYC,CAAa,EAAIpgD,EAAAA,SAAS,IAAI,EAC3C,CAACgc,EAAa6G,CAAc,EAAI7iB,EAAAA,SAAS,aAAa,EACtD,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,IAAI,EACjC,CAAC8d,EAAmBC,CAAoB,EAAI/d,EAAAA,SAAS,EAAK,EAC1D,CAACse,EAAiBC,CAAkB,EAAIve,EAAAA,SAAS,EAAK,EACVA,EAAAA,SAAS,EAAI,EAC3BA,WAAS,CAC3C,MAAO,OAAO,WACd,OAAQ,OAAO,WAChB,CAAA,EAGD,KAAM,CAAC+qD,EAAcC,CAAe,EAAIhrD,EAAAA,SAAS,EAAE,EACPA,EAAAA,SAAS,MAAM,EAC3D,KAAM,CAACqoD,EAAW4C,CAAY,EAAIjrD,EAAAA,SAAS,IAAI,EACzC,CAACsoD,EAAW4C,CAAY,EAAIlrD,EAAAA,SAAS,IAAI,EACzC,CAACmrD,EAAqBC,CAAsB,EAAIprD,EAAAA,SAAS,EAAK,EAC9D,CAACqrD,EAAeC,CAAgB,EAAItrD,EAAAA,SAAS,MAAM,EACnD,CAACurD,EAAYC,CAAa,EAAIxrD,EAAA,SAAS,CAAE,IAAK,EAAG,IAAK,EAAG,EAGzD,CAACyrD,EAAoBC,CAAqB,EAAI1rD,EAAAA,SAAS,EAAI,EAG3D,CAAC2rD,EAAgBC,EAAiB,EAAI5rD,EAAAA,SAAS,EAAK,EAGpD,CAAC6rD,GAAeC,EAAgB,EAAI9rD,EAAAA,SAAS,GAAG,EAChD,CAAC+rD,EAAeC,CAAgB,EAAIhsD,EAAAA,SAAS,GAAG,EAElCw8C,GAAY,EAGhC,KAAM,CAACyP,EAAUC,CAAW,EAAIlsD,EAAAA,SAAS,IAAI,EACvC,CAACmsD,EAAmBC,CAAoB,EAAIpsD,EAAAA,SAAS,EAAK,EAG1DqsD,GAAc,CAACj5B,GAAOk5B,GAAW,KAAU,CAC/C,GAAI,CAACl5B,IAASA,KAAU,EAAU,MAAA,IAClC,GAAI,CAAC,OAAO,SAASA,EAAK,EAAU,MAAA,IAEhC,IAAAm5B,GAAMD,GAAW,EAAIl5B,GAAQA,GAC7B,OAAAm5B,KAAQ,EAAU,IACjB,OAAO,SAASA,EAAG,EAGpB,KAAK,IAAIA,EAAG,EAAI,KACX,WAILA,GAAM,KACDA,GAAI,eAAe,QAAS,CACjC,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,EAIIA,GAAI,cAAc,CAAC,EAAE,QAAQ,KAAM,GAAG,EAhBX,GAiBpC,EAGMC,GAAqB,IAAM,CAC/B,GAAIL,EACF,OACG/rD,EAAAA,IAAA,MAAA,CAAI,UAAU,iDAAiD,SAEhE,uBAAA,EAIA,GAAA,CAAC6rD,GAAU,OACb,OACG7rD,EAAAA,IAAA,MAAA,CAAI,UAAU,sFAAsF,SAErG,0EAAA,EAIJ,MAAMgzB,GAAQ64B,EAAS,MACjBQ,GAAgB,EAAIr5B,GAGxB,OAAAxuB,EAAA,KAAC,MAAI,CAAA,UAAU,kFACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,eAAe,SAAc,iBAAA,EAC5CwE,EAAAA,KAAC,MAAI,CAAA,UAAU,0BAA0B,SAAA,CAAA,KACpCgmD,GAAiB9+B,CAAM,EAAE,MAAIugC,GAAYj5B,EAAK,EAAE,IAAEw3B,GAAiB7+B,CAAM,CAAA,EAC9E,EACAnnB,EAAAA,KAAC,MAAI,CAAA,UAAU,8CAA8C,SAAA,CAAA,KACxDgmD,GAAiB7+B,CAAM,EAAE,MAAIsgC,GAAYI,EAAa,EAAE,IAAE7B,GAAiB9+B,CAAM,CAAA,CACtF,CAAA,CAAA,EACF,CAEJ,EAGM4gC,EAAgB,SAAY,CAChC,GAAI,GAAC5gC,GAAU,CAACC,GAAU,CAAC8+B,GAE3B,CAAAuB,EAAqB,EAAI,EACrB,GAAA,CACF,MAAMpkD,GAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDmtC,GAAkB,IAAInF,GAAkBx/C,EAAQ,EAGhDohB,GAAgB0C,EAAO,SAAW,MAAQ6+B,GAAgB7+B,EAAO,QACjEzC,GAAgB0C,EAAO,SAAW,MAAQ4+B,GAAgB5+B,EAAO,QAEjErjB,GAAO,MAAMikD,GAAgB,YAAYvjC,GAAeC,GAAewhC,CAAe,EAExF,GAAAniD,GAAK,QAAUA,GAAK,aAAc,CAEpC,MAAMkkD,GAAwBlkD,GAAK,OAAO,YAAY,IAAM0gB,GAAc,YAAY,EAGhF4+B,GAAe,OAAOt/C,GAAK,YAAY,EACvCmkD,GAAM,OAAO,CAAC,GAAK,OAAO,EAAE,EAG5Bz5B,GAAQ,OAAO40B,EAAY,EAAI,OAAO6E,EAAG,EACzCC,GAAe15B,GAAQA,GAGvB9J,GAAiBsjC,GAAwB9gC,EAAO,SAAWC,EAAO,SAClExC,GAAiBqjC,GAAwB7gC,EAAO,SAAWD,EAAO,SAGlEihC,GAAoB,KAAK,IAAI,GAAIzjC,GAAiBC,EAAc,EACtE,IAAIigC,GAAgBsD,GAAeC,GAG9BH,KACHpD,GAAgB,EAAIA,IAGtB,QAAQ,IAAI,qBAAsB,CAChC,aAAcxB,GAAa,SAAS,EACpC,IAAK6E,GAAI,SAAS,EAClB,MAAAz5B,GACA,aAAA05B,GACA,kBAAAC,GACA,cAAAvD,GACA,YAAa9gD,GAAK,YAClB,OAAQ,CACN,QAAS0gB,GACT,SAAU0C,EAAO,SACjB,aAAc8gC,EAChB,EACA,OAAQ,CACN,QAASvjC,GACT,SAAU0C,EAAO,SACjB,aAAc,CAAC6gC,EAAA,CACjB,CACD,EAEDlkD,GAAK,MAAQ8gD,EAAA,CAMX,GAHJ0C,EAAYxjD,EAAI,EAGZA,IAAM,QAAUA,IAAM,MAAO,CACzB,MAAAskD,GAAiBX,GAAY3jD,GAAK,KAAK,EAC7CsiD,EAAgBgC,EAAc,CAAA,QAEzBhqD,GAAO,CACN,QAAA,MAAM,4BAA6BA,EAAK,EAChDkpD,EAAY,IAAI,CAAA,QAChB,CACAE,EAAqB,EAAK,CAAA,EAE9B,EAGAlsD,EAAAA,UAAU,IAAM,CACAwsD,EAAA,CAAA,EACb,CAAC5gC,GAAQ,QAASC,GAAQ,QAAS8+B,CAAe,CAAC,EAGtD3qD,EAAAA,UAAU,IAAM,CACd,GAAI+rD,EACE,GAAAA,EAAS,QAAUA,EAAS,MAAO,CAE/B,MAAAe,GAAiBX,GAAYJ,EAAS,KAAK,EACjDjB,EAAgBgC,EAAc,CAAA,MAG9BhC,EAAgB,EAAE,CAEtB,EACC,CAACiB,CAAQ,CAAC,EAGP,MAAA5G,GAAuBllD,IAAU,CACrC,GAAIA,KAAU,IAAM,cAAc,KAAKA,EAAK,EAG1C,GAFAwkD,EAAWxkD,EAAK,EAEZA,GAAO,CACT,MAAMizB,GAAQ64B,GAAU,OAAS,OAAOlB,CAAY,EAC9ClE,GAAoB,WAAW1mD,EAAK,EAAIizB,GACnCwxB,EAAAiC,GAAkB,UAAU,CAAA,MAEvCjC,EAAW,EAAE,CAGnB,EAEMU,GAAuBnlD,IAAU,CACrC,GAAIA,KAAU,IAAM,cAAc,KAAKA,EAAK,EAG1C,GAFAykD,EAAWzkD,EAAK,EAEZA,GAAO,CACT,MAAMizB,GAAQ64B,GAAU,OAAS,OAAOlB,CAAY,EAC9CkC,GAAoB,WAAW9sD,EAAK,EAAIizB,GACnCuxB,EAAAsI,GAAkB,UAAU,CAAA,MAEvCtI,EAAW,EAAE,CAGnB,EAGMuI,GAA4B/sD,IAAU,CAC1C,GAAIA,KAAU,IAAM,cAAc,KAAKA,EAAK,GAG1C,GAFA6qD,EAAgB7qD,EAAK,EAEjBssB,GAAWtsB,GAAO,CACpB,MAAM0mD,GAAoB,WAAWp6B,CAAO,EAAI,WAAWtsB,EAAK,EACrDykD,EAAAiC,GAAkB,UAAU,CAAA,SAC9Bn6B,GAAWvsB,GAAO,CAC3B,MAAM8sD,GAAoB,WAAWvgC,CAAO,EAAI,WAAWvsB,EAAK,EACrDwkD,EAAAsI,GAAkB,UAAU,CAAA,EAG7C,EAGME,GAAW,IAAM,CACjBnxC,IAAgB,eAAiB8P,GAAUC,GAAU8+B,EACvDhoC,EAAe,WAAW,EACjB7G,IAAgB,aAAe+uC,GACxCloC,EAAe,iBAAiB,CAEpC,EAGMuqC,GAAW,IAAM,CACjBpxC,IAAgB,YAClB6G,EAAe,aAAa,EACnB7G,IAAgB,mBACzB6G,EAAe,WAAW,CAE9B,EAEM4yB,GAAqBvoC,IAAU,CAC/BizC,IAAe,SACjBsE,EAAUv3C,EAAK,EAEfw3C,EAAUx3C,EAAK,EAEjBgzC,EAAqB,EAAK,CAC5B,EAEMqF,GAAmB,SAAY,CACnC,GAAI,CAAC56C,EAAS,CACZnH,EAAM,MAAM,4BAA4B,EACxC,MAAA,CAGE,GAAA,CAACsoB,GAAU,CAACC,GAAU,CAACU,GAAW,CAACC,GAAW,CAACq+B,EAAc,CAC/DvnD,EAAM,MAAM,2BAA2B,EACvC,MAAA,CAGF9B,EAAW,EAAI,EACfqc,EAAqB,EAAI,EACzB8E,EAAe,WAAW,EAC1B4a,EAAS,IAAI,EAET,GAAA,CAEI,MAAAle,GAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAClCmtC,GAAkB,IAAInF,GAAkBjoC,EAAM,EAG9CimC,GAAgBl5C,GACpB,OAAOmgB,CAAO,EAAE,QAAQX,EAAO,QAAQ,EACvCA,EAAO,QACT,EACM25B,GAAgBn5C,GACpB,OAAOogB,CAAO,EAAE,QAAQX,EAAO,QAAQ,EACvCA,EAAO,QACT,EAGAlJ,EAAe,UAAU,EAGzB,MAAM8pC,GAAgB,qBAAqB,CACzC,OAAQ7gC,EAAO,QACf,OAAQC,EAAO,QACf,eAAgBy5B,GAChB,eAAgBC,GAChB,aAAc96C,CAAA,CACf,EAEDkY,EAAe,UAAU,EAGnB,MAAAwqC,GAAcvhC,EAAO,SAAW,MAChCwhC,GAAcvhC,EAAO,SAAW,MAGhC3C,GAAgBikC,GAAc1C,GAAgB7+B,EAAO,QACrDzC,GAAgBikC,GAAc3C,GAAgB5+B,EAAO,QAGrDqQ,GAAWixB,GAAc7H,GAAiB8H,GAAc7H,GAAgB,GAGxEwG,GAAW,MAAMU,GAAgB,YACrCvjC,GACAC,GACAwhC,CACF,EAGM0C,GAAuBnkC,GAAc,YAAY,EAAIC,GAAc,YAAY,EAC/E4+B,GAAcgE,GAAS,OACxB7iC,GAAc,YAAY,IAAM6iC,GAAS,OAAO,YAAY,EAAIngC,EAASC,EACzEwhC,GAAuBxhC,EAASD,EAC/Bo8B,GAAc+D,GAAS,OACxB7iC,GAAc,YAAY,IAAM6iC,GAAS,OAAO,YAAY,EAAIlgC,EAASD,EACzEyhC,GAAuBzhC,EAASC,EAC/ByhC,GAAevF,GAAY,UAAYn8B,EAAO,QAAU05B,GAAgBC,GACxEgI,GAAexF,GAAY,UAAYn8B,EAAO,QAAU25B,GAAgBD,GAGxEl8B,GAAiB2+B,GAAY,SAC7B1+B,GAAiB2+B,GAAY,SAG/B,IAAAF,GACJ,GAAIiE,GAAS,OACIjE,GAAA,OAAOiE,GAAS,YAAY,EAC3C,QAAQ,IAAI,6BAA8B,CACxC,aAAcjE,GAAa,SAAS,EACpC,SAAAiE,EAAA,CACD,MACI,CAED,IAAAyB,GASJ,GARI,OAAO3C,GAAiB,UAAYA,EAAa,WAAW,IAAI,EAEvD2C,GAAA,MAEAA,GAAA,WAAW3C,EAAa,UAAU,EAI3C,MAAM2C,EAAQ,GAAKA,IAAY,EACjC,cAAQ,MAAM,yBAA0B,CACtC,aAAA3C,EACA,SAAA2C,GACA,KAAM,OAAO3C,CAAA,CACd,EACK,IAAI,MAAM,kDAAkD,EAI9D,MAAAgC,GAAoB,KAAOxjC,GAAiBD,IAG5CkgC,GAAgB+D,GACpB,GAAKG,GAAWX,IAChBW,GAAWX,GAGPY,GAAY,KAAK,KAAKnE,EAAa,EACnCqD,GAAM,OAAO,+BAA+B,EAClD7E,GAAe,OAAO,KAAK,MAAM2F,GAAY,OAAOd,EAAG,CAAC,CAAC,CAAA,CAkB3D,GAfA,QAAQ,IAAI,qBAAsB,CAChC,aAAc7E,GAAa,SAAS,EACpC,OAAQ,CACN,QAASC,GAAY,QACrB,SAAU3+B,GACV,aAAc2+B,GAAY,WAAagE,GAAS,OAASA,GAAS,OAAShE,GAAY,QACzF,EACA,OAAQ,CACN,QAASC,GAAY,QACrB,SAAU3+B,GACV,aAAc2+B,GAAY,WAAa+D,GAAS,OAASA,GAAS,OAAS/D,GAAY,QAAA,CACzF,CACD,EAGGF,IAAgB,GACZ,MAAA,IAAI,MAAM,uCAAuC,EAIzD,IAAIK,GAAWC,GAEf,GAAI+C,IAAkB,OAAQ,CACtB,MAAAuC,GAAYpG,GAAkB,kBAAkBqD,CAAe,EACrExC,GAAYuF,GAAU,UACtBtF,GAAYsF,GAAU,SAAA,KACjB,CACL,KAAM,CAAE,UAAWC,GAAO,UAAWC,EAAM,EAAItG,GAAkB,mBAAmB,CAClF,UAAW,kBACX,kBAAmB,OAAO+D,EAAW,KAAO,CAAC,EAC7C,kBAAmB,OAAOA,EAAW,KAAO,CAAC,EAC7C,UAAWtD,GAAY,SACvB,UAAWC,GAAY,SACvB,UAAW2C,CAAA,CACZ,EACDxC,GAAYwF,GACZvF,GAAYwF,EAAA,CAId,MAAM3D,GAAQ,CAAC,EAGT4D,GAAiBpB,GAAgB,SAAS,UAAU,mBACxD,qCACA,CACE1E,GAAY,QACZC,GAAY,QACZ2C,EACA7C,EAAA,CAEJ,EACAmC,GAAM,KAAK4D,EAAc,EAGnB,MAAAC,GAAWrB,GAAgB,SAAS,UAAU,mBAClD,OACA,CAAC,CACC,OAAQ1E,GAAY,QACpB,OAAQC,GAAY,QACpB,IAAK2C,EACL,UAAW,KAAK,KAAKxC,GAAYhB,GAAcwD,CAAe,CAAC,EAAIxD,GAAcwD,CAAe,EAChG,UAAW,KAAK,MAAMvC,GAAYjB,GAAcwD,CAAe,CAAC,EAAIxD,GAAcwD,CAAe,EACjG,eAAgB2C,GAChB,eAAgBC,GAChB,WAAY,EACZ,WAAY,EACZ,UAAW9iD,EACX,SAAU,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,EAAI,IAC3C,CAAA,CACH,EACAw/C,GAAM,KAAK6D,EAAQ,EAGf5xB,GAAW,KACb+tB,GAAM,KAAKwC,GAAgB,SAAS,UAAU,mBAAmB,WAAW,CAAC,EACvExC,GAAA,KACJwC,GAAgB,SAAS,UAAU,mBAAmB,cAAe,CACnE,EACAhiD,CACD,CAAA,CACH,GAIF,MAAM4iB,GAAK,MAAMo/B,GAAgB,SAAS,UAAUxC,GAAO,CACzD,MAAO/tB,GACP,SAAUA,GAAW,GAAK,KAAW,GAAA,CACtC,EAEDvZ,EAAe,YAAY,EAK3B,MAAMvI,IAHU,MAAMiT,GAAG,KAAK,GAGP,KAAK,IAAWvN,IAAA,CACjC,GAAA,CACF,OAAO2sC,GAAgB,SAAS,UAAU,SAAS3sC,EAAG,OAC5C,CACH,OAAA,IAAA,CACT,CACD,EAAE,OAAO,OAAO,EAGXipC,GAAgB3uC,GAAO,KAAcC,IAAAA,GAAM,OAAS,UAAU,EAC9DwG,GAAUkoC,IAAe,MAAM,SAAWA,IAAe,MAAM,GAG/DgF,GAAiB3zC,GAAO,SAC5BC,GAAM,OAAS,qBACfA,GAAM,UAAU,OAAS,mBAC3B,EAEAsI,EAAe,WAAW,EAG1B,WAAW,IAAM,CACf9E,EAAqB,EAAK,EAC1B8E,EAAe,IAAI,EAGnB,WAAW,IAAM,CACfxE,EAAgB,EAAI,EAGpB,WAAW,IAAM,CACfE,EAAmB,EAAI,GACtB,GAAI,EAGP,WAAW,IAAM,CACfomC,EAAW,EAAE,EACbC,EAAW,EAAE,EACbvmC,EAAgB,EAAK,GACpB,GAAK,GACP,GAAG,GACL,GAAI,QACArb,GAAO,CACN,QAAA,MAAM,uBAAwBA,EAAK,EAC3Cy6B,EAASz6B,GAAM,OAAO,EACtB6f,EAAe,OAAO,EACtBrf,EAAM,MAAM,0CAA0C,CAAA,QACtD,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAGMwsD,GAAoB,SAAY,CACpC,GAAI,GAACvjD,GAAW,CAACmhB,GAAU,CAACC,GAExB,GAAA,CACF,MAAM/jB,GAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDD,GAAS,MAAMvX,GAAS,UAAU,EAGpC,GAAA8jB,EAAO,SAAW,MAAO,CAC3B,MAAM4C,GAAU,MAAM1mB,GAAS,WAAW2C,CAAO,EAChCmhD,GAAA/nC,GAAmB2K,EAAO,CAAC,CAAA,KACvC,CAEL,MAAMA,GAAU,MADO,IAAI5iB,EAAgBggB,EAAO,QAAST,GAAW9L,EAAM,EACvC,UAAU5U,CAAO,EACtDmhD,GAAiBriC,GAAmBiF,GAAS5C,EAAO,QAAQ,CAAC,CAAA,CAI3D,GAAAC,EAAO,SAAW,MAAO,CAC3B,MAAM2C,GAAU,MAAM1mB,GAAS,WAAW2C,CAAO,EAChCqhD,EAAAjoC,GAAmB2K,EAAO,CAAC,CAAA,KACvC,CAEL,MAAMA,GAAU,MADO,IAAI5iB,EAAgBigB,EAAO,QAASV,GAAW9L,EAAM,EACvC,UAAU5U,CAAO,EACtDqhD,EAAiBviC,GAAmBiF,GAAS3C,EAAO,QAAQ,CAAC,CAAA,QAExD/oB,GAAO,CACN,QAAA,MAAM,0BAA2BA,EAAK,CAAA,CAElD,EAGA9C,EAAAA,UAAU,IAAM,CACIguD,GAAA,CACjB,EAAA,CAACpiC,EAAQC,EAAQphB,CAAO,CAAC,EAGtB,MAAAwjD,GAAe,MAAOjhD,IAAU,CACpC,GAAI,CAACvC,GAAW,CAACuC,GAAc,MAAA,IAE3B,GAAA,CACF,MAAMlF,GAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAGvD,GAAAtS,GAAM,SAAW,MAAO,CAC1B,MAAMirC,GAAa,MAAMnwC,GAAS,WAAW2C,CAAO,EAC7C,OAAAoZ,GAAmBo0B,EAAU,CAAA,KAGjC,CACG,MAAA1pB,GAAgB,IAAI3iB,EACxBoB,GAAM,QACN,CAAC,qDAAsD,0CAA0C,EACjGlF,EACF,EAEM,CAAC8rC,GAAYznC,EAAQ,EAAI,MAAM,QAAQ,IAAI,CAC/CoiB,GAAc,UAAU9jB,CAAO,EAC/B8jB,GAAc,SAAA,EAAW,MAAM,IAAM,EAAE,CAAA,CACxC,EAEM,OAAAhF,GAAmBqqB,GAAYznC,EAAQ,CAAA,QAEzCrJ,GAAO,CACN,eAAA,MAAM,0BAA2BA,EAAK,EACvC,GAAA,CAEX,EAGA9C,EAAAA,UAAU,IAAM,EACS,SAAY,CACjC,GAAI4rB,EAAQ,CACJ,MAAA4C,GAAU,MAAMy/B,GAAariC,CAAM,EACzCggC,GAAiBp9B,EAAO,CAAA,CAE1B,GAAI3C,EAAQ,CACJ,MAAA2C,GAAU,MAAMy/B,GAAapiC,CAAM,EACzCigC,EAAiBt9B,EAAO,CAAA,CAE5B,GAEe,CACd,EAAA,CAAC5C,EAAQC,EAAQphB,CAAO,CAAC,EAGtBmuC,MAAAA,GAAiBpqB,IAAY,CAC7B,GAAA,CAACA,GAAgB,MAAA,IACf,MAAA69B,GAAM,WAAW79B,EAAO,EAC1B,OAAA69B,KAAQ,EAAU,IAClBA,GAAM,KAAe,WAClBA,GAAI,QAAQ,CAAC,CACtB,EAuGE,OAAA3nD,EAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,qDAAqD,SAAY,eAAA,EAC/EwE,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACT,CAACknB,GAAU,CAACC,IAChB04B,EAAU,IAAI,EACdC,EAAU,IAAI,EACdC,EAAW,EAAE,EACbC,EAAW,EAAE,EACboG,EAAgB,EAAE,EAClBnoC,EAAe,aAAa,EAC9B,EACA,UAAW,oEACTiJ,GAAUC,EACN,gDACA,oFACN,GACA,SAAU,CAACD,GAAU,CAACC,EAEtB,SAAA,CAACnnB,EAAAA,KAAA,MAAA,CAAI,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,OAAO,MAAM,6BAChE,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,4DAA4D,OAAO,eAAe,YAAY,IAAI,cAAc,OAAO,CAAA,EAC/HA,EAAAA,IAAC,OAAK,CAAA,EAAE,wBAAwB,OAAO,eAAe,YAAY,IAAI,cAAc,QAAQ,eAAe,OAAO,CAAA,CAAA,EACpH,EAAM,OAAA,CAAA,CAER,EACCA,EAAA,IAAA,SAAA,CAAO,UAAU,iHAAiH,SAEnI,aAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,aAEb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,0HACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,QAAS,IAAMie,EAAe,aAAa,EAC3C,UAAW,0BAA0B7G,IAAgB,cAAgB,iBAAmB,2DAA2D,GAEnJ,SAAA,CAAC5b,EAAA,IAAA,MAAA,CAAI,UAAU,4FAA4F,SAAC,IAAA,SAC3G,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,MAAA,CAAI,UAAU,cAAc,SAAM,SAAA,EAClCA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,SAA0B,4BAAA,CAAA,CAAA,CACvD,CAAA,CAAA,CAAA,CACA,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAMknB,GAAUC,GAAUlJ,EAAe,WAAW,EAC7D,UAAW,0BAA0B,CAACiJ,GAAU,CAACC,EAAS,gCAAkC,EAAE,IAAI/P,IAAgB,YAAc,iBAAmB,2DAA2D,GAE9M,SAAA,CAAC5b,EAAA,IAAA,MAAA,CAAI,UAAU,4FAA4F,SAAC,IAAA,SAC3G,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,MAAA,CAAI,UAAU,cAAc,SAAM,SAAA,EAClCA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,SAAe,iBAAA,CAAA,CAAA,CAC1C,CAAA,CAAA,CAAA,CACF,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAMmmD,GAAgBloC,EAAe,iBAAiB,EAC/D,UAAW,0BAA2BkoC,EAAiD,GAAlC,+BAAoC,IAAI/uC,IAAgB,kBAAoB,iBAAmB,2DAA2D,GAE/M,SAAA,CAAC5b,EAAA,IAAA,MAAA,CAAI,UAAU,4FAA4F,SAAC,IAAA,SAC3G,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,MAAA,CAAI,UAAU,cAAc,SAAM,SAAA,EAClCA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,SAAqB,uBAAA,CAAA,CAAA,CACpD,CAAA,CAAA,CAAA,CAAA,CACE,CAAA,CACF,CACF,CAAA,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,uBAEZ,SAAA,CAAAoX,IAAgB,eACfpX,OAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,6FACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,EAAAA,IAAC,MAAI,CAAA,UAAU,0BACZ,SAAA0rB,GAAUC,GAEPnnB,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAC/S,EAAAA,IAAA,MAAA,CAAI,UAAU,oGACZ,SAAA0rB,EAAO,OAAO,MAAM,EAAG,CAAC,CAC3B,CAAA,EACAlnB,EAAAA,KAAC,OAAK,CAAA,UAAU,oDACb,SAAA,CAAOknB,EAAA,OAAO,MAAIC,EAAO,MAAA,EAC5B,EACC3rB,EAAA,IAAA,MAAA,CAAI,UAAU,oGAAoG,SAEnH,KAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,oGACZ,SAAA,CAAkBimD,EAAA,IAAM,GAAA,CAC3B,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,EACAzqD,EAAA,IAAC,SAAA,CACC,QAAS,IAAM8/C,EAAqB,EAAK,EACzC,UAAU,iJACX,SAAA,MAAA,CAAA,CAED,EACF,EAEAt7C,EAAAA,KAAC,MAAI,CAAA,UAAU,yBAEf,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACbggD,EAAc,QAAQ,EACtBF,EAAqB,EAAI,CAC3B,EACE,UAAU,mIAEX,SACCp0B,EAAAlnB,OAAC,MAAI,CAAA,UAAU,0BACX,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa9wB,CAAM,EAAG,IAAKA,EAAO,OAAQ,UAAU,sBAAuB,CAAA,EACpF1rB,EAAA,IAAA,OAAA,CAAK,UAAU,cAAe,WAAO,MAAO,CAAA,CAAA,CACjD,CAAA,EAEEA,EAAAA,IAAC,MAAI,CAAA,UAAU,oCAAoC,SAAY,cAAA,CAAA,CAAA,CAErE,EAGAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACbggD,EAAc,QAAQ,EACtBF,EAAqB,EAAI,CAC3B,EACE,UAAU,mIAEX,SACCn0B,EAAAnnB,OAAC,MAAI,CAAA,UAAU,0BACX,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa7wB,CAAM,EAAG,IAAKA,EAAO,OAAQ,UAAU,sBAAuB,CAAA,EACpF3rB,EAAA,IAAA,OAAA,CAAK,UAAU,cAAe,WAAO,MAAO,CAAA,CAAA,CACjD,CAAA,EAEEA,EAAAA,IAAC,MAAI,CAAA,UAAU,oCAAoC,SAAY,cAAA,CAAA,CAAA,CAAA,CAErE,CACF,CAAA,CAAA,EACF,EAGEwE,EAAAA,KAAC,MAAI,CAAA,UAAU,6FACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACf,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,oDAAoD,SAAQ,WAAA,EACvEA,EAAA,IAAA,IAAA,CAAE,UAAU,4CAA4C,SAE3D,sGAAA,CAAA,CAAA,EACF,EACAA,EAAA,IAAC,SAAA,CACG,QAAS,IAAMsrD,EAAsB,CAACD,CAAkB,EACxD,UAAU,mJAET,WACC7mD,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAA,OAEG/S,EAAA,IAAA,OAAA,CAAK,UAAU,yCAAyC,SAAC,GAAA,CAAA,CAAA,CAAA,CAC9D,EAEEwE,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAA,OAEG/S,EAAA,IAAA,OAAA,CAAK,UAAU,oBAAoB,SAAC,GAAA,CAAA,CAAA,CACzC,CAAA,CAAA,CAAA,CAEJ,EACF,EAEGqrD,EACCrrD,EAAA,IAAC,MAAI,CAAA,UAAU,8BACZ,SAAA,CACC,CAAE,MAAO+hD,GAAU,OAAQ,MAAO,QAAS,YAAa,6BAA8B,EACtF,CAAE,MAAOA,GAAU,IAAK,MAAO,QAAS,YAAa,wBAAyB,EAC9E,CAAE,MAAOA,GAAU,OAAQ,MAAO,OAAQ,YAAa,sBAAuB,EAC9E,CAAE,MAAOA,GAAU,KAAM,MAAO,KAAM,YAAa,wBAAyB,CAAA,EAC5E,IAAKiM,IACTxpD,EAAA,KAAC,SAAA,CAEK,QAAS,IAAMkmD,EAAmBsD,GAAK,KAAK,EAC5C,UAAW,8CACTvD,IAAoBuD,GAAK,MACrB,wFACA,qGACN,GAEA,SAAA,CAACxpD,EAAAA,KAAA,MAAA,CAAI,UAAU,sDACZ,SAAA,CAAKwpD,GAAA,MAAM,WAAA,EACd,EACChuD,EAAA,IAAA,MAAA,CAAI,UAAU,4CAA6C,YAAK,YAAY,EAC5EA,EAAA,IAAA,MAAA,CAAI,UAAU,iDAAiD,SAAK,OAAA,CAAA,CAAA,CAAA,EAZhEguD,GAAK,KAcb,CAAA,CACH,CAAA,EAEChuD,EAAAA,IAAA,MAAA,CAAI,UAAU,qDACb,SAAAwE,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sDACX,SAAA,EAAkBimD,EAAA,KAAO,QAAQ,CAAC,EAAE,YAAA,EACxC,EACAjmD,EAAAA,KAAC,MAAI,CAAA,UAAU,4CACZ,SAAA,CAAAimD,IAAoB1I,GAAU,QAAU,8BACxC0I,IAAoB1I,GAAU,KAAO,yBACrC0I,IAAoB1I,GAAU,QAAU,uBACxC0I,IAAoB1I,GAAU,MAAQ,wBAAA,CACzC,CAAA,CAAA,EACF,EACC/hD,EAAA,IAAA,MAAA,CAAI,UAAU,4CAA4C,SAAK,OAAA,CAAA,CAAA,CAAA,CAClE,CACF,CAAA,CAAA,EAEJ,EAGC0rB,GAAUC,GACR3rB,EAAAA,IAAA,MAAA,CAAI,UAAU,6FACb,SAAAwE,EAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,kDACb,SAACA,EAAAA,IAAA,MAAA,CAAI,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,OACnD,eAAC,OAAK,CAAA,EAAE,4FAA4F,OAAO,eAAe,YAAY,IAAI,cAAc,QAAQ,eAAe,OAAO,CAAA,CACxL,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,MAAA,CAAI,UAAU,4CAA4C,SAAiB,oBAAA,EAC3EA,EAAA,IAAA,MAAA,CAAI,UAAU,iDAAiD,SAEhE,qLAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGEA,EAAA,IAAC,SAAA,CACH,QAAS+sD,GACT,SAAU,CAACrhC,GAAU,CAACC,GAAU,CAAC8+B,EACjC,UAAW,iDACT,CAAC/+B,GAAU,CAACC,GAAU,CAAC8+B,EACnB,qFACA,+CACN,GACD,SAAA,UAAA,CAAA,CAED,EACQ,EAIX7uC,IAAgB,aACdpX,OAAA,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,6FACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oGACZ,SAAAwqD,GAAiB9+B,CAAM,EAAE,MAAM,EAAG,CAAC,CACtC,CAAA,EACAlnB,EAAAA,KAAC,OAAK,CAAA,UAAU,oDACb,SAAA,CAAAgmD,GAAiB9+B,CAAM,EAAE,MAAI8+B,GAAiB7+B,CAAM,CAAA,EACvD,EACC3rB,EAAA,IAAA,MAAA,CAAI,UAAU,oGAAoG,SAEnH,KAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,oGACZ,SAAA,CAAkBimD,EAAA,IAAM,GAAA,CAC3B,CAAA,CAAA,EACF,EACAzqD,EAAA,IAAC,SAAA,CACC,QAAS,IAAM8/C,EAAqB,EAAK,EACzC,UAAU,iJACX,SAAA,MAAA,CAAA,CAED,CAAA,CACF,CACF,CAAA,GAGE,CAAC+L,GAAU,QAAUE,IACpBvnD,EAAAA,KAAA,MAAA,CAAI,UAAU,6FACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,oDAAoD,SAAa,gBAAA,EAC/EwE,EAAAA,KAAC,MAAI,CAAA,UAAU,aACjB,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACK,QAAS,IAAMwrD,GAAkB,EAAK,EACtC,UAAW,4CACRD,EAA+E,2EAA9D,2DACpB,GAEC,SAAO7/B,EAAA,MAAA,CACV,EACA1rB,EAAA,IAAC,SAAA,CACC,QAAS,IAAMwrD,GAAkB,EAAI,EACrC,UAAW,4CACTD,EAAiB,4DAA8D,0EACjF,GAEC,SAAO5/B,EAAA,MAAA,CAAA,CACd,CACF,CAAA,CAAA,EACM,EACH3rB,EAAA,IAAA,IAAA,CAAE,UAAU,iDAAiD,SAE9D,2EAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO2qD,EACP,SAAWnjD,IAAMslD,GAAyBtlD,GAAE,OAAO,KAAK,EACxD,YAAY,IACZ,UAAU,6MAAA,CACZ,QACC,MAAI,CAAA,UAAU,8EACZ,SAAiB+jD,EAAA,GAAG5/B,EAAO,MAAM,QAAQD,EAAO,MAAM,GAAK,GAAGA,EAAO,MAAM,QAAQC,EAAO,MAAM,EACjG,CAAA,CAAA,EACF,EACDg/B,GACCnmD,EAAA,KAAC,MAAI,CAAA,UAAU,iDAAiD,SAAA,CAAA,KAC3D+mD,EAAiB5/B,EAAO,OAASD,EAAO,OAAO,MAAIi/B,EAAa,IAAEY,EAAiB7/B,EAAO,OAASC,EAAO,MAAA,CAC7G,CAAA,CAAA,EAEN,EAIFnnB,EAAAA,KAAC,MAAI,CAAA,UAAU,6FACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,oDAAoD,SAAe,kBAAA,EACjFwE,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMwrD,GAAkB,EAAK,EACtC,UAAW,4CACRD,EAA+E,2EAA9D,2DACpB,GAEC,SAAO7/B,EAAA,MAAA,CACV,EACA1rB,EAAA,IAAC,SAAA,CACC,QAAS,IAAMwrD,GAAkB,EAAI,EACrC,UAAW,4CACTD,EAAiB,4DAA8D,0EACjF,GAEC,SAAO5/B,EAAA,MAAA,CAAA,CACV,CACJ,CAAA,CAAA,EACJ,EAEInnB,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACf,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkrD,EAAiB,MAAM,EACpC,UAAW,gDACXD,IAAkB,OACZ,4DACA,4GACR,GACD,SAAA,YAAA,CAED,EACAjrD,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkrD,EAAiB,QAAQ,EACtC,UAAW,gDACXD,IAAkB,SACZ,4DACA,4GACR,GACD,SAAA,cAAA,CAAA,CAED,EACF,EAECA,IAAkB,QAEfzmD,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAC/S,EAAA,IAAA,MAAA,CAAI,UAAU,iDAAiD,SAEhE,yKAAA,EAGCosD,GAAmB,EAEpB5nD,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+CACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,iDAAiD,SAAS,YAAA,EACxEA,EAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,SAAC,IAAA,EACrEwE,EAAAA,KAAC,MAAI,CAAA,UAAU,iDACZ,SAAA,CAAAgmD,GAAiB7+B,CAAM,EAAE,QAAM6+B,GAAiB9+B,CAAM,CAAA,CACzD,CAAA,CAAA,EACF,EACAlnB,EAAAA,KAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,iDAAiD,SAAS,YAAA,EACxEA,EAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,SAAC,IAAA,EACrEwE,EAAAA,KAAC,MAAI,CAAA,UAAU,iDACZ,SAAA,CAAAgmD,GAAiB7+B,CAAM,EAAE,QAAM6+B,GAAiB9+B,CAAM,CAAA,CACzD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGDu/B,IAAkB,UAChBzmD,OAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,OAAC,MACG,CAAA,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,uDAAuD,SAE1E,YAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOmrD,EAAW,IAClB,SAAW3jD,IAAM4jD,EAAuB9jD,KAAA,CAAE,GAAGA,GAAM,IAAKE,GAAE,OAAO,KAAQ,EAAA,EACvE,YAAY,IACZ,UAAU,4MAAA,CACd,EACEhD,EAAAA,KAAC,MAAI,CAAA,UAAU,iDACZ,SAAA,CAAOmnB,EAAA,OAAO,QAAMD,EAAO,MAAA,CAC9B,CAAA,CAAA,EACJ,SACC,MACG,CAAA,SAAA,CAAC1rB,EAAA,IAAA,QAAA,CAAM,UAAU,uDAAuD,SAE1E,YAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOmrD,EAAW,IAClB,SAAW3jD,IAAM4jD,EAAuB9jD,KAAA,CAAE,GAAGA,GAAM,IAAKE,GAAE,OAAO,KAAQ,EAAA,EACvE,YAAY,IACZ,UAAU,4MAAA,CACd,EACEhD,EAAAA,KAAC,MAAI,CAAA,UAAU,iDACZ,SAAA,CAAOmnB,EAAA,OAAO,QAAMD,EAAO,MAAA,CAC9B,CAAA,CAAA,CACJ,CAAA,CAAA,CACF,CAAA,CAAA,EAEF,EAEAlnB,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAASgtD,GACT,UAAU,0IACX,SAAA,MAAA,CAED,EACAhtD,EAAA,IAAC,SAAA,CACC,QAAS+sD,GACT,SAAU,CAACpC,EACX,UAAW,iDACRA,EAEG,gDADA,oFAEN,GACD,SAAA,UAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAID/uC,IAAgB,mBACdpX,OAAA,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,6FACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oGACZ,SAAAwqD,GAAiB9+B,CAAM,EAAE,MAAM,EAAG,CAAC,CACtC,CAAA,EACAlnB,EAAAA,KAAC,OAAK,CAAA,UAAU,oDACb,SAAA,CAAAgmD,GAAiB9+B,CAAM,EAAE,MAAI8+B,GAAiB7+B,CAAM,CAAA,EACvD,EACC3rB,EAAA,IAAA,MAAA,CAAI,UAAU,oGAAoG,SAEnH,KAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,oGACZ,SAAA,CAAkBimD,EAAA,IAAM,GAAA,CAC3B,CAAA,CAAA,EACF,EACAzqD,EAAA,IAAC,SAAA,CACC,QAAS,IAAM8/C,EAAqB,EAAK,EACzC,UAAU,iJACX,SAAA,MAAA,CAAA,CAED,CAAA,CACF,CACF,CAAA,EAGAt7C,EAAAA,KAAC,MAAI,CAAA,UAAU,6FACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,oDAAoD,SAAU,aAAA,EAC5EA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMyiB,EAAe,WAAW,EACzC,UAAU,iJACX,SAAA,MAAA,CAAA,CAED,EACF,EAECwoC,IAAkB,QAEfzmD,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,iDAAiD,SAAA,CAAA,gBAClDgmD,GAAiB9+B,CAAM,EAAE,mCAAiC8+B,GAAiB7+B,CAAM,CAAA,EACjG,EAGCygC,GAAmB,EAEpB5nD,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+CACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,iDAAiD,SAAS,YAAA,EACxEA,EAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,SAAC,IAAA,EACrEwE,EAAAA,KAAC,MAAI,CAAA,UAAU,iDACZ,SAAA,CAAAgmD,GAAiB7+B,CAAM,EAAE,QAAM6+B,GAAiB9+B,CAAM,CAAA,CACzD,CAAA,CAAA,EACF,EACAlnB,EAAAA,KAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,iDAAiD,SAAS,YAAA,EACxEA,EAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,SAAC,IAAA,EACrEwE,EAAAA,KAAC,MAAI,CAAA,UAAU,iDACZ,SAAA,CAAAgmD,GAAiB7+B,CAAM,EAAE,QAAM6+B,GAAiB9+B,CAAM,CAAA,CACzD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAEF,EAGAlnB,EAAAA,KAAC,MAAI,CAAA,UAAU,6FACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,yDAAyD,SAAc,iBAAA,EACpFA,EAAA,IAAA,IAAA,CAAE,UAAU,iDAAiD,SAE9D,6DAAA,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0EACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOqsB,EACP,SAAW7kB,IAAMy9C,GAAoBz9C,GAAE,OAAO,KAAK,EACnD,YAAY,IACZ,UAAU,6IAAA,CACZ,EACAhD,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa9wB,CAAM,EAAG,IAAKA,EAAO,OAAQ,UAAU,sBAAuB,CAAA,EACpF1rB,EAAA,IAAA,OAAA,CAAK,UAAU,4CAA6C,WAAO,MAAO,CAAA,CAAA,EAC7E,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,4CAA4C,SAAA,CAAA,YAC/Ck0C,GAAc+S,EAAa,EAAE,IAAE//B,EAAO,MAAA,CAClD,CAAA,CAAA,CACR,CAAA,CAAA,EACF,EAEMlnB,EAAAA,KAAC,MAAI,CAAA,UAAU,0EACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOssB,EACP,SAAW9kB,IAAM09C,GAAoB19C,GAAE,OAAO,KAAK,EACnD,YAAY,IACZ,UAAU,6IAAA,CACZ,EACAhD,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa7wB,CAAM,EAAG,IAAKA,EAAO,OAAQ,UAAU,sBAAuB,CAAA,EACpF3rB,EAAA,IAAA,OAAA,CAAK,UAAU,4CAA6C,WAAO,MAAO,CAAA,CAAA,EAC7E,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,4CAA4C,SAAA,CAAA,YAC/Ck0C,GAAciT,CAAa,EAAE,IAAEhgC,EAAO,MAAA,CAClD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAnnB,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAASgtD,GACT,UAAU,0IACX,SAAA,MAAA,CAED,EACJhtD,EAAA,IAAC,SAAA,CACC,QAASmlD,GACL,SAAU,CAAC94B,GAAW,CAACC,EACvB,UAAW,iDACT,CAACD,GAAW,CAACC,EACT,qFACA,+CACN,GACD,SAAA,aAAA,CAAA,CAEL,CACE,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAGAtsB,EAAA,IAACi0C,GAAA,CACC,OAAQ4L,EACR,QAAS,IAAMC,EAAqB,EAAK,EACzC,SAAUzK,GACV,cAAe0K,IAAe,SAAWr0B,EAASC,EAClD,aAAco0B,IAAe,SAAWp0B,EAASD,CAAA,CACnD,QAGCtP,GAAW,CAAA,OAAM,GAAC,KAAMsB,EAAmB,GAAI3K,WAC9C,SAAAvO,EAAA,KAAC6X,GAAA,CACC,GAAG,MACH,UAAU,gBACV,QAAS,IAAM,EACTT,IAAgB,aAAeA,IAAgB,UACjD+B,EAAqB,EAAK,CAE9B,EAEA,SAAA,CAAA3d,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,uLACtB,SAAA,CAAA7X,EAAA,KAAC6X,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEAET,SAAA,CAAAzZ,EAAQ,sBAAwB,gBAChC,CAACA,GAAS8oB,GAAUC,GAClBnnB,EAAAA,KAAA,MAAA,CAAI,UAAU,+DACZ,SAAA,CAAOknB,EAAA,OAAO,IAAEC,EAAO,MAAA,CAC1B,CAAA,CAAA,CAAA,CAEJ,EAEAnnB,EAAAA,KAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CAAC,CAAA,YAAa,WAAY,WAAY,aAAc,WAAW,EAAE,IAAKyX,IAAS,CAC9E,MAAMnY,GAAW8X,IAAgBK,GAC3BM,GAAcX,IAAgB,aAClC,CAAC,YAAa,aAAc,WAAY,UAAU,EAAE,QAAQA,CAAW,EACvE,CAAC,YAAa,aAAc,WAAY,UAAU,EAAE,QAAQK,EAAI,EAIhE,OAAAzX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,IAAY,CAAClB,EAAQ,iCACrB2Z,GAAc,iBACd3Z,GAASgZ,IAAgBK,GAAO,6BAChC,mCACF,GAEC,SAAA,CAAMb,GAAAa,GAAK,OAAO,CAAC,EAAE,cAAgBA,GAAK,MAAM,CAAC,CAAC,IAAI,EACvDzX,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,uDAAwD,SAAKic,GAAA,EAC5EnY,IAAY,CAAClB,GACX4B,EAAA,KAAA,IAAA,CAAE,UAAU,iDACV,SAAA,CAAAyX,KAAS,aAAe,2BACxBA,KAAS,YAAc,aAAayP,GAAQ,MAAM,QAAQC,GAAQ,MAAM,GACxE1P,KAAS,YAAc,YAAYyP,GAAQ,MAAM,IAAIC,GAAQ,MAAM,QACnE1P,KAAS,cAAgB,8BACzBA,KAAS,aAAe,wBAAwByP,GAAQ,MAAM,IAAIC,GAAQ,MAAM,QAAA,CACnF,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,EApBK1P,EAqBP,CAAA,CAEH,EAEArZ,GACC5C,EAAA,IAAC,MAAI,CAAA,UAAU,oDACZ,SACH4C,CAAA,CAAA,CAAA,EAEJ,GAEEgZ,IAAgB,aAAehZ,IAC9B5C,EAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM2d,EAAqB,EAAK,EACzC,UAAU,kFACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CAAA,EAEJ,QAGCvB,GAAW,CAAA,OAAM,GAAC,KAAM8B,EAAiB,GAAInL,WAC5C,SAAAvO,EAAA,KAAC6X,GAAA,CACC,GAAG,MACH,UAAU,gBACV,QAAS,IAAM8B,EAAmB,EAAK,EAEvC,SAAA,CAAAne,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,oJACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,uDACX,SAAA,0BAAA,CAED,QAEC,MAAI,CAAA,UAAU,OACb,SAAArc,EAAA,IAAC,OAAI,UAAU,gCACZ,SAAC,CAAA,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAK6c,IACpB7c,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM,CACL,QAAA,IAAI,cAAe6c,EAAM,EACjCsB,EAAmB,EAAK,CAC1B,EACA,UAAU,2DAEV,SAAAne,EAAA,IAACoR,GAAA,CACC,KAAM,GACN,UAAWyL,IAAU,EAAI,kBAAoB,gBAAA,CAAA,CAC/C,EAVKA,EAAA,CAYR,EACH,CACF,CAAA,EAEA7c,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMme,EAAmB,EAAK,EACvC,UAAU,0IACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CAAA,EAEJ,QAGC/B,GAAW,CAAA,OAAM,GAAC,KAAM2uC,EAAqB,GAAIh4C,WAChD,SAAAvO,EAAA,KAAC6X,GAAA,CACC,GAAG,MACH,UAAU,gBACV,QAAS,IAAM2uC,EAAuB,EAAK,EAE3C,SAAA,CAAAhrD,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,oJACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,2CACX,SAAA,iBAAA,CAED,EAEArc,EAAAA,IAAC,OAAI,UAAU,iBACZ,YAAkB,qBAAqB,EAAE,IAAKiuD,IAC7CzpD,EAAA,KAAC,SAAA,CAEC,QAAS,IAAM,CACT,GAAAypD,GAAO,QAAU,OAAQ,CACrB,KAAA,CAAE,UAAAhG,GAAW,UAAAC,IAAcd,GAAkB,kBAAkBqD,CAAe,EACpFI,EAAa5C,EAAS,EACtB6C,EAAa5C,EAAS,CAAA,KACjB,CACL,KAAM,CAAE,UAAAD,GAAW,UAAAC,EAAU,EAAId,GAAkB,mBAAmB,CACpE,UAAW,OAAO96B,CAAO,EAAI,OAAOD,CAAO,EAC3C,kBAAmB4hC,GAAO,kBAC1B,kBAAmBA,GAAO,kBAC1B,UAAWviC,GAAQ,SACnB,UAAWC,GAAQ,SACnB,UAAW8+B,CAAA,CACZ,EACDI,EAAa5C,EAAS,EACtB6C,EAAa5C,EAAS,CAAA,CAExB8C,EAAuB,EAAK,CAC9B,EACA,UAAU,+GAEV,SAAA,CAAAhrD,EAAA,IAAC,MAAI,CAAA,UAAU,qCAAsC,SAAAiuD,GAAO,MAAM,EACjEjuD,EAAA,IAAA,MAAA,CAAI,UAAU,iDAAkD,YAAO,WAAY,CAAA,CAAA,CAAA,EAvB/EiuD,GAAO,KAAA,CAyBf,CACH,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,CAEJ,CCxrDA,SAAwBC,GAAmB,CAAE,OAAAxyC,EAAQ,QAAAC,EAAS,SAAA43B,GAAY,CACxE,MAAM9e,EAAUjB,GAAW,EACrB,CAACpI,EAAO+iC,CAAQ,EAAIvuD,EAAAA,SAAS,CAAA,CAAE,EAC/B,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,EAAE,EAC/B,CAACwF,EAAYC,CAAa,EAAIzF,EAAAA,SAAS,EAAE,EAE/CE,EAAAA,UAAU,IAAM,EACI,SAAY,CAC5B,GAAK4b,EAEL,CAAApa,EAAW,EAAI,EACf+7B,EAAS,EAAE,EACP,GAAA,CACI,MAAA+wB,EAAe,MAAM35B,EAAQ,YAAY,EAG3C,GAFI,QAAA,IAAI,iBAAkB25B,CAAY,EAEtCA,GAAgBA,EAAa,OAAS,EAAG,CA2C3C,MAAMC,GAzCY,MAAM,QAAQ,IAC9BD,EAAa,IAAI,MAAO94B,GAAgB,CAClC,GAAA,CACM,QAAA,IAAI,0BAA2BA,CAAW,EAClD,MAAMjK,EAAW,MAAMoJ,EAAQ,qBAAqBa,CAAW,EAC/D,GAAI,CAACjK,EACK,eAAA,IAAI,0BAA2BiK,CAAW,EAC3C,KAIT,KAAM,CAACg5B,EAAgBC,CAAc,EAAI,MAAM,QAAQ,IAAI,CACzDhS,GAAiBlxB,EAAS,MAAM,EAChCkxB,GAAiBlxB,EAAS,MAAM,CAAA,CACjC,EAED,eAAQ,IAAI,mBAAoB,CAC9B,OAAQijC,GAAgB,OACxB,OAAQC,GAAgB,OACxB,SAAUljC,EAAS,QAAA,CACpB,EAEM,CACL,GAAGA,EACH,OAAQijC,EACR,OAAQC,EACR,YAAaj5B,EACb,SAAU,CACR,GAAGjK,EAAS,SACZ,kBAAmBhC,GAAmBgC,EAAS,UAAU,UAAY,IAAKijC,GAAgB,UAAY,EAAE,EACxG,kBAAmBjlC,GAAmBgC,EAAS,UAAU,UAAY,IAAKkjC,GAAgB,UAAY,EAAE,CAAA,CAE5G,QACO9V,EAAK,CACJ,eAAA,MAAM,4BAA6BA,CAAG,EACvC,IAAA,CAEV,CAAA,CACH,GAG6B,OAAO4C,GAAQA,IAAS,IAAI,EACjD,QAAA,IAAI,iBAAkBgT,CAAU,EACxCF,EAASE,CAAU,CAAA,QAEd5V,EAAK,CACJ,QAAA,MAAM,uBAAwBA,CAAG,EACzCpb,EAAS,sBAAsB,CAAA,QAC/B,CACA/7B,EAAW,EAAK,CAAA,EAEpB,GAEU,CAAA,EACT,CAACoa,EAAQ+Y,CAAO,CAAC,EAGd,MAAA+5B,EAAgBpjC,EAAM,OAAeiwB,GAAA,CACnC,MAAAjG,EAAchwC,EAAW,YAAY,EAEzC,OAAAi2C,EAAK,QAAQ,QAAQ,cAAc,SAASjG,CAAW,GACvDiG,EAAK,QAAQ,QAAQ,YAAY,EAAE,SAASjG,CAAW,GACvDiG,EAAK,YAAY,YAAA,EAAc,SAASjG,CAAW,CAAA,CAEtD,EAED,cACG/4B,GAAO,CAAA,KAAMX,EAAQ,QAAAC,EAAkB,UAAU,gBAChD,SAAA,CAAA3b,EAAA,IAAC,MAAI,CAAA,UAAU,6CAA6C,cAAY,OAAO,EAE/EA,EAAAA,IAAC,OAAI,UAAU,qDACb,gBAACqc,GAAO,MAAP,CAAa,UAAU,oHACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CAAa,UAAU,yDAAyD,SAEjF,cAAA,EAGA7X,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,uEACb,eAACu1C,GAAS,CAAA,UAAU,gBAAgB,CACtC,CAAA,EACAv1C,EAAA,IAAC,QAAA,CACC,KAAK,OACL,YAAY,4CACZ,MAAOoF,EACP,SAAWoC,GAAMnC,EAAcmC,EAAE,OAAO,KAAK,EAC7C,UAAU,qMAAA,CAAA,CACZ,EACF,EAGAxH,EAAAA,IAAC,OAAI,UAAU,+DACZ,WACEwE,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,yEAA0E,CAAA,EACxFA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAAgB,kBAAA,CAAA,CAAA,EACpD,EACE4C,EACD5C,MAAA,MAAA,CAAI,UAAU,gCAAiC,SAAA4C,CAAA,CAAM,EACpD4rD,EAAc,SAAW,EAC1BhqD,EAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAxE,EAAAA,IAAC,KAAE,UAAU,wBACV,WAAM,SAAW,EAAI,iBAAmB,4BAC3C,CAAA,EACCorB,EAAM,OAAS,SACb,IAAE,CAAA,UAAU,6BAA6B,SAAmC,qCAAA,CAAA,CAAA,CAAA,CAEjF,EAEAojC,EAAc,IAAKnT,GACjB72C,EAAA,KAAC,SAAA,CAEC,QAAS,IAAM+uC,EAAS8H,CAAI,EAC5B,UAAU,yKAEV,SAAA,CAAAr7C,EAAAA,IAAC,OAAI,UAAU,yCACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,QAAQ,QAAU,cAC5B,UAAU,6DACV,QAAU7zC,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,oBAAA,CACjB,CACF,EACAxH,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,QAAQ,QAAU,cAC5B,UAAU,6DACV,QAAU7zC,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,oBAAA,CACjB,CAAA,CACF,EACF,EACAhD,EAAAA,KAAC,OAAK,CAAA,UAAU,oDACb,SAAA,CAAA62C,EAAK,QAAQ,QAAU,cAAc,IAAEA,EAAK,QAAQ,QAAU,aAAA,CACjE,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2CACZ,SAAA,CAAA62C,EAAK,QAAQ,QAAU,cAAc,WAAA,EACxC,QACC,MAAI,CAAA,UAAU,sDACZ,SAAAA,EAAK,SAAS,iBACjB,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAC72C,EAAAA,KAAA,MAAA,CAAI,UAAU,2CACZ,SAAA,CAAA62C,EAAK,QAAQ,QAAU,cAAc,WAAA,EACxC,QACC,MAAI,CAAA,UAAU,sDACZ,SAAAA,EAAK,SAAS,iBACjB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECr7C,EAAA,IAAA,MAAA,CAAI,UAAU,yDACZ,WAAK,WACR,CAAA,CAAA,CAAA,EArDKq7C,EAAK,WAAA,CAuDb,CAEL,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ,CC5LA,MAAMjI,GAAgB,CACpB,CACE,QAAS,MACT,OAAQ,MACR,KAAM,WACN,SAAU,GACV,KAAM,UACR,EACA,CACE,QAAStqB,GAAkB,KAC3B,OAAQ,OACR,KAAM,mBACN,SAAU,GACV,KAAM,UACR,EACA,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,WACN,SAAU,EACV,KAAM,WACR,EACA,CACE,QAASA,GAAkB,KAC3B,OAAQ,OACR,KAAM,YACN,SAAU,EACV,KAAM,WAAA,CAEV,EAEM0zB,GAAgB1vC,GAAU,CAExB,MAAAknC,EAAcZ,GAAc,KAAUhwB,GAAAA,EAAE,SAAS,YAAA,IAAkBtW,GAAO,SAAS,YAAA,CAAa,EACtG,OAAIknC,EACKA,EAAY,KAIjBlnC,GAAO,MAAQA,GAAO,SACjBA,EAAM,MAAQ4M,GAAW5M,EAAM,QAAQ,EAIzC,oBACT,EAGM0rC,GAAe,CAAC,CAAE,MAAA1rC,KAAY,CAC5B,KAAA,CAAE,QAAAvC,CAAQ,EAAIE,GAAW,EACzB,CAAC6jB,EAASmlB,CAAU,EAAI7zC,EAAAA,SAAS,GAAG,EACpC,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAI,EAyC/C,GAvCAE,EAAAA,UAAU,IAAM,EACM,SAAY,CAC9B,GAAI,GAACyK,GAAW,CAACuC,GAAO,SAExB,CAAAi4B,EAAa,EAAI,EACb,GAAA,CACF,MAAMn9B,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDiP,EAAgB,IAAI3iB,EACxBoB,EAAM,QACN,CACE,qDACA,0CACF,EACAlF,CACF,EAEM,CAAC8rC,EAAYznC,CAAQ,EAAI,MAAM,QAAQ,IAAI,CAC/CoiB,EAAc,UAAU9jB,CAAO,EAC/B8jB,EAAc,SAAS,CAAA,CACxB,EAEK2mB,EAAmB3rB,GAAmBqqB,EAAYznC,CAAQ,EAChE,QAAQ,IAAI,sBAAsBa,EAAM,MAAM,IAAK,CACjD,IAAK4mC,EAAW,SAAS,EACzB,UAAWsB,EACX,SAAA/oC,CAAA,CACD,EAEDwnC,EAAWuB,CAAgB,QACpBpyC,EAAO,CACd,QAAQ,MAAM,iBAAiBkK,EAAM,MAAM,YAAalK,CAAK,CAAA,QAC7D,CACAmiC,EAAa,EAAK,CAAA,EAEtB,GAEY,CAAA,EACX,CAACx6B,EAASuC,CAAK,CAAC,EAEfg4B,EACF,OACG9kC,EAAAA,IAAA,MAAA,CAAI,UAAU,gDAAgD,SAE/D,qBAAA,EAIJ,MAAMg1C,EAAmB,OAAO1mB,CAAO,EAAE,eAAe,OAAW,CACjE,sBAAuB,EACvB,sBAAuBxhB,EAAM,SAAW,OAAS,EAAI,CAAA,CACtD,EAGC,OAAAtI,EAAA,KAAC,MAAI,CAAA,UAAU,gDAAgD,SAAA,CAAA,YACnDwwC,EAAiB,IAAEloC,EAAM,MAAA,EACrC,CAEJ,EAEA,SAAwB2hD,IAAe,CAC/B,KAAA,CAAE,QAAAlkD,CAAQ,EAAIE,GAAW,EACzBgqB,EAAUjB,GAAW,EACrB,CAAC6nB,EAAMqT,CAAO,EAAI9uD,EAAAA,SAAS,IAAI,EAC/B,CAACwxB,EAAcu9B,CAAe,EAAI/uD,EAAAA,SAAS,EAAE,EAC7C,CAACyxB,EAAcu9B,CAAe,EAAIhvD,EAAAA,SAAS,EAAE,EAC7C,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACivD,EAAeC,CAAgB,EAAIlvD,EAAAA,SAAS,EAAK,EAClD,CAACmvD,EAAaC,CAAc,EAAIpvD,EAAAA,SAAS,IAAI,EAC7CqvD,EAAsBrrD,GAAM,OAAO,IAAI,EAG7CA,GAAM,UAAU,IAAM,CACpB,MAAMsrD,EAAkB,SAAY,CAC9B,GAAA,GAAC7T,GAAQ,CAAC0T,GAEV,GAAA,CACI,MAAA1jC,EAAW,MAAMoJ,EAAQ,YAAY4mB,EAAK,OAAO,QAASA,EAAK,OAAO,OAAO,EACnF,GAAI,CAAChwB,GAAY,CAACA,EAAS,UAAY,CAACA,EAAS,SAAU,OAE3D,GAAI0jC,IAAgB,UAAY39B,GAAgBA,IAAiB,IAAK,CAEpE,MAAM9E,EADUpgB,GAAkBklB,EAAciqB,EAAK,OAAO,QAAQ,EACzChwB,EAAS,SAAYA,EAAS,SACnD8jC,EAAmB9lC,GAAmBiD,EAAS+uB,EAAK,OAAO,QAAQ,EACzEuT,EAAgBO,CAAgB,CACvB,SAAAJ,IAAgB,UAAY19B,GAAgBA,IAAiB,IAAK,CAE3E,MAAMhF,EADUngB,GAAkBmlB,EAAcgqB,EAAK,OAAO,QAAQ,EACzChwB,EAAS,SAAYA,EAAS,SACnD+jC,EAAmB/lC,GAAmBgD,EAASgvB,EAAK,OAAO,QAAQ,EACzEsT,EAAgBS,CAAgB,CAAA,QAE3BxsD,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,CAAA,CAErD,EAGA,OAAIqsD,EAAoB,SACtB,aAAaA,EAAoB,OAAO,EAItBA,EAAA,QAAU,WAAWC,EAAiB,GAAG,EAGtD,IAAM,CACPD,EAAoB,SACtB,aAAaA,EAAoB,OAAO,CAE5C,CAAA,EACC,CAAC5T,EAAMjqB,EAAcC,EAAc09B,EAAat6B,CAAO,CAAC,EAErD,MAAA46B,EAAsB7nD,GAAM,CAChCwnD,EAAe,QAAQ,EACPL,EAAAnnD,EAAE,OAAO,KAAK,GAC1B,CAACA,EAAE,OAAO,OAASA,EAAE,OAAO,QAAU,MACxConD,EAAgB,EAAE,CAEtB,EAEMU,EAAsB9nD,GAAM,CAChCwnD,EAAe,QAAQ,EACPJ,EAAApnD,EAAE,OAAO,KAAK,GAC1B,CAACA,EAAE,OAAO,OAASA,EAAE,OAAO,QAAU,MACxCmnD,EAAgB,EAAE,CAEtB,EAEM9I,EAAqB,SAAY,CACrC,GAAI,CAACt7C,EAAS,CACZnH,EAAM,MAAM,4BAA4B,EACxC,MAAA,CAGF,GAAI,CAACi4C,GAAQ,CAACjqB,GAAgB,CAACC,EAAc,CAC3CjuB,EAAM,MAAM,2BAA2B,EACvC,MAAA,CAGF9B,EAAW,EAAI,EACX,GAAA,CAEF,MAAM8jD,EAAgBl5C,GAAkBklB,EAAciqB,EAAK,OAAO,QAAQ,EACpEgK,EAAgBn5C,GAAkBmlB,EAAcgqB,EAAK,OAAO,QAAQ,EAIpEl8B,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAElCoN,EAAiB,IAAI9gB,EAAgB2vC,EAAK,OAAO,QAAS,CAC9D,6DACA,oDACCl8B,CAAM,EAEHsN,EAAiB,IAAI/gB,EAAgB2vC,EAAK,OAAO,QAAS,CAC9D,6DACA,oDACCl8B,CAAM,EAGH4N,EAAa,MAAMP,EAAe,UAAUjiB,EAASkqB,EAAQ,OAAO,OAAO,EAC3EzH,EAAa,MAAMP,EAAe,UAAUliB,EAASkqB,EAAQ,OAAO,OAAO,EAGjF,GAAI1H,EAAaq4B,EACX,GAAA,CACIhiD,EAAA,QAAQ,aAAei4C,EAAK,OAAO,OAAS,MAAO,CAAE,GAAI,WAAY,EAE3E,MADmB,MAAM7uB,EAAe,QAAQiI,EAAQ,OAAO,QAAS5H,EAAiB,GACxE,KAAK,EAChBzpB,EAAA,QAAQi4C,EAAK,OAAO,OAAS,yBAA0B,CAAE,GAAI,WAAY,OACjE,CACRj4C,EAAA,MAAM,qBAAuBi4C,EAAK,OAAO,OAAQ,CAAE,GAAI,WAAY,EACzE/5C,EAAW,EAAK,EAChB,MAAA,CAKJ,GAAI0rB,EAAaq4B,EACX,GAAA,CACIjiD,EAAA,QAAQ,aAAei4C,EAAK,OAAO,OAAS,MAAO,CAAE,GAAI,WAAY,EAE3E,MADmB,MAAM5uB,EAAe,QAAQgI,EAAQ,OAAO,QAAS5H,EAAiB,GACxE,KAAK,EAChBzpB,EAAA,QAAQi4C,EAAK,OAAO,OAAS,yBAA0B,CAAE,GAAI,WAAY,OACjE,CACRj4C,EAAA,MAAM,qBAAuBi4C,EAAK,OAAO,OAAQ,CAAE,GAAI,WAAY,EACzE/5C,EAAW,EAAK,EAChB,MAAA,CAKJ,MAAMiuD,EAAkB,MAAM/iC,EAAe,UAAUjiB,EAASkqB,EAAQ,OAAO,OAAO,EAChF+6B,EAAkB,MAAM/iC,EAAe,UAAUliB,EAASkqB,EAAQ,OAAO,OAAO,EAElF,GAAA86B,EAAkBnK,GAAiBoK,EAAkBnK,EAAe,CACtEjiD,EAAM,MAAM,gDAAgD,EAC5D9B,EAAW,EAAK,EAChB,MAAA,CAIF,MAAM,IAAI,QAAQmsB,GAAW,WAAWA,EAAS,GAAI,CAAC,EAGhD,MAAAC,EAAa03B,EAAgB,IAAM,KACnCz3B,EAAa03B,EAAgB,IAAM,KAEzCjiD,EAAM,QAAQ,sBAAuB,CAAE,GAAI,gBAAiB,EAGtD,MAAAsc,EAAU,MAAM+U,EAAQ,aAC5B4mB,EAAK,OAAO,QACZA,EAAK,OAAO,QACZ+J,EACAC,EACA33B,EACAC,EACApjB,CACF,EAEQ,QAAA,IAAI,mBAAoBmV,CAAO,EACvCtc,EAAM,QAAQ,gCAAiC,CAAE,GAAI,gBAAiB,EAGtEurD,EAAgB,EAAE,EAClBC,EAAgB,EAAE,EAClBF,EAAQ,IAAI,QACL9rD,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EACrCQ,EAAA,MACJR,EAAM,QAAQ,SAAS,cAAc,EACjC,uCACAA,EAAM,QAAQ,SAAS,OAAO,EAC9B,uCACA,4BAA4BA,EAAM,OAAO,GAC7C,CAAE,GAAI,eAAgB,CACxB,CAAA,QACA,CACAtB,EAAW,EAAK,CAAA,CAEpB,EAsBE,OAAAkD,EAAA,KAAC,MAAI,CAAA,UAAU,uHACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,wDAAwD,SAAa,gBAAA,EAGnFwE,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,kEAAkE,SAEnF,cAAA,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAMsqD,EAAiB,EAAI,EACpC,UAAU,oNAET,SAAA,CACCzT,EAAA72C,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,OAAO,OACjB,UAAU,4DAAA,CACZ,EACAr7C,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,OAAO,OACjB,UAAU,4DAAA,CAAA,CACZ,EACF,EACA72C,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACb,SAAA,CAAA62C,EAAK,OAAO,OAAO,IAAEA,EAAK,OAAO,MAAA,CACpC,CAAA,CAAA,EACF,EAEAr7C,EAAA,IAAC,OAAK,CAAA,UAAU,gBAAgB,SAAa,gBAAA,EAE/CA,EAAA,IAAC,MAAA,CACC,UAAU,qEACV,KAAK,OACL,QAAQ,YACR,OAAO,eAEP,SAAAA,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CAAA,CACF,EACF,EAECq7C,GAGG72C,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0FACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,OAAO,OACjB,UAAU,sBAAA,CACZ,QACC,OAAK,CAAA,UAAU,4CACb,SAAAA,EAAK,OAAO,MACf,CAAA,CAAA,EACF,EACCr7C,EAAAA,IAAAw4C,GAAA,CAAa,MAAO6C,EAAK,MAAQ,CAAA,CAAA,EACpC,EACAr7C,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAOoxB,EACP,SAAUi+B,EACV,QAAS,IAAML,EAAe,QAAQ,EACtC,YAAY,MACZ,UAAU,kHAAA,CAAA,CACZ,EACF,EAGChvD,EAAA,IAAA,MAAA,CAAI,UAAU,sBACb,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAU,qFACb,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,KAAK,OAAO,QAAQ,YAAY,OAAO,eAC5E,SAAAA,EAAA,IAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,4BAA6B,CAAA,CACpG,CAAA,CACF,CAAA,EACF,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,0FACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,OAAO,OACjB,UAAU,sBAAA,CACZ,QACC,OAAK,CAAA,UAAU,4CACb,SAAAA,EAAK,OAAO,MACf,CAAA,CAAA,EACF,EACCr7C,EAAAA,IAAAw4C,GAAA,CAAa,MAAO6C,EAAK,MAAQ,CAAA,CAAA,EACpC,EACAr7C,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAOqxB,EACP,SAAUi+B,EACV,QAAS,IAAMN,EAAe,QAAQ,EACtC,YAAY,MACZ,UAAU,kHAAA,CAAA,CACZ,CACF,CAAA,CAAA,EACF,EAGAhvD,EAAA,IAAC,SAAA,CACC,QAAS6lD,EACT,SAAUxkD,GAAW,CAAC+vB,GAAgB,CAACC,EACvC,UAAU,wKAET,WAEG7sB,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAC/S,EAAAA,IAAA,MAAA,CAAI,UAAU,8EAA+E,CAAA,EAAE,qBAAA,CAAA,CAElG,EAEA,eAAA,CAAA,CAEJ,EACF,EAIFA,EAAA,IAACkuD,GAAA,CACC,OAAQW,EACR,QAAS,IAAMC,EAAiB,EAAK,EACrC,SAAWW,GAAiB,CAC1Bf,EAAQe,CAAY,EACpBX,EAAiB,EAAK,EAEtBH,EAAgB,EAAE,EAClBC,EAAgB,EAAE,CAAA,CACpB,CAAA,CACF,EACF,CAEJ,CC1cA,SAAwBc,IAAkB,CAClC,KAAA,CAAE,QAAAnlD,CAAQ,EAAIE,GAAW,EACzBgqB,EAAUjB,GAAW,EACrB,CAAC6nB,EAAMqT,CAAO,EAAI9uD,EAAAA,SAAS,IAAI,EAC/B,CAAC+vD,EAAWC,CAAY,EAAIhwD,EAAAA,SAAS,GAAG,EACxC,CAACiwD,EAAkBC,CAAmB,EAAIlwD,EAAAA,SAAS,EAAE,EACrD,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACivD,EAAeC,CAAgB,EAAIlvD,EAAAA,SAAS,EAAK,EAClD,CAACwxB,EAAcu9B,CAAe,EAAI/uD,EAAAA,SAAS,GAAG,EAC9C,CAACyxB,EAAcu9B,CAAe,EAAIhvD,EAAAA,SAAS,GAAG,EAGpDE,EAAAA,UAAU,IAAM,CACd,IAAIiwD,EAAY,GAwDF,OAtDQ,SAAY,CAChC,GAAI,GAAC1U,GAAQ,CAAC9wC,GAAW,CAAC8wC,EAAK,aAE3B,GAAA,CACF,MAAMzzC,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAGrD4wC,EAAa,IAAItkD,EACrB2vC,EAAK,YACL,CACE,qDACA,gDACA,6DACF,EACAzzC,CACF,EAGMyjB,EAAW,MAAMoJ,EAAQ,YAAY4mB,EAAK,OAAO,QAASA,EAAK,OAAO,OAAO,EAG7E,CAAC/sB,EAAS2hC,CAAW,EAAI,MAAM,QAAQ,IAAI,CAC/CD,EAAW,UAAUzlD,CAAO,EAC5BylD,EAAW,YAAY,CAAA,CACxB,EAED,GAAI,CAACD,EAAW,OAGhB,MAAMG,EAAa5hC,EAAU,OAAO,GAAK,EAAK2hC,EACxCE,EAAkB,OAAOD,CAAS,EAAI,IAGtC9+B,EAAgB/F,EAAS,SAAWiD,EAAW2hC,EAC/C5+B,EAAgBhG,EAAS,SAAWiD,EAAW2hC,EAExCL,EAAAjsC,GAAmB2K,CAAO,CAAC,EACxCqgC,EAAgBtlC,GAAmB+H,EAAciqB,EAAK,OAAO,QAAQ,CAAC,EACtEuT,EAAgBvlC,GAAmBgI,EAAcgqB,EAAK,OAAO,QAAQ,CAAC,EAGtEqT,EAAiBpnD,IAAA,CACf,GAAGA,EACH,YAAaqc,GAAmBssC,CAAW,EAC3C,UAAWE,CAAA,EACX,QAEKvtD,EAAO,CACd,GAAI,CAACmtD,EAAW,OACR,QAAA,MAAM,4BAA6BntD,CAAK,EAChDQ,EAAM,MAAM,kCAAkC,CAAA,CAElD,GAEc,EACP,IAAM,CACC2sD,EAAA,EACd,GACC,CAAC1U,GAAM,YAAa9wC,EAASkqB,CAAO,CAAC,EAGxC30B,EAAAA,UAAU,IAAM,CACV,GAAA,GAACu7C,GAAQ,CAACsU,GAAa,CAACE,GAAoB,CAACz+B,GAAgB,CAACC,GAI9D,GAAA,CACI,MAAA++B,EAAa,WAAWP,CAAgB,EAC9C,GAAI,MAAMO,CAAU,GAAKA,GAAc,GAAKA,EAAa,IAAK,OAGxD,MAAAC,EAAmB,WAAWj/B,CAAY,EAC1Ck/B,EAAmB,WAAWj/B,CAAY,EAE1Ck/B,EAAmBF,EAAmBD,EAAc,IACpDI,EAAmBF,EAAmBF,EAAc,IAE1DzB,EAAgB4B,EAAgB,QAAQlV,EAAK,OAAO,QAAQ,CAAC,EAC7DuT,EAAgB4B,EAAgB,QAAQnV,EAAK,OAAO,QAAQ,CAAC,QAEtDz4C,EAAO,CACN,QAAA,MAAM,mCAAoCA,CAAK,CAAA,CACzD,EACC,CAACitD,EAAkBF,EAAWtU,GAAM,QAAQ,QAAQ,CAAC,EAExD,MAAMoV,EAAwB,SAAY,CACxC,GAAI,CAAClmD,EAAS,CACZnH,EAAM,MAAM,4BAA4B,EACxC,MAAA,CAGE,GAAA,CAACi4C,GAAQ,CAACwU,EAAkB,CAC9BzsD,EAAM,MAAM,iDAAiD,EAC7D,MAAA,CAGF9B,EAAW,EAAI,EACX,GAAA,CAEI,MAAA6d,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAIlCsxC,EADgBlxC,GAAkBmwC,CAAS,EACP,OAAO,KAAK,MAAM,WAAWE,CAAgB,CAAC,CAAC,EAAK,KAGxFniC,EAAcxhB,GAAkBklB,EAAciqB,EAAK,OAAO,QAAQ,EAAI,IAAO,KAC7E1tB,EAAczhB,GAAkBmlB,EAAcgqB,EAAK,OAAO,QAAQ,EAAI,IAAO,KAEnF,QAAQ,IAAI,2BAA4B,CACtC,iBAAkBqV,EAAiB,SAAS,EAC5C,WAAYhjC,EAAW,SAAS,EAChC,WAAYC,EAAW,SAAS,CAAA,CACjC,EAGK,MAAAqiC,EAAa,IAAItkD,EACrB2vC,EAAK,YACL,CAAC,oDAAqD,6DAA6D,EACnHl8B,CACF,EAEkB,MAAM6wC,EAAW,UAAUzlD,EAASkqB,EAAQ,OAAO,OAAO,EAC5Di8B,IACdttD,EAAM,QAAQ,yBAA0B,CAAE,GAAI,aAAc,EAE5D,MADkB,MAAM4sD,EAAW,QAAQv7B,EAAQ,OAAO,QAAS5H,EAAiB,GACpE,KAAK,EACrBzpB,EAAM,QAAQ,qBAAsB,CAAE,GAAI,aAAc,GAI1DA,EAAM,QAAQ,wBAAyB,CAAE,GAAI,mBAAoB,EAC3D,MAAAsc,EAAU,MAAM+U,EAAQ,gBAC5B4mB,EAAK,OAAO,QACZA,EAAK,OAAO,QACZqV,EACAhjC,EACAC,EACApjB,CACF,EAEQ,QAAA,IAAI,qBAAsBmV,CAAO,EACzCtc,EAAM,QAAQ,kCAAmC,CAAE,GAAI,mBAAoB,EAG3E0sD,EAAoB,EAAE,EAChB,MAAAa,EAAc,MAAMl8B,EAAQ,YAAY4mB,EAAK,OAAO,QAASA,EAAK,OAAO,OAAO,EACtFqT,MAAiB,CAAE,GAAGpnD,EAAM,GAAGqpD,GAAc,QACtC/tD,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EACxCQ,EAAA,MACJR,EAAM,QAAQ,SAAS,cAAc,EACjC,uCACAA,EAAM,QAAQ,SAAS,OAAO,EAC9B,uCACA,+BAA+BA,EAAM,OAAO,GAChD,CAAE,GAAI,kBAAmB,CAC3B,CAAA,QACA,CACAtB,EAAW,EAAK,CAAA,CAEpB,EAGE,OAAAkD,EAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,kEAAkE,SAEnF,cAAA,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAMsqD,EAAiB,EAAI,EACpC,UAAU,oNAET,SAAA,CACCzT,EAAA72C,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,OAAO,OACjB,UAAU,4DAAA,CACZ,EACAr7C,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,OAAO,OACjB,UAAU,4DAAA,CAAA,CACZ,EACF,EACA72C,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACb,SAAA,CAAA62C,EAAK,OAAO,OAAO,IAAEA,EAAK,OAAO,MAAA,CACpC,CAAA,CAAA,EACF,EAEAr7C,EAAA,IAAC,OAAK,CAAA,UAAU,gBAAgB,SAAa,gBAAA,EAE/CA,EAAA,IAAC,MAAA,CACC,UAAU,qEACV,KAAK,OACL,QAAQ,YACR,OAAO,eAEP,SAAAA,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CAAA,CACF,EACF,EAECq7C,GAGG72C,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,0FACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAgB,mBAAA,EACxDwE,EAAAA,KAAC,OAAK,CAAA,UAAU,oDACb,SAAA,CAAW,WAAAmrD,CAAS,EAAE,QAAQ,CAAC,EAAE,YAAA,CACpC,CAAA,CAAA,EACF,EACAnrD,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAe,kBAAA,EACtDA,EAAA,IAAA,OAAA,CAAK,UAAU,oDACb,SAAKq7C,EAAA,UAAY,GAAGA,EAAK,UAAU,QAAQ,CAAC,CAAC,IAAM,IACtD,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,mBAAA,EACCA,EAAAA,IAAA,MAAA,CAAI,UAAU,aACZ,SAAC,CAAA,GAAI,GAAI,GAAI,GAAG,EAAE,IAAKowD,GACtB5rD,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMsrD,EAAoBM,EAAW,UAAU,EACxD,UAAW;AAAA,sBACPP,IAAqBO,EAAW,SAAS,EACvC,0BACA,qFACJ;AAAA,oBAGD,SAAA,CAAAA,EAAW,GAAA,CAAA,EATPA,CAWR,CAAA,EACH,EACApwD,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO6vD,EACP,SAAWroD,GAAM,CACT,MAAAzH,EAAQyH,EAAE,OAAO,OACnBzH,IAAU,IAAO,WAAWA,CAAK,GAAK,GAAK,WAAWA,CAAK,GAAK,MAClE+vD,EAAoB/vD,CAAK,CAE7B,EACA,YAAY,2BACZ,UAAU,yJAAA,CAAA,CACZ,EACF,EAGAyE,EAAAA,KAAC,MAAI,CAAA,UAAU,0FACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,yDAAyD,SAAgB,mBAAA,EACvFwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,OAAO,OACjB,UAAU,sBAAA,CACZ,QACC,OAAK,CAAA,UAAU,2CACb,SAAAA,EAAK,OAAO,MACf,CAAA,CAAA,EACF,EACAr7C,EAAAA,IAAC,QAAK,UAAU,oDACb,oBAAWoxB,CAAY,EAAE,QAAQ,CAAC,CACrC,CAAA,CAAA,EACF,EACA5sB,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,OAAO,OACjB,UAAU,sBAAA,CACZ,QACC,OAAK,CAAA,UAAU,2CACb,SAAAA,EAAK,OAAO,MACf,CAAA,CAAA,EACF,EACAr7C,EAAAA,IAAC,QAAK,UAAU,oDACb,oBAAWqxB,CAAY,EAAE,QAAQ,CAAC,CACrC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGArxB,EAAA,IAAC,SAAA,CACC,QAASywD,EACT,SAAUpvD,GAAW,CAACwuD,GAAoB,WAAWA,CAAgB,GAAK,EAC1E,UAAW;AAAA;AAAA,gBAEPxuD,GAAW,CAACwuD,GAAoB,WAAWA,CAAgB,GAAK,EAC9D,kDACA,mDACJ;AAAA,cAGD,WAAU,wBAA0B,kBAAA,CAAA,CACvC,EACF,EAIF7vD,EAAA,IAACkuD,GAAA,CACC,OAAQW,EACR,QAAS,IAAMC,EAAiB,EAAK,EACrC,SAAWW,GAAiB,CAC1Bf,EAAQe,CAAY,EACpBX,EAAiB,EAAK,EACtBgB,EAAoB,EAAE,CAAA,CACxB,CAAA,CACF,EACF,CAEJ,CCxVA,SAAwBc,IAAkB,CACxC,KAAM,CAACvmB,EAAWC,CAAY,EAAI1qC,EAAAA,SAAS,KAAK,EAG9C,OAAA4E,EAAA,KAAC,MAAI,CAAA,UAAU,uHACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,wDAAwD,SAAgB,mBAAA,EAGtFwE,EAAAA,KAAC,MAAI,CAAA,UAAU,kEACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsqC,EAAa,KAAK,EACjC,UAAW;AAAA,cACPD,IAAc,MACZ,wDACA,+EACJ;AAAA,YAEH,SAAA,eAAA,CAED,EACArqC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsqC,EAAa,QAAQ,EACpC,UAAW;AAAA,cACPD,IAAc,SACZ,wDACA,+EACJ;AAAA,YAEH,SAAA,kBAAA,CAAA,CAED,EACF,EAGArqC,EAAA,IAAC,MAAI,CAAA,UAAU,OACZ,SAAAqqC,IAAc,MACbrqC,EAAAA,IAACyuD,GAAa,CAAA,CAAA,EAEbzuD,EAAA,IAAA0vD,GAAA,CAAgB,CAAA,CAErB,CAAA,CAAA,EACF,CAEJ,CCnCA,MAAMmB,GAAqB,CACzB,iBAAkB,CAChB,GAAI,KACJ,KAAM,mBACN,cAAe,yCACjB,EACA,iBAAkB,CAChB,GAAI,IACJ,KAAM,mBACN,cAAe,iCACjB,EACA,cAAe,CACb,GAAI,MACJ,KAAM,gBACN,cAAe,gCAAA,CAEnB,EAGMzd,GAAgB,CAEpB,MAAO,CACL,CACE,OAAQ,MACR,KAAM,QACN,SAAU,GACV,KAAM,aACN,SAAU,EACZ,EACA,CACE,QAAS,6CACT,OAAQ,SACR,KAAM,gBACN,SAAU,GACV,KAAM,YACR,EACA,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,gBACN,SAAU,GACV,KAAM,WACR,EACA,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,WACN,SAAU,EACV,KAAM,WACR,EACA,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,aACN,SAAU,EACV,KAAM,WAAA,CAEV,EAEA,KAAM,CACJ,CACE,QAAStqB,GAAkB,IAAI,EAAE,KACjC,OAAQ,MACR,KAAM,WACN,SAAU,GACV,KAAM,UACR,EACA,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,WACN,SAAU,EACV,KAAM,WACR,EACA,CACE,QAASA,GAAkB,IAAI,EAAE,KACjC,OAAQ,OACR,KAAM,YACN,SAAU,EACV,KAAM,WAAA,CAEV,EAEA,IAAK,CACH,CACE,QAASA,GAAkB,GAAG,EAAE,KAChC,OAAQ,MACR,KAAM,WACN,SAAU,GACV,KAAM,UACR,EACA,CACE,QAASA,GAAkB,GAAG,EAAE,KAChC,OAAQ,OACR,KAAM,OACN,SAAU,EACV,KAAM,WAAA,CACR,CAEJ,EAGMgoC,GAAY,yBACZC,GAAe,GAAK,GAAK,IAkBzBC,GAA2B,MAAOnlD,EAAcolD,EAAkB7lD,IAAY,CAC9E,GAAA,CACF,GAAI,CAACS,EACH,eAAQ,KAAK,wDAAwD,EAC9DolD,EAIH,MAAAjd,EAAcZ,GAAchoC,CAAO,GAAG,QAC1CgY,EAAE,SAAS,YAAY,IAAMvX,GAAc,YAAY,CACzD,EAEA,GAAImoC,EACM,eAAA,IAAI,sBAAuBA,CAAW,EACvC,CACL,GAAGid,EACH,GAAGjd,EACH,QAASnoC,EACT,KAAMmoC,EAAY,KAClB,SAAU,GACV,SAAUA,EAAY,UAAYid,GAAkB,UAAY,EAClE,EAIF,MAAMC,EAAepoC,GAAkB1d,CAAO,GAAG,MAAM,YAAY,EAC/D,GAAAS,GAAc,YAAY,IAAMqlD,EAC3B,MAAA,CACL,GAAGD,EACH,OAAQ7lD,IAAY,MAAQ,MAAQ,MACpC,KAAMA,IAAY,MAAQ,QAAU,WACpC,SAAU,GACV,KAAMA,IAAY,MAAQ,aAAe,WACzC,SAAU,GACV,QAASS,CACX,EAIF,MAAMwxC,EAAgBjyC,IAAYylD,GAAmB,iBAAiB,GAClEA,GAAmB,iBAAiB,cACpCzlD,IAAYylD,GAAmB,iBAAiB,GAChDA,GAAmB,iBAAiB,cACpCA,GAAmB,cAAc,cAGjC,GAAA,CACI,MAAA74B,EAAkB,MAAMtgB,GAA4B7L,CAAY,EACtE,GAAImsB,EAAiB,CACb,MAAAm5B,EAAOn5B,EAAgB,MAAQwkB,GAAa,CAChD,GAAGxkB,EACH,QAASnsB,GACRT,CAAO,EAEH,MAAA,CACL,GAAG6lD,EACH,KAAMj5B,EAAgB,MAAQi5B,GAAkB,KAChD,OAAQj5B,EAAgB,QAAUi5B,GAAkB,OACpD,SAAUj5B,EAAgB,UAAYi5B,GAAkB,UAAY,GACpE,KAAAE,EACA,SAAUn5B,EAAgB,SAC1B,QAASnsB,EACT,SAAU,EACZ,CAAA,QAEKjJ,EAAO,CACN,QAAA,IAAI,yBAA0BA,CAAK,CAAA,CAIzC,GAAA,CACF,MAAMkR,EAAW,MAAM,MAAM,GAAGupC,CAAa,kBAAkBxxC,CAAY,EAAE,EAC7E,GAAIiI,EAAS,GAAI,CACT,MAAAxL,EAAO,MAAMwL,EAAS,KAAK,EAC1B,MAAA,CACL,GAAGm9C,EACH,KAAM3oD,EAAK,MAAQ2oD,GAAkB,KACrC,OAAQ3oD,EAAK,QAAU2oD,GAAkB,OACzC,SAAU,SAAS3oD,EAAK,QAAQ,GAAK2oD,GAAkB,UAAY,GACnE,KAAM3oD,EAAK,MAAQk0C,GAAa,CAAE,QAAS3wC,GAAgBT,CAAO,EAClE,QAASS,EACT,SAAU,EACZ,CAAA,OAEY,CACd,QAAQ,IAAI,gEAAgE,CAAA,CAIvE,MAAA,CACL,GAAGolD,EACH,KAAMA,GAAkB,MAAQzU,GAAa,CAAE,QAAS3wC,GAAgBT,CAAO,EAC/E,QAASS,EACT,SAAU,EACZ,QACOjJ,EAAO,CACN,eAAA,MAAM,oCAAqCA,CAAK,EACjDquD,CAAA,CAEX,EAmBMh9B,GAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,KAAM,CACJ,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMoD,GAAe,CACnB,OAAQ,CACN,QAAS,EACT,EAAG,EACL,EACA,KAAM,CACJ,QAAS,EACT,EAAG,EACH,WAAY,CACV,KAAM,SACN,UAAW,IACX,QAAS,EAAA,CACX,CAEJ,EAEM+5B,GAAiB,CACrB,OAAQ,CACN,QAAS,EACT,EAAG,GACL,EACA,KAAM,CACJ,QAAS,EACT,EAAG,EACH,WAAY,CACV,KAAM,SACN,UAAW,IACX,QAAS,EAAA,CACX,CAEJ,EAGMC,GAAmB,CACvB,OAAQ,CAAE,QAAS,CAAE,EACrB,KAAM,CACJ,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMC,GAAuB,CAC3B,OAAQ,CAAE,QAAS,EAAG,EAAG,GAAI,EAC7B,KAAM,CACJ,QAAS,EACT,EAAG,EACH,WAAY,CACV,KAAM,SACN,UAAW,IACX,QAAS,EAAA,CACX,CAEJ,EAGMC,GAAW,CAAC,CAAE,KAAAlW,EAAM,SAAA9H,KAEtB/uC,EAAA,KAAC8J,EAAO,OAAP,CACC,SAAU+oB,GACV,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EACxB,QAAS,IAAMkc,EAAS8H,CAAI,EAC5B,UAAU,sHAEV,SAAA,CAAC72C,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,MAAO,GAAK,QAAS,CAAE,EAClC,QAAS,CAAE,MAAO,EAAG,QAAS,CAAE,EAChC,IAAK+sC,EAAK,OAAO,KACjB,IAAKA,EAAK,OAAO,OACjB,UAAU,4DAAA,CACZ,EACAr7C,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,MAAO,GAAK,QAAS,CAAE,EAClC,QAAS,CAAE,MAAO,EAAG,QAAS,CAAE,EAChC,WAAY,CAAE,MAAO,EAAI,EACzB,IAAK+sC,EAAK,OAAO,KACjB,IAAKA,EAAK,OAAO,OACjB,UAAU,4DAAA,CAAA,CACZ,EACF,EACA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,4CAET,SAAA,CAAA+sC,EAAK,OAAO,OAAO,IAAEA,EAAK,OAAO,MAAA,CAAA,CACpC,EACA72C,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EACzB,UAAU,2CAET,SAAA,CAAA+sC,EAAK,OAAO,KAAK,IAAEA,EAAK,OAAO,IAAA,CAAA,CAAA,CAClC,CACF,CAAA,CAAA,EACF,EACA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAA62C,EAAK,KACJ72C,EAAA,KAAC8J,EAAO,KAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,MAAO,EAAI,EACzB,UAAU,2CACX,SAAA,CAAA,SACQ,OAAO+sC,EAAK,GAAG,EAAE,eAAe,CAAA,CAAA,CACzC,EAEFr7C,EAAA,IAACsO,EAAO,IAAP,CACC,WAAY,CAAE,EAAG,CAAE,EACnB,UAAU,gGACV,KAAK,OACL,QAAQ,YACR,OAAO,eAEP,SAAAtO,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,cAAe,CAAA,CAAA,CAAA,CACtF,CACF,CAAA,CAAA,CAAA,CACF,EAKEwxD,GAAmB,IAErBhtD,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAUgjD,GACV,UAAU,6FAEV,SAAA,CAAC9sD,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,iEAAkE,CAAA,EACjFA,EAAAA,IAAC,MAAI,CAAA,UAAU,iEAAkE,CAAA,CAAA,EACnF,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,6DAA8D,CAAA,EAC7EA,EAAAA,IAAC,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,CAC/E,CAAA,CAAA,EACF,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,CAAA,CAC/E,EAKEyxD,GAAkB,MAAOpW,GAAS,CAClC,GAAA,CACF,MAAMzzC,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDhU,EAAU,MAAMxD,EAAS,aAAa,KAAUkxB,GAAA,OAAOA,EAAE,OAAO,CAAC,EAEnE,GAAA1tB,IAAYylD,GAAmB,cAAc,GAAI,CAEnD,MAAMtnC,EAAc,OAAO8xB,GAAS,SAAWA,EAAOA,EAAK,QAE3D,GAAI,CAAC7vC,GAAiB+d,CAAW,EACvB,eAAA,KAAK,wBAAyBA,CAAW,EAC1C,KAGH,MAAAmoC,EAAgB,IAAIhL,GAAiB,CACzC,oDACA,oDACA,8GAAA,CACD,EAEG,GAAA,CAEF,KAAM,CAACiL,EAAYC,EAAYC,CAAY,EAAI,MAAM,QAAQ,IAAI,CAC/DjqD,EAAS,KAAK,CACZ,GAAI2hB,EACJ,KAAMmoC,EAAc,mBAAmB,QAAQ,CAAA,CAChD,EACD9pD,EAAS,KAAK,CACZ,GAAI2hB,EACJ,KAAMmoC,EAAc,mBAAmB,QAAQ,CAAA,CAChD,EACD9pD,EAAS,KAAK,CACZ,GAAI2hB,EACJ,KAAMmoC,EAAc,mBAAmB,aAAa,CACrD,CAAA,CAAA,CACF,EAEK1oC,EAAgB29B,GAAkB,KAAOgL,EAAW,MAAM,EAAE,CAAC,EAC7D1oC,EAAgB09B,GAAkB,KAAOiL,EAAW,MAAM,EAAE,CAAC,EAC7D,CAACxoC,EAAUE,CAAQ,EAAIooC,EAAc,qBAAqB,cAAeG,CAAY,EAGrF,CAACvD,EAAgBC,CAAc,EAAI,MAAM,QAAQ,IAAI,CACzDyC,GAAyBhoC,EAAe,KAAM5d,CAAO,EACrD4lD,GAAyB/nC,EAAe,KAAM7d,CAAO,CAAA,CACtD,EAGK0mD,EAAiBhpC,GAAkB1d,CAAO,GAAG,MAAM,YAAY,EAC/D2mD,EAAiB/oC,EAAc,YAAA,IAAkB8oC,EACjDE,EAAiB/oC,EAAc,YAAA,IAAkB6oC,EAEjDG,EAAgBF,EAClB,CACE,GAAGzD,EACH,OAAQ,MACR,KAAM,QACN,KAAM,aACN,OAAQ,GACR,eAAgB,QAAA,EAElBA,EAEE4D,EAAgBF,EAClB,CACE,GAAGzD,EACH,OAAQ,MACR,KAAM,QACN,KAAM,aACN,OAAQ,GACR,eAAgB,QAAA,EAElBA,EAEG,MAAA,CACL,OAAQ,CACN,GAAG0D,EACH,QAASjpC,EACT,OAAQ+oC,CACV,EACA,OAAQ,CACN,GAAGG,EACH,QAASjpC,EACT,OAAQ+oC,CACV,EACA,YAAAzoC,EACA,QAAAne,EACA,SAAU,CACR,SAAUge,EAAS,SAAS,EAC5B,SAAUE,EAAS,SAAS,EAC5B,kBAAmBD,GAAmBD,EAAU6oC,GAAe,UAAY,EAAE,EAC7E,kBAAmB5oC,GAAmBC,EAAU4oC,GAAe,UAAY,EAAE,CAAA,CAEjF,QACOtvD,EAAO,CACN,eAAA,MAAM,4BAA6BA,CAAK,EACzC,IAAA,CACT,CAIF,KAAM,CAAC0rD,EAAgBC,CAAc,EAAI,MAAM,QAAQ,IAAI,CACzDyC,GAAyB3V,EAAK,OAAO,QAASA,EAAK,OAAQA,EAAK,OAAO,EACvE2V,GAAyB3V,EAAK,OAAO,QAASA,EAAK,OAAQA,EAAK,OAAO,CAAA,CACxE,EAGK8W,EAAerpC,GAAkBuyB,EAAK,OAAO,GAAG,KAChD+W,EAAe9D,GAAgB,SAAS,YAAY,IAAM6D,GAAc,YAAY,EACpFE,EAAe9D,GAAgB,SAAS,YAAY,IAAM4D,GAAc,YAAY,EAGpFjB,EAAepoC,GAAkBuyB,EAAK,OAAO,GAAG,KAChDhC,EAAeiV,GAAgB,SAAS,YAAY,IAAM4C,GAAc,YAAY,EACpF5X,EAAeiV,GAAgB,SAAS,YAAY,IAAM2C,GAAc,YAAY,EAEpFe,EAAgB5Y,EAClB,CACE,GAAGiV,EACH,OAAQ,MACR,KAAM,WACN,KAAM,WACN,OAAQ,GACR,eAAgB,QAElB8D,EACA,CACE,GAAG9D,EACH,KAAM,WAAA,EAER,CACE,GAAGA,EACH,KAAMA,GAAgB,MAAQ9R,GAAa8R,CAAc,CAC3D,EAEE4D,EAAgB5Y,EAClB,CACE,GAAGiV,EACH,OAAQ,MACR,KAAM,WACN,KAAM,WACN,OAAQ,GACR,eAAgB,QAElB8D,EACA,CACE,GAAG9D,EACH,KAAM,WAAA,EAER,CACE,GAAGA,EACH,KAAMA,GAAgB,MAAQ/R,GAAa+R,CAAc,CAC3D,EAEG,MAAA,CACL,OAAQ,CACN,GAAG0D,EACH,QAAS5W,EAAK,OAAO,QACrB,OAAQhC,CACV,EACA,OAAQ,CACN,GAAG6Y,EACH,QAAS7W,EAAK,OAAO,QACrB,OAAQ/B,CACV,EACA,YAAa+B,EAAK,QAClB,QAASA,EAAK,QACd,SAAU,CACR,GAAGA,EAAK,SACR,kBAAmBhyB,GAAmBgyB,EAAK,UAAU,UAAY,IAAK4W,GAAe,UAAY,EAAE,EACnG,kBAAmB5oC,GAAmBgyB,EAAK,UAAU,UAAY,IAAK6W,GAAe,UAAY,EAAE,CAAA,CAEvG,QACOzZ,EAAK,CACJ,eAAA,MAAM,8BAA+BA,CAAG,EACzC,IAAA,CAEX,EAEA,SAAwByV,GAAmB,CAAE,OAAAxyC,EAAQ,QAAAC,EAAS,SAAA43B,GAAY,CACxE,MAAM9e,EAAU2nB,GAAY,EACR3xC,GAAW,EAC/B,KAAM,CAAC2gB,EAAO+iC,CAAQ,EAAIvuD,EAAAA,SAAS,CAAA,CAAE,EAC/B,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,EAAE,EAC/B,CAACwF,EAAYC,CAAa,EAAIzF,EAAAA,SAAS,EAAE,EACzC,CAAC0yD,EAAeC,CAAgB,EAAI3yD,EAAAA,SAAS,CAAA,CAAE,EAC/C,CAACud,EAAgBC,CAAiB,EAAIxd,EAAAA,SAAS,IAAI,EACnD,CAAC4yD,EAAaC,CAAc,EAAI7yD,EAAAA,SAAS,CAAC,EAC1C,CAAC8yD,EAAYC,CAAa,EAAI/yD,EAAAA,SAAS,CAAC,EAG9CE,EAAAA,UAAU,IAAM,CACd,MAAM8yD,EAAyB,IAAM,CAC/B,GAAA,SAAS,kBAAoB,UAAW,CACpC,MAAAlpC,EAAampC,EAAkB11C,CAAc,EAC/CuM,IACFykC,EAASzkC,EAAW,KAAK,EACzBipC,EAAcjpC,EAAW,UAAU,EACpB+oC,EAAA/oC,EAAW,MAAM,MAAM,EACxC,CAEJ,EAES,gBAAA,iBAAiB,mBAAoBkpC,CAAsB,EAC7D,OAAA,iBAAiB,QAASA,CAAsB,EAEhD,IAAM,CACF,SAAA,oBAAoB,mBAAoBA,CAAsB,EAChE,OAAA,oBAAoB,QAASA,CAAsB,CAC5D,CAAA,EACC,CAACz1C,CAAc,CAAC,EAGb,MAAA21C,EAAmB,CAAC1nC,EAAOhgB,IAAY,CACvC,GAAA,CACE,GAAA,CAACggB,GAAS,CAAChgB,EAAS,OAExB,MAAMkgB,EAAY,CAChB,MAAAF,EACA,QAAAhgB,EACA,UAAW,KAAK,IAAI,EACpB,WAAAsnD,EACA,QAAS,KACX,EAGA,aAAa,QAAQ5B,GAAW,KAAK,UAAUxlC,CAAS,CAAC,EACzD,eAAe,QAAQwlC,GAAW,KAAK,UAAUxlC,CAAS,CAAC,EAEnD,QAAA,IAAI,wBAAyBF,EAAM,MAAM,QAC1CxoB,EAAO,CACN,QAAA,KAAK,iCAAkCA,CAAK,CAAA,CAExD,EAEMiwD,EAAqBznD,GAAY,CACjC,GAAA,CACE,GAAA,CAACA,EAAgB,OAAA,KAGf,MAAA2nD,EAAY,aAAa,QAAQjC,EAAS,EAC1CkC,EAAc,eAAe,QAAQlC,EAAS,EAC9CxlC,EAAY,KAAK,MAAMynC,GAAaC,CAAW,EAEjD,OAAC1nC,EAGHA,EAAU,UAAY,OACtBA,EAAU,UAAYlgB,GACtBkgB,EAAU,UAAY,KAAK,MAAQylC,IACnC,MAAM,QAAQzlC,EAAU,KAAK,GAC7BA,EAAU,MAAM,OAAS,GASvBA,EAAU,MAAM,OAAS,GACVwnC,EAAAxnC,EAAU,MAAOlgB,CAAO,EAG3C,QAAQ,IAAI,8BAA+BkgB,EAAU,MAAM,MAAM,EAC1D,CACL,MAAOA,EAAU,MACjB,WAAYA,EAAU,UACxB,IAdE,aAAa,WAAWwlC,EAAS,EACjC,eAAe,WAAWA,EAAS,EAC5B,MAZc,WAyBhBluD,EAAO,CACN,eAAA,KAAK,kCAAmCA,CAAK,EACrD,aAAa,WAAWkuD,EAAS,EACjC,eAAe,WAAWA,EAAS,EAC5B,IAAA,CAEX,EAGAhxD,EAAAA,UAAU,MACW,SAAY,CACzB,GAAC,OAAO,SACR,GAAA,CACI,MAAAs+C,EAAa,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACxDhhC,EAAA,SAASghC,EAAY,EAAE,CAAC,QACnCx7C,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,CAAA,CAElD,GACW,EAGP,OAAO,UACT,OAAO,SAAS,GAAG,eAAiBwI,GAAY,CAC5BgS,EAAA,SAAShS,EAAS,EAAE,CAAC,CAAA,CACxC,EAGI,IAAM,CACP,OAAO,UACF,OAAA,SAAS,eAAe,eAAgB,IAAM,CAAA,CAAE,CAE3D,GACC,EAAE,EAGLtL,EAAAA,UAAU,IAAM,EACI,SAAY,CAC5B,GAAI,GAAC4b,GAAU,CAAC,OAAO,UAEvB,CAAApa,EAAW,EAAI,EACf+7B,EAAS,EAAE,EAEP,GAAA,CACF,MAAMz1B,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDhU,EAAU,MAAMxD,EAAS,aAAa,KAAUkxB,GAAA,OAAOA,EAAE,OAAO,CAAC,EAGjEpP,EAAampC,EAAkBznD,CAAO,EAC5C,GAAIse,EAAY,CACdykC,EAASzkC,EAAW,KAAK,EACzBipC,EAAcjpC,EAAW,UAAU,EACpB+oC,EAAA/oC,EAAW,MAAM,MAAM,EACtCpoB,EAAW,EAAK,EAGC,KAAK,IAAA,EAAQ,KAAK,MAAM,aAAa,QAAQwvD,EAAS,GAAK,IAAI,EAAE,UACnE,KACbmC,EAAmB7nD,EAASxD,CAAQ,EAEtC,MAAA,CAGI,MAAAqrD,EAAmB7nD,EAASxD,CAAQ,QAEnChF,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EAClCA,EAAAA,EAAM,SAAW,yCAAyC,CAAA,QACnE,CACAtB,EAAW,EAAK,CAAA,EAEpB,GAEU,CAAA,EACT,CAACoa,CAAM,CAAC,EAGL,MAAAu3C,EAAqB,MAAO7nD,EAASxD,IAAa,CACtDumD,EAAS,CAAA,CAAE,EACXsE,EAAe,CAAC,EAEV,MAAApzC,EAAiByJ,GAAkB1d,CAAO,GAAG,QACnD,GAAI,CAACiU,EACG,MAAA,IAAI,MAAM,+CAA+C,EAI3D,MAAA6zC,EAAkB,IAAIxnD,EAC1B2T,EACA,CAAC,gDAAiD,gDAAgD,EAClGzX,CACF,EAGM8qD,EAAa,MAAMQ,EAAgB,eAAe,EAC1CP,EAAA,OAAOD,CAAU,CAAC,EAChC,QAAQ,IAAI,eAAgBA,EAAW,SAAA,CAAU,EAGjD,MAAM34B,EAAa,GACbC,EAAW04B,EACXS,EAAU,MAAM,KAAK,CAAE,OAAQ,OAAOn5B,EAAWD,CAAU,CAAE,EAAG,CAACxrB,EAAGC,IAAMurB,EAAa,OAAOvrB,CAAC,CAAC,EAGhG8hB,EAAY,EACZC,EAAU,CAAC,EACjB,QAAS/hB,EAAI,EAAGA,EAAI2kD,EAAQ,OAAQ3kD,GAAK8hB,EACvCC,EAAQ,KAAK4iC,EAAQ,MAAM3kD,EAAGA,EAAI8hB,CAAS,CAAC,EAIxC,MAAAohC,EAAgB,IAAIhL,GAAiB,CACzC,2CACA,2CACA,gEAAA,CACD,EAEK0M,EAAiB,IAAI1M,GAAiB,CAC1C,0CACA,wCACA,0CAAA,CACD,EAEK2M,EAAiB,CAAC,EAExB,UAAW7iC,KAASD,EACd,GAAA,CAEI,MAAA6qB,EAAgB,MAAM,QAAQ,IAClC5qB,EAAM,IAAItmB,GAASgpD,EAAgB,SAAShpD,CAAK,CAAC,CACpD,EAGA,UAAWqf,KAAe6xB,EACpB,GAAA,CAEF,KAAM,CAACuW,EAAYC,EAAYC,EAAY,EAAI,MAAM,QAAQ,IAAI,CAC/DjqD,EAAS,KAAK,CACZ,GAAI2hB,EACJ,KAAMmoC,EAAc,mBAAmB,QAAQ,CAAA,CAChD,EACD9pD,EAAS,KAAK,CACZ,GAAI2hB,EACJ,KAAMmoC,EAAc,mBAAmB,QAAQ,CAAA,CAChD,EACD9pD,EAAS,KAAK,CACZ,GAAI2hB,EACJ,KAAMmoC,EAAc,mBAAmB,aAAa,CACrD,CAAA,CAAA,CACF,EAEK1oC,GAAgB29B,GAAkB,KAAOgL,EAAW,MAAM,EAAE,CAAC,EAC7D1oC,GAAgB09B,GAAkB,KAAOiL,EAAW,MAAM,EAAE,CAAC,EAC7D,CAACxoC,EAAUE,CAAQ,EAAIooC,EAAc,qBAAqB,cAAeG,EAAY,EAGrFX,EAAepoC,GAAkB1d,CAAO,GAAG,MAAM,YAAY,EAC7DiuC,EAAerwB,GAAc,YAAA,IAAkBkoC,EAC/C5X,EAAerwB,GAAc,YAAA,IAAkBioC,EAG/C,CAACnhC,EAAcC,GAAcsjC,GAAYC,CAAU,EAAI,MAAM,QAAQ,IAAI,CAC7Ela,EAAe,QAAQ,QAAQ,KAAK,EAAIzxC,EAAS,KAAK,CACpD,GAAIohB,GACJ,KAAMoqC,EAAe,mBAAmB,QAAQ,CACjD,CAAA,EAAE,KAAK9qD,IAAQ8qD,EAAe,qBAAqB,SAAU9qD,EAAI,EAAE,CAAC,CAAC,EAAE,MAAM,IAAM,SAAS,EAC7FgxC,EAAe,QAAQ,QAAQ,KAAK,EAAI1xC,EAAS,KAAK,CACpD,GAAIqhB,GACJ,KAAMmqC,EAAe,mBAAmB,QAAQ,CACjD,CAAA,EAAE,KAAK9qD,IAAQ8qD,EAAe,qBAAqB,SAAU9qD,EAAI,EAAE,CAAC,CAAC,EAAE,MAAM,IAAM,SAAS,EAC7F+wC,EAAe,QAAQ,QAAQ,OAAO,EAAIzxC,EAAS,KAAK,CACtD,GAAIohB,GACJ,KAAMoqC,EAAe,mBAAmB,MAAM,CAC/C,CAAA,EAAE,KAAK9qD,IAAQ8qD,EAAe,qBAAqB,OAAQ9qD,EAAI,EAAE,CAAC,CAAC,EAAE,MAAM,IAAM,eAAe,EACjGgxC,EAAe,QAAQ,QAAQ,OAAO,EAAI1xC,EAAS,KAAK,CACtD,GAAIqhB,GACJ,KAAMmqC,EAAe,mBAAmB,MAAM,CAC/C,CAAA,EAAE,KAAK9qD,IAAQ8qD,EAAe,qBAAqB,OAAQ9qD,EAAI,EAAE,CAAC,CAAC,EAAE,MAAM,IAAM,eAAe,CAAA,CAClG,EAGKkrD,GAAepgB,GAAchoC,CAAO,GAAG,KAAKgY,IAAKA,GAAE,SAAS,YAAY,IAAM4F,IAAe,YAAA,CAAa,EAC1GyqC,GAAergB,GAAchoC,CAAO,GAAG,KAAKgY,IAAKA,GAAE,SAAS,YAAY,IAAM6F,IAAe,YAAA,CAAa,EAE1GoyB,GAAO,CACX,OAAQ,CACN,QAASryB,GACT,OAAQ+G,EACR,KAAMujC,GACN,SAAUE,IAAc,UAAY,GACpC,KAAMA,IAAc,OAASna,EAAe,aAAe,sBAC3D,OAAQA,CACV,EACA,OAAQ,CACN,QAASpwB,GACT,OAAQ+G,GACR,KAAMujC,EACN,SAAUE,IAAc,UAAY,GACpC,KAAMA,IAAc,OAASna,EAAe,aAAe,sBAC3D,OAAQA,CACV,EACA,YAAA/vB,EACA,QAAAne,EACA,SAAU,CACR,SAAUge,EAAS,SAAS,EAC5B,SAAUE,EAAS,SAAS,EAC5B,kBAAmBD,GAAmBD,EAAUoqC,IAAc,UAAY,EAAE,EAC5E,kBAAmBnqC,GAAmBC,EAAUmqC,IAAc,UAAY,EAAE,CAAA,CAEhF,EAGAJ,EAAe,KAAKhY,EAAI,EACf8S,EAAA,CAAC,GAAGkF,CAAc,CAAC,EAC5BZ,EAAeY,EAAe,MAAM,QAE7BzwD,EAAO,CACd,QAAQ,KAAK,yBAAyB2mB,CAAW,IAAK3mB,CAAK,EAC3D,QAAA,QAGGA,EAAO,CACN,QAAA,KAAK,0BAA2BA,CAAK,EAC7C,QAAA,CAIAywD,EAAe,SAAW,GAC5Bh2B,EAAS,yCAAyC,EAIhDg2B,EAAe,OAAS,GAC1BP,EAAiBO,EAAgBjoD,CAAO,CAE5C,EAGAtL,EAAAA,UAAU,IAAM,CA6ER,MAAAo1C,EAAY,WA5EE,SAAY,CAC9B,GAAI,CAAC9vC,EAAY,CACfmtD,EAAiB,CAAA,CAAE,EACnB,MAAA,CAIF,GAAIntD,EAAW,QAAU,IAAMoG,GAAiBpG,CAAU,EACpD,GAAA,CACF9D,EAAW,EAAI,EAEf,MAAM+pB,EAAW,MAAMoJ,EAAQ,qBAAqBrvB,CAAU,EAC9D,GAAIimB,EAAU,CAEZ,KAAM,CAACqoC,EAAkBC,CAAgB,EAAI,MAAM,QAAQ,IAAI,CAC7Dj8C,GAA4B2T,EAAS,OAAO,OAAO,EAAE,MAAM,IAAM,IAAI,EACrE3T,GAA4B2T,EAAS,OAAO,OAAO,EAAE,MAAM,IAAM,IAAI,CAAA,CACtE,EAGGqoC,IACFroC,EAAS,OAAS,CAChB,GAAGA,EAAS,OACZ,KAAMqoC,EAAiB,KACvB,OAAQA,EAAiB,OACzB,SAAUA,EAAiB,UAAY,GACvC,KAAMA,EAAiB,KACvB,SAAUA,EAAiB,QAC7B,GAIEC,IACFtoC,EAAS,OAAS,CAChB,GAAGA,EAAS,OACZ,KAAMsoC,EAAiB,KACvB,OAAQA,EAAiB,OACzB,SAAUA,EAAiB,UAAY,GACvC,KAAMA,EAAiB,KACvB,SAAUA,EAAiB,QAC7B,GAGI,MAAAC,EAAgB,MAAMnC,GAAgB,CAC1C,GAAGpmC,EACH,QAASjmB,CAAA,CACV,EAED,GAAIwuD,EAAe,CACT,QAAA,IAAI,yBAA0BA,CAAa,EAClCrB,EAAA,CAACqB,CAAa,CAAC,EAChCtyD,EAAW,EAAK,EAChB,MAAA,CACF,QAEKm3C,EAAK,CACJ,QAAA,MAAM,gCAAiCA,CAAG,CAAA,QAClD,CACAn3C,EAAW,EAAK,CAAA,CAKd,MAAAuyD,EAAWzoC,EAAM,OAAeiwB,GAAA,CAChC,GAAA,CAACA,GAAM,QAAQ,QAAU,CAACA,GAAM,QAAQ,QAAU,CAACA,GAAM,YAAoB,MAAA,GAC3E,MAAAjG,EAAchwC,EAAW,YAAY,EAEzC,OAAAi2C,EAAK,OAAO,OAAO,cAAc,SAASjG,CAAW,GACrDiG,EAAK,OAAO,OAAO,YAAY,EAAE,SAASjG,CAAW,GACrDiG,EAAK,YAAY,YAAA,EAAc,SAASjG,CAAW,CAAA,CAEtD,EAEDmd,EAAiBsB,CAAQ,CAC3B,EAE0C,GAAG,EACtC,MAAA,IAAM,aAAa3e,CAAS,CAClC,EAAA,CAAC9vC,EAAYgmB,EAAOqJ,CAAO,CAAC,EAGzB,MAAAq/B,EAAe1uD,EAAaktD,EAAgBlnC,EAGhD,OAAA5mB,EAAA,KAAC6X,GAAA,CACC,KAAMX,EACN,QAAAC,EACA,UAAU,gBAEV,SAAA,CAAA3b,EAAA,IAAC,MAAI,CAAA,UAAU,6CAA6C,cAAY,OAAO,EAE/EA,EAAAA,IAAC,OAAI,UAAU,qDACb,eAACqc,GAAO,MAAP,CAAa,UAAU,4EACtB,SAAA7X,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU2lB,GACV,QAAQ,SACR,QAAQ,OACR,UAAU,MAEV,SAAA,CAAAzvB,EAAA,KAAC6X,GAAO,MAAP,CAAa,UAAU,2FACtB,SAAA,CAAArc,EAAAA,IAAC,QAAK,SAAa,eAAA,CAAA,EAClBwyD,EAAc,GAAKE,EAAa,GAC9BluD,EAAAA,KAAA,OAAA,CAAK,UAAU,2CAA2C,SAAA,CAAA,UACjDguD,EAAY,IAAEE,CAAA,CACxB,CAAA,CAAA,EAEJ,EAGCv1C,GACC3Y,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,OAET,SAAA,CAAO,OAAA,OAAOuiD,EAAkB,EAAE,IAAI7xC,GACrC7B,IAAmB6B,EAAQ,GACzBxa,EAAA,KAAC,MAAqB,CAAA,UAAU,wHAC9B,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,iDAAkD,CAAA,EAChEgf,EAAQ,IAFD,CAAA,EAAAA,EAAQ,EAGlB,EACE,IACL,EACA,CAAC,OAAO,OAAO6xC,EAAkB,EAAE,KAAK7xC,GAAWA,EAAQ,KAAO7B,CAAc,GAC/End,EAAA,IAAC,MAAI,CAAA,UAAU,mFAAmF,SAElG,kEAAA,CAAA,CAAA,CAAA,CAEJ,EAID4C,GACC5C,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,+HAET,SAAA1L,CAAA,CACH,EAGF4B,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU8iD,GACV,UAAU,gBAEV,SAAA,CAAApxD,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOoF,EACP,SAAWoC,GAAMnC,EAAcmC,EAAE,OAAO,KAAK,EAC7C,YAAY,qCACZ,UAAU,gSACV,MAAO,CACL,iBAAkB,OAClB,cAAe,MAAA,CACjB,CACF,EACAxH,EAAAA,IAACu1C,GAAS,CAAA,UAAU,+FAAgG,CAAA,CAAA,CAAA,CACtH,EAEA/wC,EAAA,KAAC,MAAA,CACC,UAAU,uEACV,MAAO,CACL,eAAgB,OAChB,eAAgB,iBAClB,EAEA,SAAA,CAAAxE,MAAC,QACE,CAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaH,QACCinC,GAAgB,CAAA,KAAK,OACnB,SAAW5lC,GAAA+pB,EAAM,SAAW,EAC3BprB,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU+iD,GACV,QAAQ,SACR,QAAQ,OACR,UAAU,YAET,SAAC,CAAA,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC9iD,EAAGrE,IACpBlK,EAAA,IAAAwxD,GAAA,CAAA,EAAsBtnD,CAAO,CAC/B,CAAA,CAED,EAAAtH,GAASwoB,EAAM,SAAW,EAC5BprB,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,GAAI,EAC3B,UAAU,iCAET,SAAA1L,CAAA,CAAA,EAEDkxD,EAAa,SAAW,EAC1B9zD,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,GAAI,EAC3B,UAAU,qDAET,WAAU,mBAAqB,gBAAA,CAAA,EAGlCtO,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU2lB,GACV,QAAQ,SACR,QAAQ,OACR,UAAU,YAET,SAAa6/B,EAAA,IAAI,CAACzY,EAAMnxC,IACvBlK,EAAA,IAACuxD,GAAA,CAEC,KAAAlW,EACA,SAAA9H,CAAA,EAFK,GAAG8H,EAAK,WAAW,IAAInxC,CAAK,EAIpC,CAAA,CAAA,CAAA,CAGP,CAAA,CAAA,CAAA,CACF,EAGC7I,GACCmD,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,yDACb,SAAAA,EAAA,IAAC,MAAA,CACC,UAAU,8DACV,MAAO,CAAE,MAAO,GAAIwyD,GAAeE,GAAc,GAAM,GAAG,GAAI,CAAA,CAAA,EAElE,EACAluD,EAAAA,KAAC,MAAI,CAAA,UAAU,uDAAuD,SAAA,CAAA,oBAClD,KAAK,MAAOguD,GAAeE,GAAc,GAAM,GAAG,EAAE,GAAA,CACxE,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,GAGN,CACF,CAAA,CAAA,CAAA,CACF,CAEJ,CCnoCA,MAAMqB,GAAmB3oD,GAAY,CACnC,OAAQA,EAAS,CACf,IAAK,OACA,MAAA,CACL,CACM,OAAQ,MACR,KAAM,QACV,SAAU,GACN,KAAM,aACN,SAAU,EACZ,EACA,CACE,QAAS,6CACT,OAAQ,SACR,KAAM,gBACV,SAAU,GACN,KAAM,YACR,EACA,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,gBACN,SAAU,GACV,KAAM,UAAA,CAEV,EACF,IAAK,MACI,MAAA,CAEP,EACF,IAAK,KACI,MAAA,CAEP,EACF,QACE,MAAO,CAAC,CAAA,CAEd,EAGMoxC,GAAe,CAAC1vC,EAAO1B,IAAY,CACnC,GAAA,CAAC0B,EAAc,MAAA,qBAGb,MAAAknD,EAAeD,GAAgB3oD,CAAO,EACxC,GAAA,CAAC4oD,EAAqB,MAAA,qBAE1B,MAAMhgB,EAAcggB,EAAa,QAC/B5wC,EAAE,SAAS,gBAAkBtW,GAAO,SAAS,YAAY,GACxD1B,GAAW0d,GAAkB1d,CAAO,GAAG,MAAM,gBAAkB0B,GAAO,SAAS,YAAY,CAC9F,EAEA,OAAIknC,EACKA,EAAY,KAIjBlnC,GAAO,MAAQA,GAAO,SACjBA,EAAM,MAAQ4M,GAAW5M,EAAM,QAAQ,EAIzC,oBACT,EAGM0rC,GAAe,CAAC,CAAE,MAAA1rC,EAAO,QAAA1B,KAAc,CAC3C,KAAM,CAAE,QAAS27B,CAAY,EAAIt8B,GAAW,EACtC,CAAC6jB,EAASmlB,CAAU,EAAI7zC,EAAAA,SAAS,GAAG,EACpC,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C60B,EAAU2nB,GAAY,EA4C5B,GA1CAt8C,EAAAA,UAAU,IAAM,EACO,SAAY,CAC3B,GAAA,GAACinC,GAAe,CAACj6B,GAEjB,GAAA,CAEF,GADAi4B,EAAa,EAAI,EACb35B,IAAY,MAAO,CAErB,MAAMxD,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACvD,GAAAtS,EAAM,UAAYA,EAAM,OAAQ,CAElC,MAAMwhB,EAAU,MAAM1mB,EAAS,WAAWm/B,CAAW,EAC1C0M,EAAA9vB,GAAmB2K,CAAO,CAAC,CAAA,KACjC,CAOL,MAAMA,EAAU,MALI,IAAI5iB,EACxBoB,EAAM,QACN,CAAC,oDAAoD,EACnDlF,CACF,EACoC,UAAUm/B,CAAW,EACzD0M,EAAWpqB,GAAmBiF,EAASxhB,EAAM,QAAQ,CAAC,CAAA,CACxD,KACK,CAECwhB,MAAAA,EAAU,MAAMmG,EAAQ,gBAC5B3nB,EAAM,SAAW,MAAQ,MAAQA,EAAM,QACvCi6B,CACF,EACA0M,EAAWnlB,CAAO,CAAA,QAEb1rB,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9C6wC,EAAW,GAAG,CAAA,QACd,CACA1O,EAAa,EAAK,CAAA,CAEtB,GAEa,GACZ,CAACj4B,EAAOi6B,EAAatS,EAASrpB,CAAO,CAAC,EAErC,CAAC0B,GAAS,CAACi6B,GAAe,CAAC37B,EAAgB,OAAA,KAGzC,MAAA6oD,EAAgB7oD,IAAY,QAAU0B,EAAM,QAAUA,EAAM,UAAY,MAAQA,EAAM,OAG1F,OAAAtI,EAAA,KAAC,MAAI,CAAA,UAAU,4CACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,mCAAmC,SAAQ,WAAA,EAC1D8kC,QACE,MAAI,CAAA,UAAU,8DAA8D,EAE7EtgC,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACb,SAAA,CAAO,OAAA8pB,CAAO,EAAE,eAAe,EAAE,IAAE2lC,CAAA,CACtC,CAAA,CAAA,EAEJ,CAEJ,EAGMlpC,GAAa,CACjB,6NACA,kNACA,kGACA,8GACF,EAcM3P,GAAQ,CACZ,UAAW,IACRpb,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAAO,MAAO,CAAE,UAAW,2BAC3E,EAAA,SAAAwE,EAAAA,KAAC,KAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAAA,IAAC,OAAK,CAAA,EAAE,6BAA6B,cAAc,QAAQ,MAAO,CAAE,UAAW,kCAAsC,CAAA,CAAA,EACpHA,EAAAA,IAAA,OAAA,CAAK,EAAE,sEAAsE,cAAc,QAAQ,MAAO,CAAE,UAAW,mCAAoC,eAAgB,MAAA,CAAU,CAAA,CAAA,CAAA,CACxL,CACF,CAAA,EAEF,MAAO,IACJA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAE,CAAA,YAAa,IAAK,OAAO,eAAe,MAAO,CAAE,UAAW,wBAC7D,EAAA,SAAA,CAAAA,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,eAAe,QAC3G,OAAK,CAAA,EAAE,UAAU,cAAc,QAAQ,UAAU,eAAe,QAChE,OAAK,CAAA,EAAE,aAAa,cAAc,QAAQ,UAAU,cAAe,CAAA,CAAA,CAAA,CACtE,CACF,CAAA,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAAA,IAAC,QAAK,EAAE,gBAAgB,cAAc,QAAQ,eAAe,QAAQ,UAAU,iCAAkC,CAAA,CAAA,CAAA,CACnH,CACF,CAAA,EAEF,OAAQ,IACLA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGA,EAAAA,IAAA,OAAA,CAAK,EAAE,iBAAiB,cAAc,QAAQ,eAAe,QAAQ,MAAO,CAAE,UAAW,8BAAkC,CAAA,CAAA,EAC3HA,EAAA,IAAA,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,MAAO,CAAE,UAAW,4BAA6B,QAAS,GAAO,CAAA,CAAA,CAAA,CACjG,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,0EAA2E,CAAA,EACnFA,EAAA,IAAC,OAAA,CAAK,cAAc,QAAQ,UAAU,kDACpC,EAAE,aAAA,CAAA,CAAc,CAAA,CACpB,CACF,CAAA,EAEF,UAAW,IACRA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,oCAAoC,QAChI,OAAK,CAAA,EAAE,gBAAgB,cAAc,QAAQ,eAAe,QAAQ,UAAU,2CAA2C,MAAO,CAAE,gBAAiB,GAAI,iBAAkB,GAAM,CAAA,CAAA,CAAA,CAClL,CACF,CAAA,CAEJ,EAGMyb,GAAgB,CAAC,CAAE,OAAAC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,KAAAy/B,EAAM,MAAAz4C,EAAO,QAAAwI,KAAc,CAChF,MAAM2Q,EAAQ,CACZ,CAAE,GAAI,YAAa,MAAO,YAAa,KAAO/b,EAAAA,IAAAob,GAAM,UAAN,CAAA,CAAgB,CAAG,EACjE,CAAE,GAAI,WAAY,MAAO,iBAAkB,KAAOpb,EAAAA,IAAAob,GAAM,SAAN,CAAA,CAAe,CAAG,EACpE,CAAE,GAAI,SAAU,MAAO,mBAAoB,KAAOpb,EAAAA,IAAAob,GAAM,OAAN,CAAA,CAAa,CAAG,EAClE,CAAE,GAAI,aAAc,MAAO,aAAc,KAAOpb,EAAAA,IAAAob,GAAM,WAAN,CAAA,CAAiB,CAAG,EACpE,CAAE,GAAI,YAAa,MAAO,YAAa,KAAOpb,MAAAob,GAAM,UAAN,EAAgB,CAAG,CACnE,EAEMiG,EAAU,EAAQze,EAElBsZ,EAAsBtZ,GACrBA,EACD,OAAOA,GAAU,SAAiBA,EAC/BA,EAAM,SAAW,4BAFL,GAKfsxD,EAAsB,IAAM,CAC5B,GAAA,CAAC7Y,EAAa,MAAA,GAGlB,MAAM4W,EAAgB,CACpB,GAAG5W,EAAK,OACR,OAAQjwC,GAAWiwC,EAAK,OAAO,SAAS,YAAY,IAAMvyB,GAAkB1d,CAAO,GAAG,MAAM,YAAA,EAAgB,MAAQiwC,EAAK,OAAO,OAChI,KAAMjwC,GAAWiwC,EAAK,OAAO,SAAS,YAAY,IAAMvyB,GAAkB1d,CAAO,GAAG,MAAM,YAAA,EAAgB,WAAaiwC,EAAK,OAAO,IACrI,EAEM6W,EAAgB,CACpB,GAAG7W,EAAK,OACR,OAAQjwC,GAAWiwC,EAAK,OAAO,SAAS,YAAY,IAAMvyB,GAAkB1d,CAAO,GAAG,MAAM,YAAA,EAAgB,MAAQiwC,EAAK,OAAO,OAChI,KAAMjwC,GAAWiwC,EAAK,OAAO,SAAS,YAAY,IAAMvyB,GAAkB1d,CAAO,GAAG,MAAM,YAAA,EAAgB,WAAaiwC,EAAK,OAAO,IACrI,EAGE,OAAA72C,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAayV,EAAe7mD,CAAO,EACxC,IAAK6mD,EAAc,OACnB,UAAU,4DAAA,CACZ,EACAjyD,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAa0V,EAAe9mD,CAAO,EACxC,IAAK8mD,EAAc,OACnB,UAAU,4DAAA,CAAA,CACZ,EACF,SACC,OACE,CAAA,SAAA,CAAcD,EAAA,OAAO,IAAEC,EAAc,MAAA,CACxC,CAAA,CAAA,EACF,CAEJ,EAEA,OACGlyD,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAA7X,EAAA,KAAC6X,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEAET,SAAA,CAAAgF,EAAU,yBAA2B,mBACrC,CAACA,GAAWg6B,GACXr7C,EAAAA,IAAC,OAAI,UAAU,8DACZ,YACH,CAAA,CAAA,CAAA,CAEJ,EAEAA,MAAC,OAAI,UAAU,YACZ,WAAM,IAAI,CAACic,EAAM/R,IAAU,CACpB,MAAApG,EAAW8X,IAAgBK,EAAK,GAChCM,EAAc,CAAC8E,GAAWtF,EAAM,UAAerL,GAAAA,EAAE,KAAOkL,CAAW,EAAI1R,EACvEsS,EAAc6E,GAAWzF,IAAgBK,EAAK,GAGlD,OAAAzX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,GAAY,CAAC0Y,EAAc,iCAC3BD,EAAc,iBACdC,EAAc,6BACd,eACF,GAEC,SAAA,CAAKP,EAAA,KACNzX,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CAA6C,SAAAic,EAAK,MAAM,EACvEnY,GAAY,CAACud,GACX7c,EAAA,KAAA,IAAA,CAAE,UAAU,gDACV,SAAA,CAAAyX,EAAK,KAAO,aAAe,2BAC3BA,EAAK,KAAO,YAAc,aAAao/B,GAAM,QAAQ,MAAM,QAAQA,GAAM,QAAQ,MAAM,GACvFp/B,EAAK,KAAO,UACVzX,EAAA,KAAA,OAAA,CAAK,UAAU,0BAA0B,SAAA,CAAA,uBACnB0vD,EAAoB,EAAE,OAAA,EAC7C,EAEDj4C,EAAK,KAAO,cAAgB,8BAC5BA,EAAK,KAAO,aACVzX,EAAA,KAAA,OAAA,CAAK,UAAU,0BAA0B,SAAA,CAAA,mCACP0vD,EAAoB,EAAE,QAAA,CACzD,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEJ,EACC33C,SACE,MAAI,CAAA,UAAU,yBAAyB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAChF,SAACvc,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CACxF,CAAA,CAAA,CAAA,EAhCGic,EAAK,EAkCZ,CAEH,CAAA,EACH,EAECoF,GACC7c,EAAA,KAAC,MAAI,CAAA,UAAU,6DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACb5W,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,QAC7D,IAAE,CAAA,UAAU,4BACV,SAAAkc,EAAmBtZ,CAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACA5C,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,iLACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAGDC,IAAgB,aACd5b,MAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,uGACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAGMgB,GAAkB,CAAC,CAAE,OAAAjB,EAAQ,QAAAC,EAAS,OAAAiB,KAAa,CACvD,KAAM,CAACC,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAAC2/C,EAAOC,CAAQ,EAAI5/C,EAAAA,SAAS,CAAC,EAEpC,OACGI,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,+EACX,SAAA,sBAAA,CAED,QAEC,MAAI,CAAA,UAAU,+CACZ,SAAA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKlL,GAChCnR,EAAA,IAAC,SAAA,CAEC,UAAW,+BACRu/C,GAAS1iC,IAAW1L,EAAO,iBAAmB,kCACjD,GACA,QAAS,IAAM,CACb2L,EAAU3L,CAAI,EACdyL,EAAOzL,CAAI,EACA,WAAA,IAAMwK,EAAQ,EAAG,GAAG,CACjC,EACA,aAAc,IAAM6jC,EAASruC,CAAI,EACjC,aAAc,IAAMquC,EAAS,CAAC,EAC/B,SAAA,GAAA,EAXMruC,CAcR,CAAA,EACH,EAECnR,EAAA,IAAA,IAAA,CAAE,UAAU,+CAA+C,SAE5D,2CAAA,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAEA,SAAwByuD,IAAe,CAC/B,KAAA,CAAE,QAAAlkD,CAAQ,EAAIE,GAAW,EACzBgqB,EAAU2nB,GAAY,EACtB,CAACf,EAAMqT,CAAO,EAAI9uD,EAAAA,SAAS,IAAI,EAC/B,CAACwxB,EAAcu9B,CAAe,EAAI/uD,EAAAA,SAAS,EAAE,EAC7C,CAACyxB,EAAcu9B,CAAe,EAAIhvD,EAAAA,SAAS,EAAE,EAC7C,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACivD,EAAeC,CAAgB,EAAIlvD,EAAAA,SAAS,EAAK,EAClD,CAACmvD,EAAaC,CAAc,EAAIpvD,EAAAA,SAAS,IAAI,EAC7C,CAACwL,EAAS0X,CAAU,EAAIljB,EAAAA,SAAS,IAAI,EACrCqvD,EAAsBrrD,GAAM,OAAO,IAAI,EACvC,CAAC8Z,EAAmBC,CAAoB,EAAI/d,EAAAA,SAAS,EAAK,EAC1D,CAACgc,EAAa6G,CAAc,EAAI7iB,EAAAA,SAAS,IAAI,EAC7C,CAACoe,EAAcC,CAAe,EAAIre,EAAAA,SAAS,EAAK,EAChD,CAACse,EAAiBC,CAAkB,EAAIve,EAAAA,SAAS,EAAK,EACtD,CAACwe,EAAYC,CAAa,EAAIze,WAAS,CAC3C,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,EACK,CAACu0D,EAAmBC,CAAoB,EAAIx0D,EAAAA,SAAS,IAAI,EACnBA,EAAAA,SAAS,IAAI,EACxC0iB,GAAY,EAG7BxiB,EAAAA,UAAU,IAAM,CACd,MAAMq+C,EAAa,SAAY,CAC7B,GAAI,OAAO,SAAU,CAEb,MAAAn/B,EAAU,MADC,IAAII,GAAuB,OAAO,QAAQ,EAC5B,WAAW,EAC/B0D,EAAA,OAAO9D,EAAQ,OAAO,CAAC,CAAA,CAEtC,EAEW,OAAAm/B,EAAA,EAGP,OAAO,UACF,OAAA,SAAS,GAAG,eAAgB,IAAM,CAC5BA,EAAA,CAAA,CACZ,EAGI,IAAM,CACP,OAAO,UACF,OAAA,SAAS,eAAe,eAAgBA,CAAU,CAE7D,CACF,EAAG,EAAE,EAGLr+C,EAAAA,UAAU,IAAM,CACd,MAAMmgB,EAAe,IAAM,CACX5B,EAAA,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,CACH,EAEO,cAAA,iBAAiB,SAAU4B,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAChE,EAAG,EAAE,EAEC,MAAA0hC,EAAgB9kC,GAAW,CACvB,QAAA,IAAI,iCAAkCA,CAAM,CAEtD,EAGA/c,EAAAA,UAAU,IAAM,EACO,SAAY,CAC3B,GAAA,GAACu7C,GAAQ,CAAC5mB,GAEV,GAAA,CACI,MAAApJ,EAAW,MAAMoJ,EAAQ,YAAY4mB,EAAK,OAAO,QAASA,EAAK,OAAO,OAAO,EAC/EhwB,GACFqjC,EAAiBpnD,IAAA,CACf,GAAGA,EACH,GAAG+jB,EACH,OAAQ,CAAE,GAAG/jB,EAAK,OAAQ,GAAG+jB,EAAS,MAAO,EAC7C,OAAQ,CAAE,GAAG/jB,EAAK,OAAQ,GAAG+jB,EAAS,MAAO,CAAA,EAC7C,QAEGzoB,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,CAAA,CAEnD,GAEa,CACZ,EAAA,CAACy4C,GAAM,YAAa5mB,CAAO,CAAC,EAG/B7wB,GAAM,UAAU,IAAM,CACpB,MAAMsrD,EAAkB,SAAY,CAC9B,GAAA,GAAC7T,GAAQ,CAAC0T,GAEV,GAAA,CACI,MAAA1jC,EAAW,MAAMoJ,EAAQ,YAAY4mB,EAAK,OAAO,QAASA,EAAK,OAAO,OAAO,EACnF,GAAI,CAAChwB,GAAY,CAACA,EAAS,SAAU,CACnC,QAAQ,IAAI,gCAAgC,EAC5C,MAAA,CAIF,MAAMjC,EAAW,OAAOiC,EAAS,SAAS,SAAS,UAAU,EACvD/B,EAAW,OAAO+B,EAAS,SAAS,SAAS,UAAU,EAO7D,GALA,QAAQ,IAAI,YAAa,CACvB,SAAUjC,EAAS,SAAS,EAC5B,SAAUE,EAAS,SAAS,CAAA,CAC7B,EAEGylC,IAAgB,UAAY39B,GAAgBA,IAAiB,IAAK,CAC5D,QAAA,IAAI,mDAAoDA,CAAY,EAC5E,MAAM/E,EAAUngB,GAAkBklB,EAAciqB,EAAK,OAAO,QAAQ,EACpE,QAAQ,IAAI,kBAAmBhvB,EAAQ,SAAA,CAAU,EAG3C,MAAAC,EAAWD,EAAU/C,EAAYF,EACvC,QAAQ,IAAI,sBAAuBkD,EAAQ,SAAA,CAAU,EAErD,MAAM6iC,EAAmB9lC,GAAmBiD,EAAS+uB,EAAK,OAAO,QAAQ,EACjE,QAAA,IAAI,qBAAsB8T,CAAgB,EAElDP,EAAgBO,CAAgB,CACvB,SAAAJ,IAAgB,UAAY19B,GAAgBA,IAAiB,IAAK,CACnE,QAAA,IAAI,mDAAoDA,CAAY,EAC5E,MAAM/E,EAAUpgB,GAAkBmlB,EAAcgqB,EAAK,OAAO,QAAQ,EACpE,QAAQ,IAAI,kBAAmB/uB,EAAQ,SAAA,CAAU,EAG3C,MAAAD,EAAWC,EAAUlD,EAAYE,EACvC,QAAQ,IAAI,sBAAuB+C,EAAQ,SAAA,CAAU,EAErD,MAAM+iC,EAAmB/lC,GAAmBgD,EAASgvB,EAAK,OAAO,QAAQ,EACjE,QAAA,IAAI,qBAAsB+T,CAAgB,EAElDT,EAAgBS,CAAgB,CAAA,QAE3BxsD,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,CAAA,CAErD,EAGA,OAAIqsD,EAAoB,SACtB,aAAaA,EAAoB,OAAO,EAItBA,EAAA,QAAU,WAAWC,EAAiB,GAAG,EAGtD,IAAM,CACPD,EAAoB,SACtB,aAAaA,EAAoB,OAAO,CAE5C,CAAA,EACC,CAAC5T,EAAMjqB,EAAcC,EAAc09B,EAAat6B,CAAO,CAAC,EAErD,MAAA46B,EAAsB7nD,GAAM,CAC1B,MAAAzH,EAAQyH,EAAE,OAAO,OACnBzH,IAAU,IAAM,cAAc,KAAKA,CAAK,KAC1CivD,EAAe,QAAQ,EACvBL,EAAgB5uD,CAAK,GACjB,CAACA,GAASA,IAAU,MACtB6uD,EAAgB,EAAE,EAGxB,EAEMU,EAAsB9nD,GAAM,CAC1B,MAAAzH,EAAQyH,EAAE,OAAO,OACnBzH,IAAU,IAAM,cAAc,KAAKA,CAAK,KAC1CivD,EAAe,QAAQ,EACvBJ,EAAgB7uD,CAAK,GACjB,CAACA,GAASA,IAAU,MACtB4uD,EAAgB,EAAE,EAGxB,EAEM9I,EAAqB,SAAY,CACrC,GAAI,CAACt7C,EAAS,CACZnH,EAAM,MAAM,4BAA4B,EACxC,MAAA,CAGF,GAAI,CAACi4C,GAAQ,CAACjqB,GAAgB,CAACC,GAAgB,CAACjmB,EAAS,CACvDhI,EAAM,MAAM,2BAA2B,EACvC,MAAA,CAGF9B,EAAW,EAAI,EACfqc,EAAqB,EAAI,EACzB8E,EAAe,WAAW,EAC1B2xC,EAAqB,IAAI,EAErB,GAAA,CACF,MAAMxsD,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDhU,EAAU,MAAMxD,EAAS,aAAa,KAAUkxB,GAAA,OAAOA,EAAE,OAAO,CAAC,EAEvE,GAAI1tB,IAAY,MAAO,CAEjB,MAAA+T,EAAS,MAAMvX,EAAS,UAAU,EAChCu5C,EAAgBr4B,GAAkB,KAAK,EAAE,OACzC+9B,EAAkB,IAAIH,GAAiB,CAC3C,6NACA,iNAAA,CACD,EAEK94B,EAAW,KAAK,MAAM,KAAK,MAAQ,GAAI,EAAI,GAAK,GAChDw3B,EAAgBl5C,GAAkBklB,EAAciqB,EAAK,OAAO,QAAQ,EACpEgK,EAAgBn5C,GAAkBmlB,EAAcgqB,EAAK,OAAO,QAAQ,EAE1E54B,EAAe,UAAU,EAGzB,MAAM4xC,EAAiBhZ,EAAK,OAAO,QAAUA,EAAK,OAAO,SACnDiZ,GAAiBjZ,EAAK,OAAO,QAAUA,EAAK,OAAO,SAEzD,GAAIgZ,GAAkBC,GAAgB,CAEpC,MAAMzoD,GAAewoD,EAAiBhZ,EAAK,OAAO,QAAUA,EAAK,OAAO,QAClEttB,GAAcsmC,EAAiBhP,EAAgBD,EAC/CmP,EAAYF,EAAiBjP,EAAgBC,EAG9CgP,EAOOC,IAMJ,MALgB,IAAI5oD,EACxB2vC,EAAK,OAAO,QACZ,CAAC,2EAA2E,EAC5El8B,CACF,EACoB,QAAQgiC,EAAekE,CAAa,EAPlD,MALgB,IAAI35C,EACxB2vC,EAAK,OAAO,QACZ,CAAC,2EAA2E,EAClFl8B,CACF,EAC0B,QAAQgiC,EAAeiE,CAAa,EAU1D3iC,EAAe,QAAQ,EACjB,MAAA0K,EAAK,MAAMhO,EAAO,gBAAgB,CACtC,GAAIgiC,EACJ,KAAM0F,EAAgB,mBAAmB,kBAAmB,CAC1Dh7C,GACAkiB,GACAA,GAAc,IAAM,KACpBwmC,EAAY,IAAM,KAClB,MAAMp1C,EAAO,WAAW,EACxByO,CAAA,CACD,EACD,MAAO2mC,CAAA,CACR,EAED9xC,EAAe,YAAY,EAC3B,MAAM0K,EAAG,KAAK,CAAA,KACT,CAGC,MAAAX,GAAiB,IAAI9gB,EACzB2vC,EAAK,OAAO,QACZ,CAAC,2EAA2E,EAC5El8B,CACF,EACMsN,GAAiB,IAAI/gB,EACzB2vC,EAAK,OAAO,QACZ,CAAC,2EAA2E,EAC5El8B,CACF,EAEM,MAAAqN,GAAe,QAAQ20B,EAAeiE,CAAa,EACnD,MAAA34B,GAAe,QAAQ00B,EAAekE,CAAa,EAEzD5iC,EAAe,QAAQ,EACjB,MAAA0K,EAAK,MAAMhO,EAAO,gBAAgB,CACtC,GAAIgiC,EACJ,KAAM0F,EAAgB,mBAAmB,eAAgB,CACvDxL,EAAK,OAAO,QACZA,EAAK,OAAO,QACZ+J,EACAC,EACAD,EAAgB,IAAM,KACtBC,EAAgB,IAAM,KACtB,MAAMlmC,EAAO,WAAW,EACxByO,CACD,CAAA,CAAA,CACF,EAEDnL,EAAe,YAAY,EAC3B,MAAM0K,EAAG,KAAK,CAAA,CAChB,KACK,CAEC,MAAAhO,EAAS,MAAMvX,EAAS,UAAU,EAClC4sD,EAAiB,IAAI9oD,EACzBod,GAAkB1d,CAAO,EAAE,OAC3B2f,GACA5L,CACF,EAEMyO,EAAW,KAAK,MAAM,KAAK,MAAQ,GAAI,EAAI,GAAK,GAChDw3B,EAAgBl5C,GAAkBklB,EAAciqB,EAAK,OAAO,QAAQ,EACpEgK,EAAgBn5C,GAAkBmlB,EAAcgqB,EAAK,OAAO,QAAQ,EAE1E54B,EAAe,UAAU,EAGnB,MAAAwJ,EAAcovB,EAAK,OAAO,OAC1BnvB,EAAcmvB,EAAK,OAAO,OAEhC,GAAIpvB,GAAeC,EAAa,CAE9B,MAAMrgB,GAAeogB,EAAcovB,EAAK,OAAO,QAAUA,EAAK,OAAO,QAC/DttB,GAAc9B,EAAco5B,EAAgBD,EAC5Ct3B,GAAY7B,EAAcm5B,EAAgBC,EAG3Cp5B,EAOOC,GAMV,MALsB,IAAIxgB,EACxB2vC,EAAK,OAAO,QACZ,CAAC,2EAA2E,EAC5El8B,CACF,EACoB,QAAQ2J,GAAkB1d,CAAO,EAAE,OAAQi6C,CAAa,EAP5E,MALsB,IAAI35C,EACxB2vC,EAAK,OAAO,QACZ,CAAC,2EAA2E,EAC5El8B,CACF,EACoB,QAAQ2J,GAAkB1d,CAAO,EAAE,OAAQg6C,CAAa,EAUhF3iC,EAAe,QAAQ,EACf,MAAA0K,EAAK,MAAMqnC,EAAe,gBAChC3oD,GACAkiB,GACEA,GAAc,IAAM,KACpBD,GAAY,IAAM,KAClBvjB,EACFqjB,EACE,CAAE,MAAOE,EAAU,CACvB,EAEErL,EAAe,YAAY,EAC3B,MAAM0K,EAAG,KAAK,CAAA,KACX,CAGG,MAAAX,GAAiB,IAAI9gB,EACzB2vC,EAAK,OAAO,QACZ,CAAC,2EAA2E,EAC5El8B,CACF,EACMsN,GAAiB,IAAI/gB,EACzB2vC,EAAK,OAAO,QACZ,CAAC,2EAA2E,EAC5El8B,CACF,EAEA,MAAMqN,GAAe,QAAQ1D,GAAkB1d,CAAO,EAAE,OAAQg6C,CAAa,EAC7E,MAAM34B,GAAe,QAAQ3D,GAAkB1d,CAAO,EAAE,OAAQi6C,CAAa,EAE/E5iC,EAAe,QAAQ,EACf,MAAA0K,GAAK,MAAMqnC,EAAe,aAC9BnZ,EAAK,OAAO,QACZA,EAAK,OAAO,QACd+J,EACAC,EACED,EAAgB,IAAM,KACtBC,EAAgB,IAAM,KACtB96C,EACAqjB,CACF,EAEJnL,EAAe,YAAY,EACvB,MAAM0K,GAAG,KAAK,CAAA,CAChB,CAGF1K,EAAe,WAAW,EACtBxE,EAAgB,EAAI,EACxB,WAAW,IAAMA,EAAgB,EAAK,EAAG,GAAI,QACtCrb,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EACzBwxD,EAAAxxD,EAAM,SAAW,yBAAyB,EAC/D6f,EAAe,OAAO,CAAA,QACtB,CACAnhB,EAAW,EAAK,CAAA,CAEpB,EAGE,OAAAkD,EAAA,KAAC,MAAI,CAAA,UAAU,YAEZ,SAAA,CACCwZ,GAAAhe,EAAA,IAACqgB,GAAA,CACC,MAAOjC,EAAW,MAClB,OAAQA,EAAW,OACnB,eAAgB,IAChB,QAAS,GACT,QAAS,GACT,iBAAkB,GAClB,iBAAkB,GAClB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,SAAS,EAC9D,MAAO,CACL,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,OACR,OAAQ,MACR,cAAe,MAAA,CACjB,CACF,SAID,MACC,CAAA,SAAA,CAACpe,EAAA,IAAA,QAAA,CAAM,UAAU,kEAAkE,SAEnF,cAAA,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAMsqD,EAAiB,EAAI,EACpC,UAAU,oNAET,SAAA,CACCzT,EAAA72C,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,OAAQjwC,CAAO,EACtC,IAAKiwC,EAAK,OAAO,OACjB,UAAU,4DAAA,CACZ,EACAr7C,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,OAAQjwC,CAAO,EACtC,IAAKiwC,EAAK,OAAO,OACjB,UAAU,4DAAA,CAAA,CACZ,EACF,EACCr7C,EAAA,IAAA,OAAA,CAAK,UAAU,4CACZ,UAAM,IAAA,CACF,GAAA,CAACoL,EAAS,MAAO,GAAGiwC,EAAK,OAAO,MAAM,IAAIA,EAAK,OAAO,MAAM,GAEhE,MAAMoZ,EADeV,GAAgB3oD,CAAO,EACb,KAAUgY,GAAAA,EAAE,SAAW,MAAM,EACxD,GAAA,CAACqxC,EAAW,MAAO,GAAGpZ,EAAK,OAAO,MAAM,IAAIA,EAAK,OAAO,MAAM,GAClE,MAAMtrB,EAAesrB,EAAK,OAAO,SAAS,YAAY,IAAMoZ,EAAU,SAAS,YAAY,EAAI,MAAQpZ,EAAK,OAAO,OAC7GrrB,EAAeqrB,EAAK,OAAO,SAAS,YAAY,IAAMoZ,EAAU,SAAS,YAAY,EAAI,MAAQpZ,EAAK,OAAO,OAC5G,MAAA,GAAGtrB,CAAY,IAAIC,CAAY,EAAA,IAE1C,CAAA,CAAA,EACF,EAEAhwB,EAAA,IAAC,OAAK,CAAA,UAAU,gBAAgB,SAAa,gBAAA,EAE/CA,EAAA,IAAC,MAAA,CACC,UAAU,qEACV,KAAK,OACL,QAAQ,YACR,OAAO,eAEP,SAAAA,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CAAA,CACF,EACF,EAECq7C,GAGG72C,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,6DACd,SAAA,CAAY4G,IAAA,QAAUiwC,EAAK,OAAO,QAAUA,EAAK,OAAO,UAAY,MAAQA,EAAK,OAAO,OAAO,SAAA,EAClG,EACA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOoxB,EACP,SAAUi+B,EACV,YAAY,MACZ,UAAU,8OAAA,CACZ,EACA7qD,EAAAA,KAAC,MAAI,CAAA,UAAU,oEACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKoL,IAAY,QAAUiwC,EAAK,OAAO,QAAUA,EAAK,OAAO,UAAY,aAAemB,GAAanB,EAAK,OAAQjwC,CAAO,EACzH,IAAKA,IAAY,QAAUiwC,EAAK,OAAO,QAAUA,EAAK,OAAO,UAAY,MAAQA,EAAK,OAAO,OAC7F,UAAU,sBAAA,CACZ,EACCr7C,EAAA,IAAA,OAAA,CAAK,UAAU,4CACb,aAAY,QAAUq7C,EAAK,OAAO,QAAUA,EAAK,OAAO,UAAY,MAAQA,EAAK,OAAO,MAC3F,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACCr7C,EAAA,IAAAw4C,GAAA,CAAa,MAAO6C,EAAK,OAAQ,QAAAjwC,CAAkB,CAAA,CAAA,EACtD,EAGA5G,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,6DACd,SAAA,CAAY4G,IAAA,QAAUiwC,EAAK,OAAO,QAAUA,EAAK,OAAO,UAAY,MAAQA,EAAK,OAAO,OAAO,SAAA,EAClG,EACA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOqxB,EACP,SAAUi+B,EACV,YAAY,MACZ,UAAU,8OAAA,CACZ,EACA9qD,EAAAA,KAAC,MAAI,CAAA,UAAU,oEACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKoL,IAAY,QAAUiwC,EAAK,OAAO,QAAUA,EAAK,OAAO,UAAY,aAAemB,GAAanB,EAAK,OAAQjwC,CAAO,EACzH,IAAKA,IAAY,QAAUiwC,EAAK,OAAO,QAAUA,EAAK,OAAO,UAAY,MAAQA,EAAK,OAAO,OAC7F,UAAU,sBAAA,CACZ,EACCr7C,EAAA,IAAA,OAAA,CAAK,UAAU,4CACb,aAAY,QAAUq7C,EAAK,OAAO,QAAUA,EAAK,OAAO,UAAY,MAAQA,EAAK,OAAO,MAC3F,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACCr7C,EAAA,IAAAw4C,GAAA,CAAa,MAAO6C,EAAK,OAAQ,QAAAjwC,CAAkB,CAAA,CAAA,EACtD,EAGApL,EAAA,IAAC,SAAA,CACC,QAAS6lD,EACT,SAAUxkD,GAAW,CAAC+vB,GAAgB,CAACC,EACvC,UAAW;AAAA,gBACPhwB,GAAW,CAAC+vB,GAAgB,CAACC,EAC3B,mFACA,4CACJ;AAAA,cAGD,WAAU,sBAAwB,eAAA,CAAA,CACrC,EACF,EAIFrxB,EAAA,IAACkuD,GAAA,CACC,OAAQW,EACR,QAAS,IAAMC,EAAiB,EAAK,EACrC,SAAWW,GAAiB,CAC1Bf,EAAQe,CAAY,EACpBX,EAAiB,EAAK,EACtBH,EAAgB,EAAE,EAClBC,EAAgB,EAAE,CAAA,CACpB,CACF,EAGA5uD,EAAA,IAACyb,GAAA,CACC,OAAQiC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1B8E,EAAe,IAAI,EACnB2xC,EAAqB,IAAI,CAC3B,EACA,YAAAx4C,EACA,KAAAy/B,EACA,MAAO8Y,EACP,QAAA/oD,CAAA,CACF,EAGApL,EAAA,IAAC2c,GAAA,CACC,OAAQuB,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,OAAQwjC,CAAA,CAAA,CACV,EACF,CAEJ,CC1gCA,MAAMqF,GAAY,CAChB,OAAQ,IACR,IAAK,IACL,OAAQ,IACR,KAAM,GACR,EAGM5rC,GAAQ,CACZ,UAAW,IACRpb,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAAA,IAAC,QAAK,EAAE,6BAA6B,cAAc,QAAQ,eAAe,QAAQ,UAAU,yCAA0C,CAAA,CAAA,CAAA,CACxI,CACF,CAAA,EAEF,MAAO,IACJA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAE,CAAA,YAAa,IAAK,OAAO,eAAe,MAAO,CAAE,UAAW,wBAC7D,EAAA,SAAA,CAAAA,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,eAAe,QAC3G,OAAK,CAAA,EAAE,UAAU,cAAc,QAAQ,UAAU,eAAe,QAChE,OAAK,CAAA,EAAE,aAAa,cAAc,QAAQ,UAAU,cAAe,CAAA,CAAA,CAAA,CACtE,CACF,CAAA,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAAA,IAAC,QAAK,EAAE,gBAAgB,cAAc,QAAQ,eAAe,QAAQ,UAAU,iCAAkC,CAAA,CAAA,CAAA,CACnH,CACF,CAAA,EAEF,OAAQ,IACLA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGA,EAAAA,IAAA,OAAA,CAAK,EAAE,iBAAiB,cAAc,QAAQ,eAAe,QAAQ,MAAO,CAAE,UAAW,8BAAkC,CAAA,CAAA,EAC3HA,EAAA,IAAA,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,MAAO,CAAE,UAAW,4BAA6B,QAAS,GAAO,CAAA,CAAA,CAAA,CACjG,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,0EAA2E,CAAA,EACnFA,EAAA,IAAC,OAAA,CAAK,cAAc,QAAQ,UAAU,kDACpC,EAAE,aAAA,CAAA,CAAc,CAAA,CACpB,CACF,CAAA,EAEF,UAAW,IACRA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,oCAAoC,QAChI,OAAK,CAAA,EAAE,gBAAgB,cAAc,QAAQ,eAAe,QAAQ,UAAU,2CAA2C,MAAO,CAAE,gBAAiB,GAAI,iBAAkB,GAAM,CAAA,CAAA,CAAA,CAClL,CACF,CAAA,CAEJ,EAGMinD,GAAgB,CACpB,CAACD,GAAU,MAAM,EAAG,EACpB,CAACA,GAAU,GAAG,EAAG,GACjB,CAACA,GAAU,MAAM,EAAG,GACpB,CAACA,GAAU,IAAI,EAAG,GACpB,EAGMpF,GAAuB,CAC3B,QAAS,8CACT,OAAQ,4CACR,OAAQ,6CACR,kBAAmB,4CACrB,EAGM8S,GAAoB,6CACpBC,GAAgB,CACpB,2HACA,kJACF,EAGMC,GAAkB,IAAIlO,GAAiB,CAC3C,0CACA,0CACF,CAAC,EAWKlO,GAAe,CAAC,CAAE,MAAA1rC,KAAY,CAClC,KAAM,CAACwhB,EAASmlB,CAAU,EAAI7zC,EAAAA,SAAS,GAAG,EACpC,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C60B,EAAU2nB,GAAY,EACtB,CAAE,QAASrV,CAAY,EAAIt8B,GAAW,EA+BxC,GA7BJ3K,EAAAA,UAAU,IAAM,EACO,SAAY,CAC/B,GAAI,GAACinC,GAAe,CAACj6B,GAAS,CAAC2nB,GAE3B,GAAA,CAGF,GAFAsQ,EAAa,EAAI,EAEbj4B,EAAM,SAAS,YAAA,IAAkBgc,GAAkB,KAAK,cAAe,CAEzE,MAAMivB,EAAa,MADF,IAAI34B,GAAuB,OAAO,QAAQ,EACzB,WAAW2nB,CAAW,EAC7C0M,EAAA9vB,GAAmBo0B,CAAU,CAAC,CAAA,KACpC,CACCzpB,MAAAA,EAAU,MAAMmG,EAAQ,gBAC5B3nB,EAAM,QACNi6B,CACF,EACA0M,EAAWnlB,CAAO,CAAA,QAEb1rB,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9C6wC,EAAW,GAAG,CAAA,QACd,CACA1O,EAAa,EAAK,CAAA,CAEtB,GAEa,CACZ,EAAA,CAACj4B,EAAOi6B,EAAatS,CAAO,CAAC,EAE5B,CAAC3nB,EAAc,OAAA,KAGb,MAAAmnD,EAAgBnnD,EAAM,SAAS,YAAY,IAAMgc,GAAkB,KAAK,YAAA,EAC1E,MACAhc,EAAM,OAGR,OAAAtI,EAAA,KAAC,MAAI,CAAA,UAAU,gDAAgD,SAAA,CAAA,YACnDsgC,EAAY,aAAexW,EAAQ,IAAE2lC,CAAA,EACjD,CAEJ,EAGMt3C,GAAkB,CAAC,CAAE,OAAAjB,EAAQ,QAAAC,EAAS,OAAAiB,KAAa,CACvD,KAAM,CAACC,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAAC2/C,EAAOC,CAAQ,EAAI5/C,EAAAA,SAAS,CAAC,EAEpC,OACGI,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,qBAAqB,QAAAV,EAC9C,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,+EACX,SAAA,sBAAA,CAED,EAEA7X,EAAAA,KAAC,MAAI,CAAA,UAAU,uCACb,SAAA,CAAAxE,EAAAA,IAAC,MAAI,CAAA,UAAU,8BACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGrE,IAAU,CAC/B,MAAMu1C,EAAYv1C,EAAQ,EAExB,OAAAlK,EAAA,IAAC,SAAA,CAEC,UAAU,0DACV,QAAS,IAAM8c,EAAU2iC,CAAS,EAClC,aAAc,IAAMD,EAASC,CAAS,EACtC,aAAc,IAAMD,EAAS,CAAC,EAE9B,SAAAx/C,EAAA,IAACoR,GAAA,CACC,KAAM,GACN,UAAW,sBACRmuC,GAAS1iC,IAAW4iC,EACjB,iBACA,kCACN,EAAA,CAAA,CACF,EAbKA,CAcP,CAEH,CAAA,EACH,EAECz/C,EAAA,IAAA,IAAA,CAAE,UAAU,2CACV,aAAW,EAAI,kBAAoB,cAAc6c,CAAM,QAAQA,IAAW,EAAI,IAAM,EAAE,GACzF,EAEArY,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACT6c,EAAS,IACXD,EAAOC,CAAM,EACLlB,EAAA,EAEZ,EACA,UAAW,sDACTkB,EAAS,EACL,6CACA,kFACN,GACD,SAAA,eAAA,CAED,EACA7c,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,yJACX,SAAA,MAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAGMk5C,GAAW,IAAM,CACrB,KAAM,CAACxzD,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACwrB,EAAO+iC,CAAQ,EAAIvuD,EAAAA,SAAS,CAAA,CAAE,EAC/B,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,IAAI,EACjC,CAAE,QAASmnC,CAAY,EAAIt8B,GAAW,EAEtCqqD,EAAiB55B,EAAAA,YAAY,MAAOtzB,EAAUitC,IAAW,CACzD,GAAA,CACF,MAAMkgB,EAAY,IAAIC,EAASN,GAAmBC,GAAe/sD,CAAQ,EAGnEmiD,EAAQlV,EAAO,QAAkB/nC,GAAA,CACrC,CACE,OAAQA,EACR,SAAU8nD,GAAgB,mBAAmB,QAAQ,CACvD,EACA,CACE,OAAQ9nD,EACR,SAAU8nD,GAAgB,mBAAmB,UAAU,CAAA,CACzD,CACA,EAEI,CAAE,WAAAK,CAAW,EAAI,MAAMF,EAAU,UAAUhL,CAAK,EAGhD3R,EAAY,CAAC,EACnB,QAAS5pC,EAAI,EAAGA,EAAIqmC,EAAO,OAAQrmC,IAAK,CACtC,MAAM3C,EAAegpC,EAAOrmC,CAAC,EAAE,YAAY,EACvC,GAAA,CACI,MAAAqH,EAAS++C,GAAgB,qBAAqB,SAAUK,EAAWzmD,EAAI,CAAC,CAAC,EAAE,CAAC,EAC5EvC,EAAW2oD,GAAgB,qBAAqB,WAAYK,EAAWzmD,EAAI,EAAI,CAAC,CAAC,EAAE,CAAC,EAC1F4pC,EAAUvsC,CAAY,EAAI,CAAE,OAAAgK,EAAQ,SAAA5J,CAAS,QACtCwsC,EAAK,CACZ,QAAQ,KAAK,iCAAiC5sC,CAAY,IAAK4sC,CAAG,EAClEL,EAAUvsC,CAAY,EAAI,CAAE,OAAQ,UAAW,SAAU,EAAG,CAAA,CAC9D,CAEK,OAAAusC,QACAK,EAAK,CACJ,eAAA,KAAK,sBAAuBA,CAAG,EAChC5D,EAAO,OAAO,CAAC3E,EAAKpjC,KACrBojC,EAAApjC,EAAM,aAAa,EAAI,CAAE,OAAQ,UAAW,SAAU,EAAG,EACtDojC,GACN,EAAE,CAAA,CAET,EAAG,EAAE,EAECglB,EAAah6B,EAAAA,YAAY,SAAY,CACzC,GAAK6L,EAED,GAAA,CACFzlC,EAAW,EAAI,EACf+7B,EAAS,IAAI,EAEb,MAAMz1B,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrD8zC,EAAkB,IAAIxnD,EAC1Bk2C,GAAqB,QACrB,CAAC,wHAAwH,EACzHh6C,CACF,EAGM+hB,EAAe,MAAM/hB,EAAS,eAAe,EAC7C8/B,EAAY,KAAK,IAAI,EAAG/d,EAAgB,KAAO,EAAG,EAElDzb,EAASglD,EAAgB,QAAQ,YAAY,EAC7Ch5C,EAAS,MAAMg5C,EAAgB,YAAYhlD,EAAQw5B,CAAS,EAG5DytB,EAAe,CAAC,GAAG,IAAI,IAAIj7C,EAAO,QAAQC,GAC9C,CAACA,EAAM,KAAK,CAAC,EAAGA,EAAM,KAAK,CAAC,CAAC,CAAA,CAC9B,CAAC,EAGIi+B,EAAY,MAAM0c,EAAeltD,EAAUutD,CAAY,EAGvD9B,EAAiBn5C,EAAO,IAAaC,GAAA,CACzC,MAAMuR,EAASvR,EAAM,KAAK,CAAC,EAAE,YAAY,EACnCwR,EAASxR,EAAM,KAAK,CAAC,EAAE,YAAY,EACnCuE,EAAMvE,EAAM,KAAK,CAAC,EAGjB,MAAA,CACL,YAHkBA,EAAM,KAAK,CAAC,EAI9B,IAAKuE,EAAI,SAAS,EAClB,OAAQ,CACN,QAASvE,EAAM,KAAK,CAAC,EACrB,OAAQi+B,EAAU1sB,CAAM,GAAG,QAAU,UACrC,SAAU0sB,EAAU1sB,CAAM,GAAG,UAAY,GACzC,OAAQA,IAAW5C,GAAkB,KAAK,YAAY,CACxD,EACA,OAAQ,CACN,QAAS3O,EAAM,KAAK,CAAC,EACrB,OAAQi+B,EAAUzsB,CAAM,GAAG,QAAU,UACrC,SAAUysB,EAAUzsB,CAAM,GAAG,UAAY,GACzC,OAAQA,IAAW7C,GAAkB,KAAK,YAAY,CAAA,CAE1D,CAAA,CACD,EAEDqlC,EAASkF,CAAc,QAChB5a,EAAK,CACJ,QAAA,MAAM,wBAAyBA,CAAG,EACjCpb,EAAAob,EAAI,SAAW,uBAAuB,CAAA,QAC/C,CACAn3C,EAAW,EAAK,CAAA,CAClB,EACC,CAACylC,EAAa+tB,CAAc,CAAC,EAEhCh1D,OAAAA,EAAAA,UAAU,IAAM,CACHo1D,EAAA,CAAA,EACV,CAACA,CAAU,CAAC,EAER,CAAE,MAAA9pC,EAAO,QAAA/pB,EAAS,MAAAuB,EAAO,QAASsyD,CAAW,CACtD,EAGMhH,GAAqB,CAAC,CAAE,OAAAxyC,EAAQ,QAAAC,EAAS,SAAA43B,KAAe,CAC5D,KAAM,CAAE,MAAAnoB,EAAO,QAAA/pB,EAAS,MAAAuB,CAAA,EAAUiyD,GAAS,EAE3C,OACG70D,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEACX,SAAA,eAAA,CAED,QAEC,MAAI,CAAA,UAAU,8CACZ,SACChb,EAAArB,EAAAA,IAAC,OAAI,UAAU,2BACb,eAAC,MAAI,CAAA,UAAU,gEAAgE,CACjF,CAAA,EACE4C,EACD4B,EAAAA,KAAA,MAAA,CAAI,UAAU,gCAAgC,SAAA,CAAA,wBACvB5B,CAAA,EACxB,EACEwoB,EAAM,OAAS,EACjBA,EAAM,IAAKiwB,GACTr7C,EAAA,IAAC,SAAA,CAEC,QAAS,IAAMuzC,EAAS8H,CAAI,EAC5B,UAAU,8MAEV,SAAA72C,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,OAAO,OACjB,UAAU,4DAAA,CACZ,EACAr7C,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,OAAO,OACjB,UAAU,4DAAA,CAAA,CACZ,EACF,EACA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,4CACb,SAAA,CAAA62C,EAAK,OAAO,OAAS,MAAQA,EAAK,OAAO,OAAO,IAChDA,EAAK,OAAO,OAAS,MAAQA,EAAK,OAAO,MAAA,EAC5C,EACA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACX,SAAA,EAAA,OAAO62C,EAAK,GAAG,EAAI,KAAO,QAAQ,CAAC,EAAE,YAAA,CACzC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EA1BKA,EAAK,WAAA,CA4Bb,EAEDr7C,EAAAA,IAAC,OAAI,UAAU,iCAAiC,8BAEhD,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAGMyb,GAAgB,CAAC,CAAE,OAAAC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,KAAAy/B,EAAM,MAAAz4C,KAAY,CACvE,MAAMmZ,EAAQ,CACZ,CAAE,GAAI,YAAa,MAAO,YAAa,KAAO/b,EAAAA,IAAAob,GAAM,UAAN,CAAA,CAAgB,CAAG,EACjE,CAAE,GAAI,WAAY,MAAO,iBAAkB,KAAOpb,EAAAA,IAAAob,GAAM,SAAN,CAAA,CAAe,CAAG,EACpE,CAAE,GAAI,SAAU,MAAO,mBAAoB,KAAOpb,EAAAA,IAAAob,GAAM,OAAN,CAAA,CAAa,CAAG,EAClE,CAAE,GAAI,aAAc,MAAO,aAAc,KAAOpb,EAAAA,IAAAob,GAAM,WAAN,CAAA,CAAiB,CAAG,EACpE,CAAE,GAAI,YAAa,MAAO,YAAa,KAAOpb,MAAAob,GAAM,UAAN,EAAgB,CAAG,CACnE,EAEMiG,EAAU,EAAQze,EAElBsZ,EAAsBtZ,GACtBA,GAAO,SAAS,eAAe,EAC1B,8CAELA,GAAO,SAAS,cAAc,EACzB,6CAELA,GAAO,SAAS,4BAA4B,EACvC,+CAELA,GAAO,SAAS,wBAAwB,EACnC,yCAEFA,GAAO,QAAQ,kCAAmC,EAAE,GAAK,oBAG5DsxD,EAAsB,IAAM,CAC5B,GAAA,CAAC7Y,EAAa,MAAA,GAGlB,MAAM4W,EAAgB,CACpB,GAAG5W,EAAK,OACR,OAAQA,EAAK,OAAO,SAAS,YAAY,IAAMvyB,GAAkB,KAAK,YAAY,EAAI,MAAQuyB,EAAK,OAAO,OAC1G,KAAMA,EAAK,OAAO,SAAS,YAAY,IAAMvyB,GAAkB,KAAK,YAAY,EAAI,WAAauyB,EAAK,OAAO,IAC/G,EAEM6W,EAAgB,CACpB,GAAG7W,EAAK,OACR,OAAQA,EAAK,OAAO,SAAS,YAAY,IAAMvyB,GAAkB,KAAK,YAAY,EAAI,MAAQuyB,EAAK,OAAO,OAC1G,KAAMA,EAAK,OAAO,SAAS,YAAY,IAAMvyB,GAAkB,KAAK,YAAY,EAAI,WAAauyB,EAAK,OAAO,IAC/G,EAGE,OAAA72C,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAayV,CAAa,EAC/B,IAAKA,EAAc,OACnB,UAAU,4DAAA,CACZ,EACAjyD,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAa0V,CAAa,EAC/B,IAAKA,EAAc,OACnB,UAAU,4DAAA,CAAA,CACZ,EACF,SACC,OACE,CAAA,SAAA,CAAcD,EAAA,OAAO,IAAEC,EAAc,MAAA,CACxC,CAAA,CAAA,EACF,CAEJ,EAEA,OACGlyD,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAA7X,EAAA,KAAC6X,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEAET,SAAA,CAAAgF,EAAU,yBAA2B,mBACrC,CAACA,GAAWg6B,GACXr7C,EAAAA,IAAC,OAAI,UAAU,8DACZ,YACH,CAAA,CAAA,CAAA,CAEJ,EAEAA,MAAC,OAAI,UAAU,YACZ,WAAM,IAAI,CAACic,EAAM/R,IAAU,CACpB,MAAApG,EAAW8X,IAAgBK,EAAK,GAChCM,EAAc,CAAC8E,GAAWtF,EAAM,UAAerL,GAAAA,EAAE,KAAOkL,CAAW,EAAI1R,EACvEsS,EAAc6E,GAAWzF,IAAgBK,EAAK,GAGlD,OAAAzX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,GAAY,CAAC0Y,EAAc,iCAC3BD,EAAc,iBACdC,EAAc,6BACd,eACF,GAEC,SAAA,CAAKP,EAAA,KACNzX,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CAA6C,SAAAic,EAAK,MAAM,EACvEnY,GAAY,CAACud,GACX7c,EAAA,KAAA,IAAA,CAAE,UAAU,gDACV,SAAA,CAAAyX,EAAK,KAAO,aAAe,2BAC3BA,EAAK,KAAO,YAAc,aAAao/B,GAAM,QAAQ,MAAM,QAAQA,GAAM,QAAQ,MAAM,GACvFp/B,EAAK,KAAO,UACVzX,EAAA,KAAA,OAAA,CAAK,UAAU,0BAA0B,SAAA,CAAA,uBACnB0vD,EAAoB,EAAE,OAAA,EAC7C,EAEDj4C,EAAK,KAAO,cAAgB,8BAC5BA,EAAK,KAAO,aACVzX,EAAA,KAAA,OAAA,CAAK,UAAU,0BAA0B,SAAA,CAAA,mCACP0vD,EAAoB,EAAE,QAAA,CACzD,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEJ,EACC33C,SACE,MAAI,CAAA,UAAU,yBAAyB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAChF,SAACvc,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CACxF,CAAA,CAAA,CAAA,EAhCGic,EAAK,EAkCZ,CAEH,CAAA,EACH,EAECoF,GACC7c,EAAA,KAAC,MAAI,CAAA,UAAU,6DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACb5W,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,QAC7D,IAAE,CAAA,UAAU,4BACV,SAAAkc,EAAmBtZ,CAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACA5C,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,iLACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAGDC,IAAgB,aACd5b,MAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,uGACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAEA,SAAwB8yC,IAAe,CAC/B,KAAA,CAAE,QAAAlkD,CAAQ,EAAIE,GAAW,EACf2xC,GAAY,EAC5B,KAAM,CAACf,EAAMqT,CAAO,EAAI9uD,EAAAA,SAAS,IAAI,EAC/B,CAACwxB,EAAcu9B,CAAe,EAAI/uD,EAAAA,SAAS,EAAE,EAC7C,CAACyxB,EAAcu9B,CAAe,EAAIhvD,EAAAA,SAAS,EAAE,EAC7C,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACivD,EAAeC,CAAgB,EAAIlvD,EAAAA,SAAS,EAAK,EAClD,CAACmvD,EAAaC,CAAc,EAAIpvD,EAAAA,SAAS,IAAI,EACvBgE,GAAM,OAAO,IAAI,EAC7C,KAAM,CAAC8Z,EAAmBC,CAAoB,EAAI/d,EAAAA,SAAS,EAAK,EAC1D,CAACgc,EAAa6G,CAAc,EAAI7iB,EAAAA,SAAS,IAAI,EAC7C,CAACoe,EAAcC,CAAe,EAAIre,EAAAA,SAAS,EAAK,EAChD,CAACse,EAAiBC,CAAkB,EAAIve,EAAAA,SAAS,EAAK,EACtD,CAACwe,EAAYC,CAAa,EAAIze,WAAS,CAC3C,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,EACK,CAACu0D,EAAmBC,CAAoB,EAAIx0D,EAAAA,SAAS,IAAI,EACzD,CAACqrD,EAAeC,CAAgB,EAAItrD,EAAAA,SAAS,MAAM,EAGnD,CAACw1D,EAAUC,CAAW,EAAIz1D,EAAAA,SAAS,IAAI,EACvC,CAACurD,EAAYC,CAAa,EAAIxrD,EAAA,SAAS,CAAE,IAAK,GAAI,IAAK,GAAI,EAGjEE,EAAAA,UAAU,IAAM,CACd,MAAMmgB,EAAe,IAAM,CACX5B,EAAA,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,CACH,EAEO,cAAA,iBAAiB,SAAU4B,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAChE,EAAG,EAAE,EAEC,MAAAovC,EAAsB7nD,GAAM,CAChBmnD,EAAAnnD,EAAE,OAAO,KAAK,EAC9BwnD,EAAe,QAAQ,CACzB,EAEMM,EAAsB9nD,GAAM,CAChBonD,EAAApnD,EAAE,OAAO,KAAK,EAC9BwnD,EAAe,QAAQ,CACzB,EAEMnJ,EAAqB,SAAY,CACjC,GAAA,CACFvkD,EAAW,EAAI,EACfqc,EAAqB,EAAI,EACzB8E,EAAe,WAAW,EAC1B2xC,EAAqB,IAAI,EAGnB,MAAAj1C,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAClCmtC,EAAkB,IAAInF,GAAkBjoC,CAAM,EAG9C6J,EAAgBqyB,EAAK,OAAO,SAAS,YAAY,IAAMvyB,GAAkB,KAAK,YAAY,EAC5FA,GAAkB,KAClBuyB,EAAK,OAAO,QACVpyB,EAAgBoyB,EAAK,OAAO,SAAS,YAAY,IAAMvyB,GAAkB,KAAK,YAAY,EAC5FA,GAAkB,KAClBuyB,EAAK,OAAO,QAGVtvB,EAAiB7f,GAAkBklB,EAAciqB,EAAK,OAAO,QAAQ,EACrErvB,EAAiB9f,GAAkBmlB,EAAcgqB,EAAK,OAAO,QAAQ,EAGrEgO,GAAY,CAChB,IAAMrC,GAAU,OAChB,IAAMA,GAAU,IAChB,GAAKA,GAAU,OACf,EAAGA,GAAU,MACboO,CAAQ,EAGV,IAAInN,GAAWC,GACf,GAAI+C,IAAkB,OAERhD,GAAA,QACAC,GAAA,WACP,CAEL,MAAMoN,EAAe,MAAM/I,EAAgB,gBAAgBvjC,EAAeC,EAAeogC,EAAS,EAC5FkM,IAAsB,IAAM,WAAWpK,EAAW,GAAG,GAAK,IAC1DqK,IAAsB,IAAM,WAAWrK,EAAW,GAAG,GAAK,IAEhElD,GAAY,MAAMsE,EAAgB,YAChC+I,EAAeC,GACfla,EAAK,OAAO,SACZA,EAAK,OAAO,QACd,EACA6M,GAAY,MAAMqE,EAAgB,YAChC+I,EAAeE,GACfna,EAAK,OAAO,SACZA,EAAK,OAAO,QACd,EAGM,MAAAqN,EAAczB,GAAcoC,EAAS,EAC3CpB,GAAY,KAAK,KAAKA,GAAYS,CAAW,EAAIA,EACjDR,GAAY,KAAK,MAAMA,GAAYQ,CAAW,EAAIA,CAAA,CAGpDjmC,EAAe,UAAU,EAGzB,MAAM8pC,EAAgB,qBAAqB,CACzC,OAAQvjC,EACR,OAAQC,EACR,eAAA8C,EACA,eAAAC,EACA,aAAczhB,CAAA,CACf,EAEDkY,EAAe,QAAQ,EAGjB,MAAAuZ,EAAWqf,EAAK,OAAO,SAAS,gBAAkBvyB,GAAkB,KAAK,YAAY,EACvFiD,EACCsvB,EAAK,OAAO,SAAS,YAAY,IAAMvyB,GAAkB,KAAK,cAC7DkD,EACA,GAGA,CAAE,QAAArL,EAAS,UAAA8Q,EAAW,QAAApF,EAAS,QAAAC,GAAY,MAAMigC,EAAgB,KAAK,CAC1E,OAAQvjC,EACR,OAAQC,EACR,IAAKogC,GACL,UAAApB,GACA,UAAAC,GACA,eAAAn8B,EACA,eAAAC,EACA,WAAY,EACZ,WAAY,EACZ,UAAWzhB,EACX,SAAU,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,EAAI,KAC1C,MAAOyxB,CAAA,CACR,EAED,QAAQ,IAAI,oBAAqB,CAC/B,QAASrb,EAAQ,SAAS,EAC1B,UAAW8Q,EAAU,SAAS,EAC9B,QAASpI,GAAmBgD,EAASgvB,EAAK,OAAO,QAAQ,EACzD,QAAShyB,GAAmBiD,EAAS+uB,EAAK,OAAO,QAAQ,CAAA,CAC1D,EAED54B,EAAe,WAAW,EAG1B,WAAW,IAAM,CACf9E,EAAqB,EAAK,EAC1B8E,EAAe,IAAI,EAGnB,WAAW,IAAM,CACfxE,EAAgB,EAAI,EAGpB,WAAW,IAAM,CACfE,EAAmB,EAAI,GACtB,GAAI,EAGP,WAAW,IAAM,CACfwwC,EAAgB,EAAE,EAClBC,EAAgB,EAAE,EAClB3wC,EAAgB,EAAK,GACpB,GAAK,GACP,GAAG,GACL,GAAI,QAEArb,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EAC3CwxD,EAAqBxxD,EAAM,OAAO,EAClC6f,EAAe,OAAO,CAAA,QACtB,CACAnhB,EAAW,EAAK,CAAA,CAEpB,EAEMqgD,EAAe,MAAO9kC,GAAW,CAC7B,QAAA,IAAI,eAAgBA,CAAM,CAEpC,EAGE,OAAArY,EAAA,KAAC,MAAI,CAAA,UAAU,YAEZ,SAAA,CACCwZ,GAAAhe,EAAA,IAACqgB,GAAA,CACC,MAAOjC,EAAW,MAClB,OAAQA,EAAW,OACnB,eAAgB,IAChB,QAAS,GACT,QAAS,GACT,iBAAkB,GAClB,iBAAkB,GAClB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,SAAS,EAC9D,MAAO,CACL,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,OACR,OAAQ,MACR,cAAe,MAAA,CACjB,CACF,SAID,MACC,CAAA,SAAA,CAACpe,EAAA,IAAA,QAAA,CAAM,UAAU,kEAAkE,SAEnF,cAAA,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAMsqD,EAAiB,EAAI,EACpC,UAAU,oNAET,SAAA,CACCzT,EAAA72C,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,OAAO,OACjB,UAAU,4DAAA,CACZ,EACAr7C,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,OAAO,OACjB,UAAU,4DAAA,CAAA,CACZ,EACF,EACA72C,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACb,SAAA,CAAK62C,EAAA,OAAO,SAAS,YAAkB,IAAAvyB,GAAkB,KAAK,cAAgB,MAAQuyB,EAAK,OAAO,OAAO,IACzGA,EAAK,OAAO,SAAS,gBAAkBvyB,GAAkB,KAAK,YAAY,EAAI,MAAQuyB,EAAK,OAAO,MAAA,CACrG,CAAA,CAAA,EACF,EAEAr7C,EAAA,IAAC,OAAK,CAAA,UAAU,gBAAgB,SAAa,gBAAA,EAE/CA,EAAA,IAAC,MAAA,CACC,UAAU,qEACV,KAAK,OACL,QAAQ,YACR,OAAO,eAEP,SAAAA,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CAAA,CACF,EACF,EAECq7C,GAGG72C,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,WAAA,EACCA,EAAAA,IAAA,MAAA,CAAI,UAAU,yBACZ,SAAC,CAAA,IAAM,IAAM,GAAK,CAAC,EAAE,IAAK0e,GACzBla,EAAA,KAAC,SAAA,CAEC,QAAS,IAAM6wD,EAAY32C,CAAG,EAC9B,UAAW;AAAA,sBACP02C,IAAa12C,EACX,0BACA,4GACJ;AAAA,oBAGD,SAAA,CAAAA,EAAI,GAAA,CAAA,EATAA,CAAA,CAWR,CACH,CAAA,CAAA,EACF,EAGAla,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,6DACd,SAAA,CAAA62C,EAAK,OAAO,OAAS,MAAQA,EAAK,OAAO,OAAO,SAAA,EACnD,EACA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOoxB,EACP,SAAUi+B,EACV,YAAY,MACZ,UAAU,8OAAA,CACZ,EACA7qD,EAAAA,KAAC,MAAI,CAAA,UAAU,oEACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKq7C,EAAK,OAAO,KACjB,IAAKA,EAAK,OAAO,OAAS,MAAQA,EAAK,OAAO,OAC9C,UAAU,sBAAA,CACZ,EACAr7C,EAAAA,IAAC,OAAK,CAAA,UAAU,4CACb,SAAAq7C,EAAK,OAAO,OAAS,MAAQA,EAAK,OAAO,MAC5C,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACCr7C,EAAAA,IAAAw4C,GAAA,CAAa,MAAO6C,EAAK,MAAQ,CAAA,CAAA,EACpC,EAGA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,6DACd,SAAA,CAAA62C,EAAK,OAAO,OAAS,MAAQA,EAAK,OAAO,OAAO,SAAA,EACnD,EACA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOqxB,EACP,SAAUi+B,EACV,YAAY,MACZ,UAAU,8OAAA,CACZ,EACA9qD,EAAAA,KAAC,MAAI,CAAA,UAAU,oEACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKq7C,EAAK,OAAO,KACjB,IAAKA,EAAK,OAAO,OAAS,MAAQA,EAAK,OAAO,OAC9C,UAAU,sBAAA,CACZ,EACAr7C,EAAAA,IAAC,OAAK,CAAA,UAAU,4CACb,SAAAq7C,EAAK,OAAO,OAAS,MAAQA,EAAK,OAAO,MAC5C,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACCr7C,EAAAA,IAAAw4C,GAAA,CAAa,MAAO6C,EAAK,MAAQ,CAAA,CAAA,EACpC,EAGA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,kBAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkrD,EAAiB,MAAM,EACtC,UAAW,wEACTD,IAAkB,OACd,sDACA,0HACN,GACD,SAAA,YAAA,CAED,EACAjrD,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkrD,EAAiB,QAAQ,EACxC,UAAW,wEACTD,IAAkB,SACd,sDACA,0HACN,GACD,SAAA,cAAA,CAAA,CAED,EACF,EAGCA,IAAkB,UAChBzmD,OAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,sDAAsD,SAEvE,YAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOmrD,EAAW,IAClB,SAAW3jD,GAAM4jD,EAAuB9jD,IAAA,CAAE,GAAGA,EAAM,IAAKE,EAAE,OAAO,KAAQ,EAAA,EACzE,YAAY,MACZ,UAAU,8OAAA,CAAA,CACZ,EACF,SACC,MACC,CAAA,SAAA,CAACxH,EAAA,IAAA,QAAA,CAAM,UAAU,sDAAsD,SAEvE,YAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOmrD,EAAW,IAClB,SAAW3jD,GAAM4jD,EAAuB9jD,IAAA,CAAE,GAAGA,EAAM,IAAKE,EAAE,OAAO,KAAQ,EAAA,EACzE,YAAY,MACZ,UAAU,8OAAA,CAAA,CACZ,CACF,CAAA,CAAA,EACF,EAGFxH,EAAAA,IAAC,MAAI,CAAA,UAAU,2CACb,SAAAA,EAAA,IAAC,KACE,SAAkBirD,IAAA,OACf,yKACA,yKACN,CAAA,CACF,CAAA,CAAA,EACF,EAGAjrD,EAAA,IAAC,SAAA,CACC,QAAS6lD,EACT,SAAUxkD,GAAW,CAAC+vB,GAAgB,CAACC,GAAgB,CAAC+jC,GAAY,CAACjK,EAAW,KAAO,CAACA,EAAW,IACnG,UAAW;AAAA,gBACP9pD,GAAW,CAAC+vB,GAAgB,CAACC,GAAgB,CAAC+jC,GAAY,CAACjK,EAAW,KAAO,CAACA,EAAW,IACvF,mFACA,4CACJ;AAAA,cAGD,WAAU,sBAAwB,eAAA,CAAA,CACrC,EACF,EAIFnrD,EAAA,IAACyb,GAAA,CACC,OAAQiC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1B8E,EAAe,IAAI,EACnB2xC,EAAqB,IAAI,CAC3B,EACA,YAAAx4C,EACA,KAAAy/B,EACA,MAAO8Y,CAAA,CACT,EAGAn0D,EAAA,IAAC2c,GAAA,CACC,OAAQuB,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,OAAQwjC,CAAA,CACV,EAGA3hD,EAAA,IAACkuD,GAAA,CACC,OAAQW,EACR,QAAS,IAAMC,EAAiB,EAAK,EACrC,SAAWW,GAAiB,CAC1Bf,EAAQe,CAAY,EACpBX,EAAiB,EAAK,EACtBH,EAAgB,EAAE,EAClBC,EAAgB,EAAE,EAClByG,EAAY,IAAI,EAChBjK,EAAc,CAAE,IAAK,GAAI,IAAK,GAAI,CAAA,CACpC,CAAA,CACF,EACF,CAEJ,CCvlCA,MAAMhwC,GAAQ,CACZ,UAAW,IACRpb,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAAO,MAAO,CAAE,UAAW,2BAC3E,EAAA,SAAAwE,EAAAA,KAAC,KAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAAA,IAAC,OAAK,CAAA,EAAE,6BAA6B,cAAc,QAAQ,MAAO,CAAE,UAAW,kCAAsC,CAAA,CAAA,EACpHA,EAAAA,IAAA,OAAA,CAAK,EAAE,sEAAsE,cAAc,QAAQ,MAAO,CAAE,UAAW,mCAAoC,eAAgB,MAAA,CAAU,CAAA,CAAA,CAAA,CACxL,CACF,CAAA,EAEF,MAAO,IACJA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAE,CAAA,YAAa,IAAK,OAAO,eAAe,MAAO,CAAE,UAAW,wBAC7D,EAAA,SAAA,CAAAA,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,eAAe,QAC3G,OAAK,CAAA,EAAE,UAAU,cAAc,QAAQ,UAAU,eAAe,QAChE,OAAK,CAAA,EAAE,aAAa,cAAc,QAAQ,UAAU,cAAe,CAAA,CAAA,CAAA,CACtE,CACF,CAAA,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAA,IAAC,OAAA,CACC,EAAE,gBACF,cAAc,QACd,eAAe,QACf,UAAU,yCACV,MAAO,CAAE,gBAAiB,GAAI,iBAAkB,GAAI,UAAW,8BAA+B,CAAA,CAAA,CAChG,CAAA,CACF,CACF,CAAA,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CACC,EAAE,iBACF,cAAc,QACd,eAAe,QACf,UAAU,oCACV,UAAU,kBAAA,CACZ,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,qCACF,UAAU,yCAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAA,IAAC,OAAA,CACC,EAAE,cACF,cAAc,QACd,eAAe,QACf,UAAU,mCAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,EAEF,UAAW,IACRA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAA,CACC,EAAE,2EACF,UAAU,mCAAA,CACZ,EACAA,EAAA,IAAC,OAAA,CACC,EAAE,gBACF,cAAc,QACd,eAAe,QACf,UAAU,2CACV,MAAO,CAAE,gBAAiB,GAAI,iBAAkB,GAAI,UAAW,gCAAiC,CAAA,CAAA,CAClG,CAAA,CACF,CACF,CAAA,CAEJ,EAGMmb,GAAQ,SAAS,cAAc,OAAO,EAC5CA,GAAM,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAepB,SAAS,KAAK,YAAYA,EAAK,EAG/B,MAAMM,GAAgB,CAAC,CAAE,OAAAC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,KAAAy/B,EAAM,MAAAz4C,KAAY,CACvE,MAAMmZ,EAAQ,CACZ,CAAE,IAAK,YAAa,MAAO,wBAAyB,KAAMX,GAAM,SAAU,EAC1E,CAAE,IAAK,WAAY,MAAO,oBAAqB,KAAMA,GAAM,QAAS,EACpE,CAAE,IAAK,WAAY,MAAO,qBAAsB,KAAMA,GAAM,QAAS,EACrE,CAAE,IAAK,aAAc,MAAO,yBAA0B,KAAMA,GAAM,UAAW,EAC7E,CAAE,IAAK,YAAa,MAAO,iCAAkC,KAAMA,GAAM,SAAU,CACrF,EAEMY,EAAmBD,EAAM,UAAkBE,GAAAA,EAAK,MAAQL,CAAW,EAEnEM,EAAsBtZ,GACrBA,EACDA,EAAM,SAAS,eAAe,EAAU,mCACxCA,EAAM,SAAS,oBAAoB,EAAU,qCAC1CA,EAHY,GAMfsxD,EAAsB,IACrB7Y,EAEH72C,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKq7C,EAAK,OAAO,KACjB,IAAKA,EAAK,OAAO,OACjB,UAAU,4DAAA,CACZ,EACAr7C,EAAA,IAAC,MAAA,CACC,IAAKq7C,EAAK,OAAO,KACjB,IAAKA,EAAK,OAAO,OACjB,UAAU,4DAAA,CAAA,CACZ,EACF,EACA72C,EAAAA,KAAC,OAAK,CAAA,UAAU,gCACb,SAAA,CAAA62C,EAAK,OAAO,OAAO,IAAEA,EAAK,OAAO,MAAA,CACpC,CAAA,CAAA,EACF,EAlBgB,GAsBpB,OACGr7C,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,gHACtB,SAAA,CAAA7X,EAAA,KAAC6X,GAAO,MAAP,CAAa,UAAU,yDAAyD,SAAA,CAAA,0BAE9Eg/B,GACEr7C,EAAA,IAAA,MAAA,CAAI,UAAU,8DACZ,YACH,CAAA,CAAA,EAEJ,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CAAMuX,EAAA,IAAI,CAACE,EAAM/R,IAAU,CAC1B,MAAMoS,EAAOL,EAAK,KACZnY,EAAWoG,IAAU8R,EACrBO,EAAcrS,EAAQ8R,EAE1B,OAAAxX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,EAAW,iCACXyY,EAAc,iBACd,eACF,GAEA,SAAA,CAAAvc,EAAA,IAACsc,EAAK,EAAA,EACN9X,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CAA6C,SAAAic,EAAK,MAAM,EACvEnY,GAAYmY,EAAK,MAAQ,YACvBzX,EAAAA,KAAA,IAAA,CAAE,UAAU,gDAAgD,SAAA,CAAA,0BACnC0vD,EAAoB,CAAA,CAC9C,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,EAfKj4C,EAAK,GAgBZ,CAAA,CAEH,EACArZ,GACC4B,EAAA,KAAC,MAAI,CAAA,UAAU,uDACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACb5W,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,iCAAiC,SAAkB,qBAAA,QAClE,IAAE,CAAA,UAAU,gDACV,SAAAkc,EAAmBtZ,CAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EACCgZ,IAAgB,aACf5b,EAAA,IAAC,MAAI,CAAA,UAAU,mBACb,SAAAA,EAAA,IAAC,IAAE,CAAA,UAAU,6BAA6B,SAAA,iCAA+B,CAAA,EAC3E,EAED4C,GACC5C,EAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,2GACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAGMgB,GAAkB,CAAC,CAAE,OAAAjB,EAAQ,QAAAC,EAAS,OAAAiB,KAAa,CACvD,KAAM,CAACC,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAACmd,EAAeC,CAAgB,EAAIpd,EAAAA,SAAS,CAAC,EAOpD,OACGI,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,gHACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CAAa,UAAU,qEAAqE,SAE7F,uBAAA,EACCrc,EAAAA,IAAA,MAAA,CAAI,UAAU,iCACZ,SAAC,CAAA,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGrE,IACrBlK,EAAA,IAAC,SAAA,CAEC,aAAc,IAAMgd,EAAiB9S,EAAQ,CAAC,EAC9C,aAAc,IAAM8S,EAAiB,CAAC,EACtC,QAAS,IAAM,CACbF,EAAU5S,EAAQ,CAAC,EACnB0S,EAAO1S,EAAQ,CAAC,EACRyR,EAAA,CACV,EACA,UAAU,qBAEV,SAAA3b,EAAA,IAAC,MAAA,CACC,UAAW,6BACTkK,EAAQ,IAAM6S,GAAiBF,GAAU,iBAAmB,kCAC9D,GACA,KAAK,eACL,QAAQ,YAER,SAAA7c,EAAAA,IAAC,OAAK,CAAA,EAAE,8FAA+F,CAAA,CAAA,CAAA,CACzG,EAlBKkK,CAAA,CAoBR,CACH,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EA2GM6gB,GAAa,CACjB,sLACA,mLACF,EA2EA,SAAwB2kC,IAAkB,CAClC,KAAA,CAAE,QAAAnlD,CAAQ,EAAIE,GAAW,EACzBgqB,EAAU2nB,GAAY,EACtB,CAACqT,EAAcgG,CAAe,EAAI71D,EAAAA,SAAS,IAAI,EAC/C,CAACivD,EAAeC,CAAgB,EAAIlvD,EAAAA,SAAS,EAAK,EAClD,CAAC81D,EAAeC,CAAgB,EAAI/1D,EAAAA,SAAS,EAAE,EAC/C,CAACg2D,EAAgBC,CAAiB,EAAIj2D,EAAAA,SAAS,GAAG,EAClD,CAACk2D,EAAoBC,CAAqB,EAAIn2D,EAAAA,SAAS,IAAI,EAC3D,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACo2D,EAAkBC,CAAmB,EAAIr2D,EAAAA,SAAS,EAAK,EACxD,CAACwxB,EAAcu9B,CAAe,EAAI/uD,EAAAA,SAAS,GAAG,EAC9C,CAACyxB,EAAcu9B,CAAe,EAAIhvD,EAAAA,SAAS,GAAG,EAC9C,CAAC8d,EAAmBC,CAAoB,EAAI/d,EAAAA,SAAS,EAAK,EAC1D,CAACgc,EAAa6G,CAAc,EAAI7iB,EAAAA,SAAS,IAAI,EAC7C,CAACoe,EAAcC,CAAe,EAAIre,EAAAA,SAAS,EAAK,EAChD,CAACse,EAAiBC,CAAkB,EAAIve,EAAAA,SAAS,EAAK,EACtD,CAACwe,EAAYC,CAAa,EAAIze,WAAS,CAC3C,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,EACK,CAACke,EAAeC,CAAgB,EAAIne,EAAAA,SAAS,IAAI,EAGvDE,EAAAA,UAAU,IAAM,CACd,MAAMmgB,EAAe,IAAM,CACX5B,EAAA,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,CACH,EAEO,cAAA,iBAAiB,SAAU4B,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAChE,EAAG,EAAE,EAGLngB,EAAAA,UAAU,IAAM,EACO,SAAY,CAC/B,GAAI,GAAC2vD,GAAgB,CAACllD,GAAW,CAACkqB,GAElC,CAAAwhC,EAAoB,EAAI,EACpB,GAAA,CAEF,MAAM3nC,EAAU,MAAMmG,EAAQ,gBAAgBg7B,EAAa,YAAallD,CAAO,EAC/EsrD,EAAkBvnC,CAAO,QAClB1rB,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC/CizD,EAAkB,GAAG,CAAA,QACrB,CACAI,EAAoB,EAAK,CAAA,EAE7B,GAEa,GACZ,CAACxG,GAAc,YAAallD,EAASkqB,CAAO,CAAC,EAGhD30B,EAAAA,UAAU,IAAM,CACV,GAAA,CAACg2D,GAAsB,CAACF,EAAgB,OAE5C,MAAMxF,EAAa0F,EAEbI,EADgB,WAAWN,CAAc,EACbxF,EAAc,IAE/BuF,EAAAO,EAAS,UAAU,CAAA,EACnC,CAACJ,EAAoBF,CAAc,CAAC,EAGvC91D,EAAAA,UAAU,IAAM,EACW,SAAY,CACnC,GAAI,GAAC2vD,GAAgB,CAACiG,GAAiB,CAACnrD,GAEpC,GAAA,CACF,MAAM3C,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDoK,EAAe,IAAI9d,EAAgB+jD,EAAa,YAAa,CACjE,iEACA,iDACC7nD,CAAQ,EAEL,CAACmhB,EAAUknC,CAAW,EAAI,MAAM,QAAQ,IAAI,CAChDzmC,EAAa,YAAY,EACzBA,EAAa,YAAY,CAAA,CAC1B,EAEKg4B,EAAet1C,GAAkBwpD,EAAe,EAAE,EAClDrpC,EAAWtD,EAAS,CAAC,EAAIy4B,EAAgByO,EACzC3jC,GAAWvD,EAAS,CAAC,EAAIy4B,EAAgByO,EAE/CtB,EAAgBtlC,GAAmBgD,EAASojC,EAAa,OAAO,UAAY,EAAE,CAAC,EAC/Eb,EAAgBvlC,GAAmBiD,GAASmjC,EAAa,OAAO,UAAY,EAAE,CAAC,QACxE7sD,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,CAAA,CAErD,GAEiB,CAChB,EAAA,CAAC6sD,EAAciG,EAAenrD,CAAO,CAAC,EAEzC,MAAMkmD,EAAwB,SAAY,CACxC,GAAI,CAAClmD,EAAS,CACZnH,EAAM,MAAM,4BAA4B,EACxC,MAAA,CAGE,GAAA,CAACqsD,GAAgB,CAACiG,EAAe,CACnCtyD,EAAM,MAAM,6BAA6B,EACzC,MAAA,CAGF9B,EAAW,EAAI,EACfqc,EAAqB,EAAI,EACzB8E,EAAe,WAAW,EAC1B1E,EAAiB,IAAI,EAEjB,GAAA,CACF,MAAMnW,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDhU,EAAU,MAAMxD,EAAS,aAAa,KAAUkxB,GAAA,OAAOA,EAAE,OAAO,CAAC,EACjE3Z,EAAS,MAAMvX,EAAS,UAAU,EAGlC45C,EAAet1C,GAAkBwpD,EAAe,EAAE,EAExD,GAAItqD,IAAY,MAAO,CAEf,MAAA+1C,EAAgBr4B,GAAkB,KAAK,EAAE,OACzC+9B,EAAkB,IAAIH,GAAiB,CAC3C,sLACA,mLAAA,CACD,EAGKl9B,GAAe,IAAI9d,EACvB+jD,EAAa,YACb,CACE,6DACA,mDACA,qDACA,gDACA,gEACF,EACAtwC,CACF,EAGkB,MAAMqK,GAAa,UAAUjf,EAAS42C,CAAa,EACrDK,IACd/+B,EAAe,UAAU,EAEzB,MADkB,MAAM+G,GAAa,QAAQ23B,EAAet0B,EAAiB,GAC7D,KAAK,GAIjB,MAAAa,GAAaxhB,GAAkBklB,EAAcq+B,EAAa,OAAO,QAAQ,EAAI,IAAM,KACnF9hC,EAAazhB,GAAkBmlB,EAAco+B,EAAa,OAAO,QAAQ,EAAI,IAAM,KAGnF7hC,EAAW,OAAO,KAAK,MAAM,KAAK,MAAQ,GAAI,EAAI,GAAK,EAAE,EAGzDymC,EAAiB5E,EAAa,OAAO,SACrC6E,EAAiB7E,EAAa,OAAO,SAE3ChtC,EAAe,UAAU,EACrB,IAAA0K,EACJ,GAAIknC,GAAkBC,EAAgB,CAEpC,MAAMxnD,EAAQunD,EAAiB5E,EAAa,OAAO,QAAUA,EAAa,OAAO,QAC3ExV,GAAiBoa,EAAiB1mC,EAAaD,GAC/CwsB,GAAema,EAAiB3mC,GAAaC,EAE9CR,EAAA,MAAMhO,EAAO,gBAAgB,CAChC,GAAIgiC,EACJ,KAAM0F,EAAgB,mBAAmB,qBAAsB,CAC7D/5C,EACA00C,EACAvH,GACAC,GACA,MAAM/6B,EAAO,WAAW,EACxByO,CACD,CAAA,CAAA,CACF,CAAA,MAGIT,EAAA,MAAMhO,EAAO,gBAAgB,CAChC,GAAIgiC,EACJ,KAAM0F,EAAgB,mBAAmB,kBAAmB,CAC1D4I,EAAa,OAAO,QACpBA,EAAa,OAAO,QACpBjO,EACA9zB,GACAC,EACA,MAAMxO,EAAO,WAAW,EACxByO,CACD,CAAA,CAAA,CACF,EAGHnL,EAAe,YAAY,EAC3B,MAAM0K,EAAG,KAAK,CAAA,KACT,CAEC,MAAAqnC,EAAiB,IAAI9oD,EACzBod,GAAkB1d,CAAO,EAAE,OAC3B2f,GACA5L,CACF,EAGMqK,EAAe,IAAI9d,EACvB+jD,EAAa,YACb,CACE,6DACA,mDACA,qDACA,gDACA,gEACF,EACAtwC,CACF,EAGkB,MAAMqK,EAAa,UAAUjf,EAASue,GAAkB1d,CAAO,EAAE,MAAM,EACzEo2C,IACd/+B,EAAe,UAAU,EAEzB,MADkB,MAAM+G,EAAa,QAAQV,GAAkB1d,CAAO,EAAE,OAAQyhB,EAAiB,GACjF,KAAK,GAIjB,MAAAa,GAAaxhB,GAAkBklB,EAAcq+B,EAAa,OAAO,UAAY,EAAE,EAAI,IAAM,KACzF9hC,GAAazhB,GAAkBmlB,EAAco+B,EAAa,OAAO,UAAY,EAAE,EAAI,IAAM,KAGzF7hC,EAAW,OAAO,KAAK,MAAM,KAAK,MAAQ,GAAI,EAAI,GAAK,EAAE,EAGzDyrB,EAAeoW,EAAa,OAAO,QAAQ,gBAAkB3mC,GAAkB1d,CAAO,EAAE,KAAK,YAAY,EACzGkuC,EAAemW,EAAa,OAAO,QAAQ,gBAAkB3mC,GAAkB1d,CAAO,EAAE,KAAK,YAAY,EAE/GqX,EAAe,UAAU,EACrB,IAAA0K,EACJ,GAAIksB,GAAgBC,EAAc,CAEhC,MAAMxsC,EAAQusC,EAAeoW,EAAa,OAAO,QAAUA,EAAa,OAAO,QACzExV,EAAiBZ,EAAe1rB,GAAaD,GAC7CwsB,GAAeb,EAAe3rB,GAAaC,GAEjDR,EAAK,MAAMqnC,EAAe,mBACxB1nD,EACA00C,EACAvH,EACAC,GACA3vC,EACAqjB,EACA,CAAE,SAAU,QAAS,CACvB,CAAA,MAGAT,EAAK,MAAMqnC,EAAe,gBACxB/E,EAAa,OAAO,QACpBA,EAAa,OAAO,QACpBjO,EACA9zB,GACAC,GACApjB,EACAqjB,EACA,CAAE,SAAU,QAAS,CACvB,EAGFnL,EAAe,YAAY,EAC3B,MAAM0K,EAAG,KAAK,CAAA,CAIhB1K,EAAe,WAAW,EAC1BxE,EAAgB,EAAI,EAGpB,WAAW,IAAM,CACfN,EAAqB,EAAK,EAC1B8E,EAAe,IAAI,EACnBtE,EAAmB,EAAI,GACtB,GAAI,EAGP,WAAW,IAAM,CACfF,EAAgB,EAAK,GACpB,GAAK,EAGR,MAAMk4C,EAAa,MAAM,aAAa,UAAU5rD,CAAO,EACvDsrD,EAAkBxsC,GAAmB8sC,EAAY,EAAE,CAAC,QAC7CvzD,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC7Bmb,EAAAnb,EAAM,SAAW,4BAA4B,EAC9D6f,EAAe,IAAI,EACnBxE,EAAgB,EAAK,CAAA,QACrB,CACA3c,EAAW,EAAK,CAAA,CAEpB,EAEM80D,EAAiB,IAAM,CAC3BT,EAAiBC,CAAc,EAC/BG,EAAsB,GAAG,CAC3B,EAEMM,EAAoBhb,GAAS,CAE7BA,EAAK,OAAO,SAAS,gBAAkB,6CAA6C,gBACtFA,EAAK,OAAO,KAAO,mBAEjBA,EAAK,OAAO,SAAS,gBAAkB,6CAA6C,gBACtFA,EAAK,OAAO,KAAO,mBAErBoa,EAAgBpa,CAAI,EACpByT,EAAiB,EAAK,EACtB6G,EAAiB,EAAE,EACnBI,EAAsB,IAAI,CAC5B,EAGE,OAAAvxD,EAAA,KAAC,MAAI,CAAA,UAAU,YAEZ,SAAA,CACCwZ,GAAAhe,EAAA,IAACqgB,GAAA,CACC,MAAOjC,EAAW,MAClB,OAAQA,EAAW,OACnB,eAAgB,IAChB,QAAS,GACT,QAAS,GACT,iBAAkB,GAClB,iBAAkB,GAClB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,SAAS,EAC9D,MAAO,CACL,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,OACR,OAAQ,MACR,cAAe,MAAA,CACjB,CACF,EAIF5Z,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,cAAA,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAMsqD,EAAiB,EAAI,EACpC,UAAU,8MAET,SAAA,CACCW,EAAAjrD,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKyvD,EAAa,OAAO,KACzB,IAAKA,EAAa,OAAO,OACzB,UAAU,4DAAA,CACZ,EACAzvD,EAAA,IAAC,MAAA,CACC,IAAKyvD,EAAa,OAAO,KACzB,IAAKA,EAAa,OAAO,OACzB,UAAU,4DAAA,CAAA,CACZ,EACF,EACAjrD,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACb,SAAA,CAAAirD,EAAa,OAAO,OAAO,IAAEA,EAAa,OAAO,MAAA,CACpD,CAAA,CAAA,EACF,EAEAzvD,EAAA,IAAC,OAAK,CAAA,UAAU,gBAAgB,SAAa,gBAAA,EAE/CA,EAAAA,IAACs2D,GAAgB,CAAA,UAAU,uBAAwB,CAAA,CAAA,CAAA,CAAA,CACrD,EACF,EAEC7G,GAGGjrD,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,oBAAA,EACCA,EAAAA,IAAA,MAAA,CAAI,UAAU,yBACZ,SAAC,CAAA,GAAI,GAAI,GAAI,GAAG,EAAE,IAAKowD,GACtB5rD,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMuxD,EAAsB3F,CAAU,EAC/C,UAAW,sDACT0F,IAAuB1F,EACnB,0BACA,qFACN,GAEC,SAAA,CAAAA,EAAW,GAAA,CAAA,EARPA,CAAA,CAUR,CACH,CAAA,CAAA,EACF,EAGA5rD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,kBAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO01D,EACP,SAAWluD,GAAM,CACEmuD,EAAAnuD,EAAE,OAAO,KAAK,EAC/BuuD,EAAsB,IAAI,CAC5B,EACA,YAAY,MACZ,UAAU,oPAAA,CACZ,EACA/1D,EAAA,IAAC,SAAA,CACC,QAASo2D,EACT,UAAU,gIACX,SAAA,KAAA,CAAA,CAED,EACF,EACA5xD,EAAAA,KAAC,MAAI,CAAA,UAAU,2CAA2C,SAAA,CAAA,YAC9CwxD,EAAmB,aAAeJ,EAAe,YAAA,CAC7D,CAAA,CAAA,EACF,EAGApxD,EAAAA,KAAC,MAAI,CAAA,UAAU,0FACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,yDAAyD,SAEvE,mBAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKyvD,EAAa,OAAO,KACzB,IAAKA,EAAa,OAAO,OACzB,UAAU,sBAAA,CACZ,QACC,OAAK,CAAA,UAAU,2CACb,SAAAA,EAAa,OAAO,MACvB,CAAA,CAAA,EACF,EACAzvD,EAAAA,IAAC,QAAK,UAAU,oDACb,gBAAOoxB,CAAY,EAAE,QAAQ,CAAC,CACjC,CAAA,CAAA,EACF,EACA5sB,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKyvD,EAAa,OAAO,KACzB,IAAKA,EAAa,OAAO,OACzB,UAAU,sBAAA,CACZ,QACC,OAAK,CAAA,UAAU,2CACb,SAAAA,EAAa,OAAO,MACvB,CAAA,CAAA,EACF,EACAzvD,EAAAA,IAAC,QAAK,UAAU,oDACb,gBAAOqxB,CAAY,EAAE,QAAQ,CAAC,CACjC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAIFrxB,EAAA,IAAC,SAAA,CACC,QAASywD,EACT,SAAUpvD,GAAW,CAACq0D,EACtB,UAAW;AAAA,YACPr0D,GAAW,CAACq0D,EACV,mFACA,4CACJ;AAAA,UAGD,WAAU,wBAA0B,kBAAA,CACvC,EAGA11D,EAAA,IAACkuD,GAAA,CACC,OAAQW,EACR,QAAS,IAAMC,EAAiB,EAAK,EACrC,SAAUuH,CAAA,CACZ,EAGAr2D,EAAA,IAACyb,GAAA,CACC,OAAQiC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1B8E,EAAe,IAAI,EACnB1E,EAAiB,IAAI,CACvB,EACA,YAAAnC,EACA,KAAM6zC,EACN,MAAO3xC,CAAA,CACT,EAGA9d,EAAA,IAAC2c,GAAA,CACC,OAAQuB,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,OAAStB,GAAW,CACV,QAAA,IAAI,gCAAiCA,CAAM,CAAA,CAErD,CAAA,CACF,EACF,CAEJ,CCx/BA,MAAMzB,GAAQ,CACZ,UAAW,IACRpb,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAAA,IAAC,QAAK,EAAE,6BAA6B,cAAc,QAAQ,eAAe,QAAQ,UAAU,yCAA0C,CAAA,CAAA,CAAA,CACxI,CACF,CAAA,EAEF,MAAO,IACJA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,eAAe,QAC3G,OAAK,CAAA,EAAE,UAAU,cAAc,QAAQ,UAAU,eAAe,QAChE,OAAK,CAAA,EAAE,aAAa,cAAc,QAAQ,UAAU,cAAe,CAAA,CAAA,CAAA,CACtE,CACF,CAAA,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAAA,IAAC,QAAK,EAAE,gBAAgB,cAAc,QAAQ,eAAe,QAAQ,UAAU,iCAAkC,CAAA,CAAA,CAAA,CACnH,CACF,CAAA,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACvGA,EAAAA,IAAC,QAAK,EAAE,UAAU,cAAc,QAAQ,eAAe,QAAQ,UAAU,iCAAkC,CAAA,CAAA,CAAA,CAC7G,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,0EAA2E,CAAA,EACnFA,EAAA,IAAC,OAAA,CAAK,cAAc,QAAQ,UAAU,kDACpC,EAAE,aAAA,CAAA,CAAc,CAAA,CACpB,CACF,CAAA,EAEF,UAAW,IACRA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,oCAAoC,EACjIA,EAAAA,IAAC,QAAK,EAAE,gBAAgB,cAAc,QAAQ,eAAe,QAAQ,UAAU,0CAA2C,CAAA,CAAA,CAAA,CAC5H,CACF,CAAA,CAEJ,EAGM2c,GAAkB,CAAC,CAAE,OAAAjB,EAAQ,QAAAC,EAAS,OAAAiB,KAAa,CACvD,KAAM,CAACC,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAAC2/C,EAAOC,CAAQ,EAAI5/C,EAAAA,SAAS,CAAC,EAEpC,OACGI,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,qBAAqB,QAAAV,EAC9C,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,+EACX,SAAA,sBAAA,CAED,EAEA7X,EAAAA,KAAC,MAAI,CAAA,UAAU,uCACb,SAAA,CAAAxE,EAAAA,IAAC,MAAI,CAAA,UAAU,8BACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGrE,IAAU,CAC/B,MAAMu1C,EAAYv1C,EAAQ,EAExB,OAAAlK,EAAA,IAAC,SAAA,CAEC,UAAU,0DACV,QAAS,IAAM8c,EAAU2iC,CAAS,EAClC,aAAc,IAAMD,EAASC,CAAS,EACtC,aAAc,IAAMD,EAAS,CAAC,EAE9B,SAAAx/C,EAAA,IAACoR,GAAA,CACC,KAAM,GACN,UAAW,sBACRmuC,GAAS1iC,IAAW4iC,EACjB,iBACA,kCACN,EAAA,CAAA,CACF,EAbKA,CAcP,CAEH,CAAA,EACH,EAECz/C,EAAA,IAAA,IAAA,CAAE,UAAU,2CACV,aAAW,EAAI,kBAAoB,cAAc6c,CAAM,QAAQA,IAAW,EAAI,IAAM,EAAE,GACzF,EAEArY,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACT6c,EAAS,IACXD,EAAOC,CAAM,EACLlB,EAAA,EAEZ,EACA,UAAW,sDACTkB,EAAS,EACL,6CACA,kFACN,GACD,SAAA,eAAA,CAED,EACA7c,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,yJACX,SAAA,MAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAGMF,GAAgB,CAAC,CAAE,OAAAC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,SAAAkZ,EAAU,MAAAlyB,KAAY,CAC3E,MAAMmZ,EAAQ,CACZ,CAAE,GAAI,YAAa,MAAO,YAAa,KAAO/b,EAAAA,IAAAob,GAAM,UAAN,CAAA,CAAgB,CAAG,EACjE,CAAE,GAAI,WAAY,MAAO,iBAAkB,KAAOpb,EAAAA,IAAAob,GAAM,SAAN,CAAA,CAAe,CAAG,EACpE,CAAE,GAAI,WAAY,MAAO,qBAAsB,KAAOpb,EAAAA,IAAAob,GAAM,SAAN,CAAA,CAAe,CAAG,EACxE,CAAE,GAAI,aAAc,MAAO,aAAc,KAAOpb,EAAAA,IAAAob,GAAM,WAAN,CAAA,CAAiB,CAAG,EACpE,CAAE,GAAI,YAAa,MAAO,YAAa,KAAOpb,MAAAob,GAAM,UAAN,EAAgB,CAAG,CACnE,EAEMiG,EAAU,EAAQze,EAElBsZ,EAAsBtZ,GACtBA,GAAO,SAAS,eAAe,EAC1B,8CAEFA,GAAO,QAAQ,kCAAmC,EAAE,GAAK,oBAGlE,OACG5C,EAAA,IAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EACnC,SAAA,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEAET,WAAU,2BAA6B,oBAAA,CAC1C,EAEArc,MAAC,OAAI,UAAU,YACZ,WAAM,IAAI,CAACic,EAAM/R,IAAU,CACpB,MAAApG,EAAW8X,IAAgBK,EAAK,GAChCM,EAAc,CAAC8E,GAAWtF,EAAM,UAAerL,GAAAA,EAAE,KAAOkL,CAAW,EAAI1R,EACvEsS,EAAc6E,GAAWzF,IAAgBK,EAAK,GAGlD,OAAAzX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,GAAY,CAAC0Y,EAAc,iCAC3BD,EAAc,iBACdC,EAAc,6BACd,eACF,GAEC,SAAA,CAAKP,EAAA,KACNzX,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CAA6C,SAAAic,EAAK,MAAM,EACvEnY,GAAY,CAACud,GACX7c,EAAA,KAAA,IAAA,CAAE,UAAU,gDACV,SAAA,CAAAyX,EAAK,KAAO,aAAe,2BAC3BA,EAAK,KAAO,YAAc,uBAC1BA,EAAK,KAAO,YAAc,6BAC1BA,EAAK,KAAO,cAAgB,8BAC5BA,EAAK,KAAO,aAAe,iCAAA,CAC9B,CAAA,CAAA,EAEJ,EACCM,SACE,MAAI,CAAA,UAAU,yBAAyB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAChF,SAACvc,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CACxF,CAAA,CAAA,CAAA,EAxBGic,EAAK,EA0BZ,CAEH,CAAA,EACH,EAECoF,GACC7c,EAAA,KAAC,MAAI,CAAA,UAAU,6DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACb5W,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,QAC7D,IAAE,CAAA,UAAU,4BACV,SAAAkc,EAAmBtZ,CAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACA5C,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,iLACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAGDC,IAAgB,aACd5b,MAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,uGACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAEA,SAAwB+zC,IAAkB,CAClC,KAAA,CAAE,QAAAnlD,CAAQ,EAAIE,GAAW,EACzB,CAACqqB,EAAUC,CAAW,EAAIn1B,EAAAA,SAAS,IAAI,EACvC,CAAC81D,EAAeC,CAAgB,EAAI/1D,EAAAA,SAAS,KAAK,EAClD,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAAC8d,EAAmBC,CAAoB,EAAI/d,EAAAA,SAAS,EAAK,EAC1D,CAACgc,EAAa6G,CAAc,EAAI7iB,EAAAA,SAAS,IAAI,EAC7C,CAACoe,EAAcC,CAAe,EAAIre,EAAAA,SAAS,EAAK,EAChD,CAACse,EAAiBC,CAAkB,EAAIve,EAAAA,SAAS,EAAK,EACtD,CAAC22D,EAAaC,CAAc,EAAI52D,EAAAA,SAAS,IAAI,EAC7C,CAACwe,EAAYC,CAAa,EAAIze,WAAS,CAC3C,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,EAGDE,EAAAA,UAAU,IAAM,CACd,MAAMmgB,EAAe,IAAM,CACX5B,EAAA,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,CACH,EAEO,cAAA,iBAAiB,SAAU4B,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAChE,EAAG,EAAE,EAEL,MAAMwwC,EAAwB,SAAY,CACpC,GAAA,CACFnvD,EAAW,EAAI,EACfqc,EAAqB,EAAI,EACzB8E,EAAe,WAAW,EAC1B+zC,EAAe,IAAI,EAGb,MAAAr3C,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAClCmtC,EAAkB,IAAInF,GAAkBjoC,CAAM,EAEhD,GAAA,CAAC2V,GAAU,QACP,MAAA,IAAI,MAAM,sBAAsB,EAIlC,MAAAs7B,EAAa,WAAWsF,CAAa,EAAI,IACzCe,EAAoB,OAAO,KAAK,MAAM,OAAO3hC,EAAS,SAAS,EAAIs7B,CAAU,CAAC,EAEpF3tC,EAAe,UAAU,EAGzB,KAAM,CAAE,QAAA4J,EAAS,QAAAC,CAAY,EAAA,MAAMigC,EAAgB,kBAAkB,CACnE,QAASz3B,EAAS,QAClB,UAAW2hC,EACX,WAAY,EACZ,WAAY,EACZ,SAAU,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,EAAI,IAAA,CAC3C,EAGDh0C,EAAe,YAAY,EAC3B,MAAM8pC,EAAgB,QAAQ,CAC5B,QAASz3B,EAAS,QAClB,UAAWvqB,EACX,WAAY8hB,EACZ,WAAYC,CAAA,CACb,EAGG8jC,IAAe,IACjB3tC,EAAe,SAAS,EAClB,MAAA8pC,EAAgB,KAAKz3B,EAAS,OAAO,GAG7C,QAAQ,IAAI,qBAAsB,CAChC,QAASA,EAAS,QAAQ,SAAS,EACnC,iBAAkB2hC,EAAkB,SAAS,EAC7C,QAASptC,GAAmBgD,EAASyI,EAAS,OAAO,QAAQ,EAC7D,QAASzL,GAAmBiD,EAASwI,EAAS,OAAO,QAAQ,CAAA,CAC9D,EAEDrS,EAAe,WAAW,EAG1B,WAAW,IAAM,CACf9E,EAAqB,EAAK,EAC1B8E,EAAe,IAAI,EAGnB,WAAW,IAAM,CACfxE,EAAgB,EAAI,EAGpB,WAAW,IAAM,CACfE,EAAmB,EAAI,GACtB,GAAI,EAGP,WAAW,IAAM,CACf4W,EAAY,IAAI,EAChB4gC,EAAiB,KAAK,EACtB13C,EAAgB,EAAK,GACpB,GAAK,GACP,GAAG,GACL,GAAI,QAEArb,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9C4zD,EAAe5zD,EAAM,OAAO,EAC5B6f,EAAe,OAAO,CAAA,QACtB,CACAnhB,EAAW,EAAK,CAAA,CAEpB,EAEMqgD,EAAe,MAAO9kC,GAAW,CAC7B,QAAA,IAAI,eAAgBA,CAAM,CAEpC,EAEM65C,EAAqB,IAAM,CAE/Bf,EAAiB,KAAK,CACxB,EAEMgB,EAAyBvG,GAAe,CAE5CuF,GAAkB,EAAMvF,EAAa,KAAK,QAAQ,CAAC,CAAC,CACtD,EAGE,OAAA5rD,EAAA,KAAC,MAAI,CAAA,UAAU,YAEZ,SAAA,CACCwZ,GAAAhe,EAAA,IAACqgB,GAAA,CACC,MAAOjC,EAAW,MAClB,OAAQA,EAAW,OACnB,eAAgB,IAChB,QAAS,GACT,QAAS,GACT,iBAAkB,GAClB,iBAAkB,GAClB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,SAAS,EAC9D,MAAO,CACL,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,OACR,OAAQ,MACR,cAAe,MAAA,CACjB,CACF,EAGA7T,EAqBE/F,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,cAAA,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAM,CAAC,EAChB,UAAU,oNAET,SAAA,CACCswB,EAAAtwB,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAa1nB,EAAS,MAAM,EACjC,IAAKA,EAAS,OAAO,OACrB,UAAU,4DAAA,CACZ,EACA90B,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAa1nB,EAAS,MAAM,EACjC,IAAKA,EAAS,OAAO,OACrB,UAAU,4DAAA,CAAA,CACZ,EACF,EACAtwB,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACb,SAAA,CAAAswB,EAAS,OAAO,OAAO,IAAEA,EAAS,OAAO,MAAA,CAC5C,CAAA,CAAA,EACF,EAEA90B,EAAA,IAAC,OAAK,CAAA,UAAU,gBAAgB,SAAW,cAAA,EAE7CA,EAAA,IAAC,MAAA,CACC,UAAU,qEACV,KAAK,OACL,QAAQ,YACR,OAAO,eAEP,SAAAA,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CAAA,CACF,EACF,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,oBAAA,EACCA,EAAAA,IAAA,MAAA,CAAI,UAAU,yBACZ,SAAC,CAAA,GAAI,GAAI,GAAI,GAAG,EAAE,IAAKowD,GACtB5rD,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMmyD,EAAsBvG,CAAU,EAC/C,UAAU,+MAET,SAAA,CAAAA,EAAW,GAAA,CAAA,EAJPA,CAAA,CAMR,CACH,CAAA,CAAA,EACF,EAGA5rD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,6DAA6D,SAE9E,kBAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO01D,EACP,SAAWluD,GAAMmuD,EAAiBnuD,EAAE,OAAO,KAAK,EAChD,YAAY,MACZ,UAAU,oPAAA,CACZ,EACAxH,EAAA,IAAC,SAAA,CACC,QAAS02D,EACT,UAAU,kJACX,SAAA,KAAA,CAAA,CAED,EACF,EACC12D,EAAA,IAAA,MAAA,CAAI,UAAU,2CAA2C,SAE1D,wBAAA,CAAA,CAAA,EACF,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,oGACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,uDAAuD,SAEtE,mBAAA,EACCA,MAAA,MAAA,CAAI,UAAU,YACZ,YAEGwE,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAa1nB,EAAS,MAAM,EACjC,IAAKA,EAAS,OAAO,OACrB,UAAU,sBAAA,CACZ,QACC,OAAK,CAAA,UAAU,gCACb,SAAAA,EAAS,OAAO,MACnB,CAAA,CAAA,EACF,EACC90B,EAAA,IAAA,OAAA,CAAK,UAAU,4CAA4C,SAE5D,UAAA,CAAA,CAAA,EACF,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAa1nB,EAAS,MAAM,EACjC,IAAKA,EAAS,OAAO,OACrB,UAAU,sBAAA,CACZ,QACC,OAAK,CAAA,UAAU,gCACb,SAAAA,EAAS,OAAO,MACnB,CAAA,CAAA,EACF,EACC90B,EAAA,IAAA,OAAA,CAAK,UAAU,4CAA4C,SAE5D,UAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,EACF,EAGAA,EAAA,IAAC,SAAA,CACC,QAASywD,EACT,SAAUpvD,GAAW,CAACyzB,GAAY,CAAC4gC,GAAiBA,IAAkB,MACtE,UAAW;AAAA,gBACPr0D,GAAW,CAACyzB,GAAY,CAAC4gC,GAAiBA,IAAkB,MAC1D,mFACA,4CACJ;AAAA,cAGD,WAAU,wBAA0B,kBAAA,CAAA,CACvC,EACF,EA/JClxD,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAACogB,IAAS,KAAM,GAAI,UAAU,0CAAA,CAA2C,CAC3E,CAAA,EACCpgB,EAAA,IAAA,KAAA,CAAG,UAAU,2DAA2D,SAEzE,sBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAwC,SAErD,iDAAA,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,KACT,UAAU,kGACX,SAAA,gBAAA,CAAA,CAED,CAAA,CACF,EAmJFA,EAAA,IAACyb,GAAA,CACC,OAAQiC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1B8E,EAAe,IAAI,EACnB+zC,EAAe,IAAI,CACrB,EACA,YAAA56C,EACA,SAAAkZ,EACA,MAAOyhC,CAAA,CACT,EAGAv2D,EAAA,IAAC2c,GAAA,CACC,OAAQuB,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,OAAQwjC,CAAA,CAAA,CACV,EACF,CAEJ,CCxnBA,MAAMplB,GAAkB,mCAGlBuS,GAAiB,EAAI,GAAK,IAC1B8nB,GAAe,CACnB,KAAM,KACN,UAAW,EACX,SAAU,CACR,OAAO,KAAK,MAAS,KAAK,IAAI,EAAI,KAAK,UAAY9nB,EACrD,EACA,IAAIxmC,EAAM,CACR,KAAK,KAAOA,EACP,KAAA,UAAY,KAAK,IAAI,EAEtB,GAAA,CACF,MAAMuuD,EAAiB,KAAK,UAAUvuD,EAAM,CAACyiC,EAAKhrC,IAE5C,OAAOA,GAAU,SACZ,UAAUA,EAAM,SAAU,CAAA,GAE5BA,CACR,EACY,aAAA,QAAQ,eAAgB,KAAK,UAAU,CAClD,KAAM82D,EACN,UAAW,KAAK,SAAA,CACjB,CAAC,QACKj0D,EAAO,CACN,QAAA,KAAK,gCAAiCA,CAAK,CAAA,CAEvD,EACA,MAAO,CACD,GAAA,CACI,MAAAk0D,EAAS,aAAa,QAAQ,cAAc,EAClD,GAAIA,EAAQ,CACV,KAAM,CAAE,KAAAxuD,EAAM,UAAAuH,CAAA,EAAc,KAAK,MAAMinD,CAAM,EAC7C,GAAI,KAAK,MAAQjnD,EAAYi/B,GAE3B,YAAK,KAAO,KAAK,MAAMxmC,EAAM,CAACyiC,EAAKhrC,IAC7B,OAAOA,GAAU,UAAYA,EAAM,WAAW,SAAS,EAClD,OAAOA,EAAM,MAAM,CAAC,CAAC,EAEvBA,CACR,EACD,KAAK,UAAY8P,EACV,EACT,QAEKjN,EAAO,CACN,QAAA,KAAK,mCAAoCA,CAAK,CAAA,CAEjD,MAAA,EACT,EACA,OAAQ,CACN,KAAK,KAAO,KACZ,KAAK,UAAY,EACjB,aAAa,WAAW,cAAc,CAAA,CAE1C,EAGMm0D,GAAqB,CACzB,SAAU,IACV,MAAO,CACD,GAAA,CACI,MAAAD,EAAS,aAAa,QAAQ,oBAAoB,EACxD,GAAIA,EAAQ,CACV,MAAME,EAAS,KAAK,MAAMF,EAAQ,CAAC/rB,EAAKhrC,IAClC,OAAOA,GAAU,UAAYA,EAAM,WAAW,SAAS,EAClD,OAAOA,EAAM,MAAM,CAAC,CAAC,EAEvBA,CACR,EACI,KAAA,KAAO,IAAI,IAAIi3D,CAAM,CAAA,QAErBp0D,EAAO,CACN,QAAA,KAAK,sCAAuCA,CAAK,CAAA,CAE7D,EACA,IAAI2H,EAASiP,EAAU,CACrB,KAAK,KAAK,IAAIjP,EAAQ,YAAA,EAAeiP,CAAQ,EACzC,GAAA,CACI,MAAAy9C,EAAa,KAAK,UAAU,CAAC,GAAG,KAAK,IAAI,EAAG,CAAClsB,EAAKhrC,IAClD,OAAOA,GAAU,SACZ,UAAUA,EAAM,SAAU,CAAA,GAE5BA,CACR,EACY,aAAA,QAAQ,qBAAsBk3D,CAAU,QAC9Cr0D,EAAO,CACN,QAAA,KAAK,qCAAsCA,CAAK,CAAA,CAE5D,EACA,IAAI2H,EAAS,CACX,OAAO,KAAK,KAAK,IAAIA,EAAQ,aAAa,CAAA,CAE9C,EAGAwsD,GAAmB,KAAK,EACxBH,GAAa,KAAK,EAElB,SAAwBM,IAAU,CAC1B,KAAA,CAAE,QAAA3sD,CAAQ,EAAIE,GAAW,EACzBgqB,EAAUjB,GAAW,EACrB,CAACpI,EAAO+iC,CAAQ,EAAIvuD,EAAAA,SAAS,CAAA,CAAE,EAC/B,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACu3D,EAAeC,CAAgB,EAAIx3D,EAAAA,SAAS,EAAE,EAErDE,EAAAA,UAAU,IAAM,EACI,SAAY,CAC5B,GAAI,CAACyK,EAAS,CACZ,QAAQ,IAAI,yBAAyB,EACrC,MAAA,CAGFjJ,EAAW,EAAI,EACX,GAAA,CAKF,GAJQ,QAAA,IAAI,4BAA6BiJ,CAAO,EAChD,QAAQ,IAAI,2BAA2B,EAGnCqsD,GAAa,WAAaA,GAAa,KAAM,CAC/C,QAAQ,IAAI,4BAA4B,EACxCzI,EAASyI,GAAa,IAAI,EAC1Bt1D,EAAW,EAAK,EAChB,MAAA,CAII,MAAAs8B,EAAa,wCAAwCrB,EAAe,GAcpE86B,EAAc,MAXI,MAAM,MAAMz5B,EAAY,CAC9C,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAU,CACnB,QAAS,MACT,GAAI,EACJ,OAAQ,2BACR,OAAQ,CAACrzB,EAAS,OAAO,CAC1B,CAAA,CAAA,CACF,GAEyC,KAAK,EAG3C,GAFI,QAAA,IAAI,kBAAmB8sD,CAAW,EAEtCA,EAAY,QAAQ,cAAe,CAErC,MAAMC,EAAwBD,EAAY,OAAO,cAC9C,OAAOvqD,GAASA,EAAM,eAAiB,KAAK,EAC5C,IAAI,MAAMA,GAAS,CAElB,MAAMyqD,EAAiBR,GAAmB,IAAIjqD,EAAM,eAAe,EACnE,GAAIyqD,EACK,MAAA,CAAE,OAAQA,CAAe,EAa5B,MAAA/9C,EAAW,MAVA,MAAM,MAAMokB,EAAY,CACvC,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAU,CACnB,QAAS,MACT,GAAI,EACJ,OAAQ,2BACR,OAAQ,CAAC9wB,EAAM,eAAe,CAC/B,CAAA,CAAA,CACF,GAC+B,KAAK,EACrC,OAAI0M,EAAS,QACXu9C,GAAmB,IAAIjqD,EAAM,gBAAiB0M,EAAS,MAAM,EAExDA,CAAA,CACR,EAEGg+C,EAAgB,MAAM,QAAQ,IAAIF,CAAqB,EACrD,QAAA,IAAI,kBAAmBE,CAAa,EAGtC,MAAAC,EAAWJ,EAAY,OAAO,cACjC,OAAO,CAACvqD,EAAO5C,IACdstD,EAActtD,CAAK,GAAG,QAAQ,QAAQ,SAAS,QAAQ,CACzD,EAIE,GAFI,QAAA,IAAI,mBAAoButD,CAAQ,EAEpCA,EAAS,OAAS,EAAG,CA8CvB,MAAMpJ,GA5CY,MAAM,QAAQ,IAC9BoJ,EAAS,IAAI,MAAO3qD,GAAU,CACxB,GAAA,CACF,MAAMwoB,EAAcxoB,EAAM,gBAClB,QAAA,IAAI,0BAA2BwoB,CAAW,EAClD,MAAMjK,EAAW,MAAMoJ,EAAQ,qBAAqBa,CAAW,EAC/D,GAAI,CAACjK,EACK,eAAA,IAAI,0BAA2BiK,CAAW,EAC3C,KAIT,KAAM,CAACg5B,EAAgBC,CAAc,EAAI,MAAM,QAAQ,IAAI,CACzDhS,GAAiBlxB,EAAS,MAAM,EAChCkxB,GAAiBlxB,EAAS,MAAM,CAAA,CACjC,EAED,eAAQ,IAAI,mBAAoB,CAC9B,OAAQijC,GAAgB,OACxB,OAAQC,GAAgB,OACxB,SAAUljC,EAAS,QAAA,CACpB,EAEM,CACL,GAAGA,EACH,OAAQijC,EACR,OAAQC,EACR,YAAaj5B,EACb,UAAWxoB,EAAM,aACjB,cAAe,KACf,SAAU,CACR,GAAGue,EAAS,SACZ,kBAAmBhC,GAAmBgC,EAAS,UAAU,UAAY,IAAKijC,GAAgB,UAAY,EAAE,EACxG,kBAAmBjlC,GAAmBgC,EAAS,UAAU,UAAY,IAAKkjC,GAAgB,UAAY,EAAE,CAAA,CAE5G,QACO9V,EAAK,CACJ,eAAA,MAAM,4BAA6BA,CAAG,EACvC,IAAA,CAEV,CAAA,CACH,GAG6B,OAAO4C,GAAQA,IAAS,IAAI,EACjD,QAAA,IAAI,iBAAkBgT,CAAU,EACxCF,EAASE,CAAU,EAGnBuI,GAAa,IAAIvI,CAAU,CAAA,CAC7B,QAEKzrD,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EACrCQ,EAAA,MAAM,yBAA2BR,EAAM,OAAO,CAAA,QACpD,CACAtB,EAAW,EAAK,CAAA,CAEpB,GAEU,CAAA,EACT,CAACiJ,EAASkqB,CAAO,CAAC,EAErB,MAAMijC,EAAe,SAAY,CAC/B,GAAI,CAAClsD,GAAiB2rD,CAAa,EAAG,CACpC/zD,EAAM,MAAM,mCAAmC,EAC/C,MAAA,CAGF9B,EAAW,EAAI,EACX,GAAA,CACF,MAAM+pB,EAAW,MAAMoJ,EAAQ,qBAAqB0iC,CAAa,EACjE,GAAI,CAAC9rC,EAAU,CACbjoB,EAAM,MAAM,+BAA+B,EAC3C,MAAA,CAIF,KAAM,CAACkrD,EAAgBC,CAAc,EAAI,MAAM,QAAQ,IAAI,CACzDhS,GAAiBlxB,EAAS,MAAM,EAChCkxB,GAAiBlxB,EAAS,MAAM,CAAA,CACjC,EAGD8iC,EAAsBwJ,GAAA,CAChB,GAAA,CAACA,EAAU,KAAUx9B,GAAAA,EAAE,YAAY,YAAkB,IAAAg9B,EAAc,YAAa,CAAA,EAAG,CACrF,MAAMS,EAAU,CACd,GAAGvsC,EACH,OAAQijC,EACR,OAAQC,EACR,YAAa4I,EACb,SAAU,CACR,GAAG9rC,EAAS,SACZ,kBAAmBhC,GAAmBgC,EAAS,UAAU,UAAY,IAAKijC,GAAgB,UAAY,EAAE,EACxG,kBAAmBjlC,GAAmBgC,EAAS,UAAU,UAAY,IAAKkjC,GAAgB,UAAY,EAAE,CAAA,CAE5G,EACO,MAAA,CAAC,GAAGoJ,EAAWC,CAAO,CAAA,CAExB,OAAAD,CAAA,CACR,EAEDv0D,EAAM,QAAQ,aAAa,QACpBR,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5CQ,EAAM,MAAM,kCAAkC,CAAA,QAC9C,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEA,OAAKiJ,EASF/F,EAAA,KAAA,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOm3D,EACP,SAAW3vD,GAAM4vD,EAAiB5vD,EAAE,OAAO,KAAK,EAChD,YAAY,wBACZ,UAAU,iKAAA,CACZ,EACAxH,EAAA,IAAC,SAAA,CACC,QAAS03D,EACT,SAAUr2D,EACV,UAAU,oHACX,SAAA,QAAA,CAAA,CAED,EACF,EAECA,EACErB,EAAAA,IAAA,MAAA,CAAI,UAAU,iDACb,eAAC,MAAI,CAAA,UAAU,4EAA6E,CAAA,EAC9F,EACEorB,EAAM,SAAW,SAClB,MAAA,CAAI,UAAU,mBACb,SAAA,OAAC,IAAA,CAAE,UAAU,gBAAgB,SAAc,iBAAA,QAC1C,IAAA,CAAE,UAAU,6BAA6B,SAAgD,kDAAA,CAAA,GAC5F,EAEAA,EAAM,IAAKiwB,GACT72C,EAAA,KAAC,MAAA,CAEC,UAAU,0FAEV,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,QAAQ,QAAU,cAC5B,UAAU,6DACV,QAAU7zC,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,oBAAA,CACjB,CACF,EACAxH,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,QAAQ,QAAU,cAC5B,UAAU,6DACV,QAAU7zC,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,oBAAA,CACjB,CAAA,CACF,EACF,EACChD,EAAAA,KAAA,OAAK,CAAA,UAAU,4CACb,SAAA,CAAA62C,EAAK,QAAQ,QAAU,cAAc,IAAEA,EAAK,QAAQ,QAAU,aAAA,CACjE,CAAA,CAAA,EACF,EACCA,EAAK,WACH72C,OAAA,OAAA,CAAK,UAAU,wBAAwB,SAAA,CAAA,WAC7B,IAAI,KAAK62C,EAAK,SAAS,EAAE,mBAAmB,CAAA,CACvD,CAAA,CAAA,EAEJ,EAEC72C,EAAAA,KAAA,MAAI,CAAA,UAAU,wEACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,WAAY,SAAAq7C,EAAK,YAAY,EAC7Cr7C,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACH,UAAA,UAAU,UAAUq7C,EAAK,WAAW,EAC9Cj4C,EAAM,QAAQ,8BAA8B,CAC9C,EACA,UAAU,uDACV,MAAM,eAEN,gBAAC,MAAI,CAAA,MAAM,6BAA6B,UAAU,UAAU,QAAQ,YAAY,KAAK,OAAO,OAAO,eAAe,YAAY,IAAI,cAAc,QAAQ,eAAe,QACrK,SAAA,CAACpD,EAAA,IAAA,OAAK,CAAA,EAAE,IAAI,EAAE,IAAI,MAAM,KAAK,OAAO,KAAK,GAAG,IAAI,GAAG,IAAI,EACtDA,EAAAA,IAAA,OAAK,CAAA,EAAE,yDAA0D,CAAA,CAAA,CACpE,CAAA,CAAA,CAAA,CACF,EACF,EAECq7C,EAAK,UACH72C,OAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2CACZ,SAAA,CAAA62C,EAAK,QAAQ,QAAU,cAAc,WAAA,EACxC,QACC,MAAI,CAAA,UAAU,oDACZ,SAAAA,EAAK,SAAS,iBACjB,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAC72C,EAAAA,KAAA,MAAA,CAAI,UAAU,2CACZ,SAAA,CAAA62C,EAAK,QAAQ,QAAU,cAAc,WAAA,EACxC,QACC,MAAI,CAAA,UAAU,oDACZ,SAAAA,EAAK,SAAS,iBACjB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGDA,EAAK,WACH72C,OAAA,MAAA,CAAI,UAAU,mDACb,SAAA,OAAC,MAAA,CAAI,UAAU,yDAAyD,SAExE,kBAAA,EACCA,EAAAA,KAAA,MAAI,CAAA,UAAU,4CACZ,SAAA,CAAA6kB,GAAmBgyB,EAAK,WAAa,IAAK,EAAE,EAAE,YAAA,CACjD,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EAlFGA,EAAK,WAqFb,CAAA,CAAA,EAEL,EA7HGr7C,EAAA,IAAA,OAAI,UAAU,mBACb,eAAC,IAAE,CAAA,UAAU,gBAAgB,SAAA,+CAAA,CAA6C,EAC5E,CA6HN,CCtaA,MAAM8uC,GAAiB,EAAI,GAAK,IAG1B+oB,GAAoB,CACxB,QAAS,CACP,GAAI,KACJ,KAAM,mBACN,cAAe,yCACjB,EACA,QAAS,CACP,GAAI,IACJ,KAAM,mBACN,cAAe,iCAAA,CAEnB,EAGMzkB,GAAgB,CAEpB,KAAM,CACJ,CACE,QAAStqB,GAAkB,IAAI,EAAE,KACjC,OAAQ,MACR,KAAM,WACN,SAAU,GACV,KAAM,gBACR,EACA,CACE,QAAS,6CACT,OAAQ,OACR,KAAM,WACN,SAAU,EACV,KAAM,iBACR,EACA,CACE,QAASA,GAAkB,IAAI,EAAE,KACjC,OAAQ,OACR,KAAM,aACN,SAAU,EACV,KAAM,iBAAA,CAEV,EAEA,IAAK,CACH,CACE,QAASA,GAAkB,GAAG,EAAE,KAChC,OAAQ,MACR,KAAM,WACN,SAAU,GACV,KAAM,gBACR,EACA,CACE,QAASA,GAAkB,GAAG,EAAE,KAChC,OAAQ,OACR,KAAM,aACN,SAAU,EACV,KAAM,iBAAA,CACR,CAEJ,EAGMgvC,GAAyB,CAAChrD,EAAO1B,IAAY,CAEjD,MAAM4oC,EAAcZ,GAAchoC,CAAO,GAAG,KAAKgY,GAAKA,EAAE,SAAS,YAAY,IAAMtW,EAAM,SAAS,aAAa,EAC/G,OAAIknC,EACK,CACL,GAAGlnC,EACH,GAAGknC,EACH,KAAMA,EAAY,IACpB,EAGKlnC,CACT,EAMM8pD,GAAe,CACnB,KAAM,KACN,UAAW,EACX,SAAU,CACR,OAAO,KAAK,MAAS,KAAK,IAAI,EAAI,KAAK,UAAY9nB,EACrD,EACA,IAAIxmC,EAAM,CACR,KAAK,KAAOA,EACP,KAAA,UAAY,KAAK,IAAI,EAEtB,GAAA,CACF,MAAMuuD,EAAiB,KAAK,UAAUvuD,EAAM,CAACyiC,EAAKhrC,IAE5C,OAAOA,GAAU,SACZ,UAAUA,EAAM,SAAU,CAAA,GAE5BA,CACR,EACY,aAAA,QAAQ,wBAAyB,KAAK,UAAU,CAC3D,KAAM82D,EACN,UAAW,KAAK,SAAA,CACjB,CAAC,QACKj0D,EAAO,CACN,QAAA,KAAK,gCAAiCA,CAAK,CAAA,CAEvD,EACA,MAAO,CACD,GAAA,CACI,MAAAk0D,EAAS,aAAa,QAAQ,uBAAuB,EAC3D,GAAIA,EAAQ,CACV,KAAM,CAAE,KAAAxuD,EAAM,UAAAuH,CAAA,EAAc,KAAK,MAAMinD,CAAM,EAC7C,GAAI,KAAK,MAAQjnD,EAAYi/B,GAE3B,YAAK,KAAO,KAAK,MAAMxmC,EAAM,CAACyiC,EAAKhrC,IAC7B,OAAOA,GAAU,UAAYA,EAAM,WAAW,SAAS,EAClD,OAAOA,EAAM,MAAM,CAAC,CAAC,EAEvBA,CACR,EACD,KAAK,UAAY8P,EACV,EACT,QAEKjN,EAAO,CACN,QAAA,KAAK,mCAAoCA,CAAK,CAAA,CAEjD,MAAA,EACT,EACA,OAAQ,CACN,KAAK,KAAO,KACZ,KAAK,UAAY,EACjB,aAAa,WAAW,uBAAuB,CAAA,CAEnD,EAMMm0D,GAAqB,CACzB,SAAU,IACV,MAAO,CACD,GAAA,CACI,MAAAD,EAAS,aAAa,QAAQ,6BAA6B,EACjE,GAAIA,EAAQ,CACV,MAAME,EAAS,KAAK,MAAMF,EAAQ,CAAC/rB,EAAKhrC,IAClC,OAAOA,GAAU,UAAYA,EAAM,WAAW,SAAS,EAClD,OAAOA,EAAM,MAAM,CAAC,CAAC,EAEvBA,CACR,EACI,KAAA,KAAO,IAAI,IAAIi3D,CAAM,CAAA,QAErBp0D,EAAO,CACN,QAAA,KAAK,sCAAuCA,CAAK,CAAA,CAE7D,EACA,IAAI2H,EAASiP,EAAU,CACrB,KAAK,KAAK,IAAIjP,EAAQ,YAAA,EAAeiP,CAAQ,EACzC,GAAA,CACI,MAAAy9C,EAAa,KAAK,UAAU,CAAC,GAAG,KAAK,IAAI,EAAG,CAAClsB,EAAKhrC,IAClD,OAAOA,GAAU,SACZ,UAAUA,EAAM,SAAU,CAAA,GAE5BA,CACR,EACY,aAAA,QAAQ,8BAA+Bk3D,CAAU,QACvDr0D,EAAO,CACN,QAAA,KAAK,qCAAsCA,CAAK,CAAA,CAE5D,EACA,IAAI2H,EAAS,CACX,OAAO,KAAK,KAAK,IAAIA,EAAQ,aAAa,CAAA,CAE9C,EAGAwsD,GAAmB,KAAK,EACxBH,GAAa,KAAK,EAGlB,MAAMmB,GAAe,IACnBvzD,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,UAAU,iGAEV,SAAA,CAAAtO,EAAAA,IAAC,OAAI,UAAU,yCACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,iEAAkE,CAAA,EACjFA,EAAAA,IAAC,MAAI,CAAA,UAAU,iEAAkE,CAAA,CAAA,EACnF,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,CAAA,CAC/E,CACF,CAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,6DAA8D,CAAA,EAC7EA,EAAAA,IAAC,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,EAC/E,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,6DAA8D,CAAA,EAC7EA,EAAAA,IAAC,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,CAC/E,CAAA,CAAA,EACF,EACAA,EAAAA,IAAC,OAAI,UAAU,0DACb,eAAC,MAAI,CAAA,UAAU,+DAAgE,CAAA,CACjF,CAAA,CAAA,CAAA,CACF,EAOF,SAAwBk3D,IAAU,CAE1B,KAAA,CAAE,QAAA3sD,CAAQ,EAAIE,GAAW,EACzBgqB,EAAU2nB,GAAY,EACtB,CAAChxB,EAAO+iC,CAAQ,EAAIvuD,EAAAA,SAAS,CAAA,CAAE,EAC/B,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACu3D,EAAeC,CAAgB,EAAIx3D,EAAAA,SAAS,EAAE,EAC/C,CAACud,EAAgBC,CAAiB,EAAIxd,EAAAA,SAAS,IAAI,EACnD,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,EAAE,EAG/Bq0B,EAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,KAAM,CACJ,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEM+jC,EAAe,CACnB,OAAQ,CACN,QAAS,EACT,EAAG,EACL,EACA,KAAM,CACJ,QAAS,EACT,EAAG,EACH,WAAY,CACV,KAAM,SACN,UAAW,IACX,QAAS,EAAA,CAEb,EACA,MAAO,CACL,MAAO,KACP,WAAY,CACV,KAAM,SACN,UAAW,IACX,QAAS,EAAA,CACX,CAEJ,EA+LA,OA5LAl4D,EAAAA,UAAU,MACW,SAAY,CACzB,GAAC,OAAO,SACR,GAAA,CACI,MAAAs+C,EAAa,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACxDhhC,EAAA,SAASghC,EAAY,EAAE,CAAC,QACnCx7C,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,CAAA,CAElD,GACW,EAGP,OAAO,UACT,OAAO,SAAS,GAAG,eAAiBwI,GAAY,CAC5BgS,EAAA,SAAShS,EAAS,EAAE,CAAC,CAAA,CACxC,EAGI,IAAM,CACP,OAAO,UACF,OAAA,SAAS,eAAe,eAAgB,IAAM,CAAA,CAAE,CAE3D,GACC,EAAE,EAGLtL,EAAAA,UAAU,IAAM,EACI,SAAY,CAC5B,GAAI,CAACyK,GAAW,CAACkqB,GAAW,CAACtX,EAC3B,OAOF,GAAI,EAHeA,IAAmB06C,GAAkB,QAAQ,IAC9C16C,IAAmB06C,GAAkB,QAAQ,IAE9C,CACfx6B,EAAS,wDAAwD,EACjE8wB,EAAS,CAAA,CAAE,EACX,MAAA,CAGF7sD,EAAW,EAAI,EACf+7B,EAAS,EAAE,EAEP,GAAA,CAEF,GAAIu5B,GAAa,WAAaA,GAAa,KAAM,CAC/CzI,EAASyI,GAAa,IAAI,EAC1Bt1D,EAAW,EAAK,EAChB,MAAA,CAII,MAAA+7C,EAAgBlgC,IAAmB06C,GAAkB,QAAQ,GAC/DA,GAAkB,QAAQ,cAC1BA,GAAkB,QAAQ,cAGxB/jD,EAAW,MAAM,MAAM,GAAGupC,CAAa,qBAAqB9yC,CAAO,iBAAiB,EACtF,GAAA,CAACuJ,EAAS,GACN,MAAA,IAAI,MAAM,gDAAgD,EAMlE,MAAM2jD,GAHS,MAAM3jD,EAAS,KAAK,GAGX,UACtBnP,EAAK,OAAO,OAAS,UACrBA,EAAK,OACLA,EAAK,MAAM,UACVA,EAAK,MAAM,SAAW,UAAYA,EAAK,MAAM,MAAM,SAAS,YAAY,EACzE,EAAA,IAAYA,GAAAA,EAAK,MAAM,OAAO,EAEhC,GAAI,CAAC8yD,GAAYA,EAAS,SAAW,EAAG,CACtCtJ,EAAS,CAAA,CAAE,EACX,MAAA,CA6DF,MAAME,GAzDY,MAAM,QAAQ,IAC9BoJ,EAAS,IAAI,MAAOniC,GAAgB,CAC9B,GAAA,CAEF,MAAMjK,EAAW,MAAMoJ,EAAQ,qBAAqBa,CAAW,EAC/D,GAAI,CAACjK,EACI,OAAA,KAIT,KAAM,CAAC4sC,EAAgBC,CAAc,EAAI,MAAM,QAAQ,IAAI,CACzDxgD,GAA4B2T,EAAS,OAAO,OAAO,EACnD3T,GAA4B2T,EAAS,OAAO,OAAO,CAAA,CACpD,EAGKijC,EAAiBwJ,GAAuB,CAC5C,GAAGzsC,EAAS,OACZ,KAAM4sC,GAAgB,MAAQ5sC,EAAS,OAAO,KAC9C,OAAQ4sC,GAAgB,QAAU5sC,EAAS,OAAO,OAClD,SAAU4sC,GAAgB,UAAY5sC,EAAS,OAAO,SACtD,KAAM4sC,GAAgB,MAAQ,qBAC9B,SAAUA,GAAgB,UACzB96C,CAAc,EAEXoxC,EAAiBuJ,GAAuB,CAC5C,GAAGzsC,EAAS,OACZ,KAAM6sC,GAAgB,MAAQ7sC,EAAS,OAAO,KAC9C,OAAQ6sC,GAAgB,QAAU7sC,EAAS,OAAO,OAClD,SAAU6sC,GAAgB,UAAY7sC,EAAS,OAAO,SACtD,KAAM6sC,GAAgB,MAAQ,qBAC9B,SAAUA,GAAgB,UACzB/6C,CAAc,EAEV,MAAA,CACL,YAAamY,EACb,OAAQg5B,EACR,OAAQC,EACR,SAAUljC,EAAS,SACnB,UAAWA,EAAS,WAAa,KAAK,MAAM,KAAK,MAAQ,GAAI,EAC7D,QAAS,CACP,OAAQ,EACR,SAAU,EACV,UAAW,EACX,cAAe,EACf,gBAAiB,EACjB,iBAAkB,CAAA,CAEtB,QACOzoB,EAAO,CACN,eAAA,MAAM,4BAA6BA,CAAK,EACzC,IAAA,CAEV,CAAA,CACH,GAIG,OAAey4C,GAAAA,IAAS,IAAI,EAC5B,KAAK,CAAC3xC,EAAG,KAAO,EAAE,KAAO,IAAMA,EAAE,KAAO,EAAE,EAE7CykD,EAASE,CAAU,EAGnBuI,GAAa,IAAIvI,CAAU,QACpBzrD,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EACrCQ,EAAA,MAAM,yBAA2BR,EAAM,OAAO,CAAA,QACpD,CACAtB,EAAW,EAAK,CAAA,CAEpB,GAEU,CACT,EAAA,CAACmzB,EAASlqB,EAAS4S,CAAc,CAAC,EAGfiO,EAAM,OAAeiwB,GAAA,CACnC,MAAAjG,EAAc+hB,EAAc,YAAY,EAE5C,OAAA9b,EAAK,QAAQ,QAAQ,cAAc,SAASjG,CAAW,GACvDiG,EAAK,QAAQ,QAAQ,YAAY,EAAE,SAASjG,CAAW,GACvDiG,EAAK,YAAY,YAAA,EAAc,SAASjG,CAAW,CAEtD,CAAA,EAuBI7qC,EAQDlJ,EAEArB,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU2lB,EACV,QAAQ,SACR,QAAQ,OACR,UAAU,kEAET,SAAC,CAAA,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKzlB,GACtBxO,EAAAA,IAAA+3D,GAAA,CAAA,EAAkBvpD,CAAG,CACvB,CAAA,CACH,EAIA4c,EAAM,SAAW,EAEhBprB,EAAAA,IAAA,MAAA,CAAI,UAAU,iCAAiC,SAEhD,gDAAA,EAMFwE,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAQ,SACR,QAAQ,OACR,SAAU2lB,EACV,UAAU,8CAGT,SAAA,CACCrxB,GAAA5C,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,0HAET,SAAA1L,CAAA,CACH,EAIDua,IAAmB06C,GAAkB,QAAQ,KAAO16C,GAAkB06C,GAAkB,QAAQ,KAAO16C,IACtG3Y,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,wHAEV,SAAA,CAACtO,EAAAA,IAAA,MAAA,CAAI,UAAU,iDAAkD,CAAA,EAChEmd,IAAmB06C,GAAkB,QAAQ,GAAK,mBAAqB,kBAAA,CAAA,CAC1E,EAIFrzD,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAC5B,UAAU,WAEV,SAAA,CAAAtO,EAAA,IAAC,QAAA,CACC,KAAK,OACL,YAAY,4CACZ,MAAOm3D,EACP,SAAW3vD,GAAM4vD,EAAiB5vD,EAAE,OAAO,KAAK,EAChD,UAAU,qMAAA,CACZ,EACAxH,EAAAA,IAACu1C,GAAS,CAAA,UAAU,wDAAyD,CAAA,CAAA,CAAA,CAC/E,EAECl0C,EACCrB,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,UAAU,iDAEV,SAAAtO,EAAAA,IAAC,MAAI,CAAA,UAAU,4EAA6E,CAAA,CAAA,CAAA,EAE5ForB,EAAM,SAAW,EACnBprB,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,MAAO,EAAI,EAClC,QAAS,CAAE,QAAS,EAAG,MAAO,CAAE,EAChC,WAAY,CAAE,SAAU,EAAI,EAC5B,UAAU,oDACX,SAAA,gBAAA,CAAA,EAIDtO,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU2lB,EACV,UAAU,kEAEV,SAACj0B,EAAAA,IAAAinC,GAAA,CACE,SAAM7b,EAAA,IAAKiwB,GACV72C,EAAA,KAAC8J,EAAO,IAAP,CAEC,SAAU0pD,EACV,WAAW,QACX,OAAM,GACN,UAAU,iGAEV,SAAA,CAAAh4D,EAAAA,IAAC,OAAI,UAAU,yCACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,QAAQ,OAClB,UAAU,4DAAA,CACZ,EACAr7C,EAAA,IAAC,MAAA,CACC,IAAKw8C,GAAanB,EAAK,MAAM,EAC7B,IAAKA,EAAK,QAAQ,OAClB,UAAU,4DAAA,CAAA,CACZ,EACF,EACA72C,EAAAA,KAAC,OAAK,CAAA,UAAU,oDACb,SAAA,CAAA62C,EAAK,QAAQ,OAAO,IAAEA,EAAK,QAAQ,MAAA,CACtC,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,mCAAmC,SAAgB,mBAAA,EACnEwE,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACb,SAAA,CAAO6kB,GAAYgyB,EAAK,UAAU,UAAY,IAAKA,EAAK,QAAQ,UAAY,EAAE,EAAE,IAAEA,EAAK,QAAQ,MAAA,CAClG,CAAA,CAAA,EACF,EACA72C,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,mCAAmC,SAAgB,mBAAA,EACnEwE,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACb,SAAA,CAAO6kB,GAAYgyB,EAAK,UAAU,UAAY,IAAKA,EAAK,QAAQ,UAAY,EAAE,EAAE,IAAEA,EAAK,QAAQ,MAAA,CAClG,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAr7C,EAAAA,IAAC,MAAI,CAAA,UAAU,0DACb,SAAAA,EAAA,IAAC,OAAI,UAAU,oDACZ,SAAKq7C,EAAA,WACR,CAAA,CACF,CAAA,CAAA,CAAA,EA7CKA,EAAK,WAAA,CA+Cb,CACH,CAAA,CAAA,CAAA,CACF,CAAA,CAEJ,EAzJGr7C,EAAAA,IAAA,MAAA,CAAI,UAAU,iCAAiC,SAEhD,gDAAA,CAyJN,CC5lBA,MAAMm4D,GAA2B,CAE/B,CACE,OAAU,CAAC,CAAC,aAAgB,UAAW,KAAQ,QAAS,KAAQ,UAAU,EAC1E,KAAQ,YACR,QAAW,CAAC,CAAC,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAU,EACtE,gBAAmB,OACnB,KAAQ,UACV,EACA,CACE,OAAU,CAAC,CAAC,aAAgB,UAAW,KAAQ,QAAS,KAAQ,SAAS,EAAG,CAAC,aAAgB,UAAW,KAAQ,QAAS,KAAQ,UAAU,EAC3I,KAAQ,sBACR,QAAW,CAAC,CAAC,aAAgB,UAAW,KAAQ,GAAI,KAAQ,UAAU,EACtE,gBAAmB,OACnB,KAAQ,UACV,EACA,CACE,OAAU,CAAC,CAAC,aAAgB,UAAW,KAAQ,UAAW,KAAQ,UAAU,EAC5E,KAAQ,YACR,QAAW,CACT,CAAC,aAAgB,SAAU,KAAQ,QAAS,KAAQ,QAAQ,EAC5D,CAAC,aAAgB,UAAW,KAAQ,WAAY,KAAQ,SAAS,EACjE,CAAC,aAAgB,UAAW,KAAQ,SAAU,KAAQ,SAAS,EAC/D,CAAC,aAAgB,UAAW,KAAQ,SAAU,KAAQ,SAAS,EAC/D,CAAC,aAAgB,SAAU,KAAQ,MAAO,KAAQ,QAAQ,EAC1D,CAAC,aAAgB,QAAS,KAAQ,YAAa,KAAQ,OAAO,EAC9D,CAAC,aAAgB,QAAS,KAAQ,YAAa,KAAQ,OAAO,EAC9D,CAAC,aAAgB,UAAW,KAAQ,YAAa,KAAQ,SAAS,EAClE,CAAC,aAAgB,UAAW,KAAQ,2BAA4B,KAAQ,SAAS,EACjF,CAAC,aAAgB,UAAW,KAAQ,2BAA4B,KAAQ,SAAS,EACjF,CAAC,aAAgB,UAAW,KAAQ,cAAe,KAAQ,SAAS,EACpE,CAAC,aAAgB,UAAW,KAAQ,cAAe,KAAQ,SAAS,CACtE,EACA,gBAAmB,OACnB,KAAQ,UAAA,CAEZ,EAEMjR,GAAkB,8CAClBkR,GAA+B,6CAG/BttC,GAAc,CAClB,0FACF,EAGMutC,GAAW,CACf,yMACA,uDACA,0LACA,4QACF,EAGMC,GAAmB,CACvB,0DACF,EAGM7L,GAAM,OAAO,CAAC,GAAK,OAAO,EAAE,EAC5B8L,GAAM,OAAO,CAAC,GAAK,OAAO,EAAE,EAG5BC,GAAsBrP,GAAS,CACnC,MAAMsP,EAAUtP,EAAO,EAAIA,EAAO,GAAKA,EACvC,IAAI5Q,EAAQ,OAAO,IAAI,EAAIggB,GAAM,OAAO,GAAI,EAEvC,OAAAE,EAAU,IACblgB,EAASA,EAAQ,OAAO,IAAI,EAAK,OAAO,GAAI,GAEzCkgB,EAAU,IACblgB,EAASA,EAAQ,OAAO,IAAI,EAAK,OAAO,GAAI,GAEzCkgB,EAAU,IACblgB,EAASA,EAAQ,OAAO,IAAI,EAAK,OAAO,GAAI,GAEzCkgB,EAAU,IACblgB,EAASA,EAAQ,OAAO,IAAI,EAAK,OAAO,GAAI,GAEzCkgB,EAAU,KACblgB,EAASA,EAAQ,OAAO,IAAI,EAAK,OAAO,GAAI,GAEzCkgB,EAAU,KACblgB,EAASA,EAAQ,OAAO,IAAI,EAAK,OAAO,GAAI,GAEzCkgB,EAAU,KACblgB,EAASA,EAAQ,OAAO,IAAI,EAAK,OAAO,GAAI,GAEzCkgB,EAAU,MACblgB,EAASA,EAAQ,OAAO,IAAI,EAAK,OAAO,GAAI,GAEzCkgB,EAAU,MACblgB,EAASA,EAAQ,OAAO,IAAI,EAAK,OAAO,GAAI,GAEzCkgB,EAAU,MACblgB,EAASA,EAAQ,OAAO,IAAI,EAAK,OAAO,GAAI,GAEzCkgB,EAAU,OACblgB,EAASA,EAAQ,OAAO,IAAI,EAAK,OAAO,GAAI,GAEzCkgB,EAAU,OACblgB,EAASA,EAAQ,OAAO,KAAK,EAAK,OAAO,GAAI,GAE1CkgB,EAAU,OACblgB,EAASA,EAAQ,OAAO,IAAM,EAAK,OAAO,GAAI,GAE3CkgB,EAAU,OACblgB,EAASA,EAAQ,OAAO,KAAQ,EAAK,OAAO,GAAI,GAG9C4Q,EAAO,IACD5Q,EAAA,OAAO,oCAAoC,EAAIA,GAGlDA,EAAQggB,EACjB,EAEMG,GAAqB,CAAC9Q,EAAcK,EAAWC,EAAWz2B,IAAc,CACxE,GAAA,CACF,MAAMknC,EAAmB,OAAO/Q,EAAa,SAAA,CAAU,EACjDgR,EAAiBJ,GAAmB,OAAOvQ,CAAS,CAAC,EACrD4Q,EAAiBL,GAAmB,OAAOtQ,CAAS,CAAC,EACrD4Q,EAAc,OAAOrnC,EAAU,SAAA,CAAU,EAE/C,OAAIknC,GAAoBC,EAEPE,EAAcrM,IAAOoM,EAAiBD,IACpCA,EAAiBC,GACzBF,EAAmBE,EAEbC,EAAcrM,IAAOoM,EAAiBF,IACpCA,EAAmBE,GAG/B,OAAO,CAAC,QACRj2D,EAAO,CACN,eAAA,MAAM,+BAAgCA,CAAK,EAC5C,OAAO,CAAC,CAAA,CAEnB,EAEMm2D,GAAqB,CAACnR,EAAcK,EAAWC,EAAWz2B,IAAc,CACxE,GAAA,CACF,MAAMknC,EAAmB,OAAO/Q,EAAa,SAAA,CAAU,EACjDgR,EAAiBJ,GAAmB,OAAOvQ,CAAS,CAAC,EACrD4Q,EAAiBL,GAAmB,OAAOtQ,CAAS,CAAC,EACrD4Q,EAAc,OAAOrnC,EAAU,SAAA,CAAU,EAE/C,OAAIknC,GAAoBC,EAEf,OAAO,CAAC,EACND,EAAmBE,EAEpBC,GAAeH,EAAmBC,GAAmBnM,GAGvDqM,GAAeD,EAAiBD,GAAmBnM,SACpD7pD,EAAO,CACN,eAAA,MAAM,+BAAgCA,CAAK,EAC5C,OAAO,CAAC,CAAA,CAEnB,EAEMo2D,GAAe,CAACj5D,EAAOkM,EAAW,KAAO,CACzC,GAAA,CAAClM,EAAc,MAAA,IACf,GAAA,CAEI,MAAAk5D,EAAcl5D,EAAM,SAAS,EAG7B8zC,EAAY,OAAOqlB,GAAYD,EAAahtD,CAAQ,CAAC,EAG3D,OAAI4nC,EAAY,KACP,WACEA,EAAY,EACdA,EAAU,QAAQ,CAAC,EACjBA,EAAY,IACdA,EAAU,QAAQ,CAAC,EACjBA,EAAY,IACdA,EAAU,eAAe,OAAW,CACzC,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,EAGGA,GAAa,KACPA,EAAY,KAAY,QAAQ,CAAC,EAAI,IACpCA,GAAa,KACdA,EAAY,KAAS,QAAQ,CAAC,EAAI,KAElCA,EAAY,KAAM,QAAQ,CAAC,EAAI,UAGpCjxC,EAAO,CACN,eAAA,MAAM,2BAA4BA,CAAK,EACxC,GAAA,CAEX,EAQMu2D,GAAoB,CAACrkC,EAAUskC,IAC5BA,GAAetkC,EAAS,WAAaskC,GAAetkC,EAAS,UAIhEukC,GAAiB,CACrB,UAAW,YACX,SAAU,WACV,OAAQ,SACR,WAAY,aACZ,UAAW,YACX,MAAO,OACT,EAGMj+C,GAAQ,CACZ,UAAW,IACRpb,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAAAxE,MAAC,QAAK,UAAU,gBAAgB,EAAE,2EAA2E,cAAc,MAAM,QAChI,OAAK,CAAA,UAAU,oCAAoC,EAAE,8CAA8C,cAAc,QAAQ,EAC1HA,EAAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,UAAU,yCAA0C,CAAA,CAAA,CAAA,CACpF,CACF,CAAA,EAEF,SAAU,IACPA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,iBAAiB,cAAc,QAAQ,eAAe,QAAQ,UAAU,iCAAkC,CAAA,EACjHA,EAAA,IAAA,OAAA,CAAK,EAAE,qCAAqC,UAAU,yCAA0C,CAAA,CAAA,CAAA,CACnG,CACF,CAAA,EAEF,OAAQ,IACLA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,iBAAiB,cAAc,QAAQ,eAAe,QAAQ,UAAU,iCAAkC,CAAA,EACjHA,EAAA,IAAA,OAAA,CAAK,EAAE,qCAAqC,UAAU,yCAA0C,CAAA,CAAA,CAAA,CACnG,CACF,CAAA,EAEF,WAAY,IACTA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAACwE,EAAAA,KAAA,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,0EAA2E,CAAA,EACnFA,EAAA,IAAC,OAAA,CAAK,cAAc,QAAQ,UAAU,kDACpC,EAAE,aAAA,CAAA,CAAc,CAAA,CACpB,CACF,CAAA,EAEF,UAAW,IACRA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAAAA,EAAA,IAAC,QAAK,EAAE,kBAAkB,OAAO,eAAe,YAAY,IAAI,cAAc,QAAQ,eAAe,OAAA,CAAQ,CAC/G,CAAA,EAEF,MAAO,IACJA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,SAAAA,EAAA,IAAC,QAAK,EAAE,uDAAuD,OAAO,eAAe,YAAa,IAAK,cAAc,QAAQ,eAAe,OAAQ,CAAA,CACtJ,CAAA,CAEJ,EAEA,SAASs5D,GAAa,CAAE,SAAAxkC,EAAU,SAAAykC,GAAY,CAC5C,KAAM,CAACC,EAAUC,CAAW,EAAI75D,EAAAA,SAAS,IAAI,EACvC,CAAE,KAAMkL,CAAa,EAAIC,GAAgB,EACzC,CAACquD,EAAaM,CAAc,EAAI95D,EAAAA,SAAS,IAAI,EAEnDE,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAM65D,EAAmB,SAAY,CAC/B,GAAA,CACF,MAAM/xD,EAAW,IAAIwX,GAAuBtU,EAAa,SAAS,EAQ5D8uD,EAAW,MAPG,IAAIluD,EACtB0sD,GACAE,GACA1wD,CACF,EAGmC,SAASktB,EAAS,OAAO,EAAE,MAAM,IAAM,IAAI,EAE9E,GAAI,CAAC8kC,EAAU,OAGX,IAAApgD,EACA,GAAAogD,EAAS,WAAW,+BAA+B,EAAG,CAExD,MAAMC,EAAaD,EAAS,MAAM,GAAG,EAAE,CAAC,EACxC,GAAI,CAACC,EAAY,OAEb,GAAA,CACI,MAAAC,EAAa,KAAKD,CAAU,EACvBrgD,EAAA,KAAK,MAAMsgD,CAAU,CAAA,MAC1B,CACN,MAAA,CACF,KAGI,IAAA,CACI,MAAAhmD,EAAW,MAAM,MAAM8lD,CAAQ,EACjC,GAAA,CAAC9lD,EAAS,GAAI,OACP0F,EAAA,MAAM1F,EAAS,KAAK,CAAA,MACzB,CACN,MAAA,CAIA0F,GAAU,OACZigD,EAAYjgD,EAAS,KAAK,CAC5B,MACM,CAAA,CAGV,EAEIsb,GAAU,SAAWhqB,GACN6uD,EAAA,CAElB,EAAA,CAAC7kC,GAAU,QAAShqB,CAAY,CAAC,EAEpChL,EAAAA,UAAU,IAAM,CAwBVg1B,GAAYhqB,IAvBM,SAAY,CAC5B,GAAA,CACF,MAAMlD,EAAW,IAAIwX,GAAuBtU,EAAa,SAAS,EAO5DwqB,EAAc,MANI,IAAI5pB,EAC1Bw7C,GACAp8B,GACAljB,CACF,EAE0C,QACxCktB,EAAS,OAAO,QAChBA,EAAS,OAAO,QAChBA,EAAS,GACX,EAGMw1B,EAAQ,MADO,IAAI5+C,EAAgB4pB,EAAa+iC,GAAUzwD,CAAQ,EACvC,MAAM,EACvC8xD,EAAepP,EAAM,IAAI,CAAA,MACnB,CAAA,CAGV,GAGgB,CAChB,EACC,CAACx1B,EAAUhqB,CAAY,CAAC,GAGL,IAAM,CAC1B,MAAMivD,EAAa,KAAK,IAAI,OAAQjlC,EAAS,SAAS,EAChDklC,EAAa,KAAK,IAAI,OAAQllC,EAAS,SAAS,EAC/C,MAAA,CACL,IAAKilC,EAAa,IAAO,SAAWA,EAAW,QAAQ,CAAC,EACxD,IAAKC,EAAa,OAAS,IAAMA,EAAW,QAAQ,CAAC,CACvD,CACF,GAEiC,QAG9B,MAAI,CAAA,UAAU,4GACb,SAACx1D,EAAA,KAAA,MAAA,CAAI,UAAU,yBAEb,SAAA,CAAAxE,EAAA,IAAC,IAAA,CACC,KAAM,kCAAkC80B,EAAS,OAAO,GACxD,OAAO,SACP,IAAI,sBACJ,UAAU,sHAET,SACC0kC,EAAAx5D,EAAA,IAAC,MAAA,CACC,IAAKw5D,EACL,IAAK,aAAa1kC,EAAS,OAAO,GAClC,UAAU,4BAAA,CACZ,QAEC,MAAI,CAAA,UAAU,iDACb,SAAC90B,EAAA,IAAA,MAAA,CAAI,UAAU,+DAAgE,CAAA,CACjF,CAAA,CAAA,CAEJ,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,EAAS,MAAM,EAAG,IAAKA,EAAS,OAAO,OAAQ,UAAU,4DAA6D,CAAA,EAC5I90B,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,EAAS,MAAM,EAAG,IAAKA,EAAS,OAAO,OAAQ,UAAU,4DAA6D,CAAA,CAAA,EAC/I,SACC,MACC,CAAA,SAAA,CAACtwB,EAAAA,KAAA,MAAA,CAAI,UAAU,oDACZ,SAAA,CAAAswB,EAAS,OAAO,OAAO,IAAEA,EAAS,OAAO,MAAA,EAC5C,EACA90B,EAAAA,IAAC,OAAI,UAAU,0BACZ,aAAgB,MACfwE,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAW,wBAAwBm5D,GAAkBrkC,EAAUskC,CAAW,EAAI,wCAA0C,aAAa,EAAI,CAAA,EAC9Ip5D,EAAAA,IAAC,QAAK,UAAU,yBACb,YAAkB80B,EAAUskC,CAAW,EAAI,WAAa,cAC3D,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACC50D,EAAA,KAAAy1D,GAAA,CAAK,GAAG,MAAM,UAAU,WACvB,SAAA,CAACj6D,EAAAA,IAAAi6D,GAAK,OAAL,CAAY,UAAU,+EACrB,SAACj6D,EAAA,IAAAk6D,GAAA,CAAwB,UAAU,wBAAA,CAAyB,CAC9D,CAAA,EACAl6D,EAAA,IAACoc,GAAA,CACC,GAAIrJ,EAAA,SACJ,MAAM,mCACN,UAAU,+BACV,QAAQ,kCACR,MAAM,iCACN,UAAU,kCACV,QAAQ,+BAER,SAAA/S,EAAAA,IAACi6D,GAAK,MAAL,CAAW,UAAU,8JACpB,SAAAz1D,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAxE,EAAA,IAACi6D,GAAK,KAAL,CACE,SAAC,CAAA,CAAE,OAAAj9B,KACFx4B,EAAA,KAAC,SAAA,CACC,QAAS,IAAM+0D,EAAS,MAAOzkC,CAAQ,EACvC,UAAW,GACTkI,EAAS,gCAAkC,EAC7C,qGAEA,SAAA,CAACh9B,EAAAA,IAAA,MAAA,CAAI,UAAU,wEACb,SAAAA,EAAA,IAAC,QAAK,UAAU,yBAAyB,aAAC,CAC5C,CAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAa,gBAAA,EAC1CA,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAmC,qCAAA,CAAA,CAAA,CAC7E,CAAA,CAAA,CAAA,CAAA,EAGN,QACCi6D,GAAK,KAAL,CACE,SAAC,CAAA,CAAE,OAAAj9B,KACFx4B,EAAA,KAAC,SAAA,CACC,QAAS,IAAM+0D,EAAS,SAAUzkC,CAAQ,EAC1C,UAAW,GACTkI,EAAS,gCAAkC,EAC7C,qGAEA,SAAA,CAACh9B,EAAAA,IAAA,MAAA,CAAI,UAAU,wEACb,SAAAA,EAAA,IAAC,QAAK,UAAU,yBAAyB,aAAC,CAC5C,CAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAgB,mBAAA,EAC7CA,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAmC,qCAAA,CAAA,CAAA,CAC7E,CAAA,CAAA,CAAA,CAAA,EAGN,QACCi6D,GAAK,KAAL,CACE,SAAC,CAAA,CAAE,OAAAj9B,KACFx4B,EAAA,KAAC,SAAA,CACC,QAAS,IAAM+0D,EAAS,UAAWzkC,CAAQ,EAC3C,UAAW,GACTkI,EAAS,gCAAkC,EAC7C,qGAEA,SAAA,CAACh9B,EAAAA,IAAA,MAAA,CAAI,UAAU,wEACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAI,qBACJ,IAAI,WACJ,UAAU,SAAA,CAAA,EAEd,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAY,eAAA,EACzCA,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAwB,0BAAA,CAAA,CAAA,CAClE,CAAA,CAAA,CAAA,CAAA,CAGN,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,4BAA4B,SAE3C,aAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACX,SAAA,EAASswB,EAAA,cAAgB,KAAK,QAAQ,CAAC,EAAE,GAAA,CAC7C,CAAA,CAAA,EACF,EAGAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+CACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,kDACZ,SAAA80B,EAAS,OAAO,OACnB,EACA90B,EAAAA,IAAC,MAAI,CAAA,UAAU,oDACZ,SAAAg5D,GAAalkC,EAAS,QAASA,EAAS,OAAO,QAAQ,CAC1D,CAAA,CAAA,EACF,EACAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,kDACZ,SAAA80B,EAAS,OAAO,OACnB,EACA90B,EAAAA,IAAC,MAAI,CAAA,UAAU,oDACZ,SAAAg5D,GAAalkC,EAAS,QAASA,EAAS,OAAO,QAAQ,CAC1D,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,kDAAkD,SAEjE,iBAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oDACZ,SAAA,CAAAw0D,GAAalkC,EAAS,MAAOA,EAAS,OAAO,QAAQ,EAAE,IAAEA,EAAS,OAAO,MAAA,EAC5E,EACAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,oDACZ,SAAA,CAAAw0D,GAAalkC,EAAS,MAAOA,EAAS,OAAO,QAAQ,EAAE,IAAEA,EAAS,OAAO,MAAA,CAC5E,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,CAEA,SAASqlC,GAAkB,CAAE,OAAAz+C,EAAQ,QAAAC,EAAS,SAAAmZ,GAAY,CACxD,KAAM,CAACzI,EAASk4B,CAAU,EAAI3kD,EAAAA,SAAS,EAAE,EACnC,CAAC0sB,EAASk4B,CAAU,EAAI5kD,EAAAA,SAAS,EAAE,EACnC,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C,CAACw6D,EAAUC,CAAW,EAAIz6D,EAAAA,SAAS,GAAG,EACtC,CAAC06D,EAAUC,CAAW,EAAI36D,EAAAA,SAAS,GAAG,EACtC,CAACw5D,EAAaM,CAAc,EAAI95D,EAAAA,SAAS,IAAI,EAC7C,CAACgoD,EAAc4S,CAAe,EAAI56D,EAAAA,SAAS,IAAI,EAC/C,CAAE,KAAMkL,CAAa,EAAIC,GAAgB,EACzC,CAAE,QAAAR,CAAQ,EAAIE,GAAW,EACzB,CAACmR,EAAa6G,CAAc,EAAI7iB,EAAAA,SAASy5D,GAAe,SAAS,EACjE,CAACz2D,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,IAAI,EAGjC66D,EAAkB7S,GACjBA,EACU,OAAOA,CAAY,EAAI,OAAOA,CAAY,EAAK,KAAO9yB,GAAU,QAAQ,SAAWA,GAAU,QAAQ,UAAe,GAAK,IAD9G,EAMtB4lC,EAAmB,CAAC1uD,EAAQumB,IAAa,CAC7C,GAAI,CAACq1B,GAAgB,CAAC9yB,EAAiB,MAAA,IAEjC,MAAA9B,EAAQynC,EAAe7S,CAAY,EACzC,OAAIr1B,GAEmB,OAAOvmB,CAAM,EAAIgnB,GAClB,QAAQ8B,EAAS,OAAO,QAAQ,GAG/B,OAAO9oB,CAAM,EAAIgnB,GAClB,QAAQ8B,EAAS,OAAO,QAAQ,CAExD,EAGMmwB,EAAuBllD,GAAU,CACrCwkD,EAAWxkD,CAAK,EACZA,GAAS,CAAC,MAAMA,CAAK,EACZykD,EAAAkW,EAAiB36D,EAAO,EAAI,CAAC,EAExCykD,EAAW,EAAE,CAEjB,EAEMU,EAAuBnlD,GAAU,CACrCykD,EAAWzkD,CAAK,EACZA,GAAS,CAAC,MAAMA,CAAK,EACZwkD,EAAAmW,EAAiB36D,EAAO,EAAK,CAAC,EAEzCwkD,EAAW,EAAE,CAEjB,EAEAzkD,EAAAA,UAAU,IAAM,EACQ,SAAY,CAC5B,GAAA,GAACgL,GAAgB,CAACgqB,GAElB,GAAA,CACF,MAAMltB,EAAW,IAAIwX,GAAuBtU,EAAa,SAAS,EAO5DwqB,EAAc,MANI,IAAI5pB,EAC1Bw7C,GACAp8B,GACAljB,CACF,EAE0C,QACxCktB,EAAS,OAAO,QAChBA,EAAS,OAAO,QAChBA,EAAS,GACX,EAGMw1B,EAAQ,MADO,IAAI5+C,EAAgB4pB,EAAa+iC,GAAUzwD,CAAQ,EACvC,MAAM,EACvC8xD,EAAepP,EAAM,IAAI,EACzBkQ,EAAgBlQ,EAAM,YAAY,QAC3B1nD,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,CAAA,CAEpD,GAEc,CAAA,EACb,CAACkI,EAAcgqB,CAAQ,CAAC,EAE3B,MAAM+wB,EAAqB,SAAY,CACjC,GAAA,CAAC/6C,GAAgB,CAACgqB,EAAU,CAC9B1xB,EAAM,MAAM,4CAA4C,EACxD,MAAA,CAGF2hC,EAAa,EAAI,EACjBtiB,EAAe42C,GAAe,SAAS,EACvCh8B,EAAS,IAAI,EAET,GAAA,CAEI,MAAAle,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAGlCmtC,EAAkB,IAAInF,GAAkBjoC,CAAM,EAG9CimC,EAAgBl5C,GACpB,OAAOmgB,CAAO,EAAE,QAAQyI,EAAS,OAAO,QAAQ,EAChDA,EAAS,OAAO,QAClB,EACMuwB,EAAgBn5C,GACpB,OAAOogB,CAAO,EAAE,QAAQwI,EAAS,OAAO,QAAQ,EAChDA,EAAS,OAAO,QAClB,EAGArS,EAAe42C,GAAe,QAAQ,EAGhC,MAAA7sC,EAAiB,IAAI9gB,EACzBopB,EAAS,OAAO,QAChB,CAAC,yEAAyE,EAC1E3V,CACF,EACMsN,EAAiB,IAAI/gB,EACzBopB,EAAS,OAAO,QAChB,CAAC,yEAAyE,EAC1E3V,CACF,EAIA,MADY,MAAMqN,EAAe,QAAQ4rC,GAA8BvrC,EAAiB,GAC9E,KAAK,EAEf,MADY,MAAMJ,EAAe,QAAQ2rC,GAA8BvrC,EAAiB,GAC9E,KAAK,EAEfpK,EAAe42C,GAAe,MAAM,EAGpC,MAAM9R,EAAS,CACb,QAASzyB,EAAS,QAClB,eAAgBswB,EAChB,eAAgBC,EAChB,WAAY,EACZ,WAAY,EACZ,SAAU,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,EAAI,IAC5C,EAYMl4B,EAAK,MATQ,IAAIzhB,EACrB0sD,GACA,CACE,wOACF,EACAj5C,CACF,EAG4B,kBAAkBooC,CAAM,EAEpD9kC,EAAe42C,GAAe,UAAU,EACxC,MAAMlsC,EAAG,KAAK,EAEd1K,EAAe42C,GAAe,SAAS,EACvCj2D,EAAM,QAAQ,8BAA8B,EACpCuY,EAAA,QACD/Y,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9Cy6B,EAASz6B,EAAM,OAAO,EACtB6f,EAAe42C,GAAe,KAAK,EAC7Bj2D,EAAA,MAAM,4BAA8BR,EAAM,OAAO,CAAA,QACvD,CACAmiC,EAAa,EAAK,CAAA,CAEtB,EAEAjlC,OAAAA,EAAAA,UAAU,IAAM,EACQ,SAAY,CAChC,GAAI,GAACgL,GAAgB,CAACgqB,GAAY,CAACvqB,GAE/B,GAAA,CACF,MAAM3C,EAAW,IAAIwX,GAAuBtU,EAAa,SAAS,EAC5D0hB,EAAiB,IAAI9gB,EACzBopB,EAAS,OAAO,QAChB,CAAC,oDAAoD,EACrDltB,CACF,EACM6kB,EAAiB,IAAI/gB,EACzBopB,EAAS,OAAO,QAChB,CAAC,oDAAoD,EACrDltB,CACF,EAEM,CAAC+yD,EAAMC,CAAI,EAAI,MAAM,QAAQ,IAAI,CACrCpuC,EAAe,UAAUjiB,CAAO,EAChCkiB,EAAe,UAAUliB,CAAO,CAAA,CACjC,EAED8vD,EAAYrB,GAAa2B,EAAM7lC,EAAS,OAAO,QAAQ,CAAC,EACxDylC,EAAYvB,GAAa4B,EAAM9lC,EAAS,OAAO,QAAQ,CAAC,QACjDlyB,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,CAAA,CAEnD,GAEc,CACb,EAAA,CAACkI,EAAcgqB,EAAUvqB,CAAO,CAAC,SAGjC8R,GAAO,CAAA,KAAMX,EAAQ,QAAAC,EAAkB,UAAU,gBAChD,SAAA,CAAA3b,EAAA,IAAC,MAAI,CAAA,UAAU,4BAA4B,cAAY,OAAO,EAC9DA,EAAAA,IAAC,OAAI,UAAU,qDACb,gBAACqc,GAAO,MAAP,CAAa,UAAU,uEAEtB,SAAA,CAAC7X,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,SAAA,CAAO,QAAS2b,EAAS,UAAU,uBAClC,SAAC3b,EAAAA,IAAA2iC,GAAA,CAAU,UAAU,uCAAA,CAAwC,CAC/D,CAAA,EACAn+B,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,EACzG90B,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,CAAA,EAC5G,EACC90B,EAAA,IAAA,MAAA,CAAI,UAAU,8BACb,SAACA,EAAAA,IAAA,MAAA,CAAI,IAAI,qBAAqB,IAAI,WAAW,UAAU,SAAA,CAAU,CACnE,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,OAAI,UAAU,0BACb,SAACwE,EAAA,KAAA,OAAA,CAAK,UAAU,sDACb,SAAA,CAAAswB,GAAU,QAAQ,OAAO,IAAEA,GAAU,QAAQ,MAAA,CAAA,CAChD,CACF,CAAA,EACAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAgB40D,IAAA,MACdp5D,EAAAA,IAAA,OAAA,CAAK,UAAU,yBACb,YAAkB80B,EAAUskC,CAAW,EAAI,WAAa,cAC3D,CAAA,EAEF50D,EAAAA,KAAC,OAAK,CAAA,UAAU,2CAA2C,SAAA,CAAA,OACpDswB,GAAU,IAAM,KAAO,QAAQ,CAAC,EAAE,GAAA,CACzC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QACC,SAAO,CAAA,UAAU,2DAChB,SAAAtwB,OAAC,OAAI,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,OAAO,MAAM,6BAA6B,UAAU,gCACvG,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,EAAE,iKAAiK,KAAK,eAAc,EAC3LA,EAAA,IAAA,OAAA,CAAK,EAAE,iKAAiK,KAAK,eAAc,EAC3LA,EAAA,IAAA,OAAA,CAAK,EAAE,oJAAoJ,KAAK,cAAc,CAAA,CAAA,CAAA,CACjL,CACF,CAAA,CAAA,EACF,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,QACzG,OAAK,CAAA,UAAU,4CAA6C,SAAAA,GAAU,QAAQ,MAAO,CAAA,CAAA,EACxF,EACAtwB,EAAA,KAAC,SAAA,CACC,QAAS,IAAMygD,EAAoBmV,CAAQ,EAC3C,UAAU,iDACX,SAAA,CAAA,YACWA,CAAA,CAAA,CAAA,CACZ,EACF,EACAp6D,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAOqsB,EACP,SAAW7kB,GAAMy9C,EAAoBz9C,EAAE,OAAO,KAAK,EACnD,UAAU,2HACV,YAAY,GAAA,CACd,EACCxH,EAAA,IAAA,MAAA,CAAI,UAAU,gDAAgD,SAAE,IAAA,CAAA,CAAA,EACnE,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,gDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,QACzG,OAAK,CAAA,UAAU,4CAA6C,SAAAA,GAAU,QAAQ,MAAO,CAAA,CAAA,EACxF,EACAtwB,EAAA,KAAC,SAAA,CACC,QAAS,IAAM0gD,EAAoBoV,CAAQ,EAC3C,UAAU,iDACX,SAAA,CAAA,YACWA,CAAA,CAAA,CAAA,CACZ,EACF,EACAt6D,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAOssB,EACP,SAAW9kB,GAAM09C,EAAoB19C,EAAE,OAAO,KAAK,EACnD,UAAU,2HACV,YAAY,GAAA,CACd,EACCxH,EAAA,IAAA,MAAA,CAAI,UAAU,gDAAgD,SAAE,IAAA,CAAA,CAAA,EACnE,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yDACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,2CAA2C,SAAgB,mBAAA,EAG1EwE,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,2CAA2C,SAAU,aAAA,EACrEwE,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACZ,SAAA,EAAUswB,GAAA,cAAgB,KAAK,QAAQ,CAAC,EAAE,GAAA,CAC9C,CAAA,CAAA,EACF,EAGAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,EAC1GtwB,EAAAA,KAAC,OAAK,CAAA,UAAU,2CAA2C,SAAA,CAAA,WAChDswB,GAAU,QAAQ,MAAA,CAC7B,CAAA,CAAA,EACF,EACA90B,EAAAA,IAAC,OAAK,CAAA,UAAU,4CACb,SAAAg5D,GAAalkC,GAAU,QAASA,GAAU,QAAQ,QAAQ,CAC7D,CAAA,CAAA,EACF,EAGAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,EAC1GtwB,EAAAA,KAAC,OAAK,CAAA,UAAU,2CAA2C,SAAA,CAAA,WAChDswB,GAAU,QAAQ,MAAA,CAC7B,CAAA,CAAA,EACF,EACA90B,EAAAA,IAAC,OAAK,CAAA,UAAU,4CACb,SAAAg5D,GAAalkC,GAAU,QAASA,GAAU,QAAQ,QAAQ,CAC7D,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGA90B,EAAA,IAAC,SAAA,CACC,QAAS6lD,EACT,SAAU,CAACx5B,GAAW,CAACC,GAAWwY,EAClC,UAAW,2DACT,CAACzY,GAAW,CAACC,EACT,iEACA,+CACN,GAEC,SACCwY,EAAAtgC,OAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,2DAA4D,CAAA,EAC3EA,EAAAA,IAAC,QAAK,SAAS,WAAA,CAAA,CAAA,CAAA,CACjB,EAEA,KAAA,CAEJ,QAGCoc,GAAW,CAAA,OAAM,GAAC,KAAM0oB,EAAW,GAAI/xB,WACtC,SAAAvO,EAAA,KAAC6X,GAAA,CACC,GAAG,MACH,UAAU,gBACV,QAAS,IAAM,EACTT,IAAgBy9C,GAAe,WAAaz9C,IAAgBy9C,GAAe,QAC7Et0B,EAAa,EAAK,CAEtB,EAEA,SAAA,CAAA/kC,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,uLACtB,SAAA,CAAA7X,EAAA,KAAC6X,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEAET,SAAA,CAAAzZ,EAAQ,yBAA2B,mBACnC,CAACA,GAASkyB,GACRtwB,EAAA,KAAA,MAAA,CAAI,UAAU,+DACZ,SAAA,CAAAswB,EAAS,OAAO,OAAO,IAAEA,EAAS,OAAO,MAAA,CAC5C,CAAA,CAAA,CAAA,CAEJ,EAEAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CAAA,CACC,CAAE,KAAM60D,GAAe,UAAW,MAAO,YAAa,KAAMj+C,GAAM,SAAU,EAC5E,CAAE,KAAMi+C,GAAe,SAAU,MAAO,iBAAkB,KAAMj+C,GAAM,QAAS,EAC/E,CAAE,KAAMi+C,GAAe,OAAQ,MAAO,mBAAoB,KAAMj+C,GAAM,MAAO,EAC7E,CAAE,KAAMi+C,GAAe,WAAY,MAAO,aAAc,KAAMj+C,GAAM,UAAW,EAC/E,CAAE,KAAMi+C,GAAe,UAAW,MAAO,YAAa,KAAMj+C,GAAM,SAAU,CAAA,EAC5E,IAAI,CAAC,CAAE,KAAAa,EAAM,MAAA4+C,EAAO,KAAMv+C,KAAW,CACrC,MAAMxY,EAAW8X,IAAgBK,EAC3BM,EAAc,CAAC3Z,GAAS,OAAO,OAAOy2D,EAAc,EAAE,QAAQz9C,CAAW,EAAI,OAAO,OAAOy9C,EAAc,EAAE,QAAQp9C,CAAI,EACvHO,EAAc5Z,GAASgZ,IAAgBK,EAG3C,OAAAzX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,EACI,iCACAyY,EACA,iBACAC,EACA,6BACA,eACN,GAEA,SAAA,CAAAxc,EAAA,IAACsc,EAAK,EAAA,EACN9X,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,4CAA6C,SAAM66D,EAAA,EAClE/2D,GAAY,CAAClB,GACX4B,EAAA,KAAA,IAAA,CAAE,UAAU,gDACV,SAAA,CAAAyX,IAASo9C,GAAe,WAAa,2BACrCp9C,IAASo9C,GAAe,UAAY,aAAavkC,GAAU,QAAQ,MAAM,QAAQA,GAAU,QAAQ,MAAM,GACzG7Y,IAASo9C,GAAe,QACtB70D,EAAA,KAAA,OAAA,CAAK,UAAU,0BAA0B,SAAA,CAAA,uBACnBswB,GAAU,QAAQ,OAAO,IAAEA,GAAU,QAAQ,OAAO,OAAA,EAC3E,EAED7Y,IAASo9C,GAAe,YAAc,8BACtCp9C,IAASo9C,GAAe,WACtB70D,EAAA,KAAA,OAAA,CAAK,UAAU,0BAA0B,SAAA,CAAA,mCACPswB,GAAU,QAAQ,OAAO,IAAEA,GAAU,QAAQ,OAAO,QAAA,CACvF,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEJ,EACCvY,SACE,MAAI,CAAA,UAAU,yBAAyB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAChF,SAACvc,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CACxF,CAAA,CAAA,CAAA,EAnCGic,CAqCP,CAAA,CAEH,EAEArZ,SACE,MAAI,CAAA,UAAU,6DACb,SAAC4B,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACb5W,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,EAC7DA,EAAA,IAAA,IAAA,CAAE,UAAU,4BACV,SACH4C,CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAEJ,GAEEgZ,IAAgBy9C,GAAe,WAAaz2D,IAC3C5C,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM+kC,EAAa,EAAK,EACjC,UAAU,uGACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ,CAEA,SAAS+1B,GAAqB,CAAE,OAAAp/C,EAAQ,QAAAC,EAAS,SAAAmZ,GAAY,CAC3D,KAAM,CAACs7B,EAAY2K,CAAa,EAAIn7D,EAAAA,SAAS,CAAC,EACxC,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C,CAAE,KAAMkL,CAAa,EAAIC,GAAgB,EACzC,CAAC6Q,EAAa6G,CAAc,EAAI7iB,EAAAA,SAASy5D,GAAe,SAAS,EACjE,CAACz2D,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,IAAI,EACjC,CAACysB,EAASk4B,CAAU,EAAI3kD,EAAAA,SAAS,GAAG,EACpC,CAAC0sB,EAASk4B,CAAU,EAAI5kD,EAAAA,SAAS,GAAG,EAG1CE,EAAAA,UAAU,IAAM,CACd,GAAIg1B,GAAYs7B,EAAY,CACpB,MAAA4K,EAAgB,OAAOlmC,EAAS,OAAO,EAAI,OAAOs7B,CAAU,EAAK,OAAO,GAAG,EAC3E6K,EAAgB,OAAOnmC,EAAS,OAAO,EAAI,OAAOs7B,CAAU,EAAK,OAAO,GAAG,EACjF7L,EAAWyU,GAAagC,EAAclmC,EAAS,OAAO,QAAQ,CAAC,EAC/D0vB,EAAWwU,GAAaiC,EAAcnmC,EAAS,OAAO,QAAQ,CAAC,CAAA,MAE/DyvB,EAAW,GAAG,EACdC,EAAW,GAAG,CAChB,EACC,CAAC4L,EAAYt7B,CAAQ,CAAC,EAEzB,MAAM27B,EAAwB,SAAY,CACpC,GAAA,CAAC3lD,GAAgB,CAACgqB,EAAU,CAC9B1xB,EAAM,MAAM,4CAA4C,EACxD,MAAA,CAGF2hC,EAAa,EAAI,EACjBtiB,EAAe42C,GAAe,SAAS,EACvCh8B,EAAS,IAAI,EAET,GAAA,CAEI,MAAAle,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAGlCq3C,EAAqB,OAAO3hC,EAAS,SAAS,EAAI,OAAOs7B,CAAU,EAAK,OAAO,GAAG,EAExF3tC,EAAe42C,GAAe,MAAM,EAG9B,MAAA6B,EAAa,IAAIxvD,EACrB0sD,GACA,CACE,wLACF,EACAj5C,CACF,EAGMooC,EAAS,CACb,QAASzyB,EAAS,QAClB,UAAW2hC,EACX,WAAY,EACZ,WAAY,EACZ,SAAU,KAAK,MAAM,KAAK,IAAI,EAAI,GAAI,EAAI,IAC5C,EAGMtpC,EAAK,MAAM+tC,EAAW,kBAAkB3T,CAAM,EAEpD9kC,EAAe42C,GAAe,UAAU,EACxC,MAAMlsC,EAAG,KAAK,EAEd1K,EAAe42C,GAAe,SAAS,EACvCj2D,EAAM,QAAQ,gCAAgC,EACtCuY,EAAA,QACD/Y,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EAChDy6B,EAASz6B,EAAM,OAAO,EACtB6f,EAAe42C,GAAe,KAAK,EAC7Bj2D,EAAA,MAAM,+BAAiCR,EAAM,OAAO,CAAA,QAC1D,CACAmiC,EAAa,EAAK,CAAA,CAEtB,EAEA,cACG1oB,GAAO,CAAA,KAAMX,EAAQ,QAAAC,EAAkB,UAAU,gBAChD,SAAA,CAAA3b,EAAA,IAAC,MAAI,CAAA,UAAU,4BAA4B,cAAY,OAAO,EAC9DA,EAAAA,IAAC,OAAI,UAAU,qDACb,gBAACqc,GAAO,MAAP,CAAa,UAAU,uEAEtB,SAAA,CAAArc,EAAAA,IAAC,OAAI,UAAU,yCACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,SAAA,CAAO,QAAS2b,EAAS,UAAU,uBAClC,SAAC3b,EAAAA,IAAA2iC,GAAA,CAAU,UAAU,uCAAA,CAAwC,CAC/D,CAAA,EACAn+B,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,EACzG90B,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,CAAA,EAC5G,EACC90B,EAAA,IAAA,MAAA,CAAI,UAAU,8BACb,SAACA,EAAAA,IAAA,MAAA,CAAI,IAAI,qBAAqB,IAAI,WAAW,UAAU,SAAA,CAAU,CACnE,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,OAAI,UAAU,0BACb,SAACwE,EAAA,KAAA,OAAA,CAAK,UAAU,sDACb,SAAA,CAAAswB,GAAU,QAAQ,OAAO,IAAEA,GAAU,QAAQ,MAAA,CAAA,CAChD,CACF,CAAA,EACAtwB,EAAAA,KAAC,OAAK,CAAA,UAAU,2CAA2C,SAAA,CAAA,OACpDswB,GAAU,IAAM,KAAO,QAAQ,CAAC,EAAE,GAAA,CACzC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,oDAAoD,SAAgB,mBAAA,EACpFwE,EAAAA,KAAC,OAAK,CAAA,UAAU,yBAA0B,SAAA,CAAA4rD,EAAW,GAAA,CAAC,CAAA,CAAA,EACxD,EACCpwD,EAAAA,IAAA,MAAA,CAAI,UAAU,yBACZ,SAAC,CAAA,GAAI,GAAI,GAAI,GAAG,EAAE,IAAKD,GACtByE,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMu2D,EAAch7D,CAAK,EAClC,UAAW,wDACTqwD,IAAerwD,EACX,0BACA,8GACN,GAEC,SAAA,CAAAA,EAAM,GAAA,CAAA,EARFA,CAAA,CAUR,CACH,CAAA,CAAA,EACF,EAGAyE,EAAAA,KAAC,MAAI,CAAA,UAAU,yDACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,2CAA2C,SAAgB,mBAAA,EAG1EwE,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,2CAA2C,SAAU,aAAA,EACrEwE,EAAAA,KAAC,OAAK,CAAA,UAAU,4CACZ,SAAA,EAAUswB,GAAA,cAAgB,KAAK,QAAQ,CAAC,EAAE,GAAA,CAC9C,CAAA,CAAA,EACF,EAGAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,EAC1GtwB,EAAAA,KAAC,OAAK,CAAA,UAAU,2CAA2C,SAAA,CAAA,WAChDswB,GAAU,QAAQ,MAAA,CAC7B,CAAA,CAAA,EACF,EACA90B,EAAAA,IAAC,OAAK,CAAA,UAAU,4CACb,SAAAg5D,GAAalkC,GAAU,QAASA,GAAU,QAAQ,QAAQ,CAC7D,CAAA,CAAA,EACF,EAGAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,EAC1GtwB,EAAAA,KAAC,OAAK,CAAA,UAAU,2CAA2C,SAAA,CAAA,WAChDswB,GAAU,QAAQ,MAAA,CAC7B,CAAA,CAAA,EACF,EACA90B,EAAAA,IAAC,OAAK,CAAA,UAAU,4CACb,SAAAg5D,GAAalkC,GAAU,QAASA,GAAU,QAAQ,QAAQ,CAC7D,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,yDACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,2CAA2C,SAAiB,oBAAA,EAG3EwE,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,QACzG,OAAK,CAAA,UAAU,4CACb,SAAAA,GAAU,QAAQ,MACrB,CAAA,CAAA,EACF,EACC90B,EAAA,IAAA,OAAA,CAAK,UAAU,4CACb,SACHqsB,CAAA,CAAA,CAAA,EACF,EAGA7nB,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,QACzG,OAAK,CAAA,UAAU,4CACb,SAAAA,GAAU,QAAQ,MACrB,CAAA,CAAA,EACF,EACC90B,EAAA,IAAA,OAAA,CAAK,UAAU,4CACb,SACHssB,CAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGAtsB,EAAA,IAAC,SAAA,CACC,QAASywD,EACT,SAAU,CAACL,GAActrB,EACzB,UAAW,4EACRsrB,EAEG,gDADA,gEAEN,GAEC,SACCtrB,EAAAtgC,OAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,2DAA4D,CAAA,EAC3EA,EAAAA,IAAC,QAAK,SAAW,aAAA,CAAA,CAAA,CAAA,CACnB,EAEA,QAAA,CAAA,CAEJ,EACF,QAGCoc,GAAW,CAAA,OAAM,GAAC,KAAM0oB,EAAW,GAAI/xB,WACtC,SAAAvO,EAAA,KAAC6X,GAAA,CACC,GAAG,MACH,UAAU,gBACV,QAAS,IAAM,EACTT,IAAgBy9C,GAAe,WAAaz9C,IAAgBy9C,GAAe,QAC7Et0B,EAAa,EAAK,CAEtB,EAEA,SAAA,CAAA/kC,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,uLACtB,SAAA,CAAA7X,EAAA,KAAC6X,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEAET,SAAA,CAAAzZ,EAAQ,2BAA6B,qBACrC,CAACA,GAASkyB,GACRtwB,EAAA,KAAA,MAAA,CAAI,UAAU,+DACZ,SAAA,CAAAswB,EAAS,OAAO,OAAO,IAAEA,EAAS,OAAO,MAAA,CAC5C,CAAA,CAAA,CAAA,CAEJ,EAEAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CAAA,CACC,CAAE,KAAM60D,GAAe,UAAW,MAAO,YAAa,KAAMj+C,GAAM,SAAU,EAC5E,CAAE,KAAMi+C,GAAe,OAAQ,MAAO,qBAAsB,KAAM,IAC/Dr5D,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAE,CAAA,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACA,EAAAA,IAAA,OAAA,CAAK,EAAE,UAAU,cAAc,QAAQ,eAAe,QAAQ,UAAU,iCAAkC,CAAA,EAC1GA,EAAA,IAAA,OAAA,CAAK,EAAE,qCAAqC,UAAU,yCAA0C,CAAA,CAAA,CACnG,CAAA,CACF,CAAA,CACA,EACF,CAAE,KAAMq5D,GAAe,WAAY,MAAO,aAAc,KAAMj+C,GAAM,UAAW,EAC/E,CAAE,KAAMi+C,GAAe,UAAW,MAAO,YAAa,KAAMj+C,GAAM,SAAU,CAAA,EAC5E,IAAI,CAAC,CAAE,KAAAa,EAAM,MAAA4+C,EAAO,KAAMv+C,KAAW,CACrC,MAAMxY,EAAW8X,IAAgBK,EAC3BM,EAAc,CAAC3Z,GAAS,OAAO,OAAOy2D,EAAc,EAAE,QAAQz9C,CAAW,EAAI,OAAO,OAAOy9C,EAAc,EAAE,QAAQp9C,CAAI,EACvHO,EAAc5Z,GAASgZ,IAAgBK,EAG3C,OAAAzX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,GAAY,CAAC0Y,EAAc,iCAC3BD,EAAc,iBACdC,EAAc,6BACd,eACF,GAEA,SAAA,CAAAxc,EAAA,IAACsc,EAAK,EAAA,EACN9X,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,4CAA6C,SAAM66D,EAAA,EAClE/2D,GAAY,CAAClB,GACX4B,EAAA,KAAA,IAAA,CAAE,UAAU,gDACV,SAAA,CAAAyX,IAASo9C,GAAe,WAAa,2BACrCp9C,IAASo9C,GAAe,QACtB70D,EAAA,KAAA,OAAA,CAAK,UAAU,0BAA0B,SAAA,CAAA,YAC9B4rD,EAAW,oBAAkBt7B,GAAU,QAAQ,OAAO,IAAEA,GAAU,QAAQ,OAAO,OAAA,EAC7F,EAED7Y,IAASo9C,GAAe,YAAc,8BACtCp9C,IAASo9C,GAAe,WACtB70D,EAAA,KAAA,OAAA,CAAK,UAAU,0BAA0B,SAAA,CAAA,uCACHswB,GAAU,QAAQ,OAAO,IAAEA,GAAU,QAAQ,OAAO,QAAA,CAC3F,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEJ,EACCvY,SACE,MAAI,CAAA,UAAU,yBAAyB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAChF,SAACvc,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CACxF,CAAA,CAAA,CAAA,EA/BGic,CAiCP,CAAA,CAEH,EAEArZ,SACE,MAAI,CAAA,UAAU,6DACb,SAAC4B,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACb5W,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,EAC7DA,EAAA,IAAA,IAAA,CAAE,UAAU,4BACV,SACH4C,CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAEJ,GAEEgZ,IAAgBy9C,GAAe,WAAaz2D,IAC3C5C,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM+kC,EAAa,EAAK,EACjC,UAAU,uGACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ,CAEA,SAASo2B,GAAiB,CAAE,OAAAz/C,EAAQ,QAAAC,EAAS,SAAAmZ,GAAY,CACvD,KAAM,CAACgQ,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C,CAAE,KAAMkL,CAAa,EAAIC,GAAgB,EACzC,CAAC6Q,EAAa6G,CAAc,EAAI7iB,EAAAA,SAASy5D,GAAe,SAAS,EACjE,CAACz2D,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,IAAI,EAEjCw7D,EAAoB,SAAY,CAChC,GAAA,CAACtwD,GAAgB,CAACgqB,EAAU,CAC9B1xB,EAAM,MAAM,4CAA4C,EACxD,MAAA,CAGF2hC,EAAa,EAAI,EACjBtiB,EAAe42C,GAAe,SAAS,EACvCh8B,EAAS,IAAI,EAET,GAAA,CAEI,MAAAle,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAExCqD,EAAe42C,GAAe,MAAM,EAG9B,MAAA6B,EAAa,IAAIxvD,EACrB0sD,GACA,CACE,4JACF,EACAj5C,CACF,EAGMooC,EAAS,CACb,QAASzyB,EAAS,QAClB,UAAW,MAAM3V,EAAO,WAAW,EACnC,WAAY2V,EAAS,MACrB,WAAYA,EAAS,KACvB,EAGM3H,EAAK,MAAM+tC,EAAW,QAAQ3T,CAAM,EAE1C9kC,EAAe42C,GAAe,UAAU,EACxC,MAAMlsC,EAAG,KAAK,EAEd1K,EAAe42C,GAAe,SAAS,EACvCj2D,EAAM,QAAQ,6BAA6B,EACnCuY,EAAA,QACD/Y,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7Cy6B,EAASz6B,EAAM,OAAO,EACtB6f,EAAe42C,GAAe,KAAK,EAC7Bj2D,EAAA,MAAM,2BAA6BR,EAAM,OAAO,CAAA,QACtD,CACAmiC,EAAa,EAAK,CAAA,CAEtB,EAEA,cACG1oB,GAAO,CAAA,KAAMX,EAAQ,QAAAC,EAAkB,UAAU,gBAChD,SAAA,CAAA3b,EAAA,IAAC,MAAI,CAAA,UAAU,4BAA4B,cAAY,OAAO,EAC9DA,EAAAA,IAAC,OAAI,UAAU,qDACb,gBAACqc,GAAO,MAAP,CAAa,UAAU,uEAEtB,SAAA,CAAArc,EAAAA,IAAC,OAAI,UAAU,yCACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,SAAA,CAAO,QAAS2b,EAAS,UAAU,uBAClC,SAAC3b,EAAAA,IAAA2iC,GAAA,CAAU,UAAU,uCAAA,CAAwC,CAC/D,CAAA,EACAn+B,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,EACzG90B,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,CAAA,EAC5G,EACC90B,EAAA,IAAA,MAAA,CAAI,UAAU,8BACb,SAACA,EAAAA,IAAA,MAAA,CAAI,IAAI,qBAAqB,IAAI,WAAW,UAAU,SAAA,CAAU,CACnE,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACA,EAAAA,IAAA,MAAA,CAAI,UAAU,0BACb,SAAAA,EAAA,IAAC,QAAK,UAAU,sDAAsD,wBAEtE,CACF,CAAA,EACAwE,EAAAA,KAAC,OAAK,CAAA,UAAU,2CACb,SAAA,CAAAswB,GAAU,QAAQ,OAAO,IAAEA,GAAU,QAAQ,OAAO,OAAKA,GAAU,IAAM,KAAO,QAAQ,CAAC,EAAE,GAAA,CAC9F,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,yDACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,2CAA2C,SAAgB,mBAAA,EAG1EwE,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,QACzG,OAAK,CAAA,UAAU,2CACb,SAAAA,GAAU,QAAQ,MACrB,CAAA,CAAA,EACF,EACA90B,EAAAA,IAAC,OAAK,CAAA,UAAU,4CACb,SAAAg5D,GAAalkC,GAAU,MAAOA,GAAU,QAAQ,QAAQ,CAC3D,CAAA,CAAA,EACF,EAGAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAKw8C,GAAa1nB,GAAU,MAAM,EAAG,IAAKA,GAAU,QAAQ,OAAQ,UAAU,sBAAuB,CAAA,QACzG,OAAK,CAAA,UAAU,2CACb,SAAAA,GAAU,QAAQ,MACrB,CAAA,CAAA,EACF,EACA90B,EAAAA,IAAC,OAAK,CAAA,UAAU,4CACb,SAAAg5D,GAAalkC,GAAU,MAAOA,GAAU,QAAQ,QAAQ,CAC3D,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGA90B,EAAA,IAAC,SAAA,CACC,QAASo7D,EACT,SAAU,CAACtmC,GAAU,OAAS,CAACA,GAAU,OAASgQ,EAClD,UAAW,4EACT,CAAChQ,GAAU,OAAS,CAACA,GAAU,MAC3B,iEACA,+CACN,GAEC,SACCgQ,EAAAtgC,OAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,2DAA4D,CAAA,EAC3EA,EAAAA,IAAC,QAAK,SAAa,eAAA,CAAA,CAAA,CAAA,CACrB,EAEA,SAAA,CAEJ,QAGCoc,GAAW,CAAA,OAAM,GAAC,KAAM0oB,EAAW,GAAI/xB,WACtC,SAAAvO,EAAA,KAAC6X,GAAA,CACC,GAAG,MACH,UAAU,gBACV,QAAS,IAAM,EACTT,IAAgBy9C,GAAe,WAAaz9C,IAAgBy9C,GAAe,QAC7Et0B,EAAa,EAAK,CAEtB,EAEA,SAAA,CAAA/kC,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAA/S,EAAAA,IAAC,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,uLACtB,SAAA,CAAA7X,EAAA,KAAC6X,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEAET,SAAA,CAAAzZ,EAAQ,wBAA0B,kBAClC,CAACA,GAASkyB,GACRtwB,EAAA,KAAA,MAAA,CAAI,UAAU,+DACZ,SAAA,CAAAswB,EAAS,OAAO,OAAO,IAAEA,EAAS,OAAO,MAAA,CAC5C,CAAA,CAAA,CAAA,CAEJ,EAEAtwB,EAAAA,KAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CAAA,CACC,CAAE,KAAM60D,GAAe,UAAW,MAAO,YAAa,KAAMj+C,GAAM,SAAU,EAC5E,CAAE,KAAMi+C,GAAe,OAAQ,MAAO,kBAAmB,KAAM,IAC5Dr5D,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAE,CAAA,YAAa,IAAK,OAAO,eAC1B,SAAA,CAACA,EAAAA,IAAA,OAAA,CAAK,EAAE,cAAc,cAAc,QAAQ,eAAe,QAAQ,UAAU,iCAAkC,CAAA,EAC9GA,EAAA,IAAA,OAAA,CAAK,EAAE,qCAAqC,UAAU,yCAA0C,CAAA,CAAA,CACnG,CAAA,CACF,CAAA,CACA,EACF,CAAE,KAAMq5D,GAAe,WAAY,MAAO,aAAc,KAAMj+C,GAAM,UAAW,EAC/E,CAAE,KAAMi+C,GAAe,UAAW,MAAO,YAAa,KAAMj+C,GAAM,SAAU,CAAA,EAC5E,IAAI,CAAC,CAAE,KAAAa,EAAM,MAAA4+C,EAAO,KAAMv+C,KAAW,CACrC,MAAMxY,EAAW8X,IAAgBK,EAC3BM,EAAc,CAAC3Z,GAAS,OAAO,OAAOy2D,EAAc,EAAE,QAAQz9C,CAAW,EAAI,OAAO,OAAOy9C,EAAc,EAAE,QAAQp9C,CAAI,EACvHO,EAAc5Z,GAASgZ,IAAgBK,EAG3C,OAAAzX,EAAA,KAAC,MAAA,CAEC,UAAW,4DACTV,GAAY,CAAC0Y,EAAc,iCAC3BD,EAAc,iBACdC,EAAc,6BACd,eACF,GAEA,SAAA,CAAAxc,EAAA,IAACsc,EAAK,EAAA,EACN9X,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,4CAA6C,SAAM66D,EAAA,EAClE/2D,GAAY,CAAClB,GACX4B,EAAA,KAAA,IAAA,CAAE,UAAU,gDACV,SAAA,CAAAyX,IAASo9C,GAAe,WAAa,2BACrCp9C,IAASo9C,GAAe,QACtB70D,EAAA,KAAA,OAAA,CAAK,UAAU,0BAA0B,SAAA,CAAA,wBAClBswB,GAAU,QAAQ,OAAO,IAAEA,GAAU,QAAQ,OAAO,WAAA,EAC5E,EAED7Y,IAASo9C,GAAe,YAAc,8BACtCp9C,IAASo9C,GAAe,iBACtB,OAAK,CAAA,UAAU,0BAA0B,SAE1C,8BAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEJ,EACC98C,SACE,MAAI,CAAA,UAAU,yBAAyB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAChF,SAACvc,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CACxF,CAAA,CAAA,CAAA,EA/BGic,CAiCP,CAAA,CAEH,EAEArZ,SACE,MAAI,CAAA,UAAU,6DACb,SAAC4B,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACb5W,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,EAC7DA,EAAA,IAAA,IAAA,CAAE,UAAU,4BACV,SACH4C,CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAEJ,GAEEgZ,IAAgBy9C,GAAe,WAAaz2D,IAC3C5C,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM+kC,EAAa,EAAK,EACjC,UAAU,uGACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CAEJ,CAAA,CAAA,GAEJ,CACF,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ,CAGA,MAAM9Q,GAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,IACjB,cAAe,EAAA,CACjB,CAEJ,EAEMoD,GAAe,CACnB,OAAQ,CACN,QAAS,EACT,EAAG,GACH,MAAO,GACT,EACA,QAAS,CACP,QAAS,EACT,EAAG,EACH,MAAO,EACP,WAAY,CACV,KAAM,SACN,KAAM,GACN,UAAW,IACX,QAAS,EAAA,CAEb,EACA,KAAM,CACJ,QAAS,EACT,MAAO,IACP,WAAY,CACV,SAAU,GACV,KAAM,SAAA,CACR,CAEJ,EAGMwC,GAAe,IACnB75B,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,4GACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EAEtB,SAAA9J,EAAA,KAAC,MAAI,CAAA,UAAU,yBAEb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,kHAAmH,CAAA,EAElIwE,EAAAA,KAAC,MAAI,CAAA,UAAU,mBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,6DAA8D,CAAA,EAC7EA,EAAAA,IAAC,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,EAC/E,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,8DAA+D,CAAA,EAC9EA,EAAAA,IAAC,MAAI,CAAA,UAAU,8DAA+D,CAAA,EAC9EA,EAAAA,IAAC,MAAI,CAAA,UAAU,8DAA+D,CAAA,CAAA,EAChF,QAGC,MAAI,CAAA,UAAU,kBACZ,SAAC,CAAA,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACbxO,EAAAA,IAAA,MAAA,CAAY,UAAU,6DAAb,EAAAwO,CAA2E,CACtF,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAGF,SAAwB0oD,IAAU,CAChC,KAAM,CAAE,QAAA3sD,EAAS,YAAAC,CAAY,EAAIC,GAAW,EACtCG,EAAeC,GAAgB,EAC/B,CAAE,KAAMC,CAAa,EAAIC,GAAgB,EACzC,CAACg+C,EAAWsS,CAAY,EAAIz7D,EAAAA,SAAS,CAAA,CAAE,EACvC,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C,CAAC07D,EAAuBC,CAAwB,EAAI37D,EAAAA,SAAS,EAAK,EAClE,CAAC47D,EAA0BC,CAA2B,EAAI77D,EAAAA,SAAS,EAAK,EACxE,CAAC87D,EAAsBC,CAAuB,EAAI/7D,EAAAA,SAAS,EAAK,EAChE,CAACg8D,EAAkBC,CAAmB,EAAIj8D,EAAAA,SAAS,IAAI,EAE7DE,EAAAA,UAAU,IAAM,CACVyK,GAAWK,GACEkxD,EAAA,CACjB,EACC,CAACvxD,EAASK,CAAY,CAAC,EAE1B,MAAMkxD,EAAiB,SAAY,CAC7B,GAAA,CAGE,GAFJ/2B,EAAa,EAAI,EAEb,CAACx6B,GAAW,CAACO,EACT,MAAA,IAAI,MAAM,sBAAsB,EAGxC,MAAMlD,EAAW,IAAIwX,GAAuBtU,EAAa,SAAS,EAC5DixD,EAA0B,IAAIrwD,EAClC0sD,GACAD,GACAvwD,CACF,EAEMsrD,EAAkB,IAAIxnD,EAC1Bw7C,GACAp8B,GACAljB,CACF,EAGM0mB,EAAU,MAAMytC,EAAwB,UAAUxxD,CAAO,EAE3D,GAAA,OAAO+jB,CAAO,IAAM,EAAG,CACzB+sC,EAAa,CAAA,CAAE,EACf,MAAA,CAIF,MAAMpwC,EAAY,CAChB,0CACA,0CACF,EAGM+wC,EAAmB,MAAM,KAAK,CAAE,OAAQ,OAAO1tC,CAAO,CAAE,EAAG,MAAO/f,EAAGC,IAAM,CAC3E,GAAA,CACF,MAAMmS,EAAU,MAAMo7C,EAAwB,oBAAoBxxD,EAASiE,CAAC,EAEtEsmB,EAAW,MAAMinC,EAAwB,UAAUp7C,CAAO,EAG1D2U,EAAc,MAAM49B,EAAgB,QACxCp+B,EAAS,OACTA,EAAS,OACTA,EAAS,GACX,EAGMu1B,EAAe,IAAI3+C,EAAgB4pB,EAAa+iC,GAAUzwD,CAAQ,EAClE,CAACq0D,EAAWC,CAAa,EAAI,MAAM,QAAQ,IAAI,CACnD7R,EAAa,MAAM,EACnBA,EAAa,UAAU,CAAA,CACxB,EAGK79B,EAAiB,IAAI9gB,EAAgBopB,EAAS,OAAQ7J,EAAWrjB,CAAQ,EACzE6kB,EAAiB,IAAI/gB,EAAgBopB,EAAS,OAAQ7J,EAAWrjB,CAAQ,EAEzE,CAACmoB,EAAc7G,EAAgB8G,EAAc7G,CAAc,EAAI,MAAM,QAAQ,IAAI,CACrFqD,EAAe,OAAO,EACtBA,EAAe,SAAS,EACxBC,EAAe,OAAO,EACtBA,EAAe,SAAS,CAAA,CACzB,EAGKJ,EAAUqsC,GACduD,EAAU,aACVnnC,EAAS,UACTA,EAAS,UACTA,EAAS,SACX,EAEMxI,EAAUysC,GACdkD,EAAU,aACVnnC,EAAS,UACTA,EAAS,UACTA,EAAS,SACX,EAGMqnC,GAAgB,OAAOrnC,EAAS,SAAS,EAAI,OAAOonC,CAAa,EAEhE,MAAA,CACL,GAAIv7C,EAAQ,SAAS,EACrB,QAASA,EAAQ,SAAS,EAC1B,OAAQ,CACN,QAASmU,EAAS,OAClB,OAAQ/E,EACR,SAAU,OAAO7G,CAAc,CACjC,EACA,OAAQ,CACN,QAAS4L,EAAS,OAClB,OAAQ9E,EACR,SAAU,OAAO7G,CAAc,CACjC,EACA,IAAK,OAAO2L,EAAS,GAAG,EACxB,UAAW,OAAOA,EAAS,SAAS,EACpC,UAAW,OAAOA,EAAS,SAAS,EACpC,UAAWA,EAAS,UAAU,SAAS,EACvC,QAASzI,EAAQ,SAAS,EAC1B,QAASC,EAAQ,SAAS,EAC1B,MAAOwI,EAAS,YAAY,SAAS,EACrC,MAAOA,EAAS,YAAY,SAAS,EACrC,cAAAqnC,EACF,QACOC,EAAe,CACtB,eAAQ,MAAM,2BAA2B5tD,CAAC,IAAK4tD,CAAa,EACrD,IAAA,CACT,CACD,EAIKC,GADU,MAAM,QAAQ,IAAIL,CAAgB,GACnB,OAAOlnC,GAAYA,IAAa,IAAI,EAEnEumC,EAAagB,CAAc,QAEpBz5D,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EAC1CQ,EAAA,MAAM,8BAAgCR,EAAM,OAAO,CAAA,QACzD,CACAmiC,EAAa,EAAK,CAAA,CAEtB,EAEMu3B,EAAuB,CAACx1B,EAAQhS,IAAa,CAEjD,OADA+mC,EAAoB/mC,CAAQ,EACpBgS,EAAQ,CACd,IAAK,MACHy0B,EAAyB,EAAI,EAC7B,MACF,IAAK,SACHE,EAA4B,EAAI,EAChC,MACF,IAAK,UACHE,EAAwB,EAAI,EAC5B,KAGA,CAEN,EAEA,OAAKnxD,EA0CDs6B,EAEA9kC,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,YACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EAErB,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKE,GACdxO,EAAA,IAAC65B,GAAkB,CAAA,EAAArrB,CAAG,CACvB,CAAA,CACH,EAKFhK,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,YACV,SAAU2lB,GACV,QAAQ,SACR,QAAQ,UAEP,SAAA,CAAA80B,EAAU,OAAS,EAClB/oD,EAAAA,IAACinC,IACE,SAAU8hB,EAAA,IAAKj0B,GACd90B,EAAA,IAACsO,EAAO,IAAP,CAEC,SAAU+oB,GACV,QAAQ,SACR,QAAQ,UACR,KAAK,OACL,OAAO,WACP,SAAUvC,EAAS,GAEnB,SAAA90B,EAAA,IAACs5D,GAAA,CACC,SAAAxkC,EACA,SAAUwnC,CAAA,CAAA,CACZ,EAXKxnC,EAAS,EAAA,CAajB,EACH,EAEAtwB,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,oBACV,SAAU+oB,GACV,QAAQ,SACR,QAAQ,UACR,KAAK,OAEL,SAAA,CAACr3B,EAAAA,IAAAu8D,GAAA,CAAY,UAAU,iCAAkC,CAAA,EACzDv8D,EAAA,IAACsO,EAAO,GAAP,CACC,UAAU,yDACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,MAAO,EAAI,EAC1B,SAAA,oBAAA,CAED,EACAtO,EAAA,IAACsO,EAAO,EAAP,CACC,UAAU,gDACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,MAAO,EAAI,EAC1B,SAAA,sDAAA,CAAA,CAED,CAAA,CACF,EAGFtO,EAAA,IAACm6D,GAAA,CACC,OAAQmB,EACR,QAAS,IAAMC,EAAyB,EAAK,EAC7C,SAAUK,CAAA,CACZ,EAEA57D,EAAA,IAAC86D,GAAA,CACC,OAAQU,EACR,QAAS,IAAMC,EAA4B,EAAK,EAChD,SAAUG,CAAA,CACZ,EAEA57D,EAAA,IAACm7D,GAAA,CACC,OAAQO,EACR,QAAS,IAAMC,EAAwB,EAAK,EAC5C,SAAUC,CAAA,CAAA,CACZ,CAAA,CACF,EA7HEp3D,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,0DACV,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,GAAI,EAE3B,SAAA,CAACtO,EAAAA,IAAAogB,GAAA,CAAS,UAAU,iCAAkC,CAAA,EACtDpgB,EAAA,IAACsO,EAAO,GAAP,CACC,UAAU,yDACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,MAAO,EAAI,EAC1B,SAAA,cAAA,CAED,EACAtO,EAAA,IAACsO,EAAO,EAAP,CACC,UAAU,gDACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,MAAO,EAAI,EAC1B,SAAA,4CAAA,CAED,EACAtO,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,OACV,QAAS,CAAE,QAAS,EAAG,MAAO,EAAI,EAClC,QAAS,CAAE,QAAS,EAAG,MAAO,CAAE,EAChC,WAAY,CAAE,MAAO,EAAI,EAEzB,SAAAtO,EAAA,IAAC,SAAA,CACC,QAAS,KACT,UAAU,sJACX,SAAA,gBAAA,CAAA,CAED,CAAA,CACF,CAAA,CACF,CA2FN,CCjiEA,MAAMw8D,GAAoBC,GAAQC,IAAS,CACzC,QAAS,KACT,WAAav0C,GAAYu0C,EAAI,CAAE,QAAAv0C,CAAO,CAAE,CAC1C,EAAE,ECFF,SAAwBw0C,IAAgB,CACtC,KAAM,CAAE,QAAAx0C,EAAS,WAAAC,CAAW,EAAIo0C,GAAkB,EAGhD,OAAAh4D,EAAA,KAAC,MAAI,CAAA,UAAU,wIACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMooB,EAAW,IAAI,EAC9B,UAAW,0EACTD,IAAY,KACR,oDACA,wHACN,GACD,SAAA,IAAA,CAED,EACAnoB,EAAA,IAAC,SAAA,CACC,QAAS,IAAMooB,EAAW,IAAI,EAC9B,UAAW,0EACTD,IAAY,KACR,oDACA,wHACN,GACD,SAAA,IAAA,CAAA,CAED,EACF,CAEJ,CCzBA,SAAwByoC,GAAgB,CAAE,cAAAgM,EAAe,YAAAtnC,GAAe,CACtE,KAAM,CAAC+U,EAAWC,CAAY,EAAI1qC,EAAAA,SAAS,KAAK,EAC1C,CAACi9D,EAAaC,CAAc,EAAIl9D,EAAAA,SAAS,IAAI,EAC7C60B,EAAU2nB,GAAY,EAG5Bt8C,OAAAA,EAAAA,UAAU,IAAM,EACW,SAAY,CACnC,GAAIw1B,EACE,GAAA,CACF,MAAMynC,EAAU,MAAMtoC,EAAQ,eAAea,CAAW,EACxDwnC,EAAeC,CAAO,EAEtBzyB,EAAa,KAAK,QACX1nC,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,CAAA,CAGzD,GACiB,CAAA,EAChB,CAAC0yB,EAAab,CAAO,CAAC,EAGvBjwB,EAAA,KAAC,MAAI,CAAA,UAAU,uHACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,wDAAwD,SAAoB,uBAAA,EAGzF68D,GACCr4D,EAAA,KAAC,MAAI,CAAA,UAAU,+FACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,2DAA2D,SAEzE,eAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACxE,EAAA,IAAA,IAAA,CAAE,UAAU,2CAA2C,SAAM,SAAA,EAC9DwE,EAAAA,KAAC,IAAE,CAAA,UAAU,sDACV,SAAA,CAAYq4D,EAAA,aAAa,IAAEA,EAAY,YAAA,CAC1C,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAC78D,EAAA,IAAA,IAAA,CAAE,UAAU,2CAA2C,SAAe,kBAAA,EACvEwE,EAAAA,KAAC,IAAE,CAAA,UAAU,sDAAsD,SAAA,CAAA,IAC/Dq4D,EAAY,gBAAgB,eAAe,CAAA,CAC/C,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAIFr4D,EAAAA,KAAC,MAAI,CAAA,UAAU,kEACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsqC,EAAa,KAAK,EACjC,UAAW;AAAA,cACPD,IAAc,MACZ,wDACA,+EACJ;AAAA,YAEH,SAAA,eAAA,CAED,EACArqC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsqC,EAAa,QAAQ,EACpC,UAAW;AAAA,cACPD,IAAc,SACZ,wDACA,+EACJ;AAAA,YAEH,SAAA,kBAAA,CAAA,CAED,EACF,EAGCrqC,EAAA,IAAA,MAAA,CAAI,UAAU,OACZ,aAAc,MACbA,EAAA,IAACyuD,GAAA,CACC,cAAAmO,EACA,YAAAtnC,EACA,YAAAunC,CAAA,CAAA,EAGF78D,EAAA,IAAC0vD,GAAA,CACC,cAAAkN,EACA,YAAAtnC,EACA,YAAAunC,CAAA,CAAA,CAGN,CAAA,CAAA,EACF,CAEJ,CC9FA,SAAwBjM,IAAkB,CACxC,KAAM,CAACvmB,EAAWC,CAAY,EAAI1qC,EAAAA,SAAS,KAAK,EAG9C,OAAA4E,EAAA,KAAC,MAAI,CAAA,UAAU,uHACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,wDAAwD,SAAgB,mBAAA,EAGtFwE,EAAAA,KAAC,MAAI,CAAA,UAAU,kEACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsqC,EAAa,KAAK,EACjC,UAAW;AAAA,cACPD,IAAc,MACZ,wDACA,+EACJ;AAAA,YAEH,SAAA,eAAA,CAED,EACArqC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsqC,EAAa,QAAQ,EACpC,UAAW;AAAA,cACPD,IAAc,SACZ,wDACA,+EACJ;AAAA,YAEH,SAAA,kBAAA,CAAA,CAED,EACF,EAGArqC,EAAA,IAAC,MAAI,CAAA,UAAU,OACZ,SAAAqqC,IAAc,MACbrqC,EAAAA,IAACyuD,GAAa,CAAA,CAAA,EAEbzuD,EAAA,IAAA0vD,GAAA,CAAgB,CAAA,CAErB,CAAA,CAAA,EACF,CAEJ,CCtBA,MAAMsN,GAAqB70C,GACrBA,IAAY,KACP,CACL,CAAE,GAAI,OAAQ,MAAO,OAAQ,KAAM4wB,EAAc,EACjD,CAAE,GAAI,WAAY,MAAO,WAAY,KAAMkkB,EAAO,EAClD,CAAE,GAAI,OAAQ,MAAO,cAAe,KAAMC,EAAO,EACjD,CAAE,GAAI,YAAa,MAAO,uBAAwB,KAAMC,EAAQ,CAClE,EAEO,CACL,CAAE,GAAI,OAAQ,MAAO,OAAQ,KAAMpkB,EAAc,EACjD,CAAE,GAAI,WAAY,MAAO,eAAgB,KAAMkkB,EAAO,EACtD,CAAE,GAAI,OAAQ,MAAO,kBAAmB,KAAMC,EAAO,CACvD,EAIJ,SAAwBE,IAAe,CACrC,MAAM55D,EAAWC,GAAY,EACvB,CAAC4mC,EAAWC,CAAY,EAAI1qC,EAAAA,SAAS,MAAM,EAC3C,CAACy9D,EAAgBC,CAAiB,EAAI19D,EAAAA,SAAS,IAAI,EACnD,CAAC29D,EAAqBC,CAAsB,EAAI59D,EAAAA,SAAS,IAAI,EAC7D,CAAE,MAAA8K,CAAM,EAAIC,GAAW,EACvB,CAAE,QAASuS,CAAQ,EAAIzS,GAAW,EAClC,CAACgzD,EAAgBC,CAAiB,EAAI99D,EAAAA,SAAS,EAAK,EACpD,CAAC+9D,EAAaC,CAAc,EAAIh+D,EAAAA,SAAS,CAAA,CAAE,EAC3C,CAAE,QAAAuoB,CAAQ,EAAIq0C,GAAkB,EAChCryB,EAAO6yB,GAAkB70C,CAAO,EAChC,CAAE,iBAAA5F,CAAiB,EAAIC,GAAgB,EAGvCq7C,EAAkB,CAACtzB,EAAKjiC,IAAS,CACrCgiC,EAAaC,CAAG,EACZjiC,GAAM,gBACRg1D,EAAkBh1D,EAAK,cAAc,EAEnCA,GAAM,aACRk1D,EAAuBl1D,EAAK,WAAW,CAE3C,EAGAxI,EAAAA,UAAU,IAAM,CACR,MAAAg+D,EAAkB3jD,GAAU,CAChC,GAAIA,EAAM,IAAI,YAAY,IAAM,IAAK,CAC7B,MAAAzM,EAAM,KAAK,IAAI,EACrBkwD,EAAuBt2D,GAAA,CAErB,MAAMy2D,EAAa,CAAC,GAAGz2D,EAAMoG,CAAG,EAAE,MAAM,EAAE,EAGtC,OAAAqwD,EAAW,SAAW,GACrBA,EAAW,CAAC,EAAIA,EAAW,CAAC,GAAM,KAEnBL,EAAAp2D,GAAQ,CAACA,CAAI,EACxB,CAAC,GAGHy2D,CAAA,CACR,CAAA,CAEL,EAEO,cAAA,iBAAiB,UAAWD,CAAc,EAC1C,IAAM,OAAO,oBAAoB,UAAWA,CAAc,CACnE,EAAG,EAAE,EAGLh+D,EAAAA,UAAU,IAAM,CACV0D,EAAS,OAAO,WACL8mC,EAAA9mC,EAAS,MAAM,SAAS,CACvC,EACC,CAACA,EAAS,KAAK,CAAC,EAGb,MAAAw6D,EAAqBC,GAAkB,CACvC,GAAA,CAACvzD,EAAc,OAAA,KAGnB,MAAMwzD,EAAaxzD,EAAM,KAAO,MAAQA,EAAM,KAAO,IAC/CyzD,EAAUzzD,EAAM,KAAO,MAGzB,GAAA,EAFuBwzD,GAAcC,IAEd,CAACV,EAC1B,aACG,MAAI,CAAA,UAAU,mBACb,SAACj5D,EAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,0EACb,SAACA,EAAAA,IAAA,MAAA,CAAI,IAAI,qBAAqB,IAAI,WAAW,UAAU,SAAU,CAAA,EACnE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACxE,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAwC,SAAoC,uCAAA,EACxFA,EAAA,IAAA,IAAA,CAAE,UAAU,2CAA2C,SAExD,6DAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAIJ,OAAQi+D,EAAe,CACrB,IAAK,OACH,GAAIC,GAAcC,EAChB,OAAOh2C,IAAY,KAAOnoB,MAACo+D,GAAoB,CAAA,CAAA,QAAMC,GAAoB,EAAA,EAChE,GAAA3zD,EAAM,KAAO,UAAY+yD,EAClC,aAAQa,GAAiB,EAAA,EAE3B,MACF,IAAK,OACH,GAAIJ,GAAcC,EACT,OAAAh2C,IAAY,KACfnoB,MAACu+D,GAAuB,CAAA,aAAcV,CAAiB,CAAA,EACvD79D,EAAAA,IAACw+D,GAAuB,CAAA,aAAcX,CAAiB,CAAA,EAClD,GAAAnzD,EAAM,KAAO,UAAY+yD,EAC3B,OAAAz9D,EAAA,IAACy+D,GAAoB,CAAA,aAAcZ,CAAiB,CAAA,EAE7D,MACF,IAAK,YACH,GAAIK,GAAcC,EAChB,OAAOh2C,IAAY,KACdnoB,EAAA,IAAA0+D,GAAA,CAA0B,cAAerB,EAAgB,YAAaE,CAAqB,CAAA,EAC3Fv9D,EAAA,IAAA2+D,GAAA,CAA0B,cAAetB,EAAgB,YAAaE,EAAqB,EACvF,GAAA7yD,EAAM,KAAO,UAAY+yD,EAClC,OAAQz9D,EAAAA,IAAA4+D,GAAA,CAAuB,cAAevB,EAAgB,YAAaE,EAAqB,EAElG,MACF,IAAK,WACH,GAAIW,GAAcC,EAChB,OAAOh2C,IAAY,KAAOnoB,MAAC6+D,GAAkB,CAAA,CAAA,QAAMC,GAAkB,EAAA,EAC5D,GAAAp0D,EAAM,KAAO,UAAY+yD,EAClC,aAAQsB,GAAe,EAAA,EAEzB,KAAA,CAGJ,aACG,MAAI,CAAA,UAAU,mBACb,SAACv6D,EAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,0EACb,SAACA,EAAAA,IAAA,MAAA,CAAI,IAAI,qBAAqB,IAAI,WAAW,UAAU,SAAU,CAAA,EACnE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACxE,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAwC,SAAoC,uCAAA,EACxFA,EAAA,IAAA,IAAA,CAAE,UAAU,2CAA2C,SAExD,6DAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAEA,aACG,MAAI,CAAA,UAAU,gDACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,kDAAkD,SAEhE,UAAA,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,0BACZ,SAAAy9D,SACE,OAAK,CAAA,UAAU,0JAA0J,SAAA,UAE1K,CAAA,CAEJ,CAAA,CAAA,EACF,EAGAj5D,EAAAA,KAAC,MAAI,CAAA,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mDAAoD,CAAA,EACnEA,EAAAA,IAAC,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAqD,CAAA,EACpEA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,sDAAuD,CAAA,EACtEA,EAAAA,IAAC,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAwD,CAAA,EACvEA,EAAAA,IAAC,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,qFAAsF,CAAA,EACrGA,EAAAA,IAAC,MAAI,CAAA,UAAU,sFAAuF,CAAA,EACtGA,EAAAA,IAAC,MAAI,CAAA,UAAU,wFAAyF,CAAA,EACxGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yFAA0F,CAAA,EAGzGA,EAAAA,IAAC,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,EAGAxO,EAAAA,IAAC,OAAI,UAAU,0DACZ,SAACkd,EA2BG1Y,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAArI,GAAO,KAAO,UAAY,CAAC+yD,GACzBz9D,MAAA,MAAA,CAAI,UAAU,0GACb,SAACA,EAAA,IAAA,IAAA,CAAE,UAAU,+CAA+C,qHAE5D,CAAA,EACF,EAIFwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,4CACZ,SAAAmqC,EAAK,IACJI,GAAA/lC,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMq5D,EAAgBtzB,EAAI,EAAE,EACrC,UAAW;AAAA;AAAA;AAAA,4BAGPF,IAAcE,EAAI,GAChB,iCACA,yGACJ;AAAA;AAAA,0BAIF,SAAA,CAAAvqC,EAAAA,IAACuqC,EAAI,KAAJ,CAAS,KAAM,EAAI,CAAA,EACnBA,EAAI,MAGLvqC,MAAC,OAAI,UAAW;AAAA;AAAA;AAAA,4BAGZqqC,IAAcE,EAAI,GAAK,eAAiB,4CAA4C;AAAA,yBACrF,CAAA,CAAA,CAAA,EApBEA,EAAI,EAsBZ,CAAA,EACH,EACC7/B,GAAO,KAAOs0D,GAAgB,UAAOrC,GAAc,CAAA,CAAA,CAAA,EACtD,EAGAn4D,EAAAA,KAAC,MAAI,CAAA,UAAU,yDACZ,SAAA,CAAc6lC,IAAA,QAAU2zB,EAAkB,MAAM,EAChD3zB,IAAc,QAAU2zB,EAAkB,MAAM,EAChD3zB,IAAc,aAAe2zB,EAAkB,WAAW,EAC1D3zB,IAAc,YAAc2zB,EAAkB,UAAU,CAAA,CAC3D,CAAA,CAAA,CAAA,CACF,EAzEAx5D,EAAAA,KAAC,MAAI,CAAA,UAAU,uDACb,SAAA,CAAAxE,EAAA,IAAC,MAAI,CAAA,UAAU,+EACb,SAAAwE,EAAA,KAAC,MAAI,CAAA,UAAU,2BAA2B,KAAK,OAAO,QAAQ,YAAY,OAAO,eAC/E,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,EAAE,oCAAqC,CAAA,EAC5GA,EAAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,EAAE,oBAAqB,CAAA,CAAA,CAAA,CAC9F,CACF,CAAA,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,wDAAwD,SAEtE,sBAAA,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,6DAA6D,SAE1E,wHAAA,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS+d,EACT,UAAU,wIAEV,SAAA,CAAAviB,EAAAA,IAAC,OAAI,UAAU,UAAU,KAAK,OAAO,QAAQ,YAAY,OAAO,eAC9D,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,iBAAiB,CACxF,CAAA,EAAM,gBAAA,CAAA,CAAA,CAER,CAAA,CACF,CAqDJ,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,CCvSiB,OAAO,IAAc,EACrB,OAAO,IAAe,EAMtB,OAAO,GAAa,EACpB,OAAO,IAAc,ECXtC,MAAMi/D,GAAmB,CACvB,QAAS,6CACT,QAAS,6CACT,iBAAkB,6CAClB,iBAAkB,4CACpB,EAEMC,GAAgB,CACpB,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,eAAe,KAAO,QAAA,EAAU,CAAC,aAAe,QAAQ,KAAO,aAAa,KAAO,QAAQ,EAAE,KAAO,YAAY,QAAU,CAAA,EAAG,gBAAkB,UAAU,KAAO,UAAU,EACrN,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,SAAS,KAAO,eAAe,KAAO,QAAA,EAAU,CAAC,aAAe,QAAQ,KAAO,aAAa,KAAO,QAAQ,EAAE,KAAO,cAAc,QAAU,CAAC,EAAE,gBAAkB,UAAU,KAAO,UAAU,EAChR,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAW,EAAA,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,SAAA,EAAW,CAAC,aAAe,SAAS,KAAO,eAAe,KAAO,UAAU,CAAC,aAAe,QAAQ,KAAO,aAAa,KAAO,OAAQ,CAAA,EAAE,KAAO,eAAe,QAAU,CAAG,EAAA,gBAAkB,aAAa,KAAO,UAAU,EACpZ,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAW,EAAA,CAAC,aAAe,UAAU,KAAO,WAAW,KAAO,SAAA,EAAW,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,SAAA,EAAW,CAAC,aAAe,UAAU,KAAO,UAAU,KAAO,WAAW,CAAC,aAAe,SAAS,KAAO,eAAe,KAAO,UAAU,CAAC,aAAe,QAAQ,KAAO,aAAa,KAAO,OAAQ,CAAA,EAAE,KAAO,iBAAiB,QAAU,CAAG,EAAA,gBAAkB,aAAa,KAAO,UAAU,EAC/c,CAAC,OAAS,CAAC,CAAC,aAAe,SAAS,KAAO,eAAe,KAAO,QAAA,EAAU,CAAC,aAAe,QAAQ,KAAO,aAAa,KAAO,QAAQ,EAAE,KAAO,aAAa,QAAU,CAAA,EAAG,gBAAkB,UAAU,KAAO,UAAU,EACtN,CAAC,OAAS,CAAC,CAAC,aAAe,UAAU,KAAO,MAAM,KAAO,WAAW,CAAC,aAAe,SAAS,KAAO,eAAe,KAAO,QAAA,EAAU,CAAC,aAAe,QAAQ,KAAO,aAAa,KAAO,QAAQ,EAAE,KAAO,eAAe,QAAU,CAAC,EAAE,gBAAkB,UAAU,KAAO,UAAU,EACjR,CAAC,OAAS,CAAA,EAAG,KAAO,YAAY,QAAU,CAAC,CAAC,aAAe,gCAAgC,KAAO,GAAG,KAAO,SAAU,CAAA,EAAE,gBAAkB,OAAO,KAAO,UAAU,EAClK,CAAC,OAAS,CAAA,EAAG,KAAO,UAAU,QAAU,CAAC,CAAC,aAAe,SAAS,KAAO,GAAG,KAAO,QAAQ,CAAC,EAAE,gBAAkB,OAAO,KAAO,UAAU,CAC1I,EAEMt/B,GAAU,CAAC,CAAE,SAAAngC,EAAU,QAAA0/D,KAAc,CACzC,KAAM,CAACp7B,EAAMq7B,CAAO,EAAIx/D,EAAAA,SAAS,EAAK,EAGpC,OAAC4E,EAAA,KAAA,MAAI,CAAA,UAAU,wBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,aAAc,IAAMo/D,EAAQ,EAAI,EAChC,aAAc,IAAMA,EAAQ,EAAK,EAEhC,SAAA3/D,CAAA,CACH,EACCskC,SACE,MAAI,CAAA,UAAU,gGACZ,SACHo7B,CAAA,CAAA,CAAA,EAEJ,CAEJ,EAEME,GAAgB,IACnB76D,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,0DAA0D,EACzEA,EAAA,IAAC,MAAA,CACC,UAAU,uEACV,MAAO,CACL,UAAW,sCACX,UAAW,2BAAA,CACb,CACF,EACCA,EAAAA,IAAA,QAAM,CAAA,IAAG,GAAE,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKV,CAAA,CAAA,EACJ,EAGIwqC,GAAiB,CAAC,CAAE,WAAA80B,KAAiB,CACzC,KAAM,CAAC50B,EAAUC,CAAW,EAAI/qC,EAAAA,SAAS0/D,CAAU,EAEnDx/D,EAAAA,UAAU,IAAM,CACR,MAAAgrC,EAAQ,YAAY,IAAM,CAC9BH,EAAarjC,GACPA,GAAQ,GACV,cAAcwjC,CAAK,EACZ,GAEFxjC,EAAO,CACf,GACA,GAAI,EAEA,MAAA,IAAM,cAAcwjC,CAAK,CAClC,EAAG,EAAE,EAEC,MAAAy0B,EAAcC,GAAY,CAC9B,MAAMC,EAAU,KAAK,MAAMD,EAAU,EAAE,EACjCE,EAAOF,EAAU,GAChB,MAAA,GAAGC,CAAO,KAAKC,CAAI,aAC5B,EAGE,OAACl7D,EAAA,KAAA,MAAI,CAAA,UAAU,yCACb,SAAA,CAAAxE,EAAA,IAACq/D,GAAc,EAAA,QACd,OAAK,CAAA,UAAU,UAAW,SAAAE,EAAW70B,CAAQ,CAAE,CAAA,CAAA,EAClD,CAEJ,EAEMi1B,GAAsB,CAAC,CAAE,OAAAjkD,EAAQ,QAAAC,EAAS,YAAAC,EAAa,OAAAgkD,EAAQ,YAAAC,EAAa,UAAAC,KAAgB,CAC5ElgE,EAAS,SAAA,KAAK,IAAK,CAAA,EAEjC,MAAA0oB,EAAiB,CAACqZ,EAAM3iB,IACxBA,EAAQ,KAAO,EACV,2BAA2B2iB,CAAI,GAC7B3iB,EAAQ,KAAO,SACjB,mCAAmC2iB,CAAI,GAEzC,IAIH5lB,EAAQ,CACZ,CACE,MAAO,YAAY8jD,GAAa,IAAI,GACpC,YAAa,+BACb,OAAQjkD,IAAgB,QAAU,UAAYA,EAAc,WAAa,WACzE,KAAMgkD,EAASt3C,EAAes3C,EAAQC,CAAW,EAAI,IACvD,EACA,CACE,MAAO,eACP,YAAa,yBACb,OAAQjkD,IAAgB,UAAY,UAAYA,IAAgB,WAAa,WAAa,WAC1F,MAAOA,IAAgB,UAAY,IAAM,IAC3C,EACA,CACE,MAAO,cAAckkD,GAAW,IAAI,GACpC,YAAa,kBACb,OAAQlkD,IAAgB,WAAa,WAAa,UAAA,CAEtD,EAEA,aACGQ,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EAAAA,SACnC,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAC/S,EAAAA,IAAA,MAAI,CAAA,UAAU,sCAAuC,CAAA,CAAA,CACxD,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,uIACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,mEACX,SAAA,iBAAA,CAED,QAEC,MAAA,CAAI,UAAU,iBACZ,SAAMN,EAAA,IAAI,CAACE,EAAM/R,IACf1F,EAAAA,KAAA,MAAgB,CAAA,UAAU,WACxB,SAAA,CAAA0F,IAAU6R,EAAM,OAAS,SACvB,MAAI,CAAA,UAAW,wCACdE,EAAK,SAAW,WAAa,eAAiB,8BAChD,GAAI,EAELzX,EAAAA,KAAA,MAAI,CAAA,UAAU,4BACb,SAAA,OAAC,MAAI,CAAA,UAAW,kEACdyX,EAAK,SAAW,WAAa,eAC7BA,EAAK,SAAW,UAAY,cAC5B,8BACF,GACG,SAAAA,EAAK,SAAW,WACdjc,EAAA,IAAA+/D,GAAA,CAAU,UAAU,oBAAA,CAAqB,EACxC9jD,EAAK,SAAW,UACjBjc,EAAAA,IAAA,MAAA,CAAI,UAAU,6CAA8C,CAAA,EAC3D,KACN,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAxE,EAAA,IAAC,MAAI,CAAA,UAAU,oDACZ,SAAAic,EAAK,MACR,EACCjc,EAAA,IAAA,MAAA,CAAI,UAAU,2CACZ,WAAK,YACR,EACCic,EAAK,OAASA,EAAK,SAAW,WAC5Bjc,EAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAACA,EAAA,IAAAwqC,GAAA,CAAe,WAAYvuB,EAAK,KAAO,CAAA,EAC1C,EAEDA,EAAK,MACJjc,EAAA,IAAC,IAAA,CACC,KAAMic,EAAK,KACX,OAAO,SACP,IAAI,sBACJ,UAAU,gEACX,SAAA,oBAAA,CAAA,CAED,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,GAzCQ/R,CA0CV,CACD,EACH,EAEClK,EAAAA,IAAA,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,yKACV,QAAS2b,EACV,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,EAEMqkD,GAAa,CAAC,CAAE,OAAAtkD,EAAQ,QAAAC,EAAS,SAAAskD,KAAe,CACpD,KAAM,CAACC,EAAeC,CAAgB,EAAIvgE,WAAS,CACjD,KAAM,GACN,aAAc,GACd,KAAM,EAAA,CACP,EAEKwgE,EAAmB,OAAO,OAAOF,CAAa,EAAE,MAAM,OAAO,EAEnE,aACG9jD,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EAAAA,SACnC,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAC/S,EAAAA,IAAA,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,2HACtB,SAAA,CAAC7X,EAAAA,KAAA,MAAA,CAAI,UAAU,wDACb,SAAA,CAAAxE,MAACqc,GAAO,MAAP,CAAa,GAAG,KAAK,UAAU,kDAAkD,SAElF,eAAA,QACC,IAAA,CAAE,UAAU,kDAAkD,SAE/D,kEAAA,CAAA,CAAA,EACF,EACC7X,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,+FACf,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,WACL,UAAU,iOACV,QAASkgE,EAAc,KACvB,SAAW14D,GAAM24D,EAA0B74D,IAAA,CAAE,GAAGA,EAAM,KAAME,EAAE,OAAO,SAAU,CAAA,CACjF,QACC,OAAA,CAAK,UAAU,mHAAmH,SAEnI,0EAAA,CAAA,CAAA,EACF,EACChD,EAAAA,KAAA,QAAM,CAAA,UAAU,+FACf,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,WACL,UAAU,iOACV,QAASkgE,EAAc,aACvB,SAAW14D,GAAM24D,EAA0B74D,IAAA,CAAE,GAAGA,EAAM,aAAcE,EAAE,OAAO,SAAU,CAAA,CACzF,QACC,OAAA,CAAK,UAAU,mHAAmH,SAEnI,2EAAA,CAAA,CAAA,EACF,EACChD,EAAAA,KAAA,QAAM,CAAA,UAAU,+FACf,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,WACL,UAAU,iOACV,QAASkgE,EAAc,KACvB,SAAW14D,GAAM24D,EAA0B74D,IAAA,CAAE,GAAGA,EAAM,KAAME,EAAE,OAAO,SAAU,CAAA,CACjF,QACC,OAAA,CAAK,UAAU,mHAAmH,SAEnI,2DAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECxH,EAAAA,IAAA,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAW,qEACTogE,EACI,6CACA,kFACN,GACA,QAAS,IAAMA,GAAoBH,EAAS,EAC5C,SAAU,CAACG,EACZ,SAAA,UAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,EAEMC,GAAsB,IAC1BrgE,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,KAAM,CAAE,QAAS,CAAE,EACnB,UAAU,8CAEV,SAAC9J,EAAA,KAAA,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,kEAAkE,EAChFA,EAAAA,IAAA,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,EAC/E,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,mEAAmE,EACjFA,EAAAA,IAAA,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,CAC/E,CAAA,CAAA,EACF,EAGCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,gFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,kEAAkE,EAChFA,EAAAA,IAAA,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,EAC/E,EACCA,EAAAA,IAAA,MAAI,CAAA,UAAU,6DAA6D,EAC3EwE,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,kEAAkE,EAChFA,EAAAA,IAAA,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,CAC/E,CAAA,CAAA,EACF,EAGCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,8DAA8D,EAC5EA,EAAAA,IAAA,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,EAC/E,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,uBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,8DAA8D,EAC5EA,EAAAA,IAAA,MAAI,CAAA,UAAU,6DAA8D,CAAA,CAAA,CAC/E,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAIIsgE,GAAoB,CAAC,CAAE,KAAAC,EAAM,SAAAC,CACjC,IAAAh8D,OAAC,MAAI,CAAA,UAAU,2DACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,UAAW,6DACTugE,IAAS,UACL,0BACA,gCACN,GACA,QAAS,IAAMC,EAAS,SAAS,EAClC,SAAA,SAAA,CAED,EACAxgE,EAAA,IAAC,SAAA,CACC,UAAW,6DACTugE,IAAS,UACL,0BACA,gCACN,GACA,QAAS,IAAMC,EAAS,SAAS,EAClC,SAAA,SAAA,CAAA,CAED,EACF,EAIIC,GAAgB,CAAC,CAAE,OAAA/kD,EAAQ,QAAAC,EAAS,QAAApR,EAAS,gBAAAm2D,EAAiB,eAAAj+C,EAAgB,UAAAk+C,KAAgB,CAClG,KAAM,CAACxxB,EAAYE,CAAa,EAAIzvC,EAAAA,SAAS,CAAA,CAAE,EACzC,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAI,EACzC,CAACghE,EAAaC,CAAc,EAAIjhE,EAAAA,SAAS,SAAS,EAElDkhE,EAAqB,SAAY,CACrC,GAAKv2D,EAEL,CAAAw6B,EAAa,EAAI,EACb,GAAA,CACF,IAAIg8B,EAAY,CAAC,EACX,MAAAC,EAAkB,qCAEpBJ,IAAgB,UACNG,EAAA,MAAM,QAAQ,IAAI,CAC5B,MAAM,qEAAqEx2D,CAAO,oDAAoDy2D,CAAe,EAAE,EACvJ,MAAM,oDAAoDz2D,CAAO,eAAe,CAAA,CACjF,EAEWw2D,EAAA,MAAM,QAAQ,IAAI,CAC5B,MAAM,6EAA6Ex2D,CAAO,oDAAoDy2D,CAAe,EAAE,EAC/J,MAAM,4DAA4Dz2D,CAAO,eAAe,CAAA,CACzF,EAGH,KAAM,CAAC02D,EAASC,CAAY,EAAI,MAAM,QAAQ,IAC5CH,EAAU,IAAI,MAAMI,GAAK,CACvB,GAAI,CAACA,EAAE,SAAW,CAAE,OAAQ,CAAA,CAAG,EACzB,MAAA74D,EAAO,MAAM64D,EAAE,KAAK,EACnB,OAAA74D,EAAK,OAASA,EAAO,CAAE,OAAQA,EAAK,OAAS,EAAG,CACxD,CAAA,CACH,EAEM84D,EAAiBR,IAAgB,UACnC3B,GAAiB,QAAQ,cACzBA,GAAiB,QAAQ,YAAY,EAEnCoC,EAAsB,CAC1B,IAAIJ,EAAQ,QAAU,CACnB,GAAA,OAAa9zC,IACQ,OAAOA,EAAG,IAAO,SAAWA,EAAG,GAAG,cAAgB,MAC/Ci0C,CACxB,EACA,IAAWj0C,IAAA,CACV,KAAMA,EAAG,KACT,UAAW,IAAI,KAAKA,EAAG,UAAY,GAAI,EAAE,QAAQ,EACjD,MAAOxJ,GAAmBwJ,EAAG,OAAS,GAAG,EACzC,YAAayzC,IAAgB,UAAY,cAAgB,UACzD,UAAWA,IAAgB,UAAY,mBAAqB,mBAC5D,OAAQzzC,EAAG,cAAgB,GAAK,YAAc,UAC9C,IAAKA,EAAG,SAAWxJ,GAAmB,OAAOwJ,EAAG,QAAQ,EAAI,OAAOA,EAAG,SAAW,OAAO,CAAC,EAAI,GAAA,EAC7F,EAEJ,IAAI+zC,EAAa,QAAU,CACxB,GAAA,OAAa/zC,IACQ,OAAOA,EAAG,IAAO,SAAWA,EAAG,GAAG,YAAA,EAAgBA,EAAG,IAAI,MAAM,YAAiB,GAAA,MAC7Ei0C,CACxB,EACA,IAAWj0C,IAAA,CACV,KAAMA,EAAG,KACT,UAAW,IAAI,KAAKA,EAAG,WAAaA,EAAG,UAAY,GAAI,EAAE,QAAQ,EACjE,MAAOxJ,GAAmBwJ,EAAG,OAAS,GAAG,EACzC,YAAayzC,IAAgB,UAAY,mBAAqB,mBAC9D,UAAWA,IAAgB,UAAY,cAAgB,UACvD,OAAQzzC,EAAG,cAAgB,GAAK,YAAc,UAC9C,IAAKA,EAAG,SAAWxJ,GAAmB,OAAOwJ,EAAG,QAAQ,EAAI,OAAOA,EAAG,SAAW,OAAO,CAAC,EAAI,GAAA,EAC7F,CACN,EAEQ,QAAA,IAAI,sBAAuBk0C,CAAmB,EACxChyB,EAAAgyB,EAAoB,KAAK,CAAC33D,EAAGC,IAAMA,EAAE,UAAYD,EAAE,SAAS,CAAC,QACpE9G,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,EACrDQ,EAAM,MAAM,+BAA+B,CAAA,QAC3C,CACA2hC,EAAa,EAAK,CAAA,EAEtB,EAEAjlC,OAAAA,EAAAA,UAAU,IAAM,CACV4b,GAAUnR,GACOu2D,EAAA,CAEpB,EAAA,CAACplD,EAAQnR,EAASq2D,CAAW,CAAC,EAG/Bp8D,EAAA,KAAC6X,GAAA,CACC,KAAMX,EACN,QAAAC,EACA,UAAU,gBAEV,SAAA,CAAC3b,EAAAA,IAAA,MAAA,CAAI,UAAU,6CAA6C,EAC3DA,EAAAA,IAAA,OAAI,UAAU,qDACb,SAACwE,OAAA6X,GAAO,MAAP,CAAa,UAAU,uEAEtB,SAAA,CAAC7X,EAAAA,KAAA,MAAA,CAAI,UAAU,iEACb,SAAA,CAAAxE,EAAA,IAACqc,GAAO,MAAP,CAAa,UAAU,mCAAmC,SAE3D,iBAAA,EACArc,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,mDAEV,SAAC3b,EAAAA,IAAA2iC,GAAU,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CACjC,EACF,EAGC3iC,EAAAA,IAAA,MAAI,CAAA,UAAU,qCACb,SAAAA,EAAA,IAACsgE,GAAA,CACC,KAAMM,EACN,SAAUC,CAAA,CAAA,EAEd,EAGA7gE,EAAAA,IAAC,OAAI,UAAU,wCACb,eAAC,MAAI,CAAA,UAAU,gBACZ,SACC8kC,EAAA,MAAM,KAAK,CAAE,OAAQ,CAAE,CAAC,EAAE,IAAI,CAACv2B,EAAGC,IAC/BxO,EAAA,IAAAqgE,GAAA,CAAA,EAAyB7xD,CAAG,CAC9B,EACC2gC,EAAW,SAAW,QACvB,MAAI,CAAA,UAAU,mBACb,SAACnvC,EAAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAA,8BAA4B,CAAA,EAC3D,EAEAA,EAAA,IAAA+S,EAAA,SAAA,CACG,WAAW,IAAI,CAAC48B,EAAUzlC,IACzB1F,EAAA,KAAC,MAAA,CAEC,UAAU,wCAEV,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,MAAC,OAAI,IAAI,gBAAgB,IAAI,MAAM,UAAU,UAAU,EACtDwE,EAAAA,KAAA,OAAK,CAAA,UAAU,yBACb,SAAA,CAASmrC,EAAA,MAAM,MAAA,CAClB,CAAA,CAAA,EACF,EACCnrC,EAAAA,KAAA,MAAI,CAAA,UAAU,aACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wBACZ,SAAA,IAAI,KAAK2vC,EAAS,SAAS,EAAE,qBAChC,EACC3vC,EAAAA,IAAA,MAAI,CAAA,UAAU,wBACZ,SAAA,IAAI,KAAK2vC,EAAS,SAAS,EAAE,mBAAA,CAChC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECnrC,EAAAA,KAAA,MAAI,CAAA,UAAU,+DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK2vC,EAAS,YAAY,SAAS,KAAK,EAAI,WACxCA,EAAS,YAAY,SAAS,SAAS,EAAI,eAC3C,qBACJ,IAAKA,EAAS,YACd,UAAU,SAAA,CACZ,EACC3vC,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAyB,WAAS,WAAY,CAAA,CAAA,EAChE,QACCshE,GAAA,CAAa,UAAU,iBAAiB,KAAM,GAAI,EAClD98D,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK2vC,EAAS,UAAU,SAAS,KAAK,EAAI,WACtCA,EAAS,UAAU,SAAS,SAAS,EAAI,eACzC,qBACJ,IAAKA,EAAS,UACd,UAAU,SAAA,CACZ,EACC3vC,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAyB,WAAS,SAAU,CAAA,CAAA,CAC9D,CAAA,CAAA,EACF,EAECwE,EAAAA,KAAA,MAAI,CAAA,UAAU,+BACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAM,SAAA,EACrCxE,EAAA,IAAA,OAAA,CAAK,UAAW2vC,EAAS,SAAW,YAAc,iBAAmB,kBACnE,SAASA,EAAA,SAAW,YAAc,YAAc,SACnD,CAAA,CAAA,EACF,EAECnrC,EAAAA,KAAA,MAAI,CAAA,UAAU,+BACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAW,cAAA,EAC1CA,EAAAA,KAAA,OAAK,CAAA,UAAU,gBAAiB,SAAA,CAAA,WAAWmrC,EAAS,GAAG,EAAE,QAAQ,CAAC,EAAE,MAAA,CAAI,CAAA,CAAA,CAC3E,CAAA,CAAA,CAAA,EAtDKzlC,CAAA,CAwDR,CACH,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAEJ,EAEMq3D,GAA0B,CAAC,CAAE,OAAA7lD,EAAQ,QAAAC,EAAS,UAAA6lD,EAAW,OAAAx1D,EAAQ,YAAA6zD,EAAa,UAAAC,WAE/E1jD,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EAAAA,SACnC,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAC/S,EAAAA,IAAA,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,mLACtB,SAAA,CAAArc,MAACqc,GAAO,MAAP,CAAa,GAAG,KAAK,UAAU,mEAAmE,SAEnG,sBAAA,EAEC7X,EAAAA,KAAA,MAAI,CAAA,UAAU,iBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,MAAC,OAAI,IAAK6/D,GAAa,KAAM,IAAI,eAAe,UAAU,UAAU,EACnE7/D,EAAA,IAAA,OAAA,CAAK,UAAU,2CAA4C,YAAa,IAAK,CAAA,CAAA,EAChF,QACCshE,GAAA,CAAa,UAAU,iBAAiB,KAAM,GAAI,EAClD98D,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,MAAC,OAAI,IAAK8/D,GAAW,KAAM,IAAI,aAAa,UAAU,UAAU,EAC/D9/D,EAAA,IAAA,OAAA,CAAK,UAAU,2CAA4C,YAAW,IAAK,CAAA,CAAA,CAC9E,CAAA,CAAA,EACF,EAGCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,2CAA2C,SAAM,SAAA,EAChEA,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,MAAC,OAAI,IAAI,gBAAgB,IAAI,MAAM,UAAU,UAAU,EACtDwE,EAAAA,KAAA,OAAK,CAAA,UAAU,sDACb,SAAA,CAAAwH,EAAO,MAAA,CACV,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACCxH,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,2CAA2C,SAAW,cAAA,QACrE,OAAA,CAAK,UAAU,wCAAwC,SAAoB,sBAAA,CAAA,CAAA,CAC9E,CAAA,CAAA,EACF,EAGCA,EAAAA,KAAA,MAAI,CAAA,UAAU,wEACb,SAAA,OAAC60B,GAAO,CAAA,UAAU,gBAAgB,KAAM,GAAI,QAC3C,OAAA,CAAK,UAAU,2CAA2C,SAE3D,oCAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEC70B,EAAAA,KAAA,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,uGACV,QAASwhE,EACV,SAAA,gBAAA,CAED,EACAxhE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,gKACV,QAAS2b,EACV,SAAA,QAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAIE8lD,GAAW,CACf,IAAK,CACH,QAAS,CACP,GAAI,EACJ,KAAM,cACN,KAAM,WACN,SAAU,GACV,cAAexC,GAAiB,OAClC,EACA,QAAS,CACP,GAAI,SACJ,KAAM,UACN,KAAM,eACN,cAAeA,GAAiB,OAAA,CAEpC,EACA,SAAU,CACR,QAAS,CACP,GAAI,IACJ,KAAM,mBACN,KAAM,qBACN,SAAU,EACZ,EACA,QAAS,CACP,GAAI,KACJ,KAAM,mBACN,KAAM,oBAAA,CACR,CAEJ,EAEA,SAAwByC,IAAa,cAEhC,MAAI,CAAA,UAAU,uDACb,SAACl9D,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,yBACb,SAAAA,EAAA,IAAC,MAAG,UAAU,kDAAkD,kBAEhE,EACF,EAGCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAoD,EAClEA,EAAAA,IAAA,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,EACnEA,EAAAA,IAAA,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAuD,EACrEA,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wDAAwD,EACtEA,EAAAA,IAAA,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGCA,EAAAA,IAAA,MAAI,CAAA,UAAU,sFAAsF,EACpGA,EAAAA,IAAA,MAAI,CAAA,UAAU,uFAAuF,EACrGA,EAAAA,IAAA,MAAI,CAAA,UAAU,yFAAyF,EACvGA,EAAAA,IAAA,MAAI,CAAA,UAAU,0FAA0F,QAGxG,MAAI,CAAA,UAAU,iEACb,SAAAA,EAAA,IAAC2hE,KAAO,CACV,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,CAEA,SAASA,IAAS,CAEhB,KAAM,CAAE,QAAAp3D,EAAS,YAAAC,CAAY,EAAIC,GAAW,EACtC,CAAE,MAAAC,CAAM,EAAIC,GAAW,EACvB,CAAE,iBAAA4X,CAAiB,EAAIC,GAAgB,EAC7B45B,GAAY,EAG5B,KAAM,CAACwlB,EAAeC,CAAgB,EAAIjiE,EAAAA,SAAS,EAAI,EAGjD,CAACkiE,EAAqBC,CAAsB,EAAIniE,EAAS,SAAA6hE,GAAS,IAAI,OAAO,EAC7E,CAACO,EAAmBC,CAAoB,EAAIriE,EAAS,SAAA6hE,GAAS,SAAS,OAAO,EAG9E,CAACS,EAAcC,CAAe,EAAIviE,EAAAA,SAAS,EAAK,EAChD,CAACoM,EAAQo2D,CAAS,EAAIxiE,EAAAA,SAAS,EAAE,EACjC,CAACyiE,EAAWC,CAAY,EAAI1iE,EAAAA,SAAS,EAAK,EAC1C,CAAC2iE,EAAc7B,CAAe,EAAI9gE,EAAAA,SAAS,EAAK,EAChD,CAACgc,EAAa6G,CAAc,EAAI7iB,EAAAA,SAAS,IAAI,EAC7C,CAACm4C,EAAYyqB,CAAa,EAAI5iE,EAAAA,SAAS,GAAG,EAC1C,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACggE,EAAQe,CAAS,EAAI/gE,EAAAA,SAAS,IAAI,EACnC,CAACo2D,EAAkBC,CAAmB,EAAIr2D,EAAAA,SAAS,EAAK,EACxD,CAAC6iE,EAAeC,CAAgB,EAAI9iE,WAAS,CACjD,iBAAkB,GAClB,QAAS,EAAA,CACV,EACK,CAAC+iE,EAAaC,CAAc,EAAIhjE,EAAAA,SAAS,EAAK,EAC9C,CAACijE,EAAcC,CAAe,EAAIljE,EAAAA,SAAS,EAAK,EAGhD,CAACmjE,EAAkBC,CAAmB,EAAIpjE,EAAAA,SAAS,EAAK,EACxD,CAACqjE,EAAgBC,CAAiB,EAAItjE,EAAAA,SAAS,EAAK,EAG1DE,EAAAA,UAAU,IAAM,CACT0K,IAEDE,GAAO,KAAOo3D,EAAoB,GACnBY,EAAA,CACf,iBAAkB,GAClB,QAAS,gBAAgBZ,EAAoB,IAAI,EAAA,CAClD,EAEgBY,EAAA,CACf,iBAAkB,GAClB,QAAS,oBAAoBZ,EAAoB,IAAI,EAAA,CACtD,IAEF,CAACp3D,GAAO,GAAIF,EAAas3D,CAAmB,CAAC,EAGhDhiE,EAAAA,UAAU,IAAM,CACd,IAAIqzB,EAAU,GACV+hB,EAEJ,MAAM6Y,EAAe,SAAY,CAC3B,GAAA,GAACxjD,GAAW,CAAC4oB,GAEb,GAAA,CACF8iC,EAAoB,EAAI,EAExB,MAAM3nC,EAAU,MADC,IAAIlP,GAAuB,OAAO,QAAQ,EAC5B,WAAW7U,CAAO,EAC7C4oB,IACYqvC,EAAA7+C,GAAmB2K,CAAO,CAAC,EACzC2nC,EAAoB,EAAK,QAEb,CACV9iC,GACF8iC,EAAoB,EAAK,CAC3B,CAEJ,EAEMkN,EAAiB,IAAM,CACvBjuB,gBAAwBA,CAAS,EACzBA,EAAA,WAAW6Y,EAAc,GAAI,CAC3C,EAEa,OAAAA,EAAA,EAET,OAAO,WACF,OAAA,SAAS,GAAG,QAASoV,CAAc,EACnC,OAAA,SAAS,GAAG,eAAgBpV,CAAY,EACxC,OAAA,SAAS,GAAG,kBAAmBA,CAAY,GAG7C,IAAM,CACD56B,EAAA,GACN+hB,gBAAwBA,CAAS,EACjC,OAAO,WACF,OAAA,SAAS,eAAe,QAASiuB,CAAc,EAC/C,OAAA,SAAS,eAAe,eAAgBpV,CAAY,EACpD,OAAA,SAAS,eAAe,kBAAmBA,CAAY,EAElE,CACC,EAAA,CAACxjD,EAASG,GAAO,EAAE,CAAC,EAGQwwB,EAAY,YAAA,MAAO0kC,GAAW,CACvD,GAAA,CAGK,OADS,MADC,GAAIwD,SAAiB,gBAAgB,yBAAyB,EAChD,sBAAsBxD,CAAM,OAE7C,CACP,OAAA,IAAA,CACT,EACC,CAAE,CAAA,EAEC,MAAAyD,EAAsB77D,GAAM,CAC1B,MAAAzH,EAAQyH,EAAE,OAAO,OACnBzH,IAAU,IAAM,cAAc,KAAKA,CAAK,IAC1CqiE,EAAUriE,CAAK,CAEnB,EAEMujE,EAAqB,IAAM,CAC/B,GAAI,CAACt3D,GAAU,CAACy2D,EAAc,iBAAkB,OAE1C,MAAAc,EAAY,WAAWv3D,CAAM,EAC7Bw3D,EAAa,WAAWzrB,CAAU,EAExC,GAAIwrB,GAAa,EAAG,CAClBngE,EAAM,MAAM,6BAA6B,EACzC,MAAA,CAGF,GAAImgE,EAAYC,EAAY,CAC1BpgE,EAAM,MAAM,0BAA0B,EACtC,MAAA,CAGFw/D,EAAe,EAAI,CACrB,EAGMa,EAAoB,SAAY,CACpCnB,EAAa,EAAK,EAClB5B,EAAgB,EAAI,EACpBj+C,EAAe,OAAO,EACtBnhB,EAAW,EAAI,EAEX,GAAA,CAEI,MAAA6d,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAClC2nB,EAAc,MAAM5nB,EAAO,WAAW,EACtCukD,EAAUlkD,GAAkBxT,CAAM,EAIlCmhB,EAAK,MAFM,IAAIzhB,EAAgBo2D,EAAoB,cAAe5C,GAAe//C,CAAM,EAEnE,YACxB4nB,EACA,QACA,KACA,CACE,MAAO28B,CAAA,CAEX,EAKI,GAHJ/C,EAAUxzC,EAAG,IAAI,GAED,MAAMA,EAAG,KAAK,GAClB,SAAW,EACf,MAAA,IAAI,MAAM,2BAA2B,EAG7C1K,EAAe,SAAS,EAExB,WAAW,IAAM,CACfA,EAAe,UAAU,EACzBnhB,EAAW,EAAK,GACf,IAAM,QAEFsB,EAAO,CACRQ,EAAA,MAAMR,EAAM,SAAW,sBAAsB,EACnDtB,EAAW,EAAK,EAChBo/D,EAAgB,EAAK,EACrBj+C,EAAe,IAAI,EACnBk+C,EAAU,IAAI,CAAA,CAElB,EAGA7gE,EAAAA,UAAU,IAAM,CACd,MAAM6jE,EAA2B,SAAY,CAC3C,GAAKp5D,EAED,GAAA,CACF,MAAMuJ,EAAW,MAAM,MACrB,uDAAuDvJ,CAAO,6BAA6Bu3D,EAAoB,aAAa,EAC9H,EAEI,GAAA,CAAChuD,EAAS,GAAI,OAKlB,MAAM8vD,GAHO,MAAM9vD,EAAS,KAAK,GAGL,MACzB,OAAaqZ,GAAA,CACZ,MAAM02C,GAAS,IAAI,KAAK12C,EAAG,SAAS,EAAE,QAAQ,EACxC22C,GAAgB,KAAK,OAAO,KAAK,MAAQD,KAAW,IAAO,GAAG,EACpE,OAAO12C,EAAG,IAAI,MAAM,YAAkB,IAAA20C,EAAoB,cAAc,YAAY,GAC7E30C,EAAG,QAAU,KACbA,EAAG,eAAe,aAAa,SAAS,WAAW,IACjDA,EAAG,gBAAkB,GACrBA,EAAG,cAAgB,GAAK22C,GAAgB,EAAA,CAClD,EAEahB,EAAAc,EAAe,OAAS,CAAC,QAClChhE,EAAO,CACN,QAAA,MAAM,uCAAwCA,CAAK,CAAA,CAE/D,EAGyB+gE,EAAA,EACnB,MAAAzvD,EAAW,YAAYyvD,EAA0B,GAAK,EAErD,MAAA,IAAM,cAAczvD,CAAQ,CAClC,EAAA,CAAC3J,EAASu3D,EAAoB,aAAa,CAAC,EAGzC,MAAAiC,EAAsB,CAAC/kD,EAASmG,IAAS,CAC7C,GAAInG,EAAQ,SAAU,CACpB5b,EAAM,MAAM,8BAA8B,EAC1C,MAAA,CAIE+hB,IAAS,QACX48C,EAAuB/iD,CAAO,EAGPijD,EADnBL,EACmBH,GAAS,SAAS,QAElBA,GAAS,SAAS,OAFO,EAIhDuB,EAAoB,EAAK,IAGzBf,EAAqBjjD,CAAO,EAGH+iD,EADrBH,EACqBH,GAAS,IAAI,QAEbA,GAAS,IAAI,OAFO,EAI7CyB,EAAkB,EAAK,EAE3B,EAGMc,GAAkB,CAAC,CAAE,OAAAtoD,EAAQ,QAAAC,EAAS,SAAA43B,EAAU,KAAApuB,EAAM,UAAA8+C,KAAgB,CAC1E,GAAI,CAACvoD,GAAU,CAACuoD,EAAU,QAAgB,OAAA,KAEpC,MAAAC,EAAOD,EAAU,QAAQ,sBAAsB,EAG/CtrC,GAAWxT,IAAS,OAASs8C,GAAS,IAAMA,GAAS,SACrDziD,GAAU4iD,EAAgBjpC,GAAS,QAAUA,GAAS,QAErD,OAAArX,GAAA,aACLthB,EAAA,IAAC,MAAA,CACC,UAAU,aACV,MAAO,CACL,IAAK,GAAGkkE,EAAK,OAAS,CAAC,KACvB,KAAM/+C,IAAS,OAAS,GAAG++C,EAAK,IAAI,KAAO,OAC3C,MAAO/+C,IAAS,KAAO,GAAG,OAAO,WAAa++C,EAAK,KAAK,KAAO,MACjE,EAEA,eAAC,MAAI,CAAA,UAAU,wGACb,SAAC1/D,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,4DACZ,SAAA4hE,EAAgB,UAAY,UAC/B,EACAp9D,EAAA,KAAC,SAAA,CACC,QAAS,IAAM+uC,EAASv0B,EAAO,EAC/B,UAAU,kHACV,SAAUA,GAAQ,SAElB,SAAA,OAAC,MAAI,CAAA,UAAU,oFACb,eAAC,MAAI,CAAA,IAAKA,GAAQ,KAAM,IAAKA,GAAQ,KAAM,UAAU,SAAU,CAAA,EACjE,EACChf,EAAA,IAAA,OAAA,CAAK,UAAU,wCACb,YAAQ,KACX,EACCgf,GAAQ,YACNhf,EAAAA,IAAA,OAAK,CAAA,UAAU,iCAAiC,SAAW,aAAA,CAAA,CAAA,CAAA,CAAA,CAEhE,CAAA,CACF,CACF,CAAA,CAAA,CACF,EACA,SAAS,IACX,CACF,EAGMmkE,GAAgBtsC,SAAO,IAAI,EAC3BusC,GAAcvsC,SAAO,IAAI,EA6B/B,OA1BA/3B,EAAAA,UAAU,IAAM,CACR,MAAA+mC,EAAsB1sB,GAAU,CAChCgqD,GAAc,SAAW,CAACA,GAAc,QAAQ,SAAShqD,EAAM,MAAM,GACvE6oD,EAAoB,EAAK,EAEvBoB,GAAY,SAAW,CAACA,GAAY,QAAQ,SAASjqD,EAAM,MAAM,GACnE+oD,EAAkB,EAAK,CAE3B,EAES,gBAAA,iBAAiB,YAAar8B,CAAkB,EAClD,IAAM,SAAS,oBAAoB,YAAaA,CAAkB,CAC3E,EAAG,EAAE,EAGL/mC,EAAAA,UAAU,IAAM,CACV8hE,GACqBG,EAAAN,GAAS,IAAI,OAAO,EACtBQ,EAAAR,GAAS,SAAS,OAAO,IAEvBM,EAAAN,GAAS,IAAI,OAAO,EACtBQ,EAAAR,GAAS,SAAS,OAAO,EAChD,EACC,CAACG,CAAa,CAAC,EAGbp3D,EAmEFhG,EAAA,KAAA,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0GAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM6hE,EAAiB,EAAI,EACpC,UAAW,gEACTD,EACI,0BACA,wGACN,GACD,SAAA,SAAA,CAED,EACA5hE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM6hE,EAAiB,EAAK,EACrC,UAAW,gEACRD,EAEG,yGADA,yBAEN,GACD,SAAA,SAAA,CAAA,CAED,EACF,EAGAp9D,EAAA,KAAC,SAAA,CACC,QAAS,IAAM29D,EAAgB,EAAI,EACnC,UAAU,+NAEV,SAAA,CAAAniE,EAAA,IAACq5B,GAAA,CACC,UAAW,kBAAkBwpC,EAAe,eAAiB,EAAE,GAC/D,KAAM,EAAA,CACR,EACC7iE,EAAAA,IAAA,QAAK,SAAO,UAAA,EACZ6iE,GACE7iE,EAAAA,IAAA,MAAI,CAAA,UAAU,qDAAsD,CAAA,CAAA,CAAA,CAAA,CAEzE,EACF,QAGC,MAAI,CAAA,UAAU,4DACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,SACb,SAAA,OAAC,MAAA,CAAI,UAAU,gDAAgD,SAAI,OAAA,SAClE,MAAA,CAAI,UAAU,WAAW,IAAK2/D,GAC7B,SAAA,CAAA3/D,EAAA,KAAC,SAAA,CACC,UAAU,qGACV,QAAS,IAAM,CACbw+D,EAAoB,CAACD,CAAgB,EACrCG,EAAkB,EAAK,CACzB,EAEA,SAAA,OAAC,MAAI,CAAA,UAAU,6FACb,eAAC,MAAI,CAAA,IAAKpB,EAAoB,KAAM,IAAKA,EAAoB,KAAM,UAAU,SAAU,CAAA,EACzF,EACC9hE,EAAA,IAAA,OAAA,CAAK,UAAU,4CAA6C,WAAoB,KAAK,EACtFA,EAAA,IAACqjB,GAAA,CACC,UAAW,2DAA2D0/C,EAAmB,aAAe,EAAE,GAC1G,KAAM,EAAA,CAAA,CACR,CAAA,CACF,EAEA/iE,EAAA,IAACgkE,GAAA,CACC,OAAQjB,EACR,QAAS,IAAMC,EAAoB,EAAK,EACxC,SAAWhkD,GAAY+kD,EAAoB/kD,EAAS,MAAM,EAC1D,KAAK,OACL,UAAWmlD,EAAA,CAAA,CACb,CACF,CAAA,CAAA,EACF,EAECnkE,EAAAA,IAAA,MAAI,CAAA,UAAU,WACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,iIACV,QAAS,CAAE,EAAG,CAAC,EAAG,EAAG,CAAC,CAAE,EACxB,WAAY,CACV,SAAU,IACV,KAAM,YACN,OAAQ,GACV,EAEA,eAACgzD,GAAA,CAAa,KAAM,GAAI,UAAU,gBAAiB,CAAA,CAAA,CAAA,EAEvD,EAEC98D,EAAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,OAAC,MAAA,CAAI,UAAU,gDAAgD,SAAE,KAAA,EAChExE,EAAAA,IAAA,OAAI,UAAU,sCACb,SAACwE,EAAAA,KAAA,MAAI,CAAA,UAAU,WAAW,IAAK4/D,GAC7B,SAAA,CAAA5/D,EAAA,KAAC,SAAA,CACC,UAAU,qGACV,QAAS,IAAM,CACb0+D,EAAkB,CAACD,CAAc,EACjCD,EAAoB,EAAK,CAC3B,EAEA,SAAA,OAAC,MAAI,CAAA,UAAU,6FACb,eAAC,MAAI,CAAA,IAAKhB,EAAkB,KAAM,IAAKA,EAAkB,KAAM,UAAU,SAAU,CAAA,EACrF,EACChiE,EAAA,IAAA,OAAA,CAAK,UAAU,4CAA6C,WAAkB,KAAK,EACpFA,EAAA,IAACqjB,GAAA,CACC,UAAW,2DAA2D4/C,EAAiB,aAAe,EAAE,GACxG,KAAM,EAAA,CAAA,CACR,CAAA,CACF,EAEAjjE,EAAA,IAACgkE,GAAA,CACC,OAAQf,EACR,QAAS,IAAMC,EAAkB,EAAK,EACtC,SAAWlkD,GAAY+kD,EAAoB/kD,EAAS,IAAI,EACxD,KAAK,KACL,UAAWolD,EAAA,CAAA,CACb,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAGC5/D,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,OAACo7B,GAAA,CAAQ,QACNp7B,EAAAA,KAAA,MAAI,CAAA,SAAA,CAAA,uBACY,KAAG,EAAA,EAAE,cAAA,CAEtB,CAAA,EAEA,gBAAC,MAAI,CAAA,UAAU,+EACb,SAAA,CAACxE,EAAAA,IAAAqkE,GAAA,CAAsB,UAAU,UAAU,EAAE,eAAA,CAAA,CAE/C,CAAA,CACF,EAECrkE,EAAAA,IAAAinC,GAAgB,CAAA,KAAK,OACpB,SAAAziC,EAAA,KAAC8J,EAAO,IAAP,CAEC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,KAAM,CAAE,QAAS,CAAE,EACnB,WAAY,CAAE,SAAU,EAAI,EAC5B,UAAU,0BAEV,SAAA,OAAC8R,GAAS,CAAA,UAAU,mCAAmC,KAAM,GAAI,QAChE,OAAA,CAAK,UAAU,2CACb,SACC41C,EAAAh2D,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,6DAAA,CAAA,EAGZ,YAAY,WAAWypC,CAAU,EAAE,QAAQ,CAAC,CAAC,MAEjD,CAAA,CAAA,CAAA,EAhBKie,EAAmB,UAAY,QAAA,CAkBxC,CAAA,CAAA,EACF,EAECh2D,EAAAA,IAAA,MAAI,CAAA,UAAU,WACb,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOgM,EACP,SAAUq3D,EACV,YAAY,MACZ,UAAW,sNACThiE,EAAU,gCAAkC,EAC9C,GACA,SAAUA,CAAA,CAAA,CAEd,CAAA,CAAA,EACF,EAGCmD,EAAAA,KAAA,MAAI,CAAA,UAAU,oGACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,OAAC,OAAA,CAAK,UAAU,sDAAsD,SAAuB,0BAAA,EAC5FA,EAAAA,KAAA,MAAI,CAAA,UAAU,sFACb,SAAA,CAAAxE,MAAC,OAAI,IAAI,qBAAqB,IAAI,WAAW,UAAU,UAAU,QAChE,OAAA,CAAK,UAAU,oDAAoD,SAAa,eAAA,CAAA,CAAA,CACnF,CAAA,CAAA,EACF,EAECwE,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAxE,EAAAA,IAAC4/B,IAAQ,QAAQ,oDACf,SAACp7B,EAAA,KAAA,MAAA,CAAI,UAAU,+EACb,SAAA,OAAC8/D,GAAU,CAAA,UAAU,mCAAmC,KAAM,GAAI,EACjEtkE,EAAAA,IAAA,QAAK,SAAW,cAAA,EAChBA,EAAAA,IAAAqkE,GAAsB,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC7C,CAAA,CACF,QAEC,OAAA,CAAK,UAAU,2CAA2C,SAE3D,sBAAA,CAAA,CAAA,EACF,EAEC7/D,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mEACb,SAAA,OAAC60B,GAAO,CAAA,UAAU,mCAAmC,KAAM,GAAI,EAC9Dr5B,EAAAA,IAAA,QAAK,SAAc,gBAAA,CAAA,CAAA,EACtB,QACC,OAAA,CAAK,UAAU,wCAAwC,SAAO,SAAA,CAAA,CAAA,EACjE,EAECwE,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,2CAA2C,SAAgB,mBAAA,EAC1EA,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,oDAAqD,SAAAgM,GAAU,IAAI,EAClFxH,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,MAAC,OAAI,IAAI,gBAAgB,IAAI,MAAM,UAAU,UAAU,QACtD,OAAA,CAAK,UAAU,oDAAoD,SAAG,MAAA,EACtEA,EAAAA,IAAA,MAAI,CAAA,UAAU,mBACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAI,qBACJ,IAAI,WACJ,UAAU,qCAAA,CAAA,CAEd,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAA,EAAA,IAAC,SAAA,CACC,QAASsjE,EACT,SAAU,CAACt3D,GAAU3K,GAAW,CAACohE,EAAc,iBAC/C,UAAW,6HACTz2D,GAAU,CAAC3K,GAAWohE,EAAc,iBAChC,uEACA,kFACN,GAEC,SAAAphE,EACG,gBACCohE,EAAc,iBAEZz2D,EAEC,gBADA,eAFF,0BAGE,CAAA,CAEV,EACF,EAGCxH,EAAAA,KAAA,MAAI,CAAA,UAAU,uGACb,SAAA,OAAC,KAAA,CAAG,UAAU,yDAAyD,SAA2C,8CAAA,EACjHA,EAAAA,KAAA,IAAE,CAAA,UAAU,2CAA2C,SAAA,CAAA,iCACvB,IAC/BxE,EAAA,IAAC,IAAA,CACC,KAAK,2CACL,OAAO,SACP,IAAI,sBACJ,UAAU,2CACX,SAAA,aAAA,CAED,EACC,IAAI,KAAG,IACRA,EAAA,IAAC,IAAA,CACC,KAAK,2CACL,OAAO,SACP,IAAI,sBACJ,UAAU,sCACX,SAAA,SAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAEAA,EAAA,IAACygE,GAAA,CACC,OAAQyB,EACR,QAAS,IAAMC,EAAgB,EAAK,EACpC,QAAA53D,EACA,gBAAAm2D,EACA,eAAAj+C,EACA,UAAAk+C,CAAA,CACF,EAEA3gE,EAAA,IAACggE,GAAA,CACC,OAAQqC,EACR,QAAS,IAAMC,EAAa,EAAK,EACjC,SAAUmB,CAAA,CACZ,EAEAzjE,EAAA,IAAC2/D,GAAA,CACC,OAAQ4C,EACR,QAAS,IAAM7B,EAAgB,EAAK,EACpC,YAAA9kD,EACA,OAAAgkD,EACA,YAAakC,EACb,UAAWE,CAAA,CACb,EAEAhiE,EAAA,IAACuhE,GAAA,CACC,OAAQoB,EACR,QAAS,IAAMC,EAAe,EAAK,EACnC,UAAW,IAAM,CACfA,EAAe,EAAK,EACpBN,EAAa,EAAI,CACnB,EACA,OAAAt2D,EACA,YAAa81D,EACb,UAAWE,CAAA,CAAA,CACb,EACF,EAvXGx9D,EAAA,KAAA,MAAI,CAAA,UAAU,WAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAoD,EAClEA,EAAAA,IAAA,MAAI,CAAA,UAAU,mDAAoD,CAAA,CAAA,EACrE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,2CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,EACnEA,EAAAA,IAAA,MAAI,CAAA,UAAU,oDAAqD,CAAA,CAAA,EACtE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,6CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uDAAuD,EACrEA,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,EACxE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,wDAAwD,EACtEA,EAAAA,IAAA,MAAI,CAAA,UAAU,uDAAwD,CAAA,CAAA,EACzE,EAGCA,EAAAA,IAAA,MAAI,CAAA,UAAU,sFAAsF,EACpGA,EAAAA,IAAA,MAAI,CAAA,UAAU,uFAAuF,EACrGA,EAAAA,IAAA,MAAI,CAAA,UAAU,yFAAyF,EACvGA,EAAAA,IAAA,MAAI,CAAA,UAAU,0FAA0F,EAGxGA,EAAAA,IAAA,MAAI,CAAA,UAAU,yCACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,MAAA,CAEC,UAAU,sDACV,MAAO,CAAE,eAAgB,GAAGwO,EAAI,EAAG,GAAI,CAAA,EAFlCA,CAIR,CAAA,EACH,QAGC,MAAI,CAAA,UAAU,0DACb,SAAChK,EAAA,KAAA,MAAA,CAAI,UAAU,uDACb,SAAA,OAAC,MAAI,CAAA,UAAU,8FACb,SAACA,EAAA,KAAA,MAAI,CAAA,UAAU,2BAA2B,KAAK,OAAO,QAAQ,YAAY,OAAO,eAC/E,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,EAAE,oCAAA,CAAqC,EAC5GA,EAAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,IAAK,EAAE,oBAAqB,CAAA,CAAA,CAAA,CAC9F,CAAA,CACF,QACC,KAAA,CAAG,UAAU,+DAA+D,SAE7E,sBAAA,QACC,IAAA,CAAE,UAAU,6EAA6E,SAE1F,sIAAA,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS+d,EACT,UAAU,yIAEV,SAAA,OAAC,OAAA,CAAK,UAAU,OAAO,SAAC,IAAA,EAAO,gBAAA,CAAA,CAAA,CAEjC,CAAA,CACF,CACF,CAAA,CAAA,EACF,CA6TN,CCj9CA,MAAMzd,GAAe,6CAGfy/D,GAAa,CACjB,aAAc,aACd,WAAY,YACd,EAEMC,GAAa,CACjB,IAAK,CACH,KAAM,UACN,SAAU,MACV,eAAgB,6CAChB,kBAAmB,6CACnB,IAAK,0BACL,QAAS,MACX,EACA,IAAK,CACH,KAAM,mBACN,SAAU,MACV,eAAgB,6CAChB,kBAAmB,6CACnB,IAAK,+BACL,QAAS,MACX,EACA,KAAM,CACJ,KAAM,WACN,SAAU,MACV,eAAgB,6CAChB,kBAAmB,6CACnB,IAAK,+BACL,QAAS,OACX,EACA,WAAY,CACV,KAAM,aACN,SAAU,OACV,eAAgB,6CAChB,kBAAmB,6CACnB,IAAK,+CACL,QAAS,YACX,EACA,MAAO,CACL,KAAM,gBACN,SAAU,MACV,eAAgB,6CAChB,kBAAmB,6CACnB,IAAK,iCACL,QAAS,QAAA,CAEb,EAEM15C,GAAc,CAClB,qDACA,wCACA,gDACA,mCACA,+BACA,+JACA,gFACF,EAEA,SAAS25C,IAAc,CACf,KAAA,CAAE,QAAAl6D,CAAQ,EAAIE,GAAW,EACzB,CAACi6D,EAAeC,CAAgB,EAAI/kE,EAAAA,SAAS,MAAM,EACnD,CAACqiD,EAAM2iB,CAAO,EAAIhlE,EAAAA,SAAS,CAAA,CAAE,EAC7B,CAACilE,EAAYC,CAAa,EAAIllE,EAAAA,SAAS,CAAA,CAAE,EACzC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACmlE,EAASC,CAAU,EAAIplE,EAAAA,SAAS,CAAA,CAAE,EACnC,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,IAAI,EACjC,CAACqlE,EAAcC,CAAe,EAAItlE,EAAAA,SAAS,CAAA,CAAE,EAC7C,CAACulE,EAAcC,CAAe,EAAIxlE,EAAS,SAAA,CAAE,OAAQ,CAAI,EAAA,KAAM,CAAA,EAAI,EAEnE2B,EAAUgJ,GAAS,YAAY,IAAMzF,GAAa,YAAY,EAE9D0iC,EAAep8B,GAAY,CACzB,MAAA4T,EAAUwlD,GAAWp5D,CAAO,EAClC,OAAO,IAAIqY,GACTzE,EAAQ,IACR,CACE,QAAS,OAAO5T,CAAO,EACvB,KAAM4T,EAAQ,IAAA,CAElB,CACF,EAEMqmD,EAAoB,SAAY,CAChC,GAAA,CACI,MAAAC,MAA0B,IAC1BC,MAAwB,IACxBC,MAAgC,IAChCC,MAA8B,IACpC,IAAIC,EAAsB,EACtBC,EAAoB,EACpBC,EAA0B,EAC1BC,EAAwB,EAC5B,MAAMC,EAAW,CAAC,EACZC,EAAS,CAAC,EAEVC,EAAY,KAAK,OAAO,KAAK,MAAQ,GAAK,GAAK,GAAK,KAAQ,GAAI,EAChEC,EAAOzB,GAAWE,CAAa,EAEjC,GAAA,CACI,MAAAn8C,EAAUm8C,IAAkB,OAC9B,0CACAA,IAAkB,MAClB,kCACAA,IAAkB,MAClB,kCACA,sDAGJ,GAAIA,IAAkB,MAAO,CACrB,MAAAwB,EAAS,qCACTC,EAAoB,GAAG59C,CAAO,yCAAyC09C,EAAK,cAAc,WAAWC,CAAM,GAC3GE,EAAkB,GAAG79C,CAAO,yCAAyC09C,EAAK,iBAAiB,WAAWC,CAAM,GAE5G,CAACG,GAAeC,EAAW,EAAI,MAAM,QAAQ,IAAI,CACrD,MAAMH,CAAiB,EACvB,MAAMC,CAAe,CAAA,CACtB,EAED,GAAI,CAACC,GAAc,IAAM,CAACC,GAAY,GAC9B,MAAA,IAAI,MAAM,gCAAgC,EAGlD,KAAM,CAACtmD,GAAWumD,CAAO,EAAI,MAAM,QAAQ,IAAI,CAC7CF,GAAc,KAAK,EACnBC,GAAY,KAAK,CAAA,CAClB,EAGD,GAAIC,EAAQ,QAAU,MAAM,QAAQA,EAAQ,MAAM,GACrC,UAAAp5C,KAAMo5C,EAAQ,OACvB,GAAIp5C,EAAG,IAAI,YAAkB,IAAA84C,EAAK,mBAAmB,YAAY,GAC7D94C,EAAG,UAAY,KACfA,EAAG,OAAO,WAAWo3C,GAAW,UAAU,EAAG,CAC/CoB,IACM,MAAAa,EAAUr5C,EAAG,MAAM,YAAY,EACrC,GAAIq5C,EAAS,CACXjB,EAAkB,IAAIiB,CAAO,EAEvB,MAAAC,EAAc,SAASt5C,EAAG,SAAS,EACrCs5C,GAAeT,IACjBP,EAAwB,IAAIe,CAAO,EACnCX,KAGFE,EAAO,KAAK,CACV,KAAM54C,EAAG,KACT,QAASA,EAAG,KACZ,UAAW,IAAI,KAAKs5C,EAAc,GAAI,EAAE,YAAY,EACpD,YAAat5C,EAAG,WAAA,CACjB,CAAA,CACH,EAMN,GAAInN,GAAU,QAAU,MAAM,QAAQA,GAAU,MAAM,GACzC,UAAAmN,KAAMnN,GAAU,OACzB,GAAImN,EAAG,IAAI,YAAkB,IAAA84C,EAAK,gBAAgB,YAAY,GAC1D94C,EAAG,UAAY,KACfA,EAAG,OAAO,WAAWo3C,GAAW,YAAY,EAAG,CACjDmB,IACM,MAAAc,EAAUr5C,EAAG,MAAM,YAAY,EACrC,GAAIq5C,EAAS,CACXlB,EAAoB,IAAIkB,CAAO,EAEzB,MAAAC,EAAc,SAASt5C,EAAG,SAAS,EACrCs5C,GAAeT,IACjBR,EAA0B,IAAIgB,CAAO,EACrCZ,KAGFE,EAAS,KAAK,CACZ,KAAM34C,EAAG,KACT,QAASA,EAAG,KACZ,UAAW,IAAI,KAAKs5C,EAAc,GAAI,EAAE,YAAY,EACpD,YAAat5C,EAAG,WAAA,CACjB,CAAA,CACH,EAGN,KACK,CAEL,MAAMg5C,EAAoB,GAAG59C,CAAO,qBAAqB09C,EAAK,cAAc,+BACtEG,EAAkB,GAAG79C,CAAO,qBAAqB09C,EAAK,iBAAiB,+BAEvE,CAACI,EAAeC,EAAW,EAAI,MAAM,QAAQ,IAAI,CACrD,MAAMH,CAAiB,EACvB,MAAMC,CAAe,CAAA,CACtB,EAED,GAAI,CAACC,EAAc,IAAM,CAACC,GAAY,GAC9B,MAAA,IAAI,MAAM,+BAA+B,EAGjD,KAAM,CAACtmD,GAAWumD,EAAO,EAAI,MAAM,QAAQ,IAAI,CAC7CF,EAAc,KAAK,EACnBC,GAAY,KAAK,CAAA,CAClB,EAGD,GAAIC,GAAQ,OAAS,MAAM,QAAQA,GAAQ,KAAK,GACnC,UAAAp5C,KAAMo5C,GAAQ,MAEnB,GAAAp5C,EAAG,IAAI,MAAM,gBAAkB84C,EAAK,mBAAmB,YAAY,GACnE94C,EAAG,SAAW,OACbA,EAAG,SAAWo3C,GAAW,YAAcp3C,EAAG,eAAe,YAAco3C,GAAW,WAAW,MAAM,CAAC,GAAI,CACnG,QAAA,IAAI,sBAAuBp3C,EAAG,KAAMA,EAAG,OAAQA,EAAG,eAAe,SAAS,EAClFw4C,IACA,MAAMa,EAAUr5C,EAAG,MAAM,MAAM,YAAY,EACvCq5C,IACFjB,EAAkB,IAAIiB,CAAO,EAET,IAAI,KAAKr5C,EAAG,SAAS,EAAE,UAAY,KACpC64C,IACjBP,EAAwB,IAAIe,CAAO,EACnCX,KAIFE,EAAO,KAAK,CACV,KAAM54C,EAAG,KACT,QAASA,EAAG,KAAK,KACjB,UAAWA,EAAG,UACd,YAAaA,EAAG,YAAA,CACjB,EACH,EAMN,GAAInN,GAAU,OAAS,MAAM,QAAQA,GAAU,KAAK,GACvC,UAAAmN,KAAMnN,GAAU,MAErB,GAAAmN,EAAG,IAAI,MAAM,gBAAkB84C,EAAK,gBAAgB,YAAY,GAChE94C,EAAG,SAAW,OACbA,EAAG,SAAWo3C,GAAW,cAAgBp3C,EAAG,eAAe,YAAco3C,GAAW,aAAa,MAAM,CAAC,GAAI,CACvG,QAAA,IAAI,wBAAyBp3C,EAAG,KAAMA,EAAG,OAAQA,EAAG,eAAe,SAAS,EACpFu4C,IACA,MAAMc,EAAUr5C,EAAG,MAAM,MAAM,YAAY,EACvCq5C,IACFlB,EAAoB,IAAIkB,CAAO,EAEX,IAAI,KAAKr5C,EAAG,SAAS,EAAE,UAAY,KACpC64C,IACjBR,EAA0B,IAAIgB,CAAO,EACrCZ,KAIFE,EAAS,KAAK,CACZ,KAAM34C,EAAG,KACT,QAASA,EAAG,KAAK,KACjB,UAAWA,EAAG,UACd,YAAaA,EAAG,YAAA,CACjB,EACH,EAGN,CAGc+3C,EAAA,CACd,mBAAoBQ,EACpB,iBAAkBC,EAClB,qBAAsBC,EACtB,mBAAoBC,EACpB,oBAAqBP,EAAoB,KACzC,kBAAmBC,EAAkB,IAAA,CACtC,EAGeH,EAAA,CACd,OAAQU,EAAS,KAAK,CAACp8D,EAAGC,IAAM,IAAI,KAAKA,EAAE,SAAS,EAAI,IAAI,KAAKD,EAAE,SAAS,CAAC,EAC7E,KAAMq8D,EAAO,KAAK,CAACr8D,EAAGC,IAAM,IAAI,KAAKA,EAAE,SAAS,EAAI,IAAI,KAAKD,EAAE,SAAS,CAAC,CAAA,CAC1E,OAEa,CAER,MAAAg9D,EAA0BpB,EAAqBE,EAA2BQ,CAAS,EACnF,MAAAW,EAAwBpB,EAAmBE,EAAyBO,CAAS,CAAA,OAGvE,CACd5iE,EAAM,MAAM,mCAAmC,CAAA,CAEnD,EAGMsjE,EAA4B,MAAOpB,EAAqBE,EAA2BQ,IAAc,CAC/F,MAAAC,EAAOzB,GAAWE,CAAa,EAC/B98D,EAAW4/B,EAAYk9B,CAAa,EAC1C,MAAM98D,EAAS,MACM,IAAI8D,EAAgBu6D,EAAK,eAAgBn7C,GAAaljB,CAAQ,EAE7E,MAAAoS,EAAc,MAAMpS,EAAS,eAAe,EAC5Cg/D,EAAa,IACb3sD,EAAa,KAAK,IAAI,EAAGD,EAAc,GAAK,EAElD,QAAS0tB,EAAYztB,EAAYytB,GAAa1tB,EAAa0tB,GAAak/B,EAAY,CAClF,MAAMC,EAAU,KAAK,IAAIn/B,EAAYk/B,EAAa,EAAG5sD,CAAW,EAC5D,GAAA,CACF,MAAM8sD,EAAc,CAClB,QAASb,EAAK,eACd,OAAQ,CACNnmD,GAAU,kEAAkE,CAC9E,EACA,UAAA4nB,EACA,QAAAm/B,CACF,EAEME,EAAc,MAAMn/D,EAAS,QAAQk/D,CAAW,EAEtD,UAAW3sD,KAAS4sD,EAAa,CACzB,MAAAP,EAAU5f,GAAiBzsC,EAAM,OAAO,CAAC,EAAG,EAAE,EAAE,YAAY,EAClEmrD,EAAoB,IAAIkB,CAAO,EAE/B,MAAMnsD,EAAQ,MAAMzS,EAAS,SAASuS,EAAM,WAAW,EACnDE,GAASA,EAAM,WAAa2rD,GAC9BR,EAA0B,IAAIgB,CAAO,CACvC,OAEY,CAAA,CAEhB,CAEJ,EAGMG,EAA0B,MAAOpB,EAAmBE,EAAyBO,IAAc,CACzF,MAAAC,EAAOzB,GAAWE,CAAa,EAC/B98D,EAAW4/B,EAAYk9B,CAAa,EAC1C,MAAM98D,EAAS,MACf,MAAMo/D,EAAa,IAAIt7D,EAAgBu6D,EAAK,kBAAmBn7C,GAAaljB,CAAQ,EAE9EoS,EAAc,MAAMpS,EAAS,eAAe,EAC5Cg/D,EAAa,IACb3sD,EAAa,KAAK,IAAI,EAAGD,EAAc,GAAK,EAElD,QAAS0tB,EAAYztB,EAAYytB,GAAa1tB,EAAa0tB,GAAak/B,EAAY,CAClF,MAAMC,EAAU,KAAK,IAAIn/B,EAAYk/B,EAAa,EAAG5sD,CAAW,EAC5D,GAAA,CACI,MAAAitD,EAAYD,EAAW,QAAQ,qBAAqB,EACpDE,EAAY,MAAMF,EAAW,YAAYC,EAAWv/B,EAAWm/B,CAAO,EAE5E,UAAW1sD,KAAS+sD,EAAW,CAC7B,MAAMV,EAAUrsD,EAAM,KAAK,QAAQ,YAAY,EAC/CorD,EAAkB,IAAIiB,CAAO,EAE7B,MAAMnsD,EAAQ,MAAMzS,EAAS,SAASuS,EAAM,WAAW,EACnDE,GAASA,EAAM,WAAa2rD,GAC9BP,EAAwB,IAAIe,CAAO,CACrC,OAEY,CAAA,CAEhB,CAEJ,EAEMW,EAAe,MAAO/7D,EAAS+Z,IAAS,CAC5C,GAAI,CAAC5jB,EAAS,CACZ6B,EAAM,MAAM,8BAA8B,EAC1C,MAAA,CAGI,MAAAgkE,EAAUhkE,EAAM,QAAQ,yBAAyB,EAEnD,GAAA,CAEI,MAAA+Z,EAAiB,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,cAAe,EACxEkqD,EAAgB7C,GAAWp5D,CAAO,EAAE,QAG1C,GAAI+R,IAAmBkqD,EACjB,GAAA,CACI,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,6BACR,OAAQ,CAAC,CAAE,QAASA,CAAe,CAAA,CAAA,CACpC,EAED,MAAM,IAAI,QAAQ55C,GAAW,WAAWA,EAAS,GAAI,CAAC,OACxC,CACdrqB,EAAM,MAAM,2BAA4B,CAAE,GAAIgkE,EAAS,EACvD,MAAA,CAKE,MAAAjoD,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAElCC,EAAiB8F,IAAS,QAC5Bq/C,GAAWp5D,CAAO,EAAE,eACpBo5D,GAAWp5D,CAAO,EAAE,kBAElBkU,EAAU,IAAI5T,EAAgB2T,EAAgByL,GAAa3L,CAAM,EAGjEmoD,EAAmBniD,IAAS,QAC9B0/C,EAAWz5D,CAAO,GAAG,MACrBy5D,EAAWz5D,CAAO,GAAG,IAErB,GAAA,CAACk8D,GAAoBA,IAAqB,IAAK,CACjDlkE,EAAM,MAAM,gCAAiC,CAAE,GAAIgkE,EAAS,EAC5D,MAAA,CAGFhkE,EAAM,QAAQ,oCAAqC,CAAE,GAAIgkE,EAAS,EAG5D,MAAAj6C,EAAK,MAAOhI,IAAS,QAAU7F,EAAQ,SAAS,EAAIA,EAAQ,gBAElElc,EAAM,QAAQ,2BAA4B,CAAE,GAAIgkE,EAAS,EAEzD,MAAMj6C,EAAG,KAAK,EACd/pB,EAAM,QAAQ,8BAA+B,CAAE,GAAIgkE,EAAS,EAG5D,MAAMG,EAAgB,QACf3kE,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EACxCQ,EAAA,MAAM,2BAA2BR,EAAM,OAAO,GAAI,CAAE,GAAIwkE,EAAS,CAAA,CAE3E,EAEMG,EAAkB,SAAY,CAClC,MAAMC,EAAS,CAAC,EAEZ,GAAA,CACI,MAAAvB,EAAOzB,GAAWE,CAAa,EACjC,GAAA,CACI,MAAA98D,EAAW4/B,EAAYk9B,CAAa,EAC1C,MAAM98D,EAAS,MAEf,MAAM6/D,EAAe,IAAI/7D,EAAgBu6D,EAAK,eAAgBn7C,GAAaljB,CAAQ,EAC7Eo/D,EAAa,IAAIt7D,EAAgBu6D,EAAK,kBAAmBn7C,GAAaljB,CAAQ,EAE9E,CAAC22C,EAAcmpB,CAAU,EAAI,MAAM,QAAQ,IAAI,CACnD9/D,EAAS,WAAWq+D,EAAK,cAAc,EACvCr+D,EAAS,WAAWq+D,EAAK,iBAAiB,CAAA,CAC3C,EAEDuB,EAAO9C,CAAa,EAAI,CACtB,MAAO/gD,GAAmB46B,GAAgB,GAAG,EAC7C,IAAK56B,GAAmB+jD,GAAc,GAAG,EACzC,SAAUzB,EAAK,QACjB,OACmB,CACnBuB,EAAO9C,CAAa,EAAI,CACtB,MAAO,IACP,IAAK,IACL,SAAUuB,EAAK,SACf,MAAO,EACT,CAAA,CAGFnB,EAAc0C,CAAM,OACN,CACdpkE,EAAM,MAAM,4BAA4B,CAAA,CAE5C,EAEMukE,EAAY,SAAY,CAC5BrmE,EAAW,EAAI,EACf+7B,EAAS,IAAI,EACb,MAAM0nC,EAAU,CAAC,EAEb,GAAA,CACI,MAAAkB,EAAOzB,GAAWE,CAAa,EACjC,GAAA,CACI,MAAA98D,EAAW4/B,EAAYk9B,CAAa,EAC1C,MAAM98D,EAAS,MAEf,MAAM6/D,EAAe,IAAI/7D,EAAgBu6D,EAAK,eAAgBn7C,GAAaljB,CAAQ,EAC7Eo/D,EAAa,IAAIt7D,EAAgBu6D,EAAK,kBAAmBn7C,GAAaljB,CAAQ,EAE9E,CAACggE,EAAUC,CAAM,EAAI,MAAM,QAAQ,IAAI,CAC3CJ,EAAa,UAAU/C,CAAa,EACpCsC,EAAW,UAAUtC,CAAa,CAAA,CACnC,EAEDK,EAAQL,CAAa,EAAI,CACvB,MAAO/gD,GAAmBikD,GAAY,GAAG,EACzC,IAAKjkD,GAAmBkkD,GAAU,GAAG,EACrC,SAAU5B,EAAK,QACjB,OACmB,CACnBlB,EAAQL,CAAa,EAAI,CACvB,MAAO,IACP,IAAK,IACL,SAAUuB,EAAK,SACf,MAAO,EACT,EACS5oC,EAAA,2BAA2B4oC,EAAK,IAAI,qBAAqB,CAAA,CAGpErB,EAAQG,CAAO,OACD,CACd1nC,EAAS,yCAAyC,EAClDj6B,EAAM,MAAM,qBAAqB,CAAA,QACjC,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEMwmE,EAAY,MAAO18D,EAAS+Z,EAAM4iD,IAAW,CACjD,GAAI,CAACxmE,EAAS,CACZ6B,EAAM,MAAM,4BAA4B,EACxC,MAAA,CAGF,GAAI,CAAC2kE,GAAU,MAAMA,CAAM,EAAG,CAC5B3kE,EAAM,MAAM,iCAAiC,EAC7C,MAAA,CAGI,MAAAgkE,EAAUhkE,EAAM,QAAQ,iBAAiB,EAE3C,GAAA,CAEI,MAAA+b,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAElCC,EAAiB8F,IAAS,QAC5Bq/C,GAAWp5D,CAAO,EAAE,eACpBo5D,GAAWp5D,CAAO,EAAE,kBASxB,MALW,MAFK,IAAIM,EAAgB2T,EAAgByL,GAAa3L,CAAM,EAE9C,YACvB/T,EACAoU,GAAkBuoD,EAAO,SAAU,CAAA,CACrC,GAES,KAAK,EACd3kE,EAAM,QAAQ,2BAA4B,CAAE,GAAIgkE,EAAS,EAEzD,MAAMO,EAAU,OACF,CACdvkE,EAAM,MAAM,wCAAyC,CAAE,GAAIgkE,EAAS,CAAA,CAExE,EAQA,OANAtnE,EAAAA,UAAU,IAAM,CACJ6nE,EAAA,EACMJ,EAAA,EACElC,EAAA,CAAA,EACjB,CAACX,CAAa,CAAC,EAEbnjE,QAUF,MAAI,CAAA,UAAU,uCACb,SAACiD,EAAA,KAAA,MAAA,CAAI,UAAU,kCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,OAAC,KAAA,CAAG,UAAU,gCAAgC,SAAc,iBAAA,EAC5DA,EAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACHmjE,EAAA,EACMJ,EAAA,EACElC,EAAA,CACpB,EACA,UAAU,0GAEV,SAAA,CAAArlE,EAAAA,IAAC,OAAI,UAAU,UAAU,KAAK,OAAO,OAAO,eAAe,QAAQ,YACjE,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAY,IAAI,EAAE,6GAAA,CAA8G,CAAA,CACrL,EAAM,cAAA,CAAA,CAAA,CAER,EACF,EAGCA,EAAAA,IAAA,MAAA,CAAI,UAAU,aACZ,SAAO,OAAA,QAAQwkE,EAAU,EAAE,IAAI,CAAC,CAACp5D,EAAS66D,CAAI,IAC7CzhE,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMmgE,EAAiBv5D,CAAO,EACvC,UAAW,+DACTs5D,IAAkBt5D,EACd,sDACA,+CACN,GAEA,SAAA,CAAApL,EAAAA,IAAC,QAAK,UAAW,wBACf0kE,IAAkBt5D,EAAU,WAAa,aAC3C,GAAI,EACHpL,EAAA,IAAA,OAAA,CAAK,UAAU,cAAe,WAAK,KAAK,EACxCA,EAAA,IAAA,OAAA,CAAK,UAAU,wCACb,WAAK,QACR,CAAA,CAAA,CAAA,EAdKoL,CAAA,CAgBR,CACH,CAAA,CAAA,EACF,EAECxI,GACE4B,EAAA,KAAA,MAAI,CAAA,UAAU,6FACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,UAAU,KAAK,OAAO,OAAO,eAAe,QAAQ,YACjE,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAY,IAAI,EAAE,mDAAA,CAAoD,CAAA,CAC3H,EACC4C,CAAA,EACH,EAGDvB,EACEmD,EAAA,KAAA,MAAI,CAAA,UAAU,sDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4BAA4B,MAAM,6BAA6B,KAAK,OAAO,QAAQ,YAChG,SAAA,CAACxE,EAAA,IAAA,SAAO,CAAA,UAAU,aAAa,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,OAAO,eAAe,YAAY,IAAI,QAC3F,OAAK,CAAA,UAAU,aAAa,KAAK,eAAe,EAAE,iHAAkH,CAAA,CAAA,EACvK,QACC,OAAA,CAAK,UAAU,UAAU,SAAyB,2BAAA,CAAA,CAAA,CACrD,CAAA,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,aAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,6FACb,SAAA,OAAC,KAAA,CAAG,UAAU,iCAAiC,SAAe,kBAAA,EAC7DA,EAAAA,KAAA,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,MAAC,IAAE,CAAA,UAAU,gCAAiC,SAAAilE,EAAa,oBAAsB,EAAE,EAClFzgE,EAAAA,KAAA,IAAE,CAAA,UAAU,6BACX,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,iBAAiB,SAAA,CAAA,IAAEygE,EAAa,sBAAwB,CAAA,EAAE,EAAO,cAAA,EACnF,EACCzgE,EAAAA,KAAA,IAAE,CAAA,UAAU,6BACV,SAAA,CAAAygE,EAAa,qBAAuB,EAAE,kBAAA,CACzC,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,6BAA6B,KAAK,eAAe,QAAQ,YACtE,eAAC,OAAA,CAAK,SAAS,UAAU,EAAE,0LAA0L,SAAS,SAAA,CAAU,CAC1O,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACCzgE,EAAAA,KAAA,MAAI,CAAA,UAAU,mGACb,SAAA,OAAC,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,EAC7DA,EAAAA,KAAA,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,MAAC,IAAE,CAAA,UAAU,gCAAiC,SAAAilE,EAAa,kBAAoB,EAAE,EAChFzgE,EAAAA,KAAA,IAAE,CAAA,UAAU,+BACX,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,iBAAiB,SAAA,CAAA,IAAEygE,EAAa,oBAAsB,CAAA,EAAE,EAAO,cAAA,EACjF,EACCzgE,EAAAA,KAAA,IAAE,CAAA,UAAU,6BACV,SAAA,CAAAygE,EAAa,mBAAqB,EAAE,kBAAA,CACvC,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,+BAA+B,KAAK,eAAe,QAAQ,YACxE,eAAC,OAAA,CAAK,SAAS,UAAU,EAAE,6FAA6F,SAAS,SAAA,CAAU,CAC7I,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGCzgE,EAAAA,KAAA,MAAI,CAAA,UAAU,yBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oEACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,qDACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,OAAC,KAAA,CAAG,UAAU,iCAAiC,SAAiB,oBAAA,EAC/DA,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,OAAC,OAAA,CAAK,UAAU,wBAAwB,SAAO,UAAA,EAC9CA,EAAAA,KAAA,OAAK,CAAA,UAAU,6BACb,SAAA,CAAWqgE,EAAAH,CAAa,GAAG,OAAS,IAAI,IAAEF,GAAWE,CAAa,EAAE,QAAA,EACvE,EACCG,EAAWH,CAAa,GAAG,MAAQ,GAClC1kE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMmnE,EAAazC,EAAe,OAAO,EAClD,UAAU,uHACX,SAAA,UAAA,CAAA,CAED,CAEJ,CAAA,CAAA,CAAA,CACF,CAAA,CACF,QACC,MAAI,CAAA,UAAU,MACb,SAAClgE,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,uBACL,UAAU,oMACV,MAAO+kE,EAAQ,GAAGL,CAAa,QAAQ,GAAKziB,EAAKyiB,CAAa,GAAG,OAAS,GAC1E,SAAWl9D,GAAMw9D,EAAW,CAC1B,GAAGD,EACH,CAAC,GAAGL,CAAa,QAAQ,EAAGl9D,EAAE,OAAO,KAAA,CACtC,EACD,YAAa,YAAYy6C,EAAKyiB,CAAa,GAAG,OAAS,GAAG,IAAIziB,EAAKyiB,CAAa,GAAG,QAAQ,EAAA,CAC7F,EACA1kE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM8nE,EAAUpD,EAAe,QAASK,EAAQ,GAAGL,CAAa,QAAQ,GAAKziB,EAAKyiB,CAAa,GAAG,KAAK,EAChH,UAAU,8FACX,SAAA,YAAA,CAAA,CAED,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGClgE,EAAAA,KAAA,MAAI,CAAA,UAAU,oEACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,qDACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,OAAC,KAAA,CAAG,UAAU,iCAAiC,SAAe,kBAAA,EAC7DA,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,OAAC,OAAA,CAAK,UAAU,wBAAwB,SAAO,UAAA,EAC9CA,EAAAA,KAAA,OAAK,CAAA,UAAU,6BACb,SAAA,CAAWqgE,EAAAH,CAAa,GAAG,KAAO,IAAI,IAAEF,GAAWE,CAAa,EAAE,QAAA,EACrE,EACCG,EAAWH,CAAa,GAAG,IAAM,GAChC1kE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMmnE,EAAazC,EAAe,KAAK,EAChD,UAAU,uHACX,SAAA,UAAA,CAAA,CAED,CAEJ,CAAA,CAAA,CAAA,CACF,CAAA,CACF,QACC,MAAI,CAAA,UAAU,MACb,SAAClgE,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,uBACL,UAAU,oMACV,MAAO+kE,EAAQ,GAAGL,CAAa,MAAM,GAAKziB,EAAKyiB,CAAa,GAAG,KAAO,GACtE,SAAWl9D,GAAMw9D,EAAW,CAC1B,GAAGD,EACH,CAAC,GAAGL,CAAa,MAAM,EAAGl9D,EAAE,OAAO,KAAA,CACpC,EACD,YAAa,YAAYy6C,EAAKyiB,CAAa,GAAG,KAAO,GAAG,IAAIziB,EAAKyiB,CAAa,GAAG,QAAQ,EAAA,CAC3F,EACA1kE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM8nE,EAAUpD,EAAe,MAAOK,EAAQ,GAAGL,CAAa,MAAM,GAAKziB,EAAKyiB,CAAa,GAAG,GAAG,EAC1G,UAAU,8FACX,SAAA,YAAA,CAAA,CAED,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGClgE,EAAAA,KAAA,MAAI,CAAA,UAAU,8BAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oEACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDACb,SAAAA,EAAA,IAAC,MAAG,UAAU,iCAAiC,kCAAsB,EACvE,QACC,MAAI,CAAA,UAAU,MACb,SAACA,EAAA,IAAA,MAAI,CAAA,UAAU,kBACb,SAAAwE,OAAC,QAAM,CAAA,UAAU,SACf,SAAA,CAAAxE,MAAC,QACC,CAAA,gBAAC,KAAG,CAAA,UAAU,kCACZ,SAAA,OAAC,KAAA,CAAG,UAAU,YAAY,SAAO,UAAA,QAChC,KAAA,CAAG,UAAU,YAAY,SAAI,OAAA,QAC7B,KAAA,CAAG,UAAU,YAAY,SAAO,SAAA,CAAA,CAAA,CAAA,CACnC,CAAA,CACF,EACCA,EAAAA,IAAA,QACE,CAAA,SAAAmlE,EAAa,OAAO,IAAKh4C,GACvB3oB,EAAA,KAAA,KAAiB,CAAA,UAAU,sCAC1B,SAAA,CAACxE,EAAAA,IAAA,KAAA,CAAG,UAAU,YACZ,SAAAwE,EAAA,KAAC,IAAA,CACC,KAAM,GAAGkgE,IAAkB,OACvB,mDACA,8DAA8D,GAAGv3C,EAAG,OAAO,GAC/E,OAAO,SACP,IAAI,sBACJ,UAAU,oCAET,SAAA,CAAGA,EAAA,QAAQ,MAAM,EAAG,CAAC,EAAE,MAAIA,EAAG,QAAQ,MAAM,EAAE,CAAA,CAAA,CAAA,EAEnD,EACCntB,EAAAA,IAAA,KAAG,CAAA,UAAU,0BACX,SAAA,IAAI,KAAKmtB,EAAG,SAAS,EAAE,iBAC1B,EACCntB,EAAAA,IAAA,KAAG,CAAA,UAAU,YACZ,SAAAwE,EAAA,KAAC,IAAA,CACC,KAAM,GAAGkgE,IAAkB,OACvB,8CACA,yDAAyD,GAAGv3C,EAAG,IAAI,GACvE,OAAO,SACP,IAAI,sBACJ,UAAU,oCAET,SAAA,CAAGA,EAAA,KAAK,MAAM,EAAG,CAAC,EAAE,MAAIA,EAAG,KAAK,MAAM,EAAE,CAAA,CAAA,CAAA,CAE7C,CAAA,CAAA,GA3BOA,EAAG,IA4BZ,CACD,CACH,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAAA,EACF,EAGC3oB,EAAAA,KAAA,MAAI,CAAA,UAAU,oEACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDACb,SAAAA,EAAA,IAAC,MAAG,UAAU,iCAAiC,gCAAoB,EACrE,QACC,MAAI,CAAA,UAAU,MACb,SAACA,EAAA,IAAA,MAAI,CAAA,UAAU,kBACb,SAAAwE,OAAC,QAAM,CAAA,UAAU,SACf,SAAA,CAAAxE,MAAC,QACC,CAAA,gBAAC,KAAG,CAAA,UAAU,kCACZ,SAAA,OAAC,KAAA,CAAG,UAAU,YAAY,SAAO,UAAA,QAChC,KAAA,CAAG,UAAU,YAAY,SAAI,OAAA,QAC7B,KAAA,CAAG,UAAU,YAAY,SAAO,SAAA,CAAA,CAAA,CAAA,CACnC,CAAA,CACF,EACCA,EAAAA,IAAA,QACE,CAAA,SAAAmlE,EAAa,KAAK,IAAKh4C,GACrB3oB,EAAA,KAAA,KAAiB,CAAA,UAAU,sCAC1B,SAAA,CAACxE,EAAAA,IAAA,KAAA,CAAG,UAAU,YACZ,SAAAwE,EAAA,KAAC,IAAA,CACC,KAAM,GAAGkgE,IAAkB,OACvB,mDACA,8DAA8D,GAAGv3C,EAAG,OAAO,GAC/E,OAAO,SACP,IAAI,sBACJ,UAAU,oCAET,SAAA,CAAGA,EAAA,QAAQ,MAAM,EAAG,CAAC,EAAE,MAAIA,EAAG,QAAQ,MAAM,EAAE,CAAA,CAAA,CAAA,EAEnD,EACCntB,EAAAA,IAAA,KAAG,CAAA,UAAU,0BACX,SAAA,IAAI,KAAKmtB,EAAG,SAAS,EAAE,iBAC1B,EACCntB,EAAAA,IAAA,KAAG,CAAA,UAAU,YACZ,SAAAwE,EAAA,KAAC,IAAA,CACC,KAAM,GAAGkgE,IAAkB,OACvB,8CACA,yDAAyD,GAAGv3C,EAAG,IAAI,GACvE,OAAO,SACP,IAAI,sBACJ,UAAU,oCAET,SAAA,CAAGA,EAAA,KAAK,MAAM,EAAG,CAAC,EAAE,MAAIA,EAAG,KAAK,MAAM,EAAE,CAAA,CAAA,CAAA,CAE7C,CAAA,CAAA,GA3BOA,EAAG,IA4BZ,CACD,CACH,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CAAA,CACF,EAxTG3oB,EAAA,KAAA,MAAI,CAAA,UAAU,2CACb,SAAA,OAAC,KAAA,CAAG,UAAU,iCAAiC,SAAa,gBAAA,QAC3D,IAAA,CAAE,UAAU,qBAAqB,SAAgC,kCAAA,CAAA,CAAA,EACpE,CAuTN,07PC91BMyvB,GAAoB,CACxB,OAAQ,CAAE,QAAS,EAAG,EAAG,EAAG,EAC5B,QAAS,CACP,QAAS,EACT,EAAG,EACH,WAAY,CACV,SAAU,GACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMoD,GAAe,CACnB,OAAQ,CAAE,QAAS,EAAG,EAAG,GAAI,EAC7B,QAAS,CACP,QAAS,EACT,EAAG,EACH,WAAY,CAAE,SAAU,EAAI,CAAA,CAEhC,EAGM2wC,GAAmB,CACvB,SAAU,CACR,KAAM,aACN,QAAS,UACT,YAAcn8D,GAAiB,iDAAiDA,CAAY,gBAC9F,EACA,IAAK,CACH,KAAM,YACN,QAAS,UACT,YAAcA,GAAiB,oDAAoDA,CAAY,EACjG,EACA,KAAM,CACJ,KAAM,aACN,QAAS,WACT,YAAcA,GAAiB,iDAAiDA,CAAY,iBAC9F,EACA,WAAY,CACV,KAAM,aACN,QAAS,aACT,YAAcA,GAAiB,iDAAiDA,CAAY,mBAC9F,EACA,MAAO,CACL,KAAM,aACN,QAAS,gBACT,YAAcA,GAAiB,iDAAiDA,CAAY,sBAAA,CAEhG,EAGMo8D,GAAa,CACjB,UAAa,iBACb,aAAc,cAChB,EAGM3sD,GAAoB,CACxB,SAAU,6CACV,IAAK,6CACL,KAAM,6CACN,IAAK,6CACL,WAAY,6CACZ,MAAO,4CACT,EAGMkD,GAAoB,IAAM,CACxB,MAAApT,EAAU,OAAO,UAAU,eAAiB,SAAS,OAAO,SAAS,cAAc,EAAI,KACvFiU,EAAiB/D,GAAkBlQ,CAAO,EAChD,OAAKiU,GACK,QAAA,MAAM,yCAAyCjU,CAAO,EAAE,EAE3DiU,CACT,EAEM6oD,GAAY,IAAM,CACtB,KAAM,CAACr8D,EAAcs8D,CAAe,EAAIvoE,EAAAA,SAAS,EAAE,EAC7C,CAACogB,EAAWooD,CAAY,EAAIxoE,EAAAA,SAAS,IAAI,EACzC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,EAAE,EACnB+K,GAAW,EAGC09D,GAAgB,CAC5C,QAASx8D,EACT,IAAKy8D,GAAa,IAClB,aAAc,cACd,MAAO,EACR,CAAA,EAED,MAAMxT,EAAiB,SAAY,CACjC,GAAKjpD,EAEL,CAAAvK,EAAW,EAAI,EACf+7B,EAAS,EAAE,EAEP,GAAA,CACF,MAAMz1B,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDtS,EAAQ,IAAIpB,EAAgBG,EAAcy8D,GAAa,IAAK1gE,CAAQ,EAGpE,CACJuoB,EACAta,EACAo6C,EACAsY,EACAC,EACAC,EACAC,EACA1nB,EACA2nB,EACAC,EACA3nB,EACAC,EACA2nB,EACAC,EACAv8C,EACAw8C,EACAC,EACAC,EACAC,EACAC,EACAC,EACA39C,EACA49C,EACAtrC,CAAA,EACE,MAAM,QAAQ,IAAI,CACpBjxB,EAAM,KAAK,EACXA,EAAM,OAAO,EACbA,EAAM,YAAY,EAClBA,EAAM,iBAAiB,EACvBA,EAAM,YAAY,EAClBA,EAAM,iBAAiB,EACvBA,EAAM,kBAAkB,EACxBA,EAAM,QAAQ,EACdA,EAAM,YAAY,EAClBA,EAAM,OAAO,EACbA,EAAM,aAAa,EACnBA,EAAM,aAAa,EACnBA,EAAM,QAAQ,EACdA,EAAM,SAAS,EACfA,EAAM,gBAAgB,EACtBA,EAAM,UAAU,4CAA4C,EAC5DA,EAAM,UAAU,MAAMA,EAAM,kBAAkB,EAC9CA,EAAM,UAAU,MAAMA,EAAM,aAAa,EACzCA,EAAM,UAAU,MAAMA,EAAM,kBAAkB,EAC9CA,EAAM,UAAU,MAAMA,EAAM,mBAAmB,EAC/CA,EAAM,UAAUjB,CAAY,EAC5BiB,EAAM,cAAc,EACpBA,EAAM,cAAc,EACpBA,EAAM,MAAM,CAAA,CACb,EAEYs7D,EAAA,CACX,KAAAj4C,EACA,OAAAta,EACA,YAAawT,GAAmB4mC,EAAa,EAAE,EAC/C,MAAAlyB,EACA,UAAW,CACT,SAAUwqC,EACV,IAAKC,EACL,UAAWC,EACX,UAAWC,CACb,EACA,KAAM,CACJ,KAAM,OAAO1nB,CAAO,EAAI,IACxB,SAAU,OAAO2nB,CAAW,EAAI,IAChC,IAAK,OAAOC,CAAM,EAAI,IACtB,UAAW,OAAO3nB,CAAY,EAAI,IAClC,UAAW,OAAOC,CAAY,EAAI,IAClC,IAAK,OAAO2nB,CAAO,EAAI,IACvB,KAAM,OAAOC,CAAQ,EAAI,GAC3B,EACA,SAAU,CACR,KAAMz/C,GAAmB0/C,EAAa,EAAE,EACxC,SAAU1/C,GAAmB2/C,EAAiB,EAAE,EAChD,IAAK3/C,GAAmB4/C,EAAY,EAAE,EACtC,UAAW5/C,GAAmB6/C,EAAkB,EAAE,EAClD,UAAW7/C,GAAmB8/C,EAAkB,EAAE,EAClD,SAAU9/C,GAAmB+/C,EAAiB,EAAE,CAClD,EACA,OAAA78C,EACA,KAAAd,EACA,SAAU,CACR,eAAA49C,CAAA,CACF,CACD,QACM5wB,EAAK,CACJ,QAAA,MAAM,6BAA8BA,CAAG,EAC/Cpb,EAAS,yDAAyD,CAAA,QAClE,CACA/7B,EAAW,EAAK,CAAA,EAEpB,EAEM6a,EAAkB,MAAOlL,GAAS,CAClC,GAAA,CACI,MAAA,UAAU,UAAU,UAAUA,CAAI,EACxC7N,GAAM,QAAQ,yBAAyB,OAC3B,CACZA,GAAM,MAAM,mBAAmB,CAAA,CAEnC,EAGE,OAACoB,EAAA,KAAA,MAAI,CAAA,UAAU,kFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,OAAC,KAAA,CAAG,UAAU,0CAA0C,SAAgB,mBAAA,QACvE,IAAA,CAAE,UAAU,6CAA6C,SAE1D,4CAAA,CAAA,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,OACb,SAACA,EAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO6L,EACP,SAAWrE,GAAM2gE,EAAgB3gE,EAAE,OAAO,KAAK,EAC/C,YAAY,sBACZ,UAAU,+OAAA,CACZ,EACAhD,EAAA,KAAC8J,EAAO,OAAP,CACC,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EACxB,QAASwmD,EACT,SAAUzzD,EACV,UAAU,sJAET,SAAA,CACCA,EAAArB,EAAA,IAACspE,IAAU,UAAU,cAAA,CAAe,EAEnCtpE,EAAAA,IAAA61B,GAAA,CAAS,UAAU,iBAAiB,EAEtCx0B,EAAU,aAAe,OAAA,CAAA,CAAA,CAC5B,CAAA,CACF,CAAA,CACF,EAECuB,GACC5C,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,uIAET,SAAA1L,CAAA,CACH,EAGD,CAACod,GAAa,CAACpd,GAAS,CAACvB,SACvB,MAAA,CAAI,UAAU,4DACb,eAAC,IAAA,CAAE,oDAAyC,CAAA,EAC9C,EAGD2e,GACCxb,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU2lB,GACV,QAAQ,SACR,QAAQ,UACR,UAAU,YAGV,SAAA,CAAAzvB,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,wJAEV,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,kDACX,SAAA,CAAUwb,EAAA,KAAK,KAAGA,EAAU,OAAO,MAAA,EACtC,QACC,MAAI,CAAA,UAAU,0BACZ,SAAUA,EAAA,UAAU,eAClBhgB,EAAA,IAAA,OAAA,CAAK,UAAU,kHAAkH,2BAElI,EAEAA,MAAC,QAAK,UAAU,0GAA0G,2BAE1H,CAAA,CAEJ,CAAA,CAAA,EACF,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,OAAC,OAAA,CAAK,UAAU,2CAA2C,SAAa,gBAAA,EACvExE,EAAAA,IAAA,QAAK,UAAU,0CAA2C,gBAAOggB,EAAU,WAAW,EAAE,gBAAiB,CAAA,CAAA,EAC5G,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,OAAC,OAAA,CAAK,UAAU,2CAA2C,SAAS,YAAA,QACnE,OAAA,CAAK,UAAU,2DAA4D,SAAaqH,EAAA,EACzF7L,EAAA,IAAC,SAAA,CACC,QAAS,IAAMmc,EAAgBtQ,CAAY,EAC3C,UAAU,4EAEV,SAAC7L,EAAAA,IAAA0c,GAAO,CAAA,UAAU,kCAAmC,CAAA,CAAA,CAAA,CACvD,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAGAlY,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,uHAEV,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,8EACZ,SAAA,CAACxE,EAAAA,IAAA,QAAK,SAAE,KAAA,EAAO,qBAAA,EACjB,EACCggB,EAAU,UAAU,eAClBxb,EAAA,KAAA,OAAA,CAAK,UAAU,yCACd,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,UAAU,oCAAoC,EAAO,eAAA,CAE7D,CAAA,EAEAwE,EAAAA,KAAC,OAAK,CAAA,UAAU,0CACd,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,UAAU,qCAAqC,EAAO,SAAA,CAE9D,CAAA,CAAA,EAEJ,EAECwE,EAAAA,KAAA,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kFACb,SAAA,OAAC,OAAA,CAAK,UAAU,2CAA2C,SAAQ,WAAA,EAClEA,EAAAA,KAAA,OAAK,CAAA,UAAU,qCAAsC,SAAA,CAAAwb,EAAU,KAAK,IAAI,GAAA,CAAC,CAAA,CAAA,EAC5E,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,kFACb,SAAA,OAAC,OAAA,CAAK,UAAU,2CAA2C,SAAS,YAAA,EACnEA,EAAAA,KAAA,OAAK,CAAA,UAAU,mCAAoC,SAAA,CAAAwb,EAAU,KAAK,KAAK,GAAA,CAAC,CAAA,CAAA,CAC3E,CAAA,CAAA,EACF,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kFACb,SAAA,OAAC,OAAA,CAAK,UAAU,2CAA2C,SAAU,aAAA,EACpEwb,EAAU,QAAU,mDAClB,OAAK,CAAA,UAAU,qCAAqC,SAAA,GAAC,CAAA,QAErD,OAAK,CAAA,UAAU,mCAAmC,SAAC,GAAA,CAAA,CAAA,EAExD,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,kFACb,SAAA,OAAC,OAAA,CAAK,UAAU,2CAA2C,SAAS,YAAA,QACnE,OAAA,CAAK,UAAU,mCAAmC,SAAC,GAAA,CAAA,CAAA,CACtD,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,4GACb,SAACA,EAAA,KAAA,IAAA,CAAE,UAAU,+CACX,SAAA,OAAC,OAAA,CAAK,UAAU,cAAc,SAAK,QAAA,EAAO,oHAAA,CAAA,CAC5C,CACF,CAAA,CAAA,CAAA,CACF,EAGAA,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,+GAEV,SAAA,CAAC7yB,EAAAA,KAAA,KAAA,CAAG,UAAU,4DACZ,SAAA,CAACxE,EAAAA,IAAA,QAAK,SAAE,KAAA,EAAO,4BAAA,EACjB,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAO,UAAA,EACtCA,EAAAA,KAAA,OAAK,CAAA,UAAU,2BAA4B,SAAA,CAAAwb,EAAU,KAAK,IAAI,GAAA,CAAC,CAAA,CAAA,EAClE,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,6BAA6B,SAAA,CAAA,mBAAiBwb,EAAU,KAAK,IAAI,YAAA,EAAU,EACvF,OAAO,QAAQ,CACd,KAAMA,EAAU,KAAK,KACrB,SAAUA,EAAU,KAAK,SACzB,IAAKA,EAAU,KAAK,IACpB,UAAWA,EAAU,KAAK,UAC1B,UAAWA,EAAU,KAAK,SAC3B,CAAA,EAAE,IAAI,CAAC,CAACmQ,EAAMpwB,CAAK,IACjByE,EAAA,KAAA,MAAe,CAAA,UAAU,4CACxB,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAiB,SAAK2rB,EAAA,EACrC3rB,EAAAA,KAAA,OAAK,CAAA,UAAU,gBAAiB,SAAA,CAAAzE,EAAM,GAAA,CAAC,CAAA,CAAA,CAAA,EAFhCowB,CAGV,CACD,CAAA,CACH,CAAA,CAAA,EACF,EACC3rB,EAAAA,KAAA,MAAI,CAAA,UAAU,iDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAQ,WAAA,EACvCA,EAAAA,KAAA,OAAK,CAAA,UAAU,2BAA4B,SAAA,CAAAwb,EAAU,KAAK,KAAK,GAAA,CAAC,CAAA,CAAA,EACnE,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,6BAA6B,SAAA,CAAA,mBAAiBwb,EAAU,KAAK,KAAK,aAAA,EAAW,EACzF,OAAO,QAAQ,CACd,KAAMA,EAAU,KAAK,KACrB,SAAUA,EAAU,KAAK,SACzB,IAAKA,EAAU,KAAK,IACpB,UAAWA,EAAU,KAAK,UAC1B,UAAWA,EAAU,KAAK,SAC3B,CAAA,EAAE,IAAI,CAAC,CAACmQ,EAAMpwB,CAAK,IACjByE,EAAA,KAAA,MAAe,CAAA,UAAU,4CACxB,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAiB,SAAK2rB,EAAA,EACrC3rB,EAAAA,KAAA,OAAK,CAAA,UAAU,gBAAiB,SAAA,CAAAzE,EAAM,GAAA,CAAC,CAAA,CAAA,CAAA,EAFhCowB,CAGV,CACD,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,qCACb,SAAC3rB,EAAA,KAAA,IAAA,CAAE,UAAU,wBACX,SAAA,OAAC,OAAA,CAAK,UAAU,6BAA6B,SAAK,QAAA,EAAO,2FAAA,CAAA,CAC3D,CACF,CAAA,CAAA,CAAA,CACF,EAGAxE,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,mHAEV,SAAC7yB,EAAA,KAAA,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAAupE,GAAA,CAAO,UAAU,sCAAsC,QACvD,KAAA,CAAG,UAAU,+BAA+B,SAAU,YAAA,CAAA,CAAA,EACzD,EACC/kE,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAQ,WAAA,EACvCA,EAAAA,KAAA,OAAK,CAAA,UAAU,yBAA0B,SAAA,CAAAwb,EAAU,KAAK,KAAK,GAAA,CAAC,CAAA,CAAA,EACjE,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAY,eAAA,EAC3CxE,EAAAA,IAAA,OAAK,CAAA,UAAU,yBACb,SAAA,OAAOggB,EAAU,SAAS,IAAI,EAAE,eAAA,CACnC,CAAA,CAAA,EACF,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAS,YAAA,EACxCA,EAAAA,KAAA,OAAK,CAAA,UAAU,yBACX,SAAA,EAAO,OAAAwb,EAAU,SAAS,IAAI,EAAI,OAAOA,EAAU,WAAW,EAAK,KAAK,QAAQ,CAAC,EAAE,GAAA,CACxF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECxb,EAAAA,KAAA,MAAI,CAAA,UAAU,uBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,sGAAsG,EACpHA,EAAAA,IAAA,MAAI,CAAA,UAAU,8GAA8G,EAC5HA,EAAAA,IAAA,MAAI,CAAA,UAAU,+GAAgH,CAAA,CAAA,CACjI,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAGAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,gGAEV,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAAwpE,GAAA,CAAQ,UAAU,yBAAyB,QAC3C,KAAA,CAAG,UAAU,+BAA+B,SAAc,gBAAA,CAAA,CAAA,EAC7D,EACChlE,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAY,eAAA,EAC3CA,EAAAA,KAAA,OAAK,CAAA,UAAU,0BAA2B,SAAA,CAAAwb,EAAU,KAAK,SAAS,GAAA,CAAC,CAAA,CAAA,EACtE,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAO,UAAA,EACtCA,EAAAA,KAAA,OAAK,CAAA,UAAU,0BAA2B,SAAA,CAAAwb,EAAU,KAAK,IAAI,GAAA,CAAC,CAAA,CAAA,EACjE,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAgB,mBAAA,EAC/CxE,EAAAA,IAAA,OAAK,CAAA,UAAU,0BACb,SAAA,OAAOggB,EAAU,SAAS,QAAQ,EAAE,eAAA,CACvC,CAAA,CAAA,EACF,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAW,cAAA,EAC1CxE,EAAAA,IAAA,OAAK,CAAA,UAAU,0BACb,SAAA,OAAOggB,EAAU,SAAS,GAAG,EAAE,eAAA,CAClC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAGAxb,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,gGAEV,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAA+1B,GAAA,CAAQ,UAAU,0BAA0B,QAC5C,KAAA,CAAG,UAAU,+BAA+B,SAAqB,uBAAA,CAAA,CAAA,EACpE,EACCvxB,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAa,gBAAA,EAC5CA,EAAAA,KAAA,OAAK,CAAA,UAAU,2BAA4B,SAAA,CAAAwb,EAAU,KAAK,UAAU,GAAA,CAAC,CAAA,CAAA,EACxE,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAa,gBAAA,EAC5CA,EAAAA,KAAA,OAAK,CAAA,UAAU,2BAA4B,SAAA,CAAAwb,EAAU,KAAK,UAAU,GAAA,CAAC,CAAA,CAAA,EACxE,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAiB,oBAAA,EAChDxE,EAAAA,IAAA,OAAK,CAAA,UAAU,2BACb,SAAA,OAAOggB,EAAU,SAAS,SAAS,EAAE,eAAA,CACxC,CAAA,CAAA,EACF,EACCxb,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,gBAAgB,SAAiB,oBAAA,EAChDxE,EAAAA,IAAA,OAAK,CAAA,UAAU,2BACb,SAAA,OAAOggB,EAAU,SAAS,SAAS,EAAE,eAAA,CACxC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAEJ,QAGC,MAAI,CAAA,UAAU,0DACb,SAAAhgB,EAAA,IAACypE,KAAsB,CACzB,CAAA,CAAA,EACF,CAEJ,EAGMA,GAAwB,IAAM,CAClC,KAAM,CAACC,EAAcC,CAAe,EAAI/pE,EAAAA,SAAS,CAAA,CAAE,EAC7C,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAE,MAAA8K,CAAM,EAAIC,GAAW,EACvB,CAAC0vB,EAAMuvC,CAAO,EAAIhqE,EAAAA,SAAS,CAAC,EAC5BiqE,EAAgB,GAEtB/pE,EAAAA,UAAU,IAAM,CACd,MAAMgqE,EAAc,SAAY,CAC1B,GAAA,CACFxoE,EAAW,EAAI,EACf,MAAMsG,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDC,EAAiBb,GAAkB,EAEzC,GAAI,CAACa,EAAgB,CACnB,QAAQ,MAAM,0CAA0C,EACxD,MAAA,CAGF,MAAMC,EAAU,IAAI5T,EAAgB2T,EAAgBE,GAAgB,IAAK3X,CAAQ,EAC3EoS,EAAc,MAAMpS,EAAS,eAAe,EAGlD,IAAImiE,EAAY,CAAC,EAGjB,MAAMC,EAAct/D,GAAO,KAAO,MAAQ,IAAM,IAChD,IAAIg9B,EAAY,KAAK,IAAI,EAAG1tB,EAAc,GAAK,EAE/C,KAAO0tB,EAAY1tB,GAAa,CAC9B,MAAM6sD,EAAU,KAAK,IAAIn/B,EAAYsiC,EAAahwD,CAAW,EACzD,GAAA,CACI,MAAA9L,EAASoR,EAAQ,QAAQ,aAAa,EACtCpF,EAAS,MAAMoF,EAAQ,YAAYpR,EAAQw5B,EAAWm/B,CAAO,EACnEkD,EAAY,CAAC,GAAGA,EAAW,GAAG7vD,CAAM,QAC7BtX,EAAO,CACd,QAAQ,MAAM,oCAAoC8kC,CAAS,OAAOm/B,CAAO,IAAKjkE,CAAK,CAAA,CAErF8kC,EAAYm/B,EAAU,CAAA,CAIxB,MAAMoD,EAAe,MAAM,QAAQ,IAAIF,EAAU,IAAI,MAAO5vD,GAAU,CACpE,MAAMlO,EAAW,OAAOkO,EAAM,KAAK,CAAC,CAAC,EAC/B+vD,EAAY/vD,EAAM,KAAK,CAAC,EAAE,SAAS,EAErC,IAAA81C,EACA,OAAAia,EAAU,QAAUj+D,EACRgkD,EAAAia,EAEAja,EAAA5mC,GAAmB6gD,EAAWj+D,CAAQ,EAG/C,CACL,QAASkO,EAAM,KAAK,CAAC,EACrB,QAASA,EAAM,KAAK,CAAC,EACrB,KAAMA,EAAM,KAAK,CAAC,EAClB,OAAQA,EAAM,KAAK,CAAC,EACpB,SAAAlO,EACA,YAAAgkD,EACA,QAAS91C,EAAM,KAAK,CAAC,EACrB,OAAQA,EAAM,KAAK,CAAC,EACpB,WAAY,MAAMA,EAAM,YAAY,SACtC,CAAA,CACD,CAAC,EAGF8vD,EAAa,KAAK,CAACvgE,EAAGC,IAAMA,EAAE,UAAYD,EAAE,SAAS,EACrDigE,EAAgBM,CAAY,QACrBrnE,EAAO,CACN,QAAA,MAAM,gCAAiCA,CAAK,CAAA,QACpD,CACAtB,EAAW,EAAK,CAAA,CAEpB,EAEIoJ,GAAO,IACGo/D,EAAA,CACd,EACC,CAACp/D,GAAO,EAAE,CAAC,EAGR,MAAAy/D,EAAgB5jE,EAAAA,QAAQ,IACrBmjE,EAAa,OAAOrvC,EAAO,GAAKwvC,EAAexvC,EAAOwvC,CAAa,EACzE,CAACH,EAAcrvC,CAAI,CAAC,EAGjB+vC,EAAc,CAACv+D,EAAcT,IAAY,CACvC,MAAAi/D,EAAUrC,GAAiB58D,CAAO,EACxC,OAAOi/D,EAAUA,EAAQ,YAAYx+D,CAAY,EAAI,GACvD,EAGMy+D,EAAcl/D,GACX48D,GAAiB58D,CAAO,GAAK,CAClC,KAAM,cACN,QAAS,SACX,EAGF,OAAI/J,EAECmD,EAAA,KAAA,MAAI,CAAA,UAAU,mBACb,SAAA,OAAC,KAAA,CAAG,UAAU,0CAA0C,SAA+B,kCAAA,EACtFxE,EAAAA,IAAA,OAAI,UAAU,sBACb,SAACA,EAAA,IAAA,MAAI,CAAA,UAAU,+DAAgE,CAAA,CACjF,CAAA,CAAA,EACF,EAICmqE,EAAc,cAUhB,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,sDAAsD,SAA+B,kCAAA,QAElG,MAAI,CAAA,UAAU,wCACZ,SAAcA,EAAA,IAAKr9D,GAClBtI,EAAA,KAAC8J,EAAO,IAAP,CAEC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,mNAEV,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAA,IAAC,KAAG,CAAA,UAAU,kDAAmD,SAAA8M,EAAM,KAAK,EAC3E9M,EAAA,IAAA,IAAA,CAAE,UAAU,2CAA4C,WAAM,MAAO,CAAA,CAAA,EACxE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK0K,GAAO,IAAMu9D,GAAWqC,EAAW5/D,EAAM,EAAE,EAAE,IAAI,GAAK,qBAC3D,IAAKA,GAAO,GAAK4/D,EAAW5/D,EAAM,EAAE,EAAE,KAAO,cAC7C,UAAU,uBACV,QAAUlD,GAAM,CACdA,EAAE,OAAO,QAAU,KACnBA,EAAE,OAAO,IAAM,oBAAA,CACjB,CACF,EACCxH,EAAAA,IAAA,OAAK,CAAA,UAAU,2CACb,SAAA0K,GAAO,GAAK4/D,EAAW5/D,EAAM,EAAE,EAAE,QAAU,iBAC9C,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEClG,EAAAA,KAAA,MAAI,CAAA,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2CAA2C,SAAA,CAAA,WAC/C,OAAOsI,EAAM,WAAW,EAAE,eAAe,CAAA,EACpD,EACAtI,EAAA,KAAC,IAAA,CACC,KAAMkG,GAAO,GAAK0/D,EAAYt9D,EAAM,QAASpC,EAAM,EAAE,EAAI,IACzD,OAAO,SACP,IAAI,sBACJ,UAAU,uIACX,SAAA,CAAA,eACQ6/D,GAAe,CAAA,CAAA,CAAA,CAAA,CAAA,CACxB,CACF,CAAA,CAAA,CAAA,EAtCKz9D,EAAM,OAwCd,CAAA,EACH,EAGC48D,EAAa,OAASG,GACpBrlE,EAAA,KAAA,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM4pE,EAAQzvC,GAAK,KAAK,IAAI,EAAGA,EAAI,CAAC,CAAC,EAC9C,SAAUE,IAAS,EACnB,UAAU,yGACX,SAAA,UAAA,CAED,EACC71B,EAAAA,KAAA,OAAK,CAAA,UAAU,6CAA6C,SAAA,CAAA,QACrD61B,EAAK,OAAK,KAAK,KAAKqvC,EAAa,OAASG,CAAa,CAAA,EAC/D,EACA7pE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM4pE,EAAQzvC,GAAKA,EAAI,CAAC,EACjC,SAAUE,GAAQ,KAAK,KAAKqvC,EAAa,OAASG,CAAa,EAC/D,UAAU,yGACX,SAAA,MAAA,CAAA,CAED,CACF,CAAA,CAAA,EAEJ,EA/EGrlE,EAAA,KAAA,MAAI,CAAA,UAAU,mBACb,SAAA,OAAC,KAAA,CAAG,UAAU,0CAA0C,SAA+B,kCAAA,QACtF,IAAA,CAAE,UAAU,mCAAmC,SAA4C,8CAAA,CAAA,CAAA,EAC9F,CA8EN,EC3tBMgmE,GAAe,CACjB,MAAO,CACH,WAAY,OACZ,MAAO,QACP,QAAS,OACT,aAAc,KAClB,EACA,QAAS,CACL,MAAO,CACH,WAAY,SAAA,CAEpB,EACA,MAAO,CACH,MAAO,CACH,WAAY,SAAA,CAEpB,EACA,SAAU,aACV,SAAU,GACd,EAEMC,GAAiB,CAAC,CAAE,QAAA9uD,KAAc,CACpC,KAAM,CAAC+uD,EAAmBC,CAAoB,EAAI/qE,EAAAA,SAAS,EAAE,EACvD,CAACgrE,EAAsBC,CAAuB,EAAIjrE,EAAAA,SAAS,EAAE,EAC7D,CAACyuB,EAAey8C,CAAgB,EAAIlrE,EAAAA,SAAS,IAAI,EACjD,CAACmrE,EAAWC,CAAY,EAAIprE,EAAAA,SAAS,CAAA,CAAE,EACvC,CAACqrE,EAAkBC,CAAmB,EAAItrE,EAAAA,SAAS,IAAI,EACvD,CAACurE,EAAYC,CAAa,EAAIxrE,EAAAA,SAAS,CAAA,CAAE,EACzC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACyrE,EAAWC,CAAY,EAAI1rE,EAAAA,SAAS,EAAK,EAC1C,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,EAAE,EAC/B,CAAE,QAAA2K,CAAQ,EAAIE,GAAW,EACzB,CAAC8gE,EAAoBC,CAAqB,EAAI5rE,EAAAA,SAAS,EAAK,EAG5D,CAAE,KAAM6rE,CAAW,EAAIpD,GAAgB,CACzC,QAASuC,GAAwB,OACjC,IAAKtC,GAAa,IAClB,aAAc,QACd,MAAO,GACP,QAAS,EAAQsC,CAAoB,CACxC,EAEKc,EAAUnhE,GAAWkhE,GAAclhE,EAAQ,YAAY,IAAMkhE,EAAW,YAAY,EAGpF,CAAE,MAAOE,EAAc,KAAMC,CAAA,EAAiBC,GAAiB,CACjE,QAASjB,GAAwB,OACjC,IAAKtC,GAAa,IAClB,aAAc,WACd,QAAS,EAAQsC,EACjB,SAAU,CACNY,EAAsB,EAAK,CAAA,CAC/B,CACH,EAGK,CAAE,UAAWM,CAAkB,EAAIC,GAAsB,CAC3D,KAAMH,GAAc,KACpB,WAAY,CAEFxoE,EAAA,QAAQ,+BAAgConE,EAAY,EAE1D,WAAW,IAAM,CACbpnE,EAAOggB,GACF5e,EAAA,KAAA,MAAA,CAAI,UAAU,sBACX,SAAA,CAACxE,EAAA,IAAA,IAAA,CAAE,UAAU,cAAc,SAA8B,iCAAA,EACxDA,EAAA,IAAA,IAAA,CAAE,UAAU,UAAU,SAA0F,4FAAA,CAAA,CAAA,CAAA,CACrH,EACD,CACC,GAAGwqE,GACH,SAAU,IACV,MAAO,CACH,GAAGA,GAAa,MAChB,SAAU,OAAA,CACd,CACH,GACF,GAAI,EACPgB,EAAsB,EAAK,EACZ,eAAA,CACnB,EACA,SAAU,CACApoE,EAAA,MAAM,0BAA2BonE,EAAY,EACnDgB,EAAsB,EAAK,CAAA,CAC/B,CACH,EAGKQ,EAAqB,SAAY,CACnC,GAAI,CAACtB,EAAmB,CACdtnE,EAAA,MAAM,+BAAgConE,EAAY,EACxD,MAAA,CAGJc,EAAa,EAAI,EACjBjuC,EAAS,EAAE,EAEP,GAAA,CAGA,GAAI,CADmB7xB,GAAiBk/D,CAAiB,EAE/C,MAAA,IAAI,MAAM,8BAA8B,EAIlD,MAAM9iE,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAI3D,GAHgB,MAAMxX,EAAS,aAAa,KAAUkxB,GAAA,OAAOA,EAAE,OAAO,CAAC,IAGvD,MAAO,CACvB,MAAMrtB,EAAW,IAAIC,EAAgBg/D,EAAmBpC,GAAa,IAAK1gE,CAAQ,EAG1E,GAAA,CACA,MAAM,QAAQ,IAAI,CACd6D,EAAS,KAAK,EACdA,EAAS,OAAO,EAChBA,EAAS,MAAM,EACfA,EAAS,SAAS,CAAA,CACrB,EAEDo/D,EAAwBH,CAAiB,EACzCI,EAAiBr/D,CAAQ,EACnBrI,EAAA,QAAQ,0BAA2BonE,EAAY,QAChD/xB,EAAK,CAENA,EAAI,QAAQ,SAAS,UAAU,EAC/Bpb,EAAS,4FAA4F,EAErGA,EAAS,iEAAiE,EAE9EwtC,EAAwB,EAAE,EAC1BC,EAAiB,IAAI,CAAA,CACzB,KACG,CAEH,MAAMr/D,EAAW,IAAIC,EAAgBg/D,EAAmBpC,GAAa,IAAK1gE,CAAQ,EACtF,MAAM,QAAQ,IAAI,CACd6D,EAAS,KAAK,EACdA,EAAS,OAAO,EAChBA,EAAS,MAAM,CAAA,CAClB,EAEDo/D,EAAwBH,CAAiB,EACzCI,EAAiBr/D,CAAQ,EACnBrI,EAAA,QAAQ,0BAA2BonE,EAAY,CAAA,QAEhD/xB,EAAK,CACF,QAAA,MAAM,yBAA0BA,CAAG,EAC3Cpb,EAAS,iEAAiE,EAC1EwtC,EAAwB,EAAE,EAC1BC,EAAiB,IAAI,CAAA,QACvB,CACEQ,EAAa,EAAK,CAAA,CAE1B,EAGAxrE,EAAAA,UAAU,IAAM,CAoDRuuB,IAnDmB,SAAY,CAC3B,GAAA,CACA/sB,EAAW,EAAI,EACf,MAAMsG,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDhU,EAAU,MAAMxD,EAAS,aAAa,KAAUkxB,GAAA,OAAOA,EAAE,OAAO,CAAC,EAGjE5qB,EAASmgB,EAAc,QAAQ,SAAS,EAIxCu9C,GAHS,MAAMv9C,EAAc,YAAYngB,CAAM,GAGzB,IAAciM,IAAA,CACtC,GAAIA,EAAM,KAAK,GAAG,SAAS,EAC3B,YAAaA,EAAM,YACnB,UAAW,IAAI,KAAK,EAAE,eAAe,CAAA,EACvC,EAGE,GAAA,CACM,MAAA8xD,EAAsB,MAAM,QAAQ,IACtCL,EAAa,IAAI,MAAOp1D,GAAa,CAC7B,GAAA,CACA,MAAM6D,EAAQ,MAAMzS,EAAS,SAAS4O,EAAS,WAAW,EACnD,MAAA,CACH,GAAGA,EACH,UAAW6D,EAAQ,IAAI,KAAKA,EAAM,UAAY,GAAI,EAAE,eAAe,EAAI7D,EAAS,SACpF,QACKiiC,EAAK,CACV,eAAQ,KAAK,2CAA2CjiC,EAAS,EAAE,GAAIiiC,CAAG,EACnEjiC,CAAA,CAEd,CAAA,CACL,EAEAy1D,EAAoB,KAAK,CAACviE,EAAGC,IAAMA,EAAE,YAAcD,EAAE,WAAW,EAChEshE,EAAaiB,CAAmB,QAC3BxzB,EAAK,CACF,QAAA,KAAK,mCAAoCA,CAAG,EAEpDmzB,EAAa,KAAK,CAACliE,EAAGC,IAAMA,EAAE,YAAcD,EAAE,WAAW,EACzDshE,EAAaY,CAAY,CAAA,CAG7BtqE,EAAW,EAAK,QACXm3C,EAAK,CACF,QAAA,MAAM,4BAA6BA,CAAG,EAC9Cpb,EAAS,6EAA6E,EACtF/7B,EAAW,EAAK,CAAA,CAExB,GAGmB,CACnB,EACD,CAAC+sB,CAAa,CAAC,EAGZ,MAAA69C,EAAkB,MAAOC,GAAe,CAC1C7qE,EAAW,EAAI,EACf+7B,EAAS,EAAE,EACP,GAAA,CAEM,MAAAnvB,EAASmgB,EAAc,QAAQ,SAAS,EACxCnU,EAAS,MAAMmU,EAAc,YAAYngB,CAAM,EAG/CivB,MAAc,IACpBjjB,EAAO,QAAiBC,GAAA,CACZgjB,EAAA,IAAIhjB,EAAM,KAAK,IAAI,EACnBgjB,EAAA,IAAIhjB,EAAM,KAAK,EAAE,CAAA,CAC5B,EAGDgjB,EAAQ,OAAO,4CAA4C,EAC3DA,EAAQ,OAAO,4CAA4C,EAcrD,MAAAivC,GAXiB,MAAM,QAAQ,IACjC,MAAM,KAAKjvC,CAAO,EAAE,IAAI,MAAO1H,GAAW,CACtC,MAAMnH,EAAU,MAAMD,EAAc,YAAYoH,EAAQ02C,CAAU,EAC3D,MAAA,CACH,QAAS12C,EACT,QAAS9R,GAAmB2K,CAAO,CACvC,CACH,CAAA,CACL,GAIK,OAAOmH,GAAU,WAAWA,EAAO,OAAO,EAAI,CAAC,EAC/C,KAAK,CAAC/rB,EAAGC,IAAM,WAAWA,EAAE,OAAO,EAAI,WAAWD,EAAE,OAAO,CAAC,EAEjE0hE,EAAcgB,CAAa,QACtB3zB,EAAK,CACF,QAAA,MAAM,8BAA+BA,CAAG,EAChDpb,EAAS,4BAA4B,CAAA,CAEzC/7B,EAAW,EAAK,CACpB,EAGM+qE,EAAc,IAAM,CAClB,GAAA,CAAClB,EAAW,OAAQ,OAExB,MAAMmB,EAAa;AAAA,EAEbnB,EAAW,OAAW,GAAGllD,EAAI,OAAO,IAAIA,EAAI,OAAO,EAAE,EAAE,KAAK;AAAA,CAAI,EAEhEsmD,EAAa,UAAUD,CAAU,EACjCE,EAAO,SAAS,cAAc,GAAG,EAClCA,EAAA,aAAa,OAAQD,CAAU,EAC/BC,EAAA,aAAa,WAAY,YAAYvB,CAAgB,IAAI,KAAK,KAAK,MAAM,EACrE,SAAA,KAAK,YAAYuB,CAAI,EAC9BA,EAAK,MAAM,EACF,SAAA,KAAK,YAAYA,CAAI,CAClC,EAGMC,EAAqB,SAAY,CAC/B,GAAA,CAEA,GAAI,CAACliE,EAAS,CACJnH,EAAA,MAAM,mCAAoConE,EAAY,EAC5D,MAAA,CAGJ,GAAI,CAACkB,EAED,OAGJF,EAAsB,EAAI,EACtBG,GACA,MAAMA,EAAa,QAElBlzB,EAAK,CACF,QAAA,MAAM,yBAA0BA,CAAG,EAC3C+yB,EAAsB,EAAK,CAAA,CAEnC,EAGMkB,EAAwBl2D,GAAa,CACvC00D,EAAoB10D,EAAS,EAAE,EAC/B01D,EAAgB11D,EAAS,EAAE,CAC/B,EAGI,OAAAhS,EAAA,KAAC,MAAI,CAAA,UAAU,gFACX,SAAA,CAAAxE,EAAA,IAAC2sE,GAAA,CACG,SAAS,aACT,aAAc,CACV,UAAW,GACX,MAAO,CACH,OAAQ,QACR,WAAY,OACZ,MAAO,OAAA,CACX,CACJ,CACJ,EACAnoE,EAAAA,KAAC,MAAI,CAAA,UAAU,4FACX,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,kDAAkD,SAEhE,kBAAA,EACAA,EAAA,IAAC,SAAA,CACG,QAAS2b,EACT,UAAU,+EAEV,SAAA3b,EAAAA,IAACkgB,GAAI,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC7B,EACJ,EAGA1b,EAAAA,KAAC,MAAI,CAAA,UAAU,OACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACX,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACG,KAAK,OACL,MAAO0qE,EACP,SAAWljE,GAAMmjE,EAAqBnjE,EAAE,OAAO,KAAK,EACpD,YAAY,+BACZ,SAAU6jE,EACV,UAAU,8OAAA,CACd,EACA7mE,EAAA,KAACooE,GAAA,CACG,QAASZ,EACT,SAAUX,GAAa,CAACX,EACxB,UAAU,qIAET,SAAA,CACGW,EAAArrE,EAAA,IAAC6sE,IAAQ,KAAK,IAAA,CAAK,EAElB7sE,EAAAA,IAAA8sE,GAAA,CAAS,UAAU,SAAU,CAAA,EAEjCzB,EAAY,eAAiB,QAAA,CAAA,CAAA,CAClC,EACJ,EACCzoE,GACG5C,EAAA,IAAC,IAAE,CAAA,UAAU,8CACR,SACL4C,CAAA,CAAA,CAAA,EAER,EAECgoE,GAGOpmE,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,OACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACX,SAAA,CAAAxE,MAAC,OAAI,UAAU,2CACV,SAAU+qE,EAAA,OAAS,EAAI,GAAGA,EAAU,MAAM,YAAYA,EAAU,SAAW,EAAI,GAAK,GAAG,aAAe,yBAC3G,EACCW,GAAWnhE,GACRvK,EAAA,IAAC4sE,GAAA,CACG,QAASH,EACT,SAAUX,GAAqBP,EAC/B,UAAU,yIAET,SAAAO,GAAqBP,EAEd/mE,EAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAA/S,EAAA,IAAC6sE,GAAQ,CAAA,KAAK,KAAK,UAAU,OAAO,EACnCtB,EAAqB,uBAAyB,oBAAA,CAAA,CACnD,EAGI/mE,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAC/S,EAAAA,IAAA+sE,GAAA,CAAgB,UAAU,gBAAiB,CAAA,EAAE,eAAA,CAElD,CAAA,CAAA,CAAA,CAER,EAER,EAEChC,EAAU,OAAS,GACf/qE,EAAAA,IAAA,MAAA,CAAI,UAAU,iGACX,SAAAwE,EAAA,KAAC,IAAE,CAAA,UAAU,2CACT,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAK,QAAA,EAAO,qHAAA,CAAA,CAC9C,CACJ,CAAA,CAAA,EAER,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,wCAEX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uDACX,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,8GAA8G,SAE5H,sBAAA,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,gEACV,SACGqB,EAAArB,MAAC,MAAI,CAAA,UAAU,2BACX,SAAAA,EAAAA,IAAC6sE,GAAQ,CAAA,KAAK,KAAK,UAAU,gBAAiB,CAAA,CAClD,CAAA,EACA9B,EAAU,SAAW,EACpB/qE,EAAA,IAAA,IAAA,CAAE,UAAU,oDAAoD,SAEjE,wBAAA,CAAA,EAEA+qE,EAAU,IAAKv0D,GACXhS,EAAA,KAAC,SAAA,CAEG,QAAS,IAAMkoE,EAAqBl2D,CAAQ,EAC5C,UAAW,kHACPy0D,IAAqBz0D,EAAS,GAC5B,6CACA,kGACN,GAEA,SAAA,CAAChS,EAAAA,KAAA,OAAA,CAAK,UAAU,cAAc,SAAA,CAAA,aAAWgS,EAAS,EAAA,EAAG,EACpDxW,EAAA,IAAA,OAAA,CAAK,UAAU,qBAAsB,WAAS,SAAU,CAAA,CAAA,CAAA,EATpDwW,EAAS,EAAA,CAWrB,CAET,CAAA,CAAA,EACJ,EAGAhS,EAAAA,KAAC,MAAI,CAAA,UAAU,uDACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4FACX,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAU,sDACT,WAAmB,aAAairE,CAAgB,QAAU,mBAC/D,CAAA,EACCE,EAAW,OAAS,GACjB3mE,EAAA,KAACooE,GAAA,CACG,QAASP,EACT,KAAK,KACL,UAAU,+IAEV,SAAA,CAACrsE,EAAAA,IAAAgtE,GAAA,CAAkB,UAAU,cAAe,CAAA,EAAE,QAAA,CAAA,CAAA,CAElD,EAER,EAEC3rE,QACI,MAAI,CAAA,UAAU,6CACX,SAACrB,EAAAA,IAAA6sE,GAAA,CAAQ,KAAK,KAAK,UAAU,iBAAiB,CAClD,CAAA,QAEC,MAAI,CAAA,UAAU,0FACX,SAACroE,EAAAA,KAAAyoE,GAAA,CAAM,UAAU,iBACb,SAAA,CAACzoE,EAAAA,KAAAyoE,GAAM,KAAN,CACG,SAAA,CAAAjtE,EAAA,IAACitE,GAAM,SAAN,CAAe,UAAU,mFAAmF,SAE7G,UAAA,QACCA,GAAM,SAAN,CAAe,UAAU,mFAAmF,SAE7G,SAAA,CAAA,CAAA,EACJ,EACAjtE,EAAAA,IAACitE,GAAM,KAAN,CAAW,UAAU,gDACjB,SAAW9B,EAAA,IAAI,CAAC11C,EAAQvrB,IACrB1F,EAAA,KAACyoE,GAAM,IAAN,CAEG,UAAU,mGAEV,SAAA,CAAAzoE,EAAA,KAACyoE,GAAM,KAAN,CAAW,UAAU,+DACjB,SAAA,CAAOx3C,EAAA,QAAQ,MAAM,EAAG,CAAC,EAAE,MAAIA,EAAO,QAAQ,MAAM,EAAE,CAAA,EAC3D,EACCjxB,EAAA,KAAAyoE,GAAM,KAAN,CAAW,UAAU,iEACjB,SAAA,CAAW,WAAAx3C,EAAO,OAAO,EAAE,eAAe,EAAE,SAAA,CACjD,CAAA,CAAA,CAAA,EARKvrB,CAAA,CAUZ,CACL,CAAA,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,CAER,CAAA,CAAA,CACJ,CAAA,CAAA,CACJ,CAAA,CAAA,EAER,CAER,EC5dMiR,GAAQ,SAAS,cAAc,OAAO,EAC5CA,GAAM,YAAcpB,SAAS,KAAK,YAAYA,EAAK,EAG/B,MAAM8sD,GAAa,CACjB,UAAa,iBACb,aAAc,cAChB,EAGMiF,GAAa,CACjB,SAAU,CACR,OAAQ,6CACR,QAAS,6CACT,KAAM,aACN,SAAU,EACZ,EACA,IAAK,CACH,OAAQ,6CACR,QAAS,6CACT,KAAM,YACN,SAAU,EACZ,EACA,IAAK,CACH,OAAQ,6CACR,QAAS,6CACT,KAAM,aACN,SAAU,EACZ,EACA,KAAM,CACJ,OAAQ,6CACR,QAAS,6CACT,KAAM,aACN,SAAU,EACZ,EACA,WAAY,CACV,OAAQ,6CACR,QAAS,6CACT,KAAM,aACN,SAAU,EACZ,EACA,MAAO,CACL,OAAQ,6CACR,QAAS,6CACT,KAAM,aACN,SAAU,EAAA,CAEd,EAGMlF,GAAmB,CACvB,SAAU,CACR,KAAM,aACN,QAAS,UACT,YAAcn8D,GAAiB,iDAAiDA,CAAY,gBAC9F,EACA,IAAK,CACH,KAAM,YACN,QAAS,UACT,YAAcA,GAAiB,oDAAoDA,CAAY,EACjG,EACA,IAAK,CACH,KAAM,aACN,QAAS,WACT,YAAcA,GAAiB,iDAAiDA,CAAY,iBAC9F,EACA,KAAM,CACJ,KAAM,aACN,QAAS,WACT,YAAcA,GAAiB,iDAAiDA,CAAY,iBAC9F,EACA,WAAY,CACV,KAAM,aACN,QAAS,aACT,YAAcA,GAAiB,iDAAiDA,CAAY,mBAC9F,EACA,MAAO,CACL,KAAM,aACN,QAAS,gBACT,YAAcA,GAAiB,iDAAiDA,CAAY,sBAAA,CAEhG,EAGMuP,GAAQ,CACZ,UAAW,IACRpb,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAAO,MAAO,CAAE,UAAW,2BAC3E,EAAA,SAACwE,EAAAA,KAAA,KAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGxE,EAAAA,IAAA,OAAK,CAAA,EAAE,6BAA6B,cAAc,QAAQ,MAAO,CAAE,UAAW,kCAAmC,CAAA,CAAG,EACpHA,EAAAA,IAAA,OAAA,CAAK,EAAE,sEAAsE,cAAc,QAAQ,MAAO,CAAE,UAAW,mCAAoC,eAAgB,MAAA,CAAU,CAAA,CAAA,CAAA,CACxL,CAAA,CACF,EAEF,cAAe,IACZA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGA,EAAAA,IAAA,OAAA,CAAK,EAAE,4BAA4B,cAAc,QAAQ,eAAe,QAAQ,MAAO,CAAE,UAAW,kCAAoC,EACxIA,EAAAA,IAAA,OAAA,CAAK,EAAE,UAAU,cAAc,QAAQ,MAAO,CAAE,UAAW,iCAAkC,eAAgB,MAAA,CAAU,CAAA,CAAA,CAAA,CAC1H,CAAA,CACF,EAEF,cAAe,IACZA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,cAAc,MAAM,EACtGA,EAAAA,IAAA,OAAK,CAAA,EAAE,0BAA0B,cAAc,QAAQ,MAAO,CAAE,UAAW,8BAA+B,CAAA,CAAG,EAC7GA,EAAAA,IAAA,OAAA,CAAK,EAAE,WAAW,cAAc,QAAQ,MAAO,CAAE,UAAW,+BAAgC,eAAgB,QAAU,EACtHA,EAAAA,IAAA,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,MAAO,CAAE,UAAW,2BAAA,CAA+B,CAAA,CAAA,CAAA,CACnF,CAAA,CACF,EAEF,UAAW,IACRA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAA,CAAE,YAAa,IAAK,OAAO,eAC1B,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,oCAAoC,QAChI,OAAK,CAAA,EAAE,gBAAgB,cAAc,QAAQ,eAAe,QAAQ,UAAU,2CAA2C,MAAO,CAAE,gBAAiB,GAAI,iBAAkB,GAAM,CAAA,CAAA,CAAA,CAClL,CAAA,CACF,EAEF,MAAO,IACJA,EAAAA,IAAA,MAAA,CAAI,UAAU,UAAU,QAAQ,YAAY,KAAK,OAChD,gBAAC,IAAE,CAAA,YAAa,IAAK,OAAO,eAAe,MAAO,CAAE,UAAW,wBAAyB,EACtF,SAAA,OAAC,OAAK,CAAA,EAAE,2EAA2E,UAAU,eAAe,QAC3G,OAAK,CAAA,EAAE,UAAU,cAAc,QAAQ,UAAU,eAAe,QAChE,OAAK,CAAA,EAAE,aAAa,cAAc,QAAQ,UAAU,cAAe,CAAA,CAAA,CAAA,CACtE,CACF,CAAA,CAEJ,EAGMqb,GAAY,CAChB,QAAS,SACT,QAAS,IACT,iBAAkB,IAClB,iBAAkB,KAClB,WAAY,WACZ,cAAe,KACjB,EAEMC,GAAoB,CACxB,CAACD,GAAU,OAAO,EAAG,6CACrB,CAACA,GAAU,OAAO,EAAG,6CACrB,CAACA,GAAU,gBAAgB,EAAG,6CAC9B,CAACA,GAAU,gBAAgB,EAAG,6CAC9B,CAACA,GAAU,UAAU,EAAG,6CACxB,CAACA,GAAU,aAAa,EAAG,4CAC7B,EAEME,GAAa,CACjB,CAACF,GAAU,OAAO,EAAG,OACrB,CAACA,GAAU,OAAO,EAAG,IACrB,CAACA,GAAU,gBAAgB,EAAG,OAC9B,CAACA,GAAU,gBAAgB,EAAG,OAC9B,CAACA,GAAU,UAAU,EAAG,MACxB,CAACA,GAAU,aAAa,EAAG,MAC7B,EAGM8xD,GAAmB,CACrB,yCACA,0CACA,0CACJ,EAEMC,GAAoB,CACtB,+CACA,6CACA,8BACJ,EAGMC,GAAiB,CAAC,CAAE,SAAAzsC,EAAU,MAAA0sC,EAAQ,OAAW,CAC/C,KAAA,CAACC,EAAgBC,CAAiB,EAAI5tE,EAAAA,SAASghC,EAAS,IAAI,IAAM,EAAE,CAAC,EACrE,CAAC6sC,EAAUC,CAAW,EAAI9tE,EAAAA,SAASghC,EAAS,IAAI,IAAM,EAAI,CAAC,EAEjE9gC,OAAAA,EAAAA,UAAU,IAAM,CACd,IAAI6tE,EAAW,CAAC,EAEP,OAAA/sC,EAAA,QAAQ,CAACiC,EAAS34B,IAAU,CAC/B,GAAAujE,EAASvjE,CAAK,GAAKqjE,EAAerjE,CAAK,EAAE,OAAS24B,EAAQ,OAAQ,CAC9D,MAAA+qC,EAAU,WAAW,IAAM,CAC/BJ,EAA0BlmE,GAAA,CAClB,MAAAumE,EAAW,CAAC,GAAGvmE,CAAI,EAChB,OAAAumE,EAAA3jE,CAAK,EAAI24B,EAAQ,UAAU,EAAG0qC,EAAerjE,CAAK,EAAE,OAAS,CAAC,EAChE2jE,CAAA,CACR,CAAA,EACA,GAAM3jE,EAAQ,GAAI,EACrByjE,EAAS,KAAKC,CAAO,CAAA,MACZH,EAASvjE,CAAK,GACvBwjE,EAAoBpmE,GAAA,CACZ,MAAAwmE,EAAY,CAAC,GAAGxmE,CAAI,EAC1B,OAAAwmE,EAAU5jE,CAAK,EAAI,GACZ4jE,CAAA,CACR,CACH,CACD,EAEM,IAAMH,EAAS,QAAmBC,GAAA,aAAaA,CAAO,CAAC,CAC7D,EAAA,CAACL,EAAgBE,EAAU7sC,CAAQ,CAAC,EAGpCp8B,EAAA,KAAA,MAAI,CAAA,UAAU,uGACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,4HAA4H,EAC3IA,EAAAA,IAAC,OAAI,UAAU,YACZ,WAAS,IAAI,CAAC6iC,EAAS34B,IACtB1F,EAAA,KAAC,MAAA,CAEC,UAAW,uFACT+oE,EAAerjE,CAAK,EAAE,OAAS,EAAI,cAAgB,WACrD,GAEC,SAAA,CAAAqjE,EAAerjE,CAAK,EACpBujE,EAASvjE,CAAK,GAAMlK,MAAA,OAAK,CAAA,UAAU,gBAAgB,SAAC,GAAA,CAAA,CAAA,CAAA,EANhDkK,CAAA,CAQR,CACH,CAAA,CAAA,EACF,CAEJ,EAEA,SAAwB6jE,IAAc,CACpC,KAAM,CAAE,QAAS7wD,CAAQ,EAAIzS,GAAW,EAClC,CAAE,MAAAC,CAAM,EAAIC,GAAW,EACvB,CAAE,iBAAA4X,CAAiB,EAAIC,GAAgB,EACvC,CAAE,cAAAxJ,CAAc,EAAIE,GAAe,EACCtZ,EAAAA,SAAS,QAAQ,EAC3D,KAAM,CAAC8d,EAAmBC,CAAoB,EAAI/d,EAAAA,SAAS,EAAK,EAC1D,CAACge,EAAcC,CAAe,EAAIje,EAAAA,SAAS,IAAI,EAC/C,CAACke,EAAeC,CAAgB,EAAIne,EAAAA,SAAS,IAAI,EACjD,CAACyd,EAAsBC,CAAuB,EAAI1d,EAAAA,SAAS,IAAI,EAC/D,CAACoe,EAAcC,CAAe,EAAIre,EAAAA,SAAS,EAAK,EAChD,CAACse,EAAiBC,CAAkB,EAAIve,EAAAA,SAAS,EAAK,EACtD,CAACouE,EAAoBC,CAAqB,EAAIruE,EAAAA,SAAS,EAAK,EAC5D,CAACwe,EAAYC,CAAa,EAAIze,WAAS,CAC3C,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAChB,EACK,CAACsuE,EAASC,CAAU,EAAIvuE,WAAS,CACrC,aAAc,GACd,aAAc,GACd,QAAS,GACT,YAAa,GACb,OAAQ,GACR,QAAS,GACT,SAAU,GACV,gBAAiB,GACjB,eAAgB,EAAA,CACjB,EAGK,CAACiV,EAAU0I,CAAW,EAAI3d,WAAS,CACvC,KAAM,GACN,OAAQ,GACR,YAAa,GACb,YAAa,GAEb,iBAAkB,GAClB,gBAAiB,GACjB,WAAY,GACZ,iBAAkB,GAElB,QAAS,GACT,YAAa,GACb,OAAQ,GACR,aAAc,GACd,aAAc,GAEd,QAAS,EACT,SAAU,EAEV,OAAQ,GAER,QAAS,+BAET,gBAAiB,GACjB,eAAgB,EAAA,CACjB,EAGK,CAACwuE,EAAoBC,CAAqB,EAAIzuE,EAAAA,SAAS,EAAK,EAC5D,CAAC0uE,EAAgBC,CAAiB,EAAI3uE,EAAAA,SAAS,EAAK,EAGpD,CAACgc,EAAa6G,CAAc,EAAI7iB,EAAAA,SAAS,CAAC,EAC1C4uE,EAAa,EAGb,CAACC,EAAqBC,CAAsB,EAAI9uE,EAAAA,SAAS,EAAK,EAGpEE,EAAAA,UAAU,IAAM,EACI,IAAM,CAClB,GAAA,CACI,MAAA6uE,GAAa,aAAa,QAAQ,kBAAkB,EAC1D,GAAIA,GAAY,CACR,KAAA,CAAE,qBAAsBC,EAAc,SAAUC,EAAe,eAAgBC,EAAqB,UAAAj/D,CAAU,EAAI,KAAK,MAAM8+D,EAAU,EAEzI,KAAK,MAAQ9+D,EAAY,QAC3ByN,EAAwBsxD,CAAY,EAChCA,GAAgB,CAACE,GACnBb,EAAsB,EAAI,EAE5B1wD,EAAYsxD,CAAa,EACzBN,EAAkBO,GAAuB,EAAK,EAChD,QAEKlsE,GAAO,CACN,QAAA,MAAM,6BAA8BA,EAAK,CAAA,CAErD,GAEU,CACZ,EAAG,EAAE,EAGL9C,EAAAA,UAAU,IAAM,CACd,GAAIud,GAAwBxI,EAAS,MAAQA,EAAS,QAAUA,EAAS,YAAa,CAE9E,MAAAk6D,GAAiB,CAAE,GAAGl6D,CAAS,EACrC,OAAOk6D,GAAe,KAET,aAAA,QAAQ,mBAAoB,KAAK,UAAU,CACtD,qBAAA1xD,EACA,SAAU0xD,GACV,eAAAT,EACA,UAAW,KAAK,IAAI,CAAA,CACrB,CAAC,CAAA,CAEH,EAAA,CAACjxD,EAAsBxI,EAAUy5D,CAAc,CAAC,EAGnD,MAAMU,EAAkB,IAAM,CAC5B,aAAa,WAAW,kBAAkB,EAC9BzxD,EAAA,CACV,KAAM,GACN,OAAQ,GACR,YAAa,GACb,YAAa,GAEb,eAAgB,GAChB,gBAAiB,GACjB,QAAS,EACT,SAAU,EAEV,cAAe,GACf,oBAAqB,GACrB,oBAAqB,GACrB,eAAgB,GAChB,mBAAoB,GAEpB,OAAQ,EACR,aAAc,EACd,aAAc,EACd,QAAS,EACT,YAAa,EAEb,WAAY,GACZ,iBAAkB,GAClB,iBAAkB,GAClB,gBAAiB,GAEjB,OAAQ,GACR,aAAc,GACd,gBAAiB,GACjB,eAAgB,GAChB,eAAgB,GAChB,mBAAoB,GACpB,sBAAuB,GACvB,aAAc,EACd,iBAAkB,CAAA,CACnB,EACDD,EAAwB,IAAI,CAC9B,EAGM2xD,EAAyB,IAAM,CACnCV,EAAkB,EAAI,EACNS,EAAA,EAChBf,EAAsB,EAAK,EAC3B7qE,GAAM,QAAQ,iCAAiC,CACjD,EAEMkb,EAAgB9W,IAAM,CAC1B,KAAM,CAAE,KAAA2oB,GAAM,MAAApwB,CAAM,EAAIyH,GAAE,OAExB+V,EADE4S,KAAS,+BACU7oB,IAAA,CACnB,GAAGA,EACH,iBAAkB,CAChB,GAAGA,EAAK,iBACR,YAAavH,CAAA,CACf,GAEOowB,KAAS,gCACG7oB,IAAA,CACnB,GAAGA,EACH,iBAAkB,CAChB,GAAGA,EAAK,iBACR,aAAcvH,CAAA,CAChB,GAGmBuH,IAAA,CACnB,GAAGA,EACH,CAAC6oB,EAAI,EAAGpwB,CAAA,EAZR,CAeN,EAEMmvE,EAAgBC,IAAe,CACnC5xD,EAAoBjW,IAAA,CACV,MAAA8nE,EAAW,CAAE,GAAG9nE,EAAK,EAE3B,OAAQ6nE,GAAY,CAChB,IAAK,sBACDC,EAAS,aAAeA,EAAS,aAAe,EAAI,EAAI,GACxD,MACJ,IAAK,sBACDA,EAAS,aAAeA,EAAS,aAAe,EAAI,EAAI,GACxD,MACJ,IAAK,iBACDA,EAAS,QAAUA,EAAS,QAAU,EAAI,EAAI,GAC9C,MACJ,IAAK,qBACDA,EAAS,YAAcA,EAAS,YAAc,EAAI,EAAI,GACtD,MACJ,IAAK,gBACDA,EAAS,OAASA,EAAS,OAAS,EAAI,EAAI,GAC5C,MACJ,IAAK,iBACQA,EAAA,eAAiB,CAACA,EAAS,eAC3BA,EAAA,QAAUA,EAAS,eAAiB,EAAI,EACjD,MACJ,IAAK,kBACQA,EAAA,gBAAkB,CAACA,EAAS,gBAC5BA,EAAA,SAAWA,EAAS,gBAAkB,EAAI,EACnD,MACJ,IAAK,kBACQA,EAAA,gBAAkB,CAACA,EAAS,gBACrC,MACJ,IAAK,iBACQA,EAAA,eAAiB,CAACA,EAAS,eACpC,MACJ,IAAK,qBACQA,EAAA,mBAAqB,CAACA,EAAS,mBACnCA,EAAS,qBACVA,EAAS,aAAe,IAE5B,KAAA,CAGD,OAAAA,CAAA,CACV,EAGDjB,EAAoB7mE,KAAA,CAChB,GAAGA,GACH,CAAC6nE,EAAU,EAAG,CAAC7nE,GAAK6nE,EAAU,CAAA,EAChC,CACN,EAyBQvwD,EAAgB,MAAO/S,GAAcmU,KAAc,CACnD,GAAA,CAeI,MAAAqW,GAbgBjrB,GAAY,CAChC,OAAQA,EAAS,CACf,IAAK,KACI,MAAA,UACT,IAAK,UACI,MAAA,UACT,IAAK,MACI,MAAA,WACT,QACS,MAAA,SAAA,CAEb,GAE+BV,EAAM,EAAE,EACjC2kE,EAAiB,CACrB,KAAMrvD,GAAU,KAChB,OAAQA,GAAU,OAClB,QAASnU,GACT,QAASnB,EAAM,GACf,UAAA2rB,EACA,YAAaxhB,EAAS,YACtB,YAAawU,GAAmBrJ,GAAU,OAAQA,GAAU,QAAQ,EACpE,UAAW,KAAK,IAAI,EACpB,eAAgB9C,EAAQ,YAAY,EACpC,QAASmZ,CACX,EAEQ,QAAA,IAAI,qCAAsCg5C,CAAc,EAE5D,GAAA,CACF,MAAMr2D,EAAcq2D,CAAc,EACpC,QAAQ,IAAI,qCAAqC,QACxCC,EAAW,CAEV,QAAA,MAAM,uCAAwCA,CAAS,EAC/DlsE,GAAM,QAAQ,2EAA2E,CAAA,CAIvF,GAAA,CACJ,MAAMwE,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACnD,QAAA,IAAI,4CAA6CvT,EAAY,EAC/D,MAAAkO,GAAoBlO,GAAcjE,CAAQ,EAChD,QAAQ,IAAI,+BAA+B,QAClC2nE,EAAe,CAEd,QAAA,MAAM,wCAAyCA,CAAa,CAAA,CAItEnsE,GAAM,QAAQ,EAEdka,EAAwBzR,EAAY,EACpCgS,EAAgB,WAAW,EAC3BI,EAAgB,EAAI,EAGpB,WAAW,IAAM,CACfN,EAAqB,EAAK,EAC1BswD,EAAsB,EAAI,GACzB,GAAI,QAEArrE,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAE9C0a,EAAwBzR,EAAY,EACpCgS,EAAgB,WAAW,EAC3BI,EAAgB,EAAI,EAEpB,WAAW,IAAM,CACfN,EAAqB,EAAK,EAC1BswD,EAAsB,EAAI,GACzB,GAAI,CAAA,CAEX,EASMhvD,EAAc,SAAY,CAC9BovD,EAAsB,EAAK,EACvB,GAAA,CAKE,GAJJxwD,EAAgB,WAAW,EAC3BF,EAAqB,EAAI,EAGrB,CAAC,OAAO,SACJ,MAAA,IAAI,MAAM,kCAAkC,EAIhD,GAAA,CAACjT,GAAO,GACJ,MAAA,IAAI,MAAM,uCAAuC,EAInD,MAAAyU,GAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAClCC,EAAiBb,EAAkB,EACnCE,EAAMD,EAAO,EAEnB,GAAI,CAACY,EACG,MAAA,IAAI,MAAM,iDAAiD,EAGnE,GAAI,CAACX,EACG,MAAA,IAAI,MAAM,6CAA6C,EAIzD,MAAA8wD,EAAYtC,GAAWxiE,EAAM,EAAE,EACrC,GAAI,CAAC8kE,GAAa,CAACA,EAAU,SACrB,MAAA,IAAI,MAAM,2CAA2C,EAGvD,MAAAlwD,EAAU,IAAI5T,EAClB2T,EACAE,GAAgB,IAChBJ,EACF,EAGI,IAAAswD,EACA,GAAA,CACcA,EAAA,OAAO56D,EAAS,WAAW,OAC7B,CACR,MAAA,IAAI,MAAM,4BAA4B,CAAA,CAIxC,MAAA66D,EAAuB3vE,IAAU,CACjC,GAAA,CAEI,MAAA4vE,GAAc,WAAW5vE,IAAS,CAAC,EACzC,OAAO,OAAO,KAAK,MAAM4vE,EAAW,CAAC,CAAA,MAC/B,CACN,OAAO,OAAO,CAAC,CAAA,CAEnB,EAGMC,GAAsB,WAAW/6D,EAAS,kBAAkB,GAAK,GACjEg7D,GAA0B,OAAO,KAAK,MAAMD,GAAsB,GAAG,CAAC,EAGtEroB,EAAS,CACb,KAAM1yC,EAAS,KACf,OAAQA,EAAS,OACjB,YAAa46D,EACb,gBAAiB56D,EAAS,kBAAoBqI,EAC9C,gBAAiBrI,EAAS,iBAAmBqI,EAC7C,WAAYrI,EAAS,YAAcqI,EACnC,iBAAkBrI,EAAS,kBAAoBqI,EAC/C,QAASwyD,EAAoB76D,EAAS,OAAO,EAC7C,YAAa66D,EAAoB76D,EAAS,WAAW,EACrD,OAAQ66D,EAAoB76D,EAAS,MAAM,EAC3C,aAAc66D,EAAoB76D,EAAS,YAAY,EACvD,aAAc66D,EAAoB76D,EAAS,YAAY,EACvD,QAAS66D,EAAoB76D,EAAS,OAAO,EAC7C,SAAU66D,EAAoB76D,EAAS,QAAQ,EAC/C,OAAQ26D,EAAU,OAClB,QAAS36D,EAAS,SAAW,+BAC7B,oBAAqB,GACrB,wBAAyB,EACzB,aAAcA,EAAS,cAAgB,EACvC,iBAAkBA,EAAS,kBAAoB,EAC/C,oBAAqBg7D,EACvB,EAGMC,GACJ,OAAOvoB,EAAO,OAAO,EACrB,OAAOA,EAAO,WAAW,EACzB,OAAOA,EAAO,MAAM,EACpB,OAAOA,EAAO,YAAY,EAC1B,OAAOA,EAAO,YAAY,EAE5B,GAAIuoB,KAAuB,IACzB,MAAM,IAAI,MAAM,kDAAkDA,EAAkB,GAAG,EAQzF,MAAMnwD,IAHU,MADL,MAAML,EAAQ,gBAAgBioC,EAAQ,CAAE,MAAO7oC,EAAK,GACtC,KAAK,GAGI,KAAK,KAAYkB,IAAA,CAC7C,GAAA,CACF,MAAMC,GAAiBC,GACrB,uEACF,EACO,OAAAF,GAAI,OAAO,CAAC,IAAMC,QACf,CACH,MAAA,EAAA,CACT,CACD,EAED,GAAI,CAACF,GACG,MAAA,IAAI,MAAM,uDAAuD,EAInE,MAAAowD,GAAYzwD,EAAQ,UAAU,SAAS,CAC3C,OAAQK,GAAkB,OAC1B,KAAMA,GAAkB,IAAA,CACzB,EAGKK,GAAY,CAChB,KAAMnL,EAAS,KACf,OAAQA,EAAS,OACjB,SAAU,GACV,OAAQ46D,EAAgB,OAAO,IAAM,EAAE,CACzC,EAGMpyD,GAAuB0yD,GAAU,KAAK,CAAC,EAEvC,MAAAnxD,EAAcvB,GAAsB2C,EAAS,QAE5Cpd,GAAO,CACN,QAAA,MAAM,wBAAyBA,EAAK,EAC5Cib,EAAgB,OAAO,EACNE,EAAAnb,GAAM,SAAW,wBAAwB,EAC1D+a,EAAqB,EAAI,CAAA,CAE7B,EA6IA7d,EAAAA,UAAU,IAAM,EACmB,IAAM,CACrCyd,EAAoBjW,IAAA,CACZ,MAAA8nE,EAAW,CAAE,GAAG9nE,EAAK,EAGvB,OAAC8nE,EAAS,gBACZA,EAAS,aAAe,GAErBA,EAAS,WACZA,EAAS,QAAU,GAEhBA,EAAS,YACZA,EAAS,iBAAmB,IAC5BA,EAAS,aAAe,KAGnBA,CAAA,CACR,CACH,GAEyB,CAAA,EACxB,CAACv6D,EAAS,cAAeA,EAAS,SAAUA,EAAS,SAAS,CAAC,EAGlE,MAAM2J,EAAoB,IACnB9T,GAAO,GACL4Q,GAAkB5Q,EAAM,EAAE,EADV,KAKnB+T,EAAS,IAAM,CACf,GAAA,CAAC/T,GAAO,GAAW,OAAA,KACjB,MAAAgU,GAAMnD,GAAW7Q,EAAM,EAAE,EAC3B,OAACgU,GACEc,GAAkBd,EAAG,EADX,IAEnB,EAGMquC,EAAW,IAAMtqC,EAAenb,IAAQ,KAAK,IAAIA,GAAO,EAAGknE,CAAU,CAAC,EACtExhB,GAAW,IAAMvqC,EAAenb,IAAQ,KAAK,IAAIA,GAAO,EAAG,CAAC,CAAC,EAGnExH,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAI4K,GAAO,GAAI,CACX,MAAM6hB,GAAS2gD,GAAWxiE,EAAM,EAAE,GAAG,OACrC6S,EAAqBjW,KAAA,CACjB,GAAGA,GACH,OAAQilB,IAAU,EAAA,EACpB,CAAA,CACN,EACC,CAAC7hB,GAAO,EAAE,CAAC,EAIXlG,EAAA,KAAA,MAAI,CAAA,UAAU,4CAEb,SAAA,CAACxE,EAAAA,IAAA,OAAI,UAAU,iCACb,SAACA,MAAAqtE,GAAe,CAAA,SAAUF,GAAkB,EAC9C,EAGCntE,EAAAA,IAAA,OAAI,UAAU,kCACb,SAACA,MAAAqtE,GAAe,CAAA,SAAUD,GAAmB,EAC/C,EAGK5oE,EAAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8CACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAI,aAAa,IAAI,OAAO,UAAU,qDAAqD,MAAO,CAAE,eAAgB,QAAU,QAClI,KAAA,CAAG,UAAU,qCAAqC,SAAY,eAAA,QAC9D,MAAI,CAAA,IAAI,aAAa,IAAI,OAAO,UAAU,oDAAqD,CAAA,CAAA,EAClG,QACC,IAAA,CAAE,UAAU,6DAA6D,SAE1E,iFAAA,CAAA,CAAA,EACF,EAGCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,6CAEb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,QAAS,IAAMkvE,EAAa,gBAAgB,EAC5C,UAAW,sFACTr6D,EAAS,eACL,+EACA,yLACN,GAEA,SAACrQ,EAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAW,kBAAkB6U,EAAS,eAAiB,cAAgB,mCAAmC,GAC7G,eAACm7D,GAAA,CAAgB,UAAW,WAAWn7D,EAAS,eAAiB,aAAe,iCAAiC,EAAI,CAAA,EACvH,SACC,MACC,CAAA,SAAA,CAAC7U,EAAAA,IAAA,KAAA,CAAG,UAAW,eAAe6U,EAAS,eAAiB,aAAe,iCAAiC,GAAI,SAAQ,UAAA,CAAA,EACnH7U,EAAAA,IAAA,KAAE,UAAW,WAAW6U,EAAS,eAAiB,gBAAkB,oCAAoC,GAAI,SAE7G,+CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAGA7U,EAAA,IAAC,MAAA,CACC,QAAS,IAAM0uE,EAAuB,EAAI,EAC1C,UAAU,oRAEV,SAAClqE,EAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,OAAI,UAAU,iDACb,SAACA,MAAA+sE,GAAgB,CAAA,UAAU,wCAAwC,EACrE,SACC,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,4CAA4C,SAAe,kBAAA,QACxE,IAAA,CAAE,UAAU,2CAA2C,SAAiC,mCAAA,CAAA,CAAA,CAC3F,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAGA/sE,EAAA,IAAC,MAAA,CACC,QAAS,IAAMkvE,EAAa,aAAa,EACzC,UAAW,sFACTr6D,EAAS,YACL,8EACA,iLACN,GAEA,SAACrQ,EAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAW,kBAAkB6U,EAAS,YAAc,cAAgB,mCAAmC,GAC1G,eAACo7D,GAAA,CAAS,UAAW,WAAWp7D,EAAS,YAAc,aAAe,iCAAiC,EAAI,CAAA,EAC7G,SACC,MACC,CAAA,SAAA,CAAC7U,EAAAA,IAAA,KAAA,CAAG,UAAW,eAAe6U,EAAS,YAAc,aAAe,iCAAiC,GAAI,SAAS,WAAA,CAAA,EACjH7U,EAAAA,IAAA,KAAE,UAAW,WAAW6U,EAAS,YAAc,gBAAkB,oCAAoC,GAAI,SAE1G,+CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAGA7U,EAAA,IAAC,MAAA,CACC,QAAS,IAAMkvE,EAAa,kBAAkB,EAC9C,UAAW,sFACTr6D,EAAS,iBACL,iFACA,yLACN,GAEA,SAACrQ,EAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAW,kBAAkB6U,EAAS,iBAAmB,cAAgB,oCAAoC,GAChH,eAACq7D,GAAA,CAAe,UAAW,WAAWr7D,EAAS,iBAAmB,aAAe,kCAAkC,EAAI,CAAA,EACzH,SACC,MACC,CAAA,SAAA,CAAC7U,EAAAA,IAAA,KAAA,CAAG,UAAW,eAAe6U,EAAS,iBAAmB,aAAe,kCAAkC,GAAI,SAAU,YAAA,CAAA,EACxH7U,EAAAA,IAAA,KAAE,UAAW,WAAW6U,EAAS,iBAAmB,gBAAkB,qCAAqC,GAAI,SAEhH,oCAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EACF,EAGCrQ,EAAAA,KAAA,MAAI,CAAA,UAAU,gDAEb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CACE,SAACkd,EAqBA1Y,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,UAAU,mGAEV,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,OAAC,KAAA,CAAG,UAAU,0CAA0C,SAAsB,yBAAA,QAC7E,IAAA,CAAE,UAAU,2CAA2C,SAExD,sDAAA,CAAA,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,4BACZ,SAAA,CAAC,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKyX,IAChBzX,EAAA,KAAA,MAAA,CAAe,UAAU,oBACxB,SAAA,CAAAxE,MAAC,OAAI,UAAWyc,GACd,wDACAb,IAAgBK,GAAO,0BACvBL,EAAcK,GAAO,iCACrB,4CAAA,EAEC,SACCA,GAAA,EACHA,GAAO,GACLjc,EAAAA,IAAA,MAAA,CAAI,UAAWyc,GACd,gBACAb,EAAcK,GAAO,eAAiB,8BAAA,CACrC,CAAA,CAAA,GAbGA,EAeR,CACH,EACD,EAGFjc,EAAA,IAACmwE,GAAA,CACC,YAAAv0D,EACA,SAAU/G,EACV,aAAAyJ,EACA,aAAA4wD,CAAA,CACF,EAGC1qE,EAAAA,KAAA,MAAI,CAAA,UAAU,4BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CACE,WAAc,GACbA,EAAA,IAAC,SAAA,CACC,QAASgtD,GACT,UAAU,2GACX,SAAA,UAAA,CAAA,EAIL,EACChtD,EAAAA,IAAA,MACE,CAAA,SAAA4b,EAAc4yD,EACbxuE,EAAA,IAAC,SAAA,CACC,QAAS+sD,EACT,UAAU,wGACX,SAAA,MAAA,CAAA,EAID/sD,EAAA,IAAC,SAAA,CACC,QAAS,IAAMquE,EAAsB,EAAI,EACzC,UAAU,wGACX,SAAA,cAAA,CAAA,CAIL,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,EA3FF7pE,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,MAAO,GAAK,EACnC,QAAS,CAAE,QAAS,EAAG,MAAO,CAAE,EAChC,UAAU,mIAEV,SAAA,CAACtO,EAAAA,IAAA,OAAI,UAAU,OACb,SAACA,MAAAogB,GAAS,CAAA,UAAU,qDAAqD,EAC3E,QACC,KAAA,CAAG,UAAU,uFAAuF,SAAmB,sBAAA,QACvH,IAAA,CAAE,UAAU,uEAAuE,SAEpF,wDAAA,EACApgB,EAAA,IAAC,SAAA,CACC,QAASuiB,EACT,UAAU,wHACX,SAAA,gBAAA,CAAA,CAED,CAAA,CAAA,EA6EN,QAGC,MAAI,CAAA,UAAU,gCACb,SAAAviB,EAAA,IAACkoE,KAAU,CACb,CAAA,CAAA,EACF,EAGF1jE,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,oBAEV,SAAA,OAAC,KAAA,CAAG,UAAU,0CAA0C,SAExD,+BAAA,EACC9J,EAAAA,KAAA,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iJACb,SAAA,OAAC,MAAA,CAAI,UAAU,wEAAwE,SAAE,KAAA,QACxF,KAAA,CAAG,UAAU,sFAAsF,SAAe,kBAAA,QAClH,IAAA,CAAE,UAAU,kEAAkE,SAA6B,+BAAA,CAAA,CAAA,EAC9G,EACCA,EAAAA,KAAA,MAAI,CAAA,UAAU,iJACb,SAAA,OAAC,MAAA,CAAI,UAAU,wEAAwE,SAAE,KAAA,QACxF,KAAA,CAAG,UAAU,sFAAsF,SAAa,gBAAA,QAChH,IAAA,CAAE,UAAU,kEAAkE,SAA8B,gCAAA,CAAA,CAAA,EAC/G,EACCA,EAAAA,KAAA,MAAI,CAAA,UAAU,iJACb,SAAA,OAAC,MAAA,CAAI,UAAU,wEAAwE,SAAE,KAAA,QACxF,KAAA,CAAG,UAAU,sFAAsF,SAAW,cAAA,QAC9G,IAAA,CAAE,UAAU,kEAAkE,SAAoB,sBAAA,CAAA,CAAA,CACrG,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAGAxE,EAAA,IAACyb,GAAA,CACC,OAAQiC,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1BE,EAAgB,IAAI,CACtB,EACA,YAAaD,EACb,UAAW/I,EAAS,KACpB,MAAOiJ,EACP,gBAAiBT,EACjB,SAAUxI,EACV,sBAAAo5D,CAAA,CACF,EAGAjuE,EAAA,IAACowE,GAAA,CACC,OAAQpC,EACR,QAAS,IAAMC,EAAsB,EAAK,EAC1C,aAAc5wD,EACd,UAAWxI,EAAS,KACpB,YAAaA,EAAS,OACtB,YAAaA,EAAS,YACtB,UAAWo6D,CAAA,CACb,EAGAjvE,EAAA,IAAC2c,GAAA,CACC,OAAQuB,EACR,QAAS,IAAMC,EAAmB,EAAK,EACvC,OAAStB,IAAW,CACV,QAAA,IAAI,kCAAmCA,EAAM,CAAA,CAEvD,CACF,EAGCmB,GACChe,EAAA,IAACqgB,GAAA,CACC,MAAOjC,EAAW,MAClB,OAAQA,EAAW,OACnB,eAAgB,IAChB,QAAS,GACT,QAAS,GACT,iBAAkB,GAClB,iBAAkB,GAClB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,SAAS,EAC9D,MAAO,CACL,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,OACR,OAAQ,MACR,cAAe,MAAA,CACjB,CACF,EAIFpe,EAAA,IAACqwE,GAAA,CACC,OAAQjC,EACR,QAAS,IAAMC,EAAsB,EAAK,EAC1C,UAAWpvD,EACX,MAAAvU,CAAA,CACF,EAGC+jE,SACE,MAAI,CAAA,UAAU,uEACb,SAACzuE,EAAA,IAAA,MAAA,CAAI,UAAU,kDACb,eAAC,MAAA,CAAI,UAAU,kBACb,SAAAA,EAAAA,IAACyqE,IAAe,QAAS,IAAMiE,EAAuB,EAAK,CAAG,CAAA,CAChE,CAAA,CACF,CAAA,CACF,CAAA,CAAA,EAEN,CAEJ,CAGA,MAAM4B,GAAgB,CAAC,CAAE,MAAApnC,EAAO,YAAAqnC,EAAa,QAAAC,EAAS,SAAAC,EAAU,SAAAhxE,KAE3D+E,EAAA,KAAA,MAAI,CAAA,UAAU,+KACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,SACb,SAAA,OAAC,QAAA,CAAM,UAAU,sDAAuD,SAAM0kC,EAAA,EAC7EqnC,SACE,IAAE,CAAA,UAAU,gDAAiD,SAAYA,CAAA,CAAA,CAAA,EAE9E,EACCvwE,EAAAA,IAAA,MAAI,CAAA,UAAU,yBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAASywE,EACT,UAAW,wPACTD,EAAU,eAAiB,8BAC7B,GAEA,SAAAhsE,EAAA,KAAC,OAAA,CACC,UAAW,2IACTgsE,EAAU,gBAAkB,eAC9B,GAEA,SAAA,CAAAxwE,EAAA,IAAC,OAAA,CACC,UAAW,sFACTwwE,EAAU,YAAc,aAC1B,GAEA,SAACxwE,EAAA,IAAA,MAAI,CAAA,UAAU,2CAA2C,KAAK,OAAO,QAAQ,YAC5E,SAAAA,EAAA,IAAC,OAAA,CACC,EAAE,mCACF,OAAO,eACP,YAAY,IACZ,cAAc,QACd,eAAe,OAAA,CAAA,CAEnB,CAAA,CAAA,CACF,EACAA,EAAA,IAAC,OAAA,CACC,UAAW,sFACTwwE,EAAU,cAAgB,WAC5B,GAEA,SAACxwE,EAAA,IAAA,MAAA,CAAI,UAAU,yBAAyB,KAAK,eAAe,QAAQ,YAClE,eAAC,OAAA,CAAK,EAAE,oNAAA,CAAqN,CAC/N,CAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAEJ,CAAA,CAAA,EACF,EACCwwE,GAAW/wE,GACTO,MAAA,MAAI,CAAA,UAAU,2CACZ,SAAAP,CACH,CAAA,CAAA,EAEJ,EAKEgc,GAAgB,CAAC,CAAE,OAAAC,EAAQ,QAAAC,EAAS,YAAAC,EAAa,UAAAC,EAAW,MAAAjZ,EAAO,gBAAAkZ,EAAiB,SAAAjH,EAAU,sBAAAo5D,CAAA,IAA4B,CAC9H,MAAMlyD,EAAQ,CACZ,CAAE,IAAK,YAAa,MAAO,wBAAyB,KAAMX,GAAM,SAAU,EAC1E,CAAE,IAAK,YAAa,MAAO,sBAAuB,KAAMA,GAAM,aAAc,EAC5E,CAAE,IAAK,YAAa,MAAO,6BAA8B,KAAMA,GAAM,SAAU,CACjF,EAEMY,EAAmBD,EAAM,UAAkBE,GAAAA,EAAK,MAAQL,CAAW,EACnEyF,EAAU,EAAQze,EAElBsZ,EAAsBtZ,GACtBA,GAAO,SAAS,sBAAsB,EACjC,8CAELA,GAAO,SAAS,oBAAoB,EAC/B,kDAEFA,GAAO,QAAQ,kCAAmC,EAAE,GAAK,oBAG5DuZ,EAAkB,MAAOlL,GAAS,CAClC,GAAA,CACI,MAAA,UAAU,UAAU,UAAUA,CAAI,EACxC7N,GAAM,QAAQ,8BAA8B,OAChC,CACZA,GAAM,MAAM,wBAAwB,CAAA,CAExC,EAEA,aACGgZ,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EAAAA,SACnC,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,qBAAqB,QAAAV,EAC9C,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAC/S,EAAAA,IAAA,MAAI,CAAA,UAAU,sDAAuD,CAAA,CAAA,CACxE,QAEC,MAAI,CAAA,UAAU,0CACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,uIACtB,SAAA,QAACA,GAAO,MAAP,CAAa,UAAU,yDACrB,SAAA,CAAAgF,EAAU,uBAAyB,sBACnCxF,GAAa,CAACwF,GACZrhB,MAAA,MAAI,CAAA,UAAU,8DACZ,SACH6b,CAAA,CAAA,CAAA,EAEJ,EAEA7b,MAAC,OAAI,UAAU,YACZ,WAAM,IAAI,CAACic,EAAM/R,IAAU,CAC1B,MAAMoS,EAAOL,EAAK,KACZnY,EAAWoG,IAAU8R,EACrBO,EAAc,CAAC8E,GAAWnX,EAAQ8R,EAClCQ,EAAc6E,GAAWnX,IAAU8R,EAGvC,OAAAxX,EAAA,KAAC,MAAA,CAEC,UAAWiY,GACT,2DACA,CACE,iCAAkC3Y,GAAY,CAAC0Y,EAC/C,iBAAkBD,EAClB,6BAA8BC,EAC9B,gBAAiB,CAAC1Y,GAAY,CAACyY,GAAe,CAACC,CAAA,CAEnD,EAEA,SAAA,CAAAxc,EAAA,IAACsc,EAAK,EAAA,EACrB9X,EAAAA,KAAA,MAAI,CAAA,UAAU,SACG,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,4CAA6C,SAAAic,EAAK,MAAM,EACvEnY,GAAYmY,EAAK,MAAQ,aAAe,CAACoF,GACxC7c,EAAA,KAAC,IAAE,CAAA,UAAU,gDAAgD,SAAA,CAAA,uBACtCqX,CAAA,CACvB,CAAA,CAAA,CAEpB,CAAA,CAAA,CAAA,EAnBqBI,EAAK,GAoBZ,CAEH,CAAA,EACH,EAECoF,GACE7c,EAAA,KAAA,MAAI,CAAA,UAAU,6DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,MAAAob,GAAM,MAAN,EAAY,EACZ5W,EAAAA,KAAA,MAAI,CAAA,UAAU,SACb,SAAA,OAAC,KAAA,CAAG,UAAU,mCAAmC,SAAa,gBAAA,QAC7D,IAAE,CAAA,UAAU,4BACV,SAAA0X,EAAmBtZ,CAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACC5C,EAAAA,IAAA,MAAI,CAAA,UAAU,wBACzB,SAAAA,EAAA,IAAC,SAAA,CACa,QAAS2b,EACT,UAAU,iLACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAGDC,IAAgB,aACdpX,OAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,OAAC,IAAA,CAAE,UAAU,qCAAqC,SAAmC,sCAAA,QACpF,IAAA,CAAE,UAAU,wCAAwC,SAAsD,wDAAA,CAAA,CAAA,EAC7G,EAECA,EAAAA,KAAA,MAAI,CAAA,UAAU,0FACb,SAAA,OAAC,KAAA,CAAG,UAAU,iDAAiD,SAAsB,yBAAA,EACpFA,EAAAA,KAAA,MAAI,CAAA,UAAU,uEACb,SAAA,OAAC,OAAA,CAAK,UAAU,4DACb,SACHsX,EAAA,EACA9b,EAAA,IAAC,SAAA,CACC,QAAS,IAAMmc,EAAgBL,CAAe,EAC9C,UAAU,4EACV,MAAM,eAEN,SAAC9b,EAAAA,IAAA0c,GAAO,CAAA,UAAU,0CAA2C,CAAA,CAAA,CAAA,CAC/D,EACF,QACC,IAAA,CAAE,UAAU,gDAAgD,SAE7D,0DAAA,CAAA,CAAA,EACF,EAEClY,EAAAA,KAAA,MAAI,CAAA,UAAU,0FACb,SAAA,OAAC,KAAA,CAAG,UAAU,iDAAiD,SAAU,aAAA,EAExEA,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,OAAC,MAAA,CAAI,UAAU,gGAAgG,SAAC,IAAA,SAC/G,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,4CAA4C,SAAY,eAAA,QACpE,IAAA,CAAE,UAAU,2CAA2C,SAA6D,+DAAA,CAAA,CAAA,CACvH,CAAA,CAAA,EACF,EAECA,EAAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,OAAC,MAAA,CAAI,UAAU,gGAAgG,SAAC,IAAA,SAC/G,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,4CAA4C,SAAa,gBAAA,QACrE,IAAA,CAAE,UAAU,2CAA2C,SAAiD,oDAAA,EACxGqQ,GAAU,kBAAkB,SAC3B7U,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACL2b,EAAA,EACRsyD,EAAsB,EAAI,CAC5B,EACA,UAAU,6GACX,SAAA,uBAAA,CAAA,CAED,CAEJ,CAAA,CAAA,EACF,EAECzpE,EAAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,OAAC,MAAA,CAAI,UAAU,gGAAgG,SAAC,IAAA,SAC/G,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,4CAA4C,SAAa,gBAAA,QACrE,IAAA,CAAE,UAAU,2CAA2C,SAAyC,2CAAA,CAAA,CAAA,CACnG,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,EAGMmY,GAAkB,CAAC,CAAE,OAAAjB,EAAQ,QAAAC,EAAS,OAAAiB,KAAa,CACvD,KAAM,CAACC,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAAC2/C,EAAOC,CAAQ,EAAI5/C,EAAAA,SAAS,CAAC,EAEpC,aACGwc,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EAAAA,SACnC,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,gBAAgB,QAAAV,EACzC,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAC/S,EAAAA,IAAA,MAAI,CAAA,UAAU,sCAAuC,CAAA,CAAA,CACxD,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,sIACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CACC,GAAG,KACH,UAAU,+EACX,SAAA,sBAAA,CAED,EAECrc,EAAAA,IAAA,MAAA,CAAI,UAAU,gCACZ,SAAC,CAAA,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGrE,IAAU,CAC/B,MAAMwmE,EAAcxmE,EAAQ,EAE1B,OAAAlK,EAAA,IAAC,SAAA,CAEC,UAAW,iDACT0wE,IAAgBnxB,GAAS1iC,GACrB,kBACA,kCACN,GACA,QAAS,IAAM,CACbC,EAAU4zD,CAAW,EACrB9zD,EAAO8zD,CAAW,EAClB,WAAW/0D,EAAS,GAAG,CACzB,EACA,aAAc,IAAM6jC,EAASkxB,CAAW,EACxC,aAAc,IAAMlxB,EAAS,CAAC,EAE9B,eAACpuC,GAAO,CAAA,CAAA,CAAA,EAdHs/D,CAeP,CAEH,CAAA,EACH,QAEC,IAAA,CAAE,UAAU,4DAA4D,SAEzE,0CAAA,EAEC1wE,EAAAA,IAAA,MAAI,CAAA,UAAU,2BACb,SAAAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,uSACV,QAAS2b,EACV,SAAA,MAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,EAGMy0D,GAAiB,CAAC,CAAE,OAAA10D,EAAQ,QAAAC,EAAS,aAAA9P,EAAc,UAAAgQ,EAAW,YAAAjQ,EAAa,YAAAqkD,EAAa,UAAA0gB,KAAgB,CAC5G,KAAM,CAACC,EAAiBC,CAAkB,EAAIjxE,EAAAA,SAAS,EAAE,EACnD,CAACmuB,EAAa+iD,CAAc,EAAIlxE,EAAAA,SAAS,EAAE,EAC3C,CAACmxE,EAAUC,CAAW,EAAIpxE,EAAAA,SAAS,EAAK,EACxC,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,IAAI,EACjC,CAACqxE,EAAWC,CAAY,EAAItxE,EAAAA,SAAS,EAAK,EAC1C,CAAC01B,EAAa67C,CAAc,EAAIvxE,EAAAA,SAAS,IAAI,EAC7C,CAAE,MAAA8K,CAAM,EAAIC,GAAW,EAGvB8vD,EAAiB,IAAM,CAC3B,GAAI,CAAC1sC,GAAe,CAAC6iD,GAAmB7iD,IAAgB,KAAO6iD,IAAoB,IAC1E,MAAA,IAEL,GAAA,CAEK,OADO,OAAOA,CAAe,EAAI,OAAO7iD,CAAW,GAC7C,QAAQ,CAAC,OACR,CACP,MAAA,GAAA,CAEX,EAGM83B,EAAqB,SAAY,CACjC,GAAA,CAAC93B,GAAe,CAAC6iD,EAAiB,CACpCvzC,EAAS,2BAA2B,EACpC,MAAA,CAGE,GAAA,CACF2zC,EAAY,EAAI,EAChB3zC,EAAS,IAAI,EAGP,MAAAle,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAClCtS,EAAQ,IAAIpB,EAAgBG,EAAcy8D,GAAa,IAAKnpD,CAAM,EAGlEgiC,EAAgB,MAAMr0C,EAAM,gBAAgB,EAC5Cyf,EAAS,IAAI7gB,EACjBy1C,EACA,CAAC,iNAAiN,EAClNhiC,CACF,EAGMiyD,EAAiBllE,GAAkB6hB,EAAa,EAAE,EAClDsjD,EAAe7xD,GAAkBoxD,CAAe,EAItD,GADgB,MAAM9jE,EAAM,UAAUqS,EAAO,OAAO,EACtCiyD,EACN,MAAA,IAAI,MAAM,4BAA4B,EAK9C,GADyB,MAAMtkE,EAAM,UAAUqS,EAAO,QAASgiC,CAAa,EACrDiwB,EAAgB,CAEvC,MAAME,EAAY,MAAMxkE,EAAM,QAAQq0C,EAAeiwB,CAAc,EACjE,QAAQ,IAAI,iDAAiD,EAC/D,MAAME,EAAU,KAAK,EACnB,QAAQ,IAAI,4BAA4B,EAGxC,MAAM,IAAI,QAAQ7jD,GAAW,WAAWA,EAAS,GAAI,CAAC,CAAA,CAIlD,MAAAG,EAAW,KAAK,MAAM,KAAK,MAAQ,GAAI,EAAI,GAAK,GACtD,QAAQ,IAAI,qBAAqB,EAC3B,MAAAC,EAAiB,MAAMtB,EAAO,gBAClCzf,EAAM,OACNskE,EACA,EACA,EACAjyD,EAAO,QACPyO,EACA,CAAE,MAAOyjD,CAAa,CACxB,EAEA,QAAQ,IAAI,kDAAkD,EAC9D,MAAMxjD,EAAe,KAAK,EAC1B,QAAQ,IAAI,8BAA8B,EAE1CqjD,EAAa,EAAI,EACPP,EAAA,QACHl4B,EAAK,CACJ,QAAA,MAAM,0BAA2BA,CAAG,EACnCpb,EAAAob,EAAI,SAAW,yBAAyB,CAAA,QACjD,CACAu4B,EAAY,EAAK,CAAA,CAErB,EAGAlxE,EAAAA,UAAU,IAAM,EACS,SAAY,CAC7B,GAAA,CACF,GAAI,CAAC+L,EAAc,OAGnB,MAAM,IAAI,QAAQ4hB,GAAW,WAAWA,EAAS,GAAI,CAAC,EAEtD,MAAM7lB,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDtS,EAAQ,IAAIpB,EAAgBG,EAAcy8D,GAAa,IAAK1gE,CAAQ,EAGpE2kB,EAAS,MAAMzf,EAAM,gBAAgB,EACnC,QAAA,IAAI,kBAAmByf,CAAM,EAGrC,IAAI0wB,EAAU,EACV5B,EAAO,KAEJ,KAAA4B,EAAU,GAAK,CAAC5B,GACjB,GAAA,CAEE,GADGA,EAAA,MAAMvuC,EAAM,cAAc,EAC7BuuC,GAAQA,IAAS,6CAA8C,CACzD,QAAA,IAAI,sBAAuBA,CAAI,EACvC81B,EAAe91B,CAAI,EACnB,KAAA,OAEU,CACZ,QAAQ,IAAI,WAAW,EAAI4B,CAAO,sBAAsB,EACxDA,IACIA,EAAU,GACZ,MAAM,IAAI,QAAQxvB,GAAW,WAAWA,EAAS,GAAI,CAAC,CACxD,EAIA,CAAC4tB,GAAQA,IAAS,+CACpB,QAAQ,IAAI,sCAAsC,QAE7Cz4C,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,CAAA,CAEtD,GACe,CAAA,EACd,CAACiJ,CAAY,CAAC,EAWjB,MAAMw+D,EAPC3/D,GAAO,GACLs9D,GAAiBt9D,EAAM,EAAE,GAAK,CACnC,KAAM,cACN,YAAa,IAAM,GACrB,EAJuB,KAUnByR,EAAkB,MAAOlL,GAAS,CAClC,GAAA,CACI,MAAA,UAAU,UAAU,UAAUA,CAAI,EACxC7N,GAAM,QAAQ,8BAA8B,OAChC,CACZA,GAAM,MAAM,wBAAwB,CAAA,CAExC,EAGE,OAACpD,EAAA,IAAAoc,IAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EAAAA,SACnC,SAAC/S,EAAAA,IAAAqc,GAAO,CAAA,GAAG,MAAM,UAAU,qBAAqB,QAAAV,EAG9C,SAAC3b,EAAA,IAAA,MAAA,CAAI,UAAU,gCACb,SAACA,EAAAA,IAAA,MAAI,CAAA,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,uIACtB,SAAA,QAACA,GAAO,MAAP,CAAa,UAAU,yDAAyD,SAAA,CAAA,wBAE9E7X,EAAAA,KAAA,MAAI,CAAA,UAAU,0DACb,SAAA,CAAAA,OAAC,IAAG,CAAA,SAAA,CAAAqX,EAAU,KAAGjQ,EAAY,GAAA,EAAC,EAC7BpH,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAA,IAAA,MAAI,CAAA,IAAKioE,GAAWoC,GAAS,MAAQ,WAAW,EAAG,IAAKA,GAAS,MAAQ,YAAa,UAAU,UAAU,SAC1G,OAAM,CAAA,SAAA,CAAAA,GAAS,MAAQ,YAAY,OAAKA,GAAS,SAAW,SAAA,CAAU,CAAA,CAAA,CACzE,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGC/0C,GACE9wB,EAAA,KAAA,MAAI,CAAA,UAAU,mDACb,SAAA,OAAC,KAAA,CAAG,UAAU,yDAAyD,SAEvE,yBAAA,EACCA,EAAAA,KAAA,MAAI,CAAA,UAAU,uEACb,SAAA,OAAC,OAAA,CAAK,UAAU,4DACb,SACH8wB,EAAA,EACAt1B,EAAA,IAAC,SAAA,CACC,QAAS,IAAMmc,EAAgBmZ,CAAW,EAC1C,UAAU,4EACV,MAAM,oBAEN,SAACt1B,EAAAA,IAAA0c,GAAO,CAAA,UAAU,0CAA2C,CAAA,CAAA,CAAA,CAC/D,EACF,QACC,IAAA,CAAE,UAAU,gDAAgD,SAE7D,2FAAA,CAAA,CAAA,EACF,EAGAu0D,SA6EC,MAAA,CAAI,UAAU,YACb,SAAA,CAACzsE,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACxE,EAAAA,IAAA,OAAI,UAAU,uFACb,SAACA,MAAAs5B,GAAQ,CAAA,UAAU,2BAA2B,EAChD,QACC,KAAA,CAAG,UAAU,uDAAuD,SAErE,gCAAA,EACC90B,EAAAA,KAAA,IAAE,CAAA,UAAU,mCAAmC,SAAA,CAAA,0CACN6lE,EAAQ,IAAA,CAClD,CAAA,CAAA,EACF,EAEC7lE,EAAAA,KAAA,MAAI,CAAA,UAAU,8CACb,SAAA,OAAC,KAAA,CAAG,UAAU,iDAAiD,SAE/D,gBAAA,EACAA,EAAA,KAAC,IAAA,CACC,KAAM6lE,EAAQ,YAAYx+D,CAAY,EACtC,OAAO,SACP,IAAI,sBACJ,UAAU,kIAEV,SAAA,CAAC7L,EAAAA,IAAA8R,GAAA,CAAO,UAAU,UAAU,EAAE,YACpBu4D,EAAQ,IAAA,CAAA,CAAA,CACpB,EACF,EAECrqE,EAAAA,IAAA,MAAI,CAAA,UAAU,mBACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,2GACX,SAAA,OAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,EAhHA3b,EAAAA,IAAA+S,EAAA,SAAA,CACE,SAACvO,OAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,sDAAsD,SAEvE,eAAA,EACAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO+tB,EACP,SAAWvmB,GAAMspE,EAAetpE,EAAE,OAAO,KAAK,EAC9C,UAAU,4MACV,YAAayoD,EAAc,QAAQ5mC,GAAmB4mC,EAAa,EAAE,CAAC,GAAK,oBAAA,CAAA,CAC7E,EACF,SAEC,MACC,CAAA,SAAA,CAACzrD,EAAAA,KAAA,QAAA,CAAM,UAAU,sDACd,SAAA,CAAAkG,GAAO,gBAAgB,QAAU,MAAM,SAAA,EAC1C,EACA1K,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO4wE,EACP,SAAWppE,GAAMqpE,EAAmBrpE,EAAE,OAAO,KAAK,EAClD,UAAU,4MACV,YAAa,aAAakD,GAAO,gBAAgB,QAAU,KAAK,EAAA,CAAA,CAClE,EACF,QAEC,MAAI,CAAA,UAAU,8CACb,SAAClG,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,OAAC,OAAA,CAAK,UAAU,mCAAmC,SAAmB,sBAAA,EACrEA,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,kDACb,SAAA,CAAei2D,EAAA,EAAE,IAAE/vD,GAAO,gBAAgB,QAAU,KAAA,EACvD,QACC,OAAA,CAAK,UAAU,2CAA2C,SAAS,WAAA,CAAA,CAAA,CACtE,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAEC9H,GACE5C,EAAA,IAAA,MAAA,CAAI,UAAU,wDACb,eAAC,IAAE,CAAA,UAAU,uBAAwB,SAAA4C,CAAA,CAAM,EAC7C,EAGD4B,EAAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,2GACX,SAAA,QAAA,CAEf,EACc3b,EAAA,IAAC,SAAA,CACC,QAAS6lD,EACT,SAAUkrB,EACV,UAAWt0D,GACT,2CACA,0BACA,uCACA,iDACF,EAEC,SACCs0D,EAAAvsE,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAAuxE,GAAA,CAA0B,UAAU,eAAe,EAAE,qBAAA,CAAA,CAE5E,EAEoB,eAAA,CAAA,CAEJ,CAClB,CAAA,CAAA,CACc,CAAA,CACF,CAAA,CAsCA,CAEJ,CAAA,CAAA,CAAA,EAEJ,CAAA,CACF,CACF,CAAA,EACF,CAEJ,EAGMlB,GAAiB,CAAC,CAAE,OAAA30D,EAAQ,QAAAC,EAAS,UAAA6lD,EAAW,MAAA92D,WAEjD0R,GAAA,CAAW,OAAM,GAAC,KAAMV,EAAQ,GAAI3I,EAAAA,SACnC,SAAAvO,OAAC6X,GAAO,CAAA,GAAG,MAAM,UAAU,qBAAqB,QAAAV,EAC9C,SAAA,CAAA3b,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAC/S,EAAAA,IAAA,MAAI,CAAA,UAAU,4CAA6C,CAAA,CAAA,CAC9D,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,kDACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,uIACtB,SAAA,CAAArc,EAAA,IAACqc,GAAO,MAAP,CAAa,UAAU,yDAAyD,SAEjF,sCAAA,EAEC7X,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,OAAC,IAAA,CAAE,UAAU,OAAO,SAA6B,gCAAA,EAChDA,EAAAA,KAAA,KAAG,CAAA,UAAU,qCACZ,SAAA,CAACxE,EAAAA,IAAA,MAAG,SAA4C,+CAAA,EAC/CA,EAAAA,IAAA,MAAG,SAA8C,iDAAA,EACjDA,EAAAA,IAAA,MAAG,SAA6D,+DAAA,CAAA,CAAA,CACnE,CAAA,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,iCACb,SAACwE,EAAA,KAAA,IAAA,CAAE,UAAU,2CACX,SAAA,OAAC,OAAA,CAAK,UAAU,cAAc,SAAU,aAAA,EAAO,2GAAyGkG,GAAO,gBAAgB,QAAU,MAAM,sCAAA,CAAA,CACjM,CAAA,CACF,EAEClG,EAAAA,KAAA,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,2GACX,SAAA,QAAA,CAED,EACA3b,EAAA,IAAC,SAAA,CACC,QAASwhE,EACT,UAAU,wGACX,SAAA,cAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAKEgQ,GAAW,CAAC,CAAE,MAAA3W,EAAO,YAAA0V,EAAa,SAAA9wE,EAAU,SAAAqE,KAC3CA,EAEFU,EAAA,KAAA,MAAI,CAAA,UAAU,kGACb,SAAA,OAAC,KAAA,CAAG,UAAU,wDAAyD,SAAMq2D,EAAA,QAC5E,IAAA,CAAE,UAAU,wCAAyC,SAAY0V,EAAA,EAC7D9wE,CAAA,EACP,EANoB,KAWlBgyE,GAAc,CAAC,CAAE,QAAAtS,YACpB,MAAA,CAAI,UAAU,mCACb,SAAA,CAACn/D,EAAAA,IAAA0xE,GAAA,CAAa,UAAU,wFAAwF,QAC/G,MAAA,CAAI,UAAU,6KACZ,SACHvS,CAAA,CAAA,CAAA,EACF,EAGIgR,GAAoB,CAAC,CAAE,YAAAv0D,EAAa,SAAA/G,EAAU,aAAAyJ,EAAc,aAAA4wD,KAAmB,CAC7E,KAAA,CAAE,MAAAxkE,CAAM,EAAIC,GAAW,EACvB0/D,EAAU3/D,GAAO,GAAKwiE,GAAWxiE,EAAM,EAAE,EAAI,KAI/C,OAAAlG,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAA/S,EAAA,IAACwxE,GAAA,CACC,MAAM,6BACN,YAAY,8CACZ,SAAU51D,IAAgB,EAE1B,SAACpX,EAAA,KAAA,MAAI,CAAA,UAAU,YAEb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,kEAAkE,SAAA,CAAA,aAEhFxE,EAAAA,IAAAyxE,GAAY,CAAA,QAAQ,qEAAsE,CAAA,CAAA,EAC7F,EACAzxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,OACL,MAAO6U,EAAS,KAChB,SAAUyJ,EACV,UAAU,mGACV,YAAY,kBAAA,CAAA,CACd,EACF,SAGC,MACC,CAAA,SAAA,CAAC9Z,EAAAA,KAAA,QAAA,CAAM,UAAU,kEAAkE,SAAA,CAAA,kBAEhFxE,EAAAA,IAAAyxE,GAAY,CAAA,QAAQ,+EAAgF,CAAA,CAAA,EACvG,QACC,MAAI,CAAA,UAAU,8DACb,SAACjtE,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKioE,GAAWoC,GAAS,MAAQ,WAAW,EAC5C,IAAKA,GAAS,KACd,UAAU,SAAA,CACZ,SACC,MACC,CAAA,SAAA,CAAArqE,MAAC,IAAE,CAAA,UAAU,4CACV,SAAAqqE,GAAS,MAAQ,gBACpB,QACC,IAAE,CAAA,UAAU,2CACV,SAAUA,EAAA,WAAWA,EAAQ,OAAO,MAAM,EAAG,CAAC,CAAC,MAAMA,EAAQ,OAAO,MAAM,EAAE,CAAC,GAAK,0CACrF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGC7lE,EAAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,kEAAkE,SAAA,CAAA,eAEhFxE,EAAAA,IAAAyxE,GAAY,CAAA,QAAQ,oDAAqD,CAAA,CAAA,EAC5E,EACAzxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,SACL,MAAO6U,EAAS,OAChB,SAAUyJ,EACV,UAAU,mGACV,YAAY,YAAA,CAAA,CACd,EACF,SACC,MACC,CAAA,SAAA,CAAC9Z,EAAAA,KAAA,QAAA,CAAM,UAAU,kEAAkE,SAAA,CAAA,eAEhFxE,EAAAA,IAAAyxE,GAAY,CAAA,QAAQ,sCAAuC,CAAA,CAAA,EAC9D,EACAzxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,cACL,MAAO6U,EAAS,YAChB,SAAUyJ,EACV,UAAU,mGACV,YAAY,eAAA,CAAA,CACd,CACF,CAAA,CAAA,EACF,EAEAte,EAAA,IAACswE,GAAA,CACC,MAAM,wBACN,YAAY,iDACZ,QAASz7D,EAAS,mBAClB,SAAU,IAAMq6D,EAAa,oBAAoB,EAEjD,SAAAlvE,EAAA,IAAC,WAAA,CACC,KAAK,eACL,MAAO6U,EAAS,aAChB,SAAUyJ,EACV,UAAU,wGACV,YAAY,qCACZ,KAAM,CAAA,CAAA,CACR,CAAA,CACF,CACF,CAAA,CAAA,CACF,EAEAte,EAAA,IAACwxE,GAAA,CACC,MAAM,oBACN,YAAY,+CACZ,SAAU51D,IAAgB,EAE1B,SAACpX,EAAA,KAAA,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kDACb,SAAA,OAAC,KAAA,CAAG,UAAU,yDAAyD,SAAe,kBAAA,QACrF,IAAA,CAAE,UAAU,gDAAgD,SAE7D,0OAAA,EACCA,EAAAA,KAAA,MAAI,CAAA,UAAU,wCAEb,SAAA,CAAAxE,EAAA,IAACswE,GAAA,CACC,MAAM,UACN,YAAY,8EACZ,QAASz7D,EAAS,eAClB,SAAU,IAAMq6D,EAAa,gBAAgB,EAE5C,SAAAr6D,EAAS,gBACP7U,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAACwE,EAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,UACL,MAAO6U,EAAS,QAChB,SAAUyJ,EACV,UAAU,mGACV,YAAY,kCAAA,CACd,QACC,OAAA,CAAK,UAAU,mCAAmC,SAAC,GAAA,CAAA,CAAA,CAAA,CACtD,CACZ,CAAA,CAAA,CAEM,EAGAte,EAAA,IAACswE,GAAA,CACC,MAAM,WACN,YAAY,+EACZ,QAASz7D,EAAS,gBAClB,SAAU,IAAMq6D,EAAa,iBAAiB,EAE7C,SAAAr6D,EAAS,iBACP7U,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAACwE,EAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,WACL,MAAO6U,EAAS,SAChB,SAAUyJ,EACV,UAAU,mGACV,YAAY,kCAAA,CACd,QACC,OAAA,CAAK,UAAU,mCAAmC,SAAC,GAAA,CAAA,CAAA,CAAA,CACtE,CACc,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,EACF,GAGEzJ,EAAS,gBAAkBA,EAAS,yBACnC,MAAA,CAAI,UAAU,6CACb,SAAA,OAAC,KAAA,CAAG,UAAU,yDAAyD,SAAoB,uBAAA,QAC1F,IAAA,CAAE,UAAU,gDAAgD,SAE7D,iTAAA,EAECrQ,EAAAA,KAAA,MAAI,CAAA,UAAU,YAEb,SAAA,CAAAxE,EAAA,IAACswE,GAAA,CACC,MAAM,YACN,YAAY,mGACZ,QAASz7D,EAAS,QAAU,EAC5B,SAAU,IAAMq6D,EAAa,gBAAgB,EAE5C,SAAAr6D,EAAS,QAAU,SACjB,MAAI,CAAA,UAAU,OACb,SAACrQ,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,UACL,MAAO6U,EAAS,QAChB,SAAUyJ,EACV,UAAU,mGACV,YAAY,oCAAA,CACd,QACC,OAAA,CAAK,UAAU,mCAAmC,SAAC,GAAA,CAAA,CAAA,CAAA,CACtD,CACF,CAAA,CAAA,CAEJ,EAGAte,EAAA,IAACswE,GAAA,CACC,MAAM,WACN,YAAY,0FACZ,QAASz7D,EAAS,OAAS,EAC3B,SAAU,IAAMq6D,EAAa,eAAe,EAE3C,SAAAr6D,EAAS,OAAS,UAChB,MAAA,CAAI,UAAU,8BACb,SAAA,CAAA7U,MAAC,MACC,CAAA,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,aACL,MAAO6U,EAAS,WAChB,SAAUyJ,EACV,UAAU,mGACV,YAAY,uBAAA,CAAA,EAEhB,EACC9Z,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,SACL,MAAO6U,EAAS,OAChB,SAAUyJ,EACV,UAAU,iGACV,YAAY,oCAAA,CACd,QACC,OAAA,CAAK,UAAU,mCAAmC,SAAC,GAAA,CAAA,CAAA,CACtD,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,EAGAte,EAAA,IAACswE,GAAA,CACC,MAAM,iBACN,YAAY,kDACZ,QAASz7D,EAAS,aAAe,EACjC,SAAU,IAAMq6D,EAAa,qBAAqB,EAEjD,SAAAr6D,EAAS,aAAe,UACtB,MAAA,CAAI,UAAU,8BACb,SAAA,CAAA7U,MAAC,MACC,CAAA,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,mBACL,MAAO6U,EAAS,iBAChB,SAAUyJ,EACV,UAAU,mGACV,YAAY,6BAAA,CAAA,EAEhB,EACC9Z,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,eACL,MAAO6U,EAAS,aAChB,SAAUyJ,EACV,UAAU,iGACV,YAAY,GAAA,CACd,QACC,OAAA,CAAK,UAAU,mCAAmC,SAAC,GAAA,CAAA,CAAA,CACtD,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,EAGAte,EAAA,IAACswE,GAAA,CACC,MAAM,iBACN,YAAY,kDACZ,QAASz7D,EAAS,aAAe,EACjC,SAAU,IAAMq6D,EAAa,qBAAqB,EAEjD,SAAAr6D,EAAS,aAAe,UACtB,MAAA,CAAI,UAAU,8BACb,SAAA,CAAA7U,MAAC,MACC,CAAA,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,mBACL,MAAO6U,EAAS,iBAChB,SAAUyJ,EACV,UAAU,mGACV,YAAY,6BAAA,CAAA,EAEhB,EACC9Z,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,eACL,MAAO6U,EAAS,aAChB,SAAUyJ,EACV,UAAU,iGACV,YAAY,GAAA,CACd,QACC,OAAA,CAAK,UAAU,mCAAmC,SAAC,GAAA,CAAA,CAAA,CACtD,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,EAGAte,EAAA,IAACswE,GAAA,CACC,MAAM,gBACN,YAAY,iDACZ,QAASz7D,EAAS,YAAc,EAChC,SAAU,IAAMq6D,EAAa,oBAAoB,EAEhD,SAAAr6D,EAAS,YAAc,UACrB,MAAA,CAAI,UAAU,8BACb,SAAA,CAAA7U,MAAC,MACC,CAAA,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,kBACL,MAAO6U,EAAS,gBAChB,SAAUyJ,EACV,UAAU,mGACV,YAAY,4BAAA,CAAA,EAEhB,EACC9Z,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,cACL,MAAO6U,EAAS,YAChB,SAAUyJ,EACV,UAAU,iGACV,YAAY,GAAA,CACd,QACC,OAAA,CAAK,UAAU,mCAAmC,SAAC,GAAA,CAAA,CAAA,CACtD,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,EAEAte,EAAA,IAACwxE,GAAA,CACC,MAAM,oBACN,YAAY,sCACZ,SAAU51D,IAAgB,EAE1B,SAACpX,EAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,EAAA,IAACswE,GAAA,CACC,MAAM,YACN,YAAY,4CACZ,QAASz7D,EAAS,gBAClB,SAAU,IAAMq6D,EAAa,iBAAiB,CAAA,CAChD,EAEAlvE,EAAA,IAACswE,GAAA,CACC,MAAM,WACN,YAAY,8CACZ,QAASz7D,EAAS,eAClB,SAAU,IAAMq6D,EAAa,gBAAgB,CAAA,CAAA,CAC/C,CACF,CAAA,CAAA,CACF,EAEAlvE,EAAA,IAACwxE,GAAA,CACC,MAAM,kBACN,YAAY,oDACZ,SAAU51D,IAAgB,EAE1B,SAACpX,EAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yFACb,SAAA,OAAC,KAAA,CAAG,UAAU,yDAAyD,SAAsB,yBAAA,EAE5FA,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAU,aAAA,QACjE,IAAE,CAAA,UAAU,4CAA6C,SAAAqQ,EAAS,MAAQ,GAAI,CAAA,CAAA,EACjF,SACC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAM,SAAA,QAC7D,IAAE,CAAA,UAAU,4CAA6C,SAAAA,EAAS,QAAU,GAAI,CAAA,CAAA,CACnF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAY,eAAA,QACnE,IAAE,CAAA,UAAU,4CAA6C,SAAAA,EAAS,aAAe,GAAI,CAAA,CAAA,EACxF,SAEC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAgB,mBAAA,EACvErQ,EAAAA,KAAA,MAAI,CAAA,UAAU,4BACZ,SAAA,CAAAqQ,EAAS,iBACP7U,EAAAA,IAAA,OAAK,CAAA,UAAU,4EAA4E,SAE5F,YAAA,EAED6U,EAAS,gBACP7U,EAAAA,IAAA,OAAK,CAAA,UAAU,4EAA4E,SAE5F,UAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,2CAA2C,SAAiB,oBAAA,EACxEwE,EAAAA,KAAA,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,wCAAwC,SAAA,CAAA,YACzCA,EAAAA,KAAA,OAAK,CAAA,UAAU,cAAe,SAAA,CAAAqQ,EAAS,QAAQ,GAAA,CAAC,CAAA,CAAA,EAC5D,EACCrQ,EAAAA,KAAA,IAAE,CAAA,UAAU,wCAAwC,SAAA,CAAA,aACxCA,EAAAA,KAAA,OAAK,CAAA,UAAU,cAAe,SAAA,CAAAqQ,EAAS,SAAS,GAAA,CAAC,CAAA,CAAA,CAC9D,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,oGACb,SAACrQ,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,EAAAA,IAAA0xE,GAAA,CAAa,UAAU,sDAAsD,SAC7E,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,2DAA2D,SAAgB,mBAAA,QACxF,IAAA,CAAE,UAAU,oDAAoD,SAEjE,+GAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EACF,CAEJ,EC3hFA,SAASC,IAAM,CACP,KAAA,CAAE,WAAAjyE,CAAW,EAAIO,GAAS,EAC1B,CAAC2xE,EAAaC,CAAc,EAAIjyE,EAAAA,SAAS,EAAK,EAC9C,CAACkyE,EAAgBC,CAAiB,EAAInyE,EAAAA,SAAS,EAAK,EACpD,CAACoyE,EAAWC,CAAY,EAAIryE,EAAAA,SAAS,EAAK,EAC1C,CAACsyE,EAAmBC,CAAoB,EAAIvyE,EAAAA,SAAS,EAAI,EA2B/D,OAzBAE,EAAAA,UAAU,IAAM,CACd,MAAMsyE,EAAgB,IAAM,CACtB,OAAO,UAAU,SACnBD,EAAqB,EAAK,CAE9B,EAGcC,EAAA,EAGR,MAAAl+D,EAAW,YAAYk+D,EAAe,GAAG,EAGzCxE,EAAU,WAAW,IAAM,CAC/B,cAAc15D,CAAQ,EACtBi+D,EAAqB,EAAK,GACzB,GAAK,EAER,MAAO,IAAM,CACX,cAAcj+D,CAAQ,EACtB,aAAa05D,CAAO,CACtB,CACF,EAAG,EAAE,EAEDsE,QAEC,MAAI,CAAA,UAAU,2EACb,SAAC1tE,EAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,iGAAkG,CAAA,EAChHA,EAAA,IAAA,IAAA,CAAE,UAAU,mCAAmC,SAAwB,0BAAA,CAAA,CAAA,CAAA,CAC1E,CACF,CAAA,EAKDA,EAAA,IAAAwY,GAAA,CACC,SAACxY,EAAAA,IAAAqyE,GAAA,CAAY,OAAQC,GACnB,SAAAtyE,EAAA,IAACuyE,GAAA,CACC,OAAAn/D,GACA,MAAO1T,EAAa8yE,GAAU,CAC5B,YAAa,UACb,sBAAuB,QACvB,aAAc,QACd,UAAW,SACX,YAAa,OACd,CAAA,EAAIC,GAAW,CACd,YAAa,UACb,sBAAuB,QACvB,aAAc,QACd,UAAW,SACX,YAAa,OAAA,CACd,EACD,UAAU,OACV,uBAAwB,GACxB,QAAS,CACP,QAAS,eACX,EAEA,SAACzyE,EAAAA,IAAAkoB,GAAA,CACC,SAAC1jB,OAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAA2sE,GAAA,CAAQ,SAAS,WAAY,CAAA,EAC9BnoE,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAxE,EAAA,IAACsR,GAAA,CACC,YAAa,IAAMugE,EAAe,EAAI,EACtC,eAAgB,IAAME,EAAkB,EAAI,CAAA,CAC9C,EACAvtE,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAxE,EAAA,IAACoU,GAAO,EAAA,SACPs+D,GACC,CAAA,SAAA,CAAA1yE,MAAC2yE,IAAM,KAAK,IAAI,QAAS3yE,MAACw0B,IAAU,CAAA,EAAI,QACvCm+C,GAAM,CAAA,KAAK,eAAe,QAAS3yE,MAACu3B,IAAgB,CAAA,EAAI,QACxDo7C,GAAM,CAAA,KAAK,sBAAsB,QAAS3yE,MAACsrC,IAAe,CAAA,EAAI,QAC9DqnC,GAAM,CAAA,KAAK,WAAW,QAAS3yE,MAACovC,IAAY,CAAA,EAAI,QAChDujC,GAAM,CAAA,KAAK,WAAW,QAAS3yE,MAAC2xC,IAAY,CAAA,EAAI,QAChDghC,GAAM,CAAA,KAAK,UAAU,QAAS3yE,MAAC0hE,IAAW,CAAA,EAAI,QAC9CiR,GAAM,CAAA,KAAK,eAAe,QAAS3yE,MAACykE,IAAY,CAAA,EAAI,QACpDkO,GAAM,CAAA,KAAK,eAAe,QAAS3yE,MAAC+tE,IAAY,CAAA,EAAI,QACpD4E,GAAM,CAAA,KAAK,WAAW,QAAS3yE,MAACo9D,IAAa,CAAA,EAAI,SAEjDuV,GAAM,CAAA,KAAK,SAAS,QAAS3yE,EAAAA,IAACuD,KAAY,EACzC,SAAA,CAAAvD,MAAC2yE,IAAM,MAAK,GAAC,QAAS3yE,MAAC+E,IAAe,CAAA,EAAI,QACzC4tE,GAAM,CAAA,KAAK,QAAQ,QAAS3yE,MAACmM,IAAW,CAAA,EAAI,QAC5CwmE,GAAM,CAAA,KAAK,qBAAqB,QAAS3yE,EAAA,IAAC0O,KAAkB,CAAI,CAAA,CAAA,CACnE,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA1O,EAAA,IAACid,GAAA,CACC,OAAQ20D,EACR,QAAS,IAAMC,EAAe,EAAK,CAAA,CACrC,EACA7xE,EAAA,IAACoiB,GAAA,CACC,OAAQ0vD,EACR,QAAS,IAAMC,EAAkB,EAAK,CAAA,CACxC,EACA/xE,EAAA,IAAC4nB,GAAA,CACC,OAAQoqD,EACR,QAAS,IAAMC,EAAa,EAAK,CAAA,CAAA,CACnC,CAAA,CACF,CACF,CAAA,CAAA,GAEJ,CACF,CAAA,CAEJ,CCzIA,SAAwBW,IAAQ,CACxB,KAAA,CAAE,WAAAlzE,CAAW,EAAIO,GAAS,EAC1B,CAAC4C,EAAOgwE,CAAQ,EAAIjzE,EAAAA,SAAS,EAAE,EAC/B,CAACkD,EAAUgwE,CAAW,EAAIlzE,EAAAA,SAAS,EAAE,EACrC,CAACmzE,EAAcC,CAAe,EAAIpzE,EAAAA,SAAS,EAAK,EAChD,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C,CAAE,MAAAqzE,EAAO,gBAAAC,CAAgB,EAAI5vE,GAAa,EAC1C+e,EAAWC,GAAY,EACvB9e,EAAWC,GAAY,EAE7B3D,EAAAA,UAAU,IAAM,CAEV0D,EAAS,OAAO,OACTqvE,EAAArvE,EAAS,MAAM,KAAK,CAC/B,EACC,CAACA,EAAS,KAAK,CAAC,EAEb,MAAA2gB,EAAe,MAAO3c,GAAM,CAChCA,EAAE,eAAe,EACjBu9B,EAAa,EAAI,EAEb,GAAA,CACI,MAAAkuC,EAAMpwE,EAAOC,CAAQ,EAC3BM,EAAM,QAAQ,eAAe,EAC7Bif,EAAS,cAAc,QAChBzf,EAAO,CACRQ,EAAA,MAAMR,EAAM,OAAO,CAAA,QACzB,CACAmiC,EAAa,EAAK,CAAA,CAEtB,EAEMouC,EAAoB,SAAY,CAChC,GAAA,CACF,MAAMD,EAAgB,EACtB9vE,EAAM,QAAQ,UAAU,EACxBif,EAAS,cAAc,QAChBzf,EAAO,CACVA,EAAM,UAAY,qBACdQ,EAAA,MAAMR,EAAM,OAAO,CAC3B,CAEJ,EAEA,aACG,MAAI,CAAA,UAAW,gBAAgBlD,EAAa,cAAgB,cAAc,wCACzE,SAAA8E,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAW,6BAA6B5O,EAAa,cAAgB,UAAU,6BAE/E,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,sBAAsBN,EAAa,aAAe,eAAe,GAAI,SAAY,cAAA,CAAA,SAC/F,IAAE,CAAA,UAAW,gBAAgBA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,yBACvD,UACtBkF,GAAK,CAAA,GAAG,sBAAsB,UAAU,kDAAkD,SAE3F,SAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECpB,EAAS,OAAO,SACfxD,EAAA,IAAC,OAAI,UAAW,GAAGN,EAAa,gCAAkC,8BAA8B,yBAC9F,eAAC,IAAE,CAAA,UAAW,WAAWA,EAAa,iBAAmB,gBAAgB,GAAK,SAAA8D,EAAS,MAAM,OAAA,CAAQ,CACvG,CAAA,EAGDgB,EAAA,KAAA,OAAA,CAAK,SAAU2f,EAAc,UAAU,iBACtC,SAAA,CAAC3f,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACxE,EAAAA,IAAA,QAAA,CAAM,QAAQ,QAAQ,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,GAAI,SAEjH,eAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,GAAG,QACH,KAAK,QACL,KAAK,QACL,SAAQ,GACR,MAAO6C,EACP,SAAW2E,GAAMqrE,EAASrrE,EAAE,OAAO,KAAK,EACxC,UAAW,sCAAsC9H,EAAa,8DAAgE,oDAAoD,sHAClL,YAAY,kBAAA,CAAA,CACd,EACF,SACC,MACC,CAAA,SAAA,CAACM,EAAAA,IAAA,QAAA,CAAM,QAAQ,WAAW,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,GAAI,SAEpH,UAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,GAAG,WACH,KAAK,WACL,KAAM+yE,EAAe,OAAS,WAC9B,SAAQ,GACR,MAAOjwE,EACP,SAAW0E,GAAMsrE,EAAYtrE,EAAE,OAAO,KAAK,EAC3C,UAAW,sCAAsC9H,EAAa,8DAAgE,oDAAoD,4HAClL,YAAY,qBAAA,CACd,EACAM,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMgzE,EAAgB,CAACD,CAAY,EAC5C,UAAW,0DAA0DrzE,EAAa,oCAAsC,mCAAmC,GAE1J,SAAAqzE,QAAgBK,GAAS,CAAA,UAAU,SAAU,CAAA,EAAKpzE,EAAAA,IAACqzE,GAAM,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAChF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA7uE,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,GAAG,cACH,KAAK,cACL,KAAK,WACL,UAAU,qEAAA,CACZ,EACAA,EAAAA,IAAC,QAAM,CAAA,QAAQ,cAAc,UAAW,sBAAsBN,EAAa,gBAAkB,eAAe,GAAI,SAEhH,aAAA,CAAA,CAAA,EACF,EAEAM,EAAA,IAAC,MAAI,CAAA,UAAU,UACb,SAAAA,EAAAA,IAAC4E,GAAK,CAAA,GAAG,+BAA+B,UAAU,kDAAkD,SAAA,uBAAA,CAEpG,CACF,CAAA,CAAA,EACF,EAEAJ,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAU8kC,EACV,UAAU,gSAET,WAAY,gBAAkB,SAAA,CACjC,EAEAtgC,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,qCACb,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAW,mBAAmBN,EAAa,kBAAoB,iBAAiB,EAAI,CAAA,EAC3F,EACCM,EAAA,IAAA,MAAA,CAAI,UAAU,uCACb,SAACA,EAAAA,IAAA,OAAA,CAAK,UAAW,QAAQN,EAAa,4BAA8B,wBAAwB,GAAI,4BAAgB,CAClH,CAAA,CAAA,EACF,EAEA8E,EAAA,KAAC,SAAA,CACC,KAAK,SACL,QAAS2uE,EACT,UAAW,kEAAkEzzE,EAAa,gDAAkD,2CAA2C,6CAA6CA,EAAa,aAAe,eAAe,8FAE/Q,SAAA,CAACM,EAAAA,IAAAszE,GAAA,CAAS,UAAU,SAAU,CAAA,EAAE,QAAA,CAAA,CAAA,CAElC,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,EAEJ,CAEJ,CC/JA,SAAwBC,IAAS,CACzB,KAAA,CAAE,WAAA7zE,CAAW,EAAIO,GAAS,EAC1B,CAAC4U,EAAU0I,CAAW,EAAI3d,WAAS,CACvC,KAAM,GACN,MAAO,GACP,SAAU,GACV,gBAAiB,EAAA,CAClB,EACK,CAACmzE,EAAcC,CAAe,EAAIpzE,EAAAA,SAAS,EAAK,EAChD,CAAC4zE,EAAqBC,CAAsB,EAAI7zE,EAAAA,SAAS,EAAK,EAC9D,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C,CAAC8zE,EAAiBC,CAAkB,EAAI/zE,EAAAA,SAAS,EAAK,EACtD,CAAE,OAAAg0E,EAAQ,gBAAAV,CAAgB,EAAI5vE,GAAa,EAC3C+e,EAAWC,GAAY,EACZ7e,GAAY,EAG7B,MAAMowE,EAAgB,CACpB,OAAQ,QACR,UAAW,QACX,UAAW,QACX,OAAQ,QACR,QAAS,YACX,EAGMC,EAAiB,CACrB,OAAQD,EAAc,OAAO,KAAKh/D,EAAS,QAAQ,EACnD,UAAWg/D,EAAc,UAAU,KAAKh/D,EAAS,QAAQ,EACzD,UAAWg/D,EAAc,UAAU,KAAKh/D,EAAS,QAAQ,EACzD,OAAQg/D,EAAc,OAAO,KAAKh/D,EAAS,QAAQ,EACnD,QAASg/D,EAAc,QAAQ,KAAKh/D,EAAS,QAAQ,CACvD,EAEMyJ,EAAgB9W,GAAM,CAC1B,KAAM,CAAE,KAAA2oB,EAAM,MAAApwB,CAAM,EAAIyH,EAAE,OAC1B+V,EAAqBjW,IAAA,CACnB,GAAGA,EACH,CAAC6oB,CAAI,EAAGpwB,CAAA,EACR,CACJ,EAEMokB,EAAe,MAAO3c,GAAM,CAI5B,GAHJA,EAAE,eAAe,EACjBu9B,EAAa,EAAI,EAEblwB,EAAS,WAAaA,EAAS,gBAAiB,CAClDzR,EAAM,MAAM,wBAAwB,EACpC2hC,EAAa,EAAK,EAClB,MAAA,CAIF,MAAM8uC,EAAgB,CACpB,OAAQ,QACR,UAAW,QACX,UAAW,QACX,OAAQ,QACR,QAAS,YACX,EAEME,EAAc,CAClB,CAAE,KAAMF,EAAc,OAAQ,QAAS,6CAA8C,EACrF,CAAE,KAAMA,EAAc,UAAW,QAAS,qDAAsD,EAChG,CAAE,KAAMA,EAAc,UAAW,QAAS,qDAAsD,EAChG,CAAE,KAAMA,EAAc,OAAQ,QAAS,2CAA4C,EACnF,CAAE,KAAMA,EAAc,QAAS,QAAS,sDAAuD,CACjG,EAEA,UAAWG,KAAcD,EACvB,GAAI,CAACC,EAAW,KAAK,KAAKn/D,EAAS,QAAQ,EAAG,CACtCzR,EAAA,MAAM4wE,EAAW,OAAO,EAC9BjvC,EAAa,EAAK,EAClB,MAAA,CAIA,GAAA,CAEF,MAAM6uC,EAAO/+D,EAAS,MAAOA,EAAS,SAAU,CAC9C,KAAMA,EAAS,KACf,MAAOA,EAAS,MAChB,QAAS,GACT,gBAAiB,CACf,OAAQ,GACR,KAAM,GACN,MAAO,GACP,QAAS,GACT,WAAY,EAAA,CACd,CACD,EAGDzR,EAAM,QAAQ,+CAA+C,EAC7Dif,EAAS,qBAAsB,CAC7B,MAAO,CACL,QAAS,gDACT,MAAOxN,EAAS,KAClB,EACA,QAAS,EAAA,CACV,QAEMjS,EAAO,CACN,QAAA,MAAM,oBAAqBA,CAAK,EAClCQ,EAAA,MAAMR,EAAM,SAAW,0BAA0B,CAAA,QACvD,CACAmiC,EAAa,EAAK,CAAA,CAEtB,EAEMkvC,EAAqB,SAAY,CACrCN,EAAmB,EAAI,EACnB,GAAA,CACI,MAAAO,EAAiB,MAAMhB,EAAgB,EAIvCiB,GADU,MAAMlyE,GAAOF,GAAIrB,GAAI,QAASwzE,EAAe,GAAG,CAAC,GACvC,KAAK,EAAE,YAAkB,IAAA,OAAO,YAAY,EAGhE9wE,EAAA,QAAQ+wE,EAAY,gCAAkC,eAAe,EAE3E9xD,EAAS,eAAgB,CACvB,QAAS,EAAA,CACV,QACMzf,EAAO,CACd+wE,EAAmB,EAAK,EACpB/wE,EAAM,UAAY,qBACdQ,EAAA,MAAMR,EAAM,OAAO,CAC3B,CAEJ,EAGA,OAAI8wE,QAEC,MAAI,CAAA,UAAW,gBAAgBh0E,EAAa,cAAgB,cAAc,wCACzE,SAAA8E,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,UAAU,cAEV,SAAA,CAACtO,EAAAA,IAAA,MAAA,CAAI,UAAU,iGAAkG,CAAA,EACjHA,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAA0B,4BAAA,CAAA,CAAA,CAAA,CAAA,EAEjG,QAKD,MAAI,CAAA,UAAW,gBAAgBA,EAAa,cAAgB,cAAc,wCACzE,SAAA8E,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAW,6BAA6B5O,EAAa,cAAgB,UAAU,6BAE/E,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,sBAAsBN,EAAa,aAAe,eAAe,GAAI,SAAiB,mBAAA,CAAA,SACpG,IAAE,CAAA,UAAW,gBAAgBA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,2BACrD,UACxBkF,GAAK,CAAA,GAAG,qBAAqB,UAAU,kDAAkD,SAE1F,SAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECJ,EAAA,KAAA,OAAA,CAAK,SAAU2f,EAAc,UAAU,iBACtC,SAAA,CAAC3f,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACxE,EAAAA,IAAA,QAAA,CAAM,QAAQ,OAAO,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,GAAI,SAEhH,WAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,GAAG,OACH,KAAK,OACL,KAAK,OACL,SAAQ,GACR,MAAO6U,EAAS,KAChB,SAAUyJ,EACV,UAAW,sCAAsC5e,EAAa,8DAAgE,oDAAoD,sGAClL,YAAY,sBAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,CAACM,EAAAA,IAAA,QAAA,CAAM,QAAQ,QAAQ,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,GAAI,SAEjH,eAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,GAAG,QACH,KAAK,QACL,KAAK,QACL,SAAQ,GACR,MAAO6U,EAAS,MAChB,SAAUyJ,EACV,UAAW,sCAAsC5e,EAAa,8DAAgE,oDAAoD,sGAClL,YAAY,kBAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,CAACM,EAAAA,IAAA,QAAA,CAAM,QAAQ,WAAW,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,GAAI,SAEpH,UAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,GAAG,WACH,KAAK,WACL,KAAM+yE,EAAe,OAAS,WAC9B,SAAQ,GACR,MAAOl+D,EAAS,SAChB,SAAUyJ,EACV,UAAW,sCAAsC5e,EAAa,8DAAgE,oDAAoD,4GAClL,YAAY,mBAAA,CACd,EACAM,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMgzE,EAAgB,CAACD,CAAY,EAC5C,UAAW,0DAA0DrzE,EAAa,oCAAsC,mCAAmC,GAE1J,SAAAqzE,QAAgBK,GAAS,CAAA,UAAU,SAAU,CAAA,EAAKpzE,EAAAA,IAACqzE,GAAM,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAChF,EACF,EACA7uE,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAxE,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,eAAgB,SAAsB,wBAAA,CAAA,EAC7G8E,EAAAA,KAAC,KAAG,CAAA,UAAU,yBACZ,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAW,2BAA2BsvE,EAAe,OAAS,iBAAmBp0E,EAAa,gBAAkB,eAAe,GAChI,SAAA,CAAAo0E,EAAe,QAAU9zE,EAAA,IAACo0E,GAAQ,CAAA,UAAU,UAAU,EACvDp0E,EAAAA,IAAC,QAAK,SAAqB,uBAAA,CAAA,CAAA,EAC7B,EACAwE,EAAAA,KAAC,KAAG,CAAA,UAAW,2BAA2BsvE,EAAe,UAAY,iBAAmBp0E,EAAa,gBAAkB,eAAe,GACnI,SAAA,CAAAo0E,EAAe,WAAa9zE,EAAA,IAACo0E,GAAQ,CAAA,UAAU,UAAU,EAC1Dp0E,EAAAA,IAAC,QAAK,SAAmC,qCAAA,CAAA,CAAA,EAC3C,EACAwE,EAAAA,KAAC,KAAG,CAAA,UAAW,2BAA2BsvE,EAAe,UAAY,iBAAmBp0E,EAAa,gBAAkB,eAAe,GACnI,SAAA,CAAAo0E,EAAe,WAAa9zE,EAAA,IAACo0E,GAAQ,CAAA,UAAU,UAAU,EAC1Dp0E,EAAAA,IAAC,QAAK,SAAmC,qCAAA,CAAA,CAAA,EAC3C,EACAwE,EAAAA,KAAC,KAAG,CAAA,UAAW,2BAA2BsvE,EAAe,OAAS,iBAAmBp0E,EAAa,gBAAkB,eAAe,GAChI,SAAA,CAAAo0E,EAAe,QAAU9zE,EAAA,IAACo0E,GAAQ,CAAA,UAAU,UAAU,EACvDp0E,EAAAA,IAAC,QAAK,SAAyB,2BAAA,CAAA,CAAA,EACjC,EACAwE,EAAAA,KAAC,KAAG,CAAA,UAAW,2BAA2BsvE,EAAe,QAAU,iBAAmBp0E,EAAa,gBAAkB,eAAe,GACjI,SAAA,CAAAo0E,EAAe,SAAW9zE,EAAA,IAACo0E,GAAQ,CAAA,UAAU,UAAU,EACxDp0E,EAAAA,IAAC,QAAK,SAAyC,2CAAA,CAAA,CAAA,CACjD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACA,EAAAA,IAAA,QAAA,CAAM,QAAQ,kBAAkB,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,GAAI,SAE3H,kBAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,GAAG,kBACH,KAAK,kBACL,KAAMwzE,EAAsB,OAAS,WACrC,SAAQ,GACR,MAAO3+D,EAAS,gBAChB,SAAUyJ,EACV,UAAW,sCAAsC5e,EAAa,8DAAgE,oDAAoD,4GAClL,YAAY,uBAAA,CACd,EACAM,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMyzE,EAAuB,CAACD,CAAmB,EAC1D,UAAW,0DAA0D9zE,EAAa,oCAAsC,mCAAmC,GAE1J,SAAA8zE,QAAuBJ,GAAS,CAAA,UAAU,SAAU,CAAA,EAAKpzE,EAAAA,IAACqzE,GAAM,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CACvF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA7uE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAU8kC,EACV,UAAU,gSAET,WAAY,sBAAwB,gBAAA,CACvC,EAEAtgC,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,qCACb,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAW,mBAAmBN,EAAa,kBAAoB,iBAAiB,EAAI,CAAA,EAC3F,EACCM,EAAA,IAAA,MAAA,CAAI,UAAU,uCACb,SAACA,EAAAA,IAAA,OAAA,CAAK,UAAW,QAAQN,EAAa,4BAA8B,wBAAwB,GAAI,4BAAgB,CAClH,CAAA,CAAA,EACF,EAEA8E,EAAA,KAAC,SAAA,CACC,KAAK,SACL,QAASyvE,EACT,SAAUP,EACV,UAAW,kEAAkEh0E,EAAa,gDAAkD,2CAA2C,6CAA6CA,EAAa,aAAe,eAAe,8IAE/Q,SAAA,CAACM,EAAAA,IAAAszE,GAAA,CAAS,UAAU,SAAU,CAAA,EAC7BI,EAAkB,wBAA0B,QAAA,CAAA,CAAA,CAC/C,CACF,CAAA,CAAA,EACF,SAEC,IAAE,CAAA,UAAW,uBAAuBh0E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,2CAC5C,UACxCkF,GAAK,CAAA,GAAG,qBAAqB,UAAU,sCAAsC,SAE9E,mBAAA,EAAQ,IAAI,MACR,UACHA,GAAK,CAAA,GAAG,qBAAqB,UAAU,sCAAsC,SAE9E,gBAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,EAEJ,CAEJ,CC5TA,MAAMyvE,GAAswBC,IAAe,CACpBhyD,GAAY,EACvB,KAAA,CAAE,KAAAnhB,CAAK,EAAImC,GAAa,EACxB,CAAE,WAAA5D,CAAW,EAAIO,GAAS,EAC1B,CAACgc,EAAMs4D,CAAO,EAAI30E,EAAAA,SAAS,CAAC,EAC5B40E,EAAa,IACb,CAACC,EAAcC,CAAe,EAAI90E,EAAAA,SAAS,EAAK,EAChD+0E,EAAYpuE,EAAAA,QAAQ,IAAMquE,GAAA,EAAc,QAAQ,EAAG,EAAE,EACrD,CAACC,EAAkBC,CAAmB,EAAIl1E,EAAAA,SAAS,kBAAkB,EAErEm1E,EAAiBxuE,EAAA,QAAQ,IAC7BouE,EAAU,IAAgBznE,IAAA,CACxB,MAAOA,EAAQ,MACf,MACG1I,EAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAACg1E,GAAA,CACC,YAAa9nE,EAAQ,MACrB,IAAG,GACH,MAAO,CACL,MAAO,QACP,OAAQ,OAAA,CACV,CACF,EACCA,EAAQ,KAAA,EACX,EAEF,YAAaA,EAAQ,KAAA,EACrB,EACF,CAACynE,CAAS,CACZ,EAEMM,EAAe,CACnB,QAAUC,IAAc,CACtB,GAAGA,EACH,QAAS,MACT,YAAax1E,EAAa,UAAY,UACtC,gBAAiBA,EAAa,UAAY,QAC1C,UAAW,CACT,YAAa,SAAA,CACf,GAEF,OAAQ,CAACw1E,EAAUC,KAAW,CAC5B,GAAGD,EACH,gBAAiBC,EAAM,WACnB,UACAA,EAAM,UACJz1E,EAAa,UAAY,UACzBA,EAAa,UAAY,QAC/B,MAAOy1E,EAAM,WACT,QACAz1E,EAAa,UAAY,UAC7B,UAAW,CACT,gBAAiBy1E,EAAM,WAAa,UAAYz1E,EAAa,UAAY,SAAA,CAC3E,GAEF,KAAOw1E,IAAc,CACnB,GAAGA,EACH,gBAAiBx1E,EAAa,UAAY,OAAA,GAE5C,YAAcw1E,IAAc,CAC1B,GAAGA,EACH,MAAOx1E,EAAa,UAAY,SAAA,GAElC,MAAQw1E,IAAc,CACpB,GAAGA,EACH,MAAOx1E,EAAa,UAAY,SAClC,EACF,EAEM,CAAC01E,EAAWC,CAAY,EAAIz1E,WAAS,CACzC,UAAW,GACX,YAAa,GACb,aAAcuB,GAAM,OAAS,GAC7B,YAAa,GACb,QAAS,CACP,KAAM,GACN,KAAM,GACN,KAAM,EACR,EACA,KAAM,GACN,WAAY,GACZ,eAAgB,OAChB,iBAAkB,UAClB,cAAe,EAAA,CAChB,EAEKm0E,EAAqB9tE,GAAM,CAC/B,KAAM,CAAE,KAAA2oB,EAAM,MAAApwB,CAAM,EAAIyH,EAAE,OAC1B6tE,EAAsB/tE,IAAA,CACpB,GAAGA,EACH,CAAC6oB,CAAI,EAAGpwB,CAAA,EACR,CACJ,EAEMw1E,EAAmB,IAGhB,QADW,KAAK,MAAM,KAAK,SAAW,GAAM,EAC1B,SAAA,EAAW,SAAS,EAAG,GAAG,CAAC,GAGhDpxD,EAAe,MAAO3c,GAAM,CAChCA,EAAE,eAAe,EACjB+sE,EAAQ,CAAC,CACX,EAEMiB,EAAuB,MAAOC,GAAc,CAChDf,EAAgB,EAAI,EAChB,GAAA,CACF,GAAI,CAACvzE,EAAM,CACTiC,EAAM,MAAM,oBAAoB,EAChC,MAAA,CAIF,MAAM+F,EAAWosE,EAAiB,EAGlC,MAAMvyE,GAAOjB,GAAIrB,GAAI,UAAWyI,CAAQ,EAAG,CACzC,SAAAA,EACA,OAAQhI,EAAK,IACb,GAAGi0E,EACH,OAAQ,SACR,UAAWh/D,GAAgB,EAC3B,WAAY,CACV,WAAY,EACZ,YAAa,EACb,OAAQ,CACV,EACA,QAAS,CACP,UAAW,EACX,QAAS,CACX,EACA,iBAAkBq/D,CAAA,CACnB,EAGD,MAAM3kE,GAAU/O,GAAIrB,GAAI,QAASS,EAAK,GAAG,EAAG,CAC1C,SAAU,GACV,SAAAgI,EACA,UAAWiN,GAAgB,CAAA,CAC5B,GAGe,MAAMnU,GAAOF,GAAIrB,GAAI,QAASS,EAAK,GAAG,CAAC,GAC3C,WACV,OAAO,SAAS,KAAO,0BAGzBiC,EAAM,QAAQ,6BAA6B,QACpCR,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5CQ,EAAM,MAAM,2CAA2C,CAAA,QACvD,CACAsxE,EAAgB,EAAK,CAAA,CAEzB,EAEMgB,EAAoB,IAAM,CACd,OAAO,YAAY,MAAM,CACvC,IAAK,mDACL,MAAOv0E,GAAM,OAASi0E,EAAU,aAChC,OAAQZ,EAAa,IACrB,SAAU,MACV,SAAW1gE,GAAa0hE,EAAqB1hE,EAAS,SAAS,EAC/D,QAAS,IAAM,CACb1Q,EAAM,MAAM,mBAAmB,CAAA,CACjC,CACD,EACO,WAAW,CACrB,EAEAtD,EAAAA,UAAU,IAAM,CAER,MAAA61E,EAAS,SAAS,cAAc,QAAQ,EAC9C,OAAAA,EAAO,IAAM,sCACbA,EAAO,MAAQ,GACN,SAAA,KAAK,YAAYA,CAAM,EAEzB,IAAM,CACF,SAAA,KAAK,YAAYA,CAAM,CAClC,CACF,EAAG,EAAE,EAEC,MAAAC,EAAuBC,GAAmB,CAC9CR,EAAsB/tE,IAAA,CACpB,GAAGA,EACH,QAAS,CACP,KAAMuuE,EAAe,YACrB,KAAMA,EAAe,MACrB,KAAM,uBAAuBA,EAAe,MAAM,YAAa,CAAA,MAAA,CACjE,EACA,EAGF,MAAMC,EAAczB,GAAoBwB,EAAe,KAAK,GAAK,OAC7Cf,EAAA,GAAGgB,CAAW,cAAc,CAClD,EAGE,OAAAtxE,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAW,qBAAqB5O,EAAa,cAAgB,EAAE,GAG/D,SAAA,CAAAM,EAAAA,IAAC,OAAI,UAAU,OACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,6CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAW,qBAAqByX,GAAQ,EAAI,iBAAmBvc,EAAa,gBAAkB,eAAe,GAChH,SAAA,CAACM,EAAA,IAAA,MAAA,CAAI,UAAW,iCACdic,GAAQ,EACJ,kCACAvc,EAAa,kBAAoB,iBACvC,iFAAkF,SAElF,IAAA,QACC,OAAA,CAAK,UAAU,OAAO,SAAW,aAAA,CAAA,CAAA,EACpC,QACC,MAAI,CAAA,UAAW,cAAcA,EAAa,cAAgB,aAAa,GACtE,SAAAM,EAAA,IAAC,MAAA,CACC,UAAU,kDACV,MAAO,CAAE,MAAOic,EAAO,EAAI,OAAS,IAAK,CAAA,CAAA,EAE7C,EACCzX,EAAAA,KAAA,MAAI,CAAA,UAAW,qBAAqByX,GAAQ,EAAI,iBAAmBvc,EAAa,gBAAkB,eAAe,GAChH,SAAA,CAACM,EAAA,IAAA,MAAA,CAAI,UAAW,iCACdic,GAAQ,EACJ,kCACAvc,EAAa,kBAAoB,iBACvC,iFAAkF,SAElF,IAAA,QACC,OAAA,CAAK,UAAU,OAAO,SAAU,YAAA,CAAA,CAAA,EACnC,QACC,MAAI,CAAA,UAAW,cAAcA,EAAa,cAAgB,aAAa,GACtE,SAAAM,EAAA,IAAC,MAAA,CACC,UAAU,kDACV,MAAO,CAAE,MAAOic,EAAO,EAAI,OAAS,IAAK,CAAA,CAAA,EAE7C,EACCzX,EAAAA,KAAA,MAAI,CAAA,UAAW,qBAAqByX,GAAQ,EAAI,iBAAmBvc,EAAa,gBAAkB,eAAe,GAChH,SAAA,CAACM,EAAA,IAAA,MAAA,CAAI,UAAW,iCACdic,GAAQ,EACJ,kCACAvc,EAAa,kBAAoB,iBACvC,iFAAkF,SAElF,IAAA,QACC,OAAA,CAAK,UAAU,OAAO,SAAO,SAAA,CAAA,CAAA,CAChC,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAGCuc,IAAS,GACRzX,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAW,GAAG5O,EAAa,cAAgB,UAAU,6BAErD,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAACxE,EAAAA,IAAAqS,GAAA,CAAQ,UAAU,wCAAwC,EAC3DrS,EAAAA,IAAC,MAAG,UAAW,sBAAsBN,EAAa,gBAAkB,eAAe,QAAS,SAE5F,iBAAA,CAAA,EACAM,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAEnE,4DAAA,CAAA,CAAA,EACF,SAEC,MAAI,CAAA,UAAW,GAAGA,EAAa,iBAAmB,YAAY,uBAC7D,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAE/F,kBAAA,CAAA,EACCM,EAAAA,IAAA,KAAG,CAAA,UAAU,YACX,SAAA,CACC,0BACA,4BACA,4BACA,gCACA,6BACA,EAAA,IAAI,CAAC+1E,EAAS7rE,IACb1F,EAAAA,KAAA,KAAe,CAAA,UAAW,qBAAqB9E,EAAa,gBAAkB,eAAe,GAC5F,SAAA,CAACM,EAAAA,IAAAg2E,GAAA,CAAc,UAAU,8BAA8B,EACtDD,CAAA,CAFM,EAAA7rE,CAGT,CACD,CACH,CAAA,CAAA,EACF,EAEClK,EAAA,IAAA,MAAI,CAAA,UAAU,mBACb,SAAAwE,EAAAA,KAAC,MAAI,CAAA,UAAW,sBAAsB9E,EAAa,gBAAkB,eAAe,QAAS,SAAA,CAAA,OACtF80E,EAAW,QAAQ,CAAC,EACzBx0E,EAAAA,IAAC,QAAK,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,QAAS,SAE/F,cAAA,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAEAM,EAAA,IAAC,SAAA,CACC,QAAS,IAAMu0E,EAAQ,CAAC,EACxB,UAAU,oHACX,SAAA,qBAAA,CAED,EAECv0E,EAAA,IAAA,MAAI,CAAA,UAAU,mBACb,SAAAwE,EAAAA,KAAC,MAAI,CAAA,UAAW,4CAA4C9E,EAAa,gBAAkB,eAAe,GACxG,SAAA,CAACM,EAAAA,IAAA,QAAK,SAAyB,4BAAA,EAC/BA,EAAA,IAAC,MAAA,CACC,IAAI,gBACJ,IAAI,WACJ,UAAU,gCAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,EAIDic,IAAS,GACRzX,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAW,GAAG5O,EAAa,cAAgB,UAAU,6BAErD,SAAA,CAAA8E,EAAA,KAAC,SAAA,CACC,QAAS,IAAM+vE,EAAQ,CAAC,EACxB,UAAW,qBACT70E,EACI,qCACA,oCACN,0BAEA,SAAA,CAACM,EAAAA,IAAAi2E,GAAA,CAAY,UAAU,eAAe,EAAE,MAAA,CAAA,CAE1C,EAECzxE,EAAAA,KAAA,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,sBAAsBN,EAAa,gBAAkB,eAAe,GAAI,SAAiB,mBAAA,CAAA,EACxGM,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAA2B,6BAAA,CAAA,CAAA,EAChG,SAEC,OAAA,CAAK,SAAUykB,EAAc,UAAU,YAEtC,SAAA,CAAC3f,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAAa,eAAA,CAAA,SAEtG,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,cAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,YACL,MAAOo1E,EAAU,UACjB,SAAUE,EACV,SAAQ,GACR,UAAW,oIACT51E,EACI,iEACA,oDACN,GACA,YAAY,iBAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,aAAA,CAAA,EACAM,EAAA,IAAC,WAAA,CACC,KAAK,cACL,MAAOo1E,EAAU,YACjB,SAAUE,EACV,KAAM,EACN,UAAW,oIACT51E,EACI,iEACA,oDACN,GACA,YAAY,iCAAA,CAAA,CACd,CACF,CAAA,CAAA,EACF,EAGC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAAmB,qBAAA,CAAA,EAE5G8E,EAAAA,KAAA,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,SAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,QACL,KAAK,eACL,MAAOo1E,EAAU,aACjB,SAAUE,EACV,SAAQ,GACR,UAAW,oIACT51E,EACI,iEACA,oDACN,GACA,YAAY,uBAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,gBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,MACL,KAAK,cACL,MAAOo1E,EAAU,YACjB,SAAUE,EACV,SAAQ,GACR,UAAW,oIACT51E,EACI,iEACA,oDACN,GACA,YAAam1E,CAAA,CAAA,CACf,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGCrwE,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAAQ,UAAA,CAAA,EAEjG8E,EAAAA,KAAA,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,WAAA,CAAA,EACAM,EAAA,IAACk2E,GAAA,CACC,QAASnB,EACT,OAAQE,EACR,SAAUW,EACV,SAAQ,GACR,YAAY,SACZ,UAAU,iBACV,MAAOR,EAAU,QAAQ,KAAOL,EAAe,KAAe/7C,GAAAA,EAAO,QAAUo8C,EAAU,QAAQ,IAAI,EAAI,KACzG,WAAY,CACV,OAAQ,CAAC,CAAE,SAAA31E,EAAU,GAAGogC,KACrB7/B,EAAAA,IAAAm2E,GAAW,OAAX,CAAmB,GAAGt2C,EACpB,SAAAA,EAAM,KAAK,KACd,CAAA,CAAA,CAEJ,CAAA,CACF,EACF,SAEC,MACC,CAAA,SAAA,CAAA7/B,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,QAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,OACL,MAAOo1E,EAAU,KACjB,SAAUE,EACV,SAAQ,GACR,UAAW,oIACT51E,EACI,iEACA,oDACN,GACA,YAAY,WAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,eAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,aACL,MAAOo1E,EAAU,WACjB,SAAUE,EACV,SAAQ,GACR,UAAW,oIACT51E,EACI,iEACA,oDACN,GACA,YAAY,aAAA,CAAA,CACd,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAAgB,kBAAA,CAAA,SAEzG,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,qBAAA,CAAA,EACCM,EAAAA,IAAA,MAAI,CAAA,UAAU,8BACZ,SAAA,CACC,CAAE,GAAI,UAAW,KAAM,UAAW,KAAM,cAAe,EACvD,CAAE,GAAI,WAAY,KAAM,mBAAoB,KAAM,oBAAqB,CAAA,EACvE,IACAgf,GAAAxa,EAAA,KAAC,SAAA,CAEC,KAAK,SACL,QAAS,IAAM8wE,EAAkB,CAAE,OAAQ,CAAE,KAAM,mBAAoB,MAAOt2D,EAAQ,EAAG,EAAG,EAC5F,UAAW,kFACTo2D,EAAU,mBAAqBp2D,EAAQ,GACnCtf,EACE,kCACA,8BACFA,EACE,qDACA,wCACR,GAEA,SAAA,CAAAM,EAAA,IAAC,MAAA,CACC,IAAKgf,EAAQ,KACb,IAAK,GAAGA,EAAQ,IAAI,QACpB,UAAU,SAAA,CACZ,EACChf,EAAAA,IAAA,QAAK,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAK,SAAAsf,EAAQ,IAAK,CAAA,CAAA,CAAA,EAlB3FA,EAAQ,EAoBhB,CAAA,EACH,EACCxa,EAAAA,KAAA,MAAI,CAAA,UAAU,eACb,SAAA,CAAAxE,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAyC,2CAAA,CAAA,QAC3G,IAAA,CAAE,UAAU,kCAAkC,SAE/C,0DAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,2BAAA,CAAA,EACC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,KAAK,iBACL,MAAO4wE,EAAU,eACjB,SAAUE,EACV,SAAQ,GACR,UAAW,0JACT51E,EACI,4CACA,+BACN,GAEA,SAAA,OAAC,SAAA,CAAO,MAAM,OAAO,SAAe,kBAAA,QACnC,SAAA,CAAO,MAAM,OAAO,SAAa,eAAA,CAAA,CAAA,CAAA,CACpC,EACCM,EAAAA,IAAA,MAAI,CAAA,UAAU,qDACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAK,IAAIo1E,EAAU,eAAe,YAAa,CAAA,OAC/C,IAAKA,EAAU,eACf,UAAU,SAAA,CAAA,CAEd,CAAA,CAAA,EACF,EACC5wE,EAAAA,KAAA,MAAI,CAAA,UAAU,eACb,SAAA,CAAAxE,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAqC,uCAAA,CAAA,QACvG,IAAA,CAAE,UAAU,kCAAkC,SAE/C,0DAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECM,EAAAA,IAAA,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAW,qKACTN,EAAa,8CAAgD,6CAC/D,GACA,SAAU+0E,EAET,WAAe,gBAAkB,0BAAA,CAAA,CAEtC,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAIDx4D,IAAS,GACRzX,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAW,GAAG5O,EAAa,cAAgB,UAAU,6BAErD,SAAA,CAAA8E,EAAA,KAAC,SAAA,CACC,QAAS,IAAM+vE,EAAQ,CAAC,EACxB,UAAW,qBACT70E,EACI,qCACA,oCACN,0BAEA,SAAA,CAACM,EAAAA,IAAAi2E,GAAA,CAAY,UAAU,eAAe,EAAE,oBAAA,CAAA,CAE1C,EAECzxE,EAAAA,KAAA,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,sBAAsBN,EAAa,gBAAkB,eAAe,GAAI,SAAgB,kBAAA,CAAA,EACvGM,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAmD,qDAAA,CAAA,CAAA,EACxH,EAEC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,OAAI,UAAW,GAAG9E,EAAa,cAAgB,YAAY,kBAC1D,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAW,aAAA,CAAA,SAChF,OAAK,CAAA,UAAW,iBAAiBA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,OAAK80E,CAAA,CAAW,CAAA,CAAA,EACtG,EACCx0E,EAAA,IAAA,MAAI,CAAA,UAAW,YAAYN,EAAa,kBAAoB,iBAAiB,QAC5E,SAAC8E,OAAA,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAI,SAAK,OAAA,CAAA,SACtF,OAAK,CAAA,UAAW,qBAAqBA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,OAAK80E,CAAA,CAAW,CAAA,CAAA,CAAA,CAC1G,CACF,CAAA,CAAA,EACF,EAEAx0E,EAAA,IAAC,SAAA,CACC,QAAS01E,EACT,UAAW,qKACTh2E,EAAa,8CAAgD,6CAC/D,GACA,SAAU+0E,EAET,WAAe,gBAAkB,SAAA,CACpC,EAECz0E,EAAA,IAAA,MAAI,CAAA,UAAU,mBACb,SAAAwE,EAAAA,KAAC,MAAI,CAAA,UAAW,4CAA4C9E,EAAa,gBAAkB,eAAe,GACxG,SAAA,CAACM,EAAAA,IAAA,QAAK,SAAyB,4BAAA,EAC/BA,EAAA,IAAC,MAAA,CACC,IAAI,gBACJ,IAAI,WACJ,UAAU,gCAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,CACF,CAAA,CAEJ,CAEJ,CCn4BwB,SAAAo2E,GAAe,CAAE,SAAA32E,GAAY,CACnD,KAAM,CAAE,KAAA0B,EAAM,QAAAE,CAAQ,EAAIiC,GAAa,EAEvC,OAAIjC,EAEArB,EAAAA,IAAC,MAAI,CAAA,UAAU,6DACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CACP,MAAO,CAAC,EAAG,IAAK,CAAC,EACjB,QAAS,CAAC,EAAG,GAAK,CAAC,CACrB,EACA,WAAY,CACV,SAAU,EACV,OAAQ,IACR,KAAM,WACR,EACA,UAAU,uEAAA,CAAA,EAEd,EAICnN,EAIE1B,EAHGO,EAAAA,IAAAqK,GAAA,CAAS,GAAG,SAAS,QAAO,GAAC,CAIzC,CCnBA,MAAMgsE,GAAmB,IAAM,CAC7B,KAAM,CAAE,OAAAC,EAAQ,KAAAn1E,EAAM,UAAAM,CAAA,EAAc6B,GAAa,EAC3C,CAAE,WAAA5D,EAAY,YAAAmE,CAAY,EAAI5D,GAAS,EAC5BqiB,GAAY,EAC7B,MAAM9e,EAAWC,GAAY,EACvB,CAAC8yE,EAAkBC,CAAmB,EAAI52E,EAAAA,SAAS,EAAK,EACxD,CAAC4J,EAAQitE,CAAS,EAAI72E,EAAAA,SAAS,IAAI,EACnC,CAAC82E,EAAgBC,CAAiB,EAAI/2E,EAAAA,SAAS,CAAC,EAEtDE,EAAAA,UAAU,IAAM,CACVqB,GAAM,WACY,SAAY,CACxB,MAAA6L,EAAY,MAAM/K,GAAOF,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,CAAC,EAC5D,GAAA6L,EAAU,SAAU,CAChB,MAAA3F,EAAa2F,EAAU,KAAK,EACxBypE,EAAA,CACR,GAAGpvE,EACH,WAAYA,EAAW,qBAAuB,UAAA,CAC/C,CAAA,CAEL,GACY,CACd,EACC,CAAClG,CAAI,CAAC,EAETrB,EAAAA,UAAU,IAAM,CACd,GAAI,CAACqB,EAAM,OAGX,MAAMmB,EAAIC,GACRC,GAAW9B,GAAI,eAAe,EAC9B+B,GAAM,eAAgB,iBAAkBtB,EAAK,SAAWA,EAAK,SAAWA,EAAK,GAAG,CAClF,EAEMQ,EAAc4U,GAAWjU,EAAIkU,GAAa,CAC9C,MAAMogE,EAAcpgE,EAAS,KAAK,OAAO,CAACqgE,EAAO90E,IAAQ,CACjD,MAAAuG,EAAOvG,EAAI,KAAK,EAChBM,EAASlB,EAAK,SAAWA,EAAK,SAAWA,EAAK,IACpD,OAAO01E,GAASvuE,EAAK,cAAcjG,CAAM,GAAK,IAC7C,CAAC,EACJs0E,EAAkBC,CAAW,CAAA,CAC9B,EAED,MAAO,IAAMj1E,EAAY,CAAA,EACxB,CAACR,CAAI,CAAC,EAET,MAAM21E,EAAe,SAAY,CAC3B,GAAA,CACF,MAAMR,EAAO,OACC,CACdlzE,EAAM,MAAM,kBAAkB,CAAA,CAElC,EAOM2zE,EAAgB,CACpB,CAAE,GAAI,eAAgB,KAAMC,GAAW,MAAO,SAAU,MAAO,EAAK,EACpE,CAAE,GAAI,oBAAqB,KAAMC,GAAQ,MAAO,OAAQ,MAAOx1E,CAAU,EACzE,CAAE,GAAI,sBAAuB,KAAMy1E,GAAW,MAAO,WAAY,EACjE,CAAE,GAAI,0BAA2B,KAAM5N,GAAW,MAAO,YAAa,EACtE,CAAE,GAAI,qBAAsB,KAAM6N,GAAiB,MAAO,QAAS,MAAOT,CAAe,EACzF,CAAE,GAAI,wBAAyB,KAAM5gD,GAAO,MAAO,UAAW,CAChE,EAEMshD,EAAiB,CACrB,CAAE,GAAI,yBAA0B,KAAMJ,GAAW,MAAO,WAAY,EACpE,CAAE,GAAI,wBAAyB,KAAM3kE,GAAS,MAAO,aAAc,EACnE,CAAE,GAAI,2BAA4B,KAAMglE,GAAY,MAAO,aAAc,EACzE,CAAE,GAAI,qBAAsB,KAAMC,GAAgB,MAAO,OAAQ,EACjE,CAAE,GAAI,+BAAgC,KAAM9kE,GAAW,MAAO,QAAS,EACvE,CAAE,GAAI,uBAAwB,KAAM82D,GAAW,MAAO,gBAAiB,EACvE,CAAE,GAAI,4BAA6B,KAAM6N,GAAiB,MAAO,QAAS,MAAOT,CAAe,EAChG,CAAE,GAAI,wBAAyB,KAAM5gD,GAAO,MAAO,UAAW,CAChE,EAGMyhD,EAAiB,CACrB,CAAE,GAAI,qBAAsB,KAAM3hD,GAAU,MAAO,oBAAqB,CAC1E,EAEM5xB,EAAW,CAAC,GAAI7C,GAAM,SAAWi2E,EAAiBL,EAAgB,GAAGQ,CAAc,EAEzF,cACG,MAAI,CAAA,UAAW,gBAAgB73E,EAAa,cAAgB,UAAU,GACrE,SAAA,CAAAM,EAAA,IAAC2sE,GAAA,CACC,SAAS,YACT,aAAc,CACZ,SAAU,IACV,MAAO,CACL,WAAYjtE,EAAa,UAAY,OACrC,MAAO,MACT,EACA,QAAS,CACP,UAAW,CACT,QAAS,UACT,UAAW,MAAA,CACb,CACF,CACF,CACF,EAGCM,MAAA,MAAA,CAAI,UAAW,8BAA8BN,EAAa,8BAAgC,0BAA0B,2BACnH,SAAAM,EAAA,IAAC,OAAI,UAAU,cACb,SAACwE,OAAA,MAAA,CAAI,UAAU,yCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACZ,SAAA,CACCrD,GAAAnB,EAAA,IAAC,SAAA,CACC,QAAS,IAAMw2E,EAAoB,CAACD,CAAgB,EACpD,UAAW,iBAAiB72E,EAAa,qCAAuC,oCAAoC,QAEnH,SAAA62E,QACEr2D,GAAI,CAAA,UAAU,SAAU,CAAA,EAEzBlgB,EAAAA,IAACw3E,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAEhC,EAEDhzE,EAAA,KAAAI,GAAA,CAAK,GAAG,eAAe,UAAU,0BAChC,SAAA,CAAC5E,EAAAA,IAAAqS,GAAA,CAAQ,UAAU,wBAAyB,CAAA,EAC3CrS,EAAA,IAAA,OAAA,CAAK,UAAU,oDAAoD,SAEpE,YAAA,CAAA,CAAA,EACF,EACAA,EAAAA,IAAC,OAAI,UAAU,+DACb,eAAC,OAAK,CAAA,UAAU,mCAAmC,SAAA,yCAAuC,CAAA,CAC5F,CAAA,CAAA,EACF,EAGAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,wCACV,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,MAAO,EAAI,EAGzB,SAAA,CAAAtO,EAAA,IAAC,SAAA,CACC,QAAS6D,EACT,UAAW,oCACTnE,EACI,gDACA,6CACN,GACA,aAAW,eAEV,SAAAA,QAAc+E,GAAM,CAAA,UAAU,SAAU,CAAA,EAAKzE,EAAAA,IAAC0E,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAC5E,EAECvD,EACCnB,EAAA,IAAA+S,WAAA,CACG,SAAC,CAAA5R,EAAK,UACLnB,EAAA,IAAC4E,GAAA,CACC,GAAG,6BACH,UAAU,oKACX,SAAA,iBAAA,CAAA,CAIL,CAAA,EAECJ,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAxE,EAAA,IAAC4E,GAAA,CACC,GAAG,qBACH,UAAW,qBAAqBlF,EAAa,qCAAuC,qCAAqC,0CAC1H,SAAA,OAAA,CAED,EACAM,EAAA,IAAC4E,GAAA,CACC,GAAG,sBACH,UAAU,6HACX,SAAA,SAAA,CAAA,CAED,EACF,EAEFJ,EAAA,KAACI,GAAA,CACC,GAAG,IACH,UAAU,sMAEV,SAAA,CAAC5E,EAAAA,IAAAi2E,GAAA,CAAY,UAAU,oFAAqF,CAAA,EAC3Gj2E,EAAA,IAAA,OAAA,CAAK,UAAU,+BAA+B,SAAqB,wBAAA,EACnEA,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAI,MAAA,CAAA,CAAA,CAAA,CAAA,CAC9C,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,EACF,EAGCA,MAAAinC,GAAA,CACE,SAAQ9lC,GAAAo1E,GAEL/xE,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAA/S,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,EAAI,EACxB,KAAM,CAAE,QAAS,CAAE,EACnB,UAAU,4DACV,QAAS,IAAMkoE,EAAoB,EAAK,CAAA,CAC1C,EACAx2E,EAAA,IAACsO,EAAO,MAAP,CACC,UAAW,iDAAiD5O,EAAa,cAAgB,UAAU,4CACnG,QAAS,CAAE,EAAG,IAAK,EACnB,QAAS,CAAE,EAAG,CAAE,EAChB,KAAM,CAAE,EAAG,IAAK,EAChB,WAAY,CAAE,KAAM,SAAU,UAAW,GAAI,EAE7C,SAAA8E,EAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAW,gBAAgBN,EAAa,kBAAoB,iBAAiB,GAChF,gBAAC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAI,SAAQ,UAAA,CAAA,EACnFM,EAAAA,IAAC,KAAE,UAAW,eAAeN,EAAa,aAAe,eAAe,WAAa,SAAAyB,EAAK,IAAK,CAAA,EAC/FqD,EAAAA,KAAC,MAAI,CAAA,UAAW,sEACdrD,EAAK,SACD,4BACAzB,EAAa,4BAA8B,2BACjD,GACE,SAAA,CAACM,EAAAA,IAAAy3E,GAAA,CAAO,UAAU,SAAU,CAAA,EAC3Bz3E,EAAA,IAAA,OAAA,CAAM,SAAKmB,EAAA,SAAW,iBAAmB,gBAAgB,EACzDA,EAAK,UAAYqI,GAAQ,YACvBxJ,EAAA,IAAAoO,GAAA,CAAsB,UAAU,wBAAyB,CAAA,CAAA,CAE9D,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAECpO,MAAA,MAAA,CAAI,UAAU,aACb,SAACA,EAAA,IAAA,KAAA,CAAG,UAAU,YACX,SAASgE,EAAA,IAAKW,SACZ,KACC,CAAA,SAAAH,EAAA,KAACkzE,GAAA,CACC,GAAI/yE,EAAK,GACT,IAAKA,EAAK,MACV,QAAS,IAAM6xE,EAAoB,EAAK,EACxC,UAAW,CAAC,CAAE,SAAA1yE,CAAS,IACrB,kEACEA,EACI,0BACApE,EACE,uDACA,qDACR,GAGF,SAAA,CAAAM,EAAAA,IAAC2E,EAAK,KAAL,CAAU,UAAU,SAAU,CAAA,EAC/B3E,EAAAA,IAAC,OAAM,CAAA,SAAA2E,EAAK,KAAM,CAAA,EACjBA,EAAK,MAAQ,GACZ3E,EAAAA,IAAC,QAAK,UAAW,sDACfwD,EAAS,WAAamB,EAAK,GACvB,0BACA,yBACN,GACG,WAAK,KACR,CAAA,CAAA,CAAA,CAxBG,CAAA,EAAAA,EAAK,EA2Bd,CACD,EACH,CACF,CAAA,QAEC,MAAI,CAAA,UAAW,gBAAgBjF,EAAa,kBAAoB,iBAAiB,GAChF,SAAA8E,EAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACbgyE,EAAoB,EAAK,EACZM,EAAA,CACf,EACA,UAAW,4CACTp3E,EACI,uDACA,qDACN,gCAEA,SAAA,CAACM,EAAAA,IAAA23E,GAAA,CAAS,UAAU,SAAU,CAAA,EAC9B33E,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,CAAA,CAAA,CAAA,CAEhB,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,CAAA,EAGCmB,GACCnB,EAAA,IAACsO,EAAO,MAAP,CACC,UAAW,iDAAiD5O,EAAa,cAAgB,UAAU,kCACnG,QAAS,CAAE,EAAG,GAAI,EAClB,QAAS,CAAE,EAAG,CAAE,EAChB,WAAY,CAAE,KAAM,SAAU,UAAW,GAAI,EAE7C,SAAA8E,EAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,MACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAAAxE,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAI,SAAQ,UAAA,CAAA,EACnFM,EAAAA,IAAC,KAAE,UAAW,eAAeN,EAAa,aAAe,eAAe,GAAK,SAAAyB,EAAK,IAAK,CAAA,EACvFqD,EAAAA,KAAC,MAAI,CAAA,UAAW,sEACdrD,EAAK,SACD,4BACAzB,EAAa,4BAA8B,2BACjD,GACE,SAAA,CAACM,EAAAA,IAAAy3E,GAAA,CAAO,UAAU,SAAU,CAAA,EAC3Bz3E,EAAA,IAAA,OAAA,CAAM,SAAKmB,EAAA,SAAW,iBAAmB,gBAAgB,EACzDA,EAAK,UAAYqI,GAAQ,YACvBxJ,EAAA,IAAAoO,GAAA,CAAsB,UAAU,wBAAyB,CAAA,CAAA,CAE9D,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAECpO,MAAA,MAAA,CAAI,UAAU,cACb,SAACA,EAAA,IAAA,KAAA,CAAG,UAAU,YACX,SAASgE,EAAA,IAAKW,SACZ,KACC,CAAA,SAAAH,EAAA,KAACkzE,GAAA,CACC,GAAI/yE,EAAK,GACT,IAAKA,EAAK,MACV,UAAW,CAAC,CAAE,SAAAb,CAAS,IACrB,kEACEA,EACI,0BACApE,EACE,uDACA,qDACR,GAGF,SAAA,CAAAM,EAAAA,IAAC2E,EAAK,KAAL,CAAU,UAAU,SAAU,CAAA,EAC/B3E,EAAAA,IAAC,OAAM,CAAA,SAAA2E,EAAK,KAAM,CAAA,EACjBA,EAAK,MAAQ,GACZ3E,EAAAA,IAAC,QAAK,UAAW,sDACfwD,EAAS,WAAamB,EAAK,GACvB,0BACA,yBACN,GACG,WAAK,KACR,CAAA,CAAA,CAAA,CAvBG,CAAA,EAAAA,EAAK,EA0Bd,CACD,EACH,CACF,CAAA,QAEC,MAAI,CAAA,UAAW,gBAAgBjF,EAAa,kBAAoB,iBAAiB,GAChF,SAAA8E,EAAA,KAAC,SAAA,CACC,QAASsyE,EACT,UAAW,4CACTp3E,EACI,uDACA,qDACN,gCAEA,SAAA,CAACM,EAAAA,IAAA23E,GAAA,CAAS,UAAU,SAAU,CAAA,EAC9B33E,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,CAAA,CAAA,CAAA,CAEhB,CAAA,CAAA,CACF,CAAA,CAAA,CACF,QAID,OAAK,CAAA,UAAW,sBAAsBmB,EAAO,WAAa,EAAE,IAAIzB,EAAa,cAAgB,YAAY,GACxG,eAAC,MAAI,CAAA,UAAU,SACb,SAACM,EAAAA,IAAA6E,GAAA,EAAO,EACV,CACF,CAAA,EAGC7E,MAAA,SAAA,CAAO,UAAW,GAAGN,EAAa,8BAAgC,0BAA0B,kBAAkByB,EAAO,WAAa,EAAE,GACnI,SAACqD,EAAAA,KAAA,MAAA,CAAI,UAAU,sFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAAqS,GAAA,CAAQ,UAAU,wBAAyB,CAAA,EAC5CrS,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,eAAgB,SAAU,YAAA,CAAA,CAAA,EAC9F,EACAM,EAAAA,IAAC,MAAI,CAAA,UAAU,0BACb,SAAAwE,EAAA,KAACI,GAAA,CACC,GAAG,qBACH,UAAW,GAAGlF,EAAa,qCAAuC,oCAAoC,qDAEtG,SAAA,CAACM,EAAAA,IAAA41B,GAAA,CAAS,UAAU,SAAU,CAAA,EAAE,oBAAA,CAAA,CAAA,EAGpC,SACC,MAAI,CAAA,UAAW,WAAWl2B,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,KACxE,IAAI,KAAK,EAAE,YAAY,EAAE,mCAAA,CAC9B,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAEF,CAEJ,ECrZMk4E,GAAuB,CAAC,CAAE,OAAAl8D,EAAQ,QAAAC,EAAS,SAAAskD,EAAU,MAAAnzD,KAAY,CACrE,KAAM,CAAC+qE,EAAeC,CAAgB,EAAIl4E,EAAAA,SAAS,EAAK,EAClD,CAACm4E,EAAiBC,CAAkB,EAAIp4E,EAAAA,SAAS,EAAK,EAEtDq4E,EAAe,SAAY,CAC/B,GAAIJ,EAAe,CACjBG,EAAmB,EAAI,EACnB,GAAA,CACF,MAAM/X,EAAS,CAAA,QACf,CACA+X,EAAmB,EAAK,EAChBr8D,EAAA,CAAA,CACV,CAEJ,EAGE,OAAA3b,EAAA,IAACinC,GACE,CAAA,SAAAvrB,GAGGlX,OAAAuO,EAAAA,SAAA,CAAA,SAAA,CAAA/S,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,EAAI,EACxB,KAAM,CAAE,QAAS,CAAE,EACnB,UAAU,8BACV,QAASqN,CAAA,CACX,EAGA3b,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,EAAG,EAAG,EAAG,EAC1B,UAAU,0DAEV,SAAA9J,EAAA,KAAC,MAAI,CAAA,UAAU,6EAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iDACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,kCAAkC,SAA6B,gCAAA,EAC7EA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,SAAUo8D,EACV,UAAU,uHAEV,SAAA/3E,EAAAA,IAACkgB,GAAI,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC3B,EACF,EAGAlgB,EAAAA,IAAC,OAAI,UAAU,gBACZ,WACEwE,EAAAA,KAAA,MAAA,CAAI,UAAU,2DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACxE,EAAAA,IAAAogB,GAAA,CAAS,UAAU,0BAA2B,CAAA,EAC/CpgB,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,wDACV,QAAS,CACP,MAAO,CAAC,EAAG,IAAK,CAAC,EACjB,QAAS,CAAC,EAAG,GAAK,CAAC,CACrB,EACA,WAAY,CACV,SAAU,IACV,OAAQ,IACR,KAAM,WAAA,CACR,CAAA,CACF,EACF,EACCtO,EAAA,IAAA,IAAA,CAAE,UAAU,wCAAwC,SAAoD,uDAAA,EACxGA,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAAkC,oCAAA,CAAA,CAAA,CAAA,CACrF,EAIEwE,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,4BACb,eAACk3E,GAAU,CAAA,UAAU,yBAAyB,CAChD,CAAA,SACC,MACC,CAAA,SAAA,CAACl3E,EAAA,IAAA,KAAA,CAAG,UAAU,4BAA4B,SAAgB,mBAAA,EACzDA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAElC,2HAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,4BACb,eAACq5B,GAAO,CAAA,UAAU,yBAAyB,CAC7C,CAAA,SACC,MACC,CAAA,SAAA,CAACr5B,EAAA,IAAA,KAAA,CAAG,UAAU,4BAA4B,SAAa,gBAAA,EACtDA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAElC,sJAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,4BACb,eAACg2E,GAAc,CAAA,UAAU,yBAAyB,CACpD,CAAA,SACC,MACC,CAAA,SAAA,CAACh2E,EAAA,IAAA,KAAA,CAAG,UAAU,4BAA4B,SAAqB,wBAAA,EAC/DwE,EAAAA,KAAC,IAAE,CAAA,UAAU,qBAAqB,SAAA,CAAA,QAC1BsI,EAAM,oGAAA,CACd,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,4BACb,SAACtI,EAAA,KAAA,QAAA,CAAM,UAAU,wCACf,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,WACL,QAAS63E,EACT,SAAWrwE,GAAMswE,EAAiBtwE,EAAE,OAAO,OAAO,EAClD,UAAU,0DAAA,CACZ,EACCxH,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAKxC,kSAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,eACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAASi4E,EACT,SAAU,CAACJ,GAAiBE,EAC5B,UAAW,+GACTF,GAAiB,CAACE,EACd,kCACA,gCACN,GAEC,WAEGvzE,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAA/S,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,kEACV,QAAS,CAAE,OAAQ,GAAI,EACvB,WAAY,CACV,SAAU,EACV,OAAQ,IACR,KAAM,QAAA,CACR,CACF,EACAtO,EAAAA,IAAC,QAAK,SAA2B,6BAAA,CAAA,CAAA,CAAA,CACnC,EAEA,6BAAA,CAAA,CAGN,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,CAAA,CAEJ,EC1JMk4E,GAAa,CACjB,KAAM,CACJ,KAAM,kBACN,KAAM,gBACN,SAAU,CACZ,EACA,KAAM,CACJ,KAAM,kBACN,KAAM,kBACN,SAAU,CAAA,CAEd,EAEMC,GAAgB,IAAM,CACpB,KAAA,CAAE,WAAAz4E,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,iBAAiB5O,EAAa,cAAgB,aAAa,cACtE,QAAS,CACP,QAAS,CAAC,GAAK,GAAK,EAAG,CACzB,EACA,WAAY,CACV,SAAU,IACV,OAAQ,IACR,KAAM,WAAA,CACR,CACF,CAEJ,EAEM04E,GAAoB,IAAM,CACxB,KAAA,CAAE,WAAA14E,CAAW,EAAIO,GAAS,gBAE7B,MAAI,CAAA,UAAW,mCAAmCP,EAAa,cAAgB,YAAY,GAE1F,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,SAGC,MAAI,CAAA,UAAW,GAAGz4E,EAAa,cAAgB,UAAU,4BACxD,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,yBACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EAEC3zE,EAAAA,KAAA,MAAI,CAAA,UAAU,sCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,YACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EAEC3zE,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,aACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,aACb,SAAAn4E,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,aACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGCn4E,EAAAA,IAAA,MAAI,CAAA,UAAU,uDACZ,SAAA,CAAC,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKwO,GAChBxO,EAAAA,IAAA,MAAY,CAAA,UAAW,4BAA4BN,EAAa,cAAgB,UAAU,GACzF,SAAAM,EAAA,IAACm4E,GAAc,CAAA,CAAA,CAAA,EADP3pE,CAEV,CACD,EACH,SAGC,MAAI,CAAA,UAAW,GAAG9O,EAAa,cAAgB,UAAU,4BACxD,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EAECn4E,EAAAA,IAAA,OAAI,UAAU,YACZ,UAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACbxO,EAAA,IAAA,OAAY,UAAU,kBACrB,SAACA,MAAAm4E,GAAc,CAAA,CAAA,GADP3pE,CAEV,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EAGMg8B,GAAiB,CAAC,CAAE,WAAAC,KAAiB,CACzC,KAAM,CAACC,EAAUC,CAAW,EAAI/qC,EAAA,SAASgrC,GAAmB,EAE5D,SAASA,GAAoB,CACrB,MAAAC,EAAaJ,EAAa,IAAI,KAChC,OAAAI,GAAc,EAAU,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAE,EAEjE,CACL,KAAM,KAAK,MAAMA,GAAc,IAAO,GAAK,GAAK,GAAG,EACnD,MAAO,KAAK,MAAOA,GAAc,IAAO,GAAK,IAAO,EAAE,EACtD,QAAS,KAAK,MAAOA,EAAa,IAAO,GAAM,EAAE,EACjD,QAAS,KAAK,MAAOA,EAAa,IAAQ,EAAE,CAC9C,CAAA,CAGF/qC,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAgrC,EAAQ,YAAY,IAAM,CAC9BH,EAAYC,GAAmB,GAC9B,GAAI,EAEA,MAAA,IAAM,cAAcE,CAAK,CAAA,EAC/B,CAACL,CAAU,CAAC,EAGZjmC,EAAA,KAAA,MAAI,CAAA,UAAU,oBACZ,SAAA,CAASkmC,EAAA,KAAK,KAAGA,EAAS,MAAM,SAAA,EAAW,SAAS,EAAG,GAAG,EAAE,KAAGA,EAAS,QAAQ,SAAA,EAAW,SAAS,EAAG,GAAG,EAAE,KAAGA,EAAS,QAAQ,SAAA,EAAW,SAAS,EAAG,GAAG,EAAE,GAAA,EAC/J,CAEJ,EAEM2tC,GAAuBhyE,GACvBA,EAAM,SAAW,YAAoB,OACrCA,EAAM,SAAW,UAAkB,MACnCA,EAAM,SAAW,aAAqB,MACtCA,EAAM,gBAAkB,YAAoB,MACzC,KAGHiyE,GAAuBjyE,GACvBA,EAAM,SAAW,YAAoB,gBACrCA,EAAM,SAAW,UAAkB,eACnCA,EAAM,SAAW,aAAqB,cACtCA,EAAM,gBAAkB,YAAoB,cACzC,cAIHkyE,GAAgB,EAAI,GAAK,GAAK,IAE9BC,GAAkB,IAAM,CACtB,KAAA,CAAE,KAAAr3E,CAAK,EAAImC,GAAa,EACxB,CAACjC,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAC64E,EAAaC,CAAc,EAAI94E,EAAAA,SAAS,GAAG,EAC5C,CAAC+4E,EAAeC,CAAgB,EAAIh5E,EAAAA,SAAS,EAAE,EAC/C,CAAE,WAAAF,CAAW,EAAIO,GAAS,EAC1B,CAACuJ,EAAQitE,CAAS,EAAI72E,EAAAA,SAAS,IAAI,EACnC,CAAC4F,EAAOC,CAAQ,EAAI7F,WAAS,CACjC,cAAe,EACf,WAAY,EACZ,eAAgB,EAChB,aAAc,EACd,WAAY,EACZ,SAAU,CACR,KAAM,EACN,KAAM,CAAA,CACR,CACD,EACK,CAACi5E,EAAcC,CAAe,EAAIl5E,EAAAA,SAAS,CAAA,CAAE,EAC7C,CAAC0J,EAAayvE,CAAc,EAAIn5E,EAAAA,SAAS,CAAA,CAAE,EAC3C,CAACyH,EAAY2xE,CAAa,EAAIp5E,EAAAA,SAAS,IAAI,EAC3C,CAACq5E,EAAkBC,CAAmB,EAAIt5E,EAAAA,SAAS,EAAK,EACxD,CAACujB,EAAeg2D,CAAgB,EAAIv5E,EAAAA,SAAS,MAAM,EACnD,CAACw5E,EAA4BC,CAA6B,EAAIz5E,EAAAA,SAAS,EAAK,EAC5E,CAAC05E,EAAkBC,CAAmB,EAAI35E,EAAAA,SAAS,CAAA,CAAE,EACrD,CAAC45E,EAAuBC,CAAwB,EAAI75E,EAAAA,SAAS,EAAK,EAClE,CAAC85E,EAA0BC,CAA2B,EAAI/5E,EAAAA,SAAS,EAAK,EAE9EE,EAAAA,UAAU,IAAM,CACTqB,GAAM,MACKy4E,EAAA,EACG5xE,EAAA,EACG6xE,EAAA,EAAA,EACrB,CAAC14E,CAAI,CAAC,EAET,MAAMy4E,EAAkB,SAAY,CAC9B,GAAA,CACI,MAAA5sE,EAAY,MAAM/K,GAAOF,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,CAAC,EAC5D,GAAA6L,EAAU,SAAU,CAChB3F,MAAAA,GAAa2F,EAAU,KAAK,EACxBypE,EAAA,CACR,GAAGpvE,GACH,WAAYA,GAAW,qBAAuB,WAC9C,sBAAuBA,GAAW,qBAAuB,UACzD,WAAYA,GAAW,qBAAuB,WAC9C,WAAYA,GAAW,YAAY,OAAO,EAC1C,kBAAmBA,GAAW,mBAAqB,GACnD,gBAAiBA,GAAW,eAAA,CAC7B,CAAA,QAEIzE,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,CAAA,CAEtD,EAEMi3E,EAAwB,SAAY,CACpC,GAAA,CACF,MAAMC,EAAc,MAAM73E,GAAOF,GAAIrB,GAAI,WAAY,UAAU,CAAC,EAC5D,GAAAo5E,EAAY,SAAU,CAClB,MAAAC,GAAWD,EAAY,KAAK,EACnBpB,EAAAqB,GAAS,aAAe,GAAG,EACzBnB,EAAAmB,GAAS,mBAAqB,EAAE,CAAA,QAE5Cn3E,EAAO,CACN,QAAA,MAAM,oCAAqCA,CAAK,CAAA,CAE5D,EAEMoF,EAAqB,SAAY,CACjC,GAAA,CAEF,MAAMgyE,EAAej4E,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,EAC/C84E,GAAoB1jE,GAAWyjE,EAAej4E,GAAQ,CAC5CA,EAAAA,EAAI,MAAM,CAAA,CACzB,EAGK6H,GAAgBrH,GACpBC,GAAW9B,GAAI,UAAU,EACzB+B,GAAM,WAAY,KAAMtB,EAAK,QAAQ,CACvC,EACM+4E,GAAmB,MAAMv3E,GAAQiH,EAAa,EAG9ChD,EAAcrE,GAClBC,GAAW9B,GAAI,QAAQ,EACvB+B,GAAM,WAAY,KAAMtB,EAAK,QAAQ,EACrC0F,GAAQ,YAAa,MAAM,CAC7B,EAEMszE,EAAoB5jE,GAAW3P,EAAc4P,GAAa,CAC9D,MAAM7J,EAAS6J,EAAS,KAAK,IAAIzU,IAAQ,CACvC,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EAGI2L,MAAU,KACV0sE,EAAuBztE,EAAO,OAAgBtG,GAAA,CAC9C,GAAAA,EAAM,gBAAkB,YAAa,CAEvC,GAAIA,EAAM,SAAW,aAAeA,EAAM,SAAW,WAAmB,MAAA,GAElE,MAAAuH,GAAYvH,EAAM,UAAU,OAAO,EACnCg0E,GAAmB,IAAI,KAAKzsE,GAAU,QAAA,EAAa,EAAI,GAAK,GAAK,GAAK,GAAK,EAEjF,OAAOF,GAAO2sE,EAAA,CAET,MAAA,EAAA,CACR,EACDd,EAAoBa,CAAoB,EAGxC,MAAMjyE,GAAmB5F,GACvBC,GAAW9B,GAAI,aAAa,EAC5B+B,GAAM,WAAY,KAAMtB,EAAK,QAAQ,EACrC0F,GAAQ,YAAa,MAAM,CAC7B,EAEMyzE,GAAyB/jE,GAAWpO,GAAmBoyE,GAAuB,CAClF,MAAMC,GAAoBD,EAAmB,KAAK,IAAIx4E,KAAQ,CAC5D,GAAIA,GAAI,GACR,GAAGA,GAAI,KAAK,EACZ,UAAWA,GAAI,KAAK,EAAE,WAAW,OAAO,CAAA,EACxC,EACFg3E,EAAeyB,EAAiB,EAGhC,MAAMC,GAAiB,CACrB,KAAMD,GACH,WAAYE,GAAE,SAAW,aAAeA,GAAE,QAAU,MAAM,EAC1D,OAAO,CAAC9xE,GAAK8xE,KAAM9xE,IAAO8xE,GAAE,QAAU,GAAI,CAAC,EAC9C,KAAMF,GACH,WAAYE,GAAE,SAAW,aAAeA,GAAE,QAAU,MAAM,EAC1D,OAAO,CAAC9xE,GAAK8xE,KAAM9xE,IAAO8xE,GAAE,QAAU,GAAI,CAAC,CAChD,EAGA,IAAIC,GAAoB,EACpBC,GAAkB,EACtB,MAAMC,GAAe,CACnB,KAAM,CAAE,MAAO,EAAG,IAAK,CAAE,EACzB,KAAM,CAAE,MAAO,EAAG,IAAK,CAAE,CAC3B,EACMC,OAAgB,IAEfnuE,EAAA,QAAiBtG,IAAA,CAKlB,GAJAA,GAAM,SACEy0E,GAAA,IAAIz0E,GAAM,OAAO,EAGzBA,GAAM,gBAAkB,YAAa,CACjC,MAAAuH,GAAYvH,GAAM,UAAU,OAAO,EACnCqH,OAAU,KACVqtE,GAAoB,IAAI,KAAKntE,GAAU,QAAA,EAAa,EAAI,GAAK,GAAK,GAAK,GAAK,EAC5EotE,GAAa30E,GAAM,OAAS,EAC5B40E,GAAa50E,GAAM,eAAe,OAAS,OAGjD,GAAIqH,IAAOqtE,GAAmB,CAExB,GAAA,CAAC10E,GAAM,mBACW,IAAI,KAAKqH,GAAI,QAAA,EAAY6qE,EAAa,EACxCwC,GAChB,OAKJ,GAAI10E,GAAM,SAAW,aAAeA,GAAM,SAAW,WAAY,CAE1Cs0E,IAAAK,GAGrB,MAAME,GAAYF,GAAa,IACZJ,IAAAM,GAGdL,GAAaI,EAAU,IAC1BJ,GAAaI,EAAU,EAAI,CAAE,MAAO,EAAG,IAAK,CAAE,GAEnCJ,GAAAI,EAAU,EAAE,OAASD,GACrBH,GAAAI,EAAU,EAAE,KAAOC,EAAA,CAClC,CACF,CACF,CACD,EAGD,MAAM18C,GAAW,CACf,KAAM,WAAW,KAAK,IAAI,EAAGq8C,GAAa,KAAK,IAAMJ,GAAe,MAAQpzE,GAAY,gBAAgB,MAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC,EAC9H,KAAM,WAAW,KAAK,IAAI,EAAGwzE,GAAa,KAAK,IAAMJ,GAAe,MAAQpzE,GAAY,gBAAgB,MAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC,CAChI,EAGM8zE,GAAqB,CACzB,KAAMX,GACH,WAAYE,GAAE,SAAW,WAAaA,GAAE,QAAU,MAAM,EACxD,OAAO,CAAC9xE,GAAK8xE,KAAM9xE,IAAO8xE,GAAE,QAAU,GAAI,CAAC,EAC9C,KAAMF,GACH,WAAYE,GAAE,SAAW,WAAaA,GAAE,QAAU,MAAM,EACxD,OAAO,CAAC9xE,GAAK8xE,KAAM9xE,IAAO8xE,GAAE,QAAU,GAAI,CAAC,CAChD,EAGAl8C,GAAS,KAAO,WAAY,KAAK,IAAI,EAAGA,GAAS,KAAO28C,GAAmB,IAAI,EAAG,QAAQ,CAAC,CAAC,EAC5F38C,GAAS,KAAO,WAAY,KAAK,IAAI,EAAGA,GAAS,KAAO28C,GAAmB,IAAI,EAAG,QAAQ,CAAC,CAAC,EAGnF11E,EAAA,CACP,cAAey0E,GAAiB,KAChC,WAAYvtE,EAAO,WAAYyuE,GAAE,gBAAkB,WAAW,EAAE,OAChE,eAAgBN,GAAU,KAC1B,aAAcH,GACd,WAAYC,GACZ,SAAAp8C,GACA,eAAgBn3B,GAAY,gBAAkB,CAAE,KAAM,EAAG,KAAM,CAAE,CAAA,CAClE,EAGDyxE,EACEnsE,EACG,OAAYyuE,IAAAA,GAAE,gBAAkB,WAAW,EAC3C,MAAM,EAAG,CAAC,CACf,CAAA,CACD,EAGD,MAAO,IAAM,CACOnB,GAAA,EACAE,EAAA,EACKG,GAAA,CACzB,CAAA,CACD,QACM13E,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,EACrDQ,EAAM,MAAM,+BAA+B,CAAA,QAC3C,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAGM2yB,EAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMoD,EAAe,CACnB,OAAQ,CAAE,EAAG,GAAI,QAAS,CAAE,EAC5B,QAAS,CACP,EAAG,EACH,QAAS,EACT,WAAY,CACV,KAAM,SACN,UAAW,GAAA,CACb,CAEJ,EAEMgkD,EAAa,CACjB,CAAE,MAAO,iBAAkB,KAAOr7E,EAAA,IAAAs7E,GAAM,EAAA,EAAI,MAAO91E,EAAM,cAAe,MAAO,aAAc,EAC7F,CAAE,MAAO,cAAe,KAAOxF,EAAA,IAAAiK,GAAc,EAAA,EAAI,MAAOzE,EAAM,WAAY,MAAO,cAAe,EAChG,CAAE,MAAO,kBAAmB,KAAOxF,EAAA,IAAAgK,GAAQ,EAAA,EAAI,MAAOxE,EAAM,eAAgB,MAAO,eAAgB,EACnG,CACE,MAAO,UACP,WAAOpB,GAAa,EAAA,EACpB,MACGpE,EAAAA,IAAA,MAAA,CACC,gBAAC,MAAA,CAAI,UAAU,sBACb,SAAA,OAAC,MAAA,CAAI,UAAU,UAAU,SAAgB,mBAAA,EACxCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,qBAAqB,SAAA,CAAA,KAAGgB,EAAM,SAAS,KAAOA,EAAM,SAAS,MAAM,QAAQ,CAAC,CAAA,EAAE,QAC5F,MAAA,CAAI,UAAU,qBAAqB,SAAiB,oBAAA,EACpDhB,EAAAA,KAAA,MAAI,CAAA,UAAU,UAAU,SAAA,CAAA,IAAEgB,EAAM,aAAa,QAAQ,CAAC,CAAA,EAAE,EACxDhB,EAAAA,KAAA,MAAI,CAAA,UAAU,qBAAqB,SAAA,CAAA,wBACZgB,EAAM,WAAW,QAAQ,CAAC,CAAA,CAClD,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAEF,MAAO,aAAA,CAEX,EAEM+1E,EAAyB,IAAM,CAE/B,GADA,CAAC/xE,GAAQ,YACT,CAACA,EAAO,WAAmB,MAAA,GAEzB,MAAAgyE,EAAgBhyE,EAAO,mBAAqB,GAC5CiyE,GAAe,IAAI,KAAKjyE,EAAO,WAAW,QAAa,EAAAgyE,EAAgB,GAAK,GAAK,GAAK,EACrF,OAAA,KAAK,OAASC,EACvB,EAEMC,EAA2B,IAAM,CACjC,GAAA,CAAClyE,GAAQ,WAAmB,OAAA,KAE1B,MAAAgyE,EAAgBhyE,EAAO,mBAAqB,GAE5C6hC,GADe,IAAI,KAAK7hC,EAAO,WAAW,QAAa,EAAAgyE,EAAgB,GAAK,GAAK,GAAK,EAC3D,KAAK,IAAI,EAEtC,GAAAnwC,IAAa,EAAU,OAAA,KAE3B,MAAMswC,GAAQ,KAAK,MAAMtwC,IAAa,GAAK,GAAK,IAAK,EAC/Co0B,EAAU,KAAK,MAAOp0B,IAAa,GAAK,GAAK,MAAU,GAAK,IAAK,EAEhE,MAAA,CAAE,MAAAswC,GAAO,QAAAlc,CAAQ,CAC1B,EAEMmc,EAA4B,SAAY,CACxC,GAAA,CAACL,IAA0B,CAC7Bn4E,EAAM,MAAM,oEAAoE,EAChF,MAAA,CAGFu2E,EAA4B,EAAI,EAC5B,GAAA,CAEF,MAAM7oE,GAAU/O,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,EAAG,CACjD,sBAAuB,GACvB,wBAAyBiV,GAAgB,EACzC,mBAAoB,UAEpB,WAAY,KACZ,gBAAiB,IAAA,CAClB,EAEDhT,EAAM,QAAQ,8CAA8C,EAC5D,MAAMw2E,EAAgB,EACtBD,EAA4B,EAAK,EACjCF,EAAyB,EAAK,EAG9BhD,EAAyBoF,IAAA,CACvB,GAAGA,EACH,sBAAuB,GACvB,mBAAoB,UACpB,WAAY,GACZ,WAAY,KACZ,gBAAiB,IAAA,EACjB,QACKj5E,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,EACrDQ,EAAM,MAAM,uCAAuC,EACnDu2E,EAA4B,EAAK,CAAA,CAErC,EAEMmC,EAAoB,IACvB97E,MAAAoc,GAAA,CAAW,OAAM,GAAC,KAAMo9D,EAAuB,GAAIzmE,EAAAA,SAClD,SAAAvO,EAAA,KAAC6X,GAAA,CACC,GAAG,MACH,UAAU,gBACV,QAAS,IAAM,CAACq9D,GAA4BD,EAAyB,EAAK,EAC1E,OAAM,GAEN,SAAA,CAAAz5E,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,YACV,QAAQ,cACR,MAAM,uBACN,UAAU,cACV,QAAQ,YAER,SAAC/S,EAAAA,IAAA,MAAI,CAAA,UAAU,sCAAuC,CAAA,CAAA,CACxD,QAEC,MAAI,CAAA,UAAU,gCACb,SAACA,MAAA,MAAA,CAAI,UAAU,8DACb,SAAAA,EAAA,IAACoc,GAAW,MAAX,CACC,GAAIrJ,EAAAA,SACJ,MAAM,wBACN,UAAU,qBACV,QAAQ,wBACR,MAAM,uBACN,UAAU,wBACV,QAAQ,qBAER,SAACvO,EAAA,KAAA6X,GAAO,MAAP,CAAa,UAAU,qHACtB,SAAA,CAAArc,MAAC,MAAI,CAAA,UAAU,wCACb,SAAAA,MAACoO,IAAsB,CAAA,EACzB,EACApO,MAACqc,GAAO,MAAP,CAAa,GAAG,KAAK,UAAU,0DAA0D,SAE1F,6BAAA,EACC7X,EAAAA,KAAA,MAAI,CAAA,UAAU,OACb,SAAA,OAAC,IAAA,CAAE,UAAU,6BAA6B,SAE1C,iFAAA,EACCA,EAAAA,KAAA,KAAG,CAAA,UAAU,6DACZ,SAAA,CAACxE,EAAAA,IAAA,MAAG,SAA0B,6BAAA,EAC7BA,EAAAA,IAAA,MAAG,SAAoB,uBAAA,EACvBA,EAAAA,IAAA,MAAG,SAA2B,8BAAA,EAC9BA,EAAAA,IAAA,MAAG,SAA+B,iCAAA,CAAA,CAAA,EACrC,QACC,IAAA,CAAE,UAAU,6BAA6B,SAG1C,+LAAA,EACCwJ,GAAQ,YACNhF,OAAA,MAAA,CAAI,UAAU,sDACb,SAAA,OAAC,IAAA,CAAE,UAAU,wCAAwC,SAAyB,4BAAA,EAC7EgF,EAAO,iBACLhF,OAAA,IAAA,CAAE,UAAU,4BAA4B,SAAA,CAAA,WAASgF,EAAO,eAAA,EAAgB,QAE1E,IAAA,CAAE,UAAU,uBAAuB,SAEpC,iFAAA,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EAEChF,EAAAA,KAAA,MAAI,CAAA,UAAU,kCACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,+JACV,QAAS,IAAMy5E,EAAyB,EAAK,EAC9C,SAAA,QAAA,CAED,EACAz5E,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,8JACV,QAAS47E,EACV,SAAA,sBAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CAAA,EAEJ,EAGIG,EAAqB,IAAM,CAC3B,GAAA,CAACvyE,EAAe,OAAA,KAEpB,GAAIA,EAAO,WAEP,OAAChF,EAAA,KAAA,MAAI,CAAA,UAAU,kFACb,SAAA,CAAAxE,EAAA,IAACoO,GAAsB,EAAA,EACtBpO,EAAAA,IAAA,QAAK,SAAc,gBAAA,CAAA,CAAA,EACtB,EAIA,GAAAwJ,EAAO,qBAAuB,WAAY,CAC5C,MAAMwyE,EAAWN,EAAyB,EAC1C,GAAIM,eAEC,MAAI,CAAA,UAAU,0DACb,SAACx3E,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,EAAAA,IAAAi8E,GAAA,CAAc,UAAU,oBAAoB,SAC5C,MACC,CAAA,SAAA,OAAC,MAAA,CAAI,UAAU,mCAAmC,SAA6B,gCAAA,EAC9EzyE,EAAO,iBACNxJ,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,gBAAgB,EAElEwE,EAAAA,KAAA,MAAI,CAAA,UAAU,6BAA6B,SAAA,CAAA,4BAChBw3E,EAAS,MAAM,KAAGA,EAAS,QAAQ,GAAA,CAC/D,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,CAGE,OAAAxyE,EAAO,qBAAuB,UAE7BxJ,MAAA,MAAI,CAAA,UAAU,oFACb,SAACA,EAAA,IAAA,OAAA,CAAK,gCAAoB,EAC5B,EAKFwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAMi1E,EAAyB,EAAI,EAC5C,UAAU,oIACV,SAAU,CAAC8B,EAAuB,EAElC,SAAA,CAAAv7E,EAAA,IAACoO,GAAsB,EAAA,EACtBpO,EAAAA,IAAA,QAAK,SAAoB,sBAAA,CAAA,CAAA,CAAA,CAC5B,CAEJ,EAEA,OAAIqB,QACM+2E,GAAkB,EAAA,EAKxB5zE,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAA/S,EAAA,IAAC87E,EAAkB,EAAA,EACnBt3E,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAW,yBAAyB5O,EAAa,cAAgB,YAAY,GAC7E,QAAQ,SACR,QAAQ,UACR,SAAUu0B,EAGV,SAAA,CAAAj0B,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,OACV,SAAU+oB,EAEV,SAAC7yB,EAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAA,OAAC,MAAG,UAAW,sBAAsB9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,iBACtEyB,GAAM,aAAe,SAAS,GAAA,EAC/C,EACAnB,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,QAAS,SAExE,gDAAA,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,wBACb,SAAAM,EAAA,IAAC+7E,IAAmB,CACtB,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAGA/7E,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,OACV,SAAU+oB,EAEV,SAAC7yB,EAAA,KAAA,MAAI,CAAA,UAAW,GAAG9E,EAAa,cAAgB,UAAU,4BACxD,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAE1F,mBAAA,CAAA,EACAM,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,QAAS,SAEhF,iCAAA,CAAA,CAAA,EACF,EACC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAA,EAAAA,KAAC,OAAI,UAAW,2BAA2B9E,EAAa,cAAgB,YAAY,0BAClF,SAAA,CAAAM,EAAA,IAAC,MAAA,CACC,IAAKqH,GAAY,mBAAqB,WAAa,qBAAuB,eAC1E,IAAKA,GAAY,mBAAqB,WAAa,WAAa,UAChE,UAAU,wBAAA,CACZ,SACC,OAAK,CAAA,UAAW,uBAAuB3H,EAAa,gBAAkB,eAAe,GACnF,SAAA,CAAY2H,GAAA,mBAAqB,WAAa,WAAa,UAAU,UAAA,CACxE,CAAA,CAAA,EACF,EACCrH,EAAAA,IAAA,OAAI,UAAU,8CACb,SAACA,EAAA,IAAAkE,GAAa,CAAA,UAAU,wBAAyB,CAAA,CACnD,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECM,EAAAA,KAAA,MAAI,CAAA,UAAU,uCAEb,SAAA,CAAAA,EAAAA,KAAC,OAAI,UAAW,aAAa9E,EAAa,cAAgB,YAAY,kBACpE,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKk4E,GAAW7wE,GAAY,cAAc,GAAG,KAC7C,IAAKA,GAAY,eACjB,UAAU,SAAA,CACZ,EACC7C,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACZ,SAAA,CAAAgB,EAAM,SAAS6B,GAAY,cAAc,GAAG,QAAQ,CAAC,EAAE,IAAEA,GAAY,cAAA,CACxE,CAAA,CAAA,EACF,SACC,MAAI,CAAA,UAAW,WAAW3H,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,MACvE8F,EAAM,SAAS6B,GAAY,cAAc,GAAG,QAAQ,CAAC,CAAA,EAC3D,EACArH,EAAAA,IAAC,OAAI,UAAW,WAAWN,EAAa,gBAAkB,eAAe,QAAS,SAElF,uBAAA,CAAA,QACC,MAAI,CAAA,UAAW,UAAUA,EAAa,cAAgB,aAAa,yBAClE,SAAAM,EAAA,IAAC,MAAA,CACC,UAAU,4DACV,MAAO,CACL,MAAO,GAAG,KAAK,IAAI,IAAMwF,EAAM,SAAS6B,GAAY,cAAc,EAAI,GAAM,GAAG,CAAC,GAAA,CAClF,CAAA,EAEJ,SACC,MAAI,CAAA,UAAW,WAAW3H,EAAa,gBAAkB,eAAe,QAAS,SAAA,CAAA,WACvE2H,GAAY,eAAe,WAAA,EACtC,EACArH,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACT,CAACwF,EAAM,SAAS6B,GAAY,cAAc,GAAK7B,EAAM,SAAS6B,GAAY,cAAc,EAAIsxE,IAChGQ,EAAiB9xE,GAAY,cAAc,EAC3C6xE,EAAoB,EAAI,EAC1B,EACA,SAAU,CAAC1zE,EAAM,SAAS6B,GAAY,cAAc,GAAK7B,EAAM,SAAS6B,GAAY,cAAc,EAAIsxE,EACtG,UAAW,0EACT,CAACnzE,EAAM,SAAS6B,GAAY,cAAc,GAAK7B,EAAM,SAAS6B,GAAY,cAAc,EAAIsxE,EACxFj5E,EACE,+CACA,+CACF,4CACN,GAEC,SAAA,CAAC8F,EAAM,SAAS6B,GAAY,cAAc,GAAK7B,EAAM,SAAS6B,GAAY,cAAc,EAAIsxE,EACzF,QAAQA,CAAa,IAAItxE,GAAY,cAAc,YACnD,WAAWA,GAAY,cAAc,aAAA,CAAA,CAC3C,EACF,EAGCrH,EAAA,IAAA,MAAI,CAAA,UAAW,YAAYN,EAAa,cAAgB,YAAY,kBACnE,SAAC8E,OAAA,MAAI,CAAA,UAAU,sBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAAkE,GAAA,CAAa,UAAU,yBAAyB,EACjDlE,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAI,SAE3E,gCAAA,CAAA,CAAA,EACF,EACC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAAoE,GAAA,CAAa,UAAU,yBAAyB,EACjDpE,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAI,SAE3E,0BAAA,CAAA,CAAA,EACF,EACC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA+J,GAAA,CAAa,UAAU,yBAAyB,SAChD,IAAE,CAAA,UAAW,WAAWrK,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,uBACpD2H,GAAY,cAAA,CACnC,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAGArH,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,4DACV,SAAU2lB,EAET,SAAWonD,EAAA,IAAI,CAACa,EAAMhyE,KACrBlK,EAAA,IAACsO,EAAO,IAAP,CAEC,UAAW,4BAA4B4tE,EAAK,KAAK,0EACjD,SAAU7kD,EACV,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAExB,SAAC7yB,EAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAA,IAAC,IAAE,CAAA,UAAU,6BAA8B,SAAAk8E,EAAK,MAAM,EACrDl8E,EAAA,IAAA,KAAA,CAAG,UAAU,qBAAsB,WAAK,KAAM,CAAA,CAAA,EACjD,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,sBACZ,WAAK,IACR,CAAA,CAAA,CACF,CAAA,CAAA,EAdKk8E,EAAK,KAgBb,CAAA,CAAA,CACH,EAGA13E,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAW,GAAG5O,EAAa,cAAgB,UAAU,iCACrD,SAAU23B,EAEV,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAAiB,mBAAA,CAAA,EAC3GM,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAI,SAA4C,8CAAA,CAAA,CAAA,EACzH,EACAM,EAAA,IAAC,SAAA,CACC,QAAS,IAAMq5E,EAA8B,CAACD,CAA0B,EACxE,UAAW,OAAO15E,EAAa,oBAAsB,mBAAmB,kCAExE,SAAAM,EAAA,IAAC,MAAA,CACC,UAAW,WAAWN,EAAa,gBAAkB,eAAe,mCAAmC05E,EAA6B,aAAe,EAAE,GACrJ,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAp5E,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EACF,SAEC,MAAI,CAAA,UAAW,YAAYN,EAAa,iCAAmC,6CAA6C,gDACvH,SAAA,CAAAM,EAAAA,IAAC,OAAI,UAAU,gCAAgC,KAAK,OAAO,OAAO,eAAe,QAAQ,YACvF,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAY,IAAI,EAAE,sIAAA,CAAuI,CAAA,CAC9M,SACC,MACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,kCAAkC,SAA4B,+BAAA,SAC3E,MAAI,CAAA,UAAW,qBAAqBN,EAAa,gBAAkB,eAAe,GACjF,SAAA,CAACM,EAAAA,IAAA,KAAE,SAA8I,iJAAA,SAChJ,IAAE,CAAA,SAAA,CAACA,EAAAA,IAAA,UAAO,SAAc,iBAAA,EAAS,iNAAA,EAA+M,SAChP,IAAE,CAAA,SAAA,CAACA,EAAAA,IAAA,UAAO,SAAe,kBAAA,EAAS,oJAAA,EAAkJ,SACpL,IAAE,CAAA,UAAW,GAAGN,EAAa,eAAiB,cAAc,GAAI,SAAA,CAACM,EAAAA,IAAA,UAAO,SAAQ,WAAA,EAAS,8LAAA,CAA4L,CAAA,CAAA,CACxR,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAECo5E,GACE50E,EAAA,KAAA,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAA,OAAC,SAAM,UAAW,uBAAuB9E,EAAa,kBAAoB,iBAAiB,GACzF,SAAA,CAACM,EAAAA,IAAA,QAAA,CAAM,UAAW,GAAGN,EAAa,iBAAmB,YAAY,GAC/D,SAAC8E,EAAA,KAAA,KACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAAQ,UAAA,CAAA,EAC7IM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAAI,MAAA,CAAA,EACzIM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAAM,QAAA,CAAA,EAC3IM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAAK,OAAA,CAAA,EAC1IM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAAM,QAAA,CAAA,EAC3IM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAAY,cAAA,CAAA,CAAA,CAAA,CACnJ,CAAA,CACF,EACCM,EAAAA,IAAA,QAAM,CAAA,UAAW,GAAGN,EAAa,2BAA6B,mCAAmC,GAC/F,SAAA45E,EAAiB,IAAK6C,GAAY,CAC3B,MAAAvuE,GAAYuuE,EAAQ,UAAU,OAAO,EACrCC,GAAgB,IAAI,KAAKxuE,GAAU,QAAA,EAAa,EAAI,GAAK,GAAK,GAAK,GAAK,EACxEF,OAAU,KACV2uE,EAAiB,KAAK,IAAI,EAAG,KAAK,MAAMD,GAAgB,KAAK,IAAI,IAAM,GAAK,GAAK,IAAK,CAAC,EAE7F,cACG,KAAA,CAAoB,UAAW18E,EAAa,cAAgB,WAC3D,SAAA,CAAA8E,OAAC,MAAG,UAAW,uCAAuC9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IACpGy8E,EAAQ,GAAG,MAAM,EAAE,CAAA,EACvB,EACCn8E,EAAAA,IAAA,KAAG,CAAA,UAAW,uCAAuCN,EAAa,gBAAkB,eAAe,GACjG,SAAUkO,GAAA,iBACb,SACC,KAAG,CAAA,UAAW,uCAAuClO,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IACpGy8E,EAAQ,MAAM,QAAQ,CAAC,CAAA,EAC3B,QACC,KAAG,CAAA,UAAU,8BACZ,SAAC33E,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKm8E,EAAQ,cAAc,QAAU,OAASjE,GAAW,KAAK,KAAOA,GAAW,KAAK,KACrF,IAAKiE,EAAQ,cAAc,MAC3B,UAAU,cAAA,CACZ,EACCn8E,EAAAA,IAAA,OAAK,CAAA,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAK,SAAQy8E,EAAA,cAAc,KAAM,CAAA,CAAA,CAAA,CAC7G,CAAA,CACF,EACCn8E,EAAAA,IAAA,MAAG,UAAU,8BACX,WAAQ,SAAW,YACjBA,EAAA,IAAA,OAAA,CAAK,UAAW,8CACfN,EAAa,6BAA+B,yBAC9C,GAAI,SAEJ,UAAA,CAAA,EACEy8E,EAAQ,kBACT33E,EAAA,KAAA,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,uBAAuBN,EAAa,iBAAmB,gBAAgB,GAAI,SAE5F,oBAAA,CAAA,SACC,OAAK,CAAA,UAAW,WAAWA,EAAa,gBAAkB,eAAe,GACvE,SAAA,CAAQy8E,EAAA,QAAQ,KAAGA,EAAQ,cAAA,EAC9B,EACC33E,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,UAAWN,EAAa,gBAAkB,GAAK,SAAQy8E,EAAA,SAAW,YAAc,YAAc,aAAa,QAChH,MAAI,CAAA,UAAW,uBAAuBz8E,EAAa,cAAgB,aAAa,gCAC/E,SAAAM,EAAA,IAAC,MAAA,CACC,UAAW,4DAA4Ds4E,GAAoB6D,CAAO,CAAC,GACnG,MAAO,CAAE,MAAO9D,GAAoB8D,CAAO,CAAE,CAAA,CAAA,CAEjD,CAAA,CAAA,CACF,CAAA,GACF,EAECn8E,EAAA,IAAA,OAAA,CAAK,UAAW,8CACfN,EAAa,mCAAqC,+BACpD,GAAI,SAAA,mBAAA,CAEJ,EAEJ,EACCM,EAAA,IAAA,KAAG,CAAA,UAAW,uCAAuCN,EAAa,gBAAkB,eAAe,GAClG,SAAC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,sBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAI,SAAa,eAAA,CAAA,EAC3FM,EAAA,IAACwqC,GAAA,CACC,WAAY4xC,EAAA,CAAA,CACd,EACF,EAEC1uE,IAAO0uE,IAAiB,CAACD,EAAQ,0BAC/B,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAn8E,EAAAA,IAAC,QAAK,UAAW,WAAWN,EAAa,kBAAoB,iBAAiB,GAAI,SAAc,gBAAA,CAAA,EAChGM,EAAA,IAACwqC,GAAA,CACC,WAAY,IAAI,KAAK4xC,GAAc,UAAY7D,EAAa,CAAA,CAAA,CAC9D,EACF,QAGD,MAAI,CAAA,UAAW,UAAU74E,EAAa,cAAgB,aAAa,sBAClE,SAAAM,EAAA,IAAC,MAAA,CACC,UAAU,8DACV,MAAO,CACL,MAAOm8E,EAAQ,kBACX,GAAG,KAAK,IAAI,KAAO,GAAKE,GAAkB,GAAM,GAAG,CAAC,IACpD,GAAG,KAAK,IAAI,KAAO,GAAKA,EAAiB,GAAK,GAAM,GAAG,CAAC,GAAA,CAC9D,CAAA,EAEJ,EAECF,EAAQ,kBACNn8E,EAAAA,IAAA,OAAA,CAAK,UAAW,WAAWN,EAAa,iBAAmB,gBAAgB,GAAI,SAAA,iCAA8B,EAC5GgO,IAAO0uE,SACR,OAAA,CAAK,UAAW,WAAW18E,EAAa,kBAAoB,iBAAiB,GAAI,kCAAuB,CAAA,EAEzGM,EAAA,IAAC,OAAK,CAAA,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAI,SAAqB,uBAAA,CAAA,CAAA,CAAA,CAEvG,CACF,CAAA,CAAA,CA1FO,EAAAy8E,EAAQ,EA2FjB,CAAA,CAEH,CACH,CAAA,CAAA,EACF,EACC7C,EAAiB,SAAW,GAC1Bt5E,EAAAA,IAAA,MAAA,CAAI,UAAW,oBAAoBN,EAAa,gBAAkB,eAAe,GAAI,SAEtF,oCAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CAEJ,EAGA8E,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAW,GAAG5O,EAAa,cAAgB,UAAU,iCACrD,SAAU23B,EAEV,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAE1F,iBAAA,CAAA,EACAM,EAAA,IAAC4E,GAAA,CACC,GAAG,+BACH,UAAU,oFACX,SAAA,iBAAA,CAAA,CAED,EACF,EAGA5E,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,YACV,SAAU2lB,EAET,SAAA4kD,EAAa,SAAW,EACvB74E,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU+oB,EACV,UAAW,oBAAoB33B,EAAa,gBAAkB,eAAe,GAC9E,SAAA,eAAA,CAID,EAAAm5E,EAAa,IAAKxyE,GAChB7B,EAAA,KAAC8J,EAAO,IAAP,CAEC,UAAW,yCACT5O,EAAa,cAAgB,YAC/B,cACA,SAAU23B,EAEV,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACxE,EAAAA,IAAA,OAAI,UAAU,8CACb,SAACA,MAAA+J,GAAa,CAAA,UAAU,yBAAyB,EACnD,SACC,MACC,CAAA,SAAA,CAAA/J,EAAAA,IAAC,KAAE,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAI,SAE/E,oBAAA,CAAA,QACC,IAAE,CAAA,UAAW,WAAWA,EAAa,gBAAkB,eAAe,GACpE,SAAI,IAAA,KAAK2G,EAAM,WAAW,OAAQ,CAAA,EAAE,gBACvC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACC7B,EAAAA,KAAA,OAAK,CAAA,UAAU,6BAA6B,SAAA,CAAA,IACzC6B,EAAM,MAAM,QAAQ,CAAC,CAAA,CACzB,CAAA,CAAA,CAAA,EArBKA,EAAM,EAuBd,CAAA,CAAA,CAAA,CAEL,CAAA,CACF,EAGA7B,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAW,GAAG5O,EAAa,cAAgB,UAAU,iCACrD,SAAU23B,EAEV,SAAA,CAAAr3B,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAE/F,oBAAA,CAAA,EAEC4J,EAAY,OAAS,EACnBtJ,EAAAA,IAAA,MAAA,CAAI,UAAU,SACb,SAACwE,EAAA,KAAA,QAAM,CAAA,UAAU,kCACf,SAAA,CAACxE,EAAAA,IAAA,QAAA,CAAM,UAAW,GAAGN,EAAa,cAAgB,YAAY,GAC5D,SAAC8E,EAAA,KAAA,KACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,2CACbN,EAAa,gBAAkB,eACjC,4BAA6B,SAAI,MAAA,CAAA,EACjCM,EAAAA,IAAC,MAAG,UAAW,2CACbN,EAAa,gBAAkB,eACjC,4BAA6B,SAAM,QAAA,CAAA,EACnCM,EAAAA,IAAC,MAAG,UAAW,2CACbN,EAAa,gBAAkB,eACjC,sCAAuC,SAAM,QAAA,CAAA,EAC7CM,EAAAA,IAAC,MAAG,UAAW,2CACbN,EAAa,gBAAkB,eACjC,4BAA6B,SAAW,aAAA,CAAA,CAAA,CAAA,CAC1C,CAAA,CACF,QACC,QAAM,CAAA,UAAW,GAAGA,EAAa,kBAAoB,mCAAmC,GACtF,SAAY4J,EAAA,IAAKJ,GACf1E,EAAA,KAAA,MAAuB,UAAW9E,EAAa,cAAgB,WAC9D,SAAA,CAAAM,MAAC,MAAG,UAAW,qBACbN,EAAa,gBAAkB,eACjC,GACG,SAAAwJ,EAAW,UAAY,IAAI,KAAKA,EAAW,SAAS,EAAE,iBAAmB,MAC5E,SACC,KAAG,CAAA,UAAW,qBACbxJ,EAAa,gBAAkB,eACjC,GAAI,SAAA,CAAA,IACAwJ,EAAW,OAAO,QAAQ,CAAC,CAAA,EAC/B,EACC1E,EAAAA,KAAA,KAAG,CAAA,UAAU,YACZ,SAAA,OAAC,OAAK,CAAA,UAAW,8CACf0E,EAAW,UACPxJ,EACE,8BACA,8BACFA,EACE,gCACA,+BACR,GACG,SAAWwJ,EAAA,UAAY,YAAc,aACxC,EACCA,EAAW,UACTlJ,EAAAA,IAAA,OAAK,CAAA,UAAW,mDACfN,EACI,4BACA,2BACN,GAAI,SAEJ,QAAA,CAAA,CAAA,EAEJ,EACAM,EAAAA,IAAC,MAAG,UAAW,qBACbN,EAAa,gBAAkB,eACjC,GACG,SAAAwJ,EAAW,gBACVlJ,EAAA,IAAC,IAAA,CACC,KAAM,GAAGkJ,EAAW,UAAY,WAC5B,8CACA,6BACJ,GAAGA,EAAW,eAAe,GAC7B,OAAO,SACP,IAAI,sBACJ,UAAU,iCACX,SAAA,kBAAA,CAED,EAEA,SAEJ,CAAA,CAAA,GAnDOA,EAAW,EAoDpB,CACD,CACH,CAAA,GACF,CAAA,CACF,QAEC,MAAI,CAAA,UAAW,oBAAoBxJ,EAAa,gBAAkB,eAAe,GAAI,SAEtF,oBAAA,CAAA,CAAA,CAAA,CAEJ,EAGAM,EAAA,IAAC43E,GAAA,CACC,OAAQqB,EACR,QAAS,IAAMC,EAAoB,EAAK,EACxC,SAAU,SAAY,CAChB,GAAA,CACI,MAAAtxE,EAAW,MAAMC,GAAuB,EAC9C,GAAI,CAACD,EAAU,CACbxE,EAAM,MAAM,2CAA2C,EACvD,MAAA,CAGF,MAAM0E,GAAW,MAAMF,EAAS,QAAQ,CAAE,OAAQ,sBAAuB,EACrE,GAAAE,GAAS,SAAW,EAAG,CACzB1E,EAAM,MAAM,4BAA4B,EACxC,MAAA,CAIE,GAAA0E,GAAS,CAAC,EAAE,gBAAkBT,EAAW,cAAc,cAAe,CACxEjE,EAAM,MAAM,kEAAkE,EAC9E,MAAA,CAGF,MAAMkrB,GAAUnL,IAAkB,OAAS3d,EAAM,SAAS,KAAOA,EAAM,SAAS,KAChF,GAAI8oB,GAAUqqD,EAAe,CAC3Bv1E,EAAM,MAAM,gCAAgCu1E,CAAa,IAAIx1D,CAAa,EAAE,EAC5E,MAAA,CAIF,MAAM2uB,GAAYzqC,EAAW,mBAAqB,WAAa,KAAO,IACtE,GAAI,OAAO,SAAS,iBAAmByqC,GAAU,WAC3C,GAAA,CACEA,KAAc,KAEV,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,0BACR,OAAQ,CAAC,CACP,QAAS,QACT,UAAW,mBACX,eAAgB,CACd,KAAM,MACN,OAAQ,MACR,SAAU,EACZ,EACA,QAAS,CAAC,8BAAqC,EAC/C,kBAAmB,CAAC,yCAA0C,CAC/D,CAAA,CAAA,CACF,EAGK,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,6BACR,OAAQ,CAAC,CAAE,QAAS,MAAQ,CAAA,CAAA,CAC7B,QAEIwqC,GAAa,CAEhB,GAAAA,GAAY,OAAS,KACnB,GAAA,CACI,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,0BACR,OAAQ,CACN,CACE,QAAS,OACT,UAAW,kBACX,eAAgB,CACd,KAAM,QACN,OAAQ,QACR,SAAU,EACZ,EACA,QAAS,CAAC,0BAA0B,EACpC,kBAAmB,CAAC,0BAA0B,CAAA,CAChD,CACF,CACD,OACgB,CACjBl5E,EAAM,MAAM,mCAAmC,EAC/C,MAAA,KAEG,CACLA,EAAM,MAAM,oBAAoBiE,EAAW,gBAAgB,sBAAsB,EACjF,MAAA,CACF,CAKE,MAAA8X,EAAS,MADK,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EACrCm9D,EAAgBhxE,GAAyB4T,EAAQ2yB,GAAU,UAAU,EAGrEjmC,EAAesX,IAAkB,OAClC2uB,KAAc,KAAO,6CAA6C,6CAClEA,KAAc,KAAO,6CAA6C,6CAGjE0qC,EAAmBzwE,GAAiBuiB,EAAO,EAG3CnB,EAAK,MAAMovD,EAAc,kBAC7B1wE,EACA2wE,CACF,EAGMC,GAAer5E,EAAM,QAAQ,kCAAkC,EAGrE,MAAM+pB,EAAG,KAAK,EAGd,MAAMxX,GAAOnT,GAAW9B,GAAI,aAAa,EAAG,CAC1C,SAAUS,EAAK,SACf,OAAQmtB,GACR,MAAOnL,EACP,IAAK,EACL,UAAWmL,GACX,OAAQ,UACR,cAAexmB,GAAS,CAAC,EACzB,QAAST,EAAW,iBACpB,UAAW+O,GAAgB,EAC3B,YAAa,KAAK,IAAI,EACtB,eAAgB,EAChB,gBAAiB+W,EAAG,IAAA,CACrB,EAGD/pB,EAAM,QAAQq5E,EAAY,EAC1Br5E,EAAM,QAAQ,2CAA2C,EAGtC4E,EAAA,QACZpF,EAAO,CACN,QAAA,MAAM,oBAAqBA,CAAK,EAClCQ,EAAA,MAAMR,EAAM,SAAW,8BAA8B,CAAA,CAE/D,EACA,MAAOugB,CAAA,CACT,EAGC3d,EAAM,iBAAmBA,EAAM,eAAe,KAAO,GAAKA,EAAM,eAAe,KAAO,IACpFxF,EAAA,IAAA,MAAI,CAAA,UAAW,GACdN,EACI,qCACA,gCACN,8BACE,SAAA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,MAACi8E,IAAc,UAAW,iCAEP,SAClB,MACC,CAAA,SAAA,CAAAj8E,EAAAA,IAAC,KAAE,UAAW,uBACZN,EAAa,kBAAoB,iBACnC,GAAI,SAAe,iBAAA,CAAA,EAClB8E,EAAAA,KAAA,MAAI,CAAA,UAAU,iBACZ,SAAA,CAAMgB,EAAA,eAAe,KAAO,GAC1BhB,EAAAA,KAAA,IAAA,CAAE,UAAW,WACZ9E,EAAa,kBAAoB,iBACnC,GAAI,SAAA,CAAA,UACM8F,EAAM,eAAe,KAAK,QAAQ,CAAC,CAAA,EAC7C,EAEDA,EAAM,eAAe,KAAO,GAC1BhB,EAAAA,KAAA,IAAE,CAAA,UAAW,WACZ9E,EAAa,kBAAoB,iBACnC,GAAI,SAAA,CAAA,UACM8F,EAAM,eAAe,KAAK,QAAQ,CAAC,CAAA,CAC7C,CAAA,CAAA,EAEJ,EACAxF,EAAAA,IAAC,KAAE,UAAW,WACZN,EAAa,qBAAuB,iBACtC,QAAS,SAET,sGAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CAAA,CAEJ,EACF,CAEJ,ECv0CMg9E,GAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmGTvE,GAAgB,IAAM,CACpB,KAAA,CAAE,WAAAz4E,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,iBAAiB5O,EAAa,cAAgB,aAAa,cACtE,QAAS,CACP,QAAS,CAAC,GAAK,GAAK,EAAG,CACzB,EACA,WAAY,CACV,SAAU,IACV,OAAQ,IACR,KAAM,WAAA,CACR,CACF,CAEJ,EAEMi9E,GAAqB,IAAM,CACzB,KAAA,CAAE,WAAAj9E,CAAW,EAAIO,GAAS,EAE9B,OAAAuE,EAAA,KAAC,MAAI,CAAA,UAAU,wBAEb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,gBACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,SAEC,MAAI,CAAA,UAAW,aAAaz4E,EAAa,cAAgB,UAAU,4BAElE,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,EACAn4E,EAAAA,IAAC,OAAI,UAAU,wCACZ,UAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACdxO,EAAA,IAAC,OAAY,UAAU,gBACrB,eAACm4E,GAAc,CAAA,CAAA,GADP3pE,CAEV,CACD,CACH,CAAA,CAAA,EACF,EAGAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,yBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,cACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EAGA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,cACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EAGA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,cACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,cACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,cACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EAGAn4E,EAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,YACb,SAAAA,EAAAA,IAACm4E,GAAc,CAAA,CAAA,CAAA,CACjB,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EAEMyE,GAAa,CACjB,eACA,mBACA,eACA,mBACA,eACA,mBACA,eACA,mBACA,gBACA,oBACA,gBACA,oBACA,gBACA,eACF,EAEMC,GAAa,IAAM,CACjB,KAAA,CAAE,KAAA17E,CAAK,EAAImC,GAAa,EACxB+e,EAAWC,GAAY,EACvB,CAAE,WAAA5iB,CAAW,EAAIO,GAAS,EAC1B,CAACoB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACk9E,EAAYC,CAAa,EAAIn9E,EAAAA,SAAS,EAAK,EAChBA,EAAAA,SAAS,EAAK,EAChD,KAAM,CAACo9E,EAAYC,CAAa,EAAIr9E,EAAAA,SAAS,CAAA,CAAE,EACzC,CAACs9E,EAAcC,CAAe,EAAIv9E,EAAAA,SAAS,CAAA,CAAE,EAC7C,CAACw9E,EAAaC,CAAc,EAAIz9E,WAAS,CAC7C,KAAM,GACN,YAAa,GACb,MAAO,GACP,SAAU,GACV,SAAU,GACV,YAAa,GACb,OAAQ,CAAC,EACT,QAAS,UACT,cAAe,OACf,UAAW,kBACX,YAAa,EACb,aAAc,GACd,YAAa,GACb,cAAe,CAAC,EAChB,eAAgB,CAAC,EACjB,gBAAiB,CAAC,EAClB,YAAa,GACb,gBAAiB,CAAA,CAClB,EAEK09E,EAAQ,CAAC,KAAM,IAAK,IAAK,IAAK,KAAM,MAAO,KAAK,EAChDC,EAAS,CACb,CAAE,KAAM,QAAS,MAAO,SAAU,EAClC,CAAE,KAAM,QAAS,MAAO,SAAU,EAClC,CAAE,KAAM,OAAQ,MAAO,SAAU,EACjC,CAAE,KAAM,MAAO,MAAO,SAAU,EAChC,CAAE,KAAM,OAAQ,MAAO,SAAU,EACjC,CAAE,KAAM,QAAS,MAAO,SAAU,EAClC,CAAE,KAAM,SAAU,MAAO,SAAU,EACnC,CAAE,KAAM,SAAU,MAAO,SAAU,EACnC,CAAE,KAAM,OAAQ,MAAO,SAAU,EACjC,CAAE,KAAM,QAAS,MAAO,SAAU,CACpC,EAEM9b,EAAW,CACf,CAAE,GAAI,UAAW,KAAM,UAAW,KAAM,cAAe,EACvD,CAAE,GAAI,WAAY,KAAM,mBAAoB,KAAM,oBAAqB,CACzE,EAEM+b,EAAyB,CAC7B,aAAc,CACZ,WACA,SACA,QACA,UACA,UACA,OACF,EACA,eAAgB,CACd,UACA,OACA,SACA,QACA,UACA,SACF,EACA,SAAY,CACV,WACA,eACA,QACA,UACA,UAAA,CAEJ,EAEMC,EAA4B,CAChC,sBAAuB,CACrB,OACA,QACA,OACA,UACA,SACF,EACA,mBAAoB,CAClB,cACA,cACA,kBACA,gBACA,WACA,aACA,WACA,cACA,gBACA,cAAA,CAEJ,EAEM,CAACC,EAAOC,CAAQ,EAAI/9E,EAAAA,SAAS,CAAA,CAAE,EAC/B,CAACg+E,EAAeC,CAAgB,EAAIj+E,EAAAA,SAAS,CAAA,CAAE,EAC/C,CAACk+E,EAAYC,CAAa,EAAIn+E,EAAAA,SAAS,CAAA,CAAE,EAEzCo+E,EAAoB,IACjBZ,EAAY,WAAa,YACzBA,EAAY,aACZA,EAAY,YAAY,MAAM,KAAK,EAAE,CAAC,IAAM,WAiDrD,GA9CAt9E,EAAAA,UAAU,IAAM,CACVk+E,KACFL,EAASf,EAAU,EACnBiB,EAAiB,CAAA,CAAE,EACnBE,EAAc,CAAA,CAAE,IAEhBJ,EAAS,CAAC,KAAM,IAAK,IAAK,IAAK,KAAM,KAAK,CAAC,EAC3CE,EAAiB,CAAA,CAAE,EACnBE,EAAc,CAAA,CAAE,IAEjB,CAACX,EAAY,SAAUA,EAAY,WAAW,CAAC,EAElDt9E,EAAAA,UAAU,IAAM,EACgB,SAAY,CACpC,GAAA,CACE,GAAA,CAACqB,GAAM,SAAU,CACnBG,EAAW,EAAK,EAChB,MAAA,CAGI,MAAA0L,EAAY,MAAM/K,GAAOF,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,CAAC,EAC5D,GAAA6L,EAAU,SAAU,CAChB,MAAA3F,EAAa2F,EAAU,KAAK,EAClC,GAAI,CAAC3F,EAAW,kBAAoB,CAACA,EAAW,eAAgB,CAC9D/F,EAAW,EAAK,EAChB,MAAA,CAGF+7E,EAAwB/1E,IAAA,CACtB,GAAGA,EACH,QAASD,EAAW,iBACpB,cAAeA,EAAW,eAC1B,UAAW,UAAUA,EAAW,eAAe,YAAa,CAAA,OAC5D,YAAaA,EAAW,aAAe,CAAA,EACvC,CAAA,CAEJ/F,EAAW,EAAK,QACTsB,EAAO,CACN,QAAA,MAAM,oCAAqCA,CAAK,EACxDtB,EAAW,EAAK,CAAA,CAEpB,GAEsB,CAAA,EACrB,CAACH,GAAM,QAAQ,CAAC,EAEfE,EACK,OAAArB,MAAC,OAAI,UAAU,gDACpB,eAAC,MAAI,CAAA,UAAU,6EAA6E,CAC9F,CAAA,EAIF,GAAI,CAACo9E,EAAY,SAAW,CAACA,EAAY,cAErC,OAAAp9E,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,qDACb,SAAAwE,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,gBACb,SAAAA,MAAC,OAAI,UAAU,0BAA0B,QAAQ,YAAY,KAAK,eAChE,SAACA,EAAA,IAAA,OAAA,CAAK,SAAS,UAAU,EAAE,oNAAoN,SAAS,UAAU,EACpQ,CACF,CAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAEpD,2CAAA,QACC,MAAI,CAAA,UAAU,+BACb,SAACA,MAAA,IAAA,CAAE,oHAEH,CACF,CAAA,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAMqiB,EAAS,iBAAiB,EACzC,UAAU,4NACX,SAAA,gBAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAIE,MAAAizD,EAAqB9tE,GAAM,CAC/B,KAAM,CAAE,KAAA2oB,EAAM,MAAApwB,CAAM,EAAIyH,EAAE,OAExB61E,EADEltD,IAAS,WACa7oB,IAAA,CACtB,GAAGA,EACH,SAAUvH,EACV,YAAa,GACb,YAAa,GACb,cAAe,CAAC,EAChB,eAAgB,CAAA,CAAC,GAGKuH,IAAA,CACtB,GAAGA,EACH,CAAC6oB,CAAI,EAAGpwB,CAAA,EAJR,CAON,EAEMk+E,EAAqBz2E,GAAM,CAC/B,MAAM02E,EAAQ,MAAM,KAAK12E,EAAE,OAAO,KAAK,EAGvC,GAAIw1E,EAAW,OAASkB,EAAM,OAAS,EAAG,CACxC96E,EAAM,MAAM,0BAA0B,EACtC,MAAA,CAKE,GADiB86E,EAAM,OAAOxpE,GAAQA,EAAK,KAAO,EAAI,KAAO,IAAI,EACpD,OAAS,EAAG,CAC3BtR,EAAM,MAAM,kCAAkC,EAC9C,MAAA,CAIF,MAAM+6E,EAAcD,EAAM,OAAY,IAAI,gBAAgBxpE,CAAI,CAAC,EAE/DuoE,KAAsB,CAAC,GAAG31E,EAAM,GAAG42E,CAAK,CAAC,EACzCf,KAAwB,CAAC,GAAG71E,EAAM,GAAG62E,CAAW,CAAC,CACnD,EAEMC,EAAel0E,GAAU,CACzB,IAAA,gBAAgBgzE,EAAahzE,CAAK,CAAC,EACzB+yE,EAAA31E,GAAQA,EAAK,OAAO,CAACiH,EAAGC,IAAMA,IAAMtE,CAAK,CAAC,EACxCizE,EAAA71E,GAAQA,EAAK,OAAO,CAACiH,EAAGC,IAAMA,IAAMtE,CAAK,CAAC,CAC5D,EAEMm0E,EAAe,MAAOH,GAAU,CACpC,MAAMI,EAAiBJ,EAAM,IAAI,MAAOxpE,GAAS,CAC/C,MAAM6pE,EAAaC,GAAI59E,GAAS,YAAYO,EAAK,GAAG,IAAI,KAAK,IAAI,CAAC,IAAIuT,EAAK,IAAI,EAAE,EAC3E8B,EAAW,MAAMioE,GAAYF,EAAY7pE,CAAI,EAC5C,OAAAgqE,GAAeloE,EAAS,GAAG,CAAA,CACnC,EAEM,OAAA,QAAQ,IAAI8nE,CAAc,CACnC,EAEMn6D,EAAe,MAAO3c,GAAM,CAChCA,EAAE,eAAe,EACjBu1E,EAAc,EAAI,EAEd,GAAA,CAEE,GAAA,CAAC57E,GAAM,SAAU,CACnBiC,EAAM,MAAM,iDAAiD,EAC7D25E,EAAc,EAAK,EACnB,MAAA,CAII,MAAA/vE,EAAY,MAAM/K,GAAOF,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,CAAC,EAC5D,GAAA,CAAC6L,EAAU,SAAU,CACvB5J,EAAM,MAAM,8BAA8B,EAC1C25E,EAAc,EAAK,EACnB,MAAA,CAEI,MAAA11E,EAAa2F,EAAU,KAAK,EAG9B,GAAA,CAACowE,EAAY,MAAQ,CAACA,EAAY,aAAe,CAACA,EAAY,MAAO,CACvEh6E,EAAM,MAAM,oCAAoC,EAChD25E,EAAc,EAAK,EACnB,MAAA,CAIE,GAAAC,EAAW,SAAW,EAAG,CAC3B55E,EAAM,MAAM,uCAAuC,EACnD25E,EAAc,EAAK,EACnB,MAAA,CAII,MAAA4B,EAAY,MAAMN,EAAarB,CAAU,EAG/C,GAAIgB,EAAuB,GAAAZ,EAAY,aAAeA,EAAY,cAAc,SAAW,EAAG,CAC5Fh6E,EAAM,MAAM,sCAAsC,EAClD25E,EAAc,EAAK,EACnB,MAAA,CAIF,GAAIK,EAAY,aACQ,OAAO,OAAOA,EAAY,eAAe,EAAE,OAAO,CAACx0E,GAAKg2E,IAAQh2E,GAAM,OAAOg2E,CAAG,EAAG,CAAC,IACpF,EAAG,CACvBx7E,EAAM,MAAM,mDAAmD,EAC/D25E,EAAc,EAAK,EACnB,MAAA,CAKJ,IAAI8B,EAAiB,KACjBzB,EAAY,aAAeA,EAAY,iBACzCyB,EAAiB,IAAI,KAAKzB,EAAY,cAAc,EAAE,YAAY,GAIpE,MAAM0B,EAAkB1B,EAAY,YAClC,OAAOA,EAAY,KAAK,GAAK,EAAI,OAAOA,EAAY,eAAe,EAAI,KACvE,OAAOA,EAAY,KAAK,EAGpB2B,EAAiB,CACrB,KAAM3B,EAAY,KAClB,YAAaA,EAAY,YACzB,MAAO,OAAOA,EAAY,KAAK,EAC/B,SAAUA,EAAY,SACtB,YAAaA,EAAY,YACzB,OAAQuB,EACR,QAASvB,EAAY,QACrB,cAAeA,EAAY,cAC3B,UAAWA,EAAY,UACvB,YAAa,OAAOA,EAAY,WAAW,EAC3C,aAAcA,EAAY,aAC1B,YAAaA,EAAY,YACzB,MAAOA,EAAY,YAAcA,EAAY,cAAgB,CAAC,EAC9D,OAAQA,EAAY,YAAcA,EAAY,eAAiB,CAAC,EAChE,gBAAiBA,EAAY,YAAcA,EAAY,gBAAkB,CAAC,EAC1E,SAAUA,EAAY,YACpB,OAAO,OAAOA,EAAY,eAAe,EAAE,OAAO,CAAC1zE,GAAGC,KAAMD,GAAI,OAAOC,EAAC,EAAG,CAAC,EAC5E,OAAOyzE,EAAY,QAAQ,EAC7B,YAAaA,EAAY,YACzB,gBAAiBA,EAAY,YAAc,OAAOA,EAAY,eAAe,EAAI,EACjF,eAAAyB,EACA,gBAAAC,EACA,OAAQ,SACR,UAAW1oE,GAAgB,EAC3B,UAAWA,GAAgB,EAC3B,SAAUjV,EAAK,SACf,WAAYkG,EAAW,WAAa,YACpC,UAAW,CACb,EAGA,OAAO,KAAK03E,CAAc,EAAE,QAAeh0C,IAAA,EACrCg0C,EAAeh0C,EAAG,IAAM,QAAag0C,EAAeh0C,EAAG,IAAM,IAAMg0C,EAAeh0C,EAAG,IAAM,OAC7F,OAAOg0C,EAAeh0C,EAAG,CAC3B,CACD,EAED,MAAM50B,GAAS,MAAMR,GAAOnT,GAAW9B,GAAI,UAAU,EAAGq+E,CAAc,EAEtE37E,EAAM,QAAQ,4BAA4B,EACjCif,EAAA,wBAAwBlM,GAAO,EAAE,EAAE,QACrCvT,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5CQ,EAAM,MAAM,uBAAuB,CAAA,QACnC,CACA25E,EAAc,EAAK,CAAA,CAEvB,EAEMiC,EAAoBl9C,GAAS,CACjCu7C,EAAwB/1E,IAAA,CACtB,GAAGA,EACH,cAAeA,EAAK,cAAc,SAASw6B,CAAI,EAC3Cx6B,EAAK,cAAc,OAAOoJ,GAAKA,IAAMoxB,CAAI,EACzC,CAAC,GAAGx6B,EAAK,cAAew6B,CAAI,CAAA,EAChC,CACJ,EAEMm9C,EAAqBC,GAAU,CACnC7B,EAAwB/1E,IAAA,CACtB,GAAGA,EACH,eAAgBA,EAAK,eAAe,SAAS43E,EAAM,IAAI,EACnD53E,EAAK,eAAe,UAAY63E,IAAMD,EAAM,IAAI,EAChD,CAAC,GAAG53E,EAAK,eAAgB43E,EAAM,IAAI,CAAA,EACvC,CACJ,EASME,EAA0B,CAACC,EAAcC,IAAY,CACzDjC,EAAwB/1E,IAAA,CACtB,GAAGA,EACH,YAAa,GAAG+3E,CAAY,MAAMC,CAAO,EAAA,EACzC,CACJ,EAGMrrD,EAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMoD,EAAe,CACnB,OAAQ,CAAE,EAAG,GAAI,QAAS,CAAE,EAC5B,QAAS,CACP,EAAG,EACH,QAAS,EACT,WAAY,CACV,KAAM,SACN,UAAW,GAAA,CACb,CAEJ,EAEA,OAAIh2B,QACMs7E,GAAmB,EAAA,EAI3Bn4E,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAW,yBAAyB5O,EAAa,cAAgB,YAAY,GAC7E,QAAQ,SACR,QAAQ,UACR,SAAUu0B,EAEV,SAAA,CAAAj0B,EAAAA,IAAC,SAAO,SAAO08E,EAAA,CAAA,SACd,MAAI,CAAA,UAAW,GAAGh9E,EAAa,cAAgB,UAAU,6BACxD,SAAA,CAAA8E,EAAA,KAAC8J,EAAO,IAAP,CAAW,SAAU+oB,EACpB,SAAA,CAAAr3B,EAAAA,IAAC,MAAG,UAAW,sBAAsBN,EAAa,gBAAkB,eAAe,QAAS,SAAe,iBAAA,CAAA,EAC3GM,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,gBAAiB,SAAgD,kDAAA,CAAA,CAAA,EAClI,EAEC8E,EAAA,KAAA,OAAA,CAAK,SAAU2f,EAAc,UAAU,YAEtC,SAAA,CAAC3f,EAAAA,KAAA8J,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAW,GAAG33B,EAAa,iBAAmB,YAAY,kBAC5F,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,yCAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,wCAEZ,SAAA,CAAa04E,EAAA,IAAI,CAACj5D,EAAK/Z,IACtB1F,EAAA,KAAC8J,EAAO,IAAP,CAEC,UAAU,mEACV,QAAS,CAAE,QAAS,EAAG,MAAO,EAAI,EAClC,QAAS,CAAE,QAAS,EAAG,MAAO,CAAE,EAChC,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAA,CAAAtO,EAAA,IAAC,MAAA,CACC,IAAKikB,EACL,IAAK,WAAW/Z,EAAQ,CAAC,GACzB,UAAU,4BAAA,CACZ,EACAlK,EAAA,IAACsO,EAAO,OAAP,CACC,KAAK,SACL,UAAU,uHACV,WAAY,CAAE,MAAO,GAAI,EACzB,SAAU,CAAE,MAAO,EAAI,EACvB,QAAS,IAAM8vE,EAAYl0E,CAAK,EAEhC,SAAAlK,EAAAA,IAACmiB,GAAQ,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACrB,CAAA,EAnBK8B,CAAA,CAqBR,EAGAi5D,EAAa,OAAS,GACrB14E,EAAA,KAAC8J,EAAO,MAAP,CACC,UAAW,mDACT5O,EACI,yCACA,wCACN,+EACEA,EAAa,cAAgB,UAC/B,GACA,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAExB,SAAA,CAAAM,MAACmgB,IAAW,UAAW,wBAA6D,EACpFngB,EAAAA,IAAC,QAAK,UAAW,WAAWN,EAAa,gBAAkB,eAAe,QAAS,SAAS,WAAA,CAAA,EAC5FM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,OAAO,UACP,SAAUi+E,EACV,UAAU,SACV,SAAQ,EAAA,CAAA,CACV,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,EACF,SAGC3vE,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAU,wCAC5C,SAAA,CAAA7yB,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,gBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,OACL,MAAOo9E,EAAY,KACnB,SAAU9H,EACV,SAAQ,GACR,UAAW,2BACT51E,EACI,gEACA,+DACN,qFACA,YAAY,oBAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,YAAA,CAAA,EACA8E,EAAA,KAAC,SAAA,CACC,KAAK,WACL,MAAO44E,EAAY,SACnB,SAAU9H,EACV,SAAQ,GACR,UAAW,2BACT51E,EACI,yCACA,wCACN,4HAEA,SAAA,CAACM,EAAA,IAAA,SAAA,CAAO,MAAM,GAAG,SAAe,kBAAA,EAC/BA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAQ,WAAA,EAChCA,EAAA,IAAA,SAAA,CAAO,MAAM,cAAc,SAAW,cAAA,EACtCA,EAAA,IAAA,SAAA,CAAO,MAAM,cAAc,SAAW,cAAA,EACtCA,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAI,OAAA,EACxBA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAG,MAAA,EACtBA,EAAA,IAAA,SAAA,CAAO,MAAM,eAAe,SAAY,cAAA,CAAA,CAAA,CAAA,CAAA,CAC3C,CACF,CAAA,CAAA,EACF,GAGEo9E,EAAY,WAAa,YAAcA,EAAY,WAAa,gBAC/D54E,OAAA8J,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAW,GAAG33B,EAAa,iBAAmB,YAAY,kBAC5F,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,gBAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,wCAEb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,YACZ,SAAO,OAAA,QAAQo9E,EAAY,WAAa,WAAaI,EAAyBC,CAAyB,EACrG,IAAI,CAAC,CAAC4B,EAAcE,CAAQ,IAC5B/6E,EAAA,KAAA,MAAA,CAAuB,UAAW,GAAG9E,EAAa,cAAgB,UAAU,kBAC3E,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,QAAU,SAAa2/E,CAAA,CAAA,QAClG,MAAI,CAAA,UAAU,yBACZ,SAASE,EAAA,IAAKD,GACbt/E,EAAA,IAAC,SAAA,CAEC,KAAK,SACL,QAAS,IAAMo/E,EAAwBC,EAAcC,CAAO,EAC5D,UAAW,wEACTlC,EAAY,cAAgB,GAAGiC,CAAY,MAAMC,CAAO,GACpD,0BACA5/E,EACE,8CACA,6CACR,GAEC,SAAA4/E,CAAA,EAXIA,CAAA,CAaR,CACH,CAAA,CAAA,GAnBQD,CAoBV,CACD,EACH,SAGC,MAAI,CAAA,UAAW,GAAG3/E,EAAa,cAAgB,UAAU,kBACxD,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,QAAS,SAAiB,mBAAA,CAAA,EACrG09E,EAAY,YACV54E,EAAA,KAAA,MAAA,CAAI,UAAW,GAAG9E,EAAa,iBAAmB,YAAY,WAAWA,EAAa,qBAAuB,iBAAiB,kBAC7H,SAAA,CAAA8E,EAAA,KAAC,IAAE,CAAA,UAAW9E,EAAa,gBAAkB,gBAC3C,SAAA,CAACM,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAc,iBAAA,EAAQ,IACnDo9E,EAAY,YAAY,MAAM,KAAK,EAAE,CAAC,CAAA,EACzC,SACC,IAAE,CAAA,UAAW,GAAG19E,EAAa,gBAAkB,eAAe,QAC7D,SAAA,CAACM,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAa,gBAAA,EAAQ,IAClDo9E,EAAY,YAAY,MAAM,KAAK,EAAE,CAAC,CAAA,CACzC,CAAA,CACF,CAAA,CAAA,QAEC,MAAI,CAAA,UAAW,GAAG19E,EAAa,+CAAiD,0CAA0C,yBAA0B,SAErJ,wCAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,GAIA09E,EAAY,WAAa,YAAcA,EAAY,WAAa,gBAC/D54E,OAAA,MAAA,CAAI,UAAW,GAAG9E,EAAa,iBAAmB,YAAY,kBAC7D,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAG,cACH,KAAK,cACL,QAASo9E,EAAY,YACrB,SAAW51E,GAAM,CACf61E,EAAwB/1E,IAAA,CACtB,GAAGA,EACH,YAAaE,EAAE,OAAO,QACtB,MAAOA,EAAE,OAAO,QAAUF,EAAK,cAAgB,CAAC,EAChD,OAAQE,EAAE,OAAO,QAAUF,EAAK,eAAiB,CAAA,CAAC,EAClD,CACJ,EACA,UAAU,qEAAA,CACZ,EACAtH,EAAAA,IAAC,QAAM,CAAA,QAAQ,cAAc,UAAW,4BAA4BN,EAAa,gBAAkB,eAAe,GAAI,SAEtH,0CAAA,CAAA,CAAA,EACF,EAEC09E,EAAY,aACV54E,OAAA,MAAA,CAAI,UAAU,wCAEb,SAAA,CAAAA,OAAC,OAAI,UAAW,GAAG9E,EAAa,cAAgB,UAAU,kBACxD,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,iBAAA,CAAA,EACCM,EAAA,IAAA,MAAA,CAAI,UAAU,uBACZ,SAAkBg+E,EAAA,EAEjBpB,GAAW,IACT96C,GAAA9hC,EAAA,IAAC,SAAA,CAEC,KAAK,SACL,QAAS,IAAMg/E,EAAiBl9C,CAAI,EACpC,UAAW,gEACTs7C,EAAY,cAAc,SAASt7C,CAAI,EACnC,0BACApiC,EACE,8CACA,6CACR,GAEC,SAAAoiC,CAAA,EAXIA,CAaR,CAAA,EAGDw7C,EAAM,IACJx7C,GAAA9hC,EAAA,IAAC,SAAA,CAEC,KAAK,SACL,QAAS,IAAMg/E,EAAiBl9C,CAAI,EACpC,UAAW,gEACTs7C,EAAY,cAAc,SAASt7C,CAAI,EACnC,0BACApiC,EACE,8CACA,6CACR,GAEC,SAAAoiC,CAAA,EAXIA,CAaR,CAAA,CAEL,CAAA,CAAA,EACF,SAGC,MAAI,CAAA,UAAW,GAAGpiC,EAAa,cAAgB,UAAU,kBACxD,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,+BAAA,CAAA,QACC,MAAI,CAAA,UAAU,YACZ,SAAA69E,EAAO,IAAa2B,GAAA,CACnB,MAAM1rC,EAAa4pC,EAAY,eAAe,SAAS8B,EAAM,IAAI,EAE/D,OAAA16E,EAAA,KAAC,MAAqB,CAAA,UAAU,0BAC9B,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMy6E,EAAkBC,CAAK,EACtC,UAAW,iGACT1rC,EACI,0BACA9zC,EACE,8CACA,6CACR,GAEA,SAAA,CAAAM,EAAA,IAAC,OAAA,CACC,UAAU,2DACV,MAAO,CAAE,gBAAiBk/E,EAAM,KAAM,CAAA,CACxC,EACAl/E,EAAAA,IAAC,OAAM,CAAA,SAAAk/E,EAAM,IAAK,CAAA,CAAA,CAAA,CACpB,EAEC1rC,GACCxzC,EAAA,IAAC,MAAI,CAAA,UAAU,uBACb,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,IAAI,IACJ,MAAOo9E,EAAY,gBAAgB8B,EAAM,IAAI,GAAK,GAClD,SAAW13E,GAAM,CACT,MAAAzH,EAAQ,KAAK,IAAI,EAAG,SAASyH,EAAE,OAAO,KAAK,GAAK,CAAC,EACvD61E,EAAwB/1E,IAAA,CACtB,GAAGA,EACH,gBAAiB,CACf,GAAGA,EAAK,gBACR,CAAC43E,EAAM,IAAI,EAAGn/E,CAAA,CAChB,EACA,CACJ,EACA,UAAW,8IACTL,EACI,yCACA,wCACN,GACA,YAAY,UAAA,CAAA,CAEhB,CAAA,CAAA,CAAA,EA1CMw/E,EAAM,IA4ChB,CAEH,CAAA,EACH,EAGC9B,EAAY,eAAe,OAAS,SAClC,MAAI,CAAA,UAAW,sBAAsB19E,EAAa,kBAAoB,iBAAiB,GACtF,SAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,4CACb,SAAA,CAAAxE,MAAC,OAAK,CAAA,UAAWN,EAAa,gBAAkB,gBAAiB,SAAe,kBAAA,EAChFM,MAAC,QAAK,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAC3E,SAAO,OAAA,OAAO09E,EAAY,eAAe,EAAE,OAAO,CAAC1zE,EAAGC,IAAMD,EAAIC,EAAG,CAAC,CACvE,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,SAID2E,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAU,wCAC5C,SAAA,CAAA7yB,OAAC,OAAI,UAAW,GAAG9E,EAAa,iBAAmB,YAAY,kBAC7D,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,iBAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,EAAA,IAAC,MAAI,CAAA,UAAU,aACZ,SAAAyhE,EAAS,OAAOziD,GAAWA,EAAQ,KAAOo+D,EAAY,OAAO,EAAE,IAC9Dp+D,GAAAxa,EAAA,KAAC,MAAA,CAEC,UAAW,0EACT9E,EAAa,iBAAmB,YAClC,yBAEA,SAAA,CAACM,EAAAA,IAAA,MAAA,CAAI,IAAKgf,EAAQ,KAAM,IAAKA,EAAQ,KAAM,UAAU,SAAU,CAAA,EAC/Dhf,EAAAA,IAAC,QAAK,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAK,SAAAsf,EAAQ,IAAK,CAAA,CAAA,CAAA,EAN3FA,EAAQ,EAQhB,CAAA,EACH,EAEAxa,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,QACL,MAAOo9E,EAAY,MACnB,SAAU9H,EACV,SAAQ,GACR,IAAI,IACJ,KAAK,OACL,UAAW,qHACT51E,EACI,yCACA,wCACN,GACA,YAAY,MAAA,CACd,EACAM,EAAAA,IAAC,OAAI,UAAW,iDACdN,EACI,4CACA,0CACN,yDACG,SAAA09E,EAAY,aACf,CAAA,CAAA,EACF,EAGA54E,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAG,cACH,QAASo9E,EAAY,YACrB,SAAW51E,GAAM,CACf61E,EAAwB/1E,IAAA,CACtB,GAAGA,EACH,YAAaE,EAAE,OAAO,QACtB,gBAAiBA,EAAE,OAAO,QAAUF,EAAK,gBAAkB,CAAA,EAC3D,CACJ,EACA,UAAU,qEAAA,CACZ,EACAtH,EAAAA,IAAC,QAAM,CAAA,QAAQ,cAAc,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,GAAI,SAEjH,gBAAA,CAAA,CAAA,EACF,EAEC09E,EAAY,aACV54E,OAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,kBACL,MAAOo9E,EAAY,gBACnB,SAAW51E,GAAM,CACf,MAAMzH,EAAQ,KAAK,IAAI,KAAK,IAAI,EAAG,OAAOyH,EAAE,OAAO,KAAK,CAAC,EAAG,EAAE,EAC9D61E,EAAwB/1E,IAAA,CACtB,GAAGA,EACH,gBAAiBvH,EACjB,gBAAiBuH,EAAK,OAAS,EAAIvH,EAAQ,IAAA,EAC3C,CACJ,EACA,IAAI,IACJ,IAAI,KACJ,UAAW,qHACTL,EACI,yCACA,wCACN,GACA,YAAY,2BAAA,CACd,EACAM,EAAAA,IAAC,OAAI,UAAW,iDACdN,EACI,4CACA,0CACN,yDAA0D,SAE1D,GAAA,CAAA,CAAA,EACF,EAEA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,kBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,iBACL,KAAK,iBACL,MAAOo9E,EAAY,eAAiB,IAAI,KAAKA,EAAY,cAAc,EAAE,YAAY,EAAE,UAAU,EAAG,EAAE,EAAI,GAC1G,SAAW51E,GAAM,CAIf,GAHqB,IAAI,KAAKA,EAAE,OAAO,KAAK,OAC5B,KAES,CACvBpE,EAAM,MAAM,sCAAsC,EAClD,MAAA,CAGFi6E,EAAwB/1E,IAAA,CACtB,GAAGA,EACH,eAAgBE,EAAE,OAAO,KAAA,EACzB,CACJ,EACA,IAAK,IAAI,KAAK,IAAI,KAAO,EAAA,QAAA,EAAY,GAAK,EAAE,YAAc,EAAA,MAAM,EAAG,EAAE,EACrE,UAAW,qHACT9H,EACI,yCACA,wCACN,EAAA,CAAA,CACF,EACF,EAEC09E,EAAY,gBAAkB,GAAKA,EAAY,MAAQ,GACrD54E,OAAA,MAAA,CAAI,UAAW,GACd9E,EAAa,oCAAsC,4BACrD,yBACE,SAAA,CAAA8E,EAAA,KAAC,IAAE,CAAA,UAAW9E,EAAa,gBAAkB,gBAC3C,SAAA,CAACM,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAe,kBAAA,EAAQ,IACpDo9E,EAAY,MAAM,IAAEA,EAAY,aAAA,EACnC,EACA54E,EAAAA,KAAC,IAAE,CAAA,UAAU,sBACX,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAiB,oBAAA,EAAQ,KACrDo9E,EAAY,OAAS,EAAIA,EAAY,gBAAkB,MAAM,QAAQ,CAAC,EAAE,IAAEA,EAAY,aAAA,EAC1F,SACC,IAAE,CAAA,UAAW,GAAG19E,EAAa,gBAAkB,eAAe,QAC7D,SAAA,CAACM,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAQ,WAAA,EAAQ,KAC5Co9E,EAAY,OAASA,EAAY,gBAAkB,MAAM,QAAQ,CAAC,EAAE,IAAEA,EAAY,aAAA,CACtF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEJ,SAGC,MAAI,CAAA,UAAW,qCACd19E,EAAa,oCAAsC,4BACrD,0BACE,SAAA,CAAAM,EAAA,IAAC,MAAA,CACC,IAAK,IAAIo9E,EAAY,cAAc,YAAa,CAAA,OAChD,IAAKA,EAAY,cACjB,UAAU,wBAAA,CACZ,EACC54E,EAAA,KAAA,IAAA,CAAE,UAAW9E,EAAa,gBAAkB,gBAAiB,SAAA,CAAA,sBACxCM,EAAA,IAAA,OAAA,CAAK,UAAU,cAAe,WAAY,cAAc,EAAO,OAAKA,EAAA,IAAA,OAAA,CAAK,UAAU,cACrG,SAASyhE,EAAA,KAAU3oC,GAAAA,EAAE,KAAOskD,EAAY,OAAO,GAAG,MAAQ,UAC3D,CAAA,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAEC,MAAI,CAAA,UAAW,GAAG19E,EAAa,iBAAmB,YAAY,kBAC7D,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,oBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,WACL,MAAOo9E,EAAY,SACnB,SAAU9H,EACV,SAAQ,GACR,IAAI,IACJ,UAAW,+GACT51E,EACI,yCACA,wCACN,GACA,YAAY,0BAAA,CAAA,CACd,CACF,CAAA,CAAA,EACF,EAGA8E,EAAAA,KAAC8J,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAW,GAAG33B,EAAa,iBAAmB,YAAY,kBAC5F,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,eAAA,CAAA,EACAM,EAAA,IAAC,WAAA,CACC,KAAK,cACL,MAAOo9E,EAAY,YACnB,SAAU9H,EACV,SAAQ,GACR,KAAM,EACN,UAAW,6GACT51E,EACI,yCACA,wCACN,GACA,YAAY,0BAAA,CAAA,CACd,EACF,EAGA8E,EAAAA,KAAC8J,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAW,GAAG33B,EAAa,iBAAmB,YAAY,kBAC5F,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAAgB,kBAAA,CAAA,EAC/G8E,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,oBAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,4CAA4CN,EAAa,gBAAkB,eAAe,GAAI,SAAC,GAAA,CAAA,EAChHM,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,cACL,IAAI,IACJ,KAAK,OACL,MAAOo9E,EAAY,YACnB,SAAQ,GACR,UAAW,oHACT19E,EACI,+CACA,0CACN,GACA,YAAY,MAAA,CAAA,CACd,EACF,EACAM,EAAAA,IAAC,KAAE,UAAW,gBAAgBN,EAAa,gBAAkB,eAAe,GAAI,SAEhF,4CAAA,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,sBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,eACL,MAAOo9E,EAAY,aACnB,SAAU9H,EACV,UAAW,+GACT51E,EACI,yCACA,wCACN,GACA,YAAY,oCAAA,CAAA,CACd,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QAGC4O,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAU,mBAC5C,SAAAr3B,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAU88E,EACV,UAAW,+CACTA,EAAa,iCAAmC,iCAClD,6CAEC,WAEGt4E,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAC/S,EAAAA,IAAA,MAAA,CAAI,UAAU,8EAA+E,CAAA,EAC9FA,EAAAA,IAAC,QAAK,SAAiB,mBAAA,CAAA,CAAA,CAAA,CACzB,EAEA,aAAA,CAAA,CAGN,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAEJ,EC5uCMk4E,GAAa,CACjB,KAAM,CACJ,KAAM,kBACN,KAAM,gBACN,SAAU,CACZ,EACA,KAAM,CACJ,KAAM,kBACN,KAAM,kBACN,SAAU,CAAA,CAEd,EAEMC,GAAgB,IAAM,CACpB,KAAA,CAAE,WAAAz4E,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,iBAAiB5O,EAAa,cAAgB,aAAa,cACtE,QAAS,CACP,QAAS,CAAC,GAAK,GAAK,EAAG,CACzB,EACA,WAAY,CACV,SAAU,IACV,OAAQ,IACR,KAAM,WAAA,CACR,CACF,CAEJ,EAEM8/E,GAAmB,IAAM,CACvB,KAAA,CAAE,WAAA9/E,CAAW,EAAIO,GAAS,EAE9B,OAAAuE,EAAA,KAAC,MAAI,CAAA,UAAU,kCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EAGAn4E,EAAAA,IAAC,OAAI,UAAU,uDACZ,UAAC,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACtBhK,OAAA,MAAA,CAAY,UAAW,GAAG9E,EAAa,cAAgB,UAAU,wCAChE,SAAA,CAAAM,MAAC,MAAI,CAAA,UAAU,gBACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,YACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,CAdQ,EAAA3pE,CAeV,CACD,CACH,CAAA,CAAA,EACF,CAEJ,EAEMixE,GAAgB,CAAC,CAAE,OAAAC,KAAa,CACpC,KAAM,CAACp5D,EAAcq5D,CAAe,EAAI//E,EAAAA,SAAS,CAAC,EAElDE,OAAAA,EAAAA,UAAU,IAAM,CACV,GAAA4/E,EAAO,QAAU,EAAG,OAElB,MAAA50C,EAAQ,YAAY,IAAM,CAC9B60C,EAAiBr4E,IAAUA,EAAO,GAAKo4E,EAAO,MAAM,GACnD,GAAI,EAEA,MAAA,IAAM,cAAc50C,CAAK,CAAA,EAC/B,CAAC40C,CAAM,CAAC,EAGTl7E,EAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAAinC,GAAA,CAAgB,QAAS,GACxB,SAAAjnC,EAAA,IAACsO,EAAO,IAAP,CAEC,IAAKoxE,EAAOp5D,CAAY,EACxB,IAAI,UACJ,UAAU,sCACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,KAAM,CAAE,QAAS,CAAE,EACnB,WAAY,CAAE,SAAU,EAAI,CAAA,EAPvBA,CAAA,EAST,EACCo5D,EAAO,OAAS,GACd1/E,EAAAA,IAAA,MAAA,CAAI,UAAU,6DACZ,SAAO0/E,EAAA,IAAI,CAACnxE,EAAGrE,IACdlK,EAAA,IAAC,MAAA,CAEC,UAAW,2DACTkK,IAAUoc,EAAe,WAAa,aACxC,EAAA,EAHKpc,CAAA,CAKR,CACH,CAAA,CAAA,EAEJ,CAEJ,EAEM01E,GAA0B,CAAC,CAAE,QAAAC,EAAS,UAAAre,EAAW,SAAAse,KAAe,CAC9D,KAAA,CAAE,WAAApgF,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,KAAM,CAAE,QAAS,CAAE,EACnB,UAAU,iFAEV,SAAA9J,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,MAAO,IAAM,QAAS,CAAE,EACnC,QAAS,CAAE,MAAO,EAAG,QAAS,CAAE,EAChC,KAAM,CAAE,MAAO,IAAM,QAAS,CAAE,EAChC,UAAW,GAAG5O,EAAa,cAAgB,UAAU,kCAErD,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAAc,gBAAA,CAAA,EACxGM,EAAA,IAAC,SAAA,CACC,QAAS8/E,EACT,UAAW,GAAGpgF,EAAa,oCAAsC,mCAAmC,GAEpG,SAAAM,EAAAA,IAACkgB,GAAI,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC3B,EACF,EAEA1b,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,uCACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAK6/E,EAAQ,OAAO,CAAC,EACrB,IAAKA,EAAQ,KACb,UAAU,4BAAA,CAAA,EAEd,SACC,MACC,CAAA,SAAA,CAAC7/E,EAAAA,IAAA,KAAA,CAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAK,WAAQ,IAAK,CAAA,SAC7F,IAAE,CAAA,UAAW,WAAWA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,WAASmgF,EAAQ,KAAA,CAAM,CAAA,CAAA,CACpG,CAAA,CAAA,EACF,EACA7/E,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAEnE,6EAAA,CAAA,CAAA,EACF,EAEA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS8/E,EACT,UAAW,aACTpgF,EACI,8CACA,6CACN,gCACD,SAAA,QAAA,CAED,EACAM,EAAA,IAAC,SAAA,CACC,QAASwhE,EACT,UAAU,gFACX,SAAA,gBAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,CAAA,CACF,CACF,CAEJ,EAEMue,GAAW,IAAM,CACrB,MAAM19D,EAAWC,GAAY,EACvB,CAAE,KAAAnhB,CAAK,EAAImC,GAAa,EACxB,CAAE,WAAA5D,CAAW,EAAIO,GAAS,EAC1B,CAAC+/E,EAAUC,CAAW,EAAIrgF,EAAAA,SAAS,CAAA,CAAE,EACrC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACsgF,EAAiBC,CAAkB,EAAIvgF,EAAAA,SAAS,IAAI,EACrD,CAACwgF,EAAmBC,CAAoB,EAAIzgF,EAAAA,SAAS,IAAI,EAE/DE,EAAAA,UAAU,IAAM,CACVqB,GAAM,UACR,QAAQ,IAAI,CACVm/E,EAAc,EACdC,EAAuB,CAAA,CACxB,CACH,EACC,CAACp/E,CAAI,CAAC,EAET,MAAMo/E,EAAyB,SAAY,CACrC,GAAA,CACI,MAAAvzE,EAAY,MAAM/K,GAAOF,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,CAAC,EAC5D6L,EAAU,UACSqzE,EAAArzE,EAAU,MAAM,QAEhCpK,EAAO,CACN,QAAA,MAAM,qCAAsCA,CAAK,CAAA,CAE7D,EAEM09E,EAAgB,SAAY,CAC5B,GAAA,CACF,MAAMh+E,EAAIC,GACRC,GAAW9B,GAAI,UAAU,EACzB+B,GAAM,WAAY,KAAMtB,EAAK,QAAQ,CACvC,EAGMq/E,GADgB,MAAM79E,GAAQL,CAAC,GACF,KAAK,IAAIP,GAAO,CAC3C,MAAAuG,EAAOvG,EAAI,KAAK,EAEtB,MAAI,CAACuG,EAAK,eAAiB83E,GAAmB,iBAC5C93E,EAAK,cAAgB83E,EAAkB,eACvC93E,EAAK,UAAY4vE,GAAWkI,EAAkB,cAAc,EAAE,MAEzD,CACL,GAAIr+E,EAAI,GACR,GAAGuG,CACL,CAAA,CACD,EAED23E,EAAYO,CAAY,QACjB59E,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC/CQ,EAAM,MAAM,yBAAyB,CAAA,QACrC,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEMm/E,EAAe,MAAOZ,GAAY,CACtCM,EAAmBN,CAAO,CAC5B,EAEMa,EAAgB,SAAY,CAC5B,GAAA,CACF,MAAMl/C,GAAUz/B,GAAIrB,GAAI,WAAYw/E,EAAgB,EAAE,CAAC,EACvD,MAAMS,EAAiBT,EAAgB,OAAO,IAAI,MAAO/jD,GAAa,CAC9D,MAAAykD,EAAWpC,GAAI59E,GAASu7B,CAAQ,EACtC,OAAO0kD,GAAaD,CAAQ,CAAA,CAC7B,EACK,MAAA,QAAQ,IAAID,CAAc,EACpBV,EAAA34E,GAAQA,EAAK,OAAO6yB,GAAKA,EAAE,KAAO+lD,EAAgB,EAAE,CAAC,EACjE98E,EAAM,QAAQ,8BAA8B,QACrCR,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,EAAM,MAAM,0BAA0B,CAAA,QACtC,CACA+8E,EAAmB,IAAI,CAAA,CAE3B,EAEMlsD,EAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMoD,EAAe,CACnB,OAAQ,CAAE,EAAG,GAAI,QAAS,CAAE,EAC5B,QAAS,CACP,EAAG,EACH,QAAS,EACT,WAAY,CACV,KAAM,SACN,UAAW,GAAA,CACb,CAEJ,EAEA,OAAIh2B,QACMm+E,GAAiB,EAAA,EAKvBh7E,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAAvO,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAW,yBAAyB5O,EAAa,cAAgB,YAAY,GAC7E,QAAQ,SACR,QAAQ,UACR,SAAUu0B,EAEV,SAAA,CAACzvB,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,GAAP,CACC,UAAW,qBAAqB5O,EAAa,gBAAkB,eAAe,GAC9E,SAAU23B,EACX,SAAA,aAAA,CAED,EACCr3B,EAAA,IAAAsO,EAAO,IAAP,CAAW,SAAU+oB,EACpB,SAAA7yB,EAAA,KAACI,GAAA,CACC,GAAG,2BACH,UAAU,sHAEV,SAAA,CAAC5E,EAAAA,IAAA4uC,GAAA,CAAO,UAAU,SAAU,CAAA,EAAE,iBAAA,CAAA,CAAA,CAGlC,CAAA,CAAA,EACF,EAECoxC,EAAS,SAAW,EACnBx7E,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAW,oBAAoB5O,EAAa,gBAAkB,eAAe,GAC7E,SAAU23B,EAEV,SAAA,CAACr3B,EAAA,IAAA,IAAA,CAAE,UAAU,OAAO,SAAmC,sCAAA,EACvDA,EAAA,IAAC4E,GAAA,CACC,GAAG,2BACH,UAAU,kDACX,SAAA,wBAAA,CAAA,CAED,CAAA,CAAA,EAGF5E,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,uDACV,SAAU2lB,EAET,SAAA+rD,EAAS,IAAKH,GACbr7E,EAAA,KAAC8J,EAAO,IAAP,CAEC,UAAW,GAAG5O,EAAa,cAAgB,UAAU,wCACrD,SAAU23B,EACV,WAAY,CAAE,EAAG,EAAG,EAEpB,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAAy/E,GAAA,CAAc,OAAQI,EAAQ,MAAQ,CAAA,EACvCr7E,EAAAA,KAAC,MAAI,CAAA,UAAU,sIACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,OAAP,CACC,WAAY,CAAE,MAAO,GAAI,EACzB,SAAU,CAAE,MAAO,EAAI,EACvB,UAAU,4CACV,QAAS,IAAM+T,EAAS,6BAA6Bw9D,EAAQ,EAAE,EAAE,EAEjE,SAAA7/E,EAAAA,IAAC8gF,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAC9B,EACA9gF,EAAA,IAACsO,EAAO,OAAP,CACC,WAAY,CAAE,MAAO,GAAI,EACzB,SAAU,CAAE,MAAO,EAAI,EACvB,UAAU,2CACV,QAAS,IAAMmyE,EAAaZ,CAAO,EAEnC,SAAA7/E,EAAAA,IAACmiB,GAAQ,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC/B,CACF,CAAA,CAAA,EACF,EACA3d,EAAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACxE,EAAAA,IAAA,KAAA,CAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,2BAA6B,WAAQ,IAAK,CAAA,EACtH8E,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK6/E,EAAQ,WAAa3H,GAAW2H,EAAQ,aAAa,GAAG,KAC7D,IAAKA,EAAQ,cACb,UAAU,SAAA,CACZ,EACAr7E,EAAAA,KAAC,IAAE,CAAA,UAAU,qCAAqC,SAAA,CAAA,IAC9Cq7E,EAAQ,MAAM,QAAQ,CAAC,CAAA,CAC3B,CAAA,CAAA,EACF,SACC,IAAE,CAAA,UAAW,WAAWngF,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,UACjEmgF,EAAQ,QAAA,CAClB,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EAzCKA,EAAQ,EA2ChB,CAAA,CAAA,CAAA,CACH,CAAA,CAEJ,EAEA7/E,EAAAA,IAACinC,IACE,SACCi5C,GAAAlgF,EAAA,IAAC4/E,GAAA,CACC,QAASM,EACT,UAAWQ,EACX,SAAU,IAAMP,EAAmB,IAAI,CAAA,CAAA,CAG7C,CAAA,CAAA,EACF,CAEJ,ECxYMzD,GAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqETqE,GAAe,CACnB,QAAS,CACP,KAAM,UACN,KAAM,eACN,OAAQ,CACN,KAAM,CACJ,KAAM,kBACN,KAAM,gBACN,SAAU,CACZ,EACA,KAAM,CACJ,KAAM,kBACN,KAAM,kBACN,SAAU,CAAA,CACZ,CAEJ,EACA,SAAU,CACR,KAAM,WACN,KAAM,qBACN,OAAQ,CACN,KAAM,CACJ,KAAM,kBACN,KAAM,gBACN,SAAU,CACZ,EACA,KAAM,CACJ,KAAM,kBACN,KAAM,kBACN,SAAU,CAAA,CACZ,CACF,CAEJ,EAEMnE,GAAa,CACjB,eACA,mBACA,eACA,mBACA,eACA,mBACA,eACA,mBACA,gBACA,oBACA,gBACA,oBACA,gBACA,eACF,EAEMoE,GAAc,IAAM,CAClB,KAAA,CAAE,KAAA7/E,CAAK,EAAImC,GAAa,EACxB+e,EAAWC,GAAY,EACvB,CAAE,GAAArO,CAAG,EAAI2mB,GAAU,EACnB,CAAE,WAAAl7B,CAAW,EAAIO,GAAS,EAC1B,CAACoB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACk9E,EAAYC,CAAa,EAAIn9E,EAAAA,SAAS,EAAK,EAC5C,CAACqhF,EAAWC,CAAY,EAAIthF,EAAAA,SAAS,EAAK,EAC1C,CAACuhF,EAAiBC,CAAkB,EAAIxhF,EAAAA,SAAS,IAAI,EACrD,CAACyhF,EAAYC,CAAa,EAAI1hF,EAAAA,SAAS,EAAK,EAa5Cy3B,EAAe,CACnB,OAAQ,CAAE,EAAG,GAAI,QAAS,CAAE,EAC5B,QAAS,CACP,EAAG,EACH,QAAS,EACT,WAAY,CACV,KAAM,SACN,UAAW,GAAA,CACb,CAEJ,EAEM,CAACwoD,EAAS0B,CAAU,EAAI3hF,WAAS,CACrC,KAAM,GACN,YAAa,GACb,MAAO,GACP,SAAU,GACV,SAAU,GACV,YAAa,GACb,OAAQ,CAAC,EACT,QAAS,UACT,cAAe,OACf,UAAW,kBACX,YAAa,EACb,aAAc,GACd,YAAa,GACb,MAAO,CAAC,EACR,OAAQ,CAAC,EACT,gBAAiB,CAAC,EAClB,YAAa,GACb,gBAAiB,CAAA,CAClB,EAEK49E,EAAyB,CAC7B,aAAc,CACZ,WACA,SACA,QACA,UACA,UACA,OACF,EACA,eAAgB,CACd,UACA,OACA,SACA,QACA,UACA,SACF,EACA,SAAY,CACV,WACA,eACA,QACA,UACA,UAAA,CAEJ,EAEMC,EAA4B,CAChC,sBAAuB,CACrB,OACA,QACA,OACA,UACA,SACF,EACA,mBAAoB,CAClB,cACA,cACA,kBACA,gBACA,WACA,aACA,WACA,cACA,gBACA,cAAA,CAEJ,EAEA39E,EAAAA,UAAU,IAAM,CACD0hF,EAAA,CAAA,EACZ,CAACvtE,CAAE,CAAC,EAEPnU,EAAAA,UAAU,IAAM,CACd,GAAIqhF,EAAiB,CACnB,MAAMM,EAAmB,KAAK,UAAUN,CAAe,IAAM,KAAK,UAAUtB,CAAO,EACnFyB,EAAcG,CAAgB,CAAA,CAChC,EACC,CAAC5B,EAASsB,CAAe,CAAC,EAE7B,MAAMK,EAAe,SAAY,CAC3B,GAAA,CACF,MAAME,EAAa,MAAMz/E,GAAOF,GAAIrB,GAAI,WAAYuT,CAAE,CAAC,EACnD,GAAAytE,EAAW,SAAU,CACjB,MAAAp5E,EAAOo5E,EAAW,KAAK,EACzB,GAAAp5E,EAAK,WAAanH,EAAK,SAAU,CACnCiC,EAAM,MAAM,iDAAiD,EAC7Dif,EAAS,uBAAuB,EAChC,MAAA,CAII,MAAArV,EAAY,MAAM/K,GAAOF,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,CAAC,EAC5D,GAAA6L,EAAU,SAAU,CAChB,MAAA3F,EAAa2F,EAAU,KAAK,EAC9B,GAAA,CAAC3F,EAAW,iBAAkB,CAChCjE,EAAM,MAAM,qDAAqD,EACjEif,EAAS,uBAAuB,EAChC,MAAA,CAGF/Z,EAAK,QAAUjB,EAAW,iBAC1BiB,EAAK,cAAgBjB,EAAW,eAC3BiB,EAAA,YAAcjB,EAAW,aAAe,CAAA,CAG/C,MAAM+1E,EAAc,CAClB,GAAG90E,EACH,YAAaA,EAAK,aAAe,GACjC,MAAOA,EAAK,OAAS,CAAC,EACtB,OAAQA,EAAK,QAAU,CAAC,EACxB,gBAAiBA,EAAK,iBAAmB,CAAA,CAC3C,EAEAi5E,EAAWnE,CAAW,EACtBgE,EAAmBhE,CAAW,CAAA,MAE9Bh6E,EAAM,MAAM,mBAAmB,EAC/Bif,EAAS,uBAAuB,QAE3Bzf,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,EAAM,MAAM,wBAAwB,CAAA,QACpC,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEMg0E,EAAqB9tE,GAAM,CAC/B,KAAM,CAAE,KAAA2oB,EAAM,MAAApwB,CAAM,EAAIyH,EAAE,OAExB+5E,EADEpxD,IAAS,WACS7oB,IAAA,CAClB,GAAGA,EACH,SAAUvH,EACV,YAAa,GACb,YAAa,GACb,MAAO,CAAC,EACR,OAAQ,CAAA,CAAC,GAGSuH,IAAA,CAClB,GAAGA,EACH,CAAC6oB,CAAI,EAAGpwB,CAAA,EAJR,CAON,EAEMq/E,EAA0B,CAACC,EAAcC,IAAY,CACzDiC,EAAoBj6E,IAAA,CAClB,GAAGA,EACH,YAAa,GAAG+3E,CAAY,MAAMC,CAAO,EAAA,EACzC,CACJ,EAEMrB,EAAoB,MAAOz2E,GAAM,CACrC,MAAM02E,EAAQ,MAAM,KAAK12E,EAAE,OAAO,KAAK,EACvC,GAAI02E,EAAM,OAAS2B,EAAQ,OAAO,OAAS,EAAG,CAC5Cz8E,EAAM,MAAM,0BAA0B,EACtC,MAAA,CAGF89E,EAAa,EAAI,EACb,GAAA,CACF,MAAM5C,EAAiBJ,EAAM,IAAI,MAAOxpE,GAAS,CAC/C,GAAIA,EAAK,KAAO,QACR,MAAA,IAAI,MAAM,kCAAkC,EAG9C,MAAA6pE,EAAaC,GAAI59E,GAAS,YAAYO,EAAK,QAAQ,IAAI8S,CAAE,IAAIS,EAAK,IAAI,EAAE,EACxE,aAAA+pE,GAAYF,EAAY7pE,CAAI,EAC3BgqE,GAAeH,CAAU,CAAA,CACjC,EAEK/6C,EAAO,MAAM,QAAQ,IAAI86C,CAAc,EAC7CiD,EAAoBj6E,IAAA,CAClB,GAAGA,EACH,OAAQ,CAAC,GAAGA,EAAK,OAAQ,GAAGk8B,CAAI,CAAA,EAChC,EACFpgC,EAAM,QAAQ,8BAA8B,QACrCR,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EACxCQ,EAAA,MAAMR,EAAM,SAAW,yBAAyB,CAAA,QACtD,CACAs+E,EAAa,EAAK,CAAA,CAEtB,EAEMS,EAAoB,MAAOxlD,EAAUjyB,IAAU,CAC/C,GAAA,CACI,MAAA02E,EAAWpC,GAAI59E,GAASu7B,CAAQ,EACtC,MAAM0kD,GAAaD,CAAQ,EAC3BW,EAAoBj6E,IAAA,CAClB,GAAGA,EACH,OAAQA,EAAK,OAAO,OAAO,CAACiH,EAAGC,IAAMA,IAAMtE,CAAK,CAAA,EAChD,EACF9G,EAAM,QAAQ,4BAA4B,QACnCR,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5CQ,EAAM,MAAM,wBAAwB,CAAA,CAExC,EAEM+gB,EAAe,MAAO3c,GAAM,CAChCA,EAAE,eAAe,EACjBu1E,EAAc,EAAI,EAEd,GAAA,CAEE,GAAA,CAAC8C,EAAQ,MAAQ,CAACA,EAAQ,aAAe,CAACA,EAAQ,MAAO,CAC3Dz8E,EAAM,MAAM,oCAAoC,EAChD25E,EAAc,EAAK,EACnB,MAAA,CAIF,GAAI,CAAC8C,EAAQ,QAAUA,EAAQ,OAAO,SAAW,EAAG,CAClDz8E,EAAM,MAAM,0CAA0C,EACtD25E,EAAc,EAAK,EACnB,MAAA,CAIE,GAAAiB,EAAA,GAAuB6B,EAAQ,cAC7B,CAACA,EAAQ,OAASA,EAAQ,MAAM,SAAW,GAAG,CAChDz8E,EAAM,MAAM,8CAA8C,EAC1D25E,EAAc,EAAK,EACnB,MAAA,CAKJ,IAAI+B,EAAkB,KAClBe,EAAQ,aAAeA,EAAQ,kBACjCf,EAAkBe,EAAQ,OAAS,EAAIA,EAAQ,gBAAkB,MAInE,MAAM+B,EAAa,CACjB,KAAM/B,EAAQ,KACd,YAAaA,EAAQ,YACrB,MAAO,WAAWA,EAAQ,KAAK,EAC/B,SAAUA,EAAQ,SAClB,YAAaA,EAAQ,YACrB,OAAQA,EAAQ,OAChB,YAAaA,EAAQ,YACrB,YAAaA,EAAQ,YACrB,gBAAiBA,EAAQ,YAAc,WAAWA,EAAQ,eAAe,EAAI,KAC7E,eAAgBA,EAAQ,YAAc,IAAI,KAAKA,EAAQ,cAAc,EAAE,YAAA,EAAgB,KACvF,gBAAAf,EACA,UAAW1oE,GAAgB,CAC7B,EAGIypE,EAAQ,cACV+B,EAAW,MAAQ/B,EAAQ,MAC3B+B,EAAW,OAAS/B,EAAQ,OAC5B+B,EAAW,gBAAkB/B,EAAQ,iBAIvC,OAAO,KAAK+B,CAAU,EAAE,QAAe72C,GAAA,EACjC62C,EAAW72C,CAAG,IAAM,MAAQ62C,EAAW72C,CAAG,IAAM,SAClD,OAAO62C,EAAW72C,CAAG,CACvB,CACD,EAGD,MAAM82C,EAAa9/E,GAAIrB,GAAI,WAAYuT,CAAE,EACnC,MAAAnD,GAAU+wE,EAAYD,CAAU,EAEtCx+E,EAAM,QAAQ,8BAA8B,EACnCif,EAAA,wBAAwBpO,CAAE,EAAE,QAC9BrR,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,EAAM,MAAM,6CAA6C,CAAA,QACzD,CACA25E,EAAc,EAAK,CAAA,CAEvB,EAEMiB,EAAoB,IACjB6B,EAAQ,aACRA,EAAQ,YAAY,MAAM,KAAK,EAAE,CAAC,IAAM,WAGjD,OAAIx+E,EAEArB,EAAAA,IAAC,MAAI,CAAA,UAAU,gDACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,sEACV,QAAS,CAAE,OAAQ,GAAI,EACvB,WAAY,CAAE,SAAU,EAAG,OAAQ,IAAU,KAAM,QAAS,CAAA,CAAA,EAEhE,EAKF9J,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAW,yBAAyB5O,EAAa,cAAgB,YAAY,GAE7E,SAAA,CAAAM,EAAAA,IAAC,SAAO,SAAO08E,EAAA,CAAA,SACd,MAAI,CAAA,UAAW,GAAGh9E,EAAa,cAAgB,UAAU,6BACxD,SAAA,CAAC8E,EAAAA,KAAA8J,EAAO,IAAP,CACC,SAAA,CAAAtO,EAAAA,IAAC,MAAG,UAAW,sBAAsBN,EAAa,gBAAkB,eAAe,QAAS,SAAY,cAAA,CAAA,EACxGM,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,gBAAiB,SAAmD,qDAAA,CAAA,CAAA,EACrI,EAEC8E,EAAA,KAAA,OAAA,CAAK,SAAU2f,EAAc,UAAU,YAEtC,SAAA,CAAA3f,OAAC,OAAI,UAAW,GAAG9E,EAAa,iBAAmB,YAAY,kBAC7D,SAAA,CAAA8E,EAAAA,KAAC,SAAM,UAAW,6BAA6B9E,EAAa,gBAAkB,eAAe,QAAS,SAAA,CAAA,mBACnFmgF,EAAQ,OAAO,OAAO,KAAA,EACzC,EACAr7E,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACZ,SAAA,CAAQq7E,EAAA,OAAO,IAAI,CAAC57D,EAAK/Z,IACvB1F,EAAA,KAAA,MAAA,CAAgB,UAAU,mEACzB,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKikB,EACL,IAAK,WAAW/Z,EAAQ,CAAC,GACzB,UAAU,4BAAA,CACZ,EACAlK,EAAA,IAACsO,EAAO,OAAP,CACC,KAAK,SACL,QAAS,IAAMqzE,EAAkB19D,EAAK/Z,CAAK,EAC3C,UAAU,uHACV,WAAY,CAAE,MAAO,GAAI,EACzB,SAAU,CAAE,MAAO,EAAI,EAEvB,SAAAlK,EAAAA,IAACmiB,GAAQ,CAAA,KAAM,EAAI,CAAA,CAAA,CAAA,CACrB,CAAA,EAdQjY,CAeV,CACD,EACA21E,EAAQ,OAAO,OAAS,GACvBr7E,EAAA,KAAC8J,EAAO,MAAP,CACC,UAAW,mDACT5O,EACI,yCACA,wCACN,+EACEA,EAAa,cAAgB,UAC/B,GACA,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAExB,SAAA,CAAAM,MAAC8hF,IAAS,UAAW,wBAA6D,EAClF9hF,EAAAA,IAAC,QAAK,UAAW,WAAWN,EAAa,gBAAkB,eAAe,QAAS,SAAS,WAAA,CAAA,EAC5FM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,OAAO,UACP,SAAQ,GACR,SAAUi+E,EACV,UAAU,SACV,SAAUgD,CAAA,CAAA,CACZ,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,EACF,EAGAz8E,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,gBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,OACL,MAAO6/E,EAAQ,KACf,SAAUvK,EACV,SAAQ,GACR,UAAW,6BACT51E,EACI,gEACA,+DACN,qFACA,YAAY,oBAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,YAAA,CAAA,EACA8E,EAAA,KAAC,SAAA,CACC,KAAK,WACL,MAAOq7E,EAAQ,SACf,SAAUvK,EACV,SAAQ,GACR,UAAW,6BACT51E,EACI,yCACA,wCACN,4HAEA,SAAA,CAACM,EAAA,IAAA,SAAA,CAAO,MAAM,GAAG,SAAe,kBAAA,EAC/BA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAQ,WAAA,EAChCA,EAAA,IAAA,SAAA,CAAO,MAAM,cAAc,SAAW,cAAA,EACtCA,EAAA,IAAA,SAAA,CAAO,MAAM,cAAc,SAAW,cAAA,EACtCA,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAI,OAAA,EACxBA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAG,MAAA,EACtBA,EAAA,IAAA,SAAA,CAAO,MAAM,eAAe,SAAY,cAAA,CAAA,CAAA,CAAA,CAAA,CAC3C,CACF,CAAA,CAAA,EACF,GAGE6/E,EAAQ,WAAa,YAAcA,EAAQ,WAAa,gBACvDr7E,OAAA8J,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAW,GAAG33B,EAAa,iBAAmB,YAAY,kBAC5F,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,gBAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,wCAEb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,YACZ,SAAO,OAAA,QAAQ6/E,EAAQ,WAAa,WAAarC,EAAyBC,CAAyB,EACjG,IAAI,CAAC,CAAC4B,EAAcE,CAAQ,IAC5B/6E,EAAA,KAAA,MAAA,CAAuB,UAAW,GAAG9E,EAAa,cAAgB,UAAU,kBAC3E,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,QAAU,SAAa2/E,CAAA,CAAA,QAClG,MAAI,CAAA,UAAU,yBACZ,SAASE,EAAA,IAAKD,GACbt/E,EAAA,IAAC,SAAA,CAEC,KAAK,SACL,QAAS,IAAMo/E,EAAwBC,EAAcC,CAAO,EAC5D,UAAW,wEACTO,EAAQ,cAAgB,GAAGR,CAAY,MAAMC,CAAO,GAChD,0BACA5/E,EACE,8CACA,6CACR,GAEC,SAAA4/E,CAAA,EAXIA,CAAA,CAaR,CACH,CAAA,CAAA,GAnBQD,CAoBV,CACD,EACH,SAGC,MAAI,CAAA,UAAW,GAAG3/E,EAAa,cAAgB,UAAU,kBACxD,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,QAAS,SAAiB,mBAAA,CAAA,EACrGmgF,EAAQ,YACNr7E,EAAA,KAAA,MAAA,CAAI,UAAW,GAAG9E,EAAa,iBAAmB,YAAY,WAAWA,EAAa,qBAAuB,iBAAiB,kBAC7H,SAAA,CAAA8E,EAAA,KAAC,IAAE,CAAA,UAAW9E,EAAa,gBAAkB,gBAC3C,SAAA,CAACM,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAc,iBAAA,EAAQ,IACnD6/E,EAAQ,YAAY,MAAM,KAAK,EAAE,CAAC,CAAA,EACrC,SACC,IAAE,CAAA,UAAW,GAAGngF,EAAa,gBAAkB,eAAe,QAC7D,SAAA,CAACM,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAa,gBAAA,EAAQ,IAClD6/E,EAAQ,YAAY,MAAM,KAAK,EAAE,CAAC,CAAA,CACrC,CAAA,CACF,CAAA,CAAA,QAEC,MAAI,CAAA,UAAW,GAAGngF,EAAa,+CAAiD,0CAA0C,yBAA0B,SAErJ,wCAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAGD,MAAI,CAAA,UAAW,GAAGA,EAAa,iBAAmB,YAAY,kBAC7D,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,eAAA,CAAA,EACAM,EAAA,IAAC,WAAA,CACC,KAAK,cACL,MAAO6/E,EAAQ,YACf,SAAUvK,EACV,SAAQ,GACR,KAAM,EACN,UAAW,sIACT51E,EACI,yCACA,wCACN,GACA,YAAY,0BAAA,CAAA,CACd,CACF,CAAA,CAAA,EACF,SAGC4O,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAU,wCAC5C,SAAA,CAAA7yB,OAAC,OAAI,UAAW,GAAG9E,EAAa,iBAAmB,YAAY,kBAC7D,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,iBAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,MAAA,MAAA,CAAI,UAAU,aACZ,SAAA,OAAO,QAAQ+gF,EAAY,EACzB,OAAO,CAAC,CAAC/hE,CAAO,IAAMA,IAAY6gE,EAAQ,OAAO,EACjD,IAAI,CAAC,CAAC7gE,EAASinD,CAAI,IAClBzhE,EAAA,KAAC,MAAA,CAEC,UAAW,0EACT9E,EAAa,iBAAmB,YAClC,yBAEA,SAAA,CAAAM,EAAA,IAAC,MAAA,CACC,IAAKimE,EAAK,KACV,IAAKA,EAAK,KACV,UAAU,SAAA,CACZ,EACAjmE,EAAAA,IAAC,QAAK,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAK,SAAAumE,EAAK,IAAK,CAAA,CAAA,CAAA,EAVxFjnD,CAYV,CAAA,EACH,EAEAxa,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,QACL,MAAO6/E,EAAQ,MACf,SAAUvK,EACV,SAAQ,GACR,IAAI,IACJ,KAAK,OACL,UAAW,qHACT51E,EACI,yCACA,wCACN,GACA,YAAY,MAAA,CACd,EACAM,EAAAA,IAAC,OAAI,UAAW,iDACdN,EACI,4CACA,0CACN,yDACG,SAAAmgF,EAAQ,aACX,CAAA,CAAA,EACF,EAGAr7E,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAG,cACH,QAAS6/E,EAAQ,YACjB,SAAWr4E,GAAM,CACf+5E,EAAoBj6E,IAAA,CAClB,GAAGA,EACH,YAAaE,EAAE,OAAO,QACtB,gBAAiBA,EAAE,OAAO,QAAUF,EAAK,gBAAkB,CAAA,EAC3D,CACJ,EACA,UAAU,qEAAA,CACZ,EACAtH,EAAAA,IAAC,QAAM,CAAA,QAAQ,cAAc,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,GAAI,SAEjH,gBAAA,CAAA,CAAA,EACF,EAECmgF,EAAQ,aACNr7E,OAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,kBACL,MAAO6/E,EAAQ,gBACf,SAAWr4E,GAAM,CACf,MAAMzH,EAAQ,KAAK,IAAI,KAAK,IAAI,EAAG,OAAOyH,EAAE,OAAO,KAAK,CAAC,EAAG,EAAE,EAC9D+5E,EAAoBj6E,IAAA,CAClB,GAAGA,EACH,gBAAiBvH,EACjB,gBAAiBuH,EAAK,OAAS,EAAIvH,EAAQ,IAAA,EAC3C,CACJ,EACA,IAAI,IACJ,IAAI,KACJ,UAAW,qHACTL,EACI,yCACA,wCACN,GACA,YAAY,2BAAA,CACd,EACAM,EAAAA,IAAC,OAAI,UAAW,iDACdN,EACI,4CACA,0CACN,yDAA0D,SAE1D,GAAA,CAAA,CAAA,EACF,EAEA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,kBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,iBACL,KAAK,iBACL,MAAO6/E,EAAQ,eAAiB,IAAI,KAAKA,EAAQ,cAAc,EAAE,YAAY,EAAE,MAAM,EAAG,EAAE,EAAI,GAC9F,SAAWr4E,GAAM,CACf,MAAMu6E,EAAe,IAAI,KAAKv6E,EAAE,OAAO,KAAK,EAG5C,GAAIu6E,OAFY,KAES,CACvB3+E,EAAM,MAAM,sCAAsC,EAClD,MAAA,CAGFm+E,EAAoBj6E,IAAA,CAClB,GAAGA,EACH,eAAgBy6E,EAAa,YAAY,CAAA,EACzC,CACJ,EACA,IAAK,IAAI,KAAK,IAAI,KAAO,EAAA,QAAA,EAAY,GAAK,EAAE,YAAc,EAAA,MAAM,EAAG,EAAE,EACrE,UAAW,qHACTriF,EACI,yCACA,wCACN,EAAA,CAAA,CACF,EACF,EAECmgF,EAAQ,gBAAkB,GAAKA,EAAQ,MAAQ,GAC7Cr7E,OAAA,MAAA,CAAI,UAAW,GACd9E,EAAa,oCAAsC,4BACrD,yBACE,SAAA,CAAA8E,EAAA,KAAC,IAAE,CAAA,UAAW9E,EAAa,gBAAkB,gBAC3C,SAAA,CAACM,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAe,kBAAA,EAAQ,IACpD6/E,EAAQ,MAAM,IAAEA,EAAQ,aAAA,EAC3B,EACAr7E,EAAAA,KAAC,IAAE,CAAA,UAAU,sBACX,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAiB,oBAAA,EAAQ,KACrD6/E,EAAQ,OAAS,EAAIA,EAAQ,gBAAkB,MAAM,QAAQ,CAAC,EAAE,IAAEA,EAAQ,aAAA,EAC9E,SACC,IAAE,CAAA,UAAW,GAAGngF,EAAa,gBAAkB,eAAe,QAC7D,SAAA,CAACM,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAQ,WAAA,EAAQ,KAC5C6/E,EAAQ,OAASA,EAAQ,gBAAkB,MAAM,QAAQ,CAAC,EAAE,IAAEA,EAAQ,aAAA,CAC1E,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEJ,SAGC,MAAI,CAAA,UAAW,qCACdngF,EAAa,oCAAsC,4BACrD,0BACE,SAAA,CAAAM,EAAA,IAAC,MAAA,CACC,IAAK,IAAI6/E,EAAQ,cAAc,YAAa,CAAA,OAC5C,IAAKA,EAAQ,cACb,UAAU,wBAAA,CACZ,EACCr7E,EAAA,KAAA,IAAA,CAAE,UAAW9E,EAAa,gBAAkB,gBAAiB,SAAA,CAAA,sBACxCM,EAAA,IAAA,OAAA,CAAK,UAAU,cAAe,WAAQ,cAAc,EAAO,OAAIA,EAAAA,IAAC,QAAK,UAAU,cACjG,YAAa6/E,EAAQ,OAAO,GAAG,MAAQ,UACxC,CAAA,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAEC,MAAI,CAAA,UAAW,GAAGngF,EAAa,iBAAmB,YAAY,kBAC7D,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,oBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,WACL,MAAO6/E,EAAQ,SACf,SAAUvK,EACV,SAAQ,GACR,IAAI,IACJ,UAAW,+GACT51E,EACI,yCACA,wCACN,GACA,YAAY,0BAAA,CAAA,CACd,CACF,CAAA,CAAA,EACF,GAGEmgF,EAAQ,WAAa,YAAcA,EAAQ,WAAa,gBACvDr7E,OAAA,MAAA,CAAI,UAAW,GAAG9E,EAAa,iBAAmB,YAAY,kBAC7D,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAG,cACH,KAAK,cACL,QAAS6/E,EAAQ,YACjB,SAAWr4E,GAAM,CACf+5E,EAAoBj6E,IAAA,CAClB,GAAGA,EACH,YAAaE,EAAE,OAAO,QACtB,MAAOA,EAAE,OAAO,QAAUF,EAAK,MAAQ,CAAC,EACxC,OAAQE,EAAE,OAAO,QAAUF,EAAK,OAAS,CAAA,CAAC,EAC1C,CACJ,EACA,UAAU,qEAAA,CACZ,EACAtH,EAAAA,IAAC,QAAM,CAAA,QAAQ,cAAc,UAAW,4BAA4BN,EAAa,gBAAkB,eAAe,GAAI,SAEtH,0CAAA,CAAA,CAAA,EACF,EAECmgF,EAAQ,aACNr7E,OAAA,MAAA,CAAI,UAAU,wCAEb,SAAA,CAAAA,OAAC,OAAI,UAAW,GAAG9E,EAAa,cAAgB,UAAU,kBACxD,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,iBAAA,CAAA,EACCM,EAAA,IAAA,MAAA,CAAI,UAAU,uBACZ,SAAkBg+E,EAAA,EAEjBpB,GAAW,IACT96C,GAAA9hC,EAAA,IAAC,SAAA,CAEC,KAAK,SACL,QAAS,IAAM,CACbuhF,EAAoBj6E,IAAA,CAClB,GAAGA,EACH,MAAOA,EAAK,MAAM,SAASw6B,CAAI,EAC3Bx6B,EAAK,MAAM,OAAOoJ,GAAKA,IAAMoxB,CAAI,EACjC,CAAC,GAAGx6B,EAAK,MAAOw6B,CAAI,CAAA,EACxB,CACJ,EACA,UAAW,gEACT+9C,EAAQ,MAAM,SAAS/9C,CAAI,EACvB,0BACApiC,EACE,8CACA,6CACR,GAEC,SAAAoiC,CAAA,EAlBIA,CAoBR,CAAA,EAGD,CAAC,KAAM,IAAK,IAAK,IAAK,KAAM,MAAO,KAAK,EAAE,IACxCA,GAAA9hC,EAAA,IAAC,SAAA,CAEC,KAAK,SACL,QAAS,IAAM,CACbuhF,EAAoBj6E,IAAA,CAClB,GAAGA,EACH,MAAOA,EAAK,MAAM,SAASw6B,CAAI,EAC3Bx6B,EAAK,MAAM,OAAOoJ,GAAKA,IAAMoxB,CAAI,EACjC,CAAC,GAAGx6B,EAAK,MAAOw6B,CAAI,CAAA,EACxB,CACJ,EACA,UAAW,gEACT+9C,EAAQ,MAAM,SAAS/9C,CAAI,EACvB,0BACApiC,EACE,8CACA,6CACR,GAEC,SAAAoiC,CAAA,EAlBIA,CAoBR,CAAA,CAEL,CAAA,CAAA,EACF,SAGC,MAAI,CAAA,UAAW,GAAGpiC,EAAa,cAAgB,UAAU,kBACxD,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,+BAAA,CAAA,EACAM,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CACC,CAAE,KAAM,QAAS,KAAM,SAAU,EACjC,CAAE,KAAM,QAAS,KAAM,SAAU,EACjC,CAAE,KAAM,OAAQ,KAAM,SAAU,EAChC,CAAE,KAAM,MAAO,KAAM,SAAU,EAC/B,CAAE,KAAM,OAAQ,KAAM,SAAU,EAChC,CAAE,KAAM,QAAS,KAAM,SAAU,EACjC,CAAE,KAAM,SAAU,KAAM,SAAU,EAClC,CAAE,KAAM,SAAU,KAAM,SAAU,EAClC,CAAE,KAAM,OAAQ,KAAM,SAAU,EAChC,CAAE,KAAM,QAAS,KAAM,SAAU,CAAA,EACjC,IAAKk/E,GAAU,CACf,MAAM1rC,EAAaqsC,EAAQ,OAAO,SAASX,EAAM,IAAI,EAEnD,OAAA16E,EAAA,KAAC,MAAqB,CAAA,UAAU,0BAC9B,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAM,CACP,MAAAw9E,EAAYnC,EAAQ,OAAO,SAASX,EAAM,IAAI,EAChDW,EAAQ,OAAO,UAAYV,IAAMD,EAAM,IAAI,EAC3C,CAAC,GAAGW,EAAQ,OAAQX,EAAM,IAAI,EAG5B+C,EAAqB,CAAE,GAAGpC,EAAQ,eAAgB,EACnDmC,EAAU,SAAS9C,EAAM,IAAI,GACzB,OAAA+C,EAAmB/C,EAAM,IAAI,EAGtCqC,EAAoBj6E,IAAA,CAClB,GAAGA,EACH,OAAQ06E,EACR,gBAAiBC,CAAA,EACjB,CACJ,EACA,UAAW,iGACTzuC,EACI,0BACA9zC,EACE,8CACA,6CACR,GAEA,SAAA,CAAAM,EAAA,IAAC,OAAA,CACC,UAAU,2DACV,MAAO,CAAE,gBAAiBk/E,EAAM,IAAK,CAAA,CACvC,EACAl/E,EAAAA,IAAC,OAAM,CAAA,SAAAk/E,EAAM,IAAK,CAAA,CAAA,CAAA,CACpB,EAEC1rC,GACCxzC,EAAA,IAAC,MAAI,CAAA,UAAU,uBACb,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,IAAI,IACJ,MAAO6/E,EAAQ,gBAAgBX,EAAM,IAAI,GAAK,GAC9C,SAAW13E,GAAM,CACT,MAAAzH,EAAQ,KAAK,IAAI,EAAG,SAASyH,EAAE,OAAO,KAAK,GAAK,CAAC,EACvD+5E,EAAoBj6E,IAAA,CAClB,GAAGA,EACH,gBAAiB,CACf,GAAGA,EAAK,gBACR,CAAC43E,EAAM,IAAI,EAAGn/E,CAAA,CAChB,EACA,CACJ,EACA,UAAW,8IACTL,EACI,yCACA,wCACN,GACA,YAAY,UAAA,CAAA,CAEhB,CAAA,CAAA,CAAA,EA1DMw/E,EAAM,IA4DhB,CAEH,CAAA,EACH,EAGCW,EAAQ,OAAO,OAAS,SACtB,MAAI,CAAA,UAAW,sBAAsBngF,EAAa,kBAAoB,iBAAiB,GACtF,SAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,4CACb,SAAA,CAAAxE,MAAC,OAAK,CAAA,UAAWN,EAAa,gBAAkB,gBAAiB,SAAe,kBAAA,EAChFM,MAAC,QAAK,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAC3E,SAAO,OAAA,OAAOmgF,EAAQ,eAAe,EAAE,OAAO,CAACn2E,EAAGC,IAAMD,EAAIC,EAAG,CAAC,CACnE,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EAIFnF,EAAAA,KAAC8J,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAW,GAAG33B,EAAa,iBAAmB,YAAY,kBAC5F,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAAgB,kBAAA,CAAA,EAC/G8E,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,oBAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,4CAA4CN,EAAa,gBAAkB,eAAe,GAAI,SAAC,GAAA,CAAA,EAChHM,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,cACL,IAAI,IACJ,KAAK,OACL,MAAO6/E,EAAQ,YACf,SAAQ,GACR,UAAW,oHACTngF,EACI,+CACA,0CACN,GACA,YAAY,MAAA,CAAA,CACd,EACF,EACAM,EAAAA,IAAC,KAAE,UAAW,gBAAgBN,EAAa,gBAAkB,eAAe,GAAI,SAEhF,4CAAA,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,sBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,eACL,MAAO6/E,EAAQ,aACf,SAAUvK,EACV,UAAW,+GACT51E,EACI,yCACA,wCACN,GACA,YAAY,oCAAA,CAAA,CACd,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMqiB,EAAS,uBAAuB,EAC/C,UAAW,sBACT3iB,EACI,kDACA,gDACN,gCACD,SAAA,QAAA,CAED,EACAM,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAU88E,GAAcmE,GAAa,CAACI,EACtC,UAAW,+CACTvE,GAAcmE,GAAa,CAACI,EACxB,iCACA,iCACN,6CAEC,WAEG78E,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAC/S,EAAAA,IAAA,MAAA,CAAI,UAAU,8EAA+E,CAAA,EAC9FA,EAAAA,IAAC,QAAK,SAAmB,qBAAA,CAAA,CAC3B,CAAA,CAAA,EACEihF,EAEAz8E,EAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAC/S,EAAAA,IAAA,MAAA,CAAI,UAAU,8EAA+E,CAAA,EAC9FA,EAAAA,IAAC,QAAK,SAAiB,mBAAA,CAAA,CAAA,CAAA,CACzB,EAEA,cAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAEJ,ECplCAkiF,GAAQ,SACNC,GACAC,GACAC,GACAC,GACAC,GACA3iD,GACA4iD,GACAC,GACAC,EACF,EAEA,MAAMC,GAAW,CAAC,CAAE,MAAA9nB,EAAO,MAAA96D,EAAO,KAAMuc,EAAM,MAAAsmE,EAAO,SAAAC,EAAU,eAAAC,EAAgB,YAAAx5E,KAAkB,CACzF,KAAA,CAAE,WAAA5J,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,WAAY,CAAE,EAAG,EAAG,EACpB,UAAW,GAAG5O,EAAa,cAAgB,UAAU,4CAErD,SAAA8E,EAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAK,SAAMm7D,CAAA,CAAA,EAClF76D,EAAAA,IAAC,KAAE,UAAW,qBAAqBN,EAAa,gBAAkB,eAAe,QAAU,SAAMK,CAAA,CAAA,EAChG6iF,GACCp+E,EAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAA+iF,GAAA,CAAa,UAAU,0BAA2B,CAAA,EACnDv+E,EAAAA,KAAC,OAAK,CAAA,UAAU,2BAA4B,SAAA,CAAAo+E,EAAM,mBAAA,CAAiB,CAAA,CAAA,EACrE,EAEDE,GACCt+E,EAAA,KAAC,IAAE,CAAA,UAAU,4BAA4B,SAAA,CAAA,YAAUs+E,CAAA,EAAe,EAEnED,GACCr+E,EAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,oBAAsB,SAASmjF,CAAA,CAAA,EACrGv5E,UACE,MAAI,CAAA,UAAW,yCAAyC5J,EAAa,cAAgB,UAAU,wHAC9F,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,oBAAoBN,EAAa,gBAAkB,eAAe,GAAI,SAAW,aAAA,CAAA,EAChG8E,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAxE,MAAC,OAAK,CAAA,UAAWN,EAAa,gBAAkB,gBAAiB,SAAU,aAAA,SAC1E,OAAK,CAAA,UAAW,eAAeA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAE4J,EAAY,UAAU,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,EACvH,EACA9E,EAAAA,KAAC,MAAI,CAAA,UAAU,uCACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,SAAQ,UAAA,CAAA,EACdwE,EAAAA,KAAC,OAAK,CAAA,UAAU,cAAc,SAAA,CAAA,IAAE8E,EAAY,QAAQ,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,EACjE,SACC,MAAI,CAAA,UAAW,kDAAkD5J,EAAa,kBAAoB,iBAAiB,GAClH,SAAA,CAAAM,MAAC,OAAK,CAAA,UAAWN,EAAa,gBAAkB,gBAAiB,SAAM,SAAA,EACtE8E,EAAA,KAAA,OAAA,CAAK,UAAW9E,EAAa,gBAAkB,gBAAiB,SAAA,CAAA,KAAG4J,EAAY,UAAYA,EAAY,SAAS,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,CAC9H,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEJ,EACCtJ,EAAA,IAAA,MAAA,CAAI,UAAW,OAAON,EAAa,iBAAmB,YAAY,cACjE,SAACM,MAAAsc,EAAA,CAAK,UAAU,wBAAA,CAAyB,CAC3C,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAEJ,EAEM67D,GAAgB,IAAM,CACpB,KAAA,CAAE,WAAAz4E,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,iBAAiB5O,EAAa,cAAgB,aAAa,cACtE,QAAS,CACP,QAAS,CAAC,GAAK,GAAK,EAAG,CACzB,EACA,WAAY,CACV,SAAU,IACV,OAAQ,IACR,KAAM,WAAA,CACR,CACF,CAEJ,EAEMsjF,GAAgB,IAAM,CACpB,KAAA,CAAE,WAAAtjF,CAAW,EAAIO,GAAS,EAE9B,OAAAuE,EAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EAGAn4E,EAAAA,IAAC,OAAI,UAAU,uDACZ,UAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACbxO,EAAAA,IAAA,MAAA,CAAY,UAAW,GAAGN,EAAa,cAAgB,UAAU,6BAChE,SAAA8E,EAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CACF,CAAA,CAAA,CAAA,EAhBQ3pE,CAiBV,CACD,EACH,SAGC,MAAI,CAAA,UAAW,GAAG9O,EAAa,cAAgB,UAAU,6BACxD,SAAA,CAAAM,MAAC,MAAI,CAAA,UAAU,gBACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,kBACb,SAAC3zE,EAAA,KAAA,QAAA,CAAM,UAAU,SACf,SAAA,CAAAxE,MAAC,QACC,CAAA,SAAAA,EAAA,IAAC,KAAG,CAAA,UAAW,sBAAsBN,EAAa,kBAAoB,iBAAiB,GACpF,UAAC,WAAY,WAAY,WAAY,QAAS,OAAQ,QAAQ,EAAE,IAAKujF,GACnEjjF,EAAAA,IAAA,KAAA,CAAgB,UAAU,OACzB,eAAC,MAAI,CAAA,UAAU,WACb,SAAAA,EAAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EAHO8K,CAIT,CACD,CACH,CAAA,EACF,QACC,QAAM,CAAA,UAAW,YAAYvjF,EAAa,kBAAoB,iBAAiB,GAC7E,SAAA,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAK8O,UACnB,KACC,CAAA,SAAA,CAACxO,EAAA,IAAA,KAAA,CAAG,UAAU,OACZ,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAU,WACb,SAAAA,EAAA,IAACm4E,GAAc,CAAA,CAAA,CACjB,CAAA,EACF,EACAn4E,EAAA,IAAC,KAAG,CAAA,UAAU,OACZ,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,WACb,SAAAA,EAAA,IAACm4E,GAAc,CAAA,CAAA,CACjB,CAAA,EACF,EACAn4E,EAAA,IAAC,KAAG,CAAA,UAAU,OACZ,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,WACb,SAAAA,EAAA,IAACm4E,GAAc,CAAA,CAAA,CACjB,CAAA,EACF,EACAn4E,EAAA,IAAC,KAAG,CAAA,UAAU,OACZ,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,WACb,SAAAA,EAAA,IAACm4E,GAAc,CAAA,CAAA,CACjB,CAAA,EACF,EACAn4E,EAAA,IAAC,KAAG,CAAA,UAAU,OACZ,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,WACb,SAAAA,EAAA,IAACm4E,GAAc,CAAA,CAAA,CACjB,CAAA,EACF,EACAn4E,EAAA,IAAC,KAAG,CAAA,UAAU,OACZ,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,WACb,SAAAA,EAAAA,IAACm4E,GAAc,CAAA,CAAA,CAAA,CACjB,CACF,CAAA,CAAA,CA9BO,EAAA3pE,CA+BT,CACD,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EAEM00E,GAA2B,CAAC,CAAE,OAAAv2E,KAAa,CACzC,KAAA,CAAE,WAAAjN,CAAW,EAAIO,GAAS,EAC1BkjF,EAAsBx2E,EAAO,OAAO,CAACujC,EAAK7pC,KACxCA,EAAA,MAAM,QAAgB1B,GAAA,CACrBurC,EAAIvrC,EAAK,IAAI,IACZurC,EAAAvrC,EAAK,IAAI,EAAI,GAEnBurC,EAAIvrC,EAAK,IAAI,GAAA,CACd,EACMurC,GACN,EAAE,EAGCkzC,EAAc,OAAO,QAAQD,CAAmB,EACnD,KAAK,CAAC,CAAE,CAAAz5E,CAAC,EAAG,CAAE,CAAAC,CAAC,IAAMA,EAAID,CAAC,EAC1B,MAAM,EAAG,CAAC,EAEPpB,EAAO,CACX,OAAQ86E,EAAY,IAAI,CAAC,CAACjzD,CAAI,IAAMA,CAAI,EACxC,SAAU,CAAC,CACT,KAAMizD,EAAY,IAAI,CAAC,CAAA,CAAEC,CAAK,IAAMA,CAAK,EACzC,gBAAiB,CACf,0BACA,0BACA,0BACA,yBACF,EACA,YAAa,EACb,aAAc,EACd,QAAS,CACV,CAAA,CACH,EAEMx2C,EAAU,CACd,OAAQ,MACR,QAAS,CACP,OAAQ,CACN,QAAS,EACX,EACA,QAAS,CACP,QAAS,GACT,gBAAiBntC,EAAa,UAAY,QAC1C,WAAYA,EAAa,UAAY,UACrC,UAAWA,EAAa,UAAY,UACpC,YAAaA,EAAa,UAAY,UACtC,YAAa,EACb,QAAS,GACT,WAAY,EACZ,cAAe,GACf,UAAW,CACT,MAAO,SAASQ,EAAS,CACvB,MAAO,GAAGA,EAAQ,KAAK,KAAKA,EAAQ,GAAG,OAAA,CACzC,CACF,CAEJ,EACA,oBAAqB,GACrB,OAAQ,CACN,QAAS,CAAA,CAEb,EAEMojF,EAAYF,EAAY,OAAO,CAACx6E,EAAK,CAAE,CAAAy6E,CAAK,IAAMz6E,EAAMy6E,EAAO,CAAC,EAEtE,cACG,MAAI,CAAA,UAAW,sBAAsB3jF,EAAa,cAAgB,UAAU,kBAE3E,SAAA,CAAAM,EAAAA,IAAC,OAAI,UAAU,YACb,eAACujF,GAAS,CAAA,KAAAj7E,EAAY,QAAAukC,EAAkB,CAC1C,CAAA,QAGC,MAAI,CAAA,UAAU,oDACb,SAACroC,EAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAxE,EAAAA,IAAC,KAAE,UAAW,qBAAqBN,EAAa,gBAAkB,eAAe,GAC9E,SACH4jF,CAAA,CAAA,EACAtjF,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAI,SAAK,OAAA,CAAA,CAAA,CAAA,CAClF,CACF,CAAA,QAGC,MAAI,CAAA,UAAU,wCACb,SAACM,EAAA,IAAA,MAAA,CAAI,UAAU,sCACZ,SAAAojF,EAAY,IAAI,CAAC,CAACjzD,EAAMkzD,CAAK,EAAGn5E,IAC9B1F,EAAA,KAAA,MAAA,CAAe,UAAU,4BACxB,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,UAAU,gCAAgC,MAAO,CACrD,gBAAiBsI,EAAK,SAAS,CAAC,EAAE,gBAAgB4B,CAAK,CAAA,EACtD,EACHlK,EAAAA,IAAC,OAAK,CAAA,UAAW,eAAeN,EAAa,gBAAkB,eAAe,yBAA0B,MAAOywB,EAC5G,SACHA,CAAA,CAAA,CAAA,GANQA,CAOV,CACD,CAAA,CACH,CACF,CAAA,CAAA,EACF,CAEJ,EAEMqzD,GAAc,CAAC,CAAE,OAAA72E,EAAQ,WAAAjN,KAAiB,CAC9C,MAAM+jF,EAAe92E,EAAO,OAAO,CAACujC,EAAK7pC,KACjCA,EAAA,MAAM,QAAgB1B,GAAA,CACrBurC,EAAIvrC,EAAK,IAAI,IACZurC,EAAAvrC,EAAK,IAAI,EAAI,CACf,MAAO,EACP,MAAOA,EAAK,MACZ,MAAOA,EAAK,KACd,GAEEurC,EAAAvrC,EAAK,IAAI,EAAE,OAAA,CAChB,EACMurC,GACN,EAAE,EAECkzC,EAAc,OAAO,QAAQK,CAAY,EAC5C,KAAK,CAAC,CAAA,CAAE/5E,CAAC,EAAG,CAAE,CAAAC,CAAC,IAAMA,EAAE,MAAQD,EAAE,KAAK,EACtC,MAAM,EAAG,CAAC,EAEb,OACG1J,EAAAA,IAAA,MAAA,CAAI,UAAU,YACZ,WAAY,IAAI,CAAC,CAACmwB,EAAM7nB,CAAI,IAC1B9D,EAAA,KAAA,MAAA,CAAe,UAAU,yCACxB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAK8D,EAAA,aACH,MAAI,CAAA,IAAKA,EAAK,MAAO,IAAK6nB,EAAM,UAAU,8BAA+B,CAAA,SAE3E,MACC,CAAA,SAAA,CAACnwB,EAAAA,IAAA,IAAA,CAAE,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,0BAA2B,MAAOywB,EAAO,SAAKA,CAAA,CAAA,SAChI,IAAE,CAAA,UAAW,eAAezwB,EAAa,gBAAkB,eAAe,GAAK,SAAA,CAAK4I,EAAA,MAAM,OAAA,CAAK,CAAA,CAAA,CAClG,CAAA,CAAA,EACF,SACC,OAAK,CAAA,UAAW,uBAAuB5I,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAE4I,EAAK,KAAA,CAAM,CAAA,CAAA,GAV/F6nB,CAWV,CACD,EACH,CAEJ,EAGMuzD,GAAa,CAAC,CAAE,YAAA99E,EAAa,WAAAq0B,EAAY,aAAA0pD,KAE3Cn/E,EAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM2jF,EAAa/9E,EAAc,CAAC,EAC3C,SAAUA,IAAgB,EAC1B,UAAU,4DACX,SAAA,GAAA,CAED,EACC,CAAC,GAAG,MAAMq0B,CAAU,CAAC,EAAE,IAAI,CAAC1rB,EAAGC,IAC9BxO,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM2jF,EAAan1E,EAAI,CAAC,EACjC,UAAW,gCACT5I,IAAgB4I,EAAI,EAChB,4BACA,iCACN,GAEC,SAAIA,EAAA,CAAA,EARAA,EAAI,CAAA,CAUZ,EACDxO,EAAA,IAAC,SAAA,CACC,QAAS,IAAM2jF,EAAa/9E,EAAc,CAAC,EAC3C,SAAUA,IAAgBq0B,EAC1B,UAAU,4DACX,SAAA,GAAA,CAAA,CAED,EACF,EAKE2pD,GAAqB,CAAC,CAAE,OAAAj3E,EAAQ,WAAAjN,KAAiB,CACrD,KAAM,CAACkG,EAAaC,CAAc,EAAIjG,EAAAA,SAAS,CAAC,EAC1CikF,EAAkB,EAElBC,EAAiBn3E,EAAO,OAAO,CAACujC,EAAK7pC,KACnCA,EAAA,MAAM,QAAgB1B,GAAA,EACtB,CAACurC,EAAIvrC,EAAK,IAAI,GAAK,IAAI,KAAK0B,EAAM,UAAU,QAAQ,EAAI,IAAI,KAAK6pC,EAAIvrC,EAAK,IAAI,EAAE,QAAQ,KACtFurC,EAAAvrC,EAAK,IAAI,EAAI,CACf,KAAMA,EAAK,KACX,MAAOA,EAAK,MACZ,MAAOA,EAAK,MACZ,SAAU0B,EAAM,UAAU,OAAO,CACnC,EACF,CACD,EACM6pC,GACN,EAAE,EAEC6zC,EAAc,OAAO,OAAOD,CAAc,EAC7C,KAAK,CAACp6E,EAAGC,IAAMA,EAAE,SAAWD,EAAE,QAAQ,EAEnCuwB,EAAa,KAAK,KAAK8pD,EAAY,OAASF,CAAe,EAC3DG,EAAqBp+E,EAAci+E,EACnCI,EAAsBD,EAAqBH,EAC3CK,EAAkBH,EAAY,MAAME,EAAqBD,CAAkB,EAG/E,OAAAx/E,EAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,yBACZ,SAAAkkF,EAAgB,IAAI,CAACrE,EAAS31E,IAC7B1F,EAAAA,KAAC,OAAgB,UAAW,GAAG9E,EAAa,iBAAmB,YAAY,0CACzE,SAAA,CAAAM,EAAA,IAAC,MAAA,CACC,IAAK6/E,EAAQ,MACb,IAAKA,EAAQ,KACb,UAAU,mCAAA,CACZ,EACAr7E,EAAAA,KAAC,MAAI,CAAA,UAAU,UACb,SAAA,CAACxE,EAAA,IAAA,IAAA,CAAE,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,YAAa,MAAOmgF,EAAQ,KAC5G,SAAAA,EAAQ,KACX,EACAr7E,EAAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAC3E,SAAA,IAAI,KAAKmgF,EAAQ,QAAQ,EAAE,qBAC9B,SACC,OAAK,CAAA,UAAW,2BAA2BngF,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAC1FmgF,EAAQ,KAAA,CACZ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,GAlBQ31E,CAmBV,CACD,EACH,EACC+vB,EAAa,GACZj6B,EAAA,IAAC0jF,GAAA,CACC,YAAA99E,EACA,WAAAq0B,EACA,aAAcp0B,CAAA,CAAA,CAChB,EAEJ,CAEJ,EAEMs+E,GAAQ,IAAM,CACZ,KAAA,CAAE,KAAAhjF,CAAK,EAAImC,GAAa,EACxB,CAAE,WAAA5D,CAAW,EAAIO,GAAS,EAC1B,CAACoB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACwM,EAAWC,CAAY,EAAIzM,WAAS,CACzC,aAAc,EACd,YAAa,EACb,eAAgB,EAChB,aAAc,CAAC,EACf,UAAW,CAAC,EACZ,eAAgB,EAChB,eAAgB,EAChB,mBAAoB,CAAA,CACrB,EACK,CAACgG,EAAaC,CAAc,EAAIjG,EAAAA,SAAS,CAAC,EAC1CsG,EAAgB,GAChB,CAACk+E,EAAaC,CAAc,EAAIzkF,WAAS,CAC7C,OAAQ,CAAC,EACT,SAAU,CAAA,CAAC,CACZ,EACK,CAAC0kF,EAAmBC,CAAoB,EAAI3kF,EAAAA,SAAS,SAAS,EAC5BA,EAAAA,SAAS,CAAC,GAAI,GAAI,GAAI,EAAE,CAAC,EAGjE,MAAM4kF,EAAe,CACnB,WAAY,GACZ,oBAAqB,GACrB,QAAS,CACP,OAAQ,CACN,QAAS,EACX,EACA,QAAS,CACP,KAAM,QACN,UAAW,GACX,gBAAiB9kF,EAAa,UAAY,QAC1C,WAAYA,EAAa,UAAY,UACrC,UAAWA,EAAa,UAAY,UACpC,YAAaA,EAAa,UAAY,UACtC,YAAa,EACb,QAAS,GACT,WAAY,EACZ,cAAe,GACf,UAAW,CACT,MAAO,SAASQ,EAAS,CACvB,MAAO,IAAIA,EAAQ,OAAO,EAAE,QAAQ,CAAC,CAAC,EAAA,CACxC,CACF,CAEJ,EACA,OAAQ,CACN,EAAG,CACD,KAAM,CACJ,QAAS,GACT,WAAY,EACd,EACA,MAAO,CACL,KAAM,CACJ,KAAM,EACR,EACA,MAAOR,EAAa,UAAY,SAAA,CAEpC,EACA,EAAG,CACD,YAAa,GACb,KAAM,CACJ,MAAOA,EAAa,4BAA8B,sBAClD,WAAY,EACd,EACA,MAAO,CACL,KAAM,CACJ,KAAM,EACR,EACA,MAAOA,EAAa,UAAY,UAChC,SAAU,SAASK,EAAO,CACxB,OAAIA,GAAS,IACJ,IAAOA,EAAM,IAAQ,IAEvB,IAAMA,CAAA,CACf,CACF,CAEJ,EACA,SAAU,CACR,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,OAAQ,CAAA,CACV,CAEJ,EAEAD,EAAAA,UAAU,IAAM,CACVqB,GACauL,EAAA,CACjB,EACC,CAACvL,EAAMmjF,CAAiB,CAAC,EAE5B,MAAM53E,EAAiB,SAAY,CAC7B,GAAA,CACI,MAAAgB,MAAU,KACV+2E,EAAoB,IAAI,KAAK/2E,EAAI,cAAeA,EAAI,SAAS,EAAG,CAAC,EACjEg3E,EAAoB,IAAI,KAAKh3E,EAAI,cAAeA,EAAI,SAAA,EAAa,EAAG,CAAC,EACrEi3E,EAAmB,IAAI,KAAKj3E,EAAI,cAAeA,EAAI,SAAS,EAAG,CAAC,EAEhE9G,EAAcrE,GAClBC,GAAW9B,GAAI,QAAQ,EACvB+B,GAAM,WAAY,KAAMtB,EAAK,QAAQ,EACrC0F,GAAQ,YAAa,MAAM,CAC7B,EAEMsB,EAAmB5F,GACvBC,GAAW9B,GAAI,aAAa,EAC5B+B,GAAM,WAAY,KAAMtB,EAAK,QAAQ,CACvC,EAEM,CAAC6F,EAAgBoB,CAAmB,EAAI,MAAM,QAAQ,IAAI,CAC9DzF,GAAQiE,CAAW,EACnBjE,GAAQwF,CAAgB,CAAA,CACzB,EAEKwE,EAAS3F,EAAe,KAAK,IAAYjF,IAAA,CAC7C,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EAGI6iF,EAAkBj4E,EAAO,OAAgBtG,GAC3BA,EAAM,WAAW,OAAO,GACtBo+E,CACrB,EAEKI,EAAkBl4E,EAAO,OAAgBtG,GAAA,CACvC,MAAAuH,EAAYvH,EAAM,WAAW,OAAO,EACnC,OAAAuH,GAAa82E,GAAqB92E,GAAa+2E,CAAA,CACvD,EAGKG,EAAmBF,EAAgB,OAAO,CAACh8E,EAAKvC,IAChDA,EAAM,SAAW,aAAeA,EAAM,SAAW,WAC5CuC,GAAOvC,EAAM,OAAS,GAExBuC,EACN,CAAC,EAEEm8E,EAAmBF,EAAgB,OAAO,CAACj8E,EAAKvC,IAChDA,EAAM,SAAW,aAAeA,EAAM,SAAW,WAC5CuC,GAAOvC,EAAM,OAAS,GAExBuC,EACN,CAAC,EAGEo8E,EAAqB,IAAI,IAAIJ,EAAgB,IAAav+E,GAAAA,EAAM,OAAO,CAAC,EAAE,KAC1E4+E,EAAqB,IAAI,IAAIJ,EAAgB,IAAax+E,GAAAA,EAAM,OAAO,CAAC,EAAE,KAG1E6+E,EAA4B,CAACC,EAASC,IACtCA,IAAa,EAAUD,EAAU,EAAI,IAAM,GACtCA,EAAUC,GAAYA,EAAY,IAGvCC,EAAgBH,EAA0BJ,EAAkBC,CAAgB,EAC5EO,EAAeJ,EAA0BN,EAAgB,OAAQC,EAAgB,MAAM,EACvFU,EAAkBL,EAA0BF,EAAoBC,CAAkB,EAGlFO,EAAsBp9E,EAAoB,KAAK,OAAO,CAAC8nC,EAAKnuC,IAAQ,CAClE,MAAAmH,EAAanH,EAAI,KAAK,EACxB,OAAAmH,EAAW,SAAW,YACpBgnC,EAAA,WAAahnC,EAAW,QAAU,EAC7BA,EAAW,SAAW,YAC3BgnC,EAAA,SAAWhnC,EAAW,QAAU,GAE/BgnC,GACN,CAAE,UAAW,EAAG,QAAS,EAAG,EAGzB1nC,EAAcmE,EAAO,OAAgBtG,GAAAA,EAAM,SAAW,WAAW,EACjEo/E,EAAej9E,EAAY,OAAO,CAACI,EAAKvC,IAExCA,EAAM,SAAW,WACZuC,EAEFA,EAAMvC,EAAM,MAClB,CAAC,EAGEwC,GAAeL,EAAY,OAAO,CAACI,EAAKvC,IACxCA,EAAM,SAAW,WACZuC,EAAMvC,EAAM,MAEduC,EACN,CAAC,EAGE88E,GAAkB,IAAI,IAAIl9E,EAAY,IAAanC,GAAAA,EAAM,OAAO,CAAC,EAAE,KAGnEs/E,GAAiBF,EAGjBG,EAAa,KAAK,IAAI,EAAGH,EAAeD,EAAoB,SAAS,EAGrEK,EAAQ,CAAC,EACTC,EAAW,CAAC,EAElB,GAAIxB,IAAsB,UAExB,QAAS91E,EAAI,GAAIA,GAAK,EAAGA,IAAK,CACtB,MAAAs6B,EAAO,IAAI,KAAKp7B,CAAG,EACzBo7B,EAAK,QAAQA,EAAK,QAAQ,EAAIt6B,CAAC,EACzBq3E,EAAA,KAAK/8C,EAAK,mBAAmB,UAAW,CAAE,MAAO,QAAS,IAAK,SAAU,CAAC,CAAC,EAEjF,MAAMi9C,EAAap5E,EAAO,OAAO,CAAC/D,GAAKvC,KAAU,CACzC,MAAAuH,EAAYvH,GAAM,WAAW,OAAO,EACtC,OAAAuH,GACAA,EAAU,QAAA,IAAck7B,EAAK,QAC7B,GAAAl7B,EAAU,aAAek7B,EAAK,SAAA,GAC9Bl7B,EAAU,YAAkB,IAAAk7B,EAAK,eACjCziC,GAAM,SAAW,aACjBA,GAAM,SAAW,WACZuC,IAAOvC,GAAM,OAAS,GAExBuC,IACN,CAAC,EAEJk9E,EAAS,KAAKC,CAAU,CAAA,KAI1B,SAASv3E,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACrB,MAAAs6B,EAAO,IAAI,KAAKp7B,CAAG,EACzBo7B,EAAK,QAAQA,EAAK,QAAQ,EAAIt6B,CAAC,EACzBq3E,EAAA,KAAK/8C,EAAK,mBAAmB,UAAW,CAAE,QAAS,OAAA,CAAS,CAAC,EAEnE,MAAMi9C,EAAap5E,EAAO,OAAO,CAAC/D,GAAKvC,KAAU,CACzC,MAAAuH,EAAYvH,GAAM,WAAW,OAAO,EACtC,OAAAuH,GACAA,EAAU,QAAA,IAAck7B,EAAK,QAC7B,GAAAl7B,EAAU,aAAek7B,EAAK,SAAA,GAC9Bl7B,EAAU,YAAkB,IAAAk7B,EAAK,eACjCziC,GAAM,SAAW,aACjBA,GAAM,SAAW,WACZuC,IAAOvC,GAAM,OAAS,GAExBuC,IACN,CAAC,EAEJk9E,EAAS,KAAKC,CAAU,CAAA,CAIb1B,EAAA,CACb,OAAQwB,EACR,SAAU,CACR,CACE,KAAMC,EACN,KAAM,GACN,gBAAiB,0BACjB,YAAa,oBACb,YAAa,EACb,iBAAkB,EAClB,0BAA2B,oBAC3B,sBAAuB,QACvB,sBAAuB,CAAA,CACzB,CACF,CACD,EAEYz5E,EAAA,CACX,aAAcu5E,EACd,aAAAH,EACA,aAAA58E,GACA,YAAa8D,EAAO,OACpB,eAAgB+4E,GAChB,aAAc/4E,EAAO,MAAM,EAAG,CAAC,EAC/B,UAAWA,EACX,eAAAg5E,GACA,eAAgBH,EAAoB,UACpC,mBAAoBA,EAAoB,QACxC,cAAe,WAAWH,EAAc,QAAQ,CAAC,CAAC,EAClD,aAAc,WAAWC,EAAa,QAAQ,CAAC,CAAC,EAChD,gBAAiB,WAAWC,EAAgB,QAAQ,CAAC,CAAC,CAAA,CACvD,QACM3iF,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,EACjDQ,EAAM,MAAM,2BAA2B,CAAA,QACvC,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAGM0kF,EAAmBpgF,EAAcM,EACjC+/E,EAAoBD,EAAmB9/E,EACvCggF,EAAgB95E,EAAU,UAAU,MAAM65E,EAAmBD,CAAgB,EAChE,KAAK,KAAK55E,EAAU,UAAU,OAASlG,CAAa,EAGvE,MAAMigF,EAAYC,GAAevgF,EAAeugF,CAAU,EAEpDC,EAAgB,IAAM,CACtB,GAAA,CACF,MAAMC,EAAal6E,EAAU,UAAU,IAAc/F,IAAA,CACnD,WAAYA,EAAM,GAClB,QAAWA,EAAM,MAAM,OAAY1B,EAAK,IAAI,EAAE,KAAK,IAAI,EACvD,SAAY0B,EAAM,WAAW,MAAQ,YACrC,MAASA,EAAM,MACf,KAAQ,IAAI,KAAKA,EAAM,WAAW,OAAO,CAAC,EAAE,mBAAmB,EAC/D,OAAUA,EAAM,MAAA,EAChB,EAEIkgF,EAAKvgE,GAAW,cAAcsgE,CAAU,EACxCE,EAAKxgE,GAAW,SAAS,EAC/BA,GAAW,kBAAkBwgE,EAAID,EAAI,YAAY,EAC5CE,GAAUD,EAAI,iBAAiB,EACpCpjF,EAAM,QAAQ,kCAAkC,QACzCR,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5CQ,EAAM,MAAM,6BAA6B,CAAA,CAE7C,EAEA,OAAI/B,QACM2hF,GAAc,EAAA,EAItBhjF,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,UAAW,mCAAmC5O,EAAa,cAAgB,YAAY,GAEvF,eAAC,MAAI,CAAA,UAAU,MACb,SAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,sBAAsBN,EAAa,gBAAkB,eAAe,GAAI,SAAc,gBAAA,CAAA,EACrGM,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAI,SAAgC,kCAAA,CAAA,CAAA,EAC7G,EACA8E,EAAA,KAAC,SAAA,CACC,QAAS6hF,EACT,UAAU,4GAEV,SAAA,CAACrmF,EAAAA,IAAA0mF,GAAA,CAAW,UAAU,SAAU,CAAA,EAChC1mF,EAAAA,IAAC,QAAK,SAAY,cAAA,CAAA,CAAA,CAAA,CAAA,CACpB,EACF,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,wCAEb,SAAA,CAAAA,EAAAA,KAAC,OAAI,UAAW,iBAAiB9E,EAAa,cAAgB,UAAU,4BACtE,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAAa,eAAA,CAAA,EACvG8E,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAA,OAAC,QAAK,UAAW,sBAAsB9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAE0M,EAAU,aAAa,QAAQ,CAAC,CAAA,EAAE,EAC5HA,EAAU,cAAgB,GACxB5H,EAAA,KAAA,OAAA,CAAK,UAAU,6DAA6D,SAAA,CAAA,KACxE4H,EAAU,cAAc,GAAA,CAC7B,CAAA,CAAA,EAEJ,SACC,IAAE,CAAA,UAAW,WAAW1M,EAAa,gBAAkB,eAAe,QAAS,SAAA,CAAA,WACrE0M,EAAU,cAAgBA,EAAU,kBAAoB,GAAG,aAAA,CACtE,CAAA,CAAA,EACF,EACA5H,EAAA,KAAC,SAAA,CACC,MAAO8/E,EACP,SAAW98E,GAAM+8E,EAAqB/8E,EAAE,OAAO,KAAK,EACpD,UAAW,yCACT9H,EACI,4CACA,wCACN,GAEA,SAAA,CAAAM,EAAAA,IAAC,UAAO,SAAO,SAAA,CAAA,EACfA,EAAAA,IAAC,UAAO,SAAM,QAAA,CAAA,CAAA,CAAA,CAAA,CAChB,EACF,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,YACb,SAAAA,EAAAA,IAAC2mF,IAAK,KAAMvC,EAAa,QAASI,CAAc,CAAA,CAClD,CAAA,CAAA,EACF,EAGAxkF,EAAA,IAAC,MAAI,CAAA,UAAU,gBACb,SAAAwE,EAAAA,KAAC,MAAI,CAAA,UAAW,GAAG9E,EAAa,cAAgB,UAAU,4BACxD,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,yBAEb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAAa,eAAA,CAAA,EAC5GM,EAAAA,IAAC,OAAI,UAAU,YACb,eAACkjF,GAAyB,CAAA,OAAQ92E,EAAU,SAAW,CAAA,CACzD,CAAA,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAAC5H,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAAY,cAAA,CAAA,EACtGM,EAAAA,IAAC,UAAO,UAAW,WAAWN,EAAa,oCAAsC,mCAAmC,GAAI,SAAO,SAAA,CAAA,CAAA,EACjI,EACCM,EAAA,IAAAwjF,GAAA,CAAY,OAAQp3E,EAAU,UAAW,WAAA1M,CAAwB,CAAA,CAAA,CACpE,CAAA,CAAA,EACF,EAGCM,EAAA,IAAA4jF,GAAA,CAAmB,OAAQx3E,EAAU,UAAW,WAAA1M,CAAwB,CAAA,CAAA,CAAA,CAC3E,CACF,CAAA,CAAA,EACF,EAGA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAxE,EAAA,IAAC2iF,GAAA,CACC,MAAM,mBACN,MAAO,IAAIv2E,EAAU,eAAe,QAAQ,CAAC,CAAC,GAC9C,KAAMkrE,GACN,SAAU,eAAelrE,EAAU,eAAe,QAAQ,CAAC,CAAC,GAC5D,YAAa,CACX,UAAWA,EAAU,eACrB,QAASA,EAAU,kBAAA,CACrB,CACF,EACApM,EAAA,IAAC2iF,GAAA,CACC,MAAM,cACN,MAAO,IAAIv2E,EAAU,aAAa,QAAQ,CAAC,CAAC,GAC5C,KAAMkrE,GACN,MAAOlrE,EAAU,cACjB,eAAgBA,EAAU,aAAe,EAAI,IAAIA,EAAU,aAAa,QAAQ,CAAC,CAAC,GAAK,MAAA,CACzF,EACApM,EAAA,IAAC2iF,GAAA,CACC,MAAM,eACN,MAAOv2E,EAAU,YACjB,KAAM8qE,GACN,MAAO9qE,EAAU,YAAA,CACnB,EACApM,EAAA,IAAC2iF,GAAA,CACC,MAAM,kBACN,MAAOv2E,EAAU,eACjB,KAAMqrE,GACN,MAAOrrE,EAAU,eAAA,CAAA,CACnB,EACF,SAGC,MAAI,CAAA,UAAW,GAAG1M,EAAa,cAAgB,UAAU,wBACxD,SAAA,CAACM,EAAA,IAAA,MAAA,CAAI,UAAW,gBAAgBN,EAAa,kBAAoB,iBAAiB,GAChF,SAAA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAAa,eAAA,CAAA,QACtG,MAAI,CAAA,UAAU,0BACb,SAAAM,EAAAA,IAAC,UAAO,UAAW,OAAON,EAAa,oBAAsB,mBAAmB,cAC9E,SAAAM,EAAAA,IAAC,OAAI,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAI,KAAK,OAAO,OAAO,eAAe,QAAQ,YACrH,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAY,IAAI,EAAE,yJAA0J,CAAA,EACjO,EACF,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,SACf,SAAA,CAACxE,EAAAA,IAAA,QAAA,CACC,gBAAC,KAAG,CAAA,UAAW,qBAAqBN,EAAa,4BAA8B,0BAA0B,GACvG,SAAA,CAACM,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAC,IAAA,EACtCA,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAO,UAAA,EAC5CA,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAQ,WAAA,EAC7CA,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAK,QAAA,EAC1CA,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAI,OAAA,EACzCA,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAM,QAAA,CAAA,CAAA,CAAA,CAC9C,CACF,CAAA,EACAA,EAAAA,IAAC,SAAM,UAAW,YAAYN,EAAa,kBAAoB,iBAAiB,GAC7E,SAAAwmF,EAAc,MAAM,EAAG,EAAE,EAAE,IAAK7/E,GAC9B7B,EAAA,KAAA,KAAA,CAAkB,UAAW,WAAW9E,EAAa,oBAAsB,kBAAkB,GAC5F,SAAA,CAAA8E,OAAC,MAAG,UAAW,aAAa9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAE2G,EAAM,GAAG,MAAM,EAAE,CAAA,EAAE,QAClG,KAAG,CAAA,UAAU,YACZ,SAAC7B,EAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAM6B,EAAA,MAAM,CAAC,GAAG,OACfrG,EAAA,IAAC,MAAA,CACC,IAAKqG,EAAM,MAAM,CAAC,EAAE,MACpB,IAAKA,EAAM,MAAM,CAAC,EAAE,KACpB,UAAU,mCAAA,CACZ,SAED,MACC,CAAA,SAAA,CAACrG,EAAA,IAAA,IAAA,CAAE,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAK,SAAM2G,EAAA,MAAM,CAAC,GAAG,KAAK,QACpG,IAAE,CAAA,UAAW,WAAW3G,EAAa,gBAAkB,eAAe,GACpE,SAAA2G,EAAM,MAAM,OAAS,EAAI,IAAIA,EAAM,MAAM,OAAS,CAAC,QAAU,EAChE,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EACArG,EAAA,IAAC,KAAG,CAAA,UAAW,aAAaN,EAAa,gBAAkB,eAAe,GAAK,SAAA2G,EAAM,WAAW,MAAQ,WAAY,CAAA,SACnH,KAAG,CAAA,UAAW,aAAa3G,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAE2G,EAAM,MAAM,QAAQ,CAAC,CAAA,EAAE,QACtG,KAAG,CAAA,UAAW,aAAa3G,EAAa,gBAAkB,eAAe,GACvE,SAAI,IAAA,KAAK2G,EAAM,WAAW,QAAQ,EAAE,qBACvC,EACArG,EAAAA,IAAC,KAAG,CAAA,UAAU,YACZ,SAAAA,EAAA,IAAC,QAAK,UAAW,8CACfqG,EAAM,SAAW,YACb,8BACAA,EAAM,SAAW,UACjB,4BACAA,EAAM,SAAW,aACjB,gCACA,2BACN,GACG,SAAMA,EAAA,MACT,CAAA,CACF,CAAA,CAAA,GApCOA,EAAM,EAqCf,CACD,CACH,CAAA,CAAA,EACF,EACC6/E,EAAc,SAAW,EACxBlmF,EAAAA,IAAC,OAAI,UAAW,oBAAoBN,EAAa,gBAAkB,eAAe,GAAI,SAAa,eAAA,CAAA,QAElG,MAAI,CAAA,UAAW,gBAAgBA,EAAa,kBAAoB,iBAAiB,GAChF,SAAAM,EAAA,IAAC0jF,GAAA,CACC,YAAA99E,EACA,WAAY,KAAK,KAAKwG,EAAU,UAAU,OAAS,EAAE,EACrD,aAAc+5E,CAAA,CAAA,CAElB,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAEJ,EC18BMlyD,GAAoB,CACxB,OAAQ,CAAE,QAAS,EAAG,EAAG,EAAG,EAC5B,QAAS,CACP,QAAS,EACT,EAAG,EACH,WAAY,CACV,SAAU,GACV,KAAM,SAAA,CACR,CAEJ,EAEMkkD,GAAgB,IAAM,CACpB,KAAA,CAAE,WAAAz4E,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,iBAAiB5O,EAAa,cAAgB,aAAa,cACtE,QAAS,CACP,QAAS,CAAC,GAAK,GAAK,EAAG,CACzB,EACA,WAAY,CACV,SAAU,IACV,OAAQ,IACR,KAAM,WAAA,CACR,CACF,CAEJ,EAEMknF,GAAyB,IAAM,CAC7B,KAAA,CAAE,WAAAlnF,CAAW,EAAIO,GAAS,EAE9B,OAAAuE,EAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EACAn4E,EAAAA,IAAC,OAAI,UAAU,aACZ,UAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACnBxO,MAAA,MAAA,CAAY,UAAU,YACrB,eAACm4E,GAAc,CAAA,CAAA,GADP3pE,CAEV,CACD,CACH,CAAA,CAAA,EACF,EAGCxO,MAAA,MAAA,CAAI,UAAW,GAAGN,EAAa,cAAgB,UAAU,yCACxD,SAAAM,EAAA,IAAC,OAAI,UAAU,kBACb,SAACwE,OAAA,QAAA,CAAM,UAAU,SACf,SAAA,CAAAxE,MAAC,QACC,CAAA,SAAAA,EAAAA,IAAC,KAAG,CAAA,UAAW,GAAGN,EAAa,iBAAmB,YAAY,GAC3D,UAAC,gBAAiB,WAAY,QAAS,SAAU,SAAS,EAAE,IAAKujF,GAC/DjjF,EAAA,IAAA,KAAA,CAAgB,UAAU,YACzB,eAAC,MAAI,CAAA,UAAU,WACb,SAAAA,EAAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EAHO8K,CAIT,CACD,CACH,CAAA,EACF,QACC,QAAM,CAAA,UAAW,YAAYvjF,EAAa,kBAAoB,iBAAiB,GAC7E,SAAA,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAK8O,UACnB,KACC,CAAA,SAAA,CAAAxO,EAAAA,IAAC,MAAG,UAAU,YACZ,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACC,KAAG,CAAA,UAAU,YACZ,SAAC3zE,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EACAn4E,EAAA,IAAC,KAAG,CAAA,UAAU,YACZ,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,WACb,SAAAA,EAAA,IAACm4E,GAAc,CAAA,CAAA,CACjB,CAAA,EACF,EACAn4E,EAAA,IAAC,KAAG,CAAA,UAAU,YACZ,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,WACb,SAAAA,EAAA,IAACm4E,GAAc,CAAA,CAAA,CACjB,CAAA,EACF,QACC,KAAG,CAAA,UAAU,YACZ,SAAC3zE,EAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,UACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,UACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CA3CO,EAAA3pE,CA4CT,CACD,CACH,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EAEMq4E,GAAgB,CAAC,CAAE,OAAAnrE,EAAQ,QAAAC,EAAS,SAAAmrE,EAAU,QAAAC,KAAc,CAChE,KAAM,CAACC,EAAgBC,CAAiB,EAAIrnF,EAAAA,SAAS,EAAE,EACjD,CAACsnF,EAASC,CAAU,EAAIvnF,EAAAA,SAAS,EAAE,EACnC,CAACwnF,EAAcC,CAAe,EAAIznF,EAAAA,SAAS,EAAK,EAChD,CAAE,WAAAF,CAAW,EAAIO,GAAS,EAE1BkkB,EAAe,MAAO3c,GAAM,CAEhC,GADAA,EAAE,eAAe,EACb,CAACw/E,EAAe,KAAA,GAAU,CAACE,EAAQ,OAAQ,CAC7C9jF,EAAM,MAAM,+CAA+C,EAC3D,MAAA,CAEFikF,EAAgB,EAAI,EACd,MAAAP,EAASC,EAASC,EAAgBE,CAAO,EAC/CG,EAAgB,EAAK,EACb1rE,EAAA,CACV,EAEI,OAACD,EAIDlX,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAA/S,EAAA,IAAC,MAAI,CAAA,UAAU,4CAA4C,QAAS2b,EAAS,EAC7E3b,EAAAA,IAAC,MAAI,CAAA,UAAU,0DACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,MAAO,GAAK,QAAS,CAAE,EAClC,QAAS,CAAE,MAAO,EAAG,QAAS,CAAE,EAChC,UAAW,GAAG5O,EAAa,cAAgB,UAAU,wCAErD,SAAA8E,EAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAE/F,4BAAA,CAAA,EACC8E,EAAA,KAAA,OAAA,CAAK,SAAU2f,EAAc,UAAU,YACtC,SAAA,CAAA3f,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,kBAAA,CAAA,EACA8E,EAAA,KAAC,SAAA,CACC,MAAO0iF,EACP,SAAW1/E,GAAM2/E,EAAW3/E,EAAE,OAAO,KAAK,EAC1C,UAAW,kFACT9H,EACI,4CACA,+BACN,GACA,SAAQ,GAER,SAAA,CAACM,EAAA,IAAA,SAAA,CAAO,MAAM,GAAG,SAAgB,mBAAA,EAChCA,EAAA,IAAA,SAAA,CAAO,MAAM,QAAQ,SAAK,QAAA,EAC1BA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAG,MAAA,EACtBA,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAI,OAAA,EACxBA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAG,MAAA,EACtBA,EAAA,IAAA,SAAA,CAAO,MAAM,QAAQ,SAAK,OAAA,CAAA,CAAA,CAAA,CAAA,CAC7B,EACF,SACC,MACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,iBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOgnF,EACP,SAAWx/E,GAAMy/E,EAAkBz/E,EAAE,OAAO,KAAK,EACjD,UAAW,kFACT9H,EACI,iEACA,oDACN,GACA,YAAY,wBACZ,SAAQ,EAAA,CAAA,CACV,EACF,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS2b,EACT,UAAW,4CACTjc,EACI,kCACA,iCACN,GACD,SAAA,QAAA,CAED,EACAM,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAUonF,GAAgB,CAACJ,EAAe,QAAU,CAACE,EAAQ,KAAK,EAClE,UAAU,sIAET,WAAe,gBAAkB,kBAAA,CAAA,CACpC,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EA/EkB,IAiFtB,EAEMI,GAAoB,CAAC,CAAE,MAAAjhF,EAAO,QAAAsV,KAAc,CAC1C,KAAA,CAAE,WAAAjc,CAAW,EAAIO,GAAS,EAC5B,GAAA,CAACoG,EAAc,OAAA,KAGb,MAAAkhF,EAAkBr6E,GAClB,OAAOA,GAAY,UAAYA,EAAQ,KAClCA,EAAQ,KAEVA,EAIP,OAAAlN,EAAAA,IAAC,MAAI,CAAA,UAAU,6EACb,SAAAwE,OAAC,MAAI,CAAA,UAAW,GAAG9E,EAAa,cAAgB,UAAU,gEACxD,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAAa,eAAA,CAAA,EACtGM,EAAA,IAAA,SAAA,CAAO,QAAS2b,EAAS,UAAW,GAAGjc,EAAa,oCAAsC,mCAAmC,GAC5H,SAAAM,EAAA,IAACkgB,GAAI,CAAA,UAAU,UAAU,CAC3B,CAAA,CAAA,EACF,EAGA1b,EAAAA,KAAC,MAAI,CAAA,UAAU,YAEb,SAAA,CAAAA,OAAC,OAAI,UAAW,GAAG9E,EAAa,iBAAmB,YAAY,kBAC7D,SAAA,CAAA8E,OAAC,KAAE,UAAW,WAAW9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,aAAW2G,EAAM,EAAA,EAAG,SAC9F,IAAE,CAAA,UAAW,WAAW3G,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,SAClE,IAAI,KAAK2G,EAAM,WAAW,OAAO,CAAC,EAAE,eAAe,CAAA,CAC5D,CAAA,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAAArG,EAAAA,IAAC,MAAG,UAAW,oBAAoBN,EAAa,gBAAkB,eAAe,GAAI,SAAoB,sBAAA,CAAA,SACxG,MAAI,CAAA,UAAW,GAAGA,EAAa,iBAAmB,YAAY,kBAC7D,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAA,OAAC,KAAE,UAAW,WAAW9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,SAAO2G,EAAM,WAAW,IAAA,EAAK,EACvGA,EAAM,MACLrG,EAAA,IAAC,MAAA,CACC,IAAKqG,EAAM,KACX,IAAKkhF,EAAelhF,EAAM,iBAAiB,OAAO,EAClD,UAAU,2CAAA,CAAA,CACZ,EAEJ,SACC,IAAE,CAAA,UAAW,WAAW3G,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,UAAQ2G,EAAM,WAAW,KAAA,EAAM,SACzG,IAAE,CAAA,UAAW,WAAW3G,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,UAAQ2G,EAAM,WAAW,KAAA,CAAM,CAAA,CAAA,CAC5G,CAAA,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAAArG,EAAAA,IAAC,MAAG,UAAW,oBAAoBN,EAAa,gBAAkB,eAAe,GAAI,SAAgB,kBAAA,CAAA,SACpG,MAAI,CAAA,UAAW,GAAGA,EAAa,iBAAmB,YAAY,kBAC7D,SAAA,CAACM,EAAAA,IAAA,IAAA,CAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAK,SAAM2G,EAAA,iBAAiB,MAAO,CAAA,SACzG,IAAE,CAAA,UAAW,WAAW3G,EAAa,gBAAkB,eAAe,GACpE,SAAA,CAAA2G,EAAM,iBAAiB,KAAK,KAAGA,EAAM,iBAAiB,MAAM,IAAEA,EAAM,iBAAiB,UAAA,EACxF,EACCrG,EAAA,IAAA,IAAA,CAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GACpE,SAAe6nF,EAAAlhF,EAAM,iBAAiB,OAAO,CAChD,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAAArG,EAAAA,IAAC,MAAG,UAAW,oBAAoBN,EAAa,gBAAkB,eAAe,GAAI,SAAK,OAAA,CAAA,EAC1FM,EAAAA,IAAC,OAAI,UAAU,YACZ,WAAM,MAAM,IAAI,CAAC2E,EAAMuF,UACrB,MAAgB,CAAA,UAAW,GAAGxK,EAAa,iBAAmB,YAAY,kBACzE,SAAA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACxE,EAAAA,IAAA,IAAA,CAAE,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAK,WAAK,IAAK,CAAA,SACzF,IAAE,CAAA,UAAW,WAAWA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,aAAWiF,EAAK,QAAA,EAAS,EACnGA,EAAK,MACHH,OAAA,IAAA,CAAE,UAAW,WAAW9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,SAAOiF,EAAK,IAAA,EAAK,EAE7FA,EAAK,OACHH,OAAA,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAM,QAAA,CAAA,EAC5E8E,EAAAA,KAAC,OAAK,CAAA,UAAU,0BACd,SAAA,CAAAxE,EAAA,IAAC,OAAA,CACC,UAAU,8BACV,MAAO,CACL,gBAAiB2E,EAAK,MAAM,YAAY,EACxC,YAAaA,EAAK,MAAM,YAAY,IAAM,UAAY,UAAY,aAAA,CACpE,CACF,EACA3E,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAK,SAAAiF,EAAK,KAAM,CAAA,CAAA,CACpF,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EACAH,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAA,OAAC,KAAE,UAAW,eAAe9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAEiF,EAAK,MAAM,QAAQ,CAAC,CAAA,EAAE,SACtG,IAAE,CAAA,UAAW,WAAWjF,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,cAC7DiF,EAAK,YAAY,QAAQ,CAAC,CAAA,CACxC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAAA,EA9BQuF,CA+BV,CACD,CACH,CAAA,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAAAlK,EAAAA,IAAC,MAAG,UAAW,oBAAoBN,EAAa,gBAAkB,eAAe,GAAI,SAAmB,qBAAA,CAAA,SACvG,MAAI,CAAA,UAAW,GAAGA,EAAa,iBAAmB,YAAY,kBAC7D,SAAA,CAAA8E,OAAC,KAAE,UAAW,WAAW9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,WAChE2G,EAAM,eAAe,KAAK,KAAGA,EAAM,eAAe,MAAM,GAAA,EACnE,SACC,IAAE,CAAA,UAAW,WAAW3G,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,YAC/D2G,EAAM,eAAe,OAAA,EACjC,SACC,IAAE,CAAA,UAAW,WAAW3G,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,WAChE2G,EAAM,eAAe,WAAA,EAChC,SACC,IAAE,CAAA,UAAW,4BAA4B3G,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,WACjF2G,EAAM,MAAM,QAAQ,CAAC,CAAA,CAChC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAEMmhF,GAAiB,IAAM,CACrB,KAAA,CAAE,KAAArmF,CAAK,EAAImC,GAAa,EACxB,CAAE,WAAA5D,CAAW,EAAIO,GAAS,EAC1B,CAACoB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAC+M,EAAQ86E,CAAS,EAAI7nF,EAAAA,SAAS,CAAA,CAAE,EACjC,CAACsO,EAAQw5E,CAAS,EAAI9nF,EAAAA,SAAS,KAAK,EACpC,CAAC+nF,EAAeC,CAAgB,EAAIhoF,EAAAA,SAAS,IAAI,EACjD,CAACioF,EAAqBC,CAAsB,EAAIloF,EAAAA,SAAS,EAAK,EAC9D,CAACmoF,EAAiBC,CAAkB,EAAIpoF,EAAAA,SAAS,IAAI,EAE3DE,EAAAA,UAAU,IAAM,CACFmoF,EAAA,CAAA,EACX,CAAC9mF,CAAI,CAAC,EAET,MAAM8mF,EAAc,SAAY,CAC1B,GAAA,CACF,MAAMrhF,EAAcrE,GAClBC,GAAW9B,GAAI,QAAQ,EACvB+B,GAAM,WAAY,KAAMtB,EAAK,QAAQ,EACrC0F,GAAQ,YAAa,MAAM,CAC7B,EAGMqhF,GADiB,MAAMvlF,GAAQiE,CAAW,GACd,KAAK,IAAI7E,IAAQ,CACjD,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EAGIkF,EAAYihF,EAAW,OAC3B7hF,GAAAA,EAAM,SAAW,cACjB,CAACA,EAAM,cACT,EAEI,GAAAY,EAAU,OAAS,EAAG,CACxB,MAAMkhF,EAAYpmF,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,EAC5C6L,EAAY,MAAM/K,GAAOkmF,CAAS,EAEpC,GAAAn7E,EAAU,SACR,GAAA,CACI,MAAA3F,EAAa2F,EAAU,KAAK,EAG7B3F,EAAW,UACd,MAAMyJ,GAAUq3E,EAAW,CACzB,QAAS,CAAE,UAAW,EAAG,QAAS,CAAE,CAAA,CACrC,EACD9gF,EAAW,QAAU,CAAE,UAAW,EAAG,QAAS,CAAE,GAIlD,MAAM+gF,EAAiBnhF,EAAU,OAAO,CAAC2B,EAAKvC,IAAU,CAChD,MAAA20E,EAAa,WAAW30E,EAAM,KAAK,EACzC,OAAOuC,GAAO,MAAMoyE,CAAU,EAAI,EAAIA,IACrC,CAAC,EAGEqN,EAAiB,CACrB,UAAW,WAAWhhF,EAAW,QAAQ,WAAa,CAAC,EACvD,QAAS,WAAWA,EAAW,QAAQ,SAAW,CAAC,EAAI+gF,CACzD,EAGA,MAAMt3E,GAAUq3E,EAAW,CACzB,QAAS,CACP,UAAWE,EAAe,UAC1B,QAASA,EAAe,OAAA,CAC1B,CACD,EAGK,MAAA73D,EAAQ83D,GAAW5nF,EAAE,EAC3BuG,EAAU,QAAiBZ,GAAA,CACzB,MAAMkiF,EAAWxmF,GAAIrB,GAAI,SAAU2F,EAAM,EAAE,EAC3CmqB,EAAM,OAAO+3D,EAAU,CAAE,eAAgB,GAAM,CAAA,CAChD,EACD,MAAM/3D,EAAM,OAAO,EAEnB,QAAQ,IAAI,gCAAiC,CAC3C,gBAAiBnpB,EAAW,QAC5B,WAAYghF,EACZ,eAAAD,EACA,cAAenhF,EAAU,MAAA,CAC1B,QACMrE,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9C,QAAQ,MAAM,iBAAkB,CAC9B,SAAUzB,EAAK,SACf,WAAY6L,EAAU,KAAK,EAC3B,UAAA/F,CAAA,CACD,CAAA,CAEL,CAGFwgF,EAAUS,CAAU,QACbtlF,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7CQ,EAAM,MAAM,uBAAuB,CAAA,QACnC,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEMknF,EAAoB,MAAOzB,EAASC,EAAgBE,IAAY,CAChE,GAAA,CACF,MAAMqB,EAAWxmF,GAAIrB,GAAI,SAAUqmF,CAAO,EAEpC7/E,GADW,MAAMjF,GAAOsmF,CAAQ,GACX,KAAK,EAG1BlO,EAAmBnzE,EAAU,iBAAiB,OAAO,EACvD,GAAA,KAAK,IAAI,EAAImzE,EAAkB,CACjCj3E,EAAM,MAAM,2CAA2C,EACvD,MAAA,CAIF,MAAM+kF,EAAYpmF,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,EAE5CgM,GADY,MAAMlL,GAAOkmF,CAAS,GACP,OAAO,SAAW,CAAE,UAAW,EAAG,QAAS,CAAE,EACxEM,EAAc,OAAOvhF,EAAU,OAAS,CAAC,EAG/C,MAAM4J,GAAUq3E,EAAW,CACzB,QAAS,CACP,UAAW,QAAQ,OAAOh7E,EAAe,WAAa,CAAC,EAAIs7E,GAAa,QAAQ,CAAC,CAAC,EAClF,QAAS,QAAQ,OAAOt7E,EAAe,SAAW,CAAC,EAAIs7E,GAAa,QAAQ,CAAC,CAAC,CAAA,CAChF,CACD,EAGD,MAAM33E,GAAUy3E,EAAU,CACxB,OAAQ,UACR,cAAe,KACf,kBAAmB,GACnB,wBAAyB,KACzB,eAAgB,GAChB,iBAAkB,IAAI,KAAK,KAAK,IAAA,EAAQ,GAAK,GAAK,GAAK,GAAK,GAAI,EAChE,eAAAvB,EACA,QAAAE,EACA,eAAgB,YAAA,CACjB,EAEDO,KACEngF,EAAK,IAAIjB,GACPA,EAAM,KAAO0gF,EACT,CACE,GAAG1gF,EACH,OAAQ,UACR,kBAAmB,GACnB,wBAAyB,KACzB,eAAgB,GAChB,iBAAkB,IAAI,KAAK,KAAK,IAAA,EAAQ,GAAK,GAAK,GAAK,GAAK,GAAI,EAChE,eAAA2gF,EACA,QAAAE,EACA,eAAgB,YAAA,EAElB7gF,CAAA,CAER,EAEAjD,EAAM,QAAQ,iCAAiC,QACxCR,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5CQ,EAAM,MAAM,wBAAwB,CAAA,CAExC,EAqBMkD,EAAiBqG,EAAO,OAAgBtG,GACxC6H,IAAW,MAAc,GACtB7H,EAAM,SAAW6H,CACzB,EAEKw6E,EAAkBnuD,GAAW,CACjC,OAAQA,EAAQ,CACd,IAAK,YACI,MAAA,8BACT,IAAK,YACI,MAAA,8BACT,IAAK,aACI,MAAA,4BACT,IAAK,YACI,MAAA,0BACT,IAAK,UACL,QACS,MAAA,+BAAA,CAEb,EAEA,OAAIl5B,QACMulF,GAAuB,EAAA,EAI/BpiF,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAW,yBAAyB5O,EAAa,cAAgB,YAAY,GAC7E,QAAQ,SACR,QAAQ,UACR,SAAUu0B,GAEV,SAAA,CAACzvB,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,sBAAsBN,EAAa,gBAAkB,eAAe,GAAI,SAAe,iBAAA,CAAA,EACtGM,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAA2B,6BAAA,CAAA,CAAA,EAChG,EACCM,EAAAA,IAAA,MAAA,CAAI,UAAU,aACZ,SAAC,CAAA,MAAO,aAAc,YAAa,WAAW,EAAE,IAAKu6B,GACpDv6B,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM0nF,EAAUntD,CAAM,EAC/B,UAAW,yEACTrsB,IAAWqsB,EACP,0BACA76B,EACE,8CACA,6CACR,GAEC,SAAA66B,CAAA,EAVIA,CAAA,CAYR,CACH,CAAA,CAAA,EACF,EAECj0B,EAAe,SAAW,EACxB9B,EAAA,KAAA,MAAA,CAAI,UAAW,GAAG9E,EAAa,cAAgB,UAAU,+BACxD,SAAA,CAAAM,MAACk3E,IAAU,UAAW,aAAax3E,EAAa,gBAAkB,eAAe,gBAAiB,EAClGM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAAe,iBAAA,CAAA,EAC7GM,EAAA,IAAA,IAAA,CAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAC5D,SAAWwO,IAAA,MACR,sCACA,MAAMA,CAAM,eAClB,CAAA,CAAA,CAAA,CACF,EAEClO,EAAAA,IAAA,MAAA,CAAI,UAAW,GAAGN,EAAa,cAAgB,UAAU,8CACxD,SAAAM,EAAA,IAAC,OAAI,UAAU,kBACb,SAACwE,OAAA,QAAA,CAAM,UAAU,SACf,SAAA,CAACxE,EAAAA,IAAA,QAAA,CACC,gBAAC,KAAG,CAAA,UAAW,GAAGN,EAAa,iBAAmB,YAAY,GAC5D,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAErI,eAAA,CAAA,EACAM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAErI,UAAA,CAAA,EACAM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAErI,OAAA,CAAA,EACAM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAErI,OAAA,CAAA,EACAM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAErI,QAAA,CAAA,EACAM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAErI,SAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACC,QAAM,CAAA,UAAW,YAAYA,EAAa,kBAAoB,iBAAiB,GAC7E,SAAA4G,EAAe,IAAKD,UAClB,KAAkB,CAAA,UAAW,GAAG3G,EAAa,uBAAyB,kBAAkB,GACvF,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAU,YACZ,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,KAAE,UAAW,eAAe9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAE2G,EAAM,GAAG,MAAM,EAAE,CAAA,EAAE,QACnG,IAAE,CAAA,UAAW,WAAW3G,EAAa,gBAAkB,eAAe,GACpE,SAAI,IAAA,KAAK2G,EAAM,WAAW,OAAQ,CAAA,EAAE,gBACvC,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACC,KAAG,CAAA,UAAU,YACZ,SAAC7B,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,IAAA,CAAE,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAK,SAAM2G,EAAA,WAAW,IAAK,CAAA,EACrGA,EAAM,MACLrG,EAAA,IAAC,MAAA,CACC,IAAKqG,EAAM,KACX,IAAK,GAAGA,EAAM,iBAAiB,OAAO,QACtC,UAAU,2CAAA,CAAA,CACZ,EAEJ,EACArG,EAAAA,IAAC,IAAE,CAAA,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAK,SAAM2G,EAAA,WAAW,KAAM,CAAA,CAAA,CAAA,CACrG,CACF,CAAA,EACArG,EAAAA,IAAC,MAAG,UAAU,YACZ,eAAC,MAAI,CAAA,UAAU,YACZ,SAAMqG,EAAA,MAAM,IAAI,CAAC1B,EAAMuF,IACrBlK,EAAAA,IAAA,MAAA,CAAgB,UAAU,UACzB,SAAAwE,EAAA,KAAC,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAAG,EAAK,OACJ3E,EAAA,IAAC,MAAA,CACC,IAAK2E,EAAK,MACV,IAAKA,EAAK,KACV,UAAU,mCAAA,CACZ,SAED,MACC,CAAA,SAAA,CAAC3E,EAAAA,IAAA,IAAA,CAAE,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAK,WAAK,IAAK,CAAA,SACzF,IAAE,CAAA,UAAW,GAAGA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,QAC3DiF,EAAK,SACVA,EAAK,MAAQ,YAAYA,EAAK,IAAI,GAClCA,EAAK,OACHH,OAAA,OAAA,CAAK,UAAU,iCACd,SAAA,CAAAxE,EAAAA,IAAC,QAAK,SAAM,QAAA,CAAA,EACZA,EAAA,IAAC,OAAA,CACC,UAAU,8BACV,MAAO,CACL,gBAAiB2E,EAAK,MAAM,YAAY,EACxC,YAAaA,EAAK,MAAM,YAAY,IAAM,UAAY,UAAY,aAAA,CACpE,CACF,EACA3E,EAAAA,IAAC,OAAM,CAAA,SAAA2E,EAAK,KAAM,CAAA,CAAA,CACpB,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CA7BQ,EAAAuF,CA8BV,CACD,CAAA,CACH,CACF,CAAA,EACAlK,EAAA,IAAC,KAAG,CAAA,UAAU,YACZ,SAAAwE,EAAAA,KAAC,IAAE,CAAA,UAAW,eAAe9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAE2G,EAAM,MAAM,QAAQ,CAAC,CAAA,CAAA,CAAE,CAC1G,CAAA,EACCrG,MAAA,KAAA,CAAG,UAAU,YACZ,eAAC,OAAK,CAAA,UAAW,8CAA8C0oF,EAAeriF,EAAM,MAAM,CAAC,GACxF,SAAAA,EAAM,MACT,CAAA,EACF,QACC,KAAG,CAAA,UAAU,8BACZ,SAAC7B,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM4nF,EAAiBvhF,CAAK,EACrC,UAAW,OAAO3G,EAAa,oCAAsC,mCAAmC,qBACxG,MAAM,eAEN,SAAAM,EAAAA,IAAC2oF,GAAa,CAAA,UAAU,SAAU,CAAA,CAAA,CACpC,EACCtiF,EAAM,SAAW,cAAgB,CAACA,EAAM,mBACvCrG,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACbgoF,EAAmB3hF,EAAM,EAAE,EAC3ByhF,EAAuB,EAAI,CAC7B,EACA,UAAU,4FACX,SAAA,kBAAA,CAED,EAEDzhF,EAAM,gBACJ7B,OAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAAAA,OAAC,QAAK,UAAW,WAAW9E,EAAa,gBAAkB,eAAe,GACvE,SAAA,CAAA2G,EAAM,QAAQ,YAAY,EAAE,KAAGA,EAAM,cAAA,EACxC,EACCrG,MAAA,OAAA,CAAK,UAAW,+CACfqG,EAAM,iBAAmB,YAAc,iBAAmB,eAC5D,GACG,SAAMA,EAAA,iBAAmB,YACtB7B,OAAAuO,EAAAA,SAAA,CAAA,SAAA,CAAA,aACU/S,EAAAA,IAACs5B,GAAQ,CAAA,UAAU,SAAU,CAAA,CAAA,CACzC,CAAA,EACE,YACN,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,GA1GOjzB,EAAM,EA2Gf,CACD,CACH,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAIFrG,EAAA,IAAC6mF,GAAA,CACC,OAAQgB,EACR,QAAS,IAAMC,EAAuB,EAAK,EAC3C,SAAUU,EACV,QAAST,CAAA,CACX,EAGCJ,GACC3nF,EAAA,IAACsnF,GAAA,CACC,MAAOK,EACP,QAAS,IAAMC,EAAiB,IAAI,CAAA,CAAA,CACtC,CAAA,CAEJ,CAEJ,EC5vBMzP,GAAgB,IAAM,CACpB,KAAA,CAAE,WAAAz4E,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,iBAAiB5O,EAAa,cAAgB,aAAa,cACtE,QAAS,CACP,QAAS,CAAC,GAAK,GAAK,EAAG,CACzB,EACA,WAAY,CACV,SAAU,IACV,OAAQ,IACR,KAAM,WAAA,CACR,CACF,CAEJ,EAEMkpF,GAAmB,IAAM,CACvB,KAAA,CAAE,WAAAlpF,CAAW,EAAIO,GAAS,EAE9B,OAAAuE,EAAA,KAAC,MAAI,CAAA,UAAU,8BAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EAGCn4E,EAAA,IAAA,MAAA,CAAI,UAAW,GAAGN,EAAa,cAAgB,UAAU,4BACxD,SAACM,EAAA,IAAA,MAAA,CAAI,UAAU,aACZ,UAAC,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKwO,SAChB,MAAY,CAAA,UAAU,YACrB,SAAAxO,EAAAA,IAACm4E,GAAc,CAAA,CAAA,CAAA,EADP3pE,CAEV,CACD,CACH,CAAA,EACF,SAGC,MAAI,CAAA,UAAW,GAAG9O,EAAa,cAAgB,UAAU,uCAExD,SAAA,CAAAM,EAAA,IAAC,MAAI,CAAA,UAAU,yBACZ,SAAA,CAAC,EAAG,CAAC,EAAE,IAAKwO,GACVhK,OAAA,MAAA,CAAY,UAAU,YACrB,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,cACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,GANQ3pE,CAOV,CACD,EACH,EAEAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,cACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EAECn4E,EAAA,IAAA,MAAA,CAAI,UAAU,yBACZ,UAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACbhK,EAAA,KAAA,MAAA,CAAY,UAAU,YACrB,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,cACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,GANQ3pE,CAOV,CACD,EACH,EAGAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,EACAn4E,EAAA,IAAC,MAAI,CAAA,UAAW,GAAGN,EAAa,iBAAmB,YAAY,kBAC7D,SAAA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGAn4E,EAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,cACb,SAAAA,EAAAA,IAACm4E,GAAc,CAAA,CAAA,CAAA,CACjB,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EAEM0Q,GAAW,IAAM,CACf,KAAA,CAAE,KAAA1nF,CAAK,EAAImC,GAAa,EACxB,CAAE,WAAA5D,CAAW,EAAIO,GAAS,EAC1B,CAACoB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACyqC,EAAWC,CAAY,EAAI1qC,EAAAA,SAAS,SAAS,EAC9C,CAACkpF,EAAoBC,CAAqB,EAAInpF,EAAAA,SAAS,EAAK,EAC5D,CAAC0vC,EAAiBC,CAAkB,EAAI3vC,EAAAA,SAAS,IAAI,EACrD,CAACopF,EAAcC,CAAe,EAAIrpF,WAAS,CAC/C,SAAU,GACV,MAAOuB,GAAM,OAAS,GACtB,YAAa,GACb,gBAAiB,CACf,OAAQ,GACR,KAAM,GACN,MAAO,GACP,QAAS,CACP,KAAM,GACN,KAAM,GACN,KAAM,EACR,EACA,WAAY,EAAA,CACd,CACD,EAEK,CAAC+nF,EAAeC,CAAgB,EAAIvpF,WAAS,CACjD,UAAW,GACX,YAAa,GACb,aAAc,GACd,YAAa,GACb,QAAS,GACT,KAAM,GACN,WAAY,GACZ,kBAAmB,CAAC,EACpB,YAAa,EACb,iBAAkB,EAAA,CACnB,EAEK,CAACwpF,EAAgBC,CAAiB,EAAIzpF,WAAS,CACnD,cAAe,GACf,eAAgB,MAAA,CACjB,EAEK,CAACyhF,EAAYC,CAAa,EAAI1hF,EAAAA,SAAS,EAAK,EAC5C,CAAC0pF,EAAkBC,CAAmB,EAAI3pF,EAAAA,SAAS,IAAI,EAEvD,CAAC4pF,EAAwBC,CAAyB,EAAI7pF,EAAAA,SAAS,EAAK,EACpE,CAAC8pF,EAAsBC,CAAuB,EAAI/pF,EAAAA,SAAS,IAAI,EAE/D+0E,EAAYpuE,EAAAA,QAAQ,IAAMquE,GAAA,EAAc,QAAQ,EAAG,EAAE,EAErDG,EAAiBxuE,EAAA,QAAQ,IAC7BouE,EAAU,IAAgBznE,IAAA,CACxB,MAAOA,EAAQ,MACf,MACE1I,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAACg1E,GAAA,CACC,YAAa9nE,EAAQ,MACrB,IAAG,GACH,MAAO,CACL,MAAO,QACP,OAAQ,OAAA,CACV,CACF,EACCA,EAAQ,KAAA,EACX,EAEF,YAAaA,EAAQ,KAAA,EACrB,EACF,CAACynE,CAAS,CACZ,EAEMM,EAAe1uE,EAAAA,QAAQ,KAAO,CAClC,QAAS,CAAC2uE,EAAUC,KAAW,CAC7B,GAAGD,EACH,QAAS,MACT,YAAax1E,EAAa,UAAY,UACtC,gBAAiBA,EAAa,UAAY,QAC1C,UAAW,CACT,YAAa,SAAA,CACf,GAEF,OAAQ,CAACw1E,EAAUC,KAAW,CAC5B,GAAGD,EACH,gBAAiBC,EAAM,WACnB,UACAA,EAAM,UACJz1E,EAAa,UAAY,UACzBA,EAAa,UAAY,QAC/B,MAAOy1E,EAAM,WACT,QACAz1E,EAAa,UAAY,UAC7B,UAAW,CACT,gBAAiBy1E,EAAM,WAAa,UAAYz1E,EAAa,UAAY,SAAA,CAC3E,GAEF,KAAOw1E,IAAc,CACnB,GAAGA,EACH,gBAAiBx1E,EAAa,UAAY,OAAA,GAE5C,YAAcw1E,IAAc,CAC1B,GAAGA,EACH,MAAOx1E,EAAa,UAAY,SAAA,GAElC,MAAQw1E,IAAc,CACpB,GAAGA,EACH,MAAOx1E,EAAa,UAAY,SAClC,EAAA,GACE,CAACA,CAAU,CAAC,EAEVk2E,EAAuBC,GAAmB,CAC9C,MAAM+T,EAAa,CACjB,GAAGZ,EACH,gBAAiB,CACf,GAAGA,EAAa,gBAChB,QAAS,CACP,KAAMnT,EAAe,YACrB,KAAMA,EAAe,MACrB,KAAM,uBAAuBA,EAAe,MAAM,YAAa,CAAA,MAAA,CACjE,CAEJ,EACAoT,EAAgBW,CAAU,EAC1BH,EAA0B,KAAK,UAAUG,CAAU,IAAM,KAAK,UAAUF,CAAoB,CAAC,CAC/F,EAEA5pF,EAAAA,UAAU,IAAM,EACa,SAAY,CACjC,GAAA,CACF,GAAI,CAACqB,EAAM,CACTG,EAAW,EAAK,EAChB,MAAA,CAIEH,EAAK,UACPmpC,EAAa,OAAO,EACpB,MAAMu/C,EAAoB,IAE1Bv/C,EAAa,SAAS,EACtB,MAAMw/C,EAAkB,QAEZ,CACd1mF,EAAM,MAAM,yBAAyB,CAAA,QACrC,CACA9B,EAAW,EAAK,CAAA,CAEpB,GAEmB,CAAA,EAClB,CAACH,CAAI,CAAC,EAET,MAAM2oF,EAAoB,SAAY,CAChC,GAAA,CACI,MAAA9nF,EAAU,MAAMC,GAAOF,GAAIrB,GAAI,QAASS,EAAK,GAAG,CAAC,EACnD,GAAAa,EAAQ,SAAU,CACd,MAAAE,EAAWF,EAAQ,KAAK,EACxB+nF,EAAc,CAClB,SAAU7nF,EAAS,UAAY,GAC/B,MAAOA,EAAS,OAASf,GAAM,OAAS,GACxC,YAAae,EAAS,aAAe,GACrC,cAAeA,EAAS,eAAiB,GACzC,gBAAiB,CACf,OAAQA,EAAS,iBAAiB,QAAU,GAC5C,KAAMA,EAAS,iBAAiB,MAAQ,GACxC,MAAOA,EAAS,iBAAiB,OAAS,GAC1C,QAASA,EAAS,iBAAiB,SAAW,CAC5C,KAAM,GACN,KAAM,GACN,KAAM,EACR,EACA,WAAYA,EAAS,iBAAiB,YAAc,EAAA,CAExD,EAMI,GALJ+mF,EAAgBc,CAAW,EAC3BJ,EAAwB,KAAK,MAAM,KAAK,UAAUI,CAAW,CAAC,CAAC,EAC/DN,EAA0B,EAAK,EAG3BvnF,EAAS,eAAiB,OAAO,SAC/B,GAAA,CACI,MAAA4F,EAAW,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,eAAgB,EACrEA,EAAS,OAAS,GAAKA,EAAS,CAAC,EAAE,gBAAkB5F,EAAS,cAAc,YAAA,GAE9E+mF,EAAyB3hF,IAAA,CACvB,GAAGA,EACH,cAAeQ,EAAS,CAAC,CAAA,EACzB,QAEGlF,EAAO,CACN,QAAA,MAAM,oCAAqCA,CAAK,CAAA,CAE5D,QAEKA,EAAO,CACN,QAAA,MAAM,gCAAiCA,CAAK,EACpDQ,EAAM,MAAM,wBAAwB,CAAA,CAExC,EAEM4mF,EAA0BxiF,GAAM,CACpC,KAAM,CAAE,KAAA2oB,EAAM,MAAApwB,CAAM,EAAIyH,EAAE,OACtB,IAAAoiF,EACA,GAAAz5D,EAAK,SAAS,kBAAkB,EAAG,CACrC,MAAM85D,EAAQ95D,EAAK,MAAM,GAAG,EAAE,CAAC,EAClBy5D,EAAA,CACX,GAAGZ,EACH,gBAAiB,CACf,GAAGA,EAAa,gBAChB,CAACiB,CAAK,EAAGlqF,CAAA,CAEb,CAAA,MAEa6pF,EAAA,CACX,GAAGZ,EACH,CAAC74D,CAAI,EAAGpwB,CACV,EAEFkpF,EAAgBW,CAAU,EAC1BH,EAA0B,KAAK,UAAUG,CAAU,IAAM,KAAK,UAAUF,CAAoB,CAAC,CAC/F,EAEMQ,EAA2B,MAAO1iF,GAAM,CAC5CA,EAAE,eAAe,EACb,GAAA,CACF,MAAMxE,GAAOjB,GAAIrB,GAAI,QAASS,EAAK,GAAG,EAAG,CACvC,GAAG6nF,EACH,cAAe,IAAK,EACnB,CAAE,MAAO,GAAM,EAClBW,EAAwB,KAAK,MAAM,KAAK,UAAUX,CAAY,CAAC,CAAC,EAChES,EAA0B,EAAK,EAC/BrmF,EAAM,QAAQ,8BAA8B,OAC9B,CACdA,EAAM,MAAM,0BAA0B,CAAA,CAE1C,EAEMymF,EAAsB,SAAY,CAClC,GAAC1oF,GAAM,SAEP,GAAA,CACF,MAAMgnF,EAAYpmF,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,EAC5C6L,EAAY,MAAM/K,GAAOkmF,CAAS,EAEpC,GAACn7E,EAAU,SAoCR,CACC,MAAA3F,EAAa2F,EAAU,KAAK,EAE5Bm9E,EAAsB,CAC1B,GAAG9iF,EACH,QAASA,EAAW,SAAS,KAAOA,EAAW,QAAU,CACvD,KAAMA,EAAW,SAAW,GAC5B,KAAM,GACN,KAAM,EAAA,CAEV,EACA8hF,EAAiBgB,CAAmB,EACpCZ,EAAoBY,CAAmB,EACrBd,EAAA,CAChB,cAAehiF,EAAW,eAAiB,GAC3C,eAAgBA,EAAW,gBAAkB,MAAA,CAC9C,CAAA,KApDsB,CAEjB,MAAArF,EAAU,MAAMC,GAAOF,GAAIrB,GAAI,QAASS,EAAK,GAAG,CAAC,EACjDe,EAAWF,EAAQ,SAAWA,EAAQ,KAAA,EAAS,CAAC,EAGhDooF,EAAoB,CACxB,SAAUjpF,EAAK,SACf,OAAQA,EAAK,IACb,UAAW,GACX,YAAa,GACb,aAAcA,EAAK,MACnB,YAAa,GACb,QAAS,CACP,KAAM,GACN,KAAM,GACN,KAAM,EACR,EACA,KAAM,GACN,WAAY,GACZ,kBAAmB,CAAC,EACpB,YAAa,EACb,eAAgB,OAChB,iBAAkB,GAClB,cAAee,EAAS,eAAiB,GACzC,cAAe,KACf,cAAe,IACjB,EAEM,MAAAc,GAAOmlF,EAAWiC,CAAiB,EACzCjB,EAAiBiB,CAAiB,EAClCb,EAAoBa,CAAiB,EACnBf,EAAA,CAChB,cAAennF,EAAS,eAAiB,GACzC,eAAgBkoF,EAAkB,cAAA,CACnC,CAAA,CAmBH9I,EAAc,EAAK,OACL,CACdl+E,EAAM,MAAM,gCAAgC,CAAA,CAEhD,EAEM2E,EAAsB,SAAY,CAClC,GAAA,CAEF,GAAI,CADa,MAAMF,GAAuB,EAC/B,CACbzE,EAAM,MAAM,gDAAgD,EAC5D,MAAA,CAIF,MAAM0E,EAAW,MAAM,OAAO,SAAS,QAAQ,CAC7C,OAAQ,qBAAA,CACT,EAEG,GAAAA,EAAS,SAAW,EAAG,CACzB1E,EAAM,MAAM,4BAA4B,EACxC,MAAA,CAGI,MAAA8B,EAAgB4C,EAAS,CAAC,EACxB,QAAA,IAAI,qBAAsB5C,CAAa,EAG3C/D,EAAK,UACC,QAAA,IAAI,qCAAsC+D,CAAa,EAC/DmkF,EAA0B/hF,IAChB,QAAA,IAAI,4BAA6BA,CAAI,EACtC,CACL,GAAGA,EACH,cAAApC,CACF,EACD,EACDikF,EAAyB7hF,IACf,QAAA,IAAI,2BAA4BA,CAAI,EACrC,CACL,GAAGA,EACH,cAAApC,CACF,EACD,GAED+jF,EAAyB3hF,IAAA,CACvB,GAAGA,EACH,cAAApC,CAAA,EACA,EAIA,GAAA,CACF,GAAI/D,EAAK,SAAU,CACT,QAAA,IAAI,wCAAyC+D,CAAa,EAElE,MAAMijF,EAAYpmF,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,EAClD,MAAM2P,GAAUq3E,EAAW,CACzB,cAAAjjF,EACA,cAAe,IAAK,CACrB,EAGD,MAAM4L,GAAU/O,GAAIrB,GAAI,QAASS,EAAK,GAAG,EAAG,CAC1C,cAAA+D,EACA,cAAe,IAAK,CACrB,EAGK,MAAAmlF,EAAmB,MAAMpoF,GAAOkmF,CAAS,EAC3C,GAAAkC,EAAiB,SAAU,CACvB,MAAAhjF,EAAagjF,EAAiB,KAAK,EACjC,QAAA,IAAI,uBAAwBhjF,CAAU,EAC9C8hF,EAAiB9hF,CAAU,EAC3BgiF,EAA2B/hF,KAAA,CACzB,GAAGA,GACH,cAAeD,EAAW,aAAA,EAC1B,CAAA,CACJ,MAEA,MAAMyJ,GAAU/O,GAAIrB,GAAI,QAASS,EAAK,GAAG,EAAG,CAC1C,cAAA+D,EACA,cAAe,IAAK,CACrB,EAEH9B,EAAM,QAAQ,+BAA+B,QACtCR,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EAChDQ,EAAM,MAAM,kCAAkC,EAE1CjC,EAAK,UACPkoF,EAA2B/hF,IAAA,CACzB,GAAGA,EACH,cAAe,EAAA,EACf,EACF6hF,EAA0B7hF,IAAA,CACxB,GAAGA,EACH,cAAe,EAAA,EACf,GAEF2hF,EAAyB3hF,IAAA,CACvB,GAAGA,EACH,cAAe,EAAA,EACf,CACJ,QAEK1E,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC3CA,EAAM,OAAS,KACjBQ,EAAM,MAAM,qCAAqC,EAEjDA,EAAM,MAAM,0BAA0B,CACxC,CAEJ,EAEMknF,EAAyB,SAAY,CACrC,GAAA,CAEEnpF,EAAK,UACPkoF,EAA2B/hF,IAAA,CACzB,GAAGA,EACH,cAAe,EAAA,EACf,EACF6hF,EAA0B7hF,IAAA,CACxB,GAAGA,EACH,cAAe,EAAA,EACf,GAEF2hF,EAAyB3hF,IAAA,CACvB,GAAGA,EACH,cAAe,EAAA,EACf,EAIAnG,EAAK,SACP,MAAM2P,GAAU/O,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,EAAG,CACjD,cAAe,GACf,cAAe,IAAK,CACrB,EAED,MAAM2P,GAAU/O,GAAIrB,GAAI,QAASS,EAAK,GAAG,EAAG,CAC1C,cAAe,GACf,cAAe,IAAK,CACrB,EAEHiC,EAAM,QAAQ,kCAAkC,QACzCR,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAClDQ,EAAM,MAAM,6BAA6B,EAErCjC,EAAK,UACPkoF,EAA2B/hF,IAAA,CACzB,GAAGA,EACH,cAAe8hF,EAAe,aAAA,EAC9B,EACFD,EAA0B7hF,IAAA,CACxB,GAAGA,EACH,cAAe8hF,EAAe,aAAA,EAC9B,GAEFH,EAAyB3hF,IAAA,CACvB,GAAGA,EACH,cAAe0hF,EAAa,aAAA,EAC5B,CACJ,CAEJ,EAEMuB,EAAoB,MAAO/iF,GAAM,CACrCA,EAAE,eAAe,EACb,GAAA,CACF,MAAMsJ,GAAU/O,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,EAAG,CACjD,GAAG+nF,EACH,cAAe,IAAK,CACrB,EACDK,EAAoBL,CAAa,EACjC5H,EAAc,EAAK,EACnBl+E,EAAM,QAAQ,qCAAqC,OACrC,CACdA,EAAM,MAAM,iCAAiC,CAAA,CAEjD,EAEMonF,EAA0BhjF,GAAM,CACpC,KAAM,CAAE,KAAA2oB,EAAM,MAAApwB,CAAM,EAAIyH,EAAE,OAC1B2hF,EAAyB7hF,GAAA,CACvB,MAAMmjF,EAAc,CAClB,GAAGnjF,EACH,CAAC6oB,CAAI,EAAGpwB,CACV,EAEM2qF,EAAa,KAAK,UAAUD,CAAW,IAAM,KAAK,UAAUnB,CAAgB,EAClF,OAAAhI,EAAcoJ,CAAU,EACjBD,CAAA,CACR,CACH,EAEA,OAAIppF,QACMunF,GAAiB,EAAA,EAIzBpkF,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,UAAW,yBAAyB5O,EAAa,cAAgB,YAAY,GAE7E,SAAA,CAAA8E,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,sBAAsBN,EAAa,gBAAkB,eAAe,GAAI,SAAQ,UAAA,CAAA,SAC9F,IAAE,CAAA,UAAW,GAAGA,EAAa,gBAAkB,eAAe,QAAS,SAAA,CAAA,eACzDyB,GAAM,SAAW,iBAAmB,UAAU,kBAAA,CAC7D,CAAA,CAAA,EACF,EAGCnB,EAAA,IAAA,MAAA,CAAI,UAAW,GAAGN,EAAa,cAAgB,UAAU,iCACxD,SAACM,EAAA,IAAA,MAAA,CAAI,UAAU,aACZ,SAAMmB,GAAA,SAEL,CACE,CAAE,GAAI,QAAS,MAAO,iBAAkB,KAAMkR,EAAQ,EACtD,CAAE,GAAI,UAAW,MAAO,UAAW,KAAMolE,EAAO,EAChD,CAAE,GAAI,WAAY,MAAO,WAAY,KAAM7hD,EAAS,CAAA,EACpD,IAAK2U,GACL/lC,EAAA,KAAC,SAAA,CAEC,QAAS,IAAM8lC,EAAaC,EAAI,EAAE,EAClC,UAAW,sFACTF,IAAcE,EAAI,GACd,0BACA7qC,EACE,kCACA,iCACR,GAEA,SAAA,CAAAM,EAAAA,IAACuqC,EAAI,KAAJ,CAAS,UAAU,SAAU,CAAA,EAC7BA,EAAI,KAAA,CAAA,EAXAA,EAAI,EAaZ,CAAA,EAGD,CACE,CAAE,GAAI,UAAW,MAAO,UAAW,KAAMktC,EAAO,EAChD,CAAE,GAAI,WAAY,MAAO,WAAY,KAAMP,EAAU,EACrD,CAAE,GAAI,WAAY,MAAO,WAAY,KAAMthD,EAAS,CAAA,EACpD,IAAK2U,GACL/lC,EAAA,KAAC,SAAA,CAEC,QAAS,IAAM8lC,EAAaC,EAAI,EAAE,EAClC,UAAW,sFACTF,IAAcE,EAAI,GACd,0BACA7qC,EACE,kCACA,iCACR,GAEA,SAAA,CAAAM,EAAAA,IAACuqC,EAAI,KAAJ,CAAS,UAAU,SAAU,CAAA,EAC7BA,EAAI,KAAA,CAAA,EAXAA,EAAI,EAaZ,CAAA,CAAA,CAEL,CACF,CAAA,QAGC,MAAI,CAAA,UAAU,YACZ,SAAAppC,GAAM,SAEFqD,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAAs3B,IAAc,SACZ7lC,EAAA,KAAA,OAAA,CAAK,SAAU+lF,EAAmB,UAAU,YAE3C,SAAA,CAAA/lF,OAAC,OAAI,UAAW,GAAG9E,EAAa,cAAgB,YAAY,kBAC1D,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAAa,eAAA,CAAA,EAC5G8E,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,YAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,YACL,MAAOkpF,EAAc,UACrB,SAAUsB,EACV,UAAW,oIACT9qF,EACI,4CACA,wCACN,EAAA,CAAA,CACF,EACF,SACC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,eAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,QACL,KAAK,eACL,MAAOkpF,EAAc,aACrB,SAAUsB,EACV,UAAW,oIACT9qF,EACI,4CACA,wCACN,EAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAEA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,mBAAA,CAAA,EACAM,EAAA,IAAC,WAAA,CACC,KAAK,cACL,MAAOkpF,EAAc,YACrB,SAAUsB,EACV,KAAM,EACN,UAAW,oIACT9qF,EACI,4CACA,wCACN,EAAA,CAAA,CACF,EACF,EAEA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,SAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU;AAAA;AAAA;AAAA;AAAA,yBAKZ,SAAA,CAAA0kF,EAAc,SAAS,MACtBlpF,EAAA,IAACg1E,GAAA,CACC,YAAakU,EAAc,QAAQ,KACnC,IAAG,GACH,MAAO,CACL,MAAO,QACP,OAAQ,OAAA,CACV,CACF,EAEFlpF,EAAAA,IAAC,OAAK,CAAA,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAC/D,SAAAwpF,EAAc,SAAS,MAAQ,iBAClC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAAlpF,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,MAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,OACL,MAAOkpF,EAAc,KACrB,SAAUsB,EACV,UAAW,oIACT9qF,EACI,4CACA,wCACN,EAAA,CAAA,CACF,EACF,SACC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,aAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,aACL,MAAOkpF,EAAc,WACrB,SAAUsB,EACV,UAAW,oIACT9qF,EACI,4CACA,wCACN,EAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAGC,MAAI,CAAA,UAAW,GAAGA,EAAa,cAAgB,YAAY,kBAC1D,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAAiB,mBAAA,CAAA,SAC/G,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,oBAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,yDAAyD,SAAC,IAAA,EAC1EA,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,cACL,IAAI,IACJ,KAAK,OACL,MAAOkpF,EAAc,YACrB,SAAUsB,EACV,UAAW,yIACT9qF,EACI,4CACA,wCACN,GACA,YAAY,MAAA,CAAA,CACd,EACF,EACCM,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,sDAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAI,CAAA,UAAU,mBACb,SAAAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAU,CAACqhF,EACX,UAAW,0CACTA,EACI,6CACA,GAAG3hF,EAAa,4BAA8B,2BAA2B,qBAC/E,GACD,SAAA,qBAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAGD2qC,IAAc,WACZ7lC,OAAA,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,OAAC,OAAI,UAAW,GAAG9E,EAAa,cAAgB,YAAY,kBAC1D,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAAe,iBAAA,CAAA,EAC9GM,EAAA,IAAC,MAAI,CAAA,UAAW,GAAGN,EAAa,cAAgB,UAAU,kBACxD,SAAA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAI,SAAgB,kBAAA,CAAA,EAChGM,EAAAA,IAAC,IAAE,CAAA,UAAW,WAAWN,EAAa,gBAAkB,eAAe,QACpE,SAAe0pF,EAAA,cACZ,GAAGA,EAAe,cAAc,MAAM,EAAG,CAAC,CAAC,MAAMA,EAAe,cAAc,MAAM,EAAE,CAAC,GACvF,qBACN,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,aACZ,SAAAA,EAAe,cAEZ5kF,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAA/S,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAASsqF,EACT,UAAW,aACT5qF,EACI,8CACA,6CACN,wCACD,SAAA,YAAA,CAED,EACAM,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS+H,EACT,UAAU,4FACX,SAAA,eAAA,CAAA,CAED,CAAA,CACF,EAEA/H,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS+H,EACT,UAAU,4FACX,SAAA,gBAAA,CAAA,CAIL,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,SAGC,MAAI,CAAA,UAAW,GAAGrI,EAAa,cAAgB,YAAY,kBAC1D,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAAgB,kBAAA,CAAA,SAC9G,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,mBAAA,CAAA,EACAM,EAAAA,IAAC,MAAI,CAAA,UAAU,yBACZ,SAAA,CACC,CAAE,GAAI,UAAW,KAAM,UAAW,KAAM,cAAe,EACvD,CAAE,GAAI,WAAY,KAAM,mBAAoB,KAAM,oBAAqB,CAAA,EACvE,IACAgf,GAAAxa,EAAA,KAAC,SAAA,CAEC,KAAK,SACL,SAAU0kF,EAAc,mBAAqB,WAAaA,EAAc,mBAAqB,WAC7F,QAAS,IAAM,CACTA,EAAc,mBAAqB,WAAaA,EAAc,mBAAqB,aACrF35C,EAAmBvwB,CAAO,EAC1B+pE,EAAsB,EAAI,EAE9B,EACA,UAAW,kFACTG,EAAc,mBAAqBlqE,EAAQ,GACvC,oBAAoBtf,EAAa,iBAAmB,YAAY,GAC/DwpF,EAAc,mBAAqB,WAAaA,EAAc,mBAAqB,WAClF,iDAAiDxpF,EAAa,cAAgB,UAAU,GACxF,0CAA0CA,EAAa,cAAgB,UAAU,EACzF,GAEA,SAAA,CAAAM,EAAA,IAAC,MAAA,CACC,IAAKgf,EAAQ,KACb,IAAK,GAAGA,EAAQ,IAAI,QACpB,UAAU,SAAA,CACZ,EACAhf,EAAAA,IAAC,QAAK,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAK,SAAAsf,EAAQ,IAAK,CAAA,CAAA,CAAA,EAtB3FA,EAAQ,EAwBhB,CAAA,EACH,EACC8pE,GAAsBx5C,GACpBtvC,MAAA,MAAA,CAAI,UAAW,+CAA+CN,EAAa,iBAAmB,YAAY,GACzG,SAAC8E,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,sBAAsB,SAAE,KAAA,EACvCwE,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,QAAS,SAErF,2BAAA,CAAA,SACC,IAAE,CAAA,UAAW,WAAWA,EAAa,gBAAkB,eAAe,QAAS,SAAA,CAAA,gDAChC4vC,EAAgB,KAAK,uGAAA,EACrE,EACA9qC,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACb+oF,EAAsB,EAAK,EAC3Bx5C,EAAmB,IAAI,CACzB,EACA,UAAW,qBAAqB7vC,EAAa,oCAAsC,mCAAmC,qBACvH,SAAA,QAAA,CAED,EACAM,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACbmpF,MAA0B,CAAE,GAAG7hF,EAAM,iBAAkBgoC,EAAgB,IAAK,EAC5Ex+B,GAAU/O,GAAIrB,GAAI,UAAWS,EAAK,QAAQ,EAAG,CAC3C,iBAAkBmuC,EAAgB,GAClC,cAAe,IAAK,CACrB,EACDlsC,EAAM,QAAQ,qDAAqDksC,EAAgB,IAAI,WAAY,CACjG,MAAO,CACL,WAAY,UACZ,MAAO,OACP,QAAS,OACT,aAAc,MAChB,EACA,UAAW,CACT,QAAS,OACT,UAAW,SACb,EACA,SAAU,GAAA,CACX,EACDy5C,EAAsB,EAAK,EAC3Bx5C,EAAmB,IAAI,CACzB,EACA,UAAU,4FACX,SAAA,mBAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEF/qC,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAxE,MAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GACpE,SAAAwpF,EAAc,iBACX,0BAA0BA,EAAc,mBAAqB,UAAY,UAAY,kBAAkB,YACvG,6GACN,EACC,CAACA,EAAc,wBACb,IAAE,CAAA,UAAU,8BAA8B,SAE3C,kJAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGD7+C,IAAc,YACZ7lC,OAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAAiB,mBAAA,CAAA,EAChHM,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAA6B,+BAAA,CAAA,CAAA,CAClG,CAAA,CAAA,EAEJ,EAIG8E,OAAAuO,EAAAA,SAAA,CAAA,SAAA,CAAAs3B,IAAc,WACZ7lC,EAAA,KAAA,OAAA,CAAK,SAAU0lF,EAA0B,UAAU,YAElD,SAAA,CAAC1lF,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAc,iBAAA,EAClEA,EAAA,IAAC,MAAI,CAAA,UAAW,GAAGN,EAAa,cAAgB,YAAY,kBAC1D,SAAA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAI,SAAgB,kBAAA,CAAA,EAChGM,EAAAA,IAAC,IAAE,CAAA,UAAW,WAAWN,EAAa,gBAAkB,eAAe,QACpE,SAAaspF,EAAA,cACV,GAAGA,EAAa,cAAc,MAAM,EAAG,CAAC,CAAC,MAAMA,EAAa,cAAc,MAAM,EAAE,CAAC,GACnF,qBACN,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,aACZ,SAAAA,EAAa,cAEVxkF,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAA/S,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAASsqF,EACT,UAAW,aACT5qF,EACI,8CACA,6CACN,wCACD,SAAA,YAAA,CAED,EACAM,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS+H,EACT,UAAU,4FACX,SAAA,eAAA,CAAA,CAED,CAAA,CACF,EAEA/H,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS+H,EACT,UAAU,4FACX,SAAA,gBAAA,CAAA,CAIL,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGAvD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAoB,uBAAA,EACxEwE,EAAAA,KAAC,MAAI,CAAA,UAAU,uDACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,WAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,WACL,MAAOgpF,EAAa,SACpB,SAAUgB,EACV,UAAW,oIACTtqF,EACI,4CACA,wCACN,GACA,YAAY,gBAAA,CAAA,CACd,EACF,SACC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,OAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,QACL,KAAK,QACL,MAAOgpF,EAAa,MACpB,SAAUgB,EACV,UAAW,oIACTtqF,EACI,4CACA,wCACN,GACA,YAAY,YAAA,CAAA,CACd,EACF,SACC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,cAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,MACL,KAAK,cACL,MAAOgpF,EAAa,YACpB,SAAUgB,EACV,UAAW,oIACTtqF,EACI,4CACA,wCACN,GACA,YAAY,mBAAA,CAAA,CACd,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAM,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAU,CAACwpF,EACX,UAAW,iDACTA,EACI,6CACA,GAAG9pF,EAAa,4BAA8B,2BAA2B,qBAC/E,GACD,SAAA,cAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAGD2qC,IAAc,YACb7lC,EAAA,KAAC,QAAK,SAAU0lF,EAA0B,UAAU,YAClD,SAAA,CAAA1lF,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,gBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,yBACL,MAAOgpF,EAAa,gBAAgB,OACpC,SAAUgB,EACV,UAAW,oIACTtqF,EACI,4CACA,wCACN,EAAA,CAAA,CACF,EACF,EAEA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,MAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,uBACL,MAAOgpF,EAAa,gBAAgB,KACpC,SAAUgB,EACV,UAAW,oIACTtqF,EACI,4CACA,wCACN,EAAA,CAAA,CACF,EACF,SACC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,gBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,wBACL,MAAOgpF,EAAa,gBAAgB,MACpC,SAAUgB,EACV,UAAW,oIACTtqF,EACI,4CACA,wCACN,EAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAEA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,SAAA,CAAA,EACAM,EAAA,IAACk2E,GAAA,CACC,QAASnB,EACT,OAAQE,EACR,SAAUW,EACV,SAAQ,GACR,YAAY,iBACZ,UAAU,iBACV,MAAOoT,EAAa,gBAAgB,SAAS,KAC3CjU,EAAe,KAAe/7C,GAAAA,EAAO,QAAUgwD,EAAa,gBAAgB,QAAQ,IAAI,EACtF,IAAA,CAAA,CACN,EACF,SACC,MACC,CAAA,SAAA,CAAAhpF,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,aAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,6BACL,MAAOgpF,EAAa,gBAAgB,WACpC,SAAUgB,EACV,UAAW,oIACTtqF,EACI,4CACA,wCACN,EAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAEAM,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAU,CAACwpF,EACX,UAAW,iDACTA,EACI,6CACA,GAAG9pF,EAAa,4BAA8B,2BAA2B,qBAC/E,GACD,SAAA,uBAAA,CAAA,CAGH,CAAA,CAAA,EACF,EAGD2qC,IAAc,YACZ7lC,OAAA,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAAiB,mBAAA,CAAA,EAChHM,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAA6B,+BAAA,CAAA,CAAA,CAClG,CAAA,CAAA,CAEJ,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CAEJ,EClvCM8qC,GAAiB,CAAC,CAAE,OAAAmgD,KAAa,CACrC,KAAM,CAACjgD,EAAUC,CAAW,EAAI/qC,EAAAA,SAAS,EAAE,EAE3CE,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAM8qC,EAAoB,IAAM,CAC9B,MAAMl9B,EAAM,IAAI,KAAK,EAAE,QAAQ,EAEzBm9B,EADU,IAAI,KAAK8/C,CAAM,EAAE,QAAQ,EACZj9E,EAE7B,GAAIm9B,GAAc,EACT,MAAA,QAIT,MAAMp9B,EAAO,KAAK,MAAMo9B,GAAc,IAAO,GAAK,GAAK,GAAG,EACpD8wC,EAAQ,KAAK,MAAO9wC,GAAc,IAAO,GAAK,GAAK,KAAQ,IAAO,GAAK,GAAG,EAC1E40B,EAAU,KAAK,MAAO50B,GAAc,IAAO,GAAK,KAAQ,IAAO,GAAG,EAClE20B,EAAU,KAAK,MAAO30B,GAAc,IAAO,IAAO,GAAI,EAG5D,OAAIp9B,EAAO,EACF,GAAGA,CAAI,KAAKkuE,CAAK,IACfA,EAAQ,EACV,GAAGA,CAAK,KAAKlc,CAAO,IAClBA,EAAU,EACZ,GAAGA,CAAO,KAAKD,CAAO,IAEtB,GAAGA,CAAO,GAErB,EAGA70B,EAAYC,GAAmB,EAGzB,MAAAE,EAAQ,YAAY,IAAM,CAC9B,MAAMJ,EAAWE,EAAkB,EACnCD,EAAYD,CAAQ,EAGhBA,IAAa,SACf,cAAcI,CAAK,GAEpB,GAAI,EAGA,MAAA,IAAM,cAAcA,CAAK,CAAA,EAC/B,CAAC6/C,CAAM,CAAC,EAEH3qF,EAAAA,IAAA,OAAA,CAAK,UAAU,cAAe,SAAS0qC,EAAA,CACjD,EC7CMkgD,GAAgB,CAAC,CAAE,SAAA5K,KAAe,CACtC,KAAM,CAAC15D,EAAcq5D,CAAe,EAAI//E,EAAAA,SAAS,CAAC,EAG5CirF,EAAqB7K,EAAS,OAAOH,GACzCA,EAAQ,aACRA,EAAQ,gBACR,IAAI,KAAKA,EAAQ,cAAc,EAAI,IAAI,IACvC,EAAA,KAAK,CAACn2E,EAAGC,IAAM,IAAI,KAAKD,EAAE,cAAc,EAAI,IAAI,KAAKC,EAAE,cAAc,CAAC,EAepE,OAbJ7J,EAAAA,UAAU,IAAM,CACV,GAAA+qF,EAAmB,QAAU,EAAG,OAE9B,MAAA32E,EAAW,YAAY,IAAM,CACjCyrE,EAAiBr4E,GAAS,CACxB,MAAMwjF,EAAOxjF,EAAO,EACb,OAAAwjF,GAAQD,EAAmB,OAAS,EAAIC,CAAA,CAChD,GACA,GAAI,EAEA,MAAA,IAAM,cAAc52E,CAAQ,CAAA,EAClC,CAAC22E,EAAmB,MAAM,CAAC,EAE1BA,EAAmB,SAAW,EAAU,KAG1CrmF,EAAA,KAAC,MAAI,CAAA,UAAU,wFACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yEACb,SAAA,CAACxE,EAAAA,IAAA+qF,GAAA,CAAa,UAAU,uBAAwB,CAAA,EAC/C/qF,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAS,WAAA,CAAA,CAAA,EACvC,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,8EAA+E,CAAA,CAAA,EAChG,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAxE,MAACinC,IAAgB,QAAS,GACxB,SAACjnC,MAAA,MAAA,CAAI,UAAU,sEACZ,SAAA6qF,EAAmB,MAAMvkE,EAAcA,EAAe,CAAC,EAAE,IAAI,CAACu5D,EAAS31E,IACtElK,EAAA,IAACsO,EAAO,IAAP,CAEC,QAAS,CAAE,EAAG,OAAQ,QAAS,CAAE,EACjC,QAAS,CAAE,EAAG,EAAG,QAAS,CAAE,EAC5B,KAAM,CAAE,EAAG,QAAS,QAAS,CAAE,EAC/B,WAAY,CAAE,SAAU,GAAK,MAAOpE,EAAQ,EAAI,EAChD,UAAU,QAEV,SAAA1F,EAAA,KAACI,GAAA,CACC,GAAI,wBAAwBi7E,EAAQ,EAAE,GACtC,UAAU,2GAGV,SAAA,CAAC7/E,EAAAA,IAAA,MAAA,CAAI,UAAU,qJAAsJ,CAAA,EAErKwE,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK6/E,EAAQ,OAAO,CAAC,EACrB,IAAKA,EAAQ,KACb,UAAU,8FAAA,CACZ,QACC,MAAI,CAAA,UAAU,kFACb,SAACr7E,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,6FACb,SAAAwE,EAAA,KAAC,OAAM,CAAA,SAAA,CAAQq7E,EAAA,gBAAgB,OAAA,CAAA,CAAK,CACtC,CAAA,EACAr7E,EAAAA,KAAC,MAAI,CAAA,UAAU,qGACb,SAAA,CAACxE,EAAAA,IAAAq5B,GAAA,CAAO,UAAU,yBAA0B,CAAA,EAC3Cr5B,EAAAA,IAAAwqC,GAAA,CAAe,OAAQq1C,EAAQ,cAAgB,CAAA,CAAA,CAClD,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACC,MAAI,CAAA,UAAU,qFACb,SAACr7E,EAAA,KAAA,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAA,IAAC,KAAG,CAAA,UAAU,sCAAuC,SAAA6/E,EAAQ,KAAK,EAClEr7E,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,2BAA2B,SAAA,CAAA,IACvCq7E,EAAQ,gBAAgB,QAAQ,CAAC,CAAA,EACrC,EACAr7E,EAAAA,KAAC,OAAK,CAAA,UAAU,qCAAqC,SAAA,CAAA,IACjDq7E,EAAQ,MAAM,QAAQ,CAAC,CAAA,CAC3B,CAAA,CAAA,EACF,EACA7/E,EAAA,IAAC,MAAA,CACC,IAAK6/E,EAAQ,UACb,IAAKA,EAAQ,cACb,UAAU,SAAA,CAAA,CACZ,CACF,CAAA,CAAA,EACF,EACAr7E,EAAAA,KAAC,MAAI,CAAA,UAAU,8EACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK6/E,EAAQ,UAAY,UAAY,eAAiB,qBACtD,IAAKA,EAAQ,QACb,UAAU,SAAA,CACZ,EACC7/E,EAAA,IAAA,OAAA,CAAK,UAAU,4CACb,WAAQ,OACX,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,CACF,EAhEK6/E,EAAQ,EAAA,CAkEhB,EACH,CACF,CAAA,EAGCgL,EAAmB,OAAS,GAC3B7qF,EAAAA,IAAC,OAAI,UAAU,iCACZ,SAAM,MAAA,KAAK,CAAE,OAAQ,KAAK,KAAK6qF,EAAmB,OAAS,CAAC,EAAG,EAAE,IAAI,CAACt8E,EAAGC,IACxExO,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM2/E,EAAgBnxE,EAAI,CAAC,EACpC,UAAW,oDACT,KAAK,MAAM8X,EAAe,CAAC,IAAM9X,EAC7B,mBACA,+BACN,EAAA,EANKA,CAAA,CAQR,CACH,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,CAEJ,ECvEM2pE,GAAgB,IAAM,CACpB,KAAA,CAAE,WAAAz4E,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,iBAAiB5O,EAAa,cAAgB,aAAa,cACtE,QAAS,CACP,QAAS,CAAC,GAAK,GAAK,EAAG,EACvB,MAAO,CAAC,IAAM,EAAG,GAAI,CACvB,EACA,WAAY,CACV,SAAU,EACV,OAAQ,IACR,KAAM,WAAA,CACR,CACF,CAEJ,EAEM+/E,GAAgB,CAAC,CAAE,OAAAC,KAAa,CACpC,KAAM,CAACp5D,EAAcq5D,CAAe,EAAI//E,EAAAA,SAAS,CAAC,EAElDE,OAAAA,EAAAA,UAAU,IAAM,CACV,GAAA4/E,EAAO,QAAU,EAAG,OAElB,MAAA50C,EAAQ,YAAY,IAAM,CAC9B60C,EAAiBr4E,IAAUA,EAAO,GAAKo4E,EAAO,MAAM,GACnD,GAAI,EAEA,MAAA,IAAM,cAAc50C,CAAK,CAAA,EAC/B,CAAC40C,CAAM,CAAC,EAGTl7E,EAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAAinC,GAAA,CAAgB,QAAS,GACxB,SAAAjnC,EAAA,IAACsO,EAAO,IAAP,CAEC,IAAKoxE,EAAOp5D,CAAY,EACxB,IAAI,UACJ,UAAU,sCACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,KAAM,CAAE,QAAS,CAAE,EACnB,WAAY,CAAE,SAAU,EAAI,CAAA,EAPvBA,CAAA,EAST,EACCo5D,EAAO,OAAS,GACd1/E,EAAAA,IAAA,MAAA,CAAI,UAAU,6DACZ,SAAO0/E,EAAA,IAAI,CAACnxE,EAAGrE,IACdlK,EAAA,IAAC,MAAA,CAEC,UAAW,2DACTkK,IAAUoc,EAAe,WAAa,aACxC,EAAA,EAHKpc,CAAA,CAKR,CACH,CAAA,CAAA,EAEJ,CAEJ,EAEM8gF,GAAiB,IACpBxmF,EAAAA,KAAA,MAAA,CAAI,UAAU,kCAEb,SAAA,CAAAA,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAU,0CACV,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAA,CAACtO,EAAA,IAAA,MAAA,CAAI,UAAU,SACb,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAU,cACb,SAAAA,EAAA,IAACm4E,GAAc,CAAA,CAAA,CACjB,CAAA,EACF,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CAAA,CACF,EAGAn4E,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,kCACV,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,GAAK,MAAO,EAAI,EAEvC,SAAA,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKE,GACpBxO,EAAA,IAACsO,EAAO,IAAP,CAEC,UAAU,yBACV,QAAS,CAAE,QAAS,EAAG,EAAG,GAAI,EAC9B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,GAAK,MAAOE,EAAI,GAAK,EAE7C,eAAC2pE,GAAc,CAAA,CAAA,CAAA,EANV3pE,CAQR,CAAA,CAAA,CACH,EAGAxO,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,sEACV,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,SAAU,GAAK,MAAO,EAAI,EAEvC,SAAC,CAAA,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,EAAE,IAAKE,GACpChK,EAAA,KAAC8J,EAAO,IAAP,CAEC,UAAU,gDACV,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,GAAK,MAAOE,EAAI,GAAK,EAE7C,SAAA,CAAAxO,MAAC,MAAI,CAAA,UAAU,gBACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,YACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EAnBK3pE,CAqBR,CAAA,CAAA,CAAA,CACH,EACF,EAGIg8B,GAAiB,CAAC,CAAE,OAAAmgD,KAAa,CACrC,KAAM,CAACjgD,EAAUC,CAAW,EAAI/qC,EAAAA,SAAS,EAAE,EAE3CE,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAM8qC,EAAoB,IAAM,CAC9B,MAAMl9B,EAAM,IAAI,KAAK,EAAE,QAAQ,EAEzBm9B,EADU,IAAI,KAAK8/C,CAAM,EAAE,QAAQ,EACZj9E,EAE7B,GAAIm9B,GAAc,EACT,MAAA,QAGT,MAAMp9B,EAAO,KAAK,MAAMo9B,GAAc,IAAO,GAAK,GAAK,GAAG,EACpD8wC,EAAQ,KAAK,MAAO9wC,GAAc,IAAO,GAAK,GAAK,KAAQ,IAAO,GAAK,GAAG,EAC1E40B,EAAU,KAAK,MAAO50B,GAAc,IAAO,GAAK,KAAQ,IAAO,GAAG,EAClE20B,EAAU,KAAK,MAAO30B,GAAc,IAAO,IAAO,GAAI,EAE5D,IAAIogD,EAAa,GAEjB,OAAIx9E,EAAO,EACTw9E,EAAa,GAAGx9E,CAAI,KAAKkuE,CAAK,KAAKlc,CAAO,IACjCkc,EAAQ,EACjBsP,EAAa,GAAGtP,CAAK,KAAKlc,CAAO,KAAKD,CAAO,IACpCC,EAAU,EACNwrB,EAAA,GAAGxrB,CAAO,KAAKD,CAAO,IAEnCyrB,EAAa,GAAGzrB,CAAO,IAGlByrB,CACT,EAEAtgD,EAAYC,GAAmB,EACzB,MAAAE,EAAQ,YAAY,IAAM,CAC9B,MAAMO,EAAYT,EAAkB,EACpCD,EAAYU,CAAS,EACjBA,IAAc,SAChB,cAAcP,CAAK,GAEpB,GAAI,EAEA,MAAA,IAAM,cAAcA,CAAK,CAAA,EAC/B,CAAC6/C,CAAM,CAAC,EAGR3qF,EAAAA,IAAA,OAAA,CAAK,UAAU,wDACb,SACH0qC,EAAA,CAEJ,EAEMwgD,GAAc,CAAC,CAAE,QAAArL,KAAc,CAC7B,KAAA,CAAE,WAAAngF,CAAW,EAAIO,GAAS,EAC1B,CAAC4c,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAACurF,EAAaC,CAAc,EAAIxrF,EAAAA,SAAS,CAAC,EAEhDE,OAAAA,EAAAA,UAAU,IAAM,EACc,SAAY,CAClC,GAAA,CACI,MAAAkQ,EAAaxN,GAAW9B,GAAI,SAAS,EACrC4B,EAAIC,GAAMyN,EAAYvN,GAAM,YAAa,KAAMo9E,EAAQ,EAAE,CAAC,EAC1Dn9E,EAAgB,MAAMC,GAAQL,CAAC,EAErC,IAAIiO,EAAc,EACJ7N,EAAA,QAASX,GAAQ,CACdwO,GAAAxO,EAAI,OAAO,MAAA,CAC3B,EAED,MAAMyO,EAAY9N,EAAc,KAAO,EAAI6N,EAAc7N,EAAc,KAAO,EAC9Eoa,EAAUtM,CAAS,EACnB46E,EAAe1oF,EAAc,IAAI,QAC1BE,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,CAAA,CAElD,GAEoB,CAAA,EACnB,CAACi9E,EAAQ,EAAE,CAAC,EAGb7/E,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,GAAG5O,EAAa,gCAAkC,2BAA2B,gEACxF,WAAY,CAAE,EAAG,EAAG,EAEpB,gBAACkF,GAAK,CAAA,GAAI,wBAAwBi7E,EAAQ,EAAE,GAC1C,SAAA,CAAC7/E,EAAAA,IAAA,MAAA,CAAI,UAAU,yCACb,SAAAA,EAAAA,IAACy/E,IAAc,OAAQI,EAAQ,OAAQ,CACzC,CAAA,EACAr7E,EAAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACxE,EAAAA,IAAA,KAAA,CAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,iBACzE,WAAQ,IACX,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK6/E,EAAQ,UACb,IAAKA,EAAQ,cACb,UAAU,SAAA,CACZ,QACC,MAAI,CAAA,UAAU,0BACZ,SAAAA,EAAQ,YAELr7E,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,IAAA,CAAE,UAAU,qCAAqC,SAAA,CAAA,IAC9Cq7E,EAAQ,gBAAgB,QAAQ,CAAC,CAAA,EACrC,SACC,IAAE,CAAA,UAAW,GAAGngF,EAAa,gBAAkB,eAAe,wBAAyB,SAAA,CAAA,IACpFmgF,EAAQ,MAAM,QAAQ,CAAC,CAAA,CAC3B,CAAA,CAAA,CACF,CAAA,EAEAr7E,EAAAA,KAAC,IAAE,CAAA,UAAU,qCAAqC,SAAA,CAAA,IAC9Cq7E,EAAQ,MAAM,QAAQ,CAAC,CAAA,CAAA,CAC3B,CAEJ,CAAA,CAAA,EACF,SACC,MAAI,CAAA,UAAW,kDACdngF,EAAa,cAAgB,aAC/B,GACE,SAAA,CAAAM,EAAA,IAAC,MAAA,CACC,IAAK6/E,EAAQ,UAAY,UAAY,eAAiB,qBACtD,IAAKA,EAAQ,QACb,UAAU,SAAA,CACZ,EACA7/E,EAAAA,IAAC,QAAK,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,cACnF,SAAAmgF,EAAQ,OACX,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAr7E,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAA,OAAC,KAAE,UAAW,WAAW9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,MACrEmgF,EAAQ,UAAA,EACd,EACCA,EAAQ,kBACNr7E,OAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAAoO,GAAA,CAAsB,UAAU,+CAAgD,CAAA,EACjFpO,EAAAA,IAAC,OAAI,UAAW,mEACdN,EAAa,cAAgB,aAC/B,oJAAqJ,SAErJ,gBAAA,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EACAM,EAAAA,IAAC,IAAE,CAAA,UAAW,uBACZ6/E,EAAQ,SAAW,GACf,iBACAA,EAAQ,SAAW,EACjB,kBACA,cACR,GACG,SAAAA,EAAQ,SAAW,GAChB,WACAA,EAAQ,SAAW,EACjB,QAAQA,EAAQ,QAAQ,QACxB,cACR,CAAA,CAAA,EACF,SAGC,MAAI,CAAA,UAAW,8CACdngF,EAAa,kBAAoB,iBACnC,GACE,SAAA,CAACM,EAAAA,IAAAqrF,GAAA,CAAW,UAAU,0BAA2B,CAAA,EAChDrrF,EAAA,IAAA,OAAA,CAAK,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,GACnF,SAASmd,EAAAA,EAAO,QAAQ,CAAC,EAAI,MAChC,EACCsuE,EAAc,GACZ3mF,OAAA,OAAA,CAAK,UAAW,WAAW9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAC1EyrF,EAAY,GAAA,CAChB,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAEJ,EAEMG,GAAoB,CAAC,CAAE,SAAAtL,KAAe,CACpC,KAAA,CAAE,WAAAtgF,CAAW,EAAIO,GAAS,EAE1BsrF,EAA6B,IAAM,CACvC,IAAIC,EAAc,EACdC,EAAgB,KAEpB,OAAAzL,EAAS,QAAmBH,GAAA,CACtB,GAAAA,EAAQ,aAAeA,EAAQ,eAAgB,CAEjD,MAAM6L,EAAW7L,EAAQ,gBACrB6L,EAAWF,IACbA,EAAcE,GAIhB,MAAMC,EAAU,IAAI,KAAK9L,EAAQ,cAAc,GAC3C,CAAC4L,GAAiBE,EAAUF,KAC9BA,EAAgBE,EAClB,CACF,CACD,EAEM,CAAE,YAAAH,EAAa,cAAAC,CAAc,CACtC,EAEM,CAAE,YAAAD,EAAa,cAAAC,CAAc,EAAIF,EAA2B,EAElE,MAAI,CAACC,GAAe,CAACC,EAAsB,YAGxC,MAAI,CAAA,UAAW,GACd/rF,EACI,qEACA,kEACN,iDAEE,SAAA,CAAAM,EAAAA,IAAC,OAAI,UAAU,8CACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,mFACb,SAAA,CAACxE,EAAAA,IAAA+qF,GAAA,CAAa,UAAU,uBAAwB,CAAA,EAC/C/qF,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAA+B,iCAAA,CAAA,CAAA,CAAA,CAC7D,CACF,CAAA,EAGAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,EAAAA,IAAC,KAAE,UAAW,qCACZN,EAAa,gBAAkB,eACjC,GAAI,SAEJ,OAAA,CAAA,QACC,IAAE,CAAA,UAAU,gDACX,SAAC8E,EAAA,KAAA,OAAA,CAAK,UAAU,iBAAkB,SAAA,CAAAgnF,EAAY,OAAA,CAAA,CAAK,CACrD,CAAA,CAAA,EACF,EAGAhnF,EAAAA,KAAC,MAAI,CAAA,UAAU,8DACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,uBACfN,EAAa,gBAAkB,eACjC,GAAI,SAEJ,gBAAA,CAAA,SACC,MAAI,CAAA,UAAW,2BACdA,EAAa,iBAAmB,aAClC,kCACE,SAAA,CAACM,EAAAA,IAAAq5B,GAAA,CAAO,UAAU,sCAAuC,CAAA,EACzDr5B,EAAAA,IAACwqC,GAAe,CAAA,OAAQihD,CAAe,CAAA,CAAA,CACzC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EAEMG,GAAS,IAAM,CACb,KAAA,CAAE,WAAAlsF,CAAW,EAAIO,GAAS,EAC1B,CAACoB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACogF,EAAUC,CAAW,EAAIrgF,EAAAA,SAAS,CAAA,CAAE,EACrC,CAACu0C,EAAaC,CAAc,EAAIx0C,EAAAA,SAAS,EAAE,EAC3C,CAACisF,EAAkBC,CAAmB,EAAIlsF,EAAAA,SAAS,KAAK,EACxD,CAACmsF,EAAQC,CAAS,EAAIpsF,EAAAA,SAAS,QAAQ,EACvC,CAAC0vC,EAAiBC,CAAkB,EAAI3vC,EAAAA,SAAS,KAAK,EACJA,EAAAA,SAAS,EAAK,EACtE,KAAM,CAACs4B,EAAqBC,CAAsB,EAAIv4B,EAAAA,SAAS,EAAK,EAC9D,CAAC04B,EAAkBC,CAAmB,EAAI34B,EAAAA,SAAS,EAAK,EACxDqsF,EAAqBp0D,SAAO,IAAI,EAChCq0D,EAAkBr0D,SAAO,IAAI,EAE7BgB,EAAc,CAClB,CAAE,MAAO,SAAU,MAAO,QAAS,EACnC,CAAE,MAAO,YAAa,MAAO,oBAAqB,EAClD,CAAE,MAAO,aAAc,MAAO,oBAAqB,CACrD,EAEM2kD,EAAyB,CAC7B,aAAc,CACZ,CAAE,KAAM,WAAY,WAAO2O,GAAS,CAAA,UAAU,UAAU,CAAG,EAC3D,CAAE,KAAM,SAAU,WAAOC,GAAY,CAAA,UAAU,UAAU,CAAG,EAC5D,CAAE,KAAM,QAAS,WAAOC,GAAe,CAAA,UAAU,UAAU,CAAG,EAC9D,CAAE,KAAM,UAAW,WAAOC,GAAS,CAAA,UAAU,UAAU,CAAG,EAC1D,CAAE,KAAM,UAAW,WAAOC,GAAU,CAAA,UAAU,UAAU,CAAG,EAC3D,CAAE,KAAM,QAAS,WAAOC,GAAW,CAAA,UAAU,UAAU,CAAG,CAC5D,EACA,eAAgB,CACd,CAAE,KAAM,UAAW,WAAOC,GAAQ,CAAA,UAAU,UAAU,CAAG,EACzD,CAAE,KAAM,OAAQ,WAAON,GAAS,CAAA,UAAU,UAAU,CAAG,EACvD,CAAE,KAAM,SAAU,WAAOO,GAAQ,CAAA,UAAU,UAAU,CAAG,EACxD,CAAE,KAAM,QAAS,WAAOL,GAAe,CAAA,UAAU,UAAU,CAAG,EAC9D,CAAE,KAAM,UAAW,WAAOD,GAAY,CAAA,UAAU,UAAU,CAAG,EAC7D,CAAE,KAAM,UAAW,WAAOG,GAAU,CAAA,UAAU,UAAU,CAAG,CAC7D,EACA,SAAY,CACV,CAAE,KAAM,WAAY,WAAOI,GAAc,CAAA,UAAU,UAAU,CAAG,EAChE,CAAE,KAAM,eAAgB,WAAO,OAAK,CAAA,UAAU,0EAA0E,SAAA,IAAE,CAAA,CAAQ,EAClI,CAAE,KAAM,QAAS,WAAOC,GAAQ,CAAA,UAAU,UAAU,CAAG,EACvD,CAAE,KAAM,UAAW,WAAOC,GAAa,CAAA,UAAU,UAAU,CAAG,EAC9D,CAAE,KAAM,WAAY,WAAO,OAAK,CAAA,UAAU,0EAA0E,SAAA,KAAE,CAAQ,CAAA,CAElI,EAEMpP,EAA4B,CAChC,sBAAuB,CACrB,CAAE,KAAM,OAAQ,WAAOqP,GAAa,CAAA,UAAU,UAAU,CAAG,EAC3D,CAAE,KAAM,QAAS,WAAOC,GAAO,CAAA,UAAU,UAAU,CAAG,EACtD,CAAE,KAAM,OAAQ,WAAOC,GAAc,CAAA,UAAU,UAAU,CAAG,EAC5D,CAAE,KAAM,UAAW,WAAO,OAAK,CAAA,UAAU,0EAA0E,SAAA,IAAE,CAAA,CAAQ,EAC7H,CAAE,KAAM,UAAW,WAAOC,GAAiB,CAAA,UAAU,UAAU,CAAG,CACpE,EACA,mBAAoB,CAClB,CAAE,KAAM,cAAe,WAAOC,GAAsB,CAAA,UAAU,UAAU,CAAG,EAC3E,CAAE,KAAM,cAAe,WAAOC,GAAgB,CAAA,UAAU,UAAU,CAAG,EACrE,CAAE,KAAM,kBAAmB,WAAOC,GAAoB,CAAA,UAAU,UAAU,CAAG,EAC7E,CAAE,KAAM,gBAAiB,WAAOC,GAAgB,CAAA,UAAU,UAAU,CAAG,EACvE,CAAE,KAAM,WAAY,WAAOC,GAA6B,CAAA,UAAU,UAAU,CAAG,CAAA,CAEnF,EAEMC,EAAa,CACjB,CACE,GAAI,MACJ,KAAM,iBACN,KAAMvtF,EAAAA,IAACwtF,GAAU,CAAA,UAAU,SAAU,CAAA,CACvC,EACA,CACE,GAAI,WACJ,KAAM,WACN,KAAMxtF,EAAAA,IAACytF,GAAmB,CAAA,UAAU,SAAU,CAAA,EAC9C,cAAejQ,CACjB,EACA,CACE,GAAI,cACJ,KAAM,cACN,KAAMx9E,EAAAA,IAAC0tF,GAAqB,CAAA,UAAU,SAAU,CAAA,EAChD,cAAejQ,CACjB,EACA,CACE,GAAI,cACJ,KAAM,cACN,KAAMz9E,EAAAA,IAAC2tF,GAAU,CAAA,UAAU,SAAU,CAAA,CACvC,EACA,CACE,GAAI,OACJ,KAAM,OACN,KAAM3tF,EAAAA,IAAC4tF,GAAc,CAAA,UAAU,SAAU,CAAA,CAC3C,EACA,CACE,GAAI,MACJ,KAAM,MACN,KAAM5tF,EAAAA,IAAC6tF,GAAiB,CAAA,UAAU,SAAU,CAAA,CAC9C,EACA,CACE,GAAI,eACJ,KAAM,eACN,KAAM7tF,EAAAA,IAAC8tF,GAAqB,CAAA,UAAU,SAAU,CAAA,CAAA,CAEpD,EAEMn1D,EAAW,CACf,CAAE,MAAO,MAAO,MAAO,cAAe,EACtC,CAAE,MAAO,UAAW,MAAO,SAAU,EACrC,CAAE,MAAO,WAAY,MAAO,UAAW,CACzC,EAEA74B,EAAAA,UAAU,IAAM,CACAwgF,EAAA,CACb,EAAA,CAACuL,EAAkBE,EAAQz8C,CAAe,CAAC,EAE9C,MAAMgxC,EAAgB,SAAY,CAC5B,GAAA,CACFh/E,EAAW,EAAI,EACX,IAAAgB,EAAIE,GAAW9B,GAAI,UAAU,EAGjC,MAAMsV,EAAc,CAACvT,GAAM,SAAU,KAAM,QAAQ,CAAC,EAEpD,GAAIopF,IAAqB,MAEnB,GAAAA,EAAiB,SAAS,GAAG,EAAG,CAClC,KAAM,CAACxM,EAAc0O,EAAeC,CAAW,EAAInC,EAAiB,MAAM,GAAG,EAC7E71E,EAAY,KAAKvT,GAAM,WAAY,KAAM48E,CAAY,CAAC,EAC1CrpE,EAAA,KAAKvT,GAAM,cAAe,KAAM,GAAGsrF,CAAa,MAAMC,CAAW,EAAE,CAAC,CAAA,MAEhFh4E,EAAY,KAAKvT,GAAM,WAAY,KAAMopF,CAAgB,CAAC,EAI1Dv8C,IAAoB,OACtBt5B,EAAY,KAAKvT,GAAM,UAAW,KAAM6sC,CAAe,CAAC,EAGtDy8C,IAAW,SACb/1E,EAAY,KAAKnP,GAAQ,YAAa,MAAM,CAAC,EACpCklF,IAAW,YACpB/1E,EAAY,KAAKnP,GAAQ,QAAS,KAAK,CAAC,EAC/BklF,IAAW,cACpB/1E,EAAY,KAAKnP,GAAQ,QAAS,MAAM,CAAC,EAG3CvE,EAAIC,GAAMD,EAAG,GAAG0T,EAAajP,GAAM,EAAE,CAAC,EAChC,MAAArE,EAAgB,MAAMC,GAAQL,CAAC,EAG/ByN,EAAY,CAAC,GAAG,IAAI,IAAIrN,EAAc,KAAK,IAAIX,GAAOA,EAAI,KAAA,EAAO,QAAQ,CAAC,CAAC,EAG3EmG,EAAkB,MAAMvF,GAAQJ,GACpCC,GAAW9B,GAAI,SAAS,EACxB+B,GAAM,WAAY,KAAMsN,CAAS,CAAA,CAClC,EAGKk+E,EAAwB,CAAC,EACf/lF,EAAA,KAAK,QAAenG,GAAA,CAClCksF,EAAsBlsF,EAAI,EAAE,EAAIA,EAAI,KAAA,EAAO,qBAAuB,UAAA,CACnE,EAED,MAAMy+E,EAAe99E,EAAc,KAAK,IAAWX,GAAA,CAC3C,MAAAuG,EAAOvG,EAAI,KAAK,EACf,MAAA,CACL,GAAIA,EAAI,GACR,GAAGuG,EACH,iBAAkB2lF,EAAsB3lF,EAAK,QAAQ,GAAK,EAC5D,CAAA,CACD,EAED23E,EAAYO,CAAY,QACjB59E,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC/CQ,EAAM,MAAM,yBAAyB,CAAA,QACrC,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEM4sF,EAAmBlO,EAAS,UAChCH,EAAQ,KAAK,YAAY,EAAE,SAAS1rC,EAAY,YAAa,CAAA,GAC7D0rC,EAAQ,YAAY,cAAc,SAAS1rC,EAAY,YAAa,CAAA,CACtE,EAEMlgB,EAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMoD,EAAe,CACnB,OAAQ,CAAE,EAAG,GAAI,QAAS,CAAE,EAC5B,QAAS,CACP,EAAG,EACH,QAAS,EACT,WAAY,CACV,KAAM,SACN,UAAW,GAAA,CACb,CAEJ,EAEA,OAAIh2B,QACM2pF,GAAe,EAAA,EAIvBxmF,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAW,yBAAyB5O,EAAa,cAAgB,YAAY,GAC7E,QAAQ,SACR,QAAQ,UACR,SAAUu0B,EAGV,SAAA,CAAAzvB,OAAC8J,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAU,uCAC5C,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,oBAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,UAAW,aACT9E,EACI,gDACA,2CACN,mKAEA,SAAA,CAAAM,MAACw3E,IAAO,UAAW,WAAW93E,EAAa,gBAAkB,eAAe,GAAI,QAC/E,OAAK,CAAA,UAAW,GAAGA,EAAa,gBAAkB,eAAe,GAC/D,SAAW6tF,EAAA,QAAYY,EAAI,KAAOtC,CAAgB,GAAG,MAAQ,iBAChE,EACA7rF,EAAA,IAAC,MAAA,CACC,UAAW,WAAWN,EAAa,gBAAkB,eAAe,uDACpE,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAM,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EAGCA,MAAA,MAAA,CAAI,UAAW,2CACdN,EACI,8BACA,0BACN,gIACG,SAAA6tF,EAAW,IAAK/zD,GACdh1B,EAAAA,KAAA,MAAA,CAAsB,UAAU,aAC/B,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACbsnF,EAAoBtyD,EAAS,EAAE,CACjC,EACA,UAAW,8BACT95B,EACI,uDACA,qDACN,2BAEA,SAAA,CAACM,EAAAA,IAAA,OAAA,CAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,qDAC/D,WAAS,IACZ,CAAA,EACAM,EAAAA,IAAC,OAAM,CAAA,SAAAw5B,EAAS,IAAK,CAAA,EACpBA,EAAS,eACRx5B,EAAA,IAAC,MAAA,CACC,UAAW,WAAWN,EAAa,gBAAkB,eAAe,WACpE,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAM,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,cAAe,CAAA,CAAA,CAAA,CACtF,CAAA,CAEJ,EAGCw5B,EAAS,eACRx5B,EAAAA,IAAC,MAAI,CAAA,UAAW,yCACdN,EACI,8BACA,0BACN,qIACG,SAAO,OAAA,QAAQ85B,EAAS,aAAa,EAAE,IAAI,CAAC,CAAC6lD,EAAcE,CAAQ,IAClE/6E,EAAA,KAAC,MAAuB,CAAA,UAAU,MAChC,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAW,iCACdN,EAAa,gBAAkB,eACjC,GAAK,SAAa2/E,CAAA,CAAA,QACjB,MAAI,CAAA,UAAU,yBACZ,SAASE,EAAA,IAAKD,GACb96E,EAAA,KAAC,SAAA,CAEC,QAAS,IAAM,CACOsnF,EAAA,GAAGtyD,EAAS,EAAE,IAAI6lD,CAAY,IAAIC,EAAQ,IAAI,EAAE,CACtE,EACA,UAAW,qBACT5/E,EACI,kCACA,gCACN,kEAEA,SAAA,CAACM,EAAAA,IAAA,OAAA,CAAK,UAAW,kEACd,WAAQ,IACX,CAAA,EACAA,EAAAA,IAAC,OAAM,CAAA,SAAAs/E,EAAQ,IAAK,CAAA,CAAA,CAAA,EAbfA,EAAQ,IAAA,CAehB,CACH,CAAA,CAAA,CAvBQ,EAAAD,CAwBV,CACD,CACH,CAAA,CAAA,GA7DM7lD,EAAS,EA+DnB,CACD,CACH,CAAA,CAAA,EACF,EAGAh1B,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,YAAY,qBACZ,MAAOm0C,EACP,SAAW3sC,GAAM4sC,EAAe5sC,EAAE,OAAO,KAAK,EAC9C,UAAW,0BACT9H,EACI,iEACA,6DACN,kHAAA,CACF,QACCotE,GAAS,CAAA,UAAW,gEAET,CAAA,CAAA,CACd,CAAA,CAAA,EACF,EAEAtoE,EAAAA,KAAC,MAAI,CAAA,UAAU,0BAEb,SAAA,CAAAA,EAAA,KAAC,MAAA,CACC,UAAU,WACV,IAAKynF,EACL,aAAc,IAAM9zD,EAAuB,EAAI,EAC/C,aAAc,IAAMA,EAAuB,EAAK,EAEhD,SAAA,CAAA3zB,EAAA,KAAC,SAAA,CACC,KAAK,SACL,UAAW,aACT9E,EACI,gDACA,2CACN,6KAEA,SAAA,CAAAM,EAAA,IAAC,OAAK,CAAA,UAAWN,EAAa,gBAAkB,gBAC7C,SAAAi5B,EAAS,KAAKG,GAAKA,EAAE,QAAUwW,CAAe,GAAG,OAAS,eAC7D,EACAtvC,EAAA,IAAC,MAAA,CACC,UAAW,WAAWN,EAAa,gBAAkB,eAAe,yBAAyBw4B,EAAsB,aAAe,EAAE,GACpI,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAl4B,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EAECk4B,GACEl4B,EAAA,IAAA,MAAA,CAAI,UAAW,6BACdN,EACI,8BACA,0BACN,+BACG,SAASi5B,EAAA,IACR3Z,GAAAhf,EAAA,IAAC,SAAA,CAEC,QAAS,IAAMuvC,EAAmBvwB,EAAQ,KAAK,EAC/C,UAAW,8BACTswB,IAAoBtwB,EAAQ,MACxB,4BACAtf,EACE,kCACA,gCACR,wCAEC,SAAQsf,EAAA,KAAA,EAVJA,EAAQ,KAAA,CAYhB,CACH,CAAA,CAAA,CAAA,CAEJ,EAGAxa,EAAA,KAAC,MAAA,CACC,UAAU,WACV,IAAK0nF,EACL,aAAc,IAAM3zD,EAAoB,EAAI,EAC5C,aAAc,IAAMA,EAAoB,EAAK,EAE7C,SAAA,CAAA/zB,EAAA,KAAC,SAAA,CACC,KAAK,SACL,UAAW,aACT9E,EACI,gDACA,2CACN,6KAEA,SAAA,CAAAM,EAAA,IAAC,OAAK,CAAA,UAAWN,EAAa,gBAAkB,gBAC7C,SAAAm5B,EAAY,KAAKu1D,GAAOA,EAAI,QAAUrC,CAAM,GAAG,OAAS,SAC3D,EACA/rF,EAAA,IAAC,MAAA,CACC,UAAW,WAAWN,EAAa,gBAAkB,eAAe,yBAAyB44B,EAAmB,aAAe,EAAE,GACjI,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAt4B,EAAA,IAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAiB,CAAA,CAAA,CAAA,CACxF,CAAA,CACF,EAECs4B,GACEt4B,EAAA,IAAA,MAAA,CAAI,UAAW,6BACdN,EACI,8BACA,0BACN,+BACG,SAAYm5B,EAAA,IACXG,GAAAh5B,EAAA,IAAC,SAAA,CAEC,QAAS,IAAMgsF,EAAUhzD,EAAO,KAAK,EACrC,UAAW,8BACT+yD,IAAW/yD,EAAO,MACd,4BACAt5B,EACE,kCACA,gCACR,wCAEC,SAAOs5B,EAAA,KAAA,EAVHA,EAAO,KAAA,CAYf,CACH,CAAA,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,EACF,EAGAh5B,EAAAA,IAACsO,EAAO,IAAP,CAAW,SAAU+oB,EACpB,SAAAr3B,EAAAA,IAACsrF,GAAkB,CAAA,SAAAtL,CAAA,CAAoB,CACzC,CAAA,EAGAhgF,EAAAA,IAACsO,EAAO,IAAP,CAAW,SAAU+oB,EACpB,SAAAr3B,EAAAA,IAAC4qF,GAAc,CAAA,SAAA5K,CAAA,CAAoB,CACrC,CAAA,EAGCkO,EAAiB,SAAW,EAC3BluF,EAAAA,IAACsO,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAU,oBAC5C,SAACr3B,EAAAA,IAAA,IAAA,CAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAkB,qBAAA,CAAA,CACvF,EAEAM,EAAA,IAACsO,EAAO,IAAP,CACC,UAAU,sEACV,SAAU2lB,EAET,SAAAi6D,EAAiB,IAAKrO,SACpBqL,GAA6B,CAAA,QAAArL,CAAA,EAAZA,EAAQ,EAAsB,CACjD,CAAA,CAAA,CACH,CAAA,CAEJ,CAEJ,ECx5BMwO,GAAa,CAAC,CAAE,OAAAxxE,EAAQ,UAAAC,EAAW,cAAAwxE,EAAgB,MAEpDtuF,EAAAA,IAAA,MAAA,CAAI,UAAU,0BACZ,SAAC,CAAA,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKmR,GACpBnR,EAAA,IAAC,SAAA,CAEC,QAAS,IAAMsuF,GAAiBxxE,EAAU3L,CAAI,EAC9C,UAAW,GAAGm9E,EAAgB,iBAAmB,gBAAgB,GACjE,SAAU,CAACA,EAEX,SAAAtuF,EAAA,IAACoR,GAAA,CACC,UAAW,WACTD,GAAQ0L,EAAS,iBAAmB,eACtC,EAAA,CAAA,CACF,EATK1L,CAWR,CAAA,EACH,EAIEo9E,GAAc,CAAC,CAAE,OAAA7yE,EAAQ,QAAAC,EAAS,UAAA6yE,EAAW,cAAAC,KAAoB,CACrE,KAAM,CAAC5xE,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAACwQ,EAAQs+E,CAAS,EAAI9uF,EAAAA,SAAS,EAAE,EACjC,CAAC+uF,EAAOC,CAAQ,EAAIhvF,EAAAA,SAAS,IAAI,EACjC,CAACs9E,EAAcC,CAAe,EAAIv9E,EAAAA,SAAS,EAAE,EAC7C,CAACwnF,EAAcC,CAAe,EAAIznF,EAAAA,SAAS,EAAK,EAChD,CAAE,KAAAuB,CAAK,EAAImC,GAAa,EAExBurF,EAAqBrnF,GAAM,CAC/B,MAAMkN,EAAOlN,EAAE,OAAO,MAAM,CAAC,EAC7B,GAAIkN,EAAM,CACR,GAAIA,EAAK,KAAO,EAAI,KAAO,KAAM,CAC/BtR,EAAM,MAAM,6BAA6B,EACzC,MAAA,CAEFwrF,EAASl6E,CAAI,EACP,MAAAo6E,EAAS,IAAI,WACnBA,EAAO,UAAY,IAAM,CACvB3R,EAAgB2R,EAAO,MAAM,CAC/B,EACAA,EAAO,cAAcp6E,CAAI,CAAA,CAE7B,EAEMyP,EAAe,MAAO3c,GAAM,CAEhC,GADAA,EAAE,eAAe,EACb,CAACqV,EAAQ,CACXzZ,EAAM,MAAM,wBAAwB,EACpC,MAAA,CAGFikF,EAAgB,EAAI,EAChB,GAAA,CAEF,MAAMzgF,EAAcrE,GAClBC,GAAW9B,GAAI,QAAQ,EACvB+B,GAAM,UAAW,KAAMtB,EAAK,GAAG,EAC/BsB,GAAM,SAAU,KAAM,WAAW,CACnC,EAIMssF,GAFiB,MAAMpsF,GAAQiE,CAAW,GAEd,KAAK,KAAK7E,GAC1CA,EAAI,OAAO,MAAM,KAAK4C,GAAQA,EAAK,YAAc6pF,CAAS,CAC5D,EAEA,GAAI,CAACO,EAAY,CACf3rF,EAAM,MAAM,8DAA8D,EAC1EikF,EAAgB,EAAK,EACrB,MAAA,CAIF,MAAM3F,EAAa,MAAMz/E,GAAOF,GAAIrB,GAAI,WAAY8tF,CAAS,CAAC,EAC1D,GAAA,CAAC9M,EAAW,SAAU,CACxBt+E,EAAM,MAAM,mBAAmB,EAC/BikF,EAAgB,EAAK,EACrB,MAAA,CAEI,MAAAjK,EAAcsE,EAAW,KAAK,EAEpC,IAAIvlD,EAAW,GACf,GAAIwyD,EAAO,CACT,MAAM/N,EAAWpC,GAAI59E,GAAS,WAAW4tF,CAAS,IAAIrtF,EAAK,GAAG,IAAI,KAAK,IAAI,CAAC,EAAE,EACxE,MAAAs9E,GAAYmC,EAAU+N,CAAK,EACtBxyD,EAAA,MAAMuiD,GAAekC,CAAQ,CAAA,CAI1C,MAAMoO,EAAa,CACjB,UAAAR,EACA,OAAQrtF,EAAK,IACb,SAAUi8E,EAAY,SACtB,OAAAvgE,EACA,OAAQzM,EAAO,KAAK,EACpB,MAAO+rB,EACP,cAAe,KACf,SAAUh7B,EAAK,aAAeA,EAAK,OAAO,MAAM,GAAG,EAAE,CAAC,GAAK,YAC3D,YAAai8E,EAAY,KACzB,UAAW2R,EAAW,KAAA,EAAO,UAC7B,mBAAoB,SACtB,EAGA,MAAMp5E,GAAOnT,GAAW9B,GAAI,SAAS,EAAGsuF,CAAU,EAGlD,MAAM7G,EAAYpmF,GAAIrB,GAAI,UAAW08E,EAAY,QAAQ,EACnDpwE,EAAY,MAAM/K,GAAOkmF,CAAS,EACpC,GAAAn7E,EAAU,SAAU,CAChB,MAAA3F,EAAa2F,EAAU,KAAK,EAC5BiiF,EAAgB5nF,EAAW,YAAY,QAAU,EACjD6nF,EAAe7nF,EAAW,YAAY,cAAgB,EAEtD8nF,GAAcF,EAAgBC,EAAgBryE,IAAWqyE,EAAe,GAE9E,MAAMp+E,GAAUq3E,EAAW,CACzB,oBAAqBgH,EACrB,0BAA2BD,EAAe,EAC1C,cAAe,IAAK,CACrB,CAAA,CAGH9rF,EAAM,QAAQ,+BAA+B,EAC/BqrF,EAAA,EACN9yE,EAAA,QACD/Y,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC/CQ,EAAM,MAAM,4CAA4C,CAAA,QACxD,CACAikF,EAAgB,EAAK,CAAA,CAEzB,EAEI,OAAC3rE,EAIDlX,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAA/S,EAAA,IAAC,MAAI,CAAA,UAAU,4CAA4C,QAAS2b,EAAS,EAC7E3b,EAAAA,IAAC,MAAI,CAAA,UAAU,0DACb,SAAAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,MAAO,GAAK,QAAS,CAAE,EAClC,QAAS,CAAE,MAAO,EAAG,QAAS,CAAE,EAChC,UAAU,oDAEV,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAc,iBAAA,EACpDA,EAAAA,IAAC,SAAO,CAAA,QAAS2b,EAAS,UAAU,oCAClC,SAAC3b,EAAA,IAAAkgB,GAAA,CAAI,UAAU,SAAU,CAAA,CAC3B,CAAA,CAAA,EACF,EAEC1b,EAAA,KAAA,OAAA,CAAK,SAAU2f,EAAc,UAAU,YACtC,SAAA,CAAA3f,OAAC,MACC,CAAA,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,SAAA,EACAA,EAAAA,IAACquF,GAAW,CAAA,OAAAxxE,EAAgB,UAAAC,CAAsB,CAAA,CAAA,EACpD,SAEC,MACC,CAAA,SAAA,CAAC9c,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,SAAA,EACAA,EAAA,IAAC,WAAA,CACC,MAAOoQ,EACP,SAAW5I,GAAMknF,EAAUlnF,EAAE,OAAO,KAAK,EACzC,UAAU,iGACV,KAAK,IACL,YAAY,4CAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,CAACxH,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,uBAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,iBACf,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,OAAO,UACP,SAAU6uF,EACV,UAAU,QAAA,CACZ,EACArqF,EAAAA,KAAC,MAAI,CAAA,UAAU,uFACb,SAAA,CAACxE,EAAAA,IAAAovF,GAAA,CAAQ,UAAU,SAAU,CAAA,EAC5BpvF,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAY,cAAA,CAAA,CAAA,CACxC,CAAA,CAAA,EACF,EACCk9E,GACC14E,EAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKk9E,EACL,IAAI,UACJ,UAAU,mCAAA,CACZ,EACAl9E,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAM,CACb4uF,EAAS,IAAI,EACbzR,EAAgB,EAAE,CACpB,EACA,UAAU,kEAEV,SAAAn9E,EAAAA,IAACkgB,GAAI,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC3B,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAEA1b,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS2b,EACT,UAAU,2EACX,SAAA,QAAA,CAED,EACA3b,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAUonF,GAAgB,CAACvqE,EAC3B,UAAU,0GAET,WAAe,gBAAkB,eAAA,CAAA,CACpC,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAjGkB,IAmGtB,EAEMwyE,GAAa,CAAC,CAAE,OAAA3zE,EAAQ,QAAAC,EAAS,SAAAwgB,KAChCzgB,EAIDlX,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAA/S,EAAA,IAAC,MAAI,CAAA,UAAU,4CAA4C,QAAS2b,EAAS,QAC5E,MAAI,CAAA,UAAU,0DACb,SAACnX,EAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,0DAEV,SAAA3b,EAAAA,IAACkgB,GAAI,CAAA,UAAU,SAAU,CAAA,CAAA,CAC3B,EACAlgB,EAAA,IAAC,MAAA,CACC,IAAKm8B,EACL,IAAI,SACJ,UAAU,0BAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,CAAA,EACF,EApBkB,KAwBhBmzD,GAAiB,CAAC,CAAE,UAAAd,KAAgB,CACxC,KAAM,CAACz/E,EAASC,CAAU,EAAIpP,EAAAA,SAAS,CAAA,CAAE,EACnC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACgyE,EAAaC,CAAc,EAAIjyE,EAAAA,SAAS,EAAK,EAC9C,CAAE,KAAAuB,CAAK,EAAImC,GAAa,EACxB,CAACisF,EAAeC,CAAgB,EAAI5vF,EAAAA,SAAS,CAAC,EAC9C,CAAC6vF,EAAWC,CAAY,EAAI9vF,EAAAA,SAAS,EAAK,EAC1C,CAAC+vF,EAAeC,CAAgB,EAAIhwF,EAAAA,SAAS,IAAI,EACjD,CAACgG,EAAaC,CAAc,EAAIjG,EAAAA,SAAS,CAAC,EAC1CiwF,EAAiB,GACjB,CAAE,WAAAnwF,CAAW,EAAIO,GAAS,EAE1B6vF,EAAe,SAAY,CAC3B,GAAA,CACF,MAAM7/E,EAAe1N,GACnBC,GAAW9B,GAAI,SAAS,EACxB+B,GAAM,YAAa,KAAM+rF,CAAS,EAClC3nF,GAAQ,YAAa,MAAM,CAC7B,EAGM8J,GADkB,MAAMhO,GAAQsN,CAAY,GACd,KAAK,IAAIlO,IAAQ,CACnD,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,EACZ,UAAWA,EAAI,KAAK,EAAE,WAAW,OAAO,CAAA,EACxC,EAKE,GAHJiN,EAAW2B,CAAW,EAGlBA,EAAY,OAAS,EAAG,CACpB,MAAAH,EAAYG,EAAY,OAAO,CAAC/H,EAAKwH,IAAWxH,EAAMwH,EAAO,OAAQ,CAAC,EAAIO,EAAY,OAC5F6+E,EAAiBh/E,CAAS,CAAA,CAI5B,GAAIrP,EAAM,CACR,MAAMyF,EAAcrE,GAClBC,GAAW9B,GAAI,QAAQ,EACvB+B,GAAM,UAAW,KAAMtB,EAAK,GAAG,EAC/BsB,GAAM,SAAU,KAAM,WAAW,CACnC,EAGMstF,GADiB,MAAMptF,GAAQiE,CAAW,GACX,KAAK,KAAK7E,GAC7CA,EAAI,OAAO,MAAM,KAAK4C,GAAQA,EAAK,YAAc6pF,CAAS,CAC5D,EAEMwB,EAAcr/E,EAAY,QAAeP,EAAO,SAAWjP,EAAK,GAAG,EAC5DuuF,EAAAK,GAAiB,CAACC,CAAW,CAAA,QAErCptF,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,EAAM,MAAM,wBAAwB,CAAA,QACpC,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEAxB,EAAAA,UAAU,IAAM,CACDgwF,EAAA,CAAA,EACZ,CAACtB,EAAWrtF,CAAI,CAAC,EAGpB,MAAM84B,EAAa,KAAK,KAAKlrB,EAAQ,OAAS8gF,CAAc,EACtDI,EAAoBrqF,EAAciqF,EAClCK,EAAqBD,EAAoBJ,EACzCM,EAAiBphF,EAAQ,MAAMmhF,EAAoBD,CAAiB,EAEpEG,EAAoBhK,GAAe,CACvCvgF,EAAeugF,CAAU,EACzB,OAAO,SAAS,CACd,IAAK,SAAS,eAAe,iBAAiB,EAAE,UAAY,IAC5D,SAAU,QAAA,CACX,CACH,EAEA,OAAI/kF,EACMrB,EAAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAkB,qBAAA,EAIvDwE,EAAAA,KAAA,MAAA,CAAI,UAAU,OAAO,GAAG,kBACvB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,qBAAqBN,EAAa,gBAAkB,eAAe,GAAI,SAEtF,kBAAA,CAAA,EACCqP,EAAQ,OAAS,GACfvK,EAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAxE,EAAA,IAAC,MAAI,CAAA,UAAU,oBACZ,SAAA,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKmR,GACpBnR,MAAC,MAAe,CAAA,UAAU,yBAAyB,KAAK,eAAe,QAAQ,YAC7E,SAAAA,EAAAA,IAAC,OAAK,CAAA,EAAE,0VAA2V,CAAA,CAAA,EAD3VmR,CAEV,CACD,EACH,EACAnR,EAAAA,IAAC,OAAK,CAAA,UAAW,GAAGN,EAAa,gBAAkB,eAAe,eAC/D,SAAA6vF,EAAc,QAAQ,CAAC,CAC1B,CAAA,SACC,OAAK,CAAA,UAAW,GAAG7vF,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAClEqP,EAAQ,OAAO,IAAEA,EAAQ,SAAW,EAAI,SAAW,UAAU,GAAA,CACjE,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EACC0gF,GACCzvF,EAAA,IAAC,SAAA,CACC,QAAS,IAAM6xE,EAAe,EAAI,EAClC,UAAU,sFACX,SAAA,gBAAA,CAAA,CAED,EAEJ,EAEC9iE,EAAQ,SAAW,EAClB/O,EAAA,IAAC,MAAI,CAAA,UAAW,oBAAoBN,EAAa,gBAAkB,eAAe,GAAI,SAAA,gBAAA,CAEtF,EAGE8E,OAAAuO,EAAAA,SAAA,CAAA,SAAA,CAAA/S,MAAC,MAAI,CAAA,UAAU,YACZ,SAAAmwF,EAAe,IAAK//E,GAClB5L,EAAA,KAAA,MAAA,CAAoB,UAAW,GAAG9E,EAAa,kBAAoB,iBAAiB,2CACnF,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAC3E,WAAO,QACV,CAAA,SACC,OAAK,CAAA,UAAW,WAAWA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,KACzE0Q,EAAO,UAAU,mBAAmB,CAAA,CACzC,CAAA,CAAA,EACF,EACCpQ,EAAA,IAAA,MAAA,CAAI,UAAU,oBACZ,SAAC,CAAA,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKmR,GACpBnR,EAAA,IAAC,MAAA,CAEC,UAAW,WAAWmR,GAAQf,EAAO,OAAS,iBAAmB1Q,EAAa,gBAAkB,eAAe,GAC/G,KAAK,eACL,QAAQ,YAER,SAAAM,EAAAA,IAAC,OAAK,CAAA,EAAE,0VAA2V,CAAA,CAAA,EAL9VmR,CAAA,CAOR,CACH,CAAA,CAAA,EACF,EACAnR,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAC5D,SAAA0Q,EAAO,MACV,CAAA,EACCA,EAAO,OACNpQ,EAAA,IAAC,SAAA,CACC,QAAS,IAAM4vF,EAAiBx/E,EAAO,KAAK,EAC5C,UAAU,aAEV,SAAApQ,EAAA,IAAC,MAAA,CACC,IAAKoQ,EAAO,MACZ,IAAI,SACJ,UAAU,uEAAA,CAAA,CACZ,CAAA,CAnCI,CAAA,EAAAA,EAAO,EAsCjB,CACD,EACH,EAGC6pB,EAAa,GACXz1B,OAAA,MAAA,CAAI,UAAU,8CACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMowF,EAAiBxqF,EAAc,CAAC,EAC/C,SAAUA,IAAgB,EAC1B,UAAU,qFAEV,SAAA5F,EAAA,IAAC,OAAI,UAAU,UAAU,KAAK,OAAO,OAAO,eAAe,QAAQ,YACjE,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,iBAAkB,CAAA,CACzF,CAAA,CAAA,CACF,EACC,CAAC,GAAG,MAAMi6B,CAAU,CAAC,EAAE,IAAI,CAAC1rB,EAAGrE,IAC9BlK,EAAA,IAAC,SAAA,CAEC,QAAS,IAAMowF,EAAiBlmF,EAAQ,CAAC,EACzC,UAAW,0CACTtE,IAAgBsE,EAAQ,EACpB,0BACA,iCACN,GAEC,SAAQA,EAAA,CAAA,EARJA,EAAQ,CAAA,CAUhB,EACDlK,EAAA,IAAC,SAAA,CACC,QAAS,IAAMowF,EAAiBxqF,EAAc,CAAC,EAC/C,SAAUA,IAAgBq0B,EAC1B,UAAU,qFAEV,SAAAj6B,EAAA,IAAC,OAAI,UAAU,UAAU,KAAK,OAAO,OAAO,eAAe,QAAQ,YACjE,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,cAAe,CAAA,CACtF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAEJ,EAGFA,EAAA,IAACuuF,GAAA,CACC,OAAQ3c,EACR,QAAS,IAAMC,EAAe,EAAK,EACnC,UAAA2c,EACA,cAAesB,CAAA,CACjB,EAEA9vF,EAAA,IAACqvF,GAAA,CACC,OAAQ,CAAC,CAACM,EACV,QAAS,IAAMC,EAAiB,IAAI,EACpC,SAAUD,CAAA,CAAA,CACZ,EACF,CAEJ,EC5dMxX,GAAgB,IAAM,CACpB,KAAA,CAAE,WAAAz4E,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,iBAAiB5O,EAAa,cAAgB,aAAa,cACtE,QAAS,CACP,QAAS,CAAC,GAAK,GAAK,EAAG,CACzB,EACA,WAAY,CACV,SAAU,IACV,OAAQ,IACR,KAAM,WAAA,CACR,CACF,CAEJ,EAEM2wF,GAAyB,IAAM,CAC7B,KAAA,CAAE,WAAA3wF,CAAW,EAAIO,GAAS,gBAE7B,MAAI,CAAA,UAAW,yBAAyBP,EAAa,cAAgB,YAAY,GAChF,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,wCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,2CACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,EACCn4E,EAAAA,IAAA,OAAI,UAAU,yBACZ,UAAC,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKwO,GAChBxO,EAAAA,IAAA,OAAY,UAAU,2CACrB,SAACA,MAAAm4E,GAAc,CAAA,CAAA,GADP3pE,CAEV,CACD,CACH,CAAA,CAAA,EACF,EAGChK,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,YACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,cACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EAGC3zE,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,UACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EAGC3zE,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,YACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,cACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,qBACb,SAAC3zE,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,yCACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,EACC3zE,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGC3zE,EAAAA,KAAA,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,wCACZ,SAAA,CAAC,EAAG,EAAG,EAAG,CAAC,EAAE,IAAK3pE,GAChBhK,EAAA,KAAA,MAAA,CAAY,UAAU,gDACrB,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,gBACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,EACC3zE,EAAAA,KAAA,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,YACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,CAdQ,EAAA3pE,CAeV,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EAEM8hF,GAAiB,IAAM,CACrB,KAAA,CAAE,GAAAr8E,CAAG,EAAI2mB,GAAU,EACnBvY,EAAWC,GAAY,EACvB,CAAE,KAAAnhB,EAAM,gBAAAovF,CAAgB,EAAIjtF,GAAa,EACzC,CAACu8E,EAAS0B,CAAU,EAAI3hF,EAAAA,SAAS,IAAI,EACrC,CAAE,WAAAF,CAAW,EAAIO,GAAS,EAC1B,CAACuJ,EAAQitE,CAAS,EAAI72E,EAAAA,SAAS,IAAI,EACnC,CAAC2X,EAAUi5E,CAAW,EAAI5wF,EAAAA,SAAS,CAAC,EACpC,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAC+vF,EAAeC,CAAgB,EAAIhwF,EAAAA,SAAS,CAAC,EAC9C,CAAC6wF,EAAiBC,CAAkB,EAAI9wF,EAAAA,SAAS,CAAA,CAAE,EACnD,CAAC+wF,EAAYC,CAAa,EAAIhxF,EAAAA,SAAS,CAAC,EACxC,CAACixF,EAAcC,CAAe,EAAIlxF,EAAAA,SAAS,EAAE,EAC7C,CAACmxF,EAAeC,CAAgB,EAAIpxF,EAAAA,SAAS,EAAE,EAC/C,CAACqxF,EAAeC,CAAgB,EAAItxF,EAAAA,SAAS,EAAK,EAExDE,EAAAA,UAAU,IAAM,CACd,GAAI,CAACmU,EAAI,QAEY,SAAY,CAC/B3S,EAAW,EAAI,EACX,GAAA,CACF,MAAMogF,EAAa,MAAMz/E,GAAOF,GAAIrB,GAAI,WAAYuT,CAAE,CAAC,EACnD,GAAAytE,EAAW,SAAU,CACjB,MAAAtE,EAAc,CAAE,GAAIsE,EAAW,GAAI,GAAGA,EAAW,MAAO,EAI9D,GAHAH,EAAWnE,CAAW,EAGlBA,EAAY,SAAU,CAClB,MAAApwE,EAAY,MAAM/K,GAAOF,GAAIrB,GAAI,UAAW08E,EAAY,QAAQ,CAAC,EACnEpwE,EAAU,UACFypE,EAAA,CAAE,GAAIzpE,EAAU,GAAI,GAAGA,EAAU,KAAA,EAAQ,CACrD,CAGmBmkF,EAAA,CAAA,QAEhBvuF,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,EAAM,MAAM,gCAAgC,CAAA,QAC5C,CACA9B,EAAW,EAAK,CAAA,CAEpB,GAEa,CAAA,EACZ,CAAC2S,CAAE,CAAC,EAEPnU,EAAAA,UAAU,IAAM,CACd,GAAI+/E,EAAS,CAGX,MAAMuR,GAFkBvR,EAAQ,aAAe,IAAI,KAAS,IAAI,KAAKA,EAAQ,cAAc,EACpDA,EAAQ,gBAAkBA,EAAQ,OACzCtoE,EAC1B85E,EAAcxR,EAAQ,aAAe,EACrChJ,EAAQua,EAAWC,EACzBT,EAAc/Z,CAAK,CAAA,CACrB,EACC,CAACt/D,EAAUsoE,CAAO,CAAC,EAEtB,MAAMsR,EAAuB,SAAY,CACnC,GAAA,CACF,MAAMzP,EAAa,MAAMz/E,GAAOF,GAAIrB,GAAI,WAAYuT,CAAE,CAAC,EACnD,GAAAytE,EAAW,SAAU,CACjB,MAAAtE,EAAcsE,EAAW,KAAK,EAGpC,IAAIp/E,EAAIC,GACNC,GAAW9B,GAAI,UAAU,EACzB+B,GAAM,WAAY,KAAM26E,EAAY,QAAQ,EAC5C36E,GAAM,SAAU,KAAM,QAAQ,EAC9BsE,GAAM,CAAC,CACT,EACIrE,EAAgB,MAAMC,GAAQL,CAAC,EAC/BgvF,EAAsB5uF,EAAc,KACrC,IAAIX,IAAQ,CACX,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EACD,OAAYo4B,GAAAA,EAAE,KAAOlmB,CAAE,EAGtBq9E,EAAoB,SAAW,IAC7BhvF,EAAAC,GACFC,GAAW9B,GAAI,UAAU,EACzB+B,GAAM,WAAY,KAAM26E,EAAY,QAAQ,EAC5C36E,GAAM,SAAU,KAAM,QAAQ,EAC9BsE,GAAM,CAAC,CACT,EACgBrE,EAAA,MAAMC,GAAQL,CAAC,EAC/BgvF,EAAsB5uF,EAAc,KACjC,IAAIX,IAAQ,CACX,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EACD,OAAYo4B,GAAAA,EAAE,KAAOlmB,CAAE,GAG5By8E,EAAmBY,CAAmB,CAAA,QAEjC1uF,EAAO,CACN,QAAA,MAAM,mCAAoCA,CAAK,CAAA,CAE3D,EAEM2uF,EAAwBxxF,GAAU,CAClC,GAAA,CAACgxF,GAAiBlR,EAAQ,YAAa,CACzCz8E,EAAM,MAAM,6BAA6B,EACzC,MAAA,CAGF,MAAMouF,EAAc3R,EAAQ,YACxBA,EAAQ,gBAAgBkR,CAAa,EACrClR,EAAQ,SAEN4R,EAAc,KAAK,IAAI,EAAG,KAAK,IAAID,EAAaj6E,EAAWxX,CAAK,CAAC,EACvEywF,EAAYiB,CAAW,CACzB,EAEMC,EAAY,SAAY,CACxB,GAAA,CACF,GAAI,CAACvwF,EAAM,CACTiC,EAAM,MAAM,mCAAmC,EAC/Cif,EAAS,oBAAoB,EAC7B,MAAA,CAGF,GAAIw9D,EAAQ,WAAa,YAAcA,EAAQ,YAAa,CAC1D,GAAI,CAACgR,EAAc,CACjBztF,EAAM,MAAM,sBAAsB,EAClC,MAAA,CAEF,GAAI,CAAC2tF,EAAe,CAClB3tF,EAAM,MAAM,uBAAuB,EACnC,MAAA,CACF,CAIF,MAAMs+E,EAAa,MAAMz/E,GAAOF,GAAIrB,GAAI,WAAYuT,CAAE,CAAC,EACnD,GAAA,CAACytE,EAAW,SAAU,CACxBt+E,EAAM,MAAM,mBAAmB,EAC/B,MAAA,CAGI,MAAAg6E,EAAcsE,EAAW,KAAK,EAC9BiQ,EAAoB9R,EAAQ,YAC/BzC,EAAY,kBAAkB2T,CAAa,GAAK,EACjD3T,EAAY,SAGRwU,EAAYrvF,GAChBC,GAAW9B,GAAI,MAAM,EACrB+B,GAAM,SAAU,KAAMtB,EAAK,GAAG,EAC9BsB,GAAM,YAAa,KAAMwR,CAAE,EAC3BxR,GAAM,OAAQ,KAAMouF,GAAgB,IAAI,EACxCpuF,GAAM,QAAS,KAAMsuF,GAAiB,IAAI,CAC5C,EAKA,KAJqB,MAAMpuF,GAAQivF,CAAS,GACN,KAAK,CAAC,GAAG,KAAK,GACF,UAAY,GAAKr6E,EAEtCo6E,EAAmB,CAC9CvuF,EAAM,MAAM,eAAeuuF,CAAiB,uBAAuBZ,GAAiB,OAAO,EAAE,EAC7F,MAAA,CAII,MAAAc,GAAezuF,EAAM,QAAQ,mBAAmB,EAEhD0uF,GAAUtvF,GAAW9B,GAAI,MAAM,EAC/B4B,EAAIC,GAAMuvF,GACdrvF,GAAM,SAAU,KAAMtB,EAAK,GAAG,EAC9BsB,GAAM,YAAa,KAAMwR,CAAE,EAC3BxR,GAAM,OAAQ,KAAMouF,GAAgB,IAAI,EACxCpuF,GAAM,QAAS,KAAMsuF,GAAiB,IAAI,CAC5C,EACMruF,EAAgB,MAAMC,GAAQL,CAAC,EAErC,GAAII,EAAc,MAEhB,MAAMiT,GAAOm8E,GAAS,CACpB,OAAQ3wF,EAAK,IACb,UAAW8S,EACX,SAAAsD,EACA,KAAMs5E,GAAgB,KACtB,MAAOE,GAAiB,KACxB,QAAS36E,GAAgB,EACzB,MAAOypE,EAAQ,aAAe,IAAI,KAAS,IAAI,KAAKA,EAAQ,cAAc,EACtEA,EAAQ,gBACRA,EAAQ,MACZ,aAAcA,EAAQ,aAAe,IAAI,KAAS,IAAI,KAAKA,EAAQ,cAAc,EACjF,cAAeA,EAAQ,MACvB,gBAAiBA,EAAQ,gBACzB,eAAgBA,EAAQ,cAAA,CACzB,EACDz8E,EAAM,QAAQyuF,EAAY,EACpBzuF,EAAA,QAAQ,SAASmU,CAAQ,QAAQA,EAAW,EAAI,IAAM,EAAE,UAAU,MACnE,CAEC,MAAAw6E,EAAUrvF,EAAc,KAAK,CAAC,EAC9B+U,EAAkBs6E,EAAQ,KAAA,EAAO,SACvC,MAAMjhF,GAAU/O,GAAIrB,GAAI,OAAQqxF,EAAQ,EAAE,EAAG,CAC3C,SAAUt6E,EAAkBF,EAC5B,MAAOsoE,EAAQ,aAAe,IAAI,KAAS,IAAI,KAAKA,EAAQ,cAAc,EACtEA,EAAQ,gBACRA,EAAQ,MACZ,aAAcA,EAAQ,aAAe,IAAI,KAAS,IAAI,KAAKA,EAAQ,cAAc,EACjF,cAAeA,EAAQ,MACvB,gBAAiBA,EAAQ,gBACzB,eAAgBA,EAAQ,cAAA,CACzB,EACDz8E,EAAM,QAAQyuF,EAAY,EACpBzuF,EAAA,QAAQ,8BAA8BmU,CAAQ,GAAG,CAAA,CAInD,MAAAg5E,EAAgBpvF,EAAK,GAAG,QACvByB,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5CQ,EAAM,MAAM,uBAAuB,CAAA,CAEvC,EAEM4uF,EAAe,SAAY,CAC3B,GAAA,CACF,GAAI,CAAC7wF,EAAM,CACTiC,EAAM,MAAM,gCAAgC,EAC5Cif,EAAS,oBAAoB,EAC7B,MAAA,CAGF,GAAIw9D,EAAQ,WAAa,YAAcA,EAAQ,YAAa,CAC1D,GAAI,CAACgR,EAAc,CACjBztF,EAAM,MAAM,sBAAsB,EAClC,MAAA,CAEF,GAAI,CAAC2tF,EAAe,CAClB3tF,EAAM,MAAM,uBAAuB,EACnC,MAAA,CACF,CAIF,MAAMs+E,EAAa,MAAMz/E,GAAOF,GAAIrB,GAAI,WAAYuT,CAAE,CAAC,EACnD,GAAA,CAACytE,EAAW,SAAU,CACxBt+E,EAAM,MAAM,mBAAmB,EAC/B,MAAA,CAGI,MAAAg6E,EAAcsE,EAAW,KAAK,EAC9BiQ,EAAoB9R,EAAQ,YAC/BzC,EAAY,kBAAkB2T,CAAa,GAAK,EACjD3T,EAAY,SAEd,GAAI7lE,EAAWo6E,EAAmB,CAChCvuF,EAAM,MAAM,eAAeuuF,CAAiB,uBAAuBZ,GAAiB,OAAO,EAAE,EAC7F,MAAA,CAII,MAAAc,EAAezuF,EAAM,QAAQ,eAAe,EAG5CwuF,EAAYrvF,GAAMC,GAAW9B,GAAI,MAAM,EAAG+B,GAAM,SAAU,KAAMtB,EAAK,GAAG,CAAC,EAEzEw/E,IADe,MAAMh+E,GAAQivF,CAAS,GACR,KAAK,IAAI7vF,IAAOy/B,GAAUz/B,GAAI,GAAG,CAAC,EAChE,MAAA,QAAQ,IAAI4+E,EAAc,EAGhC,MAAMhrE,GAAOnT,GAAW9B,GAAI,MAAM,EAAG,CACnC,OAAQS,EAAK,IACb,UAAW8S,EACX,SAAAsD,EACA,KAAMs5E,GAAgB,KACtB,MAAOE,GAAiB,KACxB,QAAS36E,GAAgB,EACzB,MAAOypE,EAAQ,aAAe,IAAI,KAAS,IAAI,KAAKA,EAAQ,cAAc,EACtEA,EAAQ,gBACRA,EAAQ,MACZ,aAAcA,EAAQ,aAAe,IAAI,KAAS,IAAI,KAAKA,EAAQ,cAAc,EACjF,cAAeA,EAAQ,MACvB,gBAAiBA,EAAQ,gBACzB,eAAgBA,EAAQ,cAAA,CACzB,EAGK,MAAA0Q,EAAgBpvF,EAAK,GAAG,EAE9BiC,EAAM,QAAQyuF,CAAY,EAE1BxvE,EAAS,uBAAuB,EAG1B,MAAA4vE,EAAwBh+E,EAAI88E,EAAex5E,CAAQ,QAClD3U,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EAChDQ,EAAM,MAAM,sCAAsC,CAAA,CAEtD,EAEM8uF,EAAqB,SAAY,CACrC,GAAI,CAAC/wF,EAAM,CACTiC,EAAM,MAAM,oCAAoC,EAChD,MAAA,CAGE,GAAA,CAEI,MAAAyuF,EAAezuF,EAAM,QAAQ,0BAA0B,EAGvDd,EAAIC,GACRC,GAAW9B,GAAI,eAAe,EAC9B+B,GAAM,eAAgB,iBAAkBtB,EAAK,GAAG,EAChDsB,GAAM,WAAY,KAAMo9E,EAAQ,QAAQ,CAC1C,EACMn9E,EAAgB,MAAMC,GAAQL,CAAC,EAEjC,IAAA6vF,EAEA,GAAA,CAACzvF,EAAc,MAEAyvF,EAAAzvF,EAAc,KAAK,CAAC,EAAE,GAGvC,MAAMiT,GAAOnT,GAAW9B,GAAI,UAAU,EAAG,CACvC,eAAAyxF,EACA,SAAUhxF,EAAK,IACf,KAAM,sCACN,UAAWiV,GAAgB,EAC3B,YAAa,CACX,UAAWypE,EAAQ,GACnB,KAAMA,EAAQ,KACd,YAAaA,EAAQ,YACrB,MAAOA,EAAQ,MACf,MAAOA,EAAQ,OAAO,CAAC,CAAA,CACzB,CACD,EAGD,MAAM/uE,GAAU/O,GAAIrB,GAAI,gBAAiByxF,CAAc,EAAG,CACxD,YAAa,sCACb,gBAAiB/7E,GAAgB,EACjC,CAAC,eAAeypE,EAAQ,QAAQ,EAAE,GAAIn9E,EAAc,KAAK,CAAC,EAAE,KAAO,EAAA,cAAcm9E,EAAQ,QAAQ,GAAK,GAAK,EAC3G,UAAWzpE,GAAgB,CAAA,CAC5B,MAEI,CAEL,MAAMg8E,EAAkB,MAAMz8E,GAAOnT,GAAW9B,GAAI,eAAe,EAAG,CACpE,aAAc,CAACS,EAAK,IAAK0+E,EAAQ,QAAQ,EACzC,QAAS1+E,EAAK,IACd,SAAU0+E,EAAQ,SAClB,UAAW1+E,EAAK,aAAe,wBAC/B,WAAY0+E,EAAQ,WACpB,iBAAkBr2E,GAAQ,qBAAuB,WACjD,YAAa,CACX,CAACq2E,EAAQ,QAAQ,EAAG,EACpB,CAAC1+E,EAAK,GAAG,EAAG,CACd,EACA,UAAWiV,GAAgB,EAC3B,UAAWA,GAAgB,CAAA,CAC5B,EAED+7E,EAAiBC,EAAgB,GAGjC,MAAMz8E,GAAOnT,GAAW9B,GAAI,UAAU,EAAG,CACvC,eAAgB0xF,EAAgB,GAChC,SAAUjxF,EAAK,IACf,KAAM,sCACN,UAAWiV,GAAgB,EAC3B,YAAa,CACX,UAAWypE,EAAQ,GACnB,KAAMA,EAAQ,KACd,YAAaA,EAAQ,YACrB,MAAOA,EAAQ,MACf,MAAOA,EAAQ,OAAO,CAAC,CAAA,CACzB,CACD,EAGD,MAAM/uE,GAAUshF,EAAiB,CAC/B,YAAa,sCACb,gBAAiBh8E,GAAgB,CAAA,CAClC,CAAA,CAIHhT,EAAM,QAAQyuF,CAAY,EAC1BzuF,EAAM,QAAQ,4BAA4B,EAGjCif,EAAA,sBAAsB8vE,CAAc,EAAE,QAExCvvF,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,EACnDQ,EAAM,MAAM,8BAA8B,CAAA,CAE9C,EAEM6wB,EAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMoD,EAAe,CACnB,OAAQ,CAAE,EAAG,GAAI,QAAS,CAAE,EAC5B,QAAS,CACP,EAAG,EACH,QAAS,EACT,WAAY,CACV,KAAM,SACN,UAAW,GAAA,CACb,CAEJ,EAEMg7D,EAA0B,IAAM,CACpC,GAAI,CAAC7oF,GAAU,CAACq2E,EAAgB,OAAA,KAGhC,MAAMyS,EAAmB,CACvB,QAAW,WACX,QAAW,MACX,SAAY,MACd,EAGMl8D,EAAc5sB,EAAO,kBAAkB,YAAY,EACnDwV,EAAUszE,EAAiBl8D,CAAW,EAE5C,GAAI,CAACpX,EACK,eAAA,KAAK,wBAAyBoX,CAAW,EAC1C,KAGT,MAAMtpB,EAAQ+yE,EAAQ,cAiBhBt1E,EAfoB,CACxB,SAAY,CACV,KAAQ,6CACR,KAAQ,4CACV,EACA,IAAO,CACL,KAAQ,6CACR,KAAQ,4CACV,EACA,KAAQ,CACN,KAAQ,6CACR,KAAQ,4CAAA,CAEZ,EAEkCyU,CAAO,IAAIlS,CAAK,EAClD,OAAKvC,IACH,QAAQ,KAAK,uCAAuCuC,CAAK,eAAekS,CAAO,EAAE,EAC1E,KAIX,EAEM8mC,EAAoB,SAAY,CACpC,MAAMv7C,EAAU8nF,EAAwB,EACpC9nF,IACI,MAAA,UAAU,UAAU,UAAUA,CAAO,EAC3C2mF,EAAiB,EAAI,EACrB,WAAW,IAAMA,EAAiB,EAAK,EAAG,GAAI,EAElD,EAEM7wD,EAAkB91B,GACjBA,EACE,GAAGA,EAAQ,MAAM,EAAG,CAAC,CAAC,MAAMA,EAAQ,MAAM,EAAE,CAAC,GAD/B,GAKjB0nF,EAA0B,MAAOzD,EAAWtP,EAAO3nE,IAAa,CACpE,MAAMsqE,EAAa9/E,GAAIrB,GAAI,WAAY8tF,CAAS,EAC1C9M,EAAa,MAAMz/E,GAAO4/E,CAAU,EAEtC,GAAA,CAACH,EAAW,SACR,MAAA,IAAI,MAAM,mBAAmB,EAG/B,MAAAtE,EAAcsE,EAAW,KAAK,EAEhC,GAAAtE,EAAY,aAAe8B,EAAO,CAEpC,MAAMqT,GAAuBnV,EAAY,gBAAgB8B,CAAK,GAAK,EAC7DsT,GAAmB,KAAK,IAAI,EAAGD,GAAuBh7E,CAAQ,EAE9D0qE,GAAqB,CACzB,GAAG7E,EAAY,gBACf,CAAC8B,CAAK,EAAGsT,EACX,EAGMC,EAAmB,OAAO,OAAOxQ,EAAkB,EAAE,OAAO,CAACv4E,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EAEpF,MAAMmH,GAAU+wE,EAAY,CAC1B,gBAAiBI,GACjB,SAAUwQ,CAAA,CACX,CAAA,KACI,CAEL,MAAMhB,GAAc,KAAK,IAAI,EAAGrU,EAAY,SAAW7lE,CAAQ,EAC/D,MAAMzG,GAAU+wE,EAAY,CAC1B,SAAU4P,EAAA,CACX,CAAA,CAEL,EAEA,OAAIpwF,QACMgvF,GAAuB,EAAA,EAG5BxQ,QASF,MAAI,CAAA,UAAW,+BAA+BngF,EAAa,cAAgB,UAAU,GACpF,SAAA8E,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAW,wBACX,QAAQ,SACR,QAAQ,UACR,SAAU2lB,EAGV,SAAA,CAAAzvB,EAAA,KAAC8J,EAAO,OAAP,CACC,SAAU+oB,EACV,QAAS,IAAMhV,EAAS,EAAE,EAC1B,UAAW,2BAA2B3iB,EAAa,qCAAuC,oCAAoC,QAE9H,SAAA,CAACM,EAAAA,IAAAi2E,GAAA,CAAY,UAAU,UAAU,EAChCj2E,EAAAA,IAAA,QAAK,SAAI,MAAA,CAAA,CAAA,CAAA,CACZ,EAECwE,EAAAA,KAAA,MAAI,CAAA,UAAU,wCAEb,SAAA,CAAAA,OAAC8J,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAU,YAC5C,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,oDACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK6/E,EAAQ,OAAO8P,CAAa,EACjC,IAAK9P,EAAQ,KACb,UAAU,4BAAA,CACZ,EAECA,EAAQ,aAAmB,IAAA,KAAS,IAAI,KAAKA,EAAQ,cAAc,GAClEr7E,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,MAAO,GAAK,QAAS,CAAE,EAClC,QAAS,CAAE,MAAO,EAAG,QAAS,CAAE,EAChC,UAAU,yGAEV,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,UAAU,KAAK,OAAO,OAAO,eAAe,QAAQ,YACjE,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,yWAAA,CAA0W,CAAA,CACjb,EACCwE,EAAAA,KAAA,OAAK,CAAA,UAAU,YAAa,SAAA,CAAQq7E,EAAA,gBAAgB,OAAA,CAAK,CAAA,CAAA,EAC5D,EACCr7E,EAAAA,KAAA,MAAI,CAAA,UAAU,kCACb,SAAA,CAACxE,EAAAA,IAAA,QAAK,SAAC,IAAA,SACN,OAAK,CAAA,SAAA,CAAA,iBAASwqC,GAAA,CAAe,OAAQq1C,EAAQ,cAAgB,CAAA,CAAA,CAAE,CAAA,CAAA,CAClE,CAAA,CAAA,CAAA,CAAA,CACF,EAEJ,EACA7/E,EAAAA,IAAC,OAAI,UAAU,yBACZ,WAAQ,OAAO,IAAI,CAAC2uF,EAAOzkF,IAC1BlK,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM4vF,EAAiB1lF,CAAK,EACrC,UAAW,uEACTylF,IAAkBzlF,EACd,mBACA,0CACN,GAEA,SAAAlK,EAAA,IAAC,MAAA,CACC,IAAK2uF,EACL,IAAK,GAAG9O,EAAQ,IAAI,IAAI31E,EAAQ,CAAC,GACjC,UAAU,4BAAA,CAAA,CACZ,EAZKA,CAAA,CAcR,CACH,CAAA,CAAA,EACF,SAGCoE,EAAO,IAAP,CAAW,SAAU+oB,EAAc,UAAU,YAC5C,SAAA,CAAC7yB,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAA,KAAA,CAAG,UAAW,sBAAsBN,EAAa,gBAAkB,eAAe,QAChF,WAAQ,IAAA,CACX,EACC8J,GACEhF,EAAA,KAAA,MAAI,CAAA,UAAW,uCAAuC9E,EAAa,8BAAgC,4BAA4B,8BAC9H,SAAA,CAACM,EAAAA,IAAA,OAAA,CAAK,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,GAAK,WAAO,SAAA,CAAU,EAC3G8J,EAAO,qBAAuB,YAC5BhF,EAAA,KAAA,MAAA,CAAI,UAAU,0CACb,SAAA,CAACxE,EAAAA,IAAAoO,GAAA,CAAsB,UAAU,gDAAgD,QAChF,MAAA,CAAI,UAAU,+NAA+N,SAE9O,gBAAA,CAAA,CAAA,EACF,EAED5E,EAAO,SAAS,MACfxJ,EAAA,IAACg1E,GAAA,CACC,YAAaxrE,EAAO,QAAQ,KAC5B,IAAG,GACH,MAAO,CACL,MAAO,QACP,OAAQ,OACV,EACA,UAAU,sBAAA,CAAA,CACZ,CAEJ,CAAA,CAAA,EAEJ,EACCxJ,EAAAA,IAAA,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAK,SAAAmgF,EAAQ,WAAA,CAAY,EAEvFr7E,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK6/E,EAAQ,UACb,IAAKA,EAAQ,cACb,UAAU,SAAA,CACZ,QACC,MAAA,CAAI,UAAU,gBACZ,WAAQ,aAAe,IAAI,KAAS,IAAI,KAAKA,EAAQ,cAAc,EAEhEr7E,OAAAuO,EAAAA,SAAA,CAAA,SAAA,CAACvO,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,oCACb,SAAA,CAAQq7E,EAAA,cAAc,IAAEA,EAAQ,gBAAgB,QAAQ,CAAC,CAAA,EAC5D,EACCr7E,EAAAA,KAAA,OAAK,CAAA,UAAU,qCACb,SAAA,CAAQq7E,EAAA,cAAc,IAAEA,EAAQ,MAAM,QAAQ,CAAC,CAAA,CAClD,CAAA,CAAA,EACF,EACCr7E,EAAAA,KAAA,MAAI,CAAA,UAAU,yBAAyB,SAAA,CAAA,QAChCq7E,EAAQ,cAAc,KAAGA,EAAQ,MAAQA,EAAQ,iBAAiB,QAAQ,CAAC,CAAA,CACnF,CAAA,CAAA,CACF,CAAA,EAEAr7E,EAAAA,KAAC,OAAK,CAAA,UAAU,oCACb,SAAA,CAAQq7E,EAAA,cAAc,IAAEA,EAAQ,MAAM,QAAQ,CAAC,CAAA,CAAA,CAClD,CAEJ,CAAA,CAAA,EACF,EACC7/E,EAAA,IAAA,MAAA,CAAI,UAAW,oCACd6/E,EAAQ,SAAW,GACfngF,EAAa,iCAAmC,8BAChDmgF,EAAQ,SAAW,EACjBngF,EAAa,mCAAqC,gCAClDA,EAAa,6BAA+B,yBACpD,GACG,SAAAmgF,EAAQ,SAAW,GAChB,WACAA,EAAQ,SAAW,EACjB,QAAQA,EAAQ,QAAQ,QACxB,cACR,CAAA,CAAA,EACF,EAGCA,EAAQ,aACNr7E,OAAA,MAAA,CAAI,UAAU,YAEZ,SAAA,CAAAq7E,EAAQ,MAAM,OAAS,GACrBr7E,EAAAA,KAAA,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,cAAe,SAAW,aAAA,CAAA,EAC5FM,EAAAA,IAAC,OAAI,UAAU,uBACZ,WAAQ,MAAM,IAAK8hC,GAClB9hC,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM8wF,EAAgBhvD,CAAI,EACnC,UAAW,gEACT+uD,IAAiB/uD,EACb,0BACApiC,EACE,8CACA,6CACR,GAEC,SAAAoiC,CAAA,EAVIA,CAAA,CAYR,CACH,CAAA,CAAA,EACF,EAID+9C,EAAQ,OAAO,OAAS,GACtBr7E,EAAAA,KAAA,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,cAAe,SAAY,cAAA,CAAA,EAC7FM,MAAC,OAAI,UAAU,uBACZ,WAAQ,OAAO,IAAKk/E,GAAU,CAC7B,MAAMwT,EAAc7S,EAAQ,gBAAgBX,CAAK,EAAI,EAEnD,OAAA16E,EAAA,KAAC,SAAA,CAEC,QAAS,IAAMwsF,EAAiB9R,CAAK,EACrC,SAAU,CAACwT,EACX,UAAW,iGACT3B,IAAkB7R,EACd,0BACAwT,EACAhzF,EACE,8CACA,8CACFA,EACE,+CACA,8CACR,GAEA,SAAA,CAAAM,EAAA,IAAC,OAAA,CACC,UAAU,8CACV,MAAO,CAAE,gBAAiBk/E,EAAM,YAAc,CAAA,CAAA,CAChD,EACCl/E,EAAAA,IAAA,QAAM,SAAMk/E,EAAA,EACZ16E,EAAAA,KAAA,OAAK,CAAA,UAAU,UAAU,SAAA,CAAA,IACtBq7E,EAAQ,gBAAgBX,CAAK,GAAK,EAAE,GAAA,CACxC,CAAA,CAAA,CAAA,EAtBKA,CAuBP,CAAA,CAEH,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EAID16E,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAS,WAAA,CAAA,EAC9E8E,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMuxF,EAAqB,EAAE,EACtC,SAAUh6E,GAAY,EACtB,UAAU,sFAEV,SAACvX,EAAAA,IAAA2uC,GAAQ,CAAA,UAAU,SAAU,CAAA,CAAA,CAC/B,QACC,OAAA,CAAK,UAAU,+BAAgC,SAASp3B,EAAA,EACzDvX,EAAA,IAAC,SAAA,CACC,QAAS,IAAMuxF,EAAqB,CAAC,EACrC,SAAUh6E,GAAYsoE,EAAQ,SAC9B,UAAU,sFAEV,SAAC7/E,EAAAA,IAAA4uC,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC9B,CACF,CAAA,CAAA,EACF,SAGC,MAAI,CAAA,UAAW,GAAGlvC,EAAa,cAAgB,YAAY,4BAC1D,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAS,WAAA,CAAA,QAC9E,MAAA,CAAI,UAAU,aACZ,WAAQ,aAAe,IAAI,KAAS,IAAI,KAAKmgF,EAAQ,cAAc,EAEhEr7E,OAAAuO,EAAAA,SAAA,CAAA,SAAA,CAAAvO,OAAC,QAAK,UAAW,eAAe9E,EAAa,gBAAkB,eAAe,GAC3E,SAAA,CAAQmgF,EAAA,cAAc,KAAGA,EAAQ,gBAAkBtoE,GAAU,QAAQ,CAAC,CAAA,EACzE,EACC/S,EAAAA,KAAA,MAAI,CAAA,UAAU,qCACZ,SAAA,CAAQq7E,EAAA,cAAc,KAAGA,EAAQ,MAAQtoE,GAAU,QAAQ,CAAC,CAAA,CAC/D,CAAA,CACF,CAAA,CAAA,SAEC,OAAK,CAAA,UAAW,eAAe7X,EAAa,gBAAkB,eAAe,GAC3E,SAAA,CAAQmgF,EAAA,cAAc,KAAGA,EAAQ,MAAQtoE,GAAU,QAAQ,CAAC,CAAA,CAAA,CAC/D,CAEJ,CAAA,CAAA,EACF,EACC/S,EAAAA,KAAA,MAAI,CAAA,UAAU,+BACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAa,eAAA,CAAA,SAClF,OAAK,CAAA,UAAW,eAAeA,EAAa,gBAAkB,eAAe,GAC3E,SAAA,CAAQmgF,EAAA,cAAc,KAAGA,EAAQ,aAAe,GAAG,QAAQ,CAAC,CAAA,CAC/D,CAAA,CAAA,EACF,EACCr7E,EAAAA,KAAA,MAAI,CAAA,UAAU,iDACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAM,QAAA,CAAA,EAC3E8E,EAAAA,KAAA,OAAK,CAAA,UAAU,iBAAkB,SAAA,CAAQq7E,EAAA,cAAc,IAAE8Q,EAAW,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,CAClF,CAAA,CAAA,EACF,EAGCnsF,EAAAA,KAAA,MAAI,CAAA,UAAU,aACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,QAASktF,EACT,UAAW,sDACThyF,EACI,mEACA,kEACN,gCAEA,SAAA,CAACM,EAAAA,IAAAi3E,GAAA,CAAO,UAAU,UAAU,EAAE,aAAA,CAAA,CAEhC,EACAzyE,EAAA,KAAC,SAAA,CACC,QAASwtF,EACT,UAAU,6HAEV,SAAA,CAAChyF,EAAAA,IAAAogB,GAAA,CAAS,UAAU,UAAU,EAAE,SAAA,CAAA,CAAA,CAElC,EACF,EAGA5b,EAAA,KAAC,SAAA,CACC,QAAS0tF,EACT,UAAW,sDACTxyF,EACI,yEACA,oEACN,qCAEA,SAAA,CAACM,EAAAA,IAAAm3E,GAAA,CAAgB,UAAU,UAAU,EAAE,eAAA,CAAA,CAAA,CAEzC,EACF,SAGC,MAAI,CAAA,UAAW,YAAYz3E,EAAa,kBAAoB,iBAAiB,kBAC5E,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAE/F,wBAAA,CAAA,EACC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,wCAEb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAW,GAAGN,EAAa,cAAgB,UAAU,6BACxD,SAAC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAQ,UAAA,CAAA,QAC7E,OAAK,CAAA,UAAW,GAAGA,EAAa,gBAAkB,eAAe,eAC/D,SAAAmgF,EAAQ,SAAS,OAAO,CAAC,EAAE,YAAY,EAAIA,EAAQ,SAAS,MAAM,CAAC,CACtE,CAAA,CAAA,EACF,EACCr7E,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAa,eAAA,CAAA,EAClF8E,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,IAAK6/E,EAAQ,UAAW,IAAKA,EAAQ,cAAe,UAAU,SAAA,CAAU,EAC5E7/E,EAAAA,IAAA,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,eAAiB,SAAAmgF,EAAQ,aAAc,CAAA,CAAA,CAC3G,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAGC7/E,EAAA,IAAA,MAAI,CAAA,UAAW,GAAGN,EAAa,cAAgB,UAAU,6BACxD,SAAC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAc,gBAAA,CAAA,EACnF2yF,EAAA,GACEryF,EAAAA,IAAA,MAAA,CAAI,UAAU,0BACb,SAACA,EAAA,IAAA,MAAI,CAAA,UAAU,2EACZ,SAAAwJ,GAAQ,kBAAkB,cAC7B,CACF,CAAA,CAAA,EAEJ,EACChF,EAAAA,KAAA,MAAI,CAAA,UAAU,WACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAW,GAAGN,EAAa,cAAgB,YAAY,8BAC1D,SAAC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,OAAC,MAAI,CAAA,UAAW,iCAAiC9E,EAAa,gBAAkB,eAAe,GAC5F,SAAA2yF,IAA4BhyD,EAAegyD,EAAyB,CAAA,EAAI,kCAC3E,EACCA,EACC,GAAAryF,EAAA,IAAC,SAAA,CACC,QAAS8lD,EACT,UAAU,mEACV,MAAM,6BAEN,SAAC9lD,EAAAA,IAAA2yF,GAAO,CAAA,UAAW,WAAW1B,EAAgB,iBAAmB,EAAE,EAAI,CAAA,CAAA,CAAA,CACzE,CAAA,CAEJ,CAAA,CACF,EACCA,GACEjxF,EAAAA,IAAA,MAAA,CAAI,UAAU,wEACb,eAAC,OAAK,CAAA,UAAU,oDAAoD,SAAA,SAEpE,CAAA,CACF,CAAA,CAAA,EAEJ,EACCqyF,KACE7tF,EAAAA,KAAA,IAAA,CAAE,UAAU,kDACX,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,6BAA6B,KAAK,OAAO,QAAQ,YAAY,OAAO,eACjF,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,2DAAA,CAA4D,CAAA,CACnI,EAAM,mBACW6/E,EAAQ,cAAc,OACrCr2E,GAAQ,kBAAkB,YAAkB,IAAA,UAAY,UACxDA,GAAQ,kBAAkB,YAAY,IAAM,UAAY,UACxDA,GAAQ,kBAAkB,gBAAkB,WAAa,WAAa,UACvE,UAAA,CACH,CAAA,CAAA,CAAA,CAEJ,CAAA,CACF,EAGCq2E,EAAQ,WAAa,YAAcA,EAAQ,aACzC7/E,EAAAA,IAAA,MAAI,CAAA,UAAW,GAAGN,EAAa,cAAgB,UAAU,2CACxD,SAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,cAAe,SAAe,iBAAA,CAAA,EAChGM,EAAAA,IAAC,OAAI,UAAU,uBACZ,WAAQ,MAAM,IAAK8hC,GACjB9hC,EAAAA,IAAA,QAAgB,UAAW,8CAA8CN,EAAa,4BAA8B,0BAA0B,GAC5I,SADQoiC,GAAAA,CAEX,CACD,CACH,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAA9hC,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,cAAe,SAAgB,kBAAA,CAAA,QAChG,MAAI,CAAA,UAAU,uBACZ,SAAAmgF,EAAQ,OAAO,IAAKX,GAClB16E,EAAAA,KAAA,OAAgB,UAAW,oDAAoD9E,EAAa,cAAgB,YAAY,GACvH,SAAA,CAAAM,EAAA,IAAC,OAAA,CACC,UAAU,8CACV,MAAO,CAAE,gBAAiBk/E,EAAM,YAAc,CAAA,CAAA,CAChD,EACAl/E,EAAAA,IAAC,QAAK,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,GAAK,SAAMw/E,CAAA,CAAA,CAAA,CALzF,EAAAA,CAMV,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,SAGC,MAAI,CAAA,UAAW,YAAYx/E,EAAa,kBAAoB,iBAAiB,aAC5E,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAE/F,kBAAA,CAAA,SACC,MAAI,CAAA,UAAW,GAAGA,EAAa,cAAgB,UAAU,uCACxD,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAY,cAAA,CAAA,EACjF8E,EAAAA,KAAA,OAAK,CAAA,UAAU,6BAA6B,SAAA,CAAA,IAAEq7E,EAAQ,aAAa,QAAQ,CAAC,GAAK,MAAA,CAAO,CAAA,CAAA,EAC3F,EACCA,EAAQ,cACNr7E,OAAA,MAAA,CAAI,UAAW,iBAAiB9E,EAAa,kBAAoB,iBAAiB,GACjF,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,QAAS,SAE7F,sBAAA,CAAA,EACCM,EAAAA,IAAA,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,mBACpE,SAAAmgF,EAAQ,YACX,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGC4Q,EAAgB,OAAS,GACxBjsF,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,EACV,UAAW,kBAAkB33B,EAAa,kBAAoB,iBAAiB,QAE/E,SAAA,CAAAM,MAAC,MAAG,UAAW,qBAAqBN,EAAa,gBAAkB,eAAe,QAC/E,SAAA+wF,EAAgB,CAAC,EAAE,WAAa5Q,EAAQ,SACrC,aAAaA,EAAQ,UAAU,GAC/B,mBACN,QACC,IAAA,CAAE,UAAW,GAAGngF,EAAa,gBAAkB,eAAe,gBAC5D,SAAA+wF,EAAgB,CAAC,EAAE,WAAa5Q,EAAQ,SACrC,wCACA,qCACN,QACC,MAAI,CAAA,UAAU,wCACZ,SAAgB4Q,EAAA,IAAK5Q,GACpB7/E,EAAA,IAACsO,EAAO,IAAP,CAEC,UAAW,GAAG5O,EAAa,cAAgB,UAAU,8CACrD,WAAY,CAAE,EAAG,EAAG,EAEpB,SAAA8E,EAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACJ6d,EAAA,wBAAwBw9D,EAAQ,EAAE,EAAE,EACtC,OAAA,SAAS,EAAG,CAAC,CACtB,EACA,UAAU,mBAEV,SAAA,CAAC7/E,EAAAA,IAAA,MAAA,CAAI,UAAU,yCACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAK6/E,EAAQ,OAAO,CAAC,EACrB,IAAKA,EAAQ,KACb,UAAU,oFAAA,CAAA,EAEd,EACCr7E,EAAAA,KAAA,MAAI,CAAA,UAAU,MACb,SAAA,CAACxE,EAAAA,IAAA,KAAA,CAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,iBACzE,SAAAmgF,EAAQ,IAAA,CACX,EACCr7E,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK6/E,EAAQ,UACb,IAAKA,EAAQ,cACb,UAAU,SAAA,CACZ,EACCr7E,EAAAA,KAAA,IAAE,CAAA,UAAU,6BAA6B,SAAA,CAAA,IACtCq7E,EAAQ,MAAM,QAAQ,CAAC,CAAA,CAC3B,CAAA,CAAA,EACF,SACC,IAAE,CAAA,UAAW,WAAWngF,EAAa,gBAAkB,eAAe,QAAS,SAAA,CAAA,MAC1EmgF,EAAQ,UAAA,CACd,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,CACF,EApCKA,EAAQ,EAAA,CAsChB,CACH,CAAA,CAAA,CAAA,CACF,EAIF7/E,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU+oB,EACV,UAAW,kBAAkB33B,EAAa,kBAAoB,iBAAiB,QAE/E,SAACM,EAAA,IAAA,MAAA,CAAI,UAAW,GAAGN,EAAa,cAAgB,UAAU,6BACxD,eAAC4vF,GAAA,CAAe,UAAWr7E,CAAA,CAAI,CACjC,CAAA,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,QAxgBG,MAAI,CAAA,UAAW,gBAAgBvU,EAAa,cAAgB,YAAY,oCACvE,SAACM,MAAA,MAAA,CAAI,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,6BAAiB,CAAA,CACxF,CAwgBN,ECnpCMy4E,GAAgB,IAAM,CACpB,KAAA,CAAE,WAAAz4E,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,iBAAiB5O,EAAa,cAAgB,aAAa,cACtE,QAAS,CACP,QAAS,CAAC,GAAK,GAAK,EAAG,CACzB,EACA,WAAY,CACV,SAAU,IACV,OAAQ,IACR,KAAM,WAAA,CACR,CACF,CAEJ,EAEMkzF,GAAe,IAAM,CACnB,KAAA,CAAE,WAAAlzF,CAAW,EAAIO,GAAS,EAChC,cACG,MAAI,CAAA,UAAW,yBAAyBP,EAAa,cAAgB,YAAY,GAEhF,SAAA,CAACM,EAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAU,WACb,SAAAA,EAAA,IAACm4E,GAAc,CAAA,CAAA,CACjB,CAAA,EACF,EAEA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,wCAEb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,SACb,MAAY,CAAA,UAAW,GAAG9O,EAAa,cAAgB,UAAU,4BAChE,SAAA8E,EAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,qDACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,YACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,MAACm4E,IAAc,CAAA,EACjB,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAAA,EArBQ3pE,CAsBV,CACD,EACH,EAGAxO,EAAA,IAAC,MAAI,CAAA,UAAU,gBACb,SAAAwE,EAAAA,KAAC,MAAI,CAAA,UAAW,GAAG9E,EAAa,cAAgB,UAAU,sCACxD,SAAA,CAAAM,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAn4E,EAAA,IAAC,MAAI,CAAA,UAAW,YAAYN,EAAa,kBAAoB,iBAAiB,aAC5E,SAAA8E,OAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACC,MAAI,CAAA,UAAU,mBACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EAEM0a,GAAO,IAAM,CACjB,KAAM,CAAE,KAAA1xF,EAAM,gBAAAovF,CAAgB,EAAIjtF,GAAa,EACzC,CAAE,WAAA5D,CAAW,EAAIO,GAAS,EAC1B,CAACoB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACkzF,EAAWC,CAAY,EAAInzF,EAAAA,SAAS,CAAA,CAAE,EACvC,CAAC64E,EAAaC,CAAc,EAAI94E,EAAAA,SAAS,GAAG,EAC5CyiB,EAAWC,GAAY,EAE7BxiB,EAAAA,UAAU,IAAM,CACCkzF,EAAA,EACEC,EAAA,CAAA,EAChB,CAAC9xF,CAAI,CAAC,EAET,MAAM8xF,EAAmB,SAAY,CAC/B,GAAA,CACF,MAAMnZ,EAAc,MAAM73E,GAAOF,GAAIrB,GAAI,WAAY,UAAU,CAAC,EAC5D,GAAAo5E,EAAY,SAAU,CAClB,MAAAC,EAAWD,EAAY,KAAK,EACnBpB,EAAAqB,EAAS,aAAe,GAAG,CAAA,QAErCn3E,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,EAEnD81E,EAAe,GAAG,CAAA,CAEtB,EAEMsa,EAAiB,SAAY,CAC7B,GAAA,CACF,MAAM1wF,EAAIC,GACRC,GAAW9B,GAAI,MAAM,EACrB+B,GAAM,SAAU,KAAMtB,EAAK,GAAG,CAChC,EACMuB,EAAgB,MAAMC,GAAQL,CAAC,EAC/B4wF,EAAQ,CAAC,EAEJ,UAAAnB,KAAWrvF,EAAc,KAAM,CAClC,MAAAywF,EAAWpB,EAAQ,KAAK,EACxBrQ,EAAa,MAAMz/E,GAAOF,GAAIrB,GAAI,WAAYyyF,EAAS,SAAS,CAAC,EAEnE,GAAAzR,EAAW,SAAU,CACjB,MAAAtE,EAAcsE,EAAW,KAAK,EACpCwR,EAAM,KAAK,CACT,GAAInB,EAAQ,GACZ,SAAUoB,EAAS,SACnB,QAAS,CACP,GAAIzR,EAAW,GACf,GAAGtE,CAAA,CACL,CACD,CAAA,CACH,CAGF2V,EAAaG,CAAK,QACXtwF,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,EACjDQ,EAAM,MAAM,2BAA2B,CAAA,QACvC,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEM8xF,EAAiB,MAAOC,EAAY5B,IAAgB,CACpD,GAAA,CACF,MAAMM,EAAUhwF,GAAIrB,GAAI,OAAQ2yF,CAAU,EACpCC,EAAWR,EAAU,KAAanuF,GAAAA,EAAK,KAAO0uF,CAAU,EAGxD3R,EAAa,MAAMz/E,GAAOF,GAAIrB,GAAI,WAAY4yF,EAAS,QAAQ,EAAE,CAAC,EACpE,GAAA,CAAC5R,EAAW,SAAU,CACxBt+E,EAAM,MAAM,mBAAmB,EAC/B,MAAA,CAGI,MAAAmwF,EAAe7R,EAAW,KAAA,EAAO,SACvC,GAAI+P,EAAc8B,EAAc,CACxBnwF,EAAA,MAAM,eAAemwF,CAAY,2BAA2B,EAClE,MAAA,CAGF,MAAMziF,GAAUihF,EAAS,CACvB,SAAUN,CAAA,CACX,EACDsB,KACEzrF,EAAK,IAAI3C,GACPA,EAAK,KAAO0uF,EACR,CAAE,GAAG1uF,EAAM,SAAU8sF,GACrB9sF,CAAA,CAER,QACO/B,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC/CQ,EAAM,MAAM,2BAA2B,CAAA,CAE3C,EAEMowF,EAAa,MAAOH,GAAe,CACnC,GAAA,CACF,MAAM7xD,GAAUz/B,GAAIrB,GAAI,OAAQ2yF,CAAU,CAAC,EAC3CN,KAAqBzrF,EAAK,UAAe3C,EAAK,KAAO0uF,CAAU,CAAC,EAC1D,MAAA9C,EAAgBpvF,EAAK,GAAG,EAC9BiC,EAAM,QAAQ,wBAAwB,QAC/BR,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,EAC3CQ,EAAM,MAAM,uBAAuB,CAAA,CAEvC,EAEMqwF,EAAoB,IACjBX,EAAU,OAAO,CAACjc,EAAOlyE,IAAS,CAEvC,MAAMquB,EADkBruB,EAAK,QAAQ,aAAe,IAAI,KAAS,IAAI,KAAKA,EAAK,QAAQ,cAAc,EACrEA,EAAK,QAAQ,gBAAkBA,EAAK,QAAQ,MACrE,OAAAkyE,EAAS7jD,EAAQruB,EAAK,UAC5B,CAAC,EAYA+uF,EAAiB,IAAM,CACvB,GAAAZ,EAAU,SAAW,EAAG,CAC1B1vF,EAAM,MAAM,oBAAoB,EAChC,MAAA,CAGFif,EAAS,uBAAuB,CAClC,EAEM4R,EAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMoD,EAAe,CACnB,OAAQ,CAAE,EAAG,GAAI,QAAS,CAAE,EAC5B,QAAS,CACP,EAAG,EACH,QAAS,EACT,WAAY,CACV,KAAM,SACN,UAAW,GAAA,CACb,CAEJ,EAEA,OAAIh2B,QACMuxF,GAAa,EAAA,EAIrBpuF,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAW,mCAAmC5O,EAAa,cAAgB,YAAY,GACvF,QAAQ,SACR,QAAQ,UACR,SAAUu0B,EAEV,SAAA,CAAAj0B,EAAA,IAACsO,EAAO,GAAP,CACC,SAAU+oB,EACV,UAAW,sBAAsB33B,EAAa,gBAAkB,eAAe,GAChF,SAAA,eAAA,CAED,EAECozF,EAAU,SAAW,EACpBtuF,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,EACV,UAAW,qBAAqB33B,EAAa,cAAgB,UAAU,cAEvE,SAAA,CAAAM,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,QAAS,SAAkB,oBAAA,CAAA,EAC1FM,EAAA,IAAC4E,GAAA,CACC,GAAG,eACH,UAAU,kDACX,SAAA,mBAAA,CAAA,CAED,CAAA,CAAA,EAKAJ,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAC/S,EAAAA,IAAAsO,EAAO,IAAP,CAAW,SAAU2lB,EAAmB,UAAU,YAChD,SAAA6+D,EAAU,IAAKnuF,GACdH,EAAA,KAAC8J,EAAO,IAAP,CAEC,SAAU+oB,EACV,UAAW,GAAG33B,EAAa,cAAgB,UAAU,0CAErD,SAAA,CAAAM,EAAA,IAAC4E,GAAA,CACC,GAAI,wBAAwBD,EAAK,QAAQ,EAAE,GAC3C,UAAU,qDAEV,SAAA3E,EAAA,IAAC,MAAA,CACC,IAAK2E,EAAK,QAAQ,OAAO,CAAC,EAC1B,IAAKA,EAAK,QAAQ,KAClB,UAAU,4BAAA,CAAA,CACZ,CACF,EACAH,EAAAA,KAAC,MAAI,CAAA,UAAU,SACb,SAAA,CAAAxE,EAAA,IAAC4E,GAAA,CACC,GAAI,wBAAwBD,EAAK,QAAQ,EAAE,GAC3C,UAAW,eAAejF,EAAa,qCAAuC,oCAAoC,GAEjH,WAAK,QAAQ,IAAA,CAChB,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK2E,EAAK,QAAQ,UAClB,IAAKA,EAAK,QAAQ,cAClB,UAAU,SAAA,CACZ,QACC,OAAK,CAAA,UAAU,6BACb,SAAAA,EAAK,QAAQ,aAAe,IAAI,KAAS,IAAI,KAAKA,EAAK,QAAQ,cAAc,EAC1EH,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAA,IACEpO,EAAK,QAAQ,gBAAgB,QAAQ,CAAC,SACvC,OAAK,CAAA,UAAW,WAAWjF,EAAa,gBAAkB,eAAe,qBAAsB,SAAA,CAAA,IAC5FiF,EAAK,QAAQ,MAAM,QAAQ,CAAC,CAAA,CAChC,CAAA,CAAA,EACF,EAEA,IAAIA,EAAK,QAAQ,MAAM,QAAQ,CAAC,CAAC,EAErC,CAAA,CAAA,EACF,SACC,IAAE,CAAA,UAAW,WAAWjF,EAAa,gBAAkB,eAAe,QAAS,SAAA,CAAA,WACrEiF,EAAK,QAAQ,UAAA,CACxB,CAAA,CAAA,EACF,EACAH,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMozF,EAAezuF,EAAK,GAAIA,EAAK,SAAW,CAAC,EACxD,UAAW,oBAAoBjF,EAAa,oBAAsB,mBAAmB,IAAIA,EAAa,gBAAkB,eAAe,GACvI,SAAUiF,EAAK,UAAY,EAE3B,SAAA3E,EAAAA,IAAC2uC,GAAQ,CAAA,UAAU,SAAU,CAAA,CAAA,CAC/B,EACA3uC,EAAAA,IAAC,QAAK,UAAW,mBAAmBN,EAAa,gBAAkB,eAAe,GAAK,SAAAiF,EAAK,QAAS,CAAA,EACrG3E,EAAA,IAAC,SAAA,CACC,QAAS,IAAMozF,EAAezuF,EAAK,GAAIA,EAAK,SAAW,CAAC,EACxD,UAAW,oBAAoBjF,EAAa,oBAAsB,mBAAmB,IAAIA,EAAa,gBAAkB,eAAe,GACvI,SAAUiF,EAAK,UAAYA,EAAK,QAAQ,SAExC,SAAA3E,EAAAA,IAAC4uC,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC9B,EACF,EACA5uC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMwzF,EAAW7uF,EAAK,EAAE,EACjC,UAAW,OAAOjF,EAAa,mCAAqC,kCAAkC,qBAEtG,SAAAM,EAAAA,IAACmiB,GAAQ,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC/B,CACF,CAAA,CAAA,CAAA,EApEKxd,EAAK,EAsEb,CAAA,EACH,EAGAH,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,EACV,UAAW,GAAG33B,EAAa,cAAgB,UAAU,4BAErD,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,aAAaN,EAAa,gBAAkB,eAAe,GAAI,SAAa,eAAA,CAAA,EAC3F8E,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAQ,UAAA,CAAA,SAC7E,OAAK,CAAA,UAAW,GAAGA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAE+zF,EAAA,EAAoB,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,EACzG,EACAjvF,EAAAA,KAAC,MAAI,CAAA,UAAW,kCAAkC9E,EAAa,gBAAkB,eAAe,kBAAkBA,EAAa,kBAAoB,iBAAiB,GAClK,SAAA,CAAAM,EAAAA,IAAC,QAAK,SAAK,OAAA,CAAA,SACV,OAAK,CAAA,SAAA,CAAA,IAAEyzF,EAAA,EAAoB,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,CACzC,CAAA,CAAA,EACF,EACAzzF,EAAA,IAAC,SAAA,CACC,QAAS0zF,EACT,UAAU,kGACX,SAAA,qBAAA,CAAA,CAED,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CAEJ,CAEJ,EC1ZM7M,GAAgB,CAAC,CAAE,OAAAnrE,EAAQ,QAAAC,EAAS,eAAAqrE,EAAgB,QAAAE,KAAc,CACtE,KAAM,CAACyM,EAAeC,CAAgB,EAAIh0F,EAAAA,SAAS,EAAK,EAgGpD,OA7FJE,EAAAA,UAAU,IAAM,CAEd,MAAM+zF,EAAkB,CACtB,IAAK,QAAQ,IACb,KAAM,QAAQ,KACd,MAAO,QAAQ,KACjB,EAGMC,EAAc3uE,GAAS,IAAI4uE,IAAS,CAEnBA,EAAK,QACxB,OAAOC,GAAQ,UACfA,EAAI,SAAS,qCAAqC,CACpD,GAGkBH,EAAA1uE,CAAI,EAAE,GAAG4uE,CAAI,CAEjC,EAGQ,eAAA,IAAMD,EAAW,KAAK,EACtB,QAAA,KAAOA,EAAW,MAAM,EACxB,QAAA,MAAQA,EAAW,OAAO,EAG3B,IAAM,CACX,QAAQ,IAAMD,EAAgB,IAC9B,QAAQ,KAAOA,EAAgB,KAC/B,QAAQ,MAAQA,EAAgB,KAClC,CACF,EAAG,EAAE,EAEL/zF,EAAAA,UAAU,IAAM,CACd,GAAI,CAAC4b,EAAQ,OAEP,MAAAu4E,EAAY,SAAS,eAAe,oBAAoB,EAC9D,GAAI,CAACA,EAAW,OAEhB,MAAMC,EAAmB,IAAM,CACzB,GAAA,CAEFD,EAAU,UAAY,GAGhB,MAAAE,EAAkB,SAAS,cAAc,KAAK,EACpDA,EAAgB,GAAK,cACrBA,EAAgB,UAAY,8CAC5BF,EAAU,YAAYE,CAAe,EAEjC,OAAO,OACT,OAAO,KAAK,YAAY,CACtB,eAAgB,cAChB,UAAW,IACX,MAAOjN,GAAW,IAClB,QAAS,KACT,OAAQF,CAAA,CACT,EACD4M,EAAiB,EAAI,SAEhBhxF,EAAO,CACN,QAAA,MAAM,sCAAuCA,CAAK,CAAA,CAE9D,EAGA,GAAI,CAAC,SAAS,eAAe,UAAU,EAAG,CAClC,MAAA+yE,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,GAAK,WACZA,EAAO,IAAM,0CACbA,EAAO,MAAQ,GACN,SAAA,KAAK,YAAYA,CAAM,CAAA,CAI5B,MAAAye,EAAY,YAAY,IAAM,CAC9B,OAAO,OACT,cAAcA,CAAS,EACNF,EAAA,IAElB,GAAG,EAGN,MAAO,IAAM,CACX,cAAcE,CAAS,EACvBR,EAAiB,EAAK,EAClBK,IACFA,EAAU,UAAY,GAE1B,CACC,EAAA,CAACv4E,EAAQsrE,EAAgBE,CAAO,CAAC,EAE/BxrE,EAGHlX,EAAA,KAAC,MAAI,CAAA,UAAU,sDACb,SAAA,CAAAxE,EAAA,IAAC,MAAI,CAAA,UAAU,uCAAuC,QAAS2b,EAAS,EACxEnX,EAAAA,KAAC,MAAI,CAAA,UAAU,wEACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,uCAAuC,SAErD,mBAAA,EACAA,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,uDAEV,SAAA3b,EAAAA,IAACqR,GAAI,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC3B,EACF,QAEC,MAAI,CAAA,UAAU,iCACb,SAAC7M,EAAA,KAAA,MAAA,CAAI,UAAU,kCACb,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,4BAA4B,SAAgB,mBAAA,EAC3DA,EAAA,IAAA,OAAA,CAAK,UAAU,4BAA6B,SAAegnF,EAAA,EAC3DhnF,EAAA,IAAA,OAAA,CAAK,UAAU,qBAAqB,SAAC,IAAA,EACrCA,EAAA,IAAA,OAAA,CAAK,UAAU,4BAA4B,SAAQ,WAAA,EACnDA,EAAA,IAAA,OAAA,CAAK,UAAU,4BAA6B,YAAW,aAAc,CAAA,CAAA,CAAA,CACxE,CACF,CAAA,EAEE2zF,EAIE,KAHF3zF,EAAA,IAAC,MAAI,CAAA,UAAU,wCACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,+DAAgE,CAAA,CAAA,CACjF,EAEDA,EAAA,IAAA,MAAA,CAAI,GAAG,qBAAqB,UAAU,yEAA0E,CAAA,CAAA,CACnH,CAAA,CAAA,EACF,EAnCkB,IAqCtB,ECvHMm4E,GAAgB,IAAM,CACpB,KAAA,CAAE,WAAAz4E,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,iBAAiB5O,EAAa,cAAgB,aAAa,cACtE,QAAS,CACP,QAAS,CAAC,GAAK,GAAK,EAAG,CACzB,EACA,WAAY,CACV,SAAU,IACV,OAAQ,IACR,KAAM,WAAA,CACR,CACF,CAEJ,EAEM20F,GAAiB,IAAM,CACrB,KAAA,CAAE,WAAA30F,CAAW,EAAIO,GAAS,EAE9B,OAAAuE,EAAA,KAAC,MAAI,CAAA,UAAU,wBAEb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAU,WACb,SAAAA,EAAA,IAACm4E,GAAc,CAAA,CAAA,CACjB,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,YACZ,SAAC,CAAA,EAAG,EAAG,CAAC,EAAE,IAAK3pE,UACb,MAAY,CAAA,UAAW,GAAG9O,EAAa,cAAgB,UAAU,4BAEhE,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,QAGC,MAAI,CAAA,UAAW,YAAYz4E,EAAa,kBAAoB,iBAAiB,kBAC3E,SAAA,CAAC,EAAG,CAAC,EAAE,IAAK+wB,GACVjsB,OAAA,MAAA,CAAY,UAAU,aACrB,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,qDACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,YACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,YACb,SAAAn4E,MAACm4E,IAAc,CAAA,EACjB,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,GAnBQ1nD,CAoBV,CACD,EACH,EAGAzwB,EAAA,IAAC,MAAI,CAAA,UAAW,YAAYN,EAAa,kBAAoB,iBAAiB,aAC5E,SAAA8E,OAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CA/DQ,EAAA3pE,CAgEV,CACD,CACH,CAAA,CAAA,EACF,CAEJ,EAEM8lF,GAAqB,CAAC,CAAE,OAAA54E,EAAQ,QAAAC,EAAS,MAAAtV,KAAY,CACzD,KAAM,CAAC+gF,EAAcC,CAAe,EAAIznF,EAAAA,SAAS,EAAK,EAChD,CAACoF,EAAiBC,CAAkB,EAAIrF,EAAAA,SAAS,EAAK,EACtD,CAACsF,EAAeC,CAAgB,EAAIvF,EAAAA,SAAS,EAAE,EAC/C,CAAE,WAAAF,CAAW,EAAIO,GAAS,EAEhCH,EAAAA,UAAU,IAAM,CACQy0F,EAAA,CACxB,EAAG,EAAE,EAEL,MAAMA,EAAwB,SAAY,CACpC,GAAA,CACI,MAAA3sF,EAAW,MAAMC,GAAuB,EAC9C,GAAID,EAAU,CACZ,MAAME,EAAW,MAAMF,EAAS,QAAQ,CAAE,OAAQ,eAAgB,EAC9DE,EAAS,OAAS,IACH3C,EAAA2C,EAAS,CAAC,CAAC,EAC5B7C,EAAmB,EAAI,EACzB,QAEKrC,EAAO,CACN,QAAA,MAAM,oCAAqCA,CAAK,CAAA,CAE5D,EAEM4xF,EAAqB,SAAY,CACjC,GAAAnuF,EAAM,SAAW,YAAa,CAChCjD,EAAM,MAAM,wDAAwD,EACpE,MAAA,CAGFikF,EAAgB,EAAI,EAChB,GAAA,CAEI,MAAAr6E,EAAY,MAAM/K,GAAOF,GAAIrB,GAAI,UAAW2F,EAAM,QAAQ,CAAC,EAC7D,GAAA,CAAC2G,EAAU,SACb,MAAM,IAAI,MAAM,6BAA6B3G,EAAM,QAAQ,EAAE,EAGzD,MAAAouF,EAAeznF,EAAU,KAAA,EAAO,cAChC0nF,EAAcruF,EAAM,eAAe,YAGzC,GAAI,CAACquF,GAAe,CAAClpF,GAAiBkpF,CAAW,EACzC,MAAA,IAAI,MAAM,8BAA8B,EAGhD,GAAI,CAACD,GAAgB,CAACjpF,GAAiBipF,CAAY,EACjD,MAAM,IAAI,MAAM,kCAAkCA,CAAY,EAAE,EAG5D1nF,MAAAA,EAAe1G,EAAM,MAAQ,IAG7BsuF,EAAgB,CACpB,QAAStuF,EAAM,GACf,QAASA,EAAM,QACf,SAAUA,EAAM,SAChB,OAAQ0G,EACR,eAAgB1G,EAAM,MACtB,eAAgBquF,EAChB,OAAQ,UACR,UAAWt+E,GAAgB,EAC3B,QAAS/P,EAAM,cAAc,QAC7B,aAAc,CACZ,MAAOA,EAAM,MACb,MAAOA,EAAM,MACb,cAAeA,EAAM,aAAA,CAEzB,EAGA,MAAMsP,GAAOnT,GAAW9B,GAAI,gBAAgB,EAAGi0F,CAAa,EAE5DvxF,EAAM,QAAQ,uCAAuC,EAC7CuY,EAAA,QAED/Y,EAAO,CACN,QAAA,MAAM,mCAAoCA,CAAK,EACjDQ,EAAA,MAAMR,EAAM,SAAW,iCAAiC,CAAA,QAC9D,CACAykF,EAAgB,EAAK,CAAA,CAEzB,EAEI,GAAA,CAAC3rE,EAAe,OAAA,KAEd,MAAA+8D,EAAcpyE,EAAM,MAAQ,IAC5B0G,EAAe1G,EAAM,MAAQ,IAGjC,OAAArG,EAAAA,IAAC,MAAI,CAAA,UAAU,6EACb,SAAAwE,OAAC,MAAI,CAAA,UAAW,GAAG9E,EAAa,cAAgB,UAAU,uCACxD,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAAc,gBAAA,CAAA,EAE5G2G,EAAM,SAAW,YACfrG,EAAAA,IAAA,MAAA,CAAI,UAAU,mCACb,SAAAwE,EAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACxE,EAAAA,IAAAi8E,GAAA,CAAc,UAAU,gCAAiC,CAAA,SACzD,MACC,CAAA,SAAA,CAACj8E,EAAA,IAAA,IAAA,CAAE,UAAU,sCAAsC,SAAuB,0BAAA,EAC1EwE,EAAAA,KAAC,IAAE,CAAA,UAAU,+BAA+B,SAAA,CAAA,mFACuC6B,EAAM,OAAO,IAAA,CAChG,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAGE7B,EAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAA/S,EAAAA,IAAC,OAAI,UAAU,iCACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,EAAAA,IAAAi8E,GAAA,CAAc,UAAU,8BAA+B,CAAA,SACvD,MACC,CAAA,SAAA,CAACj8E,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAAsB,yBAAA,EACtEA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,yDAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACC,MAAI,CAAA,UAAU,iCACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,EAAAA,IAAAi8E,GAAA,CAAc,UAAU,+BAAgC,CAAA,SACxD,MACC,CAAA,SAAA,CAACj8E,EAAA,IAAA,IAAA,CAAE,UAAU,qCAAqC,SAAmB,sBAAA,EACrEwE,EAAAA,KAAC,IAAE,CAAA,UAAU,iCAAiC,SAAA,CAAA,yBACrBi0E,EAAY,QAAQ,CAAC,EAAE,iEAAA,CAChD,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGFj0E,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,UAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO,IAAIqG,EAAM,GAAG,MAAM,EAAE,CAAC,GAC7B,SAAQ,GACR,UAAW,oBAAoB3G,EAAa,4CAA8C,0CAA0C,oBAAA,CAAA,CACtI,EACF,SAEC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,iBAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOqG,EAAM,cAAc,YAC3B,SAAQ,GACR,UAAW,oBAAoB3G,EAAa,4CAA8C,0CAA0C,oBAAA,CAAA,CACtI,EACF,EAEA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,iBAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK,IAAIqG,EAAM,eAAe,OAAO,YAAA,GAAiB,MAAM,OAC5D,IAAKA,EAAM,eAAe,OAAS,OACnC,UAAU,SAAA,CACZ,EACArG,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO,IAAIqG,EAAM,MAAM,QAAQ,CAAC,CAAC,GACjC,SAAQ,GACR,UAAW,oBAAoB3G,EAAa,4CAA8C,0CAA0C,iCAAA,CAAA,CACtI,CACF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACM,EAAA,IAAA,QAAA,CAAM,UAAU,gDAAgD,SAEjE,wCAAA,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK,IAAIqG,EAAM,eAAe,OAAO,YAAA,GAAiB,MAAM,OAC5D,IAAKA,EAAM,eAAe,OAAS,OACnC,UAAU,SAAA,CACZ,EACArG,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO,IAAI+M,EAAa,QAAQ,CAAC,CAAC,GAClC,SAAQ,GACR,UAAW,yEAAyErN,EAAa,gBAAkB,eAAe,cAAA,CAAA,CACpI,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAW,aAAajc,EAAa,oCAAsC,mCAAmC,GAC/G,SAAA,QAAA,CAED,EACAM,EAAA,IAAC,SAAA,CACC,QAASw0F,EACT,SAAUpN,GAAgB/gF,EAAM,SAAW,YAC3C,UAAW,mCACTA,EAAM,SAAW,YACb,iCACA+gF,EACA,6CACA,iCACN,GAEC,WAAe,gBAAkB,uBAAA,CAAA,CACpC,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAEMwN,GAA4B,CAAC,CAAE,OAAAl5E,EAAQ,QAAAC,EAAS,UAAA6lD,EAAW,QAAAulB,KAAc,CAC7E,KAAM,CAACK,EAAcC,CAAe,EAAIznF,EAAAA,SAAS,EAAK,EAChD,CAAE,WAAAF,CAAW,EAAIO,GAAS,EAE1B40F,EAAgB,SAAY,CAChCxN,EAAgB,EAAI,EACpB,MAAM7lB,EAAUulB,CAAO,EACvBM,EAAgB,EAAK,EACb1rE,EAAA,CACV,EAEI,OAACD,EAGHlX,EAAA,KAAC,MAAI,CAAA,UAAU,sDACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAW,iBAAiBN,EAAa,cAAgB,UAAU,iBAAkB,QAASic,CAAS,CAAA,SAC3G,MAAI,CAAA,UAAW,GAAGjc,EAAa,cAAgB,UAAU,+DACxD,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAAgB,kBAAA,CAAA,QAE9G,MAAI,CAAA,UAAU,iCACb,SAAC8E,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,EAAAA,IAAAi8E,GAAA,CAAc,UAAU,8BAA+B,CAAA,SACvD,MACC,CAAA,SAAA,CAACj8E,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAAiD,oDAAA,EACjGA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,mDAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QAEC,MAAI,CAAA,UAAU,iCACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,EAAAA,IAAAi8E,GAAA,CAAc,UAAU,+BAAgC,CAAA,SACxD,MACC,CAAA,SAAA,CAACj8E,EAAA,IAAA,IAAA,CAAE,UAAU,qCAAqC,SAA6B,gCAAA,EAC9EA,EAAA,IAAA,IAAA,CAAE,UAAU,iCAAiC,SAE9C,2LAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS2b,EACT,UAAW,aAAajc,EAAa,oCAAsC,mCAAmC,GAC/G,SAAA,QAAA,CAED,EACAM,EAAA,IAAC,SAAA,CACC,QAAS60F,EACT,SAAUzN,EACV,UAAU,sFAET,WAAe,gBAAkB,kBAAA,CAAA,CACpC,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAjDkB,IAmDtB,EAEMmH,GAAc,CAAC,CAAE,OAAA7yE,EAAQ,QAAAC,EAAS,MAAAtV,EAAO,KAAA1B,KAAW,CACxD,KAAM,CAACkY,EAAQC,CAAS,EAAIld,EAAAA,SAAS,CAAC,EAChC,CAACwQ,EAAQs+E,CAAS,EAAI9uF,EAAAA,SAAS,EAAE,EACjC,CAAC+uF,EAAOC,CAAQ,EAAIhvF,EAAAA,SAAS,IAAI,EACjC,CAACs9E,EAAcC,CAAe,EAAIv9E,EAAAA,SAAS,EAAE,EAC7C,CAACwnF,EAAcC,CAAe,EAAIznF,EAAAA,SAAS,EAAK,EAChD,CAAE,KAAAuB,CAAK,EAAImC,GAAa,EACxB,CAAE,WAAA5D,CAAW,EAAIO,GAAS,EAE1B4uF,EAAqBrnF,GAAM,CAC/B,MAAMkN,EAAOlN,EAAE,OAAO,MAAM,CAAC,EAC7B,GAAIkN,EAAM,CACR,GAAIA,EAAK,KAAO,EAAI,KAAO,KAAM,CAC/BtR,EAAM,MAAM,6BAA6B,EACzC,MAAA,CAEFwrF,EAASl6E,CAAI,EACP,MAAAo6E,EAAS,IAAI,WACnBA,EAAO,UAAY,IAAM,CACvB3R,EAAgB2R,EAAO,MAAM,CAC/B,EACAA,EAAO,cAAcp6E,CAAI,CAAA,CAE7B,EAEMyP,EAAe,MAAO3c,GAAM,CAEhC,GADAA,EAAE,eAAe,EACb,CAACqV,EAAQ,CACXzZ,EAAM,MAAM,wBAAwB,EACpC,MAAA,CAGFikF,EAAgB,EAAI,EAChB,GAAA,CACF,IAAIlrD,EAAW,GACf,GAAIwyD,EAAO,CACT,MAAM/N,EAAWpC,GAAI59E,GAAS,WAAW+D,EAAK,SAAS,IAAIxD,EAAK,GAAG,IAAI,KAAK,IAAA,CAAK,EAAE,EAC7E,MAAAs9E,GAAYmC,EAAU+N,CAAK,EACtBxyD,EAAA,MAAMuiD,GAAekC,CAAQ,CAAA,CAG1C,MAAMoO,EAAa,CACjB,UAAWrqF,EAAK,UAChB,QAAS0B,EAAM,GACf,OAAQlF,EAAK,IACb,SAAUwD,EAAK,UAAY0B,EAAM,SACjC,OAAAwW,EACA,OAAQzM,EAAO,KAAK,EACpB,MAAO+rB,EACP,cAAe,KACf,SAAUh7B,EAAK,aAAeA,EAAK,OAAO,MAAM,GAAG,EAAE,CAAC,GAAK,YAC3D,YAAawD,EAAK,KAClB,aAAcA,EAAK,KACrB,EAEA,MAAMgR,GAAOnT,GAAW9B,GAAI,SAAS,EAAGsuF,CAAU,EAClD5rF,EAAM,QAAQ,+BAA+B,EACrCuY,EAAA,QACD/Y,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC/CQ,EAAM,MAAM,yBAAyB,CAAA,QACrC,CACAikF,EAAgB,EAAK,CAAA,CAEzB,EAEI,OAAC3rE,EAIDlX,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAA/S,EAAA,IAAC,MAAI,CAAA,UAAU,4CAA4C,QAAS2b,EAAS,EAC7E3b,EAAAA,IAAC,MAAI,CAAA,UAAU,0DACb,SAAAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,MAAO,GAAK,QAAS,CAAE,EAClC,QAAS,CAAE,MAAO,EAAG,QAAS,CAAE,EAChC,UAAW,GAAG5O,EAAa,cAAgB,UAAU,4CAErD,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAAc,gBAAA,CAAA,EACvGM,EAAA,IAAA,SAAA,CAAO,QAAS2b,EAAS,UAAW,GAAGjc,EAAa,oCAAsC,mCAAmC,GAC5H,SAAAM,EAAA,IAACkgB,GAAI,CAAA,UAAU,UAAU,CAC3B,CAAA,CAAA,EACF,SAEC,MAAI,CAAA,UAAW,+BAA+BxgB,EAAa,cAAgB,YAAY,mBACtF,SAAA,CAACM,EAAAA,IAAA,MAAA,CAAI,IAAK2E,EAAK,MAAO,IAAKA,EAAK,KAAM,UAAU,mCAAoC,CAAA,SACnF,MACC,CAAA,SAAA,CAAC3E,EAAAA,IAAA,KAAA,CAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAK,WAAK,IAAK,CAAA,SAC1F,IAAE,CAAA,UAAW,WAAWA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,UAAQ2G,EAAM,GAAG,MAAM,EAAE,CAAA,CAAE,CAAA,CAAA,CACxG,CAAA,CAAA,EACF,EAEC7B,EAAA,KAAA,OAAA,CAAK,SAAU2f,EAAc,UAAU,YACtC,SAAA,CAAA3f,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAAM,QAAA,CAAA,EAC3GM,EAAA,IAAA,MAAA,CAAI,UAAU,0BACZ,SAAC,CAAA,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKmR,GACpBnR,EAAA,IAAC,SAAA,CAEC,KAAK,SACL,QAAS,IAAM8c,EAAU3L,CAAI,EAC7B,UAAU,qBAEV,SAAAnR,EAAA,IAACoR,GAAA,CACC,UAAW,WACTD,GAAQ0L,EAAS,iBAAmBnd,EAAa,gBAAkB,eACrE,EAAA,CAAA,CACF,EATKyR,CAAA,CAWR,CACH,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAAAnR,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAAM,QAAA,CAAA,EAC5GM,EAAA,IAAC,WAAA,CACC,MAAOoQ,EACP,SAAW5I,GAAMknF,EAAUlnF,EAAE,OAAO,KAAK,EACzC,UAAW,kFACT9H,EACI,iEACA,oDACN,GACA,KAAK,IACL,YAAY,4CAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,SAAM,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,QAAS,SAEtG,sBAAA,CAAA,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,iBACf,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,OAAO,UACP,SAAU6uF,EACV,UAAU,QAAA,CACZ,SACC,MAAI,CAAA,UAAW,uDACdnvF,EACI,oCACA,kCACN,GACE,SAAA,CAAAM,MAACovF,IAAQ,UAAW,WAAW1vF,EAAa,gBAAkB,eAAe,GAAI,EACjFM,EAAAA,IAAC,QAAK,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAI,SAAY,cAAA,CAAA,CAAA,CAC5F,CAAA,CAAA,EACF,EACCw9E,GACC14E,EAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKk9E,EACL,IAAI,UACJ,UAAU,mCAAA,CACZ,EACAl9E,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAM,CACb4uF,EAAS,IAAI,EACbzR,EAAgB,EAAE,CACpB,EACA,UAAU,sEAEV,SAAAn9E,EAAAA,IAACkgB,GAAI,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC3B,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAEAlgB,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAUonF,EACV,UAAU,gGAET,WAAe,gBAAkB,eAAA,CAAA,CACpC,CACF,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAnHkB,IAqHtB,EAEM0N,GAAS,IAAM,CACb,KAAA,CAAE,KAAA3zF,CAAK,EAAImC,GAAa,EACxB,CAAE,WAAA5D,CAAW,EAAIO,GAAS,EAC1B,CAACoB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAC+M,EAAQ86E,CAAS,EAAI7nF,EAAAA,SAAS,CAAA,CAAE,EACjC,CAAC+nF,EAAeC,CAAgB,EAAIhoF,EAAAA,SAAS,IAAI,EACjD,CAACm1F,EAAmBC,CAAoB,EAAIp1F,EAAAA,SAAS,EAAK,EAC1D,CAACq1F,EAAqBC,CAAsB,EAAIt1F,EAAAA,SAAS,EAAK,EAC9D,CAACu1F,EAA0BC,CAA2B,EAAIx1F,EAAAA,SAAS,IAAI,EACvE,CAACioF,EAAqBC,CAAsB,EAAIloF,EAAAA,SAAS,EAAK,EAC9D,CAACy1F,EAAkBC,CAAmB,EAAI11F,EAAAA,SAAS,IAAI,EACvD,CAAC21F,EAAmBC,CAAoB,EAAI51F,EAAAA,SAAS,EAAK,EAC1D,CAAC61F,EAAuBC,CAAwB,EAAI91F,EAAAA,SAAS,IAAI,EAEvEE,EAAAA,UAAU,IAAM,CACFmoF,EAAA,CAAA,EACX,CAAC9mF,CAAI,CAAC,EAET,MAAM8mF,EAAc,SAAY,CAC1B,GAAA,CACF,MAAM3lF,EAAIC,GACRC,GAAW9B,GAAI,QAAQ,EACvB+B,GAAM,UAAW,KAAMtB,EAAK,GAAG,EAC/B0F,GAAQ,YAAa,MAAM,CAC7B,EAEMqhF,GADgB,MAAMvlF,GAAQL,CAAC,GACJ,KAAK,IAAIP,IAAQ,CAChD,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EACF0lF,EAAUS,CAAU,QACbtlF,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7CQ,EAAM,MAAM,uBAAuB,CAAA,QACnC,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEMonF,EAAkBnuD,GAAW,CACzB,OAAAA,EAAO,YAAe,EAAA,CAC5B,IAAK,UACI,MAAA,gCACT,IAAK,aACI,MAAA,4BACT,IAAK,UACI,MAAA,gCACT,IAAK,YACI,MAAA,8BACT,IAAK,YACI,MAAA,0BACT,QACS,MAAA,2BAAA,CAEb,EAEMtG,EAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMoD,EAAe,CACnB,OAAQ,CAAE,EAAG,GAAI,QAAS,CAAE,EAC5B,QAAS,CACP,EAAG,EACH,QAAS,EACT,WAAY,CACV,KAAM,SACN,UAAW,GAAA,CACb,CAEJ,EAEMs+D,EAAkB,MAAO5O,GAAY,CACrC,GAAA,CACF,MAAMwB,EAAWxmF,GAAIrB,GAAI,SAAUqmF,CAAO,EAC1C,MAAMj2E,GAAUy3E,EAAU,CACxB,OAAQ,YACR,gBAAiB,KACjB,eAAgB,YAChB,yBAA0B,EAAA,CAC3B,EAGDd,KACEngF,EAAK,IAAIjB,GACPA,EAAM,KAAO0gF,EACT,CACE,GAAG1gF,EACH,OAAQ,YACR,gBAAiB,KACjB,eAAgB,YAChB,yBAA0B,EAAA,EAE5BA,CAAA,CAER,EAEAjD,EAAM,QAAQ,iCAAiC,QACxCR,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,EACjDQ,EAAM,MAAM,4BAA4B,CAAA,CAE5C,EAEMwyF,EAAuBvvF,GAAU,CACjBivF,EAAA,CAClB,eAAgBjvF,EAAM,eACtB,QAASA,EAAM,OAAA,CAChB,EACDyhF,EAAuB,EAAI,CAC7B,EAEA,OAAIzmF,QACMgzF,GAAe,EAAA,EAIvB7vF,EAAA,KAAC8J,EAAO,IAAP,CACC,UAAW,mCAAmC5O,EAAa,cAAgB,YAAY,GACvF,QAAQ,SACR,QAAQ,UACR,SAAUu0B,EAEV,SAAA,CAAAj0B,EAAA,IAACsO,EAAO,GAAP,CACC,SAAU+oB,EACV,UAAW,sBAAsB33B,EAAa,gBAAkB,eAAe,GAChF,SAAA,WAAA,CAED,EAECiN,EAAO,SAAW,EACjBnI,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,EACV,UAAW,qBAAqB33B,EAAa,cAAgB,UAAU,cAEvE,SAAA,CAACM,EAAA,IAAA,MAAA,CAAI,UAAU,2BACb,SAACA,EAAAA,IAAAk3E,GAAA,CAAU,UAAW,YAAYx3E,EAAa,gBAAkB,eAAe,EAAI,CAAA,EACtF,EACAM,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,QAAS,SAAiC,mCAAA,CAAA,EACzGM,EAAA,IAAC4E,GAAA,CACC,GAAG,eACH,UAAU,kDACX,SAAA,gBAAA,CAAA,CAED,CAAA,CAGF,EAAA5E,EAAA,IAACsO,EAAO,IAAP,CAAW,SAAU2lB,EAAmB,UAAU,YAChD,SAAAtnB,EAAO,IAAKtG,GACX7B,EAAA,KAAC8J,EAAO,IAAP,CAEC,SAAU+oB,EACV,UAAW,GAAG33B,EAAa,cAAgB,UAAU,kBAGrD,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAA,OAAC,MAAG,UAAW,eAAe9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,UACtE2G,EAAM,GAAG,MAAM,EAAE,CAAA,EAC3B,QACC,OAAK,CAAA,UAAW,WAAW3G,EAAa,gBAAkB,eAAe,GACvE,SAAI,IAAA,KAAK2G,EAAM,WAAW,QAAU,GAAI,EAAE,oBAC7C,CAAA,CAAA,EACF,EACArG,EAAA,IAAC,OAAA,CACC,UAAW,8CAA8C0oF,EACvDriF,EAAM,MAAA,CACP,GAEA,SAAMA,EAAA,MAAA,CAAA,CACT,EACF,QAGC,MAAI,CAAA,UAAW,YAAY3G,EAAa,kBAAoB,iBAAiB,GAC3E,SAAM2G,EAAA,MAAM,IAAK1B,GACfH,EAAAA,KAAA,MAAA,CAAyB,UAAU,+BAClC,SAAA,CAAAxE,EAAA,IAAC4E,GAAA,CACC,GAAI,wBAAwBD,EAAK,SAAS,GAC1C,UAAU,qDAEV,SAAA3E,EAAA,IAAC,MAAA,CACC,IAAK2E,EAAK,MACV,IAAKA,EAAK,KACV,UAAU,4BAAA,CAAA,CACZ,CACF,EACAH,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAxE,EAAA,IAAC4E,GAAA,CACC,GAAI,wBAAwBD,EAAK,SAAS,GAC1C,UAAW,eAAejF,EAAa,qCAAuC,oCAAoC,kBAEjH,SAAKiF,EAAA,IAAA,CACR,EACAH,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK,IAAIqG,EAAM,eAAe,OAAO,YAAA,GAAiB,MAAM,OAC5D,IAAKA,EAAM,eAAe,OAAS,OACnC,UAAU,SAAA,CACZ,EACA7B,EAAAA,KAAC,OAAK,CAAA,UAAU,6BAA6B,SAAA,CAAA,IACzCG,EAAK,MAAM,QAAQ,CAAC,CAAA,EACxB,SACC,OAAK,CAAA,UAAW,WAAWjF,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,KACzEiF,EAAK,QAAA,CACV,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAH,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAA6B,EAAM,SAAW,aAChB7B,EAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACbojF,EAAiBvhF,CAAK,EACtBqvF,EAAyB/wF,CAAI,EAC7B6wF,EAAqB,EAAI,CAC3B,EACA,UAAU,qFAEV,SAAA,CAACx1F,EAAAA,IAAA61F,GAAA,CAAO,UAAU,SAAU,CAAA,EAAE,gBAAA,CAAA,CAEhC,QAEDC,GAAe,CAAA,UAAW,WAAWp2F,EAAa,gBAAkB,eAAe,EAAI,CAAA,CAAA,CAC1F,CAAA,CA/CQ,CAAA,EAAAiF,EAAK,SAgDf,CACD,EACH,SAGC,MAAI,CAAA,UAAW,YAAYjF,EAAa,kBAAoB,iBAAiB,QAC5E,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAY,cAAA,CAAA,EAClF8E,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK,IAAIqG,EAAM,eAAe,OAAO,YAAA,GAAiB,MAAM,OAC5D,IAAKA,EAAM,eAAe,OAAS,OACnC,UAAU,SAAA,CACZ,SACC,OAAK,CAAA,UAAW,eAAe3G,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAC9E2G,EAAM,MAAM,QAAQ,CAAC,CAAA,CACzB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACCA,EAAM,SAAW,WACf7B,EAAA,KAAA,OAAA,CAAK,UAAW,WAAW9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,uBACvD,IAAI,KAAK2G,EAAM,WAAW,QAAU,IAAO,GAAK,GAAK,GAAK,GAAK,GAAI,EAAE,mBAAmB,CAAA,CAC/G,CAAA,CAAA,EAEJ,EAECA,EAAM,gBACJ7B,OAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,OAAC,OAAI,UAAW,WAAW9E,EAAa,gBAAkB,eAAe,GACvE,SAAA,CAAAM,MAAC,OAAK,CAAA,UAAU,cAAe,SAAAqG,EAAM,SAAW,QAAQ,EAAO,aAC9DrG,EAAA,IAAA,OAAA,CAAK,UAAU,mBAAoB,WAAM,cAAe,CAAA,CAAA,EAC3D,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAA6B,EAAM,SAAW,WAAa,CAACA,EAAM,0BACpCrG,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACbo1F,EAA4B/uF,EAAM,EAAE,EACpC6uF,EAAuB,EAAI,CAC7B,EACA,UAAU,8GACX,SAAA,kBAAA,CAED,EAEFl1F,EAAA,IAAC,SAAA,CACC,QAAS,IAAM41F,EAAoBvvF,CAAK,EACxC,UAAU,2GACX,SAAA,eAAA,CAED,EACCA,EAAM,iBAAmB,aACvB7B,EAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACxE,EAAAA,IAAA+1F,GAAA,CAAiB,UAAU,WAAY,CAAA,EACvC/1F,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAU,YAAA,CAAA,CAAA,EAC1C,EACEqG,EAAM,yBACP7B,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAAA,IAAAg2F,GAAA,CAAc,UAAU,WAAY,CAAA,EACpCh2F,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAS,WAAA,CAAA,CAAA,CACzC,CAAA,EAEAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACxE,EAAAA,IAAAi2F,GAAA,CAAM,UAAU,WAAY,CAAA,EAC5Bj2F,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAU,YAAA,CAAA,CAAA,CAC1C,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,QAGC,MAAI,CAAA,UAAW,uCAAuCN,EAAa,kBAAoB,iBAAiB,GACvG,SAAAM,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACb4nF,EAAiBvhF,CAAK,EACtB2uF,EAAqB,EAAI,CAC3B,EACA,UAAU,sFACX,SAAA,gBAAA,CAAA,CAGH,CAAA,CAAA,CAAA,EA7JK3uF,EAAM,EA+Jd,CAAA,EACH,EAIDshF,GACC3nF,EAAA,IAACs0F,GAAA,CACC,OAAQS,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1BpN,EAAiB,IAAI,CACvB,EACA,MAAOD,CAAA,CACT,EAGF3nF,EAAA,IAAC40F,GAAA,CACC,OAAQK,EACR,QAAS,IAAMC,EAAuB,EAAK,EAC3C,UAAWS,EACX,QAASR,CAAA,CACX,EAECE,GACCr1F,EAAA,IAAC6mF,GAAA,CACC,OAAQgB,EACR,QAAS,IAAM,CACbC,EAAuB,EAAK,EAC5BwN,EAAoB,IAAI,CAC1B,EACA,eAAgBD,EAAiB,eACjC,QAASA,EAAiB,OAAA,CAC5B,EAGDI,GACCz1F,EAAA,IAACuuF,GAAA,CACC,OAAQgH,EACR,QAAS,IAAM,CACbC,EAAqB,EAAK,EAC1BE,EAAyB,IAAI,CAC/B,EACA,MAAO/N,EACP,KAAM8N,CAAA,CAAA,CACR,CAAA,CAEJ,CAEJ,EC/6BMxhE,GAAoB,CACxB,OAAQ,CAAE,QAAS,CAAE,EACrB,QAAS,CACP,QAAS,EACT,WAAY,CACV,gBAAiB,EAAA,CACnB,CAEJ,EAEMoD,GAAe,CACnB,OAAQ,CAAE,QAAS,EAAG,EAAG,EAAG,EAC5B,QAAS,CACP,QAAS,EACT,EAAG,CAAA,CAEP,EAEM6+D,GAAW,IAAM,CACrB,MAAM7zE,EAAWC,GAAY,EACvB,CAAE,KAAAnhB,CAAK,EAAImC,GAAa,EACxB,CAAE,WAAA5D,CAAW,EAAIO,GAAS,EAC1B,CAAC6yF,EAAWC,CAAY,EAAInzF,EAAAA,SAAS,CAAA,CAAE,EACvC,CAACopF,EAAcC,CAAe,EAAIrpF,EAAAA,SAAS,IAAI,EAC/C,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACoF,EAAiBC,CAAkB,EAAIrF,EAAAA,SAAS,EAAK,EACtD,CAACsF,EAAeC,CAAgB,EAAIvF,EAAAA,SAAS,EAAE,EAC/C,CAACujB,EAAeg2D,CAAgB,EAAIv5E,EAAAA,SAAS,EAAE,EAC/C,CAACwL,EAAS0X,CAAU,EAAIljB,EAAAA,SAAS,IAAI,EACrC,CAACu2F,EAAcC,CAAe,EAAIx2F,WAAS,CAC/C,SAAU,EACV,cAAe,EACf,MAAO,CAAA,CACR,EACK,CAAC2+C,EAAc83C,CAAe,EAAIz2F,EAAAA,SAAS,GAAG,EAC9C,CAAC02F,EAAmBC,CAAoB,EAAI32F,EAAAA,SAAS,EAAE,EACvD,CAAC60E,EAAcC,CAAe,EAAI90E,EAAAA,SAAS,EAAK,EAEtDE,EAAAA,UAAU,IAAM,CAgKVqB,IA/Jc,SAAY,CACxB,GAAA,CAEF,MAAMywF,EAAYrvF,GAChBC,GAAW9B,GAAI,MAAM,EACrB+B,GAAM,SAAU,KAAMtB,EAAK,GAAG,CAChC,EACMq1F,EAAe,MAAM7zF,GAAQivF,CAAS,EACtCsB,EAAQ,CAAC,EACf,IAAI9B,EAAW,EACXqF,EAAgB,EAET,UAAA1E,KAAWyE,EAAa,KAAM,CACjC,MAAAlD,EAAWvB,EAAQ,KAAK,EACxBrQ,EAAa,MAAMz/E,GAAOF,GAAIrB,GAAI,WAAY4yF,EAAS,SAAS,CAAC,EAEnE,GAAA5R,EAAW,SAAU,CACjB,MAAA7B,EAAU6B,EAAW,KAAK,EAE1B1uD,GADkB6sD,EAAQ,aAAe,IAAI,KAAS,IAAI,KAAKA,EAAQ,cAAc,EAC3DA,EAAQ,gBAAkBA,EAAQ,MAElEqT,EAAM,KAAK,CACT,GAAInB,EAAQ,GACZ,GAAGuB,EACH,QAAS,CACP,GAAIA,EAAS,UACb,GAAGzT,CAAA,CACL,CACD,EAEDuR,GAAYp+D,GAAQsgE,EAAS,SAC7BmD,GAAkB5W,EAAQ,aAAe,CAAA,CAC3C,CAWE,GARJkT,EAAaG,CAAK,EACFkD,EAAA,CACd,SAAAhF,EACA,cAAAqF,EACA,MAAOrF,EAAWqF,CAAA,CACnB,EAGGvD,EAAM,OAAS,EAAG,CACd,MAAAphD,EAAYohD,EAAM,CAAC,EAAE,QAAQ,UAAY,WAAa,KAC5CA,EAAM,CAAC,EAAE,QAAQ,UAAY,UAAY,IACzC,OAAOA,EAAM,CAAC,EAAE,QAAQ,OAAO,EAK/C,GAJApwE,EAAWgvB,CAAS,EACpBqnC,EAAiB+Z,EAAM,CAAC,EAAE,QAAQ,aAAa,EAG3C,OAAO,UAAY,OAAO,SAAS,iBAAmBphD,EAAU,WAC9D,GAAA,CACEA,IAAc,KACV,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,6BACR,OAAQ,CAAC,CAAE,QAAS,OAAS,CAAA,CAAA,CAC9B,EAAE,MAAM,SAAY,CACb,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,0BACR,OAAQ,CAAC,CACP,QAAS,QACT,UAAW,mBACX,eAAgB,CACd,KAAM,MACN,OAAQ,MACR,SAAU,EACZ,EACA,QAAS,CAAC,8BAAqC,EAC/C,kBAAmB,CAAC,yCAA0C,CAC/D,CAAA,CAAA,CACF,CAAA,CACF,EAEK,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,6BACR,OAAQ,CAAC,CAAE,QAAS,MAAQ,CAAA,CAAA,CAC7B,EAAE,MAAM,SAAY,CACb,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,0BACR,OAAQ,CAAC,CACP,QAAS,OACT,UAAW,kBACX,eAAgB,CACd,KAAM,QACN,OAAQ,QACR,SAAU,EACZ,EACA,QAAS,CAAC,0BAA0B,EACpC,kBAAmB,CAAC,0BAA0B,CAC/C,CAAA,CAAA,CACF,CAAA,CACF,OAEW,CAAA,CAGlB,CAII,MAAA9vC,EAAU,MAAMC,GAAOF,GAAIrB,GAAI,QAASS,EAAK,GAAG,CAAC,EACnD,GAAAa,EAAQ,SAAU,CACd,MAAAE,EAAWF,EAAQ,KAAK,EAGxB00F,EAAqBx0F,EAAS,iBAClCA,EAAS,gBAAgB,QACzBA,EAAS,gBAAgB,MACzBA,EAAS,gBAAgB,OACzBA,EAAS,gBAAgB,YACzBA,EAAS,gBAAgB,QAG3B,GAAIw0F,GAAsB,CAACx0F,EAAS,MAAQA,EAAS,iBAAiB,QAChE,GAAA,CAEI,MAAAy0F,EAAe,OAAOz0F,EAAS,gBAAgB,SAAY,SAC7DA,EAAS,gBAAgB,QAAQ,KACjCA,EAAS,gBAAgB,QAKvB4zE,EAFU,OAAO6gB,CAAY,EAEP,KAAK,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,EAAG,CAAC,EAEzE,GAAI7gB,EAAa,CACT,MAAA8gB,GAAU,uBAAuB9gB,CAAW,OAClD,MAAMhlE,GAAU/O,GAAIrB,GAAI,QAASS,EAAK,GAAG,EAAG,CAC1C,KAAMy1F,EAAA,CACP,EACD10F,EAAS,KAAO00F,EAAA,QAEXh0F,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,CAAA,CAKlCqmF,EAAA,CACd,GAAG/mF,EACH,mBAAAw0F,CAAA,CACD,EAGGx0F,EAAS,gBACX+C,EAAmB,EAAI,EACvBE,EAAiBjD,EAAS,aAAa,EACzC,CAGFZ,EAAW,EAAK,QACTsB,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,EACnDQ,EAAM,MAAM,8BAA8B,EAC1C9B,EAAW,EAAK,CAAA,CAEpB,GAGY,CACZ,EACC,CAACH,CAAI,CAAC,EAwFT,MAAM4zC,EAAoB,SAAY,CAChC,GAAA,CAgDF,GA/CI,CAAC7vC,GAAiB,CAACie,GAAiB,CAAC/X,IAErC,OAAO,SAAS,iBAAmBA,EAAQ,aACzCA,IAAY,KACR,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,6BACR,OAAQ,CAAC,CAAE,QAAS,OAAS,CAAA,CAAA,CAC9B,EAAE,MAAM,SAAY,CACb,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,0BACR,OAAQ,CAAC,CACP,QAAS,QACT,UAAW,mBACX,eAAgB,CACd,KAAM,MACN,OAAQ,MACR,SAAU,EACZ,EACA,QAAS,CAAC,8BAAqC,EAC/C,kBAAmB,CAAC,yCAA0C,CAC/D,CAAA,CAAA,CACF,CAAA,CACF,EAEK,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,6BACR,OAAQ,CAAC,CAAE,QAAS,MAAQ,CAAA,CAAA,CAC7B,EAAE,MAAM,SAAY,CACb,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,0BACR,OAAQ,CAAC,CACP,QAAS,OACT,UAAW,kBACX,eAAgB,CACd,KAAM,QACN,OAAQ,QACR,SAAU,EACZ,EACA,QAAS,CAAC,0BAA0B,EACpC,kBAAmB,CAAC,0BAA0B,CAC/C,CAAA,CAAA,CACF,CAAA,CACF,GAKD,CADiBH,GAAiBG,CAAO,IAAI+X,CAAa,GAC3C,OAEnB,MAAMvb,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EAErDkP,EAAU,MADM3iB,GAAiB/D,EAAUwD,EAAS+X,CAAa,EACnC,UAAUje,CAAa,EAC3DmxF,EAAgBhtE,GAAmBiF,EAAS,CAAC,CAAC,OAChC,CACd+nE,EAAgB,GAAG,CAAA,CAEvB,EAEAv2F,EAAAA,UAAU,IAAM,CACVkF,GAAmBme,GAAiB/X,GAAWlG,GAC/B6vC,EAAA,GAEnB,CAAC/vC,EAAiBme,EAAe/X,EAASlG,CAAa,CAAC,EAE3D,MAAM2xF,EAAmB,SAAY,CAE/B,GAAA,CAAC7N,GAAc,iBACf,CAACA,GAAc,iBAAiB,QAChC,CAACA,GAAc,iBAAiB,MAChC,CAACA,GAAc,iBAAiB,OAChC,CAACA,GAAc,iBAAiB,YAChC,CAACA,GAAc,iBAAiB,QAAS,CAC3C5lF,EAAM,MAAM,iEAAiE,EAC7Eif,EAAS,uBAAuB,EAChC,MAAA,CAGF,GAAI,CAACrd,EAAiB,CACpB5B,EAAM,MAAM,2DAA2D,EACvEif,EAAS,uBAAuB,EAChC,MAAA,CAGE,GAAAywE,EAAU,SAAW,EAAG,CAC1B1vF,EAAM,MAAM,oBAAoB,EAChC,MAAA,CAIF,GAAI,WAAWm7C,CAAY,EAAI43C,EAAa,MAAO,CAC3C/yF,EAAA,MAAM,gBAAgB+f,CAAa,UAAU,EACnD,MAAA,CAGFuxD,EAAgB,EAAI,EACd,MAAAmd,EAAezuF,EAAM,QAAQ,0BAA0B,EAEzD,GAAA,CAEF,GAAI,OAAO,SAAS,iBAAmBgI,EAAQ,WAAY,CACzDmrF,EAAqB,sBAAsB,EACvC,GAAA,CACI,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,6BACR,OAAQ,CAAC,CAAE,QAAS,KAAK,OAAOnrF,CAAO,EAAE,SAAS,EAAE,CAAC,EAAI,CAAA,CAAA,CAC1D,OACa,CACdhI,EAAM,QAAQyuF,CAAY,EAC1BzuF,EAAM,MAAM,oBAAoB4H,GAAcI,CAAO,CAAC,sBAAsB,EAC5EspE,EAAgB,EAAK,EACrB,MAAA,CACF,CAII,MAAAv1D,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAGlCm9D,EAAgBhxE,GAAyB4T,EAAQ/T,CAAO,EACxDijB,EAAgB1iB,GAAiBwT,EAAQ/T,EAAS+X,CAAa,EAGrE,GAAI,CAACo5D,EAAc,SAAW,CAACluD,EAAc,QACrC,MAAA,IAAI,MAAM,4BAA4B,EAI9C,MAAMyoE,EAAc5qF,GAElBiqF,EAAa,MAAM,QAAQ,CAAC,EAC5B,CACF,EAOA,GAJAI,EAAqB,4BAA4B,EACxB,MAAMloE,EAAc,UAAUnpB,EAAeq3E,EAAc,OAAO,EAGpEua,EAAa,CAClCP,EAAqB,6BAA6B,EAGlD,MAAMQ,EAAiB7qF,GAAkB,OAAQ,CAAC,EAC5C8qF,GAAiBF,EAAcC,EAGrC,QAAQ,IAAI,gBAAiB1tE,GAAmBytE,EAAa,CAAC,CAAC,EAC/D,QAAQ,IAAI,+BAAgCztE,GAAmB2tE,GAAgB,CAAC,CAAC,EAGjF,MADkB,MAAM3oE,EAAc,QAAQkuD,EAAc,QAASya,EAAc,GACnE,KAAK,CAAA,CAIvB,MAAM5pF,EAAe,CAAC,EAGhB6pF,EAAiBnE,EAAU,IAAI,MAAMnuF,GAAQ,CAC3C,MAAAwE,GAAWxE,EAAK,QAAQ,SAC1B,GAAA,CAACyI,EAAajE,EAAQ,EAAG,CAE3B,MAAM6D,GAAY,MAAM/K,GAAOF,GAAIrB,GAAI,UAAWyI,EAAQ,CAAC,EACvD,GAAA,CAAC6D,GAAU,SACb,MAAM,IAAI,MAAM,UAAU7D,EAAQ,YAAY,EAE1C,MAAA9B,GAAa2F,GAAU,KAAK,EAC9B,GAAA,CAAC3F,GAAW,cACd,MAAM,IAAI,MAAM,UAAU8B,EAAQ,0BAA0B,EAE9D,MAAMsrF,EAAe9tC,GAAkBt/C,GAAW,aAAa,EAC/D+F,EAAajE,EAAQ,EAAI,CACvB,OAAQsrF,EACR,OAAQ,EACR,MAAO,CAAA,CACT,CAAA,CAEK,OAAAtrF,EAAA,CACR,EAGK,MAAA,QAAQ,IAAI8tF,CAAc,EAGtBnE,EAAA,QAAgBnuF,GAAA,CAClB,MAAAwE,GAAWxE,EAAK,QAAQ,SAIxBuyF,GAFkBvyF,EAAK,QAAQ,aAAe,IAAI,KAAS,IAAI,KAAKA,EAAK,QAAQ,cAAc,EACrEA,EAAK,QAAQ,gBAAkBA,EAAK,QAAQ,OACjDA,EAAK,UAAaA,EAAK,QAAQ,aAAe,GAC5DyI,EAAAjE,EAAQ,EAAE,QAAU+tF,EACjC9pF,EAAajE,EAAQ,EAAE,MAAM,KAAKxE,CAAI,CAAA,CACvC,EAGD,IAAIwyF,EAAa,EACjB,SAAW,CAAChuF,EAAUjC,EAAS,IAAK,OAAO,QAAQkG,CAAY,EAAG,CAChE+pF,IACqBZ,EAAA,oBAAoBY,CAAU,IAAI,OAAO,KAAK/pF,CAAY,EAAE,MAAM,KAAK,EAItF,MAAApB,GAASE,GAAkBhF,GAAU,OAAO,QAAQ,CAAC,EAAG,CAAC,EAG/D,QAAQ,IAAI,uBAAwBmiB,GAAmBrd,GAAQ,CAAC,CAAC,EAO3D,MAAA0T,EAAU,MALM,MAAM68D,EAAc,YACxCr1E,GAAU,OACVmnB,EAAc,QACdriB,EACF,GACoC,KAAK,EACjC,QAAA,IAAI,uBAAwB0T,CAAO,EAG3C,MAAMvF,EAAQuF,EAAQ,KAAK,KAAYE,IAAA,CACjC,GAAA,CACF,MAAMmwD,GAAYwM,EAAc,UAAU,SAAS38D,EAAG,EAC9C,eAAA,IAAI,cAAemwD,EAAS,EAC7BA,GAAU,OAAS,oBAChB,CACH,MAAA,EAAA,CACT,CACD,EAED,GAAI,CAAC51D,EACH,cAAQ,MAAM,sCAAsC,EAC5C,QAAA,IAAI,YAAauF,EAAQ,IAAI,EAC/B,IAAI,MAAM,yCAAyC,EAI3D,MAAM03E,EAAc7a,EAAc,UAAU,SAASpiE,CAAK,EAClD,QAAA,IAAI,6BAA8Bi9E,CAAW,EAGrD,MAAMC,EAAiBD,EAAY,KAAK,QAAQ,SAAS,EACjD,QAAA,IAAI,uBAAwBC,CAAc,EAElDd,EAAqB,yBAAyB,EAG9C,MAAMe,EAAyBpwF,GAAU,MAAM,IAAI,MAAOvC,IAAS,CACjE,MAAMk9E,GAAa9/E,GAAIrB,GAAI,WAAYiE,GAAK,QAAQ,EAAE,EAChD+8E,EAAa,MAAMz/E,GAAO4/E,EAAU,EACtC,GAAAH,EAAW,SAAU,CACjB,MAAAjqE,GAAkBiqE,EAAW,KAAA,EAAO,SACpC+P,GAAc,KAAK,IAAI,EAAGh6E,GAAkB9S,GAAK,QAAQ,EAC/D,MAAMmM,GAAU+wE,GAAY,CAAE,SAAU4P,GAAa,CAAA,CACvD,CACD,EACK,MAAA,QAAQ,IAAI6F,CAAsB,EAGxC,MAAM/O,EAAW,MAAM5yE,GAAOnT,GAAW9B,GAAI,QAAQ,EAAG,CACtD,eAAA22F,EACA,QAASl2F,EAAK,IACd,SAAAgI,EACA,WAAYjC,GAAU,MAAM,CAAC,EAAE,QAAQ,WACvC,MAAOA,GAAU,MAAM,IAAavC,KAAA,CAClC,UAAWA,GAAK,QAAQ,GACxB,KAAMA,GAAK,QAAQ,KACnB,MAAOA,GAAK,QAAQ,OAAO,CAAC,EAC5B,SAAUA,GAAK,SACf,MAAOA,GAAK,QAAQ,MACpB,YAAaA,GAAK,QAAQ,aAAe,EACzC,KAAMA,GAAK,MAAQ,KACnB,MAAOA,GAAK,OAAS,IAAA,EACrB,EACF,OAAQ,aACR,cAAe,YACf,cAAe,CACb,KAAM,SACN,MAAOwe,EACP,QAAS/X,EACT,YAAalG,CACf,EACA,UAAW,CACT,KAAM8jF,EAAa,KACnB,MAAOA,EAAa,MACpB,MAAOA,EAAa,aAAe,IACrC,EACA,KAAM,OAAOA,EAAa,gBAAgB,SAAY,UAAYA,EAAa,gBAAgB,QAAQ,KACnG,uBAAuBA,EAAa,gBAAgB,QAAQ,KAAK,YAAa,CAAA,OAC9E,KACJ,gBAAiBA,EAAa,gBAC9B,SAAU9hF,GAAU,OACpB,MAAOA,GAAU,OACjB,UAAWkP,GAAgB,EAC3B,kBAAmB,GACnB,oBAAqB,KACrB,eAAgB,GAChB,iBAAkB,KAClB,iBAAkByqB,GAAU,WAAW,KAAK,IAAS,EAAA,GAAK,GAAK,GAAK,GAAK,EACzE,iBAAkBA,GAAU,WAAW,KAAK,MAAS,GAAK,GAAK,GAAK,GAAK,GAAK,CAAA,CAC/E,CAAA,CAIH,MAAM8/C,EAAiBmS,EAAU,OAC/BtxD,GAAUz/B,GAAIrB,GAAI,OAAQiE,EAAK,EAAE,CAAC,CACpC,EACM,MAAA,QAAQ,IAAIg8E,CAAc,EAEhCv9E,EAAM,QAAQyuF,CAAY,EAC1BzuF,EAAM,QAAQ,4BAA4B,EAC1Cif,EAAS,qBAAqB,QACvBzf,EAAO,CACdQ,EAAM,QAAQyuF,CAAY,EACpBzuF,EAAA,MAAMR,EAAM,SAAW,0CAA0C,CAAA,QACvE,CACA8xE,EAAgB,EAAK,EACrB6hB,EAAqB,EAAE,CAAA,CAE3B,EAGMgB,EAA0BvO,GAAc,mBAGxCwO,EACJ,CAACxyF,GACD8tF,EAAU,SAAW,GACrB,CAACyE,GACD9iB,GACA,WAAWl2B,CAAY,EAAI43C,EAAa,MAGpCsB,EAAwB,IACvBzO,GAAc,gBAgChBxkF,EAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAAA,IAAA,IAAA,CAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAK,SAAaspF,EAAA,gBAAgB,OAAO,SACvG,IAAE,CAAA,UAAW,GAAGtpF,EAAa,gBAAkB,eAAe,GAAK,SAAA,CAAAspF,EAAa,gBAAgB,KAAK,KAAGA,EAAa,gBAAgB,UAAA,EAAW,EAChJxkF,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,MAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAC5D,SAAO,OAAAspF,EAAa,gBAAgB,SAAY,SAC7CA,EAAa,gBAAgB,QAAQ,KACrCA,EAAa,gBAAgB,QACnC,EACC,OAAOA,EAAa,gBAAgB,SAAY,UAAYA,EAAa,gBAAgB,QAAQ,MAChGhpF,EAAA,IAAC,MAAA,CACC,IAAK,2BAA2BgpF,EAAa,gBAAgB,QAAQ,KAAK,YAAa,CAAA,OACvF,IAAKA,EAAa,gBAAgB,QAAQ,KAC1C,UAAU,YAAA,CAAA,CACZ,EAEJ,EACAhpF,EAAA,IAAC,SAAA,CACC,QAAS,IAAMqiB,EAAS,uBAAuB,EAC/C,UAAU,6DACX,SAAA,cAAA,CAAA,CAED,EACF,EArDG7d,EAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAW,GAAGN,EAAa,oCAAsC,4BAA4B,yBAChG,SAAC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,mBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,gBACb,SAACA,EAAAA,IAAA,OAAI,UAAU,yBAAyB,MAAM,6BAA6B,QAAQ,YAAY,KAAK,eAClG,SAAAA,EAAA,IAAC,QAAK,SAAS,UAAU,EAAE,mIAAmI,SAAS,SAAU,CAAA,CAAA,CACnL,EACF,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,OACb,SAAA,OAAC,KAAA,CAAG,UAAU,qCAAqC,SAAyB,4BAAA,EAC5ExE,EAAAA,IAAC,KAAE,UAAW,gBAAgBN,EAAa,gBAAkB,eAAe,GAAI,SAEhF,yEAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EACA8E,EAAA,KAAC,SAAA,CACC,QAAS,IAAM6d,EAAS,uBAAuB,EAC/C,UAAU,kIAEV,SAAA,CAAAriB,MAAC,OAAI,UAAU,UAAU,MAAM,6BAA6B,QAAQ,YAAY,KAAK,eACnF,SAACA,MAAA,QAAK,SAAS,UAAU,EAAE,6GAA6G,SAAS,SAAU,CAAA,EAC7J,EAAM,sBAAA,CAAA,CAAA,CAER,EACF,EAgCN,OAAIqB,QAEC,MAAI,CAAA,UAAW,gBAAgB3B,EAAa,cAAgB,cAAc,oCACzE,SAAAM,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CACP,MAAO,CAAC,EAAG,IAAK,CAAC,EACjB,QAAS,CAAC,EAAG,GAAK,CAAC,CACrB,EACA,WAAY,CACV,SAAU,EACV,OAAQ,IACR,KAAM,WACR,EACA,UAAU,uEAAA,CAAA,EAEd,EAKFtO,EAAA,IAACsO,EAAO,IAAP,CACC,SAAU2lB,GACV,QAAQ,SACR,QAAQ,UACR,UAAW,gBAAgBv0B,EAAa,cAAgB,cAAc,cAEtE,SAAC8E,EAAA,KAAA,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,GAAP,CACC,SAAU+oB,GACV,UAAW,sBAAsB33B,EAAa,gBAAkB,eAAe,QAChF,SAAA,UAAA,CAED,EAEC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,wCAEb,SAAA,CAAAA,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,0BAEV,SAAA,CAAC7yB,EAAAA,KAAA8J,EAAO,IAAP,CAAW,SAAU+oB,GAAc,UAAW,GAAG33B,EAAa,cAAgB,UAAU,kBACvF,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,aAAaN,EAAa,gBAAkB,eAAe,QAAS,SAAa,eAAA,CAAA,EAC/FozF,EAAU,IAAKnuF,GACbH,EAAA,KAAA,MAAkB,CAAA,UAAW,wCAAwC9E,EAAa,kBAAoB,UAAU,mBAC/G,SAAA,CAAAM,EAAA,IAAC,MAAA,CACC,IAAK2E,EAAK,QAAQ,OAAO,CAAC,EAC1B,IAAKA,EAAK,QAAQ,KAClB,UAAU,mCAAA,CACZ,EACCH,EAAAA,KAAA,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACxE,EAAAA,IAAA,KAAA,CAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GAAK,SAAKiF,EAAA,QAAQ,KAAK,SAClG,MAAI,CAAA,UAAW,WAAWjF,EAAa,gBAAkB,eAAe,QACvE,SAAA,CAAA8E,OAAC,IAAE,CAAA,SAAA,CAAA,aAAWG,EAAK,QAAA,EAAS,EAC3BA,EAAK,MAASH,EAAAA,KAAA,IAAE,CAAA,SAAA,CAAA,SAAOG,EAAK,IAAA,EAAK,EACjCA,EAAK,OACHH,OAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAA,QAAK,SAAM,SAAA,EACXwE,EAAAA,KAAA,OAAK,CAAA,UAAU,0BACd,SAAA,CAAAxE,EAAA,IAAC,OAAA,CACC,UAAU,8CACV,MAAO,CACL,gBAAiB2E,EAAK,MAAM,YAAY,EACxC,YAAaA,EAAK,MAAM,YAAY,IAAM,UAAY,UAAY,aAAA,CACpE,CACF,EACCA,EAAK,KAAA,CACR,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EACCH,EAAAA,KAAA,MAAI,CAAA,UAAU,aACZ,SAAA,CAAAG,EAAK,QAAQ,aAAmB,IAAA,KAAS,IAAI,KAAKA,EAAK,QAAQ,cAAc,QAC5EoO,WAAA,CACE,gBAAC,IAAE,CAAA,UAAW,GAAGrT,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,KAC9DiF,EAAK,QAAQ,gBAAkBA,EAAK,UAAU,QAAQ,CAAC,SACzD,OAAK,CAAA,UAAW,WAAWjF,EAAa,gBAAkB,eAAe,qBAAsB,SAAA,CAAA,KAC3FiF,EAAK,QAAQ,MAAQA,EAAK,UAAU,QAAQ,CAAC,CAAA,CAClD,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAECH,EAAA,KAAA,IAAA,CAAE,UAAW,GAAG9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,KAAGiF,EAAK,QAAQ,MAAQA,EAAK,UAAU,QAAQ,CAAC,CAAA,EAAE,EAEtHA,EAAK,QAAQ,YAAc,GACzBH,EAAAA,KAAA,IAAE,CAAA,UAAW,WAAW9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,MAAIiF,EAAK,QAAQ,YAAY,QAAQ,CAAC,EAAE,WAAA,CAAS,CAAA,CAAA,CAEhI,CAAA,CAAA,CACF,CAAA,CAAA,GA9CQA,EAAK,EA+Cf,CACD,SACA,MAAI,CAAA,UAAW,GAAGjF,EAAa,kBAAoB,UAAU,uBAC5D,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAQ,UAAA,CAAA,SAC7E,OAAK,CAAA,UAAW,GAAGA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAEy2F,EAAa,SAAS,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,EAC3G,EACC3xF,EAAAA,KAAA,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAQ,UAAA,CAAA,SAC7E,OAAK,CAAA,UAAW,GAAGA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAEy2F,EAAa,cAAc,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,EAChH,SACC,MAAI,CAAA,UAAW,kCAAkCz2F,EAAa,gCAAkC,wBAAwB,QACvH,SAAA,CAACM,EAAAA,IAAA,QAAK,SAAK,QAAA,SACV,OAAK,CAAA,SAAA,CAAA,IAAEm2F,EAAa,MAAM,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,CACxC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAGC,MAAI,CAAA,UAAW,GAAGz2F,EAAa,cAAgB,UAAU,4BACxD,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAE/F,kBAAA,CAAA,EACC+3F,EAAsB,CAAA,CACzB,CAAA,CAAA,CAAA,CACF,EAGAjzF,EAAA,KAAC8J,EAAO,IAAP,CACC,SAAU+oB,GACV,UAAU,0BAGV,SAAA,CAAA7yB,OAAC,OAAI,UAAW,GAAG9E,EAAa,cAAgB,UAAU,6CACxD,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAE/F,gBAAA,CAAA,EACEsF,EAYAR,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,OAAI,UAAW,yCAAyC9E,EAAa,cAAgB,YAAY,cAChG,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,MAACogB,IAAS,UAAW,WAAW1gB,EAAa,gBAAkB,eAAe,GAAI,SACjF,OAAK,CAAA,UAAW,WAAWA,EAAa,gBAAkB,eAAe,GACvE,SAAA,CAAcwF,EAAA,MAAM,EAAG,CAAC,EAAE,MAAIA,EAAc,MAAM,EAAE,CAAA,CACvD,CAAA,CAAA,EACF,EACAlF,EAAA,IAAC,SAAA,CACC,QAAS,IAAMqiB,EAAS,uBAAuB,EAC/C,UAAU,8CACX,SAAA,oBAAA,CAAA,CAED,EACF,EAGCriB,EAAA,IAAA,MAAI,CAAA,UAAW,OAAON,EAAa,cAAgB,YAAY,cAC9D,SAAC8E,OAAA,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,MAAC03F,IAAe,UAAW,WAAWh4F,EAAa,gBAAkB,eAAe,GAAI,EACxFM,EAAAA,IAAC,QAAK,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAI,SAAiB,mBAAA,CAAA,CAAA,EACjG,EACCM,EAAAA,IAAA,OAAK,CAAA,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,GACnF,SAAcsL,GAAAI,CAAO,CACxB,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAGC5G,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,EAAAA,IAAC,KAAE,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,GAAI,SAEvF,eAAA,CAAA,EACCM,EAAA,IAAA,MAAI,CAAA,UAAW,4CAA4CN,EAAa,iBAAmB,YAAY,GACtG,SAAC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK8yF,EAAU,CAAC,GAAG,SAAS,UAC5B,IAAK3vE,EACL,UAAU,SAAA,CACZ,EACAnjB,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAK,SAAcyjB,CAAA,CAAA,CAAA,EACvF,SACC,OAAK,CAAA,UAAW,WAAWzjB,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,YAClE,WAAW6+C,CAAY,EAAE,QAAQ,CAAC,EAAE,IAAEp7B,CAAA,CAClD,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGCmzE,GACEt2F,EAAA,IAAA,MAAI,CAAA,UAAW,YAAYN,EAAa,iBAAmB,YAAY,cACtE,SAAC8E,EAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,kFAAkF,EACjGA,EAAAA,IAAC,QAAK,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GAAK,SAAkB42F,CAAA,CAAA,CAAA,CAAA,CACnG,CACF,CAAA,CAAA,CAEJ,CAAA,EAvEC9xF,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAA0D,4DAAA,CAAA,EAC7H8E,EAAA,KAAC,SAAA,CACC,QAAS,IAAM6d,EAAS,uBAAuB,EAC/C,UAAU,kIAEV,SAAA,CAACriB,EAAAA,IAAAogB,GAAA,CAAS,UAAU,UAAU,EAC7BpgB,EAAAA,IAAA,QAAK,SAAc,gBAAA,CAAA,CAAA,CAAA,CAAA,CACtB,CACF,CAAA,CA8DA,EAEJ,SAGC,MAAI,CAAA,UAAW,GAAGN,EAAa,cAAgB,UAAU,6CACxD,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,QAAS,SAE/F,eAAA,CAAA,EACC8E,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAQ,UAAA,CAAA,EAC7E8E,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK8yF,EAAU,CAAC,GAAG,SAAS,UAC5B,IAAK3vE,EACL,UAAU,SAAA,CACZ,SACC,OAAK,CAAA,UAAW,GAAGzjB,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAEy2F,EAAa,SAAS,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,CAC3G,CAAA,CAAA,EACF,EACC3xF,EAAAA,KAAA,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAQ,UAAA,CAAA,EAC7E8E,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK8yF,EAAU,CAAC,GAAG,SAAS,UAC5B,IAAK3vE,EACL,UAAU,SAAA,CACZ,SACC,OAAK,CAAA,UAAW,GAAGzjB,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAEy2F,EAAa,cAAc,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,CAChH,CAAA,CAAA,EACF,QACC,MAAI,CAAA,UAAW,QAAQz2F,EAAa,cAAgB,aAAa,QAAS,EAC1E8E,EAAAA,KAAA,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAK,OAAA,CAAA,EAC1E8E,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK8yF,EAAU,CAAC,GAAG,SAAS,UAC5B,IAAK3vE,EACL,UAAU,SAAA,CACZ,SACC,OAAK,CAAA,UAAW,GAAGzjB,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAAEy2F,EAAa,MAAM,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,CACxG,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGC,CAAC1hB,GAEGjwE,EAAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAA,CAAC/N,GACAhF,EAAAA,IAAC,MAAI,CAAA,UAAW,YAAYN,EAAa,oCAAsC,4BAA4B,qBACzG,SAAA8E,EAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAxE,MAAC,OAAI,UAAU,gCAAgC,MAAM,6BAA6B,QAAQ,YAAY,KAAK,eACzG,SAACA,MAAA,QAAK,SAAS,UAAU,EAAE,mIAAmI,SAAS,SAAU,CAAA,EACnL,SACC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,qCAAqC,SAAoB,uBAAA,EACtEA,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,QAAS,SAAiE,mEAAA,CAAA,CAAA,CACnJ,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAEDsF,GAAmB,CAACuyF,SAClB,OAAI,UAAW,YAAY73F,EAAa,oCAAsC,4BAA4B,qBACzG,SAAC8E,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAxE,MAAC,OAAI,UAAU,gCAAgC,MAAM,6BAA6B,QAAQ,YAAY,KAAK,eACzG,SAACA,MAAA,QAAK,SAAS,UAAU,EAAE,mIAAmI,SAAS,SAAU,CAAA,EACnL,SACC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,qCAAqC,SAAyB,4BAAA,EAC3EA,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,QAAS,SAAuE,yEAAA,CAAA,CAAA,CACzJ,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAEDsF,GAAmBuyF,GAA2B,WAAWh5C,CAAY,EAAI43C,EAAa,OACpFn2F,MAAA,MAAA,CAAI,UAAW,YAAYN,EAAa,oCAAsC,4BAA4B,qBACzG,gBAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAM,MAAC,OAAI,UAAU,gCAAgC,MAAM,6BAA6B,QAAQ,YAAY,KAAK,eACzG,SAACA,MAAA,QAAK,SAAS,UAAU,EAAE,mIAAmI,SAAS,SAAU,CAAA,EACnL,SACC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,qCAAqC,SAAoB,uBAAA,SACrE,IAAE,CAAA,UAAW,WAAWN,EAAa,gBAAkB,eAAe,QAAS,SAAA,CAAA,QAAMyjB,EAAc,gDAAA,CAA8C,CAAA,CAAA,CACpJ,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAEDne,GAAmBuyF,GAA2BzE,EAAU,SAAW,GACjE9yF,EAAAA,IAAA,MAAI,CAAA,UAAW,YAAYN,EAAa,oCAAsC,4BAA4B,qBACzG,SAAC8E,OAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAxE,MAAC,OAAI,UAAU,gCAAgC,MAAM,6BAA6B,QAAQ,YAAY,KAAK,eACzG,SAACA,MAAA,QAAK,SAAS,UAAU,EAAE,mIAAmI,SAAS,SAAU,CAAA,EACnL,SACC,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,qCAAqC,SAAU,aAAA,EAC5DA,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,QAAS,SAAgD,kDAAA,CAAA,CAAA,CAClI,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAEJ,EAGFM,EAAA,IAAC,SAAA,CACC,QAAS62F,EACT,SAAUW,EACV,UAAW,iEACTA,EACI,GAAG93F,EAAa,cAAgB,aAAa,sBAC7C,iFACN,GAEC,WAAe,sBACdsF,EACAuyF,EACD,WAAWh5C,CAAY,EAAI43C,EAAa,MAAQ,gBAAgBhzE,CAAa,WAC7E2vE,EAAU,SAAW,EAAI,gBACzB,cAH2B,mCADR,4BAInB,CAAA,CACH,CACF,CAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAEJ,ECv/BA,SAAwB6E,IAAyB,CAC/C,KAAM,CAACC,EAAmBC,CAAoB,EAAIj4F,EAAAA,SAAS,CAAA,CAAE,EACvD,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACgD,EAAOy6B,CAAQ,EAAIz9B,EAAAA,SAAS,IAAI,EAEjCk4F,EAAyB,SAAY,CACrC,GAAA,CACFx2F,EAAW,EAAI,EACf+7B,EAAS,IAAI,EAEb,MAAMl1B,EAAmB5F,GACvBC,GAAW9B,GAAI,aAAa,EAC5BmG,GAAQ,YAAa,MAAM,EAC3BE,GAAM,EAAE,CACV,EAGMuC,GADW,MAAM3G,GAAQwF,CAAgB,GAClB,KAAK,IAAWpG,GAAA,CACrC,MAAAuG,EAAOvG,EAAI,KAAK,EACf,MAAA,CACL,GAAIA,EAAI,GACR,GAAGuG,EACH,UAAWA,EAAK,WAAW,SAAc,GAAA,KACzC,YAAaA,EAAK,aAAa,YAAc,IAC/C,CAAA,CACD,EAAE,OAAO,OAAO,EAEjBuvF,EAAqBvuF,CAAW,QACzBmvC,EAAK,CACJ,QAAA,MAAM,qCAAsCA,CAAG,EACvDpb,EAAS,oCAAoC,CAAA,QAC7C,CACA/7B,EAAW,EAAK,CAAA,CAEpB,EAMA,OAJAxB,EAAAA,UAAU,IAAM,CACSg4F,EAAA,CACzB,EAAG,EAAE,EAEDz2F,EAEAmD,EAAA,KAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,2DAA2D,SAEzE,qBAAA,EACAA,EAAAA,IAAC,OAAI,UAAU,sBACb,eAAC,MAAI,CAAA,UAAU,kFAAmF,CAAA,CACpG,CAAA,CAAA,EACF,EAIA4C,EAEA4B,EAAA,KAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,2DAA2D,SAEzE,qBAAA,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,6CAA8C,SAAM4C,CAAA,CAAA,CAAA,EACrE,EAIA,CAACg1F,GAAqBA,EAAkB,SAAW,EAEnDpzF,EAAA,KAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,2DAA2D,SAEzE,qBAAA,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,+CAA+C,SAAqB,uBAAA,CAAA,CAAA,EACrF,EAKFwE,EAAA,KAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,2DAA2D,SAEzE,qBAAA,QACC,MAAI,CAAA,UAAU,kBACb,SAACwE,EAAA,KAAA,QAAA,CAAM,UAAU,2DACf,SAAA,CAAAxE,MAAC,QAAM,CAAA,UAAU,8BACf,SAAAwE,EAAA,KAAC,KACC,CAAA,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,oGAAoG,SAAI,OAAA,EACrHA,EAAA,IAAA,KAAA,CAAG,UAAU,oGAAoG,SAAM,SAAA,EACvHA,EAAA,IAAA,KAAA,CAAG,UAAU,oGAAoG,SAAK,QAAA,EACtHA,EAAA,IAAA,KAAA,CAAG,UAAU,oGAAoG,SAAO,UAAA,EACxHA,EAAA,IAAA,KAAA,CAAG,UAAU,oGAAoG,SAAM,SAAA,EACvHA,EAAA,IAAA,KAAA,CAAG,UAAU,oGAAoG,SAAW,aAAA,CAAA,CAAA,CAAA,CAC/H,CACF,CAAA,EACAA,EAAA,IAAC,QAAM,CAAA,UAAU,0EACd,SAAA43F,EAAkB,IAAK1uF,GACtB1E,EAAA,KAAC,KAAuB,CAAA,UAAU,0CAChC,SAAA,CAAAxE,EAAA,IAAC,KAAG,CAAA,UAAU,uEACX,SAAAkJ,EAAW,UAAY,IAAI,KAAKA,EAAW,SAAS,EAAE,eAAe,EAAI,KAC5E,CAAA,EACA1E,EAAAA,KAAC,KAAG,CAAA,UAAU,uEACX,SAAA,CAAW0E,EAAA,QAAQ,QAAQ,CAAC,GAAK,OAAO,IAAEA,EAAW,OAAS,KAAA,EACjE,QACC,KAAG,CAAA,UAAU,uEACZ,SAAC1E,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK,UAAUkJ,EAAW,OAAO,eAAiB,MAAM,OACxD,IAAKA,EAAW,OAAS,QACzB,UAAU,cAAA,CACZ,EACCA,EAAW,OAAS,KAAA,CAAA,CACvB,CACF,CAAA,QACC,KAAG,CAAA,UAAU,uEACZ,SAAC1E,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKkJ,EAAW,UAAY,WAAa,qBAAuB,eAChE,IAAKA,EAAW,SAAW,UAC3B,UAAU,cAAA,CACZ,EACCA,EAAW,UAAY,WAAa,mBAAqB,SAAA,CAAA,CAC5D,CACF,CAAA,EACAlJ,EAAAA,IAAC,MAAG,UAAU,sCACZ,eAAC,OAAK,CAAA,UAAW,8CACfkJ,EAAW,SAAW,YAClB,oEACAA,EAAW,SAAW,UACtB,wEACA,2DACN,GACG,SAAAA,EAAW,QAAU,KAAA,CACxB,CACF,CAAA,EACClJ,EAAA,IAAA,KAAA,CAAG,UAAU,uEACX,WAAW,gBACVA,EAAA,IAAC,IAAA,CACC,KAAM,GAAGkJ,EAAW,UAAY,WAC5B,8CACA,6BACJ,GAAGA,EAAW,eAAe,GAC7B,OAAO,SACP,IAAI,sBACJ,UAAU,oFACX,SAAA,MAAA,GAGC,KACN,CAAA,CAAA,GApDOA,EAAW,EAqDpB,CACD,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ,CCjJA,MAAMpE,GAAe,6CAGfizF,GAA4B,IAChCvzF,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,0DAEV,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,sDAAsD,SACpE,MACC,CAAA,SAAA,CAACA,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,EACnEA,EAAAA,IAAA,MAAI,CAAA,UAAU,+CAAgD,CAAA,CAAA,CACjE,CAAA,CAAA,EACF,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,iBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,gDAAgD,EAC9DA,EAAAA,IAAA,MAAI,CAAA,UAAU,+CAAgD,CAAA,CAAA,CACjE,CAAA,CAAA,EACF,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,iDAAiD,EAC/DA,EAAAA,IAAA,MAAI,CAAA,UAAU,gDAAiD,CAAA,CAAA,EAClE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,kDAAkD,EAChEA,EAAAA,IAAA,MAAI,CAAA,UAAU,gDAAiD,CAAA,CAAA,EAClE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,iDAAiD,EAC/DA,EAAAA,IAAA,MAAI,CAAA,UAAU,gDAAiD,CAAA,CAAA,CAClE,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAGIg4F,GAAsB,IAC1BxzF,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,0DAEV,SAAA,CAACtO,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,QACnE,MAAI,CAAA,UAAU,wCACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGC,WACpB,MAAA,CAAY,UAAU,6CACrB,SAAA,CAAChK,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,yDAAyD,EACvEA,EAAAA,IAAA,MAAI,CAAA,UAAU,+CAAgD,CAAA,CAAA,EACjE,QACC,MAAI,CAAA,UAAU,YACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGkiB,WACpB,MAAA,CAAY,UAAU,YACrB,SAAA,CAACjsB,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,yDAAyD,EACvEA,EAAAA,IAAA,MAAI,CAAA,UAAU,+CAAgD,CAAA,CAAA,EACjE,EACCA,EAAAA,IAAA,MAAI,CAAA,UAAU,+CAAgD,CAAA,CAAA,EACjE,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,8BACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,qDAAqD,EACnEA,EAAAA,IAAA,MAAI,CAAA,UAAU,+CAAgD,CAAA,CAAA,CACjE,CAAA,CAAA,CAXQ,EAAAywB,CAYV,CACD,CACH,CAAA,CAAA,CArBQ,EAAAjiB,CAsBV,CACD,CACH,CAAA,CAAA,CAAA,CACF,EAIIypF,GAAqB7sF,GACrBA,IAAY,KACP,CACL,KAAM,6CACN,KAAM,4CACR,EACSA,IAAY,IACd,CACL,KAAM,6CACN,KAAM,4CACR,EAEK,KAGT,SAAwB8sF,IAAmB,CACzC,KAAM,CAAC5uF,EAAayvE,CAAc,EAAIn5E,EAAAA,SAAS,CAAA,CAAE,EAC3C,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACu4F,EAAcC,CAAe,EAAIx4F,EAAAA,SAAS,IAAI,EAC/C,CAACoF,EAAiBC,CAAkB,EAAIrF,EAAAA,SAAS,EAAK,EACtD,CAACsF,EAAeC,CAAgB,EAAIvF,EAAAA,SAAS,EAAE,EAC/C,CAAE,MAAA8K,CAAM,EAAIC,GAAW,EACvB,CAAE,cAAA0tF,CAAc,EAAIC,GAAiB,EAC7B,aAAa,QAAQ,aAAa,EAChD,KAAM,CAACC,EAAoBC,CAAqB,EAAI54F,WAAS,CAC3D,SAAU,CACR,KAAM,CAAE,KAAM,IAAK,OAAQ,GAAI,QAAS,GAAO,MAAO,IAAK,EAC3D,KAAM,CAAE,KAAM,IAAK,OAAQ,GAAI,QAAS,GAAO,MAAO,IAAK,CAC7D,EACA,QAAS,CACP,KAAM,CAAE,KAAM,IAAK,OAAQ,GAAI,QAAS,GAAO,MAAO,IAAK,EAC3D,KAAM,CAAE,KAAM,IAAK,OAAQ,GAAI,QAAS,GAAO,MAAO,IAAK,CAAA,CAC7D,CACD,EAEDE,EAAAA,UAAU,IAAM,EAEgB,SAAY,CACpC,GAAA,CACI,MAAA8H,EAAW,MAAMC,GAAuB,EAC9C,GAAID,EAAU,CACZ,MAAME,EAAW,MAAMF,EAAS,QAAQ,CAAE,OAAQ,eAAgB,EAC9DE,EAAS,OAAS,GAAKA,EAAS,CAAC,EAAE,YAAY,IAAMhD,GAAa,gBACnDK,EAAA2C,EAAS,CAAC,CAAC,EAC5B7C,EAAmB,EAAI,EACzB,QAEKrC,EAAO,CACN,QAAA,MAAM,oCAAqCA,CAAK,CAAA,CAE5D,GAEsB,CACxB,EAAG,EAAE,EAEL9C,EAAAA,UAAU,IAAM,CAEV,OAAO,UACT,OAAO,SAAS,GAAG,kBAAoBgI,GAAa,CAC9CA,EAAS,SAAW,GAAKA,EAAS,CAAC,EAAE,YAAY,IAAMhD,GAAa,eACtEG,EAAmB,EAAK,EACxBE,EAAiB,EAAE,IAEFA,EAAA2C,EAAS,CAAC,CAAC,EAC5B7C,EAAmB,EAAI,EACzB,CACD,CAEL,EAAG,EAAE,EAELnF,EAAAA,UAAU,IAAM,CACVkF,GAAmBE,EAAc,YAAkB,IAAAJ,GAAa,cACjD2zF,EAAA,EAEjBn3F,EAAW,EAAK,CAClB,EACC,CAAC0D,EAAiBE,CAAa,CAAC,EAEnC,MAAMuzF,EAAmB,SAAY,CACnC,GAAI,GAACzzF,GAAmBE,EAAc,gBAAkBJ,GAAa,eACjE,GAAA,CACF,MAAMqD,EAAmB5F,GACvBC,GAAW9B,GAAI,aAAa,EAC5B+B,GAAM,SAAU,KAAM,SAAS,EAC/BoE,GAAQ,YAAa,MAAM,CAC7B,EACM2P,EAAW,MAAM7T,GAAQwF,CAAgB,EAMzCuwF,EAHY,CAAC,GAAG,IAAI,IAAIliF,EAAS,KAAK,IAAIzU,GAAOA,EAAI,KAAA,EAAO,QAAQ,CAAC,CAAC,EAGpC,OACtCE,GAAOF,GAAIrB,GAAI,UAAWyI,CAAQ,CAAC,CACrC,EACMwvF,EAAyB,MAAM,QAAQ,IAAID,CAAqB,EAGhEE,EAAmB,CAAC,EACHD,EAAA,QAAqB3rF,GAAA,CACtCA,EAAU,WACZ4rF,EAAiB5rF,EAAU,EAAE,EAAIA,EAAU,KAAK,EAClD,CACD,EAGD,MAAM6rF,EAAiBriF,EAAS,KAAK,IAAIzU,GAAO,CACxC,MAAAuG,EAAOvG,EAAI,KAAK,EAChB+2F,EAAgBF,EAAiBtwF,EAAK,QAAQ,GAAK,CAAC,EACnD,MAAA,CACL,GAAIvG,EAAI,GACR,GAAGuG,EACH,UAAWwwF,EAAc,WAAa,gBACtC,QAAS,QAAQxwF,EAAK,QAAQ,GAC9B,YAAawwF,EAAc,WAAa,IAC1C,CAAA,CACD,EAED/f,EAAe8f,CAAc,QACtBj2F,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAClDQ,EAAM,MAAM,qCAAqC,CAAA,QACjD,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEMy3F,EAAgB,MAAO7vF,GAAe,CAC1C,GAAI,CAAClE,GAAmBE,EAAc,gBAAkBJ,GAAa,cAAe,CAClF1B,EAAM,MAAM,kCAAkC,EAC9C,MAAA,CAGFg1F,EAAgBlvF,EAAW,EAAE,EAEzB,GAAA,CAEF,MAAM8V,EAAU9V,EAAW,UAAY,WAAa,OAAS,MACvDkC,EAAU,OAAO4T,CAAO,EAG1B,GAAAtU,GAAO,KAAOU,GAAWitF,EACvB,GAAA,CACF,MAAMA,EAAcjtF,CAAO,EAE3B,MAAM,IAAI,QAAQqiB,GAAW,WAAWA,EAAS,GAAI,CAAC,OACxC,CACd,MAAM,IAAI,MAAM,uBAAuBzO,IAAY,OAAS,WAAa,SAAS,UAAU,CAAA,CAM1F,MAAAG,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAGlC3T,EAAW,MAAMF,GAAyB4T,EAAQ/T,CAAO,EAC/D,GAAI,CAACK,EACG,MAAA,IAAI,MAAM,iCAAiC,EAInD,MAAMO,EAASE,GAAkBhD,EAAW,OAAO,WAAY,CAAC,EAG1D2C,EAAe3C,EAAW,QAAU,OACrCkC,IAAY,KAAO,6CAA6C,6CAChEA,IAAY,KAAO,6CAA6C,6CAGrEhI,EAAM,QAAQ,gDAAiD,CAAE,GAAI,aAAc,EAG7E,MAAA+pB,EAAK,MAAM1hB,EAAS,kBACxBvC,EAAW,cACX2C,EACAG,CACF,EAQI,GALJ5I,EAAM,QAAQ,2BAA4B,CAAE,GAAI,aAAc,GAG9C,MAAM+pB,EAAG,KAAK,GAElB,SAAW,EAAG,CAExB,MAAMrc,GAAU/O,GAAIrB,GAAI,cAAewI,EAAW,EAAE,EAAG,CACrD,OAAQ,YACR,YAAakN,GAAgB,EAC7B,gBAAiB+W,EAAG,IAAA,CACrB,EAGD,MAAMg7D,EAAYpmF,GAAIrB,GAAI,UAAWwI,EAAW,QAAQ,EAClD8D,EAAY,MAAM/K,GAAOkmF,CAAS,EACpC,GAAAn7E,EAAU,SAAU,CACtB,MAAMG,EAAiBH,EAAU,KAAK,EAAE,SAAW,EACnD,MAAM8D,GAAUq3E,EAAW,CACzB,QAAS,KAAK,IAAI,EAAGh7E,EAAiBjE,EAAW,MAAM,CAAA,CACxD,CAAA,CAGH9F,EAAM,QAAQ,mCAAoC,CAAE,GAAI,aAAc,EAGtE,MAAMq1F,EAAiB,CAAA,KAEjB,OAAA,IAAI,MAAM,oBAAoB,QAE/B71F,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAC5CQ,EAAA,MACJR,EAAM,QAAQ,SAAS,eAAe,EAClC,2BACAA,EAAM,SAAW,+BACrB,CAAE,GAAI,YAAa,CACrB,CAAA,QACA,CACAw1F,EAAgB,IAAI,CAAA,CAExB,EAEMrnF,EAAe,MAAOioF,GAAiB,CAC3C,GAAI,GAACh0F,GAAmBE,EAAc,gBAAkBJ,GAAa,eACjE,GAAA,CACF,MAAMgM,GAAU/O,GAAIrB,GAAI,cAAes4F,CAAY,EAAG,CACpD,OAAQ,WACR,gBAAiB,IAAK,CACvB,EACD51F,EAAM,QAAQ,qBAAqB,EAClBq1F,EAAA,QACV71F,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAClDQ,EAAM,MAAM,6BAA6B,CAAA,CAE7C,EAEM61F,EAAoB,SAAY,CACpC,QAAQ,IAAI,oCAAoC,EAGhDT,EAA+BlxF,IAAA,CAC7B,SAAU,CACR,KAAM,CAAE,GAAGA,EAAK,SAAS,KAAM,QAAS,GAAM,MAAO,IAAK,EAC1D,KAAM,CAAE,GAAGA,EAAK,SAAS,KAAM,QAAS,GAAM,MAAO,IAAK,CAC5D,EACA,QAAS,CACP,KAAM,CAAE,GAAGA,EAAK,QAAQ,KAAM,QAAS,GAAM,MAAO,IAAK,EACzD,KAAM,CAAE,GAAGA,EAAK,QAAQ,KAAM,QAAS,GAAM,MAAO,IAAK,CAAA,CAC3D,EACA,EAEE,GAAA,CAEI,MAAAwE,EAAW,CAAC,oDAAoD,EAGtE,QAAQ,IAAI,mCAAmC,EAC/C,MAAMotF,EAAmB,IAAIz1E,GAAuB,8BAA8B,EAC5E01E,EAAmB,MAAM5tF,GAAyB2tF,EAAkB,MAAM,EAC1EE,EAAoBnB,GAAkB,IAAI,EAGhD,QAAQ,IAAI,kCAAkC,EAC9C,MAAMoB,EAAkB,IAAI51E,GAAuB,2EAAkF,EAC/H61E,EAAkB,MAAM/tF,GAAyB8tF,EAAiB,KAAK,EACvEE,EAAmBtB,GAAkB,GAAG,EAE9C,IAAIuB,EAAgB,CAClB,SAAU,CACR,KAAM,CAAE,OAAQ,GAAI,KAAM,IAAK,QAAS,GAAO,MAAO,IAAK,EAC3D,KAAM,CAAE,OAAQ,GAAI,KAAM,IAAK,QAAS,GAAO,MAAO,IAAK,CAC7D,EACA,QAAS,CACP,KAAM,CAAE,OAAQ,GAAI,KAAM,IAAK,QAAS,GAAO,MAAO,IAAK,EAC3D,KAAM,CAAE,OAAQ,GAAI,KAAM,IAAK,QAAS,GAAO,MAAO,IAAK,CAAA,CAE/D,EAGA,GAAIL,GAAoBC,EAClB,GAAA,CAOF,MAAMK,EAAsB,MALC,IAAI/tF,EAC/B0tF,EAAkB,KAClBttF,EACAotF,CACF,EACuD,UAAUC,EAAiB,MAAM,EACxFK,EAAc,SAAS,KAAO,CAC5B,OAAQ,GACR,KAAMnwE,GAAmBowE,EAAqB,CAAC,EAC/C,QAAS,GACT,MAAO,IACT,EAQA,MAAMC,EAAsB,MALC,IAAIhuF,EAC/B0tF,EAAkB,KAClBttF,EACAotF,CACF,EACuD,UAAUC,EAAiB,MAAM,EACxFK,EAAc,SAAS,KAAO,CAC5B,OAAQ,GACR,KAAMnwE,GAAmBqwE,EAAqB,CAAC,EAC/C,QAAS,GACT,MAAO,IACT,QACO92F,EAAO,CACN,QAAA,MAAM,oCAAqCA,CAAK,EAC1C42F,EAAA,SAAS,KAAK,MAAQ,0BACtBA,EAAA,SAAS,KAAK,MAAQ,yBAAA,CAKxC,GAAIF,GAAmBC,EACjB,GAAA,CAOF,MAAMI,EAAqB,MALC,IAAIjuF,EAC9B6tF,EAAiB,KACjBztF,EACAutF,CACF,EACqD,UAAUC,EAAgB,MAAM,EACrFE,EAAc,QAAQ,KAAO,CAC3B,OAAQ,GACR,KAAMnwE,GAAmBswE,EAAoB,CAAC,EAC9C,QAAS,GACT,MAAO,IACT,EAQA,MAAMC,EAAqB,MALC,IAAIluF,EAC9B6tF,EAAiB,KACjBztF,EACAutF,CACF,EACqD,UAAUC,EAAgB,MAAM,EACrFE,EAAc,QAAQ,KAAO,CAC3B,OAAQ,GACR,KAAMnwE,GAAmBuwE,EAAoB,CAAC,EAC9C,QAAS,GACT,MAAO,IACT,QACOh3F,EAAO,CACN,QAAA,MAAM,mCAAoCA,CAAK,EACzC42F,EAAA,QAAQ,KAAK,MAAQ,0BACrBA,EAAA,QAAQ,KAAK,MAAQ,yBAAA,CAIvChB,EAAsBgB,CAAa,QAC5B52F,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAClDQ,EAAM,MAAM,+BAA+B,CAAA,CAE/C,EAEAtD,EAAAA,UAAU,IAAM,CACV,IAAA+5F,EAEJ,MAAMC,EAAkB,SAAY,CAClC,GAAK90F,EAED,GAAA,CACF,MAAMi0F,EAAkB,QACjBr2F,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,CAAA,CAEpD,EAGgB,OAAAk3F,EAAA,EAGZ90F,IACW60F,EAAA,YAAYC,EAAiB,GAAK,GAI1C,IAAM,CACPD,IACF,QAAQ,IAAI,iCAAiC,EAC7C,cAAcA,CAAU,EAE5B,CAAA,EACC,CAAC70F,CAAe,CAAC,EAGpB,MAAM+0F,EAAsB,IAAM,CAChC,QAAQ,IAAI,sCAAsC,EAChCd,EAAA,CACpB,EAEM51B,EAAqB,CAACrkD,EAASlS,EAAO/M,IAAU,CACpDy4F,EAA+BlxF,IAAA,CAC7B,GAAGA,EACH,CAAC0X,CAAO,EAAG,CACT,GAAG1X,EAAK0X,CAAO,EACf,CAAClS,CAAK,EAAG,CAAE,GAAGxF,EAAK0X,CAAO,EAAElS,CAAK,EAAG,OAAQ/M,CAAM,CAAA,CACpD,EACA,CACJ,EAEMi6F,EAA6B,MAAOh7E,EAASlS,IAAU,CAC3D,GAAI,CAAC9H,GAAmBE,EAAc,gBAAkBJ,GAAa,cAAe,CAClF1B,EAAM,MAAM,kCAAkC,EAC9C,MAAA,CAGF,MAAM4I,EAASusF,EAAmBv5E,CAAO,EAAElS,CAAK,EAAE,OAClD,GAAI,CAACd,GAAU,WAAWA,CAAM,GAAK,EAAG,CACtC5I,EAAM,MAAM,6BAA6B,EACzC,MAAA,CAGE,GAAA,CAEFA,EAAM,QAAQ,2BAA4B,CAAE,GAAI,0BAA2B,EAErE,MAAAgI,EAAU4T,IAAY,WAAa,KAAO,IAQhD,GAPA,QAAQ,IAAI,+BAAgC,CAAE,QAAAA,EAAS,MAAAlS,EAAO,QAAA1B,EAAS,OAAAY,EAAQ,EAG/E,MAAM,OAAO,SAAS,QAAQ,CAAE,OAAQ,sBAAuB,EAGxC,OAAO,OAAO,SAAS,cAAc,IACrCZ,EAAS,CACtB,QAAA,IAAI,wBAAyBA,CAAO,EACxC,GAAA,CACEA,IAAY,IACR,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,6BACR,OAAQ,CAAC,CAAE,QAAS,MAAQ,CAAA,CAAA,CAC7B,EAEK,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,6BACR,OAAQ,CAAC,CAAE,QAAS,OAAS,CAAA,CAAA,CAC9B,EAGH,MAAM,IAAI,QAAQqiB,GAAW,WAAWA,EAAS,GAAI,CAAC,QAC/C7qB,EAAO,CAEV,GAAAA,EAAM,OAAS,KACb,GAAA,CACEwI,IAAY,IACR,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,0BACR,OAAQ,CAAC,CACP,QAAS,OACT,UAAW,kBACX,eAAgB,CAAE,KAAM,QAAS,OAAQ,QAAS,SAAU,EAAG,EAC/D,QAAS,CAAC,0BAA0B,EACpC,kBAAmB,CAAC,0BAA0B,CAC/C,CAAA,CAAA,CACF,EAEK,MAAA,OAAO,SAAS,QAAQ,CAC5B,OAAQ,0BACR,OAAQ,CAAC,CACP,QAAS,QACT,UAAW,mBACX,eAAgB,CAAE,KAAM,MAAO,OAAQ,MAAO,SAAU,EAAG,EAC3D,QAAS,CAAC,8BAAqC,EAC/C,kBAAmB,CAAC,yCAA0C,CAC/D,CAAA,CAAA,CACF,EAGH,MAAM,IAAI,QAAQqiB,GAAW,WAAWA,EAAS,GAAI,CAAC,QAC/CwsE,EAAU,CACT,QAAA,MAAM,yBAA0BA,CAAQ,EAChD72F,EAAM,MAAM,iBAAiB4b,CAAO,uBAAwB,CAAE,GAAI,0BAA2B,EAC7F,MAAA,CAGI,QAAA,MAAM,yBAA0Bpc,CAAK,EAC7CQ,EAAM,MAAM,uBAAuB4b,CAAO,WAAY,CAAE,GAAI,0BAA2B,EACvF,MAAA,CACF,CAKF,GADqB,OAAO,OAAO,SAAS,cAAc,IACrC5T,EAAS,CAC5BhI,EAAM,MAAM,oBAAoB4b,CAAO,uBAAwB,CAAE,GAAI,0BAA2B,EAChG,MAAA,CAGF,QAAQ,IAAI,gCAAgC,EAEtC,MAAAG,EAAS,MADE,IAAIC,GAAuB,OAAO,QAAQ,EAC7B,UAAU,EAExC,QAAQ,IAAI,8BAA8B,EAC1C,MAAM3T,EAAW,MAAMF,GAAyB4T,EAAQ/T,EAAQ,UAAU,EAE1E,GAAI,CAACK,EAAU,CACbrI,EAAM,MAAM,kCAAmC,CAAE,GAAI,0BAA2B,EAChF,MAAA,CAII,MAAA8jB,EAAiB+wE,GAAkB7sF,CAAO,EAChD,GAAI,CAAC8b,EAAgB,CACnB9jB,EAAM,MAAM,sCAAsCgI,CAAO,GAAI,CAAE,GAAI,0BAA2B,EAC9F,MAAA,CAGI,MAAAS,EAAeqb,EAAepa,CAAK,EACzC,GAAI,CAACjB,EAAc,CACXzI,EAAA,MAAM,8BAA8B0J,CAAK,aAAa1B,CAAO,GAAI,CAAE,GAAI,0BAA2B,EACxG,MAAA,CAGF,QAAQ,IAAI,8BAA+B,CACzC,gBAAiBK,EAAS,OAC1B,aAAAI,EACA,eAAgBG,CAAA,CACjB,EAED,MAAMw1C,EAAet1C,GAAkBF,EAAO,SAAA,EAAY,CAAC,EAG3D5I,EAAM,QAAQ,gDAAiD,CAAE,GAAI,0BAA2B,EAG1F,MAAA+pB,EAAK,MAAM1hB,EAAS,qBACxBI,EACA21C,EACA,CAAE,SAAU,GAAO,CACrB,EAEQ,QAAA,IAAI,yBAA0Br0B,EAAG,IAAI,EAC7C/pB,EAAM,QAAQ,wCAAyC,CAAE,GAAI,0BAA2B,EAElF,MAAAsc,EAAU,MAAMyN,EAAG,KAAK,EAG1B,GAFI,QAAA,IAAI,uBAAwBzN,CAAO,EAEvCA,EAAQ,SAAW,EAAG,CAExB,MAAMw6E,EAAgBn4F,GAAIS,GAAW9B,GAAI,aAAa,CAAC,EACvD,MAAMsC,GAAOk3F,EAAe,CAC1B,GAAIA,EAAc,GAClB,OAAQ,WAAWluF,CAAM,EACzB,MAAAc,EACA,QAAAkS,EACA,OAAQ,YACR,KAAM,eACN,cAAA9Z,EACA,cAAe,KACf,gBAAiBioB,EAAG,KACpB,gBAAiB,KACjB,YAAajoB,CAAA,CACd,EAEK9B,EAAA,QAAQ,yBAAyB4I,CAAM,IAAIc,CAAK,GAAI,CAAE,GAAI,0BAA2B,EAG3F0rF,EAA+BlxF,IAAA,CAC7B,GAAGA,EACH,CAAC0X,CAAO,EAAG,CACT,GAAG1X,EAAK0X,CAAO,EACf,CAAClS,CAAK,EAAG,CACP,GAAGxF,EAAK0X,CAAO,EAAElS,CAAK,EACtB,OAAQ,EAAA,CACV,CACF,EACA,EAGgBmsF,EAAA,CAAA,KAEZ,OAAA,IAAI,MAAM,oBAAoB,QAE/Br2F,EAAO,CACN,QAAA,MAAM,mCAAoCA,CAAK,EACjDQ,EAAA,MACJR,EAAM,SAAW,mCACjB,CAAE,GAAI,yBAA0B,CAClC,CAAA,CAEJ,EAEA,OAAIvB,EAECmD,EAAA,KAAA,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,+CAAA,CACZ,EACAtO,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,gDAAA,CAAA,CACZ,EACF,QACC0pF,GAAoB,EAAA,EACpB,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACzpF,EAAGC,IACpBxO,EAAA,IAAA+3F,GAAA,CAAA,EAA+BvpF,CAAG,CACpC,CAAA,EACH,EAIA,CAACxJ,GAAmBE,EAAc,gBAAkBJ,GAAa,cAEhEN,EAAA,KAAA,MAAI,CAAA,UAAU,6DACb,SAAA,CAACxE,EAAAA,IAAAgO,GAAA,CAAgB,UAAU,gCAAgC,QAC1D,KAAA,CAAG,UAAU,wDAAwD,SAAa,gBAAA,QAClF,IAAA,CAAE,UAAU,oDAAoD,SAEjE,kEAAA,CAAA,CAAA,EACF,EAKDxJ,EAAA,KAAA,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,OAAC,KAAA,CAAG,UAAU,mDAAmD,SAAmB,sBAAA,EACpFxE,EAAA,IAAC,SAAA,CACC,QAAS+5F,EACT,UAAU,4LACX,SAAA,kBAAA,CAAA,CAED,EACF,EAGCv1F,EAAAA,KAAA,MAAI,CAAA,UAAU,0DACb,SAAA,OAAC,KAAA,CAAG,UAAU,2DAA2D,SAAwB,2BAAA,EAChGA,EAAAA,KAAA,MAAI,CAAA,UAAU,wCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,6CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAxE,MAAC,OAAI,IAAI,qBAAqB,IAAI,WAAW,UAAU,eAAe,QACrE,KAAA,CAAG,UAAU,oDAAoD,SAAgB,kBAAA,CAAA,CAAA,EACpF,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxE,MAAC,OAAI,IAAI,kBAAkB,IAAI,OAAO,UAAU,eAAe,QAC9D,OAAA,CAAK,UAAU,2CAA2C,SAAI,MAAA,CAAA,CAAA,EACjE,QACC,MAAA,CAAI,UAAU,aACZ,SAAmBu4F,EAAA,SAAS,KAAK,cAC/B,MAAA,CAAI,UAAU,0FAA2F,CAAA,EACxGA,EAAmB,SAAS,KAAK,YAClC,MAAI,CAAA,UAAU,yCAA0C,SAAAA,EAAmB,SAAS,KAAK,KAAM,CAAA,EAE/F/zF,EAAA,KAAA,MAAA,CAAI,UAAU,2CAA2C,SAAA,CAAA,mBACvC,WAAW+zF,EAAmB,SAAS,KAAK,MAAQ,CAAC,EAAE,QAAQ,CAAC,CAAA,CAAA,CACnF,CAEJ,CAAA,CAAA,EACF,EACC/zF,EAAAA,KAAA,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAOu4F,EAAmB,SAAS,KAAK,OACxC,SAAW/wF,GAAM67D,EAAmB,WAAY,OAAQ77D,EAAE,OAAO,KAAK,EACtE,YAAY,eACZ,UAAU,6OAAA,CACZ,EACAxH,EAAA,IAAC,SAAA,CACC,QAAS,IAAMg6F,EAA2B,WAAY,MAAM,EAC5D,UAAU,4LACX,SAAA,UAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAGCx1F,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxE,MAAC,OAAI,IAAI,kBAAkB,IAAI,OAAO,UAAU,eAAe,QAC9D,OAAA,CAAK,UAAU,2CAA2C,SAAI,MAAA,CAAA,CAAA,EACjE,QACC,MAAA,CAAI,UAAU,aACZ,SAAmBu4F,EAAA,SAAS,KAAK,cAC/B,MAAA,CAAI,UAAU,0FAA2F,CAAA,EACxGA,EAAmB,SAAS,KAAK,YAClC,MAAI,CAAA,UAAU,yCAA0C,SAAAA,EAAmB,SAAS,KAAK,KAAM,CAAA,EAE/F/zF,EAAA,KAAA,MAAA,CAAI,UAAU,2CAA2C,SAAA,CAAA,mBACvC,WAAW+zF,EAAmB,SAAS,KAAK,MAAQ,CAAC,EAAE,QAAQ,CAAC,CAAA,CAAA,CACnF,CAEJ,CAAA,CAAA,EACF,EACC/zF,EAAAA,KAAA,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAOu4F,EAAmB,SAAS,KAAK,OACxC,SAAW/wF,GAAM67D,EAAmB,WAAY,OAAQ77D,EAAE,OAAO,KAAK,EACtE,YAAY,eACZ,UAAU,6OAAA,CACZ,EACAxH,EAAA,IAAC,SAAA,CACC,QAAS,IAAMg6F,EAA2B,WAAY,MAAM,EAC5D,UAAU,4LACX,SAAA,UAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGCx1F,EAAAA,KAAA,MAAI,CAAA,UAAU,6CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAxE,MAAC,OAAI,IAAI,eAAe,IAAI,UAAU,UAAU,eAAe,QAC9D,KAAA,CAAG,UAAU,oDAAoD,SAAe,iBAAA,CAAA,CAAA,EACnF,EACCwE,EAAAA,KAAA,MAAI,CAAA,UAAU,YAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxE,MAAC,OAAI,IAAI,kBAAkB,IAAI,OAAO,UAAU,eAAe,QAC9D,OAAA,CAAK,UAAU,2CAA2C,SAAI,MAAA,CAAA,CAAA,EACjE,QACC,MAAA,CAAI,UAAU,aACZ,SAAmBu4F,EAAA,QAAQ,KAAK,cAC9B,MAAA,CAAI,UAAU,0FAA2F,CAAA,EACxGA,EAAmB,QAAQ,KAAK,YACjC,MAAI,CAAA,UAAU,yCAA0C,SAAAA,EAAmB,QAAQ,KAAK,KAAM,CAAA,EAE9F/zF,EAAA,KAAA,MAAA,CAAI,UAAU,2CAA2C,SAAA,CAAA,mBACvC,WAAW+zF,EAAmB,QAAQ,KAAK,MAAQ,CAAC,EAAE,QAAQ,CAAC,CAAA,CAAA,CAClF,CAEJ,CAAA,CAAA,EACF,EACC/zF,EAAAA,KAAA,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAOu4F,EAAmB,QAAQ,KAAK,OACvC,SAAW/wF,GAAM67D,EAAmB,UAAW,OAAQ77D,EAAE,OAAO,KAAK,EACrE,YAAY,eACZ,UAAU,6OAAA,CACZ,EACAxH,EAAA,IAAC,SAAA,CACC,QAAS,IAAMg6F,EAA2B,UAAW,MAAM,EAC3D,UAAU,4LACX,SAAA,UAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAGCx1F,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxE,MAAC,OAAI,IAAI,kBAAkB,IAAI,OAAO,UAAU,eAAe,QAC9D,OAAA,CAAK,UAAU,2CAA2C,SAAI,MAAA,CAAA,CAAA,EACjE,QACC,MAAA,CAAI,UAAU,aACZ,SAAmBu4F,EAAA,QAAQ,KAAK,cAC9B,MAAA,CAAI,UAAU,0FAA2F,CAAA,EACxGA,EAAmB,QAAQ,KAAK,YACjC,MAAI,CAAA,UAAU,yCAA0C,SAAAA,EAAmB,QAAQ,KAAK,KAAM,CAAA,EAE9F/zF,EAAA,KAAA,MAAA,CAAI,UAAU,2CAA2C,SAAA,CAAA,mBACvC,WAAW+zF,EAAmB,QAAQ,KAAK,MAAQ,CAAC,EAAE,QAAQ,CAAC,CAAA,CAAA,CAClF,CAEJ,CAAA,CAAA,EACF,EACC/zF,EAAAA,KAAA,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAOu4F,EAAmB,QAAQ,KAAK,OACvC,SAAW/wF,GAAM67D,EAAmB,UAAW,OAAQ77D,EAAE,OAAO,KAAK,EACrE,YAAY,eACZ,UAAU,6OAAA,CACZ,EACAxH,EAAA,IAAC,SAAA,CACC,QAAS,IAAMg6F,EAA2B,UAAW,MAAM,EAC3D,UAAU,4LACX,SAAA,UAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,sEACZ,SAAA1wF,EAAY,SAAW,EACrBtJ,EAAAA,IAAA,MAAI,CAAA,UAAU,mDAAmD,SAElE,iCAAA,SAEC,QAAA,CAAM,UAAU,2DACf,SAAA,CAAAA,MAAC,QAAM,CAAA,UAAU,8BACf,SAAAwE,EAAA,KAAC,KACC,CAAA,SAAA,OAAC,KAAA,CAAG,UAAU,4GAA4G,SAAK,QAAA,QAC9H,KAAA,CAAG,UAAU,4GAA4G,SAAM,SAAA,QAC/H,KAAA,CAAG,UAAU,4GAA4G,SAAK,QAAA,QAC9H,KAAA,CAAG,UAAU,4GAA4G,SAAO,UAAA,QAChI,KAAA,CAAG,UAAU,4GAA4G,SAAM,SAAA,QAC/H,KAAA,CAAG,UAAU,4GAA4G,SAAS,YAAA,QAClI,KAAA,CAAG,UAAU,4GAA4G,SAAO,SAAA,CAAA,CAAA,CAAA,CACnI,CAAA,CACF,EACCxE,EAAA,IAAA,QAAM,CAAA,UAAU,0EACd,SAAAsJ,EAAY,IAAKJ,GACf1E,EAAA,KAAA,KAAuB,CAAA,UAAU,0CAChC,SAAA,CAAAxE,MAAC,KAAG,CAAA,UAAU,8BACZ,SAAAwE,EAAA,KAAC,MACC,CAAA,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,oDACZ,SAAAkJ,EAAW,WAAa,gBAC3B,EACClJ,EAAA,IAAA,MAAA,CAAI,UAAU,2CACZ,WAAW,OACd,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EACCwE,EAAAA,KAAA,KAAG,CAAA,UAAU,oEAAoE,SAAA,CAAA,IAC9E0E,EAAW,OAAO,QAAQ,CAAC,CAAA,EAC/B,QACC,KAAG,CAAA,UAAU,oEACZ,SAAC1E,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAK,UAAUkJ,EAAW,MAAM,YAAa,CAAA,OAC7C,IAAKA,EAAW,MAChB,UAAU,cAAA,CACZ,EACCA,EAAW,KAAA,CAAA,CACd,CAAA,CACF,QACC,KAAG,CAAA,UAAU,oEACZ,SAAC1E,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxE,EAAA,IAAC,MAAA,CACC,IAAKkJ,EAAW,UAAY,WAAa,qBAAuB,eAChE,IAAKA,EAAW,UAAY,WAAa,mBAAqB,UAC9D,UAAU,cAAA,CACZ,EACCA,EAAW,UAAY,WAAa,mBAAqB,SAAA,CAAA,CAC5D,CAAA,CACF,QACC,KAAG,CAAA,UAAU,uEACZ,SAAC1E,EAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAxE,EAAA,IAAC,OAAK,CAAA,UAAU,yBAA0B,SAAAkJ,EAAW,cAAc,EACnElJ,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACH,UAAA,UAAU,UAAUkJ,EAAW,aAAa,EACtD9F,EAAM,QAAQ,wBAAwB,CACxC,EACA,UAAU,gEAEV,SAAAoB,EAAAA,KAAC,OAAI,MAAM,6BAA6B,UAAU,UAAU,QAAQ,YAAY,KAAK,eACnF,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,EAAE,iDAAiD,EACxDA,EAAAA,IAAA,OAAK,CAAA,EAAE,4FAA6F,CAAA,CAAA,CACvG,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,EACCA,EAAAA,IAAA,KAAA,CAAG,UAAU,uEACX,SAAI,IAAA,KAAKkJ,EAAW,WAAW,OAAQ,CAAA,EAAE,iBAC5C,QACC,KAAG,CAAA,UAAU,kDAEX,SAAAivF,IAAiBjvF,EAAW,GAC3B1E,EAAA,KAAC,SAAA,CACC,SAAQ,GACR,UAAU,8JAEV,SAAA,CAACxE,EAAAA,IAAAm6F,GAAA,CAAS,UAAU,oBAAoB,EAAE,eAAA,CAAA,GAI3C31F,EAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BAEb,SAAA,OAAC,MAAA,CAAI,UAAU,yEAEX,UAAM,IAAA,CAEN,MAAM41F,EAAU,KAAK,IAAI,EAAIlxF,EAAW,YAClC4jC,EAAW,KAAK,IAAI,IAAMstD,EAAU,QAAiB,GAAG,EACxDC,EAAUD,GAAW,QAIvB,OAAA51F,EAAA,KAAAuO,WAAA,CAAA,SAAA,CAAA/S,EAAA,IAAC,MAAA,CACC,UAAU,4DACV,MAAO,CAAE,MAAO,GAAG8sC,CAAQ,GAAI,CAAA,CACjC,EAECtoC,EAAAA,KAAA,MAAI,CAAA,UAAU,qHACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,2GACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,EAAAA,IAAAgO,GAAA,CAAgB,UAAU,sCAAsC,SAChE,MACC,CAAA,SAAA,OAAC,IAAA,CAAE,UAAU,4CAA4C,SAAsB,yBAAA,QAC9E,IAAE,CAAA,UAAU,gDACV,SAAAqsF,EACG,qDACA,+HACN,EACC,CAACA,GACC71F,EAAAA,KAAA,IAAA,CAAE,UAAU,0CAA0C,SAAA,CAAA,mBACpC,KAAK,MAAM,QAAgB41F,IAAY,IAAO,GAAK,GAAK,GAAG,EAAE,OAAA,CAChF,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAECp6F,EAAAA,IAAA,OAAI,UAAU,yDACb,SAACA,EAAA,IAAA,MAAI,CAAA,UAAU,mEAAoE,CAAA,CACrF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,GAAA,EACF,EAGAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM+Q,EAAa7H,EAAW,EAAE,EACzC,UAAU,8LACV,MAAM,oBAEN,SAAClJ,EAAAA,IAAAqR,GAAI,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC3B,EACF,EAGC,KAAK,IAAQ,EAAAnI,EAAW,aAAe,SACtC1E,EAAA,KAAC,SAAA,CACC,QAAS,IAAMu0F,EAAc7vF,CAAU,EACvC,UAAU,kRAEV,SAAA,CAAClJ,EAAAA,IAAAo0E,GAAA,CAAQ,UAAU,OAAO,EAAE,SAAA,CAAA,CAAA,CAE9B,CAAA,CAEJ,CAEJ,CAAA,CAAA,GAtIOlrE,EAAW,EAuIpB,CACD,CACH,CAAA,CAAA,CAAA,CACF,CAAA,CAEJ,QAGCyuF,GAAuB,CAAA,CAAA,CAAA,EAC1B,CAEJ,CCjiCA,MAAM7yF,GAAe,6CAErB,SAAwBw1F,IAAgB,CACtC,KAAM,CAACvgB,EAAUwgB,CAAW,EAAI36F,WAAS,CACvC,kBAAmB,EACnB,YAAa,IACb,yBAA0B,IAC1B,gBAAiB,EAAA,CAClB,EACK,CAACyB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAC46F,EAAQC,CAAS,EAAI76F,EAAAA,SAAS,EAAK,EACpC,CAACijC,EAAS63D,CAAU,EAAI96F,EAAA,SAAS,CAAE,KAAM,GAAI,KAAM,GAAI,EACvD,CAACoF,EAAiBC,CAAkB,EAAIrF,EAAAA,SAAS,EAAK,EACtD,CAACsF,EAAeC,CAAgB,EAAIvF,EAAAA,SAAS,EAAE,EAC/C8D,EAAQ,aAAa,QAAQ,aAAa,GAAK,QAErD5D,EAAAA,UAAU,IAAM,EAEgB,SAAY,CACpC,GAAA,CACI,MAAA8H,EAAW,MAAMC,GAAuB,EAC9C,GAAID,EAAU,CACZ,MAAME,EAAW,MAAMF,EAAS,QAAQ,CAAE,OAAQ,eAAgB,EAC9DE,EAAS,OAAS,GAAKA,EAAS,CAAC,EAAE,YAAY,IAAMhD,GAAa,gBACnDK,EAAA2C,EAAS,CAAC,CAAC,EAC5B7C,EAAmB,EAAI,EACzB,QAEKrC,EAAO,CACN,QAAA,MAAM,oCAAqCA,CAAK,CAAA,CAE5D,GAEsB,CACxB,EAAG,EAAE,EAEL9C,EAAAA,UAAU,IAAM,CAEV,OAAO,UACT,OAAO,SAAS,GAAG,kBAAoBgI,GAAa,CAC9CA,EAAS,SAAW,GAAKA,EAAS,CAAC,EAAE,YAAY,IAAMhD,GAAa,eACtEG,EAAmB,EAAK,EACxBE,EAAiB,EAAE,IAEFA,EAAA2C,EAAS,CAAC,CAAC,EAC5B7C,EAAmB,EAAI,EACzB,CACD,CAEL,EAAG,EAAE,EAELnF,EAAAA,UAAU,IAAM,CACVkF,GAAmBE,EAAc,YAAkB,IAAAJ,GAAa,cACpD61F,EAAA,EAEdr5F,EAAW,EAAK,CAClB,EACC,CAAC0D,EAAiBE,CAAa,CAAC,EAEnC,MAAMy1F,EAAgB,SAAY,CAChC,GAAI,GAAC31F,GAAmBE,EAAc,gBAAkBJ,GAAa,eACjE,GAAA,CACF,MAAMg1E,EAAc,MAAM73E,GAAOF,GAAIrB,GAAI,WAAY,UAAU,CAAC,EAC5Do5E,EAAY,SACFygB,EAAAzgB,EAAY,MAAM,EAG9B,MAAM92E,GAAOjB,GAAIrB,GAAI,WAAY,UAAU,EAAGq5E,CAAQ,QAEjDn3E,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC/C83F,EAAW,CAAE,KAAM,QAAS,KAAM,0BAA2B,CAAA,QAC7D,CACAp5F,EAAW,EAAK,CAAA,CAEpB,EAEM6iB,EAAe,MAAO3c,GAAM,CAEhC,GADAA,EAAE,eAAe,EACb,GAACxC,GAAmBE,EAAc,gBAAkBJ,GAAa,eAErE,CAAA21F,EAAU,EAAI,EACdC,EAAW,CAAE,KAAM,GAAI,KAAM,GAAI,EAE7B,GAAA,CACF,MAAM13F,GAAOjB,GAAIrB,GAAI,WAAY,UAAU,EAAGq5E,CAAQ,EACtD2gB,EAAW,CAAE,KAAM,UAAW,KAAM,gCAAiC,EACrEt3F,EAAM,QAAQ,+BAA+B,QACtCR,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EAC/C83F,EAAW,CAAE,KAAM,QAAS,KAAM,4BAA6B,EAC/Dt3F,EAAM,MAAM,2BAA2B,CAAA,QACvC,CACAq3F,EAAU,EAAK,CAAA,EAEnB,EAEMn8E,EAAgB9W,GAAM,CAC1B,KAAM,CAAE,KAAA2oB,EAAM,MAAApwB,EAAO,KAAAolB,EAAM,QAAAsC,CAAA,EAAYjgB,EAAE,OACzC+yF,EAAqBjzF,IAAA,CACnB,GAAGA,EACH,CAAC6oB,CAAI,EAAGhL,IAAS,WAAasC,EAAUtC,IAAS,SAAW,WAAWplB,CAAK,EAAIA,CAAA,EAChF,CACJ,EAEA,OAAIsB,EAEArB,MAAC,OAAI,UAAU,gDACb,eAAC,MAAI,CAAA,UAAU,mFAAmF,CACpG,CAAA,EAIA,CAACgF,GAAmBE,EAAc,gBAAkBJ,GAAa,cAEjEN,EAAA,KAAC,MAAI,CAAA,UAAU,6DACb,SAAA,CAACxE,EAAAA,IAAAgO,GAAA,CAAgB,UAAU,+BAAgC,CAAA,EAC3DhO,EAAAA,IAAC,MAAG,UAAW,sBAAsB0D,IAAU,OAAS,aAAe,eAAe,QAAS,SAAa,eAAA,CAAA,EAC5G1D,EAAAA,IAAC,KAAE,UAAW,GAAG0D,IAAU,OAAS,gBAAkB,eAAe,oBAAqB,SAA6D,+DAAA,CAAA,CAAA,EACzJ,EAKFc,EAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAiB,oBAAA,EAEvEA,MAAA,MAAA,CAAI,UAAW,GAAG0D,IAAU,OAAS,cAAgB,UAAU,4BAC9D,SAACc,EAAAA,KAAA,OAAA,CAAK,SAAU2f,EAAc,UAAU,YACtC,SAAA,CAAA3f,OAAC,MACC,CAAA,SAAA,CAACxE,EAAAA,IAAA,QAAA,CAAM,UAAW,6BAA6B0D,IAAU,OAAS,gBAAkB,eAAe,QAAS,SAE5G,kCAAA,CAAA,EACA1D,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,oBACL,MAAO+5E,EAAS,kBAChB,SAAUz7D,EACV,UAAW,2FACT5a,IAAU,OACN,yCACA,+BACN,GACA,IAAI,IACJ,KAAK,MAAA,CAAA,CACP,EACF,SAEC,MACC,CAAA,SAAA,CAAC1D,EAAAA,IAAA,QAAA,CAAM,UAAW,6BAA6B0D,IAAU,OAAS,gBAAkB,eAAe,QAAS,SAE5G,kBAAA,CAAA,EACA1D,EAAA,IAAC,QAAA,CACC,KAAK,SACL,KAAK,cACL,MAAO+5E,EAAS,YAChB,SAAUz7D,EACV,UAAW,2FACT5a,IAAU,OACN,yCACA,+BACN,GACA,IAAI,IACJ,IAAI,MACJ,KAAK,KAAA,CAAA,CACP,EACF,SAEC,MACC,CAAA,SAAA,CAAC1D,EAAAA,IAAA,QAAA,CAAM,UAAW,6BAA6B0D,IAAU,OAAS,gBAAkB,eAAe,QAAS,SAE5G,mCAAA,CAAA,EACA1D,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,2BACL,MAAO+5E,EAAS,yBAChB,SAAUz7D,EACV,UAAW,2FACT5a,IAAU,OACN,yCACA,+BACN,EAAA,CAAA,CACF,EACF,EAEAc,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,WACL,KAAK,kBACL,QAAS+5E,EAAS,gBAClB,SAAUz7D,EACV,UAAU,qEAAA,CACZ,EACAte,EAAAA,IAAC,SAAM,UAAW,sBAAsB0D,IAAU,OAAS,gBAAkB,eAAe,GAAI,SAEhG,kBAAA,CAAA,CAAA,EACF,EAECm/B,EAAQ,MACP7iC,MAAC,OAAI,UAAW,kBACd6iC,EAAQ,OAAS,UACbn/B,IAAU,OAAS,8BAAgC,6BACnDA,IAAU,OAAS,0BAA4B,wBACrD,GACG,WAAQ,KACX,EAGF1D,EAAAA,IAAC,MAAI,CAAA,UAAU,mBACb,SAAAwE,EAAA,KAAC,SAAA,CACC,KAAK,SACL,SAAUg2F,GAAU,CAACx1F,GAAmBE,EAAc,YAAY,IAAMJ,GAAa,YAAY,EACjG,UAAU,gPAEV,SAAA,CAAC9E,EAAAA,IAAA46F,GAAA,CAAO,UAAU,MAAO,CAAA,EACxBJ,EAAS,YAAc,cAAA,CAAA,CAAA,CAE5B,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ,CC1NA,MAAM11F,GAAe,6CAGf+1F,GAAwB,IAC5Br2F,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,qDAEV,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,oDAAqD,CAAA,EACpEA,EAAAA,IAAC,MAAI,CAAA,UAAU,+CAAgD,CAAA,CAAA,EACjE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,+CAAgD,CAAA,EAC/DA,EAAAA,IAAC,MAAI,CAAA,UAAU,+CAAgD,CAAA,CAAA,CACjE,CAAA,CAAA,EACF,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,gDAAiD,CAAA,EAChEA,EAAAA,IAAC,MAAI,CAAA,UAAU,gDAAiD,CAAA,EAChEA,EAAAA,IAAC,MAAI,CAAA,UAAU,gDAAiD,CAAA,CAAA,EAClE,EACAwE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,iDAAkD,CAAA,EACjEA,EAAAA,IAAC,MAAI,CAAA,UAAU,gDAAiD,CAAA,EAChEA,EAAAA,IAAC,MAAI,CAAA,UAAU,gDAAiD,CAAA,CAAA,CAClE,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAGI86F,GAAwB,IAC5B96F,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,iEAEV,eAAC,MAAI,CAAA,UAAU,kBACb,SAAC9J,EAAAA,KAAA,QAAA,CAAM,UAAU,aACf,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,8BACf,SAACA,EAAAA,IAAA,KAAA,CACE,SAAC,CAAA,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGC,IACpBxO,EAAA,IAAA,KAAA,CAAW,UAAU,YACpB,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAU,+CAAA,CAAgD,CADxD,EAAAwO,CAET,CACD,CACH,CAAA,EACF,QACC,QAAM,CAAA,UAAU,gDACd,SAAC,CAAA,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACD,EAAGC,UACpB,KACE,CAAA,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACD,EAAGkiB,IACpBzwB,EAAAA,IAAA,KAAA,CAAW,UAAU,YACpB,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,gDAAgD,CADxD,EAAAywB,CAET,CACD,CALM,EAAAjiB,CAMT,CACD,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,EAGIusF,GAAuB,CAAC,CAAE,OAAAr/E,EAAQ,QAAAC,EAAS,SAAAmrE,EAAU,cAAA6N,KAAoB,CAC7E,KAAM,CAAC/0B,EAAQe,CAAS,EAAI/gE,EAAAA,SAAS,EAAE,EACjC,CAACwnF,EAAcC,CAAe,EAAIznF,EAAAA,SAAS,EAAK,EAEhDukB,EAAe,SAAY,CAC3B,GAAA,CAACy7C,EAAO,OAAQ,CAClBx8D,EAAM,MAAM,mCAAmC,EAC/C,MAAA,CAGFikF,EAAgB,EAAI,EAChB,GAAA,CACF,MAAMP,EAASlnB,CAAM,EACbjkD,EAAA,QACD/Y,EAAO,CACN,QAAA,MAAM,qCAAsCA,CAAK,EACzDQ,EAAM,MAAM,mCAAmC,CAAA,QAC/C,CACAikF,EAAgB,EAAK,CAAA,CAEzB,EAEI,OAAC3rE,QAGF,MAAI,CAAA,UAAU,6EACb,SAAClX,EAAA,KAAA,MAAA,CAAI,UAAU,gEACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,2DAA2D,SAAuB,0BAAA,QAE/F,MAAI,CAAA,UAAU,qDACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACxE,EAAAA,IAAAgO,GAAA,CAAgB,UAAU,iDAAkD,CAAA,SAC5E,MACC,CAAA,SAAA,CAAChO,EAAA,IAAA,IAAA,CAAE,UAAU,uDAAuD,SAAc,iBAAA,EAClFwE,EAAAA,KAAC,IAAE,CAAA,UAAU,gDAAgD,SAAA,CAAA,YACjDmwF,EAAc,OAAO,QAAQ,CAAC,EAAE,IAAEA,EAAc,MAAM,cAAc,KAAA,EAChF,EACAnwF,EAAAA,KAAC,IAAE,CAAA,UAAU,2CAA2C,SAAA,CAAA,OACjDmwF,EAAc,eAAe,MAAM,EAAG,CAAC,EAAE,MAAIA,EAAc,eAAe,MAAM,EAAE,CAAA,CACzF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEC30F,MAAA,MAAA,CAAI,UAAU,YACb,gBAAC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,kEAAkE,SAEnF,mBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO4/D,EACP,SAAWp4D,GAAMm5D,EAAUn5D,EAAE,OAAO,KAAK,EACzC,YAAY,QACZ,UAAU,4NAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,EAEAhD,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS2b,EACT,UAAU,uFACX,SAAA,QAAA,CAED,EACA3b,EAAA,IAAC,SAAA,CACC,QAASmkB,EACT,SAAUijE,EACV,UAAW,mCACTA,EACI,6CACA,iCACN,GAEC,WAAe,gBAAkB,kBAAA,CAAA,CACpC,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAzDkB,IA2DtB,EAEA,SAAwB4T,IAAe,CACjB13F,GAAa,EACjC,KAAM,CAACjC,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACq7F,EAAgBC,CAAiB,EAAIt7F,EAAAA,SAAS,CAAA,CAAE,EACjD,CAACu7F,EAAeC,CAAgB,EAAIx7F,EAAAA,SAAS,CAAA,CAAE,EAC/C,CAACoF,EAAiBC,CAAkB,EAAIrF,EAAAA,SAAS,EAAK,EACtD,CAACsF,EAAeC,CAAgB,EAAIvF,EAAAA,SAAS,EAAE,EAC/C,CAACy7F,EAAgBC,CAAiB,EAAI17F,EAAAA,SAAS,IAAI,EACnD,CAAC27F,EAAiBC,CAAkB,EAAI57F,EAAAA,SAAS,EAAK,EACtD,CAACyqC,EAAWC,CAAY,EAAI1qC,EAAAA,SAAS,SAAS,EAC9C,CAACgG,EAAaC,CAAc,EAAIjG,EAAAA,SAAS,CAAC,EAC1C,CAAC67F,EAAaC,CAAc,EAAI97F,EAAAA,SAAS,CAAC,EAC1C+7F,EAAe,GACP,aAAa,QAAQ,aAAa,EAEhD77F,EAAAA,UAAU,IAAM,CACQy0F,EAAA,CACxB,EAAG,EAAE,EAELz0F,EAAAA,UAAU,IAAM,CAEV,OAAO,UACT,OAAO,SAAS,GAAG,kBAAoBgI,GAAa,CAC9CA,EAAS,SAAW,GAAKA,EAAS,CAAC,EAAE,YAAY,IAAMhD,GAAa,eACtEG,EAAmB,EAAK,EACxBE,EAAiB,EAAE,IAEFA,EAAA2C,EAAS,CAAC,CAAC,EAC5B7C,EAAmB,EAAI,EACzB,CACD,CAEL,EAAG,EAAE,EAELnF,EAAAA,UAAU,IAAM,CACVkF,GAAmBE,EAAc,YAAkB,IAAAJ,GAAa,cAC9C82F,EAAA,EAEpBt6F,EAAW,EAAK,CAClB,EACC,CAAC0D,EAAiBE,CAAa,CAAC,EAEnC,MAAMqvF,EAAwB,SAAY,CACpC,GAAA,CACI,MAAA3sF,EAAW,MAAMC,GAAuB,EAC9C,GAAID,EAAU,CACZ,MAAME,EAAW,MAAMF,EAAS,QAAQ,CAAE,OAAQ,eAAgB,EAC9DE,EAAS,OAAS,GAAKA,EAAS,CAAC,EAAE,YAAY,IAAMhD,GAAa,gBACnDK,EAAA2C,EAAS,CAAC,CAAC,EAC5B7C,EAAmB,EAAI,EACzB,QAEKrC,EAAO,CACN,QAAA,MAAM,oCAAqCA,CAAK,CAAA,CAE5D,EAEMg5F,EAAsB,SAAY,CACtC,GAAI,GAAC52F,GAAmBE,EAAc,gBAAkBJ,GAAa,eACjE,GAAA,CAEF,MAAM+2F,EAAet5F,GACnBC,GAAW9B,GAAI,gBAAgB,EAC/B+B,GAAM,SAAU,KAAM,SAAS,EAC/BoE,GAAQ,YAAa,MAAM,CAC7B,EACMi1F,EAAkB,MAAMn5F,GAAQk5F,CAAY,EAG5CE,EAAex5F,GACnBC,GAAW9B,GAAI,gBAAgB,EAC/B+B,GAAM,SAAU,KAAM,CAAC,WAAY,UAAU,CAAC,EAC9CoE,GAAQ,cAAe,MAAM,CAC/B,EACMm1F,EAAkB,MAAMr5F,GAAQo5F,CAAY,EAG5CE,EAAc,MAAM,QAAQ,IAAIH,EAAgB,KAAK,IAAI,MAAMI,GAAa,CAC1E,MAAA5zF,EAAO4zF,EAAU,KAAK,EACtB3T,EAAWxmF,GAAIrB,GAAI,SAAU4H,EAAK,OAAO,EACzC6zF,EAAW,MAAMl6F,GAAOsmF,CAAQ,EAC/B,MAAA,CACL,GAAI2T,EAAU,GACd,GAAG5zF,EACH,MAAO6zF,EAAS,OAAO,EAAI,CAAE,GAAIA,EAAS,GAAI,GAAGA,EAAS,KAAK,CAAM,EAAA,KACrE,UAAW7zF,EAAK,WAAW,OAAO,CACpC,CAAA,CACD,CAAC,EAGI8zF,EAAc,MAAM,QAAQ,IAAIJ,EAAgB,KAAK,IAAI,MAAME,GAAa,CAC1E,MAAA5zF,EAAO4zF,EAAU,KAAK,EACtB3T,EAAWxmF,GAAIrB,GAAI,SAAU4H,EAAK,OAAO,EACzC6zF,EAAW,MAAMl6F,GAAOsmF,CAAQ,EAGhC8T,EAAWt6F,GAAIrB,GAAI,QAAS4H,EAAK,OAAO,EACxCg0F,GAAW,MAAMr6F,GAAOo6F,CAAQ,EAChCE,GAAYD,GAAS,OAAW,EAAAA,GAAS,OAAS,KAGlDnU,GAAYpmF,GAAIrB,GAAI,UAAW4H,EAAK,QAAQ,EAC5C0E,EAAY,MAAM/K,GAAOkmF,EAAS,EAClC9gF,EAAa2F,EAAU,OAAW,EAAAA,EAAU,OAAS,KAEpD,MAAA,CACL,GAAIkvF,EAAU,GACd,GAAG5zF,EACH,MAAO6zF,EAAS,OAAO,EAAI,CAAE,GAAIA,EAAS,GAAI,GAAGA,EAAS,KAAK,CAAM,EAAA,KACrE,UAAWI,IAAW,MAAQ,gBAC9B,WAAYl1F,GAAY,WAAaA,GAAY,MAAQ,iBACzD,UAAWiB,EAAK,WAAW,OAAO,EAClC,YAAaA,EAAK,aAAa,OAAO,CACxC,CAAA,CACD,CAAC,EAEF4yF,EAAkBe,CAAW,EAC7Bb,EAAiBgB,CAAW,QACrBx5F,EAAO,CACN,QAAA,MAAM,kCAAmCA,CAAK,EACtDQ,EAAM,MAAM,iCAAiC,CAAA,QAC7C,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEMk7F,EAAgC,MAAO7H,GAAkB,CAC7D,GAAI,CAAC3vF,GAAmBE,EAAc,gBAAkBJ,GAAa,cAAe,CAClF1B,EAAM,MAAM,kCAAkC,EAC9C,MAAA,CAGE,GAAA,CAEI,MAAA+4F,EAAW,MAAMl6F,GAAOF,GAAIrB,GAAI,SAAUi0F,EAAc,OAAO,CAAC,EAClE,GAAA,CAACwH,EAAS,SAAU,CACtB/4F,EAAM,MAAM,iBAAiB,EAC7B,MAAA,CAEI,MAAA8D,EAAYi1F,EAAS,KAAK,EAC1B9E,EAAiBnwF,EAAU,eACjC,GAAI,CAACmwF,EAAgB,CACX,QAAA,MAAM,mCAAoCnwF,CAAS,EAC3D9D,EAAM,MAAM,iDAAiD,EAC7D,MAAA,CAII,MAAAq5F,EAAev1F,EAAU,eAAe,YACtC,QAAA,IAAI,gCAAiCu1F,CAAY,EAGrD,IAAAC,EACA,GAAA,CACsBA,EAAA/1C,GAAkB81C,CAAY,EAC9C,QAAA,IAAI,2BAA4BC,CAAqB,QACtD95F,GAAO,CACN,QAAA,MAAM,kCAAmCA,EAAK,EACtDQ,EAAM,MAAM,qCAAqC,EACjD,MAAA,CAGF,GAAI,CAACoI,GAAiBkxF,CAAqB,EAAG,CAC5C,QAAQ,MAAM,6BAA8B,CAC1C,SAAUD,EACV,UAAWC,CAAA,CACZ,EACDt5F,EAAM,MAAM,uCAAuC,EACnD,MAAA,CAIF,QAAQ,IAAI,uBAAwB,CAClC,eAAAi0F,EACA,aAAcqF,EACd,UAAAx1F,EACA,cAAAytF,EACA,QAASztF,EAAU,eAAe,QAClC,MAAOA,EAAU,eAAe,KAAA,CACjC,EAGK,MAAA8F,EAAY,MAAM/K,GAAOF,GAAIrB,GAAI,UAAWi0F,EAAc,QAAQ,CAAC,EACrE,GAAA,CAAC3nF,EAAU,SAAU,CACvB5J,EAAM,MAAM,kBAAkB,EAC9B,MAAA,CAGI,MAAAu5F,EAAgB3vF,EAAU,KAAA,EAAO,cACvC,GAAI,CAACxB,GAAiBmxF,CAAa,EAAG,CAC5B,QAAA,MAAM,0BAA2BA,CAAa,EACtDv5F,EAAM,MAAM,+BAA+B,EAC3C,MAAA,CAGF,MAAMwE,EAAW,IAAIwX,GAAuB,OAAO,QAAQ,EACrDD,EAAS,MAAMvX,EAAS,UAAU,EAClCoX,EAAU21E,EAAc,MAAM,cAAc,QAC5C7iD,GAAY9yB,EAAQ,SAAS,EAC7BlS,GAAQ6nF,EAAc,MAAM,cAAc,MAIhD,GAAI,CADiB1pF,GAAiB6mC,EAAS,IAAIhlC,EAAK,EACrC,CACjB1J,EAAM,MAAM,qBAAqB0J,EAAK,eAAeglC,EAAS,EAAE,EAChE,MAAA,CAIF,MAAMrmC,EAAW,MAAMF,GAAyB3D,EAAUkqC,EAAS,EACnE,GAAI,CAACrmC,EAAU,CACbrI,EAAM,MAAM,iCAAiC,EAC7C,MAAA,CAGI,MAAAw5F,EAAqBnxF,EAAS,QAAQ0T,CAAM,EAG5Cm7B,EAAgB,OAAOq6C,EAAc,MAAM,EAAE,QAAQ,CAAC,EACpD,QAAA,IAAI,yBAA0Br6C,CAAa,EAGnD,MAAMvtC,EAAeb,GAAkBouC,EAAe,CAAC,EACvD,QAAQ,IAAI,wBAAyBvtC,EAAa,SAAA,CAAU,EAGtD,MAAA0vE,EAAer5E,EAAM,QAAQ,sBAAsB,EAGzD,QAAQ,IAAI,iCAAkC,CAC5C,QAASi0F,EACT,aAAcqF,EACd,cAAAC,EACA,aAAc5vF,EAAa,SAAS,EACpC,MAAAD,GACA,QAASglC,GACT,cAAAwI,CAAA,CACD,EAGK,MAAAntB,EAAK,MAAMyvE,EAAmB,cAClCvF,EACAqF,EACAC,EACA5vF,CACF,EAGA,MAAMogB,EAAG,KAAK,EAGd,MAAMxX,GAAOnT,GAAW9B,GAAI,aAAa,EAAG,CAC1C,SAAUi0F,EAAc,SACxB,OAAQ,OAAOr6C,CAAa,EAC5B,MAAAxtC,GACA,IAAK,EACL,UAAW,OAAOwtC,CAAa,EAC/B,OAAQ,YACR,cAAeoiD,EACf,QAAS19E,IAAY,KAAO,WAAa,UACzC,UAAW5I,GAAgB,EAC3B,YAAa,KAAK,IAAI,EACtB,YAAa,KAAK,IAAI,EACtB,gBAAiB+W,EAAG,KACpB,gBAAiBwnE,EAAc,GAC/B,KAAM,QAAA,CACP,EAGD,MAAM7jF,GAAU/O,GAAIrB,GAAI,iBAAkBi0F,EAAc,EAAE,EAAG,CAC3D,OAAQ,WACR,YAAav+E,GAAgB,EAC7B,gBAAiB+W,EAAG,IAAA,CACrB,EAGD,MAAMrc,GAAU/O,GAAIrB,GAAI,SAAUi0F,EAAc,OAAO,EAAG,CACxD,OAAQ,UAAA,CACT,EAGD,MAAMkI,GAAmB96F,GAAIrB,GAAI,UAAWi0F,EAAc,QAAQ,EAC5DmI,GAAmB,MAAM76F,GAAO46F,EAAgB,EAClD,GAAAC,GAAiB,SAAU,CAC7B,MAAM3vF,GAAiB2vF,GAAiB,KAAK,EAAE,SAAW,EAC1D,MAAMhsF,GAAU+rF,GAAkB,CAChC,QAAS,KAAK,IAAI,EAAG1vF,GAAiB,OAAOmtC,CAAa,CAAC,CAAA,CAC5D,CAAA,CAIH,MAAMyiD,EAAmBh7F,GAAIrB,GAAI,UAAWi0F,EAAc,QAAQ,EAC5DqI,GAAmB,MAAM/6F,GAAO86F,CAAgB,EAElD,GAAAC,GAAiB,SAAU,CAC7B,MAAMC,GAAiBD,GAAiB,KAAK,EAAE,YAAc,EACvDE,GAAwBF,GAAiB,KAAK,EAAE,gBAAkB,CAAC,EAGnEtvF,OAAU,KACVyvF,GAAW,GAAGzvF,GAAI,YAAa,CAAA,KAAKA,GAAI,SAAS,EAAI,GAAG,SAAS,EAAE,SAAS,EAAG,GAAG,CAAC,GAGnF0vF,GAAiB,CAAE,GAAGF,EAAsB,EAClDE,GAAeD,EAAQ,GAAKC,GAAeD,EAAQ,GAAK,GAAK,OAAO7iD,CAAa,EAEjF,MAAMxpC,GAAUisF,EAAkB,CAChC,WAAY,KAAK,IAAI,EAAGE,GAAiB,OAAO3iD,CAAa,CAAC,EAC9D,eAAA8iD,GACA,YAAahnF,GAAgB,CAAA,CAC9B,EAED,QAAQ,IAAI,0BAA2B,CACrC,gBAAiB6mF,GACjB,aAAc,OAAO3iD,CAAa,EAClC,WAAY,KAAK,IAAI,EAAG2iD,GAAiB,OAAO3iD,CAAa,CAAC,CAAA,CAC/D,CAAA,CAGHl3C,EAAM,QAAQq5E,CAAY,EAC1Br5E,EAAM,QAAQ,+BAA+B,EAGzBw4F,EAAA,QACbh5F,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EACzCQ,EAAA,MACJR,EAAM,QAAQ,SAAS,eAAe,EAClC,2BACAA,EAAM,SAAW,0BACvB,CAAA,CAEJ,EAEMy6F,EAA8B,MAAOz9B,GAAW,CAChD,GAAA,CAEF,MAAM9uD,GAAU/O,GAAIrB,GAAI,iBAAkB26F,EAAe,EAAE,EAAG,CAC5D,OAAQ,WACR,gBAAiB,KACjB,gBAAiBz7B,CAAA,CAClB,EAGD,MAAM9uD,GAAU/O,GAAIrB,GAAI,SAAU26F,EAAe,OAAO,EAAG,CACzD,OAAQ,UAAA,CACT,EAGD,MAAMlzF,EAAmB5F,GACvBC,GAAW9B,GAAI,aAAa,EAC5B+B,GAAM,kBAAmB,KAAM44F,EAAe,EAAE,EAChDt0F,GAAM,CAAC,CACT,EACMwzE,EAAqB,MAAM53E,GAAQwF,CAAgB,EACpDoyE,EAAmB,OAChB,MAAAzpE,GAAU/O,GAAIrB,GAAI,cAAe65E,EAAmB,KAAK,CAAC,EAAE,EAAE,EAAG,CACrE,OAAQ,YACR,gBAAiB,KACjB,iBAAkB3a,CAAA,CACnB,EAGHx8D,EAAM,QAAQ,8BAA8B,EACxBw4F,EAAA,QACbh5F,EAAO,CACN,cAAA,MAAM,gCAAiCA,CAAK,EAC9CA,CAAA,CAEV,EAEM06F,EAAqB,MAAOC,GAAa,CAC7C,GAAI,CAACv4F,GAAmBE,EAAc,gBAAkBJ,GAAa,cAAe,CAClF1B,EAAM,MAAM,kCAAkC,EAC9C,MAAA,CAGE,GAAA,CACF,MAAM0N,GAAU/O,GAAIrB,GAAI,iBAAkB68F,CAAQ,EAAG,CACnD,OAAQ,WACR,gBAAiB,IAAK,CACvB,EACDn6F,EAAM,QAAQ,yBAAyB,EACnBw4F,EAAA,QACbh5F,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,EAAM,MAAM,iCAAiC,CAAA,CAEjD,EAGMo6F,EAAqB/B,EAAcE,EACnC8B,EAAsBD,EAAqB7B,EAC3C+B,EAAiBvC,EAAc,MAAMsC,EAAqBD,CAAkB,EAC5EG,EAAoB,KAAK,KAAKxC,EAAc,OAASQ,CAAY,EAGjEiC,EAAmBxX,GAAesV,EAAetV,CAAU,EAQjE,OALAtmF,EAAAA,UAAU,IAAM,CACd+F,EAAe,CAAC,EAChB61F,EAAe,CAAC,CAAA,EACf,CAACrxD,CAAS,CAAC,EAEVhpC,EAEAmD,EAAA,KAAC,MAAI,CAAA,UAAU,kCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,+CAAA,CACZ,EACCtO,EAAAA,IAAA,MAAA,CAAI,UAAU,aACZ,SAAC,CAAA,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGC,IACrBxO,EAAA,IAACsO,EAAO,IAAP,CAEC,QAAS,CAAE,QAAS,EAAI,EACxB,QAAS,CAAE,QAAS,CAAE,EACtB,WAAY,CAAE,OAAQ,IAAU,SAAU,IAAK,KAAM,WAAY,EACjE,UAAU,mDAAA,EAJLE,CAAA,CAMR,CACH,CAAA,CAAA,EACF,EACC67B,IAAc,UACZrqC,MAAA,MAAA,CAAI,UAAU,YACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACuO,EAAGC,IACpBxO,EAAA,IAAA66F,GAAA,CAAA,EAA2BrsF,CAAG,CAChC,CACH,CAAA,EAEAxO,EAAA,IAAC86F,GAAsB,CAAA,CAAA,CAAA,EAE3B,EAIA,CAAC91F,GAAmBE,EAAc,gBAAkBJ,GAAa,cAEjEN,EAAA,KAAC,MAAI,CAAA,UAAU,6DACb,SAAA,CAACxE,EAAAA,IAAAgO,GAAA,CAAgB,UAAU,+BAAgC,CAAA,EAC1DhO,EAAA,IAAA,KAAA,CAAG,UAAU,wDAAwD,SAAa,gBAAA,EAClFA,EAAA,IAAA,IAAA,CAAE,UAAU,oDAAoD,SAEjE,8DAAA,CAAA,CAAA,EACF,EAKFwE,EAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mDAAmD,SAAkB,qBAAA,EACnFwE,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsqC,EAAa,SAAS,EACrC,UAAW,8DACTD,IAAc,UACV,0BACA,wGACN,GACD,SAAA,kBAAA,CAED,EACArqC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsqC,EAAa,SAAS,EACrC,UAAW,8DACTD,IAAc,UACV,0BACA,wGACN,GACD,SAAA,iBAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAECA,IAAc,UACb4wD,EAAe,SAAW,EACvBj7F,EAAAA,IAAA,MAAA,CAAI,UAAU,iEACb,SAACA,EAAAA,IAAA,IAAA,CAAE,UAAU,mCAAmC,SAAA,4BAA0B,CAAA,CAC5E,CAAA,EAECA,EAAAA,IAAA,MAAA,CAAI,UAAU,aACZ,SAAAi7F,EAAe,IAAK4C,GACnBr5F,EAAA,KAAC,MAAA,CAEC,UAAU,qDAEV,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,sDAAsD,SAAA,CAAA,UAC1Dq5F,EAAQ,QAAQ,MAAM,EAAE,CAAA,EAClC,EACAr5F,EAAAA,KAAC,IAAE,CAAA,UAAU,2CAA2C,SAAA,CAAA,gBACxCq5F,EAAQ,UAAU,eAAe,CAAA,CACjD,CAAA,CAAA,EACF,EACAr5F,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,QAAS,IAAMg4F,EAA8BqB,CAAO,EACpD,UAAU,4GAEV,SAAA,CAAC79F,EAAAA,IAAAoE,GAAA,CAAa,UAAU,SAAU,CAAA,EAAE,oBAAA,CAAA,CAEtC,EACAI,EAAA,KAAC,SAAA,CACC,QAAS,IAAM84F,EAAmBO,EAAQ,EAAE,EAC5C,UAAU,wGAEV,SAAA,CAAC79F,EAAAA,IAAAqR,GAAA,CAAI,UAAU,SAAU,CAAA,EAAE,QAAA,CAAA,CAAA,CAE7B,CACF,CAAA,CAAA,EACF,EAEA7M,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,uDAAuD,SAEvE,YAAA,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,gDACb,WAAQ,OACX,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,OAAA,CAAK,UAAU,uDAAuD,SAEvE,aAAA,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,gDACb,WAAQ,QACX,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,OAAA,CAAK,UAAU,uDAAuD,SAEvE,iBAAA,EACAwE,EAAAA,KAAC,OAAK,CAAA,UAAU,gDAAgD,SAAA,CAAA,IAC5Dq5F,EAAQ,OAAO,QAAQ,CAAC,CAAA,CAC5B,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAr5F,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,uDAAuD,SAEvE,mBAAA,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,0DACb,WAAQ,cACX,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,OAAA,CAAK,UAAU,uDAAuD,SAEvE,SAAA,QACC,OAAK,CAAA,UAAU,gDACb,SAAQ69F,EAAA,OAAO,eAAe,KACjC,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAC79F,EAAA,IAAA,OAAA,CAAK,UAAU,uDAAuD,SAEvE,WAAA,EACAA,EAAAA,IAAC,OAAK,CAAA,UAAU,gDACb,SAAA69F,EAAQ,OAAO,eAAe,UAAY,KAAO,WAAa,SACjE,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EApFKA,EAAQ,EAsFhB,CAAA,CACH,CAAA,EAGF79F,EAAAA,IAAC,OAAI,UAAU,iEACZ,WAAc,SAAW,QACvB,MAAI,CAAA,UAAU,kBACb,SAACA,EAAA,IAAA,IAAA,CAAE,UAAU,mCAAmC,SAAA,yBAAA,CAAuB,CACzE,CAAA,EAGEwE,EAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAA/S,EAAAA,IAAC,OAAI,UAAU,kBACb,SAACwE,EAAA,KAAA,QAAA,CAAM,UAAU,2DACf,SAAA,CAACxE,EAAA,IAAA,QAAA,CAAM,UAAU,8BACf,SAACA,EAAAA,IAAA,KAAA,CACE,SAAC,CAAA,WAAY,QAAS,SAAU,SAAU,SAAU,QAAS,UAAW,eAAgB,aAAa,EAAE,IAAKijF,GAC1GjjF,EAAA,IAAA,KAAA,CAAgB,UAAU,oGACxB,SADMijF,CAAA,EAAAA,CAET,CACD,CACH,CAAA,EACF,EACAjjF,EAAA,IAAC,QAAM,CAAA,UAAU,0EACd,SAAA09F,EAAe,IAAKI,GACnBt5F,EAAA,KAAC,KAAmB,CAAA,UAAU,0CAC5B,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,gFAAgF,SAAA,CAAA,IAC1Fs5F,EAAO,QAAQ,MAAM,EAAE,CAAA,EAC3B,EACC99F,EAAA,IAAA,KAAA,CAAG,UAAU,uEACX,WAAO,UACV,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,uEACX,WAAO,WACV,EACAwE,EAAAA,KAAC,KAAG,CAAA,UAAU,oEAAoE,SAAA,CAAA,IAC9Es5F,EAAO,OAAO,QAAQ,CAAC,CAAA,EAC3B,QACC,KAAG,CAAA,UAAU,8BACZ,SAAA99F,MAAC,QAAK,UAAW,8CACf89F,EAAO,SAAW,WACd,uEACA,8DACN,GACG,SAAAA,EAAO,MACV,CAAA,EACF,QACC,KAAG,CAAA,UAAU,uEACX,SAAOA,EAAA,OAAO,eAAe,MAChC,EACA99F,EAAAA,IAAC,KAAG,CAAA,UAAU,uEACX,SAAA89F,EAAO,OAAO,eAAe,UAAY,KAAO,WAAa,SAChE,CAAA,QACC,KAAG,CAAA,UAAU,uEACX,SAAOA,EAAA,YAAY,iBACtB,EACC99F,EAAA,IAAA,KAAA,CAAG,UAAU,sCACX,WAAO,gBACNA,EAAA,IAAC,IAAA,CACC,KAAM,GAAG89F,EAAO,OAAO,eAAe,UAAY,KAC9C,2CACA,yBAAyB,OAAOA,EAAO,eAAe,GAC1D,OAAO,SACP,IAAI,sBACJ,UAAU,kFACX,SAAA,MAAA,GAGC,GACN,CAAA,CAAA,GA5COA,EAAO,EA6ChB,CACD,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGCH,EAAoB,GACnB39F,EAAA,IAAC,OAAI,UAAU,2FACb,eAAC,MAAI,CAAA,UAAU,aACZ,SAAA,MAAM,KAAK,CAAE,OAAQ29F,GAAqB,CAACpvF,EAAGC,IAC7CxO,EAAA,IAAC,SAAA,CAEC,QAAS,IAAM49F,EAAgBpvF,EAAI,CAAC,EACpC,UAAW,8DACTitF,IAAgBjtF,EAAI,EAChB,0BACA,wGACN,GAEC,SAAIA,EAAA,CAAA,EARAA,EAAI,CAUZ,CAAA,CACH,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CAEJ,CAAA,EAGFxO,EAAA,IAAC+6F,GAAA,CACC,OAAQQ,EACR,QAAS,IAAM,CACbC,EAAmB,EAAK,EACxBF,EAAkB,IAAI,CACxB,EACA,SAAU+B,EACV,cAAehC,CAAA,CAAA,CACjB,EACF,CAEJ,CCz0BA,SAAwB0C,IAAgB,CAChC,KAAA,CAAE,KAAA58F,CAAK,EAAImC,GAAa,EACxB,CAAE,WAAA5D,CAAW,EAAIO,GAAS,EAC1B,CAACoB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACq7F,EAAgBC,CAAiB,EAAIt7F,EAAAA,SAAS,CAAA,CAAE,EACjD,CAACgG,EAAaC,CAAc,EAAIjG,EAAAA,SAAS,CAAC,EAC1Co+F,EAAiB,GAEvBl+F,EAAAA,UAAU,IAAM,CACVqB,GAAM,UACYy6F,EAAA,CACtB,EACC,CAACz6F,CAAI,CAAC,EAET,MAAMy6F,EAAsB,SAAY,CAClC,GAAA,CACF,MAAMqC,EAAe17F,GACnBC,GAAW9B,GAAI,gBAAgB,EAC/B+B,GAAM,WAAY,KAAMtB,EAAK,QAAQ,EACrC0F,GAAQ,YAAa,MAAM,CAC7B,EACM2P,EAAW,MAAM7T,GAAQs7F,CAAY,EAGrC/5C,EAAa,MAAM,QAAQ,IAAI1tC,EAAS,KAAK,IAAI,MAAM0lF,GAAa,CAClE,MAAA5zF,EAAO4zF,EAAU,KAAK,EAExB,GAAA,CAEF,MAAM3T,EAAWxmF,GAAIrB,GAAI,SAAU4H,EAAK,OAAO,EAEzCpB,GADW,MAAMjF,GAAOsmF,CAAQ,GACX,KAAK,EAEzB,MAAA,CACL,GAAI2T,EAAU,GACd,GAAG5zF,EACH,UAAWpB,GAAW,WAAW,MAAQA,GAAW,SAAW,YAC/D,UAAWoB,EAAK,WAAW,OAAO,EAClC,YAAaA,EAAK,aAAa,OAAO,CACxC,QACO41F,EAAY,CACX,eAAA,MAAM,wBAAyBA,CAAU,EAC1C,CACL,GAAIhC,EAAU,GACd,GAAG5zF,EACH,UAAWA,EAAK,SAAW,YAC3B,UAAWA,EAAK,WAAW,OAAO,EAClC,YAAaA,EAAK,aAAa,OAAO,CACxC,CAAA,CACF,CACD,CAAC,EAEF4yF,EAAkBh3C,CAAU,QACrBthD,EAAO,CACN,QAAA,MAAM,kCAAmCA,CAAK,EACtDQ,EAAM,MAAM,iCAAiC,CAAA,QAC7C,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEM68F,EAAuB5jE,GAAW,CACtC,OAAQA,EAAQ,CACd,IAAK,UACI,MAAA,gCACT,IAAK,WACI,MAAA,8BACT,IAAK,WACI,MAAA,0BACT,QACS,MAAA,2BAAA,CAEb,EAGM6jE,EAAoBx4F,EAAco4F,EAClCK,EAAqBD,EAAoBJ,EACzCM,EAAiBrD,EAAe,MAAMoD,EAAoBD,CAAiB,EAC3EnkE,EAAa,KAAK,KAAKghE,EAAe,OAAS+C,CAAc,EAG7D7X,EAAYC,GAAevgF,EAAeugF,CAAU,EAE1D,OAAI/kF,EAECrB,EAAAA,IAAA,MAAA,CAAI,UAAW,kDAAkDN,EAAa,cAAgB,YAAY,GACzG,SAACM,EAAAA,IAAA,MAAA,CAAI,UAAU,kFAAmF,CAAA,EACpG,EAKFA,EAAAA,IAAC,MAAI,CAAA,UAAW,OAAON,EAAa,cAAgB,YAAY,GAC9D,SAAA8E,OAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAxE,EAAA,IAAC,MAAI,CAAA,UAAU,yCACb,SAAAA,EAAAA,IAAC,KAAG,CAAA,UAAW,qBAAqBN,EAAa,gBAAkB,eAAe,GAAI,SAAA,gBAAc,CAAA,EACtG,EAECu7F,EAAe,SAAW,EACxBz2F,EAAA,KAAA,MAAA,CAAI,UAAW,GAAG9E,EAAa,cAAgB,UAAU,qCACxD,SAAA,CAAAM,MAACi8E,IAAc,UAAW,aAAav8E,EAAa,gBAAkB,eAAe,gBAAiB,EACtGM,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,SAAwB,0BAAA,CAAA,CAC7F,CAAA,CAAA,SAEC,MAAI,CAAA,UAAW,GAAGA,EAAa,cAAgB,UAAU,qCACxD,SAAA,CAAAM,EAAAA,IAAC,OAAI,UAAU,kBACb,SAACwE,EAAA,KAAA,QAAA,CAAM,UAAU,sCACf,SAAA,CAACxE,EAAAA,IAAA,QAAA,CAAM,UAAW,GAAGN,EAAa,iBAAmB,YAAY,GAC/D,gBAAC,KACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAErI,UAAA,CAAA,EACAM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAErI,OAAA,CAAA,EACAM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAErI,QAAA,CAAA,EACAM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAErI,QAAA,CAAA,EACAM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAErI,cAAA,CAAA,EACAM,EAAAA,IAAC,MAAG,UAAW,2CAA2CN,EAAa,gBAAkB,eAAe,4BAA6B,SAErI,cAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACC,QAAM,CAAA,UAAW,GAAGA,EAAa,uCAAyC,mCAAmC,GAC3G,SAAA4+F,EAAe,IAAKT,UAClB,KAAoB,CAAA,UAAW,GAAGn+F,EAAa,uBAAyB,kBAAkB,GACzF,SAAA,CAAA8E,OAAC,MAAG,UAAW,mDAAmD9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IAChHm+F,EAAQ,QAAQ,MAAM,EAAE,CAAA,EAC5B,EACA79F,EAAAA,IAAC,MAAG,UAAW,uCAAuCN,EAAa,gBAAkB,eAAe,GACjG,SAAAm+F,EAAQ,SACX,CAAA,SACC,KAAG,CAAA,UAAW,uCAAuCn+F,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IACpGm+F,EAAQ,OAAO,QAAQ,CAAC,CAAA,EAC5B,EACC79F,MAAA,KAAA,CAAG,UAAU,8BACZ,eAAC,OAAK,CAAA,UAAW,iEAAiEm+F,EAAoBN,EAAQ,MAAM,CAAC,GAClH,SAAAA,EAAQ,MACX,CAAA,EACF,EACA79F,EAAAA,IAAC,KAAG,CAAA,UAAW,uCAAuCN,EAAa,gBAAkB,eAAe,GACjG,SAAAm+F,EAAQ,UAAU,eACrB,CAAA,CAAA,EACC79F,EAAA,IAAA,KAAA,CAAG,UAAW,uCAAuCN,EAAa,gBAAkB,eAAe,GACjG,SAAAm+F,EAAQ,YAAcA,EAAQ,YAAY,iBAAmB,GAChE,CAAA,CAAA,GApBOA,EAAQ,EAqBjB,CACD,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGC5jE,EAAa,GACXj6B,MAAA,MAAA,CAAI,UAAW,8CAA8CN,EAAa,2BAA6B,0BAA0B,GAChI,SAAAM,EAAAA,IAAC,OAAI,UAAU,aACZ,eAAM,KAAK,CAAE,OAAQi6B,CAAW,EAAG,CAAC1rB,EAAGC,IACtCxO,EAAA,IAAC,SAAA,CAEC,QAAS,IAAMmmF,EAAS33E,EAAI,CAAC,EAC7B,UAAW,8DACT5I,IAAgB4I,EAAI,EAChB,0BACA9O,EACE,8CACA,6CACR,GAEC,SAAI8O,EAAA,CAAA,EAVAA,EAAI,CAYZ,CAAA,CACH,CAAA,CACF,CAAA,CAAA,EAEJ,EAGDxO,MAAA,MAAA,CAAI,UAAW,QAAQN,EAAa,iBAAmB,YAAY,WAAWA,EAAa,qBAAuB,iBAAiB,kBAClI,SAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAxE,MAACi8E,IAAc,UAAW,oBAAoBv8E,EAAa,gBAAkB,eAAe,GAAI,SAC/F,MACC,CAAA,SAAA,CAAAM,EAAAA,IAAC,KAAE,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,GAAI,SAAqB,uBAAA,CAAA,EAC5GM,EAAAA,IAAC,KAAE,UAAW,gBAAgBN,EAAa,mBAAqB,eAAe,GAAI,SAInF,gRAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,CCtMA,MAAMy4E,GAAgB,IAAM,CACpB,KAAA,CAAE,WAAAz4E,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,iBAAiB5O,EAAa,cAAgB,aAAa,cACtE,QAAS,CACP,QAAS,CAAC,GAAK,GAAK,EAAG,CACzB,EACA,WAAY,CACV,SAAU,IACV,OAAQ,IACR,KAAM,WAAA,CACR,CACF,CAEJ,EAEM6+F,GAAkB,IAAM,CACtB,KAAA,CAAE,WAAA7+F,CAAW,EAAIO,GAAS,EAE9B,OAAAD,EAAA,IAAC,OAAI,UAAU,YACZ,UAAC,EAAG,EAAG,CAAC,EAAE,IAAKwO,GACbxO,EAAA,IAAA,MAAA,CAAY,UAAW,GAAGN,EAAa,cAAgB,UAAU,4BAChE,SAAA8E,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,MAACm4E,IAAc,CAAA,EACjB,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,EACF,EACA3zE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,MAAC,MAAI,CAAA,UAAU,WACb,SAAAA,MAACm4E,IAAc,CAAA,EACjB,QACC,MAAI,CAAA,UAAU,WACb,SAAAn4E,EAAA,IAACm4E,KAAc,CACjB,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAAA,EA1BQ3pE,CA2BV,CACD,EACH,CAEJ,EAEMgwF,GAAiBjkE,GAAW,CAChC,OAAQA,EAAQ,CACd,IAAK,WACI,OAAAv6B,EAAA,IAACsE,GAAc,CAAA,UAAU,wBAAyB,CAAA,EAC3D,IAAK,WACI,OAAAtE,EAAA,IAACy+F,GAAU,CAAA,UAAU,sBAAuB,CAAA,EACrD,QACS,OAAAz+F,EAAA,IAAC0+F,GAAQ,CAAA,UAAU,yBAA0B,CAAA,CAAA,CAE1D,EAEMhW,GAAiB,CAACnuD,EAAQ76B,IAAe,CAC7C,OAAQ66B,EAAQ,CACd,IAAK,WACH,OAAO76B,EACH,4DACA,4DACN,IAAK,WACH,OAAOA,EACH,sDACA,+CACN,QACE,OAAOA,EACH,+DACA,uDAAA,CAEV,EAEMi/F,GAAiBpkE,GAAW,CAChC,OAAQA,EAAQ,CACd,IAAK,WACI,MAAA,WACT,IAAK,WACI,MAAA,WACT,QACS,MAAA,YAAA,CAEb,EAEA,SAAwBqkE,IAAU,CAC1B,KAAA,CAAE,KAAAz9F,CAAK,EAAImC,GAAa,EACxB,CAAE,WAAA5D,CAAW,EAAIO,GAAS,EAC1B,CAACoB,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAACi/F,EAASC,CAAU,EAAIl/F,EAAAA,SAAS,CAAA,CAAE,EAEzCE,EAAAA,UAAU,IAAM,CACVqB,GAAM,KACK49F,EAAA,CACf,EACC,CAAC59F,CAAI,CAAC,EAET,MAAM49F,EAAe,SAAY,CAC3B,GAAA,CACF,MAAMd,EAAe17F,GACnBC,GAAW9B,GAAI,gBAAgB,EAC/B+B,GAAM,UAAW,KAAMtB,EAAK,GAAG,EAC/B0F,GAAQ,YAAa,MAAM,CAC7B,EAEMm4F,GADW,MAAMr8F,GAAQs7F,CAAY,GACd,KAAK,IAAYl8F,IAAA,CAC5C,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,EACZ,UAAWA,EAAI,OAAO,WAAW,OAAO,EACxC,YAAaA,EAAI,KAAK,EAAE,aAAa,OAAO,CAAA,EAC5C,EACF+8F,EAAWE,CAAW,QACfp8F,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,EAAM,MAAM,+BAA+B,CAAA,QAC3C,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEA,OAAID,QACMk9F,GAAgB,EAAA,SAIvB,MAAI,CAAA,UAAW,mCAAmC7+F,EAAa,cAAgB,YAAY,GAC1F,SAAA,CAAAM,EAAAA,IAAC,MAAG,UAAW,qBAAqBN,EAAa,gBAAkB,eAAe,GAAI,SAAc,gBAAA,CAAA,EAEnGm/F,EAAQ,SAAW,EAClB7+F,EAAAA,IAAC,OAAI,UAAW,GAAGN,EAAa,cAAgB,UAAU,wCACxD,SAACM,EAAA,IAAA,IAAA,CAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAI,oCAAwB,CAC7F,CAAA,QAEC,MAAI,CAAA,UAAU,YACZ,SAAQm/F,EAAA,IAAKf,GACZ99F,EAAAA,IAAC,OAAoB,UAAW,GAAGN,EAAa,cAAgB,UAAU,gCAAgCA,EAAa,yCAA2C,wCAAwC,kCACxM,SAAA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAAAxE,EAAAA,IAAC,OAAI,UAAU,wCACb,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAA,OAAC,MAAG,UAAW,2BAA2B9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,UAClFo+F,EAAO,QAAQ,MAAM,EAAE,CAAA,EACjC,EACAt5F,EAAAA,KAAC,QAAK,UAAW,0EAA0EkkF,GAAeoV,EAAO,OAAQp+F,CAAU,CAAC,GACjI,SAAA,CAAA8+F,GAAcV,EAAO,MAAM,EAC3Ba,GAAcb,EAAO,MAAM,CAAA,CAC9B,CAAA,CAAA,EACF,SACC,IAAE,CAAA,UAAW,WAAWp+F,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,gBAC3Do+F,EAAO,UAAU,eAAe,CAAA,CAChD,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEAt5F,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,OAAI,UAAW,GAAG9E,EAAa,kBAAoB,gBAAgB,kBAClE,SAAA,CAAAM,EAAA,IAAC,MAAI,CAAA,UAAU,+BACb,SAAAA,EAAAA,IAAC,OAAK,CAAA,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,SAAA,QAAM,CAAA,EACpG,SACC,IAAE,CAAA,UAAW,qBAAqBA,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,IACjFo+F,EAAO,OAAO,QAAQ,CAAC,EAAE,UAAE,OAAK,CAAA,UAAU,iBAAkB,SAAOA,EAAA,aAAa,cAAc,KAAM,CAAA,CAAA,CACxG,CAAA,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAA99F,EAAAA,IAAC,QAAK,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,cAAe,SAAe,iBAAA,CAAA,QACnH,MAAI,CAAA,UAAW,GAAGA,EAAa,cAAgB,YAAY,kBAC1D,SAAAM,EAAAA,IAAC,OAAK,CAAA,UAAW,WAAWN,EAAa,gBAAkB,eAAe,uBACvE,SAAAo+F,EAAO,cACV,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAt5F,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,cAAe,SAAO,SAAA,CAAA,EAC5GM,EAAAA,IAAC,OAAI,UAAW,gDAAgDN,EAAa,cAAgB,YAAY,cACvG,SAAAM,EAAAA,IAAC,OAAK,CAAA,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GACvE,SAAOo+F,EAAA,aAAa,cAAc,UAAY,KAAO,WAAa,SACrE,CAAA,CACF,CAAA,CAAA,EACF,EAECA,EAAO,SAAW,YAAcA,EAAO,wBACrC,MACC,CAAA,SAAA,CAAA99F,EAAAA,IAAC,QAAK,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,cAAe,SAAgB,kBAAA,CAAA,EACrHM,EAAA,IAAC,MAAI,CAAA,UAAW,GAAGN,EAAa,sCAAwC,oCAAoC,yBAC1G,SAAA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACxE,EAAAA,IAAA,OAAA,CAAK,UAAW,WAAWN,EAAa,gBAAkB,eAAe,sBACvE,WAAO,eACV,CAAA,EACA8E,EAAA,KAAC,IAAA,CACC,KAAM,GAAGs5F,EAAO,aAAa,cAAc,UAAY,KACnD,8CACA,6BACJ,GAAGA,EAAO,eAAe,GACzB,OAAO,SACP,IAAI,sBACJ,UAAU,qFAEV,SAAA,CAAC99F,EAAA,IAAA,OAAA,CAAK,UAAU,sBAAsB,SAAI,OAAA,EAC1CA,EAAAA,IAACi/F,GAAe,CAAA,UAAU,aAAc,CAAA,CAAA,CAAA,CAAA,CAC1C,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGDnB,EAAO,SAAW,WACjBt5F,EAAA,KAAC,MACC,CAAA,SAAA,CAAAxE,EAAAA,IAAC,QAAK,UAAW,uBAAuBN,EAAa,gBAAkB,eAAe,cAAe,SAAY,cAAA,CAAA,EACjHM,EAAAA,IAAC,OAAI,UAAW,gDAAgDN,EAAa,cAAgB,YAAY,cACvG,SAACM,EAAAA,IAAA,OAAA,CAAK,UAAW,WAAWN,EAAa,gBAAkB,eAAe,GACvE,WAAO,YAAY,eAAA,CACtB,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAtFQ,EAAAo+F,EAAO,EAuFjB,CACD,CACH,CAAA,CAAA,EAEJ,CAEJ,CClPA,SAAwBoB,IAAqB,CACrC,KAAA,CAAE,WAAAx/F,CAAW,EAAIO,GAAS,EAE1Bk/F,EAAW,CACf,CACE,MAAO,oBACP,KAAMn/F,EAAAA,IAACo/F,GAAQ,CAAA,UAAU,SAAU,CAAA,EACnC,MAAO,CACL,2DACA,oDACA,iEACA,iEAAA,CAEJ,EACA,CACE,MAAO,4BACP,KAAMp/F,EAAAA,IAACoE,GAAa,CAAA,UAAU,SAAU,CAAA,EACxC,MAAO,CACL,2DACA,+EACA,qDACA,8CAAA,CAEJ,EACA,CACE,MAAO,gCACP,KAAMpE,EAAAA,IAACq/F,GAAQ,CAAA,UAAU,SAAU,CAAA,EACnC,MAAO,CACL,qDACA,kEACA,2EACA,iEAAA,CAEJ,EACA,CACE,MAAO,4BACP,KAAMr/F,EAAAA,IAACiO,GAAY,CAAA,UAAU,SAAU,CAAA,EACvC,MAAO,CACL,yDACA,yDACA,4DACA,2DACA,qDAAA,CAEJ,EACA,CACE,MAAO,0BACP,KAAMjO,EAAAA,IAACoE,GAAa,CAAA,UAAU,SAAU,CAAA,EACxC,MAAO,CACL,0CACA,+DACA,0DACA,6DACA,8CACA,0FACA,uGAAA,CAEJ,EACA,CACE,MAAO,qBACP,KAAMpE,EAAAA,IAACs/F,GAAY,CAAA,UAAU,SAAU,CAAA,EACvC,MAAO,CACL,kDACA,wEACA,gEACA,2EACA,0FACA,+DACA,kGACA,0FAAA,CAEJ,EACA,CACE,MAAO,mBACP,KAAMt/F,EAAAA,IAACu/F,GAAS,CAAA,UAAU,SAAU,CAAA,EACpC,MAAO,CACL,sDACA,6DACA,yDACA,gEACA,mEAAA,CAEJ,EACA,CACE,MAAO,mBACP,KAAMv/F,EAAAA,IAACw/F,GAAO,CAAA,UAAU,SAAU,CAAA,EAClC,MAAO,CACL,yDACA,4DACA,8DACA,kEAAA,CAEJ,EACA,CACE,MAAO,kBACP,KAAMx/F,EAAAA,IAACuE,GAAW,CAAA,UAAU,SAAU,CAAA,EACtC,MAAO,CACL,mEACA,+CACA,8CACA,gEACA,2DACA,uGACA,0EAAA,CACF,CAEJ,EAEA,cACG,MAAI,CAAA,UAAW,+BAA+B7E,EAAa,cAAgB,YAAY,GACtF,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,2BAA2BN,EAAa,gBAAkB,eAAe,GAAI,SAAoB,sBAAA,CAAA,EAChHM,EAAAA,IAAC,KAAE,UAAW,GAAGN,EAAa,gBAAkB,eAAe,qBAAsB,SAGrF,mKAAA,CAAA,CAAA,EACF,EAEAM,EAAAA,IAAC,OAAI,UAAU,YACZ,WAAS,IAAI,CAACy/F,EAASv1F,IACtBlK,EAAA,IAAC,MAAA,CAEC,UAAW,GAAGN,EAAa,cAAgB,UAAU,uFAErD,SAAA8E,EAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAxE,EAAA,IAAC,MAAI,CAAA,UAAU,gDACZ,SAAAy/F,EAAQ,KACX,EACAz/F,EAAAA,IAAC,MAAG,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GACnF,SAAA+/F,EAAQ,KACX,CAAA,CAAA,EACF,EACCz/F,EAAA,IAAA,KAAA,CAAG,UAAU,YACX,SAAQy/F,EAAA,MAAM,IAAI,CAAC96F,EAAM+6F,IACvBl7F,OAAA,KAAA,CAAmB,UAAU,yBAC5B,SAAA,CAACxE,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAC,IAAA,EACzCA,EAAAA,IAAC,QAAK,UAAW,GAAGN,EAAa,gBAAkB,eAAe,GAAK,SAAKiF,CAAA,CAAA,CAAA,CAFrE,EAAA+6F,CAGT,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EApBKD,EAAQ,KAsBhB,CAAA,EACH,EAEAj7F,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAA,OAAC,KAAE,UAAW,GAAG9E,EAAa,gBAAkB,eAAe,GAAI,SAAA,CAAA,iBAAe,IAAI,KAAK,EAAE,mBAAmB,CAAA,EAAE,EAClHM,EAAAA,IAAC,KAAE,UAAW,QAAQN,EAAa,gBAAkB,eAAe,GAAI,SAGxE,oIAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,CCxJA,SAAwBigG,IAAiB,CACjC,KAAA,CAAE,WAAAjgG,CAAW,EAAIO,GAAS,EAC1B,CAAC4C,EAAOgwE,CAAQ,EAAIjzE,EAAAA,SAAS,EAAE,EAC/B,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C,CAAE,cAAAggG,CAAc,EAAIt8F,GAAa,EAEjC6gB,EAAe,MAAO3c,GAAM,CAChCA,EAAE,eAAe,EACjBu9B,EAAa,EAAI,EAEb,GAAA,CACF,MAAM66D,EAAc/8F,CAAK,QAElBD,EAAO,CACRQ,EAAA,MAAMR,EAAM,OAAO,CAAA,QACzB,CACAmiC,EAAa,EAAK,CAAA,CAEtB,EAEA,aACG,MAAI,CAAA,UAAW,gBAAgBrlC,EAAa,cAAgB,cAAc,wCACzE,SAAA8E,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAW,6BAA6B5O,EAAa,cAAgB,UAAU,6BAE/E,SAAA,CAAC8E,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAxE,EAAAA,IAAC,MAAG,UAAW,sBAAsBN,EAAa,aAAe,eAAe,GAAI,SAAc,gBAAA,CAAA,EAClGM,EAAAA,IAAC,KAAE,UAAW,gBAAgBN,EAAa,gBAAkB,eAAe,GAAI,SAEhF,4EAAA,CAAA,CAAA,EACF,EAEC8E,EAAA,KAAA,OAAA,CAAK,SAAU2f,EAAc,UAAU,iBACtC,SAAA,CAAA3f,OAAC,MACC,CAAA,SAAA,CAACxE,EAAAA,IAAA,QAAA,CAAM,QAAQ,QAAQ,UAAW,6BAA6BN,EAAa,gBAAkB,eAAe,GAAI,SAEjH,eAAA,CAAA,EACAM,EAAA,IAAC,QAAA,CACC,GAAG,QACH,KAAK,QACL,KAAK,QACL,SAAQ,GACR,MAAO6C,EACP,SAAW2E,GAAMqrE,EAASrrE,EAAE,OAAO,KAAK,EACxC,UAAW,sCAAsC9H,EAAa,8DAAgE,oDAAoD,sHAClL,YAAY,kBAAA,CAAA,CACd,EACF,EAEA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAU8kC,EACV,UAAU,gSAET,WAAY,wBAA0B,iBAAA,CACzC,EAEA9kC,EAAAA,IAAC,MAAI,CAAA,UAAU,cACb,SAAAA,EAAA,IAAC4E,GAAA,CACC,GAAG,qBACH,UAAW,uBAAuBlF,EAAa,iCAAmC,mCAAmC,GACtH,SAAA,eAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,EAEJ,CAEJ,CCzEA,SAAwBmgG,IAAgB,CACtC,KAAM,CAACC,EAAaC,CAAc,EAAIngG,EAAAA,SAAS,EAAE,EAC3C,CAACogG,EAAiBC,CAAkB,EAAIrgG,EAAAA,SAAS,EAAE,EACnD,CAACklC,EAAWC,CAAY,EAAInlC,EAAAA,SAAS,EAAK,EAC1C,CAACsgG,EAAaC,CAAc,EAAIvgG,EAAAA,SAAS,EAAI,EAC7C,CAACwgG,EAASC,CAAU,EAAIzgG,EAAAA,SAAS,EAAE,EACnCyiB,EAAWC,GAAY,EACvB9e,EAAWC,GAAY,EAE7B3D,EAAAA,UAAU,IAAM,CAGR,MAAAwgG,EADc,IAAI,gBAAgB98F,EAAS,MAAM,EAC9B,IAAI,SAAS,EAEtC,GAAI,CAAC88F,EAAM,CACTl9F,EAAM,MAAM,6BAA6B,EACzCif,EAAS,oBAAoB,EAC7B,MAAA,CAIFk+E,GAAwB//F,GAAM8/F,CAAI,EAC/B,KAAK,IAAM,CACVD,EAAWC,CAAI,EACfH,EAAe,EAAK,CAAA,CACrB,EACA,MAAOv9F,GAAU,CACR,QAAA,MAAM,8BAA+BA,CAAK,EAClDQ,EAAM,MAAM,oDAAoD,EAChEif,EAAS,oBAAoB,CAAA,CAC9B,CAAA,EACF,CAACA,EAAU7e,CAAQ,CAAC,EAEjB,MAAA2gB,EAAe,MAAO3c,GAAM,CAGhC,GAFAA,EAAE,eAAe,EAEbs4F,IAAgBE,EAAiB,CACnC58F,EAAM,MAAM,wBAAwB,EACpC,MAAA,CAGE,GAAA08F,EAAY,OAAS,EAAG,CAC1B18F,EAAM,MAAM,6CAA6C,EACzD,MAAA,CAGF2hC,EAAa,EAAI,EAEb,GAAA,CACI,MAAAy7D,GAAqBhgG,GAAM4/F,EAASN,CAAW,EACrD18F,EAAM,QAAQ,mEAAmE,EACjFif,EAAS,oBAAoB,QACtBzf,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EAC1CQ,EAAA,MAAMR,EAAM,OAAO,CAAA,QACzB,CACAmiC,EAAa,EAAK,CAAA,CAEtB,EAEA,OAAIm7D,EAEAlgG,EAAAA,IAAC,MAAI,CAAA,UAAU,iEACb,SAAAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,UAAU,cAEV,SAAA,CAACtO,EAAAA,IAAA,MAAA,CAAI,UAAU,iGAAkG,CAAA,EAChHA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAuB,yBAAA,CAAA,CAAA,CAAA,CAAA,EAExD,EAKFA,EAAAA,IAAC,MAAI,CAAA,UAAU,iEACb,SAAAwE,EAAA,KAAC8J,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,UAAU,+DAEV,SAAA,CAAC9J,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAgB,mBAAA,EAChEA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,uCAAA,CAAA,CAAA,EACF,EAECwE,EAAA,KAAA,OAAA,CAAK,SAAU2f,EAAc,UAAU,iBACtC,SAAA,CAAC3f,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,MAAC,QAAM,CAAA,QAAQ,cAAc,UAAU,0CAA0C,SAEjF,eAAA,EACAA,EAAA,IAAC,QAAA,CACC,GAAG,cACH,KAAK,cACL,KAAK,WACL,SAAQ,GACR,MAAO8/F,EACP,SAAWt4F,GAAMu4F,EAAev4F,EAAE,OAAO,KAAK,EAC9C,UAAU,wKACV,YAAY,oBAAA,CAAA,CACd,EACF,SAEC,MACC,CAAA,SAAA,CAAAxH,MAAC,QAAM,CAAA,QAAQ,kBAAkB,UAAU,0CAA0C,SAErF,uBAAA,EACAA,EAAA,IAAC,QAAA,CACC,GAAG,kBACH,KAAK,kBACL,KAAK,WACL,SAAQ,GACR,MAAOggG,EACP,SAAWx4F,GAAMy4F,EAAmBz4F,EAAE,OAAO,KAAK,EAClD,UAAU,wKACV,YAAY,sBAAA,CAAA,CACd,CACF,CAAA,CAAA,EACF,EAEAxH,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAU8kC,EACV,UAAU,gSAET,WAAY,wBAA0B,gBAAA,CAAA,CACzC,CACF,CAAA,CAAA,CAAA,CAAA,EAEJ,CAEJ,CCnIA,MAAM27D,GAAkB,IAAM,CACtB,KAAA,CAAE,WAAA/gG,CAAW,EAAIO,GAAS,EAE9B,OAAAuE,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,YAAY5O,EAAa,cAAgB,aAAa,WACjE,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,GAAS,CAAA,CAAA,EAElD,QACC,MAAI,CAAA,UAAU,kBACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC6O,EAAGC,IACpBhK,EAAA,KAAA,MAAA,CAAY,UAAU,eACrB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,YAAY5O,EAAa,cAAgB,aAAa,WACjE,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,IAAU,MAAO8O,EAAI,EAAI,CAAA,CAChE,EACAxO,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,WAAW5O,EAAa,cAAgB,aAAa,gBAChE,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,IAAU,MAAO8O,EAAI,EAAI,CAAA,CAAA,CAChE,EACF,EACAxO,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,YAAY5O,EAAa,cAAgB,aAAa,WACjE,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,IAAU,MAAO8O,EAAI,EAAI,CAAA,CAAA,CAChE,CAjBQ,EAAAA,CAkBV,CACD,CACH,CAAA,CAAA,EACF,EACAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,YAAY5O,EAAa,cAAgB,aAAa,WACjE,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,GAAS,CAAA,CAAA,EAElD,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACZ,SAAA,CAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC+J,EAAGC,IACpBxO,EAAAA,IAAA,MAAA,CAAY,UAAW,QAAQwO,EAAI,IAAM,EAAI,cAAgB,eAAe,GAC3E,SAAAxO,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,mBAAmBE,EAAI,IAAM,EAAI,cAAgB9O,EAAa,cAAgB,aAAa,IAAI8O,EAAI,IAAM,EAAI,OAAS,MAAM,GACvI,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,IAAU,MAAOA,EAAI,EAAI,CAAA,CAAA,CAChE,EALQA,CAMV,CACD,EAEDxO,EAAAA,IAAC,MAAI,CAAA,UAAU,qBACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,uBAAuB5O,EAAa,cAAgB,aAAa,cAC5E,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,GAAS,CAAA,CAAA,CAElD,CAAA,CAAA,EACF,EACAM,EAAAA,IAAC,MAAI,CAAA,UAAU,uBACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,QAAQ5O,EAAa,cAAgB,aAAa,cAC7D,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,GAAS,CAAA,CAAA,CAElD,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EAEMghG,GAAgB,CAAC,CAAE,QAAA79D,EAAS,YAAA89D,KAAkB,CAClD,GAAI99D,EAAQ,WAAa89D,EAAY,IAAY,OAAA,KAE3C,MAAAC,EAAW/wF,GACVA,EACQA,EAAU,OAAO,EAClB,mBAAmB,QAAS,CAAE,KAAM,UAAW,OAAQ,UAAW,EAFvD,GAMvB,OAAArL,EAAA,KAAC,MAAI,CAAA,UAAU,uCACb,SAAA,CAAAxE,MAAC,QAAK,UAAU,gBAAiB,SAAQ4gG,EAAA/9D,EAAQ,SAAS,EAAE,EAC5Dr+B,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACZ,SAAA,CAAA,CAACq+B,EAAQ,WAAc7iC,EAAA,IAAAs5B,GAAA,CAAQ,UAAU,UAAU,EACnDuJ,EAAQ,WAAa,CAACA,EAAQ,MAAS7iC,EAAA,IAAA6gG,GAAA,CAAc,UAAU,UAAU,EACzEh+D,EAAQ,WAAaA,EAAQ,MAAS7iC,EAAA,IAAA6gG,GAAA,CAAc,UAAU,wBAAyB,CAAA,CAAA,CAC1F,CAAA,CAAA,EACF,CAEJ,EAEMC,GAAU,CAAC,CAAE,QAAAj+D,EAAS,YAAA89D,EAAa,OAAAI,EAAQ,SAAAC,KAAe,CAC9D,KAAM,CAACC,EAAWC,CAAY,EAAIthG,EAAAA,SAAS,EAAK,EAC1C,CAACuhG,EAAYC,CAAa,EAAIxhG,EAAAA,SAASijC,EAAQ,IAAI,EACnDw+D,EAAex+D,EAAQ,WAAa89D,EAAY,IAChDt+E,EAAWC,GAAY,EACvB,CAAE,WAAA5iB,CAAW,EAAIO,GAAS,EAE1BqhG,EAAqBC,GACxBvhG,EAAAA,IAAA,MAAA,CAAI,UAAW,QAAQqhG,EAAe,UAAY,EAAE,iBACnD,SAAA78F,EAAA,KAAC,SAAA,CACC,QAAS,IAAM6d,EAAS,wBAAwBk/E,EAAY,SAAS,EAAE,EACvE,UAAW,iFACTF,EACI3hG,EAAa,qBAAuB,kBACpCA,EAAa,kBAAoB,iBACvC,GAEA,SAAA,CAAAM,EAAA,IAAC,MAAA,CACC,IAAKuhG,EAAY,MACjB,IAAKA,EAAY,KACjB,UAAU,0BAAA,CACZ,SACC,MAAI,CAAA,UAAW,OAAO7hG,EAAa,cAAgB,UAAU,aAC5D,SAAA,CAACM,EAAAA,IAAA,KAAA,CAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GACzE,WAAY,IACf,CAAA,EACAM,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,QACpE,SAAA6hG,EAAY,WACf,CAAA,EACA/8F,EAAAA,KAAC,IAAE,CAAA,UAAU,kCAAkC,SAAA,CAAA,IAC3C+8F,EAAY,MAAM,QAAQ,CAAC,CAAA,CAC/B,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,EAEJ,EAGIC,EAAa,IAAM,CAChBT,EAAAl+D,EAAQ,GAAIs+D,CAAU,EAC7BD,EAAa,EAAK,CACpB,EAEMO,EAAiBj6F,GAAM,CACvBA,EAAE,MAAQ,SAAW,CAACA,EAAE,WAC1BA,EAAE,eAAe,EACNg6F,EAAA,GAETh6F,EAAE,MAAQ,WACZ05F,EAAa,EAAK,EAClBE,EAAcv+D,EAAQ,IAAI,EAE9B,EAEA,aACG,MAAI,CAAA,UAAW,QAAQw+D,EAAe,aAAe,EAAE,GACtD,SAAArhG,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAAtO,EAAAA,IAAC,OAAI,UAAU,8BACZ,WACEwE,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAxE,EAAA,IAAC,WAAA,CACC,MAAOmhG,EACP,SAAW35F,GAAM45F,EAAc55F,EAAE,OAAO,KAAK,EAC7C,UAAWi6F,EACX,UAAW,8IACT/hG,EACI,4CACA,+BACN,GACA,UAAS,EAAA,CACX,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,QAASg9F,EACT,UAAW,8BACT9hG,EAAa,uBAAyB,kBACxC,0DAEA,SAAA,CAACM,EAAAA,IAAAs5B,GAAA,CAAQ,UAAU,SAAU,CAAA,EAC5Bt5B,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAI,MAAA,CAAA,CAAA,CAAA,CAChC,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACb08F,EAAa,EAAK,EAClBE,EAAcv+D,EAAQ,IAAI,CAC5B,EACA,UAAW,eACTnjC,EACI,kCACA,iCACN,0DAEA,SAAA,CAACM,EAAAA,IAAAkgB,GAAA,CAAI,UAAU,SAAU,CAAA,EACxBlgB,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAM,QAAA,CAAA,CAAA,CAAA,CAAA,CAClC,CACF,CAAA,CAAA,CAAA,CACF,EAGEA,EAAA,IAAA+S,WAAA,CAAA,SAAA/S,EAAA,IAAC,MAAA,CACC,UAAW,qCAAqCqhG,EAAe,UAAY,EAAE,GAE7E,SAAA78F,EAAA,KAAC,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAA68F,GAAgB,CAACx+D,EAAQ,aACvBr+B,EAAAA,KAAA,MAAA,CAAI,UAAU,+EACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkhG,EAAa,EAAI,EAChC,UAAW,SACTxhG,EACI,0DACA,qDACN,kCAEA,SAAAM,EAAAA,IAAC0hG,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAChC,EACA1hG,EAAA,IAAC,SAAA,CACC,QAAS,IAAMghG,EAASn+D,EAAQ,EAAE,EAClC,UAAW,SACTnjC,EACI,uDACA,kDACN,kCAEA,SAAAM,EAAAA,IAACmiB,GAAQ,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC/B,EACF,SAED,MACC,CAAA,SAAA,CAAAniB,EAAA,IAAC,MAAA,CACC,UAAW,2BACTqhG,EACI,0BACA3hG,EACE,4BACA,2BACR,GAEA,SAACM,EAAAA,IAAA,IAAA,CAAE,UAAU,4CACV,WAAQ,IACX,CAAA,CAAA,CACF,EACC6iC,EAAQ,QACP7iC,EAAAA,IAAC,MAAI,CAAA,UAAW,WAAWN,EAAa,gBAAkB,eAAe,qBAAsB,SAE/F,QAAA,CAAA,EAEDmjC,EAAQ,aAAey+D,EAAkBz+D,EAAQ,WAAW,EAC7D7iC,EAAAA,IAAC0gG,GAAc,CAAA,QAAA79D,EAAkB,YAAA89D,CAA0B,CAAA,CAAA,CAC7D,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CAEJ,CAAA,CAAA,CAAA,EAEJ,CAEJ,EAEMgB,GAAQ,IAAM,CACZ,KAAA,CAAE,eAAAxP,CAAe,EAAIv3D,GAAU,EAC/BvY,EAAWC,GAAY,EACvB,CAAE,KAAAnhB,CAAK,EAAImC,GAAa,EACxB,CAACs+F,EAAeC,CAAgB,EAAIjiG,EAAAA,SAAS,CAAA,CAAE,EAC/C,CAACkiG,EAAqBC,CAAsB,EAAIniG,EAAAA,SAAS,IAAI,EAC7D,CAACghC,EAAU6D,CAAW,EAAI7kC,EAAAA,SAAS,CAAA,CAAE,EACrC,CAAC8kC,EAAYC,CAAa,EAAI/kC,EAAAA,SAAS,EAAE,EACzColC,EAAiBnN,SAAO,IAAI,EAC5B,CAACx2B,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAE,WAAAF,CAAW,EAAIO,GAAS,EAEhCH,EAAAA,UAAU,IAAM,CACd,GAAI,CAACqB,EAAM,OAGX,MAAMmB,EAAIC,GACRC,GAAW9B,GAAI,eAAe,EAC9B+B,GAAM,eAAgB,iBAAkBtB,EAAK,GAAG,EAChD0F,GAAQ,YAAa,MAAM,CAC7B,EAEMlF,EAAc4U,GAAWjU,EAAIkU,GAAa,CAC9C,MAAMwrF,EAAoBxrF,EAAS,KAAK,IAAIzU,IAAQ,CAClD,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EACF8/F,EAAiBG,CAAiB,EAClC1gG,EAAW,EAAK,CAAA,CACjB,EAED,MAAO,IAAMK,EAAY,CAAA,EACxB,CAACR,CAAI,CAAC,EAETrB,EAAAA,UAAU,IAAM,CACd,GAAI,CAACqyF,EAAgB,OAGrB,MAAM7vF,EAAIC,GACRC,GAAW9B,GAAI,UAAU,EACzB+B,GAAM,iBAAkB,KAAM0vF,CAAc,EAC5CtrF,GAAQ,YAAa,KAAK,CAC5B,EAEMlF,EAAc4U,GAAWjU,EAAIkU,GAAa,CAC9C,MAAMyrF,EAAezrF,EAAS,KAAK,IAAIzU,IAAQ,CAC7C,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EAIF,GAHA0iC,EAAYw9D,CAAY,EAGpBH,EAAqB,CAEjB,MAAAprB,EAAiBlgE,EAAS,KAAK,OAAOzU,GAC1CA,EAAI,KAAK,EAAE,WAAaZ,EAAK,MAC5B,CAACY,EAAI,KAAO,EAAA,MAAQ,CAACA,EAAI,KAAO,EAAA,UACnC,EAGI,GAAA20E,EAAe,OAAS,EAAG,CACvB,MAAAlmD,EAAQ83D,GAAW5nF,EAAE,EACZg2E,EAAA,QAAQ30E,GAAO,CACtByuB,EAAA,OAAOzuB,EAAI,IAAK,CACpB,UAAW,GACX,KAAM,EAAA,CACP,CAAA,CACF,EACDyuB,EAAM,OAAO,CAAA,CAIf1f,GAAU/O,GAAIrB,GAAI,gBAAiByxF,CAAc,EAAG,CAClD,CAAC,eAAehxF,EAAK,GAAG,EAAE,EAAG,CAAA,CAC9B,CAAA,CACH,CACD,EAED,MAAO,IAAMQ,EAAY,CAAA,EACxB,CAACwwF,EAAgB2P,CAAmB,CAAC,EAExChiG,EAAAA,UAAU,IAAM,CAEd,MAAMoiG,EAAeN,EAAc,KAAUziB,GAAAA,EAAE,KAAOgT,CAAc,EACpE4P,EAAuBG,CAAY,CAAA,EAClC,CAAC/P,EAAgByP,CAAa,CAAC,EAElC9hG,EAAAA,UAAU,IAAM,CAEdklC,EAAe,SAAS,eAAe,CAAE,SAAU,SAAU,CAAA,EAC5D,CAACpE,CAAQ,CAAC,EAEP,MAAAuhE,EAAoB,MAAO36F,GAAM,CAEjC,GADJA,EAAE,eAAe,EACb,CAACk9B,EAAW,OAAQ,OAElB,MAAA09D,EAAc19D,EAAW,KAAK,EACpCC,EAAc,EAAE,EAEZ,GAAA,CAEF,MAAMhvB,GAAOnT,GAAW9B,GAAI,UAAU,EAAG,CACvC,eAAAyxF,EACA,SAAUhxF,EAAK,IACf,KAAMihG,EACN,UAAWhsF,GAAgB,EAC3B,UAAW,GACX,KAAM,EAAA,CACP,EAGD,MAAMtF,GAAU/O,GAAIrB,GAAI,gBAAiByxF,CAAc,EAAG,CACxD,YAAaiQ,EACb,gBAAiBhsF,GAAgB,EACjC,CAAC,eAAe0rF,EAAoB,QAAQ,EAAE,GAAIA,EAAoB,cAAcA,EAAoB,QAAQ,GAAK,GAAK,EAC1H,UAAW1rF,GAAgB,CAAA,CAC5B,QACMxT,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7CQ,EAAM,MAAM,wBAAwB,EACpCuhC,EAAcy9D,CAAW,CAAA,CAE7B,EAEMC,EAAoB,MAAO/gE,EAAWghE,IAAY,CAClD,GAACA,EAAQ,OAET,GAAA,CACF,MAAMxxF,GAAU/O,GAAIrB,GAAI,WAAY4gC,CAAS,EAAG,CAC9C,KAAMghE,EAAQ,KAAK,EACnB,OAAQ,GACR,SAAUlsF,GAAgB,CAAA,CAC3B,QACMxT,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7CQ,EAAM,MAAM,wBAAwB,CAAA,CAExC,EAEMm/F,EAAsB,MAAOjhE,GAAc,CAC3C,GAAA,CACF,MAAME,GAAUz/B,GAAIrB,GAAI,WAAY4gC,CAAS,CAAC,EAC9Cl+B,EAAM,QAAQ,iBAAiB,QACxBR,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,EAAM,MAAM,0BAA0B,CAAA,CAE1C,EAEA,OAAI/B,EAEArB,EAAAA,IAAC,MAAI,CAAA,UAAW,gBAAgBN,EAAa,cAAgB,YAAY,GACvE,SAACM,EAAAA,IAAA,MAAA,CAAI,UAAU,wBACb,eAAC,MAAI,CAAA,UAAW,GAAGN,EAAa,cAAgB,UAAU,wCACxD,SAACM,EAAA,IAAAygG,GAAA,CAAgB,CAAA,CACnB,CAAA,CACF,CAAA,EACF,EAKFzgG,EAAAA,IAAC,OAAI,UAAW,gBAAgBN,EAAa,cAAgB,8CAA8C,GACzG,SAAAM,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAW,GAAGN,EAAa,8BAAgC,0BAA0B,iEACxF,SAAA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,oBAEb,SAAA,CAAAA,OAAC,OAAI,UAAW,uBAAuB9E,EAAa,kBAAoB,iBAAiB,GACvF,SAAA,CAAAM,EAAAA,IAAC,OAAI,UAAW,gBAAgBN,EAAa,kBAAoB,iBAAiB,GAChF,SAAAM,EAAA,IAAC,KAAG,CAAA,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,mBAAQ,CAAA,EACpG,QACC,MAAI,CAAA,UAAU,wGACZ,SAAckiG,EAAA,IAAKM,GAClBliG,EAAA,IAAC,SAAA,CAEC,QAAS,IAAMqiB,EAAS,sBAAsB6/E,EAAa,EAAE,EAAE,EAC/D,UAAW,uBAAuBxiG,EAAa,uCAAyC,qCAAqC,mBAC3HwiG,EAAa,KAAO/P,EAAiBzyF,EAAa,iBAAmB,gBAAkB,EACzF,GAEA,SAAA8E,EAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iCACb,SAAA,CAACxE,EAAAA,IAAA,KAAA,CAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,aAC1EwiG,EAAa,cAAc/gG,EAAK,GAAG,EAAI,EAAI,YAAc,EAC3D,GACG,SAAKA,EAAA,MAAQ+gG,EAAa,QAAUA,EAAa,WAAaA,EAAa,SAC9E,CAAA,EACCA,EAAa,kBAAoB/gG,EAAK,MAAQ+gG,EAAa,SAC1D19F,EAAA,KAAC,MAAI,CAAA,UAAU,mDACb,SAAA,CAACxE,EAAAA,IAAAoO,GAAA,CAAsB,UAAU,+CAAgD,CAAA,EACjFpO,EAAAA,IAAC,OAAI,UAAW,mEAAmEN,EAAa,cAAgB,aAAa,oJAAqJ,SAElR,gBAAA,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,QACC,IAAE,CAAA,UAAW,oBACZwiG,EAAa,cAAc/gG,EAAK,GAAG,EAAI,EACnCzB,EAAa,4BAA8B,4BAC3CA,EAAa,gBAAkB,eACrC,GACG,SAAAwiG,EAAa,aAAe,kBAC/B,EACCA,EAAa,cAAc/gG,EAAK,GAAG,EAAI,GACtCqD,EAAA,KAAC,MAAI,CAAA,UAAU,8BACZ,SAAA,CAAa09F,EAAA,YAAY/gG,EAAK,GAAG,EAAE,QAAM+gG,EAAa,YAAY/gG,EAAK,GAAG,IAAM,EAAI,UAAY,UAAA,CACnG,CAAA,CAAA,EAEJ,EACC+gG,EAAa,cAAc/gG,EAAK,GAAG,EAAI,GACtCnB,EAAAA,IAAC,OAAK,CAAA,UAAU,2EACb,SAAAkiG,EAAa,YAAY/gG,EAAK,GAAG,CACpC,CAAA,CAAA,CAEJ,CAAA,CAAA,EAzCK+gG,EAAa,EAAA,CA2CrB,CACH,CAAA,CAAA,EACF,EAGAliG,EAAA,IAAC,OAAI,UAAW,cAAcN,EAAa,cAAgB,UAAU,GAClE,SAAAoiG,EAGGt9F,EAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAC/S,EAAA,IAAA,MAAA,CAAI,UAAW,gBAAgBN,EAAa,iCAAmC,6BAA6B,oBAC3G,SAAA8E,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMqiB,EAAS,EAAE,EAC1B,UAAW,mDAEX,SAAAriB,EAAAA,IAACi2E,GAAY,CAAA,UAAU,SAAU,CAAA,CAAA,CACnC,EACCj2E,EAAA,IAAA,KAAA,CAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GACzE,SAAAyB,EAAK,MAAQ2gG,EAAoB,QAAUA,EAAoB,WAAaA,EAAoB,SACnG,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGAt9F,EAAAA,KAAC,MAAI,CAAA,UAAU,yDACZ,SAAA,CAASo8B,EAAA,IAAKiC,GACb7iC,EAAA,IAAC8gG,GAAA,CAEC,QAAAj+D,EACA,YAAa1hC,EACb,OAAQkhG,EACR,SAAUE,CAAA,EAJL1/D,EAAQ,EAAA,CAMhB,EACD7iC,EAAAA,IAAC,MAAI,CAAA,IAAKglC,CAAgB,CAAA,CAAA,EAC5B,EAGChlC,EAAA,IAAA,OAAA,CAAK,SAAUmiG,EAAmB,UAAW,gBAAgBziG,EAAa,kBAAoB,iBAAiB,GAC9G,SAAC8E,EAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO0kC,EACP,SAAWl9B,GAAMm9B,EAAcn9B,EAAE,OAAO,KAAK,EAC7C,YAAY,oBACZ,UAAW,iIACT9H,EAAa,iEAAmE,+BAClF,EAAA,CACF,EACAM,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,oFAEV,SAAAA,EAAAA,IAACwiG,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC9B,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,EAEAh+F,EAAAA,KAAC,MAAI,CAAA,UAAU,iEACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAW,kBAAkBN,EAAa,gBAAkB,eAAe,GAC9E,SAACM,EAAAA,IAAAm3E,GAAA,CAAgB,UAAU,eAAgB,CAAA,EAC7C,QACC,IAAE,CAAA,UAAWz3E,EAAa,gBAAkB,gBAAiB,SAAwC,0CAAA,CAAA,CAAA,CAAA,CACxG,CAEJ,CAAA,CAAA,EACF,CAAA,CACF,CACF,CAAA,EACF,CAEJ,ECpiBM+gG,GAAkB,IAAM,CACtB,KAAA,CAAE,WAAA/gG,CAAW,EAAIO,GAAS,EAE9B,OAAAuE,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,YAAY5O,EAAa,cAAgB,aAAa,WACjE,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,GAAS,CAAA,CAAA,EAElD,QACC,MAAI,CAAA,UAAU,kBACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC6O,EAAGC,IACpBhK,EAAA,KAAA,MAAA,CAAY,UAAU,eACrB,SAAA,CAAAxE,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,YAAY5O,EAAa,cAAgB,aAAa,gBACjE,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,IAAU,MAAO8O,EAAI,EAAI,CAAA,CAChE,EACAxO,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,YAAY5O,EAAa,cAAgB,aAAa,WACjE,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,IAAU,MAAO8O,EAAI,EAAI,CAAA,CAAA,CAChE,CAVQ,EAAAA,CAWV,CACD,CACH,CAAA,CAAA,EACF,EACAhK,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,eACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,YAAY5O,EAAa,cAAgB,aAAa,WACjE,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,GAAS,CAAA,CAAA,EAElD,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACZ,SAAA,CAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC+J,EAAGC,IACpBxO,EAAAA,IAAA,MAAA,CAAY,UAAW,QAAQwO,EAAI,IAAM,EAAI,cAAgB,eAAe,GAC3E,SAAAxO,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,mBAAmBE,EAAI,IAAM,EAAI,cAAgB9O,EAAa,cAAgB,aAAa,IAAI8O,EAAI,IAAM,EAAI,OAAS,MAAM,GACvI,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,IAAU,MAAOA,EAAI,EAAI,CAAA,CAAA,CAChE,EALQA,CAMV,CACD,EAEDxO,EAAAA,IAAC,MAAI,CAAA,UAAU,qBACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,uBAAuB5O,EAAa,cAAgB,aAAa,cAC5E,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,GAAS,CAAA,CAAA,CAElD,CAAA,CAAA,EACF,EACAM,EAAAA,IAAC,MAAI,CAAA,UAAU,uBACb,SAAAA,EAAA,IAACsO,EAAO,IAAP,CACC,UAAW,QAAQ5O,EAAa,cAAgB,aAAa,cAC7D,QAAS,CAAE,QAAS,CAAC,GAAK,GAAK,EAAG,CAAE,EACpC,WAAY,CAAE,SAAU,IAAK,OAAQ,GAAS,CAAA,CAAA,CAElD,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EAEMghG,GAAgB,CAAC,CAAE,QAAA79D,EAAS,YAAA89D,KAAkB,CAClD,GAAI99D,EAAQ,WAAa89D,EAAY,IAAY,OAAA,KAE3C,MAAAC,EAAW/wF,GACVA,EACQA,EAAU,OAAO,EAClB,mBAAmB,QAAS,CAAE,KAAM,UAAW,OAAQ,UAAW,EAFvD,GAMvB,OAAArL,EAAA,KAAC,MAAI,CAAA,UAAU,uCACb,SAAA,CAAAxE,MAAC,QAAK,UAAU,gBAAiB,SAAQ4gG,EAAA/9D,EAAQ,SAAS,EAAE,EAC5Dr+B,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACZ,SAAA,CAAA,CAACq+B,EAAQ,WAAc7iC,EAAA,IAAAs5B,GAAA,CAAQ,UAAU,UAAU,EACnDuJ,EAAQ,WAAa,CAACA,EAAQ,MAAS7iC,EAAA,IAAA6gG,GAAA,CAAc,UAAU,UAAU,EACzEh+D,EAAQ,WAAaA,EAAQ,MAAS7iC,EAAA,IAAA6gG,GAAA,CAAc,UAAU,wBAAyB,CAAA,CAAA,CAC1F,CAAA,CAAA,EACF,CAEJ,EAEMC,GAAU,CAAC,CAAE,QAAAj+D,EAAS,YAAA89D,EAAa,OAAAI,EAAQ,SAAAC,KAAe,CAC9D,KAAM,CAACC,EAAWC,CAAY,EAAIthG,EAAAA,SAAS,EAAK,EAC1C,CAACuhG,EAAYC,CAAa,EAAIxhG,EAAAA,SAASijC,EAAQ,IAAI,EACnDw+D,EAAex+D,EAAQ,WAAa89D,EAAY,IAChDt+E,EAAWC,GAAY,EACvB,CAAE,WAAA5iB,CAAW,EAAIO,GAAS,EAE1BqhG,EAAqBC,GACxBvhG,EAAAA,IAAA,MAAA,CAAI,UAAW,QAAQqhG,EAAe,UAAY,EAAE,iBACnD,SAAA78F,EAAA,KAAC,SAAA,CACC,QAAS,IAAM6d,EAAS,wBAAwBk/E,EAAY,SAAS,EAAE,EACvE,UAAW,iFACTF,EACI3hG,EAAa,qBAAuB,kBACpCA,EAAa,kBAAoB,iBACvC,GAEA,SAAA,CAAAM,EAAA,IAAC,MAAA,CACC,IAAKuhG,EAAY,MACjB,IAAKA,EAAY,KACjB,UAAU,0BAAA,CACZ,SACC,MAAI,CAAA,UAAW,OAAO7hG,EAAa,cAAgB,UAAU,aAC5D,SAAA,CAACM,EAAAA,IAAA,KAAA,CAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GACzE,WAAY,IACf,CAAA,EACAM,EAAAA,IAAC,KAAE,UAAW,WAAWN,EAAa,gBAAkB,eAAe,QACpE,SAAA6hG,EAAY,WACf,CAAA,EACA/8F,EAAAA,KAAC,IAAE,CAAA,UAAU,kCAAkC,SAAA,CAAA,IAC3C+8F,EAAY,MAAM,QAAQ,CAAC,CAAA,CAC/B,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,EAEJ,EAGIC,EAAa,IAAM,CAChBT,EAAAl+D,EAAQ,GAAIs+D,CAAU,EAC7BD,EAAa,EAAK,CACpB,EAEMO,EAAiBj6F,GAAM,CACvBA,EAAE,MAAQ,SAAW,CAACA,EAAE,WAC1BA,EAAE,eAAe,EACNg6F,EAAA,GAETh6F,EAAE,MAAQ,WACZ05F,EAAa,EAAK,EAClBE,EAAcv+D,EAAQ,IAAI,EAE9B,EAEA,aACG,MAAI,CAAA,UAAW,QAAQw+D,EAAe,aAAe,EAAE,GACtD,SAAArhG,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAE5B,SAAAtO,EAAAA,IAAC,OAAI,UAAU,8BACZ,WACEwE,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAxE,EAAA,IAAC,WAAA,CACC,MAAOmhG,EACP,SAAW35F,GAAM45F,EAAc55F,EAAE,OAAO,KAAK,EAC7C,UAAWi6F,EACX,UAAW,8IACT/hG,EACI,4CACA,+BACN,GACA,UAAS,EAAA,CACX,EACA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,QAASg9F,EACT,UAAW,8BACT9hG,EAAa,uBAAyB,kBACxC,0DAEA,SAAA,CAACM,EAAAA,IAAAs5B,GAAA,CAAQ,UAAU,SAAU,CAAA,EAC5Bt5B,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAI,MAAA,CAAA,CAAA,CAAA,CAChC,EACAwE,EAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACb08F,EAAa,EAAK,EAClBE,EAAcv+D,EAAQ,IAAI,CAC5B,EACA,UAAW,eACTnjC,EACI,kCACA,iCACN,0DAEA,SAAA,CAACM,EAAAA,IAAAkgB,GAAA,CAAI,UAAU,SAAU,CAAA,EACxBlgB,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAM,QAAA,CAAA,CAAA,CAAA,CAAA,CAClC,CACF,CAAA,CAAA,CAAA,CACF,EAGEA,EAAA,IAAA+S,WAAA,CAAA,SAAA/S,EAAA,IAAC,MAAA,CACC,UAAW,qCAAqCqhG,EAAe,UAAY,EAAE,GAE7E,SAAA78F,EAAA,KAAC,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAA68F,GAAgB,CAACx+D,EAAQ,aACvBr+B,EAAAA,KAAA,MAAA,CAAI,UAAU,+EACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMkhG,EAAa,EAAI,EAChC,UAAW,SACTxhG,EACI,0DACA,qDACN,kCAEA,SAAAM,EAAAA,IAAC0hG,GAAS,CAAA,UAAU,SAAU,CAAA,CAAA,CAChC,EACA1hG,EAAA,IAAC,SAAA,CACC,QAAS,IAAMghG,EAASn+D,EAAQ,EAAE,EAClC,UAAW,SACTnjC,EACI,uDACA,kDACN,kCAEA,SAAAM,EAAAA,IAACmiB,GAAQ,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC/B,EACF,SAED,MACC,CAAA,SAAA,CAAAniB,EAAA,IAAC,MAAA,CACC,UAAW,2BACTqhG,EACI,0BACA3hG,EACE,4BACA,2BACR,GAEA,SAACM,EAAAA,IAAA,IAAA,CAAE,UAAU,4CACV,WAAQ,IACX,CAAA,CAAA,CACF,EACC6iC,EAAQ,QACP7iC,EAAAA,IAAC,MAAI,CAAA,UAAW,WAAWN,EAAa,gBAAkB,eAAe,qBAAsB,SAE/F,QAAA,CAAA,EAEDmjC,EAAQ,aAAey+D,EAAkBz+D,EAAQ,WAAW,EAC7D7iC,EAAAA,IAAC0gG,GAAc,CAAA,QAAA79D,EAAkB,YAAA89D,CAA0B,CAAA,CAAA,CAC7D,CAAA,CAAA,CACF,CAAA,CAAA,GAEJ,CAEJ,CAAA,CAAA,CAAA,EAEJ,CAEJ,EAEM8B,GAAc,IAAM,CAClB,KAAA,CAAE,eAAAtQ,CAAe,EAAIv3D,GAAU,EAC/BvY,EAAWC,GAAY,EACvB,CAAE,KAAAnhB,CAAK,EAAImC,GAAa,EACxB,CAACs+F,EAAeC,CAAgB,EAAIjiG,EAAAA,SAAS,CAAA,CAAE,EAC/C,CAACkiG,EAAqBC,CAAsB,EAAIniG,EAAAA,SAAS,IAAI,EAC7D,CAACghC,EAAU6D,CAAW,EAAI7kC,EAAAA,SAAS,CAAA,CAAE,EACrC,CAAC8kC,EAAYC,CAAa,EAAI/kC,EAAAA,SAAS,EAAE,EACzColC,EAAiBnN,SAAO,IAAI,EAC5B,CAACx2B,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAI,EACrC,CAAE,WAAAF,CAAW,EAAIO,GAAS,EAEhCH,EAAAA,UAAU,IAAM,CACd,GAAI,CAACqB,EAAM,OAGX,MAAMmB,EAAIC,GACRC,GAAW9B,GAAI,eAAe,EAC9B+B,GAAM,eAAgB,iBAAkBtB,EAAK,QAAQ,EACrD0F,GAAQ,YAAa,MAAM,CAC7B,EAEMlF,EAAc4U,GAAWjU,EAAIkU,GAAa,CAC9C,MAAMwrF,EAAoBxrF,EAAS,KAAK,IAAIzU,IAAQ,CAClD,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EACF8/F,EAAiBG,CAAiB,EAClC1gG,EAAW,EAAK,CAAA,CACjB,EAED,MAAO,IAAMK,EAAY,CAAA,EACxB,CAACR,CAAI,CAAC,EAETrB,EAAAA,UAAU,IAAM,CACd,GAAI,CAACqyF,EAAgB,OAGrB,MAAM7vF,EAAIC,GACRC,GAAW9B,GAAI,UAAU,EACzB+B,GAAM,iBAAkB,KAAM0vF,CAAc,EAC5CtrF,GAAQ,YAAa,KAAK,CAC5B,EAEMlF,EAAc4U,GAAWjU,EAAIkU,GAAa,CAC9C,MAAMyrF,EAAezrF,EAAS,KAAK,IAAIzU,IAAQ,CAC7C,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EAIF,GAHA0iC,EAAYw9D,CAAY,EAGpBH,EAAqB,CAEjB,MAAAprB,EAAiBlgE,EAAS,KAAK,OAAOzU,GAC1CA,EAAI,KAAK,EAAE,WAAaZ,EAAK,MAC5B,CAACY,EAAI,KAAO,EAAA,MAAQ,CAACA,EAAI,KAAO,EAAA,UACnC,EAGI,GAAA20E,EAAe,OAAS,EAAG,CACvB,MAAAlmD,EAAQ83D,GAAW5nF,EAAE,EACZg2E,EAAA,QAAQ30E,GAAO,CACtByuB,EAAA,OAAOzuB,EAAI,IAAK,CACpB,UAAW,GACX,KAAM,EAAA,CACP,CAAA,CACF,EACDyuB,EAAM,OAAO,CAAA,CAIf1f,GAAU/O,GAAIrB,GAAI,gBAAiByxF,CAAc,EAAG,CAClD,CAAC,eAAehxF,EAAK,QAAQ,EAAE,EAAG,CAAA,CACnC,CAAA,CACH,CACD,EAED,MAAO,IAAMQ,EAAY,CAAA,EACxB,CAACwwF,EAAgB2P,CAAmB,CAAC,EAExChiG,EAAAA,UAAU,IAAM,CAEd,MAAMoiG,EAAeN,EAAc,KAAUziB,GAAAA,EAAE,KAAOgT,CAAc,EACpE4P,EAAuBG,CAAY,CAAA,EAClC,CAAC/P,EAAgByP,CAAa,CAAC,EAElC9hG,EAAAA,UAAU,IAAM,CAEdklC,EAAe,SAAS,eAAe,CAAE,SAAU,SAAU,CAAA,EAC5D,CAACpE,CAAQ,CAAC,EAEP,MAAAuhE,EAAoB,MAAO36F,GAAM,CAEjC,GADJA,EAAE,eAAe,EACb,CAACk9B,EAAW,OAAQ,OAElB,MAAA09D,EAAc19D,EAAW,KAAK,EACpCC,EAAc,EAAE,EAEZ,GAAA,CAEF,MAAMhvB,GAAOnT,GAAW9B,GAAI,UAAU,EAAG,CACvC,eAAAyxF,EACA,SAAUhxF,EAAK,IACf,KAAMihG,EACN,UAAWhsF,GAAgB,EAC3B,UAAW,GACX,KAAM,EAAA,CACP,EAGD,MAAMtF,GAAU/O,GAAIrB,GAAI,gBAAiByxF,CAAc,EAAG,CACxD,YAAaiQ,EACb,gBAAiBhsF,GAAgB,EACjC,CAAC,eAAe0rF,EAAoB,OAAO,EAAE,GAAIA,EAAoB,cAAcA,EAAoB,OAAO,GAAK,GAAK,EACxH,UAAW1rF,GAAgB,CAAA,CAC5B,QACMxT,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7CQ,EAAM,MAAM,wBAAwB,EACpCuhC,EAAcy9D,CAAW,CAAA,CAE7B,EAEMC,EAAoB,MAAO/gE,EAAWghE,IAAY,CAClD,GAACA,EAAQ,OAET,GAAA,CACF,MAAMxxF,GAAU/O,GAAIrB,GAAI,WAAY4gC,CAAS,EAAG,CAC9C,KAAMghE,EAAQ,KAAK,EACnB,OAAQ,GACR,SAAUlsF,GAAgB,CAAA,CAC3B,QACMxT,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7CQ,EAAM,MAAM,wBAAwB,CAAA,CAExC,EAEMm/F,EAAsB,MAAOjhE,GAAc,CAC3C,GAAA,CACF,MAAME,GAAUz/B,GAAIrB,GAAI,WAAY4gC,CAAS,CAAC,EAC9Cl+B,EAAM,QAAQ,iBAAiB,QACxBR,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9CQ,EAAM,MAAM,0BAA0B,CAAA,CAE1C,EAEA,OAAI/B,EAEArB,EAAAA,IAAC,MAAI,CAAA,UAAW,gBAAgBN,EAAa,cAAgB,YAAY,GACvE,SAACM,EAAAA,IAAA,MAAA,CAAI,UAAU,wBACb,eAAC,MAAI,CAAA,UAAW,GAAGN,EAAa,cAAgB,UAAU,wCACxD,SAACM,EAAA,IAAAygG,GAAA,CAAgB,CAAA,CACnB,CAAA,CACF,CAAA,EACF,EAKFzgG,EAAAA,IAAC,OAAI,UAAW,gBAAgBN,EAAa,cAAgB,8CAA8C,GACzG,SAAAM,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAW,GAAGN,EAAa,8BAAgC,0BAA0B,iEACxF,SAAA8E,EAAAA,KAAC,MAAI,CAAA,UAAU,oBAEb,SAAA,CAAAA,OAAC,OAAI,UAAW,uBAAuB9E,EAAa,kBAAoB,iBAAiB,GACvF,SAAA,CAAAM,EAAAA,IAAC,OAAI,UAAW,gBAAgBN,EAAa,kBAAoB,iBAAiB,GAChF,SAAAM,EAAA,IAAC,KAAG,CAAA,UAAW,yBAAyBN,EAAa,gBAAkB,eAAe,GAAI,4BAAiB,CAAA,EAC7G,QACC,MAAI,CAAA,UAAU,wGACZ,SAAckiG,EAAA,IAAKM,GAClBliG,EAAA,IAAC,SAAA,CAEC,QAAS,IAAMqiB,EAAS,6BAA6B6/E,EAAa,EAAE,EAAE,EACtE,UAAW,uBAAuBxiG,EAAa,uCAAyC,qCAAqC,mBAC3HwiG,EAAa,KAAO/P,EAAiBzyF,EAAa,iBAAmB,gBAAkB,EACzF,GAEA,SAAA8E,EAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACxE,EAAAA,IAAA,MAAA,CAAI,UAAU,iCACb,SAAAA,EAAAA,IAAC,MAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,aAC1EwiG,EAAa,cAAc/gG,EAAK,QAAQ,EAAI,EAAI,YAAc,EAChE,GACG,SAAa+gG,EAAA,SAAA,CAChB,CACF,CAAA,QACC,IAAE,CAAA,UAAW,oBACZA,EAAa,cAAc/gG,EAAK,QAAQ,EAAI,EACxCzB,EAAa,4BAA8B,4BAC3CA,EAAa,gBAAkB,eACrC,GACG,SAAAwiG,EAAa,aAAe,kBAC/B,EACCA,EAAa,cAAc/gG,EAAK,QAAQ,EAAI,GAC3CqD,EAAA,KAAC,MAAI,CAAA,UAAU,8BACZ,SAAA,CAAa09F,EAAA,YAAY/gG,EAAK,QAAQ,EAAE,QAAM+gG,EAAa,YAAY/gG,EAAK,QAAQ,IAAM,EAAI,UAAY,UAAA,CAC7G,CAAA,CAAA,EAEJ,EACC+gG,EAAa,cAAc/gG,EAAK,QAAQ,EAAI,GAC3CnB,EAAAA,IAAC,OAAK,CAAA,UAAU,2EACb,SAAAkiG,EAAa,YAAY/gG,EAAK,QAAQ,CACzC,CAAA,CAAA,CAEJ,CAAA,CAAA,EAjCK+gG,EAAa,EAAA,CAmCrB,CACH,CAAA,CAAA,EACF,EAGAliG,EAAA,IAAC,OAAI,UAAW,cAAcN,EAAa,cAAgB,UAAU,GAClE,SAAAoiG,EAGGt9F,EAAA,KAAAuO,EAAA,SAAA,CAAA,SAAA,CAAC/S,EAAA,IAAA,MAAA,CAAI,UAAW,gBAAgBN,EAAa,iCAAmC,6BAA6B,oBAC3G,SAAA8E,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMqiB,EAAS,EAAE,EAC1B,UAAW,mDAEX,SAAAriB,EAAAA,IAACi2E,GAAY,CAAA,UAAU,SAAU,CAAA,CAAA,CACnC,EACAj2E,EAAAA,IAAC,MAAG,UAAW,eAAeN,EAAa,gBAAkB,eAAe,GACzE,SAAAoiG,EAAoB,SACvB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGAt9F,EAAAA,KAAC,MAAI,CAAA,UAAU,yDACZ,SAAA,CAASo8B,EAAA,IAAKiC,GACb7iC,EAAA,IAAC8gG,GAAA,CAEC,QAAAj+D,EACA,YAAa1hC,EACb,OAAQkhG,EACR,SAAUE,CAAA,EAJL1/D,EAAQ,EAAA,CAMhB,EACD7iC,EAAAA,IAAC,MAAI,CAAA,IAAKglC,CAAgB,CAAA,CAAA,EAC5B,EAGChlC,EAAA,IAAA,OAAA,CAAK,SAAUmiG,EAAmB,UAAW,gBAAgBziG,EAAa,kBAAoB,iBAAiB,GAC9G,SAAC8E,EAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO0kC,EACP,SAAWl9B,GAAMm9B,EAAcn9B,EAAE,OAAO,KAAK,EAC7C,YAAY,oBACZ,UAAW,iIACT9H,EAAa,iEAAmE,+BAClF,EAAA,CACF,EACAM,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,oFAEV,SAAAA,EAAAA,IAACwiG,GAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC9B,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,EAEAh+F,EAAAA,KAAC,MAAI,CAAA,UAAU,iEACb,SAAA,CAACxE,EAAA,IAAA,MAAA,CAAI,UAAW,kBAAkBN,EAAa,gBAAkB,eAAe,GAC9E,SAACM,EAAAA,IAAAm3E,GAAA,CAAgB,UAAU,eAAgB,CAAA,EAC7C,QACC,IAAE,CAAA,UAAWz3E,EAAa,gBAAkB,gBAAiB,SAAwC,0CAAA,CAAA,CAAA,CAAA,CACxG,CAEJ,CAAA,CAAA,EACF,CAAA,CACF,CACF,CAAA,EACF,CAEJ,ECvhBMijF,GAAW,CAAC,CAAE,MAAA9nB,EAAO,MAAA96D,EAAO,KAAMuc,EAAM,MAAAsmE,EAAO,SAAAC,EAAU,eAAAC,CAAA,IAC7D9iF,EAAA,IAACsO,EAAO,IAAP,CACC,WAAY,CAAE,EAAG,EAAG,EACpB,UAAU,sDAEV,SAAA9J,EAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACxE,EAAA,IAAA,IAAA,CAAE,UAAU,2CAA4C,SAAM66D,EAAA,EAC9D76D,EAAA,IAAA,IAAA,CAAE,UAAU,uDAAwD,SAAMD,EAAA,EAC1E6iF,GACCp+E,EAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAACxE,EAAAA,IAAA+iF,GAAA,CAAa,UAAU,0BAA2B,CAAA,EACnDv+E,EAAAA,KAAC,OAAK,CAAA,UAAU,2BAA4B,SAAA,CAAAo+E,EAAM,mBAAA,CAAiB,CAAA,CAAA,EACrE,EAEDE,GACCt+E,EAAA,KAAC,IAAE,CAAA,UAAU,4BAA4B,SAAA,CAAA,YAAUs+E,CAAA,EAAe,EAEnED,GACC7iF,EAAA,IAAC,IAAE,CAAA,UAAU,gDAAiD,SAAS6iF,CAAA,CAAA,CAAA,EAE3E,EACA7iF,EAAAA,IAAC,OAAI,UAAU,gDACb,eAACsc,EAAK,CAAA,UAAU,wBAAyB,CAAA,CAC3C,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EAGIomF,GAAgB,IAAM,CAC1B,KAAM,CAACrhG,EAASC,CAAU,EAAI1B,EAAAA,SAAS,EAAK,EACtC,CAACwG,EAAQu8F,CAAS,EAAI/iG,EAAAA,SAAS,CAAA,CAAE,EACjC,CAACgjG,EAAgBC,CAAiB,EAAIjjG,EAAAA,SAAS,CAAA,CAAE,EACjD,CAAC0F,EAAeC,CAAgB,EAAI3F,EAAAA,SAAS,IAAI,EACjD,CAAC46E,EAAmBsoB,CAAoB,EAAIljG,EAAAA,SAAS,CAAA,CAAE,EACvD,CAACwF,EAAYC,CAAa,EAAIzF,EAAAA,SAAS,EAAE,EACzC,CAACgG,EAAaC,CAAc,EAAIjG,EAAAA,SAAS,CAAC,EACMA,EAAAA,SAAS,EAAI,EACnE,MAAMmjG,EAAgB,EAEtBjjG,EAAAA,UAAU,IAAM,CACEkjG,EAAA,EACIC,EAAA,CACtB,EAAG,EAAE,EAELnjG,EAAAA,UAAU,IAAM,CAOR,MAAAojG,EALW98F,EAAO,UACtB+D,EAAM,UAAU,YAAY,EAAE,SAAS/E,EAAW,YAAa,CAAA,GAC/D+E,EAAM,GAAG,cAAc,SAAS/E,EAAW,YAAa,CAAA,CAC1D,EAE8B,KAAK,CAACsE,EAAGC,IAAMA,EAAE,QAAQ,eAAiBD,EAAE,QAAQ,cAAc,EAChGm5F,EAAkBK,CAAY,EAC9Br9F,EAAe,CAAC,CAAA,EACf,CAACT,EAAYgB,CAAM,CAAC,EAEvB,MAAM48F,EAAkB,SAAY,CAC9B,GAAA,CAEI,MAAA/6F,EAAe1F,GAAMC,GAAW9B,GAAI,SAAS,EAAGmG,GAAQ,WAAW,CAAC,EAEpEwJ,GADkB,MAAM1N,GAAQsF,CAAY,GACd,KAAK,IAAWlG,GAAA,CAC5C,MAAAuG,EAAOvG,EAAI,KAAK,EAEhBmL,EAAU5E,EAAK,SAAW,CAAC,EAC7B,OAAA,OAAO4E,GAAY,SAEd,CACL,GAAInL,EAAI,GACR,GAAGuG,EACH,QAAS,CACP,KAAM4E,EAAQ,KAAK,EAAE,cAAc,MAAM,EAAG,CAAC,EAC7C,KAAMA,CAAA,CAEV,EACSA,EAAQ,KAEV,CACL,GAAInL,EAAI,GACR,GAAGuG,EACH,QAAS,CACP,GAAG4E,EACH,KAAMA,EAAQ,KAAK,OAAO,YAAY,CAAA,CAE1C,EAEK,CACL,GAAInL,EAAI,GACR,GAAGuG,CACL,CAAA,CACD,EAGK66F,EAAoB,MAAM,QAAQ,IAAI9yF,EAAY,IAAI,MAAO7G,GAAW,CACtE,MAAAkE,MAAU,KACV+2E,EAAoB,IAAI,KAAK/2E,EAAI,cAAeA,EAAI,SAAS,EAAG,CAAC,EACjEg3E,EAAoB,IAAI,KAAKh3E,EAAI,cAAeA,EAAI,SAAA,EAAa,EAAG,CAAC,EACrEi3E,EAAmB,IAAI,KAAKj3E,EAAI,cAAeA,EAAI,SAAS,EAAG,CAAC,EAGhE9G,EAAcrE,GAClBC,GAAW9B,GAAI,QAAQ,EACvB+B,GAAM,WAAY,KAAM+G,EAAO,EAAE,CACnC,EAEMmD,GADiB,MAAMhK,GAAQiE,CAAW,GAClB,KAAK,IAAY7E,IAAA,CAC7C,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CAAA,EACZ,EAGIoG,EAAmB5F,GACvBC,GAAW9B,GAAI,aAAa,EAC5B+B,GAAM,WAAY,KAAM+G,EAAO,EAAE,CACnC,EAEMF,GADsB,MAAM3G,GAAQwF,CAAgB,GAClB,KAAK,IAAWpG,GAAA,CAChD,MAAAuG,EAAOvG,EAAI,KAAK,EACf,MAAA,CACL,GAAIA,EAAI,GACR,GAAGuG,EACH,UAAWA,EAAK,YAAc,IAAI,KAAKA,EAAK,WAAW,EAAI,IAC7D,CAAA,CACD,EAGWgB,EAAA,KAAK,CAACI,EAAGC,IAAM,CACnB,MAAA8oC,EAAQ/oC,EAAE,WAAW,SAAA,GAAc,IAAI,KAAKA,EAAE,WAAa,CAAC,EAElE,OADcC,EAAE,WAAW,SAAA,GAAc,IAAI,KAAKA,EAAE,WAAa,CAAC,GACnD8oC,CAAA,CAChB,EAGD,MAAM+yC,EAAsBl8E,EAAY,OAAO,CAAC4mC,EAAKhnC,KAC/CA,EAAW,SAAW,YACpBgnC,EAAA,WAAahnC,EAAW,QAAU,EAC7BA,EAAW,SAAW,YAC3BgnC,EAAA,SAAWhnC,EAAW,QAAU,GAE/BgnC,GACN,CAAE,UAAW,EAAG,QAAS,EAAG,EAGzB00C,EAAkBj4E,EAAO,OAAgBtG,IAC3BA,EAAM,WAAW,SAAA,GAAc,IAAI,KAAKA,EAAM,WAAa,CAAC,IAC1Do+E,CACrB,EAEKI,EAAkBl4E,EAAO,OAAgBtG,GAAA,CACvC,MAAAuH,EAAYvH,EAAM,WAAW,SAAA,GAAc,IAAI,KAAKA,EAAM,WAAa,CAAC,EACvE,OAAAuH,GAAa82E,GAAqB92E,GAAa+2E,CAAA,CACvD,EAEKn8E,EAAcmE,EAAO,OAAgBtG,GAAAA,EAAM,SAAW,WAAW,EACjEo/E,EAAej9E,EAAY,OAAO,CAACI,EAAKvC,IAExCA,EAAM,SAAW,WACZuC,EAEFA,GAAOvC,EAAM,OAAS,GAC5B,CAAC,EAGEs/E,GAAiBF,EAGjBG,GAAaH,EAAeD,EAAoB,UAEhDE,GAAkB,IAAI,IAAIl9E,EAAY,IAAanC,GAAAA,EAAM,OAAO,CAAC,EAAE,KAGnE6+E,EAA4B,CAACC,EAASC,IACtCA,IAAa,EAAUD,EAAU,EAAI,IAAM,GACtCA,EAAUC,GAAYA,EAAY,IAGvCN,EAAmBF,EAAgB,OAAO,CAACh8E,EAAKvC,IAC7CA,EAAM,SAAW,YAAcA,EAAM,SAAW,YACnDuC,GAAOvC,EAAM,OAAS,GAAKuC,EAC9B,CAAC,EAEEm8E,EAAmBF,EAAgB,OAAO,CAACj8E,EAAKvC,IAC7CA,EAAM,SAAW,YAAcA,EAAM,SAAW,YACnDuC,GAAOvC,EAAM,OAAS,GAAKuC,EAC9B,CAAC,EAEG,MAAA,CACL,GAAGY,EACH,QAAS,CACP,eAAAm8E,GACA,eAAgBH,EAAoB,UACpC,mBAAoBA,EAAoB,QACxC,WAAAI,GACA,YAAaj5E,EAAO,OACpB,eAAgB+4E,GAChB,cAAe,WAAWR,EAA0BJ,EAAkBC,CAAgB,EAAE,QAAQ,CAAC,CAAC,EAClG,aAAc,WAAWG,EAA0BN,EAAgB,OAAQC,EAAgB,MAAM,EAAE,QAAQ,CAAC,CAAC,EAC7G,gBAAiB,WAAWK,EAC1B,IAAI,IAAIN,EAAgB,OAAav+E,EAAM,OAAO,CAAC,EAAE,KACrD,IAAI,IAAIw+E,EAAgB,OAAax+E,EAAM,OAAO,CAAC,EAAE,IAAA,EACrD,QAAQ,CAAC,CAAC,CACd,EACA,kBAAmBiD,EAAY,KAAK,CAACI,EAAGC,KACrCA,EAAE,aAAe,IAAMD,EAAE,aAAe,EAAA,EACzC,IAAmBR,IAAA,CACnB,GAAIA,EAAW,GACf,OAAQA,EAAW,QAAU,EAC7B,OAAQA,EAAW,OACnB,UAAWA,EAAW,YAAc,IAAI,KAAKA,EAAW,WAAW,EAAI,KACvE,QAASA,EAAW,QACpB,cAAeA,EAAW,aAAA,EAC1B,CACJ,CAAA,CACD,CAAC,EAEFy5F,EAAUQ,CAAiB,QACpBvgG,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAClDQ,EAAM,MAAM,4BAA4B,CAAA,QACxC,CACA9B,EAAW,EAAK,CAAA,CAEpB,EAEM2hG,EAAsB,SAAY,CAClC,GAAA,CACF,MAAM96F,EAAmB5F,GACvBC,GAAW9B,GAAI,aAAa,EAC5BmG,GAAQ,cAAe,MAAM,CAC/B,EAEMyC,GADsB,MAAM3G,GAAQwF,CAAgB,GAClB,KAAK,IAAYpG,IAAA,CACvD,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,EACZ,UAAWA,EAAI,KAAA,EAAO,YAAc,IAAI,KAAKA,EAAI,OAAO,WAAW,EAAI,IAAA,EACvE,EACF+gG,EAAqBx5F,CAAW,QACzB1G,EAAO,CACN,QAAA,MAAM,qCAAsCA,CAAK,EACzDQ,EAAM,MAAM,mCAAmC,CAAA,CAEnD,EAGMggG,EAAmBx9F,EAAcm9F,EACjCM,EAAoBD,EAAmBL,EACvCO,EAAgBV,EAAe,MAAMS,EAAmBD,CAAgB,EACxEnpE,EAAa,KAAK,KAAK2oE,EAAe,OAASG,CAAa,EAE5D5c,EAAYC,GAAe,CAC3BA,EAAa,GAAKA,GAAcnsD,GAClCp0B,EAAeugF,CAAU,CAE7B,EAEA,OAAI/kF,EACKrB,EAAA,IAAC,OAAI,SAAU,YAAA,CAAA,EAItBwE,EAAA,KAAC,MAAI,CAAA,UAAU,wBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,mDAAmD,SAAc,iBAAA,EAC/EwE,EAAAA,KAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAxE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,YAAY,mBACZ,MAAOoF,EACP,SAAWoC,GAAMnC,EAAcmC,EAAE,OAAO,KAAK,EAC7C,UAAU,gNAAA,CACZ,EACAxH,EAAAA,IAAC8sE,GAAS,CAAA,UAAU,0EAA2E,CAAA,CAAA,CACjG,CAAA,CAAA,EACF,QAGC,MAAI,CAAA,UAAU,kBACZ,SAAAw2B,EAAc,IACbn5F,GAAA3F,EAAA,KAAC,MAAA,CAEC,UAAU,wFAEV,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAxE,EAAA,IAAC,KAAG,CAAA,UAAU,sDAAuD,SAAAmK,EAAM,UAAU,EACrF3F,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,2CAA2C,SAAA,CAAA,aAAW2F,EAAM,EAAA,EAAG,EAC3EA,EAAM,SAAS,MACdnK,EAAA,IAAC,MAAA,CACC,IAAK,uBAAuBmK,EAAM,QAAQ,KAAK,YAAa,CAAA,OAC5D,IAAKA,EAAM,QAAQ,MAAQ,qBAC3B,UAAU,kDAAA,CAAA,CACZ,CAEJ,CAAA,CAAA,EACF,EACCnK,EAAA,IAAA,OAAA,CAAK,UAAW,kCACfmK,EAAM,qBAAuB,WACzB,uEACA,+DACN,GACG,SAAAA,EAAM,qBAAuB,WAAa,WAAa,YAC1D,CAAA,CAAA,EACF,EAEA3F,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAxE,EAAA,IAAC2iF,GAAA,CACC,MAAM,mBACN,MAAO,IAAIx4E,EAAM,QAAQ,eAAe,QAAQ,CAAC,CAAC,GAClD,KAAMmtE,GACN,SACE9yE,EAAA,KAAC,OAAK,CAAA,UAAU,0BACd,SAAA,CAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,eAAa2F,EAAM,QAAQ,eAAe,QAAQ,CAAC,CAAA,EAAE,EAC1DA,EAAM,QAAQ,mBAAqB,GACjC3F,EAAAA,KAAA,OAAA,CAAK,UAAU,kBAAkB,SAAA,CAAA,MAC5B2F,EAAM,QAAQ,mBAAmB,QAAQ,CAAC,EAAE,WAAA,CAClD,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ,EACAnK,EAAA,IAAC2iF,GAAA,CACC,MAAM,cACN,MAAO,IAAIx4E,EAAM,QAAQ,WAAW,QAAQ,CAAC,CAAC,GAC9C,KAAMmtE,GACN,MAAOntE,EAAM,QAAQ,aAAA,CACvB,EACAnK,EAAA,IAAC2iF,GAAA,CACC,MAAM,eACN,MAAOx4E,EAAM,QAAQ,YACrB,KAAM+sE,GACN,MAAO/sE,EAAM,QAAQ,YAAA,CACvB,EACAnK,EAAA,IAAC2iF,GAAA,CACC,MAAM,kBACN,MAAOx4E,EAAM,QAAQ,eACrB,KAAMstE,GACN,MAAOttE,EAAM,QAAQ,eAAA,CAAA,CACvB,EACF,EAGA3F,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,QAAUgD,GAAM,CACdA,EAAE,gBAAgB,EAClBjC,EAAiBD,IAAkB6E,EAAM,GAAK,KAAOA,EAAM,EAAE,CAC/D,EACA,UAAU,+IAEV,SAAA,CAAC3F,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAAwS,GAAA,CAAU,UAAU,SAAU,CAAA,EAC9BxS,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAkB,oBAAA,CAAA,CAAA,EAC1D,EACAA,EAAA,IAACqjB,GAAA,CACC,UAAW,6CACT/d,IAAkB6E,EAAM,GAAK,aAAe,EAC9C,EAAA,CAAA,CACF,CAAA,CACF,EAECnK,EAAA,IAAAinC,GAAA,CACE,SAAkB3hC,IAAA6E,EAAM,IACvBnK,EAAA,IAACsO,EAAO,IAAP,CACC,QAAS,CAAE,OAAQ,EAAG,QAAS,CAAE,EACjC,QAAS,CAAE,OAAQ,OAAQ,QAAS,CAAE,EACtC,KAAM,CAAE,OAAQ,EAAG,QAAS,CAAE,EAC9B,WAAY,CAAE,SAAU,EAAI,EAC5B,UAAU,kBAEV,eAAC,MAAI,CAAA,UAAU,kBACb,SAAC9J,EAAAA,KAAA,QAAA,CAAM,UAAU,SACf,SAAA,CAAAxE,MAAC,QACC,CAAA,SAAAwE,EAAAA,KAAC,KAAG,CAAA,UAAU,mGACZ,SAAA,CAACxE,EAAA,IAAA,KAAA,CAAG,UAAU,YAAY,SAAU,aAAA,EACnCA,EAAA,IAAA,KAAA,CAAG,UAAU,YAAY,SAAI,OAAA,EAC7BA,EAAA,IAAA,KAAA,CAAG,UAAU,YAAY,SAAM,SAAA,EAC/BA,EAAA,IAAA,KAAA,CAAG,UAAU,YAAY,SAAK,QAAA,EAC9BA,EAAA,IAAA,KAAA,CAAG,UAAU,YAAY,SAAO,UAAA,EAChCA,EAAA,IAAA,KAAA,CAAG,UAAU,YAAY,SAAc,iBAAA,EACvCA,EAAA,IAAA,KAAA,CAAG,UAAU,YAAY,SAAM,QAAA,CAAA,CAAA,CAAA,CAClC,CACF,CAAA,EACAwE,EAAAA,KAAC,QAAM,CAAA,UAAU,gDACd,SAAA,CAAA2F,EAAM,kBAAkB,IAAIjB,GAC1B1E,OAAA,KAAA,CAAuB,UAAU,qDAChC,SAAA,CAAAxE,EAAA,IAAC,KAAG,CAAA,UAAU,sDAAuD,SAAAmK,EAAM,UAAU,QACpF,KAAG,CAAA,UAAU,6CACX,SAAAjB,EAAW,WACTA,EAAW,WAAW,SAAS,GAAK,IAAI,KAAKA,EAAW,SAAS,GAAG,eAAe,QAAS,CAC3F,KAAM,UACN,MAAO,QACP,IAAK,UACL,KAAM,UACN,OAAQ,SAAA,CACT,EACC,mBAEN,CAAA,EACA1E,EAAAA,KAAC,KAAG,CAAA,UAAU,6CAA6C,SAAA,CAAA,IAAE0E,EAAW,OAAO,QAAQ,CAAC,CAAA,EAAE,QACzF,KAAG,CAAA,UAAU,YACZ,SAAC1E,EAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAA0E,EAAW,QAAU,OACpBlJ,EAAA,IAAC,MAAA,CACC,IAAI,YACJ,IAAI,OACJ,UAAU,wBAAA,CAAA,EAGZA,EAAA,IAAC,MAAA,CACC,IAAI,YACJ,IAAI,OACJ,UAAU,wBAAA,CACZ,QAED,OAAK,CAAA,UAAU,mCACb,SAAAkJ,EAAW,OAAS,MACvB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACC,KAAG,CAAA,UAAU,YACZ,SAAC1E,EAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAA0E,EAAW,UAAY,UACtBlJ,EAAA,IAAC,MAAA,CACC,IAAI,eACJ,IAAI,UACJ,UAAU,wBAAA,CAAA,EAEVkJ,EAAW,UAAY,WACzBlJ,EAAA,IAAC,MAAA,CACC,IAAI,qBACJ,IAAI,WACJ,UAAU,wBAAA,CAAA,EAEV,KACHA,EAAA,IAAA,OAAA,CAAK,UAAU,mCACb,WAAW,OACd,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACC,KAAG,CAAA,UAAU,YACZ,SAACwE,EAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACxE,EAAAA,IAAAogB,GAAA,CAAS,UAAU,wBAAyB,CAAA,EAC7C5b,EAAAA,KAAC,OAAK,CAAA,UAAU,qDACb,SAAA,CAAW0E,EAAA,cAAc,MAAM,EAAG,CAAC,EAAE,MAAIA,EAAW,cAAc,MAAM,EAAE,CAAA,CAC7E,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACC,KAAG,CAAA,UAAU,YACZ,SAAAlJ,MAAC,QAAK,UAAW,kCACfkJ,EAAW,SAAW,YAClB,uEACA,0EACN,GACG,SAAAA,EAAW,OACd,CACF,CAAA,CAAA,GAvEOA,EAAW,EAwEpB,CACD,EACAiB,EAAM,kBAAkB,SAAW,GACjCnK,EAAAA,IAAA,KAAA,CACC,SAACA,EAAAA,IAAA,KAAA,CAAG,QAAQ,IAAI,UAAU,yDAAyD,iCAEnF,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CAGN,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EAjMKmK,EAAM,EAmMd,CAAA,EACH,EAGC8vB,EAAa,GACXz1B,OAAA,MAAA,CAAI,UAAU,8CACb,SAAA,CAAAxE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMmmF,EAASvgF,EAAc,CAAC,EACvC,SAAUA,IAAgB,EAC1B,UAAW,kBACTA,IAAgB,EACZ,sDACA,2EACN,GAEA,SAAA5F,EAAAA,IAACujG,GAAc,CAAA,UAAU,SAAU,CAAA,CAAA,CACrC,EAEC,MAAM,KAAK,CAAE,OAAQtpE,CAAW,EAAG,CAAC1rB,EAAGC,IAAMA,EAAI,CAAC,EAAE,IACnDg1F,GAAAxjG,EAAA,IAAC,SAAA,CAEC,QAAS,IAAMmmF,EAASqd,CAAM,EAC9B,UAAW,0CACT59F,IAAgB49F,EACZ,0BACA,2EACN,GAEC,SAAAA,CAAA,EARIA,CAAA,CAUR,EAEDxjG,EAAA,IAAC,SAAA,CACC,QAAS,IAAMmmF,EAASvgF,EAAc,CAAC,EACvC,SAAUA,IAAgBq0B,EAC1B,UAAW,kBACTr0B,IAAgBq0B,EACZ,sDACA,2EACN,GAEA,SAAAj6B,EAAAA,IAAC81F,GAAe,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CACtC,CACF,CAAA,CAAA,EAEJ,CAEJ,ECleA,SAAS2N,GAAW,CAAE,SAAAhkG,GAAY,CAChC,KAAM,CAAE,QAAA8B,EAAS,QAAAF,CAAQ,EAAIiC,GAAa,EACpCE,EAAWC,GAAY,EAE7B,OAAIpC,EACKrB,EAAA,IAAC,OAAI,SAAU,YAAA,CAAA,EAGnBuB,EAIE9B,EAHEO,MAACqK,GAAS,CAAA,GAAG,eAAe,MAAO,CAAE,KAAM7G,CAAA,EAAY,QAAO,EAAC,CAAA,CAI1E,CAGA,MAAMkgG,GAAc,IAAM,CAClB,KAAA,CAAE,KAAAviG,CAAK,EAAImC,GAAa,EAC9B,OAAOnC,GAAM,SAAWnB,MAACyiG,GAAY,CAAA,CAAA,QAAMd,GAAM,EAAA,CACnD,EAEap1E,GAASo3E,GAAoB,CAExC,CACE,KAAM,IACN,cAAUhyB,GAAI,EAAA,EACd,SAAU,CACR,CACE,MAAO,GACP,cAAUn9C,GAAU,CAAA,CAAA,CACtB,EACA,CACE,KAAM,eACN,cAAU+C,GAAgB,CAAA,CAAA,CAC5B,EACA,CACE,KAAM,sBACN,cAAU+T,GAAe,CAAA,CAAA,CAC3B,EACA,CACE,KAAM,WACN,cAAU8D,GAAY,CAAA,CAAA,CACxB,EACA,CACE,KAAM,WACN,cAAUuC,GAAY,CAAA,CAAA,CACxB,EACA,CACE,KAAM,WACN,cAAUyrB,GAAa,CAAA,CAAA,CACzB,EACA,CACE,KAAM,UACN,cAAUsE,GAAW,CAAA,CAAA,CACvB,EACA,CACE,KAAM,eACN,cAAU+C,GAAY,CAAA,CAAA,CACxB,EACA,CACE,KAAM,eACN,cAAUsJ,GAAY,CAAA,CAAA,CAAA,CACxB,CAEJ,EAEA,CACE,KAAM,SACN,QAAU/tE,EAAA,IAAAqK,GAAA,CAAS,GAAG,qBAAqB,QAAO,EAAC,CAAA,CACrD,EAEA,CACE,KAAM,UACN,QAAUrK,EAAA,IAAAqK,GAAA,CAAS,GAAG,sBAAsB,QAAO,EAAC,CAAA,CACtD,EAEA,CACE,KAAM,eACN,cAAUgsE,GAAiB,EAAA,EAC3B,SAAU,CACR,CACE,KAAM,GACN,cAAUuV,GAAO,CAAA,CAAA,CACnB,EACA,CACE,KAAM,cACN,cAAU0E,GAAe,CAAA,CAAA,CAC3B,EACA,CACE,KAAM,QACN,cAAU1d,GAAM,CAAA,CAAA,CAClB,EACA,CACE,KAAM,SACN,cAAUW,GAAO,CAAA,CAAA,CACnB,EACA,CACE,KAAM,gBACN,cAAUe,GAAa,CAAA,CAAA,CACzB,EACA,CACE,KAAM,OACN,QACEt0E,EAAA,IAACo2E,GACC,CAAA,SAAAp2E,MAAC6yF,KAAK,CACR,CAAA,CAEJ,EACA,CACE,KAAM,WACN,QACE7yF,EAAA,IAACo2E,GACC,CAAA,SAAAp2E,MAACk2F,KAAS,CACZ,CAAA,CAEJ,EACA,CACE,KAAM,SACN,QACEl2F,EAAA,IAACo2E,GACC,CAAA,SAAAp2E,MAAC80F,KAAO,CACV,CAAA,CAEJ,EACA,CACE,KAAM,YACN,QACG90F,EAAAA,IAAAo2E,GAAA,CAAe,WAAU,GACxB,SAAAp2E,EAAA,IAACw4E,KAAgB,CACnB,CAAA,CAEJ,EACA,CACE,KAAM,WACN,QACGx4E,EAAAA,IAAAo2E,GAAA,CAAe,WAAU,GACxB,SAAAp2E,EAAA,IAAC+/E,KAAS,CACZ,CAAA,CAEJ,EACA,CACE,KAAM,cACN,QACG//E,EAAAA,IAAAo2E,GAAA,CAAe,WAAU,GACxB,SAAAp2E,EAAA,IAAC68E,KAAW,CACd,CAAA,CAEJ,EACA,CACE,KAAM,mBACN,QACG78E,EAAAA,IAAAo2E,GAAA,CAAe,WAAU,GACxB,SAAAp2E,EAAA,IAACghF,KAAY,CACf,CAAA,CAEJ,EACA,CACE,KAAM,QACN,QACGhhF,EAAAA,IAAAo2E,GAAA,CAAe,WAAU,GACxB,SAAAp2E,EAAA,IAAC4jG,KAAW,CACd,CAAA,CAEJ,EACA,CACE,KAAM,kBACN,QACG5jG,EAAAA,IAAAo2E,GAAA,CAAe,WAAU,GACxB,SAAAp2E,EAAA,IAACwnF,KAAe,CAClB,CAAA,CAEJ,EACA,CACE,KAAM,aACN,QACExnF,EAAA,IAACo2E,GACC,CAAA,SAAAp2E,MAAC4+F,KAAQ,CACX,CAAA,CAEJ,EACA,CACE,KAAM,UACN,QACG5+F,EAAAA,IAAAo2E,GAAA,CAAe,WAAU,GACxB,SAAAp2E,EAAA,IAAC+9F,KAAc,CACjB,CAAA,CAEJ,EACA,CACE,KAAM,WACN,QACE/9F,EAAA,IAACo2E,GACC,CAAA,SAAAp2E,MAAC6oF,KAAS,CACZ,CAAA,CAEJ,EACA,CACE,KAAM,QACN,cAAUqW,GAAmB,CAAA,CAAA,CAC/B,EACA,CACE,KAAM,kBACN,cAAUS,GAAe,CAAA,CAAA,CAC3B,EACA,CACE,KAAM,iBACN,cAAUE,GAAc,CAAA,CAAA,CAC1B,EACA,CACE,KAAM,QACN,QACE7/F,EAAA,IAACo2E,GACC,CAAA,SAAAp2E,MAAC0jG,KAAY,CACf,CAAA,CAEJ,EACA,CACE,KAAM,wBACN,QACE1jG,EAAA,IAACo2E,GACC,CAAA,SAAAp2E,MAAC0jG,KAAY,CACf,CAAA,CAEJ,EACA,CACE,KAAM,eACN,QACG1jG,EAAAA,IAAAo2E,GAAA,CAAe,WAAU,GACxB,SAAAp2E,EAAA,IAACyiG,KAAY,CACf,CAAA,CAEJ,EACA,CACE,KAAM,+BACN,QACGziG,EAAAA,IAAAo2E,GAAA,CAAe,WAAU,GACxB,SAAAp2E,EAAA,IAACyiG,KAAY,CACf,CAAA,CAAA,CAEJ,CAEJ,EAEA,CACE,KAAM,SACN,QAASziG,EAAAA,IAACyjG,GAAW,CAAA,SAAAzjG,EAAAA,IAACuD,IAAY,CAAA,EAAE,EACpC,SAAU,CACR,CACE,MAAO,GACP,QAASvD,EAAA,IAACyjG,GAAW,CAAA,SAAAzjG,MAAC+E,KAAe,CAAE,CAAA,CACzC,EACA,CACE,KAAM,cACN,QAAS/E,EAAA,IAACyjG,GAAW,CAAA,SAAAzjG,MAACk4F,KAAiB,CAAE,CAAA,CAC3C,EACA,CACE,KAAM,qBACN,QAASl4F,EAAA,IAACyjG,GAAW,CAAA,SAAAzjG,MAAC0O,KAAkB,CAAE,CAAA,CAC5C,EACA,CACE,KAAM,UACN,QAAS1O,EAAA,IAACyjG,GAAW,CAAA,SAAAzjG,MAACg7F,KAAa,CAAE,CAAA,CACvC,EACA,CACE,KAAM,QACN,QAASh7F,EAAA,IAACyjG,GAAW,CAAA,SAAAzjG,MAACmM,KAAW,CAAE,CAAA,CACrC,EACA,CACE,KAAM,WACN,QAASnM,EAAA,IAACyjG,GAAW,CAAA,SAAAzjG,MAACs6F,KAAc,CAAE,CAAA,CACxC,EACA,CACE,KAAM,iBACN,cAAUoI,GAAc,CAAA,CAAA,CAAA,CAC1B,CACF,CAEJ,CAAC,ECzTI,OAAO,WACV,OAAO,SAAW,CAChB,WAAY,GACZ,QAAS,IAAM,QAAQ,OAAO,IAAI,MAAM,yEAAyE,CAAC,EAClH,GAAI,CAACmB,EAAWvtF,IAEP,IAAM,CAAC,EAEhB,eAAgB,IAAM,CAAC,EACvB,2BAA4B,GAC5B,QAAS,KACT,eAAgB,KAChB,gBAAiB,KACjB,YAAa,IAAM,GACnB,OAAQ,IAAM,QAAQ,OAAO,IAAI,MAAM,yEAAyE,CAAC,EACjH,UAAW,IAAM,QAAQ,OAAO,IAAI,MAAM,wBAAwB,CAAC,EACnE,KAAM,IAAM,QAAQ,OAAO,IAAI,MAAM,wBAAwB,CAAC,EAC9D,YAAa,IAAM,CAAC,EACpB,mBAAoB,IAAM,CAAC,EAC3B,UAAW,CAAC,EACZ,UAAW,EACb,GAGF,SAASwtF,IAAO,CACd,OACG9jG,EAAA,IAAAqyE,GAAA,CAAY,OAAQC,GACnB,SAACtyE,EAAAA,IAAAR,GAAA,CACC,SAACQ,EAAA,IAAAkB,GAAA,CACC,SAAClB,EAAAA,IAAA+jG,GAAA,CAAe,OAAAx3E,GAAgB,CAAA,CAClC,CACF,CAAA,EACF,CAEJ,CAEAy3E,GAAS,WAAW,SAAS,eAAe,MAAM,CAAC,EAAE,aAClDpgG,GAAM,WAAN,CACC,SAAA5D,MAAC8jG,KAAK,CACR,CAAA,CACF"}